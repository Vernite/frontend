import{CSSIcon}from"../../../base/common/codicons.js";import{Emitter}from"../../../base/common/event.js";import{Disposable,toDisposable}from"../../../base/common/lifecycle.js";import{createDecorator}from"../../instantiation/common/instantiation.js";import*as platform from"../../registry/common/platform.js";import{ColorScheme}from"./theme.js";export const IThemeService=createDecorator("themeService");export var ThemeColor;!function(ThemeColor){ThemeColor.isThemeColor=function isThemeColor(obj){return obj&&"object"==typeof obj&&"string"==typeof obj.id}}(ThemeColor||(ThemeColor={}));export function themeColorFromId(id){return{id}}export var ThemeIcon;!function(ThemeIcon){ThemeIcon.isThemeIcon=function isThemeIcon(obj){return obj&&"object"==typeof obj&&"string"==typeof obj.id&&(void 0===obj.color||ThemeColor.isThemeColor(obj.color))};const _regexFromString=new RegExp(`^\\$\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\)$`);ThemeIcon.fromString=function fromString(str){const match=_regexFromString.exec(str);if(!match)return;const[,name]=match;return{id:name}},ThemeIcon.fromId=function fromId(id){return{id}},ThemeIcon.modify=function modify(icon,modifier){let id=icon.id;const tildeIndex=id.lastIndexOf("~");return-1!==tildeIndex&&(id=id.substring(0,tildeIndex)),modifier&&(id=`${id}~${modifier}`),{id}},ThemeIcon.getModifier=function getModifier(icon){const tildeIndex=icon.id.lastIndexOf("~");if(-1!==tildeIndex)return icon.id.substring(tildeIndex+1)},ThemeIcon.isEqual=function isEqual(ti1,ti2){var _a,_b;return ti1.id===ti2.id&&(null===(_a=ti1.color)||void 0===_a?void 0:_a.id)===(null===(_b=ti2.color)||void 0===_b?void 0:_b.id)},ThemeIcon.asThemeIcon=function asThemeIcon(codicon,color){return{id:codicon.id,color:color?themeColorFromId(color):void 0}},ThemeIcon.asClassNameArray=CSSIcon.asClassNameArray,ThemeIcon.asClassName=CSSIcon.asClassName,ThemeIcon.asCSSSelector=CSSIcon.asCSSSelector}(ThemeIcon||(ThemeIcon={}));export function getThemeTypeSelector(type){switch(type){case ColorScheme.DARK:return"vs-dark";case ColorScheme.HIGH_CONTRAST_DARK:return"hc-black";case ColorScheme.HIGH_CONTRAST_LIGHT:return"hc-light";default:return"vs"}}export const Extensions={ThemingContribution:"base.contributions.theming"};class ThemingRegistry{constructor(){this.themingParticipants=[],this.themingParticipants=[],this.onThemingParticipantAddedEmitter=new Emitter}onColorThemeChange(participant){return this.themingParticipants.push(participant),this.onThemingParticipantAddedEmitter.fire(participant),toDisposable((()=>{const idx=this.themingParticipants.indexOf(participant);this.themingParticipants.splice(idx,1)}))}getThemingParticipants(){return this.themingParticipants}}const themingRegistry=new ThemingRegistry;platform.Registry.add(Extensions.ThemingContribution,themingRegistry);export function registerThemingParticipant(participant){return themingRegistry.onColorThemeChange(participant)}export class Themable extends Disposable{constructor(themeService){super(),this.themeService=themeService,this.theme=themeService.getColorTheme(),this._register(this.themeService.onDidColorThemeChange((theme=>this.onThemeChange(theme))))}onThemeChange(theme){this.theme=theme,this.updateStyles()}updateStyles(){}}