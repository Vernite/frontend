import{isChrome,isEdge,isFirefox,isLinux,isMacintosh,isSafari,isWeb,isWindows}from"../../../base/common/platform.js";import{isFalsyOrWhitespace}from"../../../base/common/strings.js";import{createDecorator}from"../../instantiation/common/instantiation.js";const CONSTANT_VALUES=new Map;CONSTANT_VALUES.set("false",!1),CONSTANT_VALUES.set("true",!0),CONSTANT_VALUES.set("isMac",isMacintosh),CONSTANT_VALUES.set("isLinux",isLinux),CONSTANT_VALUES.set("isWindows",isWindows),CONSTANT_VALUES.set("isWeb",isWeb),CONSTANT_VALUES.set("isMacNative",isMacintosh&&!isWeb),CONSTANT_VALUES.set("isEdge",isEdge),CONSTANT_VALUES.set("isFirefox",isFirefox),CONSTANT_VALUES.set("isChrome",isChrome),CONSTANT_VALUES.set("isSafari",isSafari);const hasOwnProperty=Object.prototype.hasOwnProperty;export class ContextKeyExpr{static has(key){return ContextKeyDefinedExpr.create(key)}static equals(key,value){return ContextKeyEqualsExpr.create(key,value)}static regex(key,value){return ContextKeyRegexExpr.create(key,value)}static not(key){return ContextKeyNotExpr.create(key)}static and(...expr){return ContextKeyAndExpr.create(expr,null)}static or(...expr){return ContextKeyOrExpr.create(expr,null,!0)}static deserialize(serialized,strict=!1){if(serialized)return this._deserializeOrExpression(serialized,strict)}static _deserializeOrExpression(serialized,strict){const pieces=serialized.split("||");return ContextKeyOrExpr.create(pieces.map((p=>this._deserializeAndExpression(p,strict))),null,!0)}static _deserializeAndExpression(serialized,strict){const pieces=serialized.split("&&");return ContextKeyAndExpr.create(pieces.map((p=>this._deserializeOne(p,strict))),null)}static _deserializeOne(serializedOne,strict){if((serializedOne=serializedOne.trim()).indexOf("!=")>=0){const pieces=serializedOne.split("!=");return ContextKeyNotEqualsExpr.create(pieces[0].trim(),this._deserializeValue(pieces[1],strict))}if(serializedOne.indexOf("==")>=0){const pieces=serializedOne.split("==");return ContextKeyEqualsExpr.create(pieces[0].trim(),this._deserializeValue(pieces[1],strict))}if(serializedOne.indexOf("=~")>=0){const pieces=serializedOne.split("=~");return ContextKeyRegexExpr.create(pieces[0].trim(),this._deserializeRegexValue(pieces[1],strict))}if(serializedOne.indexOf(" not in ")>=0){const pieces=serializedOne.split(" not in ");return ContextKeyNotInExpr.create(pieces[0].trim(),pieces[1].trim())}if(serializedOne.indexOf(" in ")>=0){const pieces=serializedOne.split(" in ");return ContextKeyInExpr.create(pieces[0].trim(),pieces[1].trim())}if(/^[^<=>]+>=[^<=>]+$/.test(serializedOne)){const pieces=serializedOne.split(">=");return ContextKeyGreaterEqualsExpr.create(pieces[0].trim(),pieces[1].trim())}if(/^[^<=>]+>[^<=>]+$/.test(serializedOne)){const pieces=serializedOne.split(">");return ContextKeyGreaterExpr.create(pieces[0].trim(),pieces[1].trim())}if(/^[^<=>]+<=[^<=>]+$/.test(serializedOne)){const pieces=serializedOne.split("<=");return ContextKeySmallerEqualsExpr.create(pieces[0].trim(),pieces[1].trim())}if(/^[^<=>]+<[^<=>]+$/.test(serializedOne)){const pieces=serializedOne.split("<");return ContextKeySmallerExpr.create(pieces[0].trim(),pieces[1].trim())}return/^\!\s*/.test(serializedOne)?ContextKeyNotExpr.create(serializedOne.substr(1).trim()):ContextKeyDefinedExpr.create(serializedOne)}static _deserializeValue(serializedValue,strict){if("true"===(serializedValue=serializedValue.trim()))return!0;if("false"===serializedValue)return!1;const m=/^'([^']*)'$/.exec(serializedValue);return m?m[1].trim():serializedValue}static _deserializeRegexValue(serializedValue,strict){if(isFalsyOrWhitespace(serializedValue)){if(strict)throw new Error("missing regexp-value for =~-expression");return console.warn("missing regexp-value for =~-expression"),null}const start=serializedValue.indexOf("/"),end=serializedValue.lastIndexOf("/");if(start===end||start<0){if(strict)throw new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);return console.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`),null}const value=serializedValue.slice(start+1,end),caseIgnoreFlag="i"===serializedValue[end+1]?"i":"";try{return new RegExp(value,caseIgnoreFlag)}catch(e){if(strict)throw new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);return console.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`),null}}}export function expressionsAreEqualWithConstantSubstitution(a,b){const aExpr=a?a.substituteConstants():void 0,bExpr=b?b.substituteConstants():void 0;return!aExpr&&!bExpr||!(!aExpr||!bExpr)&&aExpr.equals(bExpr)}function cmp(a,b){return a.cmp(b)}export class ContextKeyFalseExpr{constructor(){this.type=0}cmp(other){return this.type-other.type}equals(other){return other.type===this.type}substituteConstants(){return this}evaluate(context){return!1}serialize(){return"false"}keys(){return[]}negate(){return ContextKeyTrueExpr.INSTANCE}}ContextKeyFalseExpr.INSTANCE=new ContextKeyFalseExpr;export class ContextKeyTrueExpr{constructor(){this.type=1}cmp(other){return this.type-other.type}equals(other){return other.type===this.type}substituteConstants(){return this}evaluate(context){return!0}serialize(){return"true"}keys(){return[]}negate(){return ContextKeyFalseExpr.INSTANCE}}ContextKeyTrueExpr.INSTANCE=new ContextKeyTrueExpr;export class ContextKeyDefinedExpr{constructor(key,negated){this.key=key,this.negated=negated,this.type=2}static create(key,negated=null){const constantValue=CONSTANT_VALUES.get(key);return"boolean"==typeof constantValue?constantValue?ContextKeyTrueExpr.INSTANCE:ContextKeyFalseExpr.INSTANCE:new ContextKeyDefinedExpr(key,negated)}cmp(other){return other.type!==this.type?this.type-other.type:cmp1(this.key,other.key)}equals(other){return other.type===this.type&&this.key===other.key}substituteConstants(){const constantValue=CONSTANT_VALUES.get(this.key);return"boolean"==typeof constantValue?constantValue?ContextKeyTrueExpr.INSTANCE:ContextKeyFalseExpr.INSTANCE:this}evaluate(context){return!!context.getValue(this.key)}serialize(){return this.key}keys(){return[this.key]}negate(){return this.negated||(this.negated=ContextKeyNotExpr.create(this.key,this)),this.negated}}export class ContextKeyEqualsExpr{constructor(key,value,negated){this.key=key,this.value=value,this.negated=negated,this.type=4}static create(key,value,negated=null){if("boolean"==typeof value)return value?ContextKeyDefinedExpr.create(key,negated):ContextKeyNotExpr.create(key,negated);const constantValue=CONSTANT_VALUES.get(key);if("boolean"==typeof constantValue){return value===(constantValue?"true":"false")?ContextKeyTrueExpr.INSTANCE:ContextKeyFalseExpr.INSTANCE}return new ContextKeyEqualsExpr(key,value,negated)}cmp(other){return other.type!==this.type?this.type-other.type:cmp2(this.key,this.value,other.key,other.value)}equals(other){return other.type===this.type&&(this.key===other.key&&this.value===other.value)}substituteConstants(){const constantValue=CONSTANT_VALUES.get(this.key);if("boolean"==typeof constantValue){const trueValue=constantValue?"true":"false";return this.value===trueValue?ContextKeyTrueExpr.INSTANCE:ContextKeyFalseExpr.INSTANCE}return this}evaluate(context){return context.getValue(this.key)==this.value}serialize(){return`${this.key} == '${this.value}'`}keys(){return[this.key]}negate(){return this.negated||(this.negated=ContextKeyNotEqualsExpr.create(this.key,this.value,this)),this.negated}}export class ContextKeyInExpr{constructor(key,valueKey){this.key=key,this.valueKey=valueKey,this.type=10,this.negated=null}static create(key,valueKey){return new ContextKeyInExpr(key,valueKey)}cmp(other){return other.type!==this.type?this.type-other.type:cmp2(this.key,this.valueKey,other.key,other.valueKey)}equals(other){return other.type===this.type&&(this.key===other.key&&this.valueKey===other.valueKey)}substituteConstants(){return this}evaluate(context){const source=context.getValue(this.valueKey),item=context.getValue(this.key);return Array.isArray(source)?source.includes(item):"string"==typeof item&&"object"==typeof source&&null!==source&&hasOwnProperty.call(source,item)}serialize(){return`${this.key} in '${this.valueKey}'`}keys(){return[this.key,this.valueKey]}negate(){return this.negated||(this.negated=ContextKeyNotInExpr.create(this.key,this.valueKey)),this.negated}}export class ContextKeyNotInExpr{constructor(key,valueKey){this.key=key,this.valueKey=valueKey,this.type=11,this._negated=ContextKeyInExpr.create(key,valueKey)}static create(key,valueKey){return new ContextKeyNotInExpr(key,valueKey)}cmp(other){return other.type!==this.type?this.type-other.type:this._negated.cmp(other._negated)}equals(other){return other.type===this.type&&this._negated.equals(other._negated)}substituteConstants(){return this}evaluate(context){return!this._negated.evaluate(context)}serialize(){return`${this.key} not in '${this.valueKey}'`}keys(){return this._negated.keys()}negate(){return this._negated}}export class ContextKeyNotEqualsExpr{constructor(key,value,negated){this.key=key,this.value=value,this.negated=negated,this.type=5}static create(key,value,negated=null){if("boolean"==typeof value)return value?ContextKeyNotExpr.create(key,negated):ContextKeyDefinedExpr.create(key,negated);const constantValue=CONSTANT_VALUES.get(key);if("boolean"==typeof constantValue){return value===(constantValue?"true":"false")?ContextKeyFalseExpr.INSTANCE:ContextKeyTrueExpr.INSTANCE}return new ContextKeyNotEqualsExpr(key,value,negated)}cmp(other){return other.type!==this.type?this.type-other.type:cmp2(this.key,this.value,other.key,other.value)}equals(other){return other.type===this.type&&(this.key===other.key&&this.value===other.value)}substituteConstants(){const constantValue=CONSTANT_VALUES.get(this.key);if("boolean"==typeof constantValue){const falseValue=constantValue?"true":"false";return this.value===falseValue?ContextKeyFalseExpr.INSTANCE:ContextKeyTrueExpr.INSTANCE}return this}evaluate(context){return context.getValue(this.key)!=this.value}serialize(){return`${this.key} != '${this.value}'`}keys(){return[this.key]}negate(){return this.negated||(this.negated=ContextKeyEqualsExpr.create(this.key,this.value,this)),this.negated}}export class ContextKeyNotExpr{constructor(key,negated){this.key=key,this.negated=negated,this.type=3}static create(key,negated=null){const constantValue=CONSTANT_VALUES.get(key);return"boolean"==typeof constantValue?constantValue?ContextKeyFalseExpr.INSTANCE:ContextKeyTrueExpr.INSTANCE:new ContextKeyNotExpr(key,negated)}cmp(other){return other.type!==this.type?this.type-other.type:cmp1(this.key,other.key)}equals(other){return other.type===this.type&&this.key===other.key}substituteConstants(){const constantValue=CONSTANT_VALUES.get(this.key);return"boolean"==typeof constantValue?constantValue?ContextKeyFalseExpr.INSTANCE:ContextKeyTrueExpr.INSTANCE:this}evaluate(context){return!context.getValue(this.key)}serialize(){return`!${this.key}`}keys(){return[this.key]}negate(){return this.negated||(this.negated=ContextKeyDefinedExpr.create(this.key,this)),this.negated}}function withFloatOrStr(value,callback){if("string"==typeof value){const n=parseFloat(value);isNaN(n)||(value=n)}return"string"==typeof value||"number"==typeof value?callback(value):ContextKeyFalseExpr.INSTANCE}export class ContextKeyGreaterExpr{constructor(key,value,negated){this.key=key,this.value=value,this.negated=negated,this.type=12}static create(key,_value,negated=null){return withFloatOrStr(_value,(value=>new ContextKeyGreaterExpr(key,value,negated)))}cmp(other){return other.type!==this.type?this.type-other.type:cmp2(this.key,this.value,other.key,other.value)}equals(other){return other.type===this.type&&(this.key===other.key&&this.value===other.value)}substituteConstants(){return this}evaluate(context){return"string"!=typeof this.value&&parseFloat(context.getValue(this.key))>this.value}serialize(){return`${this.key} > ${this.value}`}keys(){return[this.key]}negate(){return this.negated||(this.negated=ContextKeySmallerEqualsExpr.create(this.key,this.value,this)),this.negated}}export class ContextKeyGreaterEqualsExpr{constructor(key,value,negated){this.key=key,this.value=value,this.negated=negated,this.type=13}static create(key,_value,negated=null){return withFloatOrStr(_value,(value=>new ContextKeyGreaterEqualsExpr(key,value,negated)))}cmp(other){return other.type!==this.type?this.type-other.type:cmp2(this.key,this.value,other.key,other.value)}equals(other){return other.type===this.type&&(this.key===other.key&&this.value===other.value)}substituteConstants(){return this}evaluate(context){return"string"!=typeof this.value&&parseFloat(context.getValue(this.key))>=this.value}serialize(){return`${this.key} >= ${this.value}`}keys(){return[this.key]}negate(){return this.negated||(this.negated=ContextKeySmallerExpr.create(this.key,this.value,this)),this.negated}}export class ContextKeySmallerExpr{constructor(key,value,negated){this.key=key,this.value=value,this.negated=negated,this.type=14}static create(key,_value,negated=null){return withFloatOrStr(_value,(value=>new ContextKeySmallerExpr(key,value,negated)))}cmp(other){return other.type!==this.type?this.type-other.type:cmp2(this.key,this.value,other.key,other.value)}equals(other){return other.type===this.type&&(this.key===other.key&&this.value===other.value)}substituteConstants(){return this}evaluate(context){return"string"!=typeof this.value&&parseFloat(context.getValue(this.key))<this.value}serialize(){return`${this.key} < ${this.value}`}keys(){return[this.key]}negate(){return this.negated||(this.negated=ContextKeyGreaterEqualsExpr.create(this.key,this.value,this)),this.negated}}export class ContextKeySmallerEqualsExpr{constructor(key,value,negated){this.key=key,this.value=value,this.negated=negated,this.type=15}static create(key,_value,negated=null){return withFloatOrStr(_value,(value=>new ContextKeySmallerEqualsExpr(key,value,negated)))}cmp(other){return other.type!==this.type?this.type-other.type:cmp2(this.key,this.value,other.key,other.value)}equals(other){return other.type===this.type&&(this.key===other.key&&this.value===other.value)}substituteConstants(){return this}evaluate(context){return"string"!=typeof this.value&&parseFloat(context.getValue(this.key))<=this.value}serialize(){return`${this.key} <= ${this.value}`}keys(){return[this.key]}negate(){return this.negated||(this.negated=ContextKeyGreaterExpr.create(this.key,this.value,this)),this.negated}}export class ContextKeyRegexExpr{constructor(key,regexp){this.key=key,this.regexp=regexp,this.type=7,this.negated=null}static create(key,regexp){return new ContextKeyRegexExpr(key,regexp)}cmp(other){if(other.type!==this.type)return this.type-other.type;if(this.key<other.key)return-1;if(this.key>other.key)return 1;const thisSource=this.regexp?this.regexp.source:"",otherSource=other.regexp?other.regexp.source:"";return thisSource<otherSource?-1:thisSource>otherSource?1:0}equals(other){if(other.type===this.type){const thisSource=this.regexp?this.regexp.source:"",otherSource=other.regexp?other.regexp.source:"";return this.key===other.key&&thisSource===otherSource}return!1}substituteConstants(){return this}evaluate(context){const value=context.getValue(this.key);return!!this.regexp&&this.regexp.test(value)}serialize(){const value=this.regexp?`/${this.regexp.source}/${this.regexp.ignoreCase?"i":""}`:"/invalid/";return`${this.key} =~ ${value}`}keys(){return[this.key]}negate(){return this.negated||(this.negated=ContextKeyNotRegexExpr.create(this)),this.negated}}export class ContextKeyNotRegexExpr{constructor(_actual){this._actual=_actual,this.type=8}static create(actual){return new ContextKeyNotRegexExpr(actual)}cmp(other){return other.type!==this.type?this.type-other.type:this._actual.cmp(other._actual)}equals(other){return other.type===this.type&&this._actual.equals(other._actual)}substituteConstants(){return this}evaluate(context){return!this._actual.evaluate(context)}serialize(){throw new Error("Method not implemented.")}keys(){return this._actual.keys()}negate(){return this._actual}}function eliminateConstantsInArray(arr){let newArr=null;for(let i=0,len=arr.length;i<len;i++){const newExpr=arr[i].substituteConstants();if(arr[i]!==newExpr&&null===newArr){newArr=[];for(let j=0;j<i;j++)newArr[j]=arr[j]}null!==newArr&&(newArr[i]=newExpr)}return null===newArr?arr:newArr}class ContextKeyAndExpr{constructor(expr,negated){this.expr=expr,this.negated=negated,this.type=6}static create(_expr,negated){return ContextKeyAndExpr._normalizeArr(_expr,negated)}cmp(other){if(other.type!==this.type)return this.type-other.type;if(this.expr.length<other.expr.length)return-1;if(this.expr.length>other.expr.length)return 1;for(let i=0,len=this.expr.length;i<len;i++){const r=cmp(this.expr[i],other.expr[i]);if(0!==r)return r}return 0}equals(other){if(other.type===this.type){if(this.expr.length!==other.expr.length)return!1;for(let i=0,len=this.expr.length;i<len;i++)if(!this.expr[i].equals(other.expr[i]))return!1;return!0}return!1}substituteConstants(){const exprArr=eliminateConstantsInArray(this.expr);return exprArr===this.expr?this:ContextKeyAndExpr.create(exprArr,this.negated)}evaluate(context){for(let i=0,len=this.expr.length;i<len;i++)if(!this.expr[i].evaluate(context))return!1;return!0}static _normalizeArr(arr,negated){const expr=[];let hasTrue=!1;for(const e of arr)if(e)if(1!==e.type){if(0===e.type)return ContextKeyFalseExpr.INSTANCE;6!==e.type?expr.push(e):expr.push(...e.expr)}else hasTrue=!0;if(0===expr.length&&hasTrue)return ContextKeyTrueExpr.INSTANCE;if(0!==expr.length){if(1===expr.length)return expr[0];expr.sort(cmp);for(let i=1;i<expr.length;i++)expr[i-1].equals(expr[i])&&(expr.splice(i,1),i--);if(1===expr.length)return expr[0];for(;expr.length>1;){const lastElement=expr[expr.length-1];if(9!==lastElement.type)break;expr.pop();const secondToLastElement=expr.pop(),isFinished=0===expr.length,resultElement=ContextKeyOrExpr.create(lastElement.expr.map((el=>ContextKeyAndExpr.create([el,secondToLastElement],null))),null,isFinished);resultElement&&(expr.push(resultElement),expr.sort(cmp))}return 1===expr.length?expr[0]:new ContextKeyAndExpr(expr,negated)}}serialize(){return this.expr.map((e=>e.serialize())).join(" && ")}keys(){const result=[];for(const expr of this.expr)result.push(...expr.keys());return result}negate(){if(!this.negated){const result=[];for(const expr of this.expr)result.push(expr.negate());this.negated=ContextKeyOrExpr.create(result,this,!0)}return this.negated}}class ContextKeyOrExpr{constructor(expr,negated){this.expr=expr,this.negated=negated,this.type=9}static create(_expr,negated,extraRedundantCheck){return ContextKeyOrExpr._normalizeArr(_expr,negated,extraRedundantCheck)}cmp(other){if(other.type!==this.type)return this.type-other.type;if(this.expr.length<other.expr.length)return-1;if(this.expr.length>other.expr.length)return 1;for(let i=0,len=this.expr.length;i<len;i++){const r=cmp(this.expr[i],other.expr[i]);if(0!==r)return r}return 0}equals(other){if(other.type===this.type){if(this.expr.length!==other.expr.length)return!1;for(let i=0,len=this.expr.length;i<len;i++)if(!this.expr[i].equals(other.expr[i]))return!1;return!0}return!1}substituteConstants(){const exprArr=eliminateConstantsInArray(this.expr);return exprArr===this.expr?this:ContextKeyOrExpr.create(exprArr,this.negated,!1)}evaluate(context){for(let i=0,len=this.expr.length;i<len;i++)if(this.expr[i].evaluate(context))return!0;return!1}static _normalizeArr(arr,negated,extraRedundantCheck){let expr=[],hasFalse=!1;if(arr){for(let i=0,len=arr.length;i<len;i++){const e=arr[i];if(e)if(0!==e.type){if(1===e.type)return ContextKeyTrueExpr.INSTANCE;9!==e.type?expr.push(e):expr=expr.concat(e.expr)}else hasFalse=!0}if(0===expr.length&&hasFalse)return ContextKeyFalseExpr.INSTANCE;expr.sort(cmp)}if(0!==expr.length){if(1===expr.length)return expr[0];for(let i=1;i<expr.length;i++)expr[i-1].equals(expr[i])&&(expr.splice(i,1),i--);if(1===expr.length)return expr[0];if(extraRedundantCheck){for(let i=0;i<expr.length;i++)for(let j=i+1;j<expr.length;j++)implies(expr[i],expr[j])&&(expr.splice(j,1),j--);if(1===expr.length)return expr[0]}return new ContextKeyOrExpr(expr,negated)}}serialize(){return this.expr.map((e=>e.serialize())).join(" || ")}keys(){const result=[];for(const expr of this.expr)result.push(...expr.keys());return result}negate(){if(!this.negated){const result=[];for(const expr of this.expr)result.push(expr.negate());for(;result.length>1;){const LEFT=result.shift(),RIGHT=result.shift(),all=[];for(const left of getTerminals(LEFT))for(const right of getTerminals(RIGHT))all.push(ContextKeyAndExpr.create([left,right],null));const isFinished=0===result.length;result.unshift(ContextKeyOrExpr.create(all,null,isFinished))}this.negated=result[0]}return this.negated}}export class RawContextKey extends ContextKeyDefinedExpr{constructor(key,defaultValue,metaOrHide){super(key,null),this._defaultValue=defaultValue,"object"==typeof metaOrHide?RawContextKey._info.push(Object.assign(Object.assign({},metaOrHide),{key})):!0!==metaOrHide&&RawContextKey._info.push({key,description:metaOrHide,type:null!=defaultValue?typeof defaultValue:void 0})}static all(){return RawContextKey._info.values()}bindTo(target){return target.createKey(this.key,this._defaultValue)}getValue(target){return target.getContextKeyValue(this.key)}toNegated(){return this.negate()}isEqualTo(value){return ContextKeyEqualsExpr.create(this.key,value)}}RawContextKey._info=[];export const IContextKeyService=createDecorator("contextKeyService");export const SET_CONTEXT_COMMAND_ID="setContext";function cmp1(key1,key2){return key1<key2?-1:key1>key2?1:0}function cmp2(key1,value1,key2,value2){return key1<key2?-1:key1>key2?1:value1<value2?-1:value1>value2?1:0}export function implies(p,q){if(6===q.type&&9!==p.type&&6!==p.type)for(const qTerm of q.expr)if(p.equals(qTerm))return!0;const expr=getTerminals(p.negate()).concat(getTerminals(q));expr.sort(cmp);for(let i=0;i<expr.length;i++){const notA=expr[i].negate();for(let j=i+1;j<expr.length;j++){const b=expr[j];if(notA.equals(b))return!0}}return!1}function getTerminals(node){return 9===node.type?node.expr:[node]}