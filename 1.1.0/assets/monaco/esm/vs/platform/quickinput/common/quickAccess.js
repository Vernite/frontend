import{coalesce}from"../../../base/common/arrays.js";import{toDisposable}from"../../../base/common/lifecycle.js";import{Registry}from"../../registry/common/platform.js";export var DefaultQuickAccessFilterValue;!function(DefaultQuickAccessFilterValue){DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue.PRESERVE=0]="PRESERVE",DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue.LAST=1]="LAST"}(DefaultQuickAccessFilterValue||(DefaultQuickAccessFilterValue={}));export const Extensions={Quickaccess:"workbench.contributions.quickaccess"};export class QuickAccessRegistry{constructor(){this.providers=[],this.defaultProvider=void 0}registerQuickAccessProvider(provider){return 0===provider.prefix.length?this.defaultProvider=provider:this.providers.push(provider),this.providers.sort(((providerA,providerB)=>providerB.prefix.length-providerA.prefix.length)),toDisposable((()=>{this.providers.splice(this.providers.indexOf(provider),1),this.defaultProvider===provider&&(this.defaultProvider=void 0)}))}getQuickAccessProviders(){return coalesce([this.defaultProvider,...this.providers])}getQuickAccessProvider(prefix){return prefix&&this.providers.find((provider=>prefix.startsWith(provider.prefix)))||void 0||this.defaultProvider}}Registry.add(Extensions.Quickaccess,new QuickAccessRegistry);