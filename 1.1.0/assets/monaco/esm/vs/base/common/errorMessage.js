import*as arrays from"./arrays.js";import*as types from"./types.js";import*as nls from"../../nls.js";function exceptionToErrorMessage(exception,verbose){return verbose&&(exception.stack||exception.stacktrace)?nls.localize("stackTrace.format","{0}: {1}",detectSystemErrorMessage(exception),stackToString(exception.stack)||stackToString(exception.stacktrace)):detectSystemErrorMessage(exception)}function stackToString(stack){return Array.isArray(stack)?stack.join("\n"):stack}function detectSystemErrorMessage(exception){return"string"==typeof exception.code&&"number"==typeof exception.errno&&"string"==typeof exception.syscall?nls.localize("nodeExceptionMessage","A system error occurred ({0})",exception.message):exception.message||nls.localize("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}export function toErrorMessage(error=null,verbose=!1){if(!error)return nls.localize("error.defaultMessage","An unknown error occurred. Please consult the log for more details.");if(Array.isArray(error)){const errors=arrays.coalesce(error),msg=toErrorMessage(errors[0],verbose);return errors.length>1?nls.localize("error.moreErrors","{0} ({1} errors in total)",msg,errors.length):msg}if(types.isString(error))return error;if(error.detail){const detail=error.detail;if(detail.error)return exceptionToErrorMessage(detail.error,verbose);if(detail.exception)return exceptionToErrorMessage(detail.exception,verbose)}return error.stack?exceptionToErrorMessage(error,verbose):error.message?error.message:nls.localize("error.defaultMessage","An unknown error occurred. Please consult the log for more details.")}