import{DisposableStore}from"../../../../base/common/lifecycle.js";export class OvertypingCapturer{constructor(editor,suggestModel){this._disposables=new DisposableStore,this._lastOvertyped=[],this._empty=!0,this._disposables.add(editor.onWillType((()=>{if(!this._empty)return;if(!editor.hasModel())return;const selections=editor.getSelections(),selectionsLength=selections.length;let willOvertype=!1;for(let i=0;i<selectionsLength;i++)if(!selections[i].isEmpty()){willOvertype=!0;break}if(!willOvertype)return;this._lastOvertyped=[];const model=editor.getModel();for(let i=0;i<selectionsLength;i++){const selection=selections[i];if(model.getValueLengthInRange(selection)>OvertypingCapturer._maxSelectionLength)return;this._lastOvertyped[i]={value:model.getValueInRange(selection),multiline:selection.startLineNumber!==selection.endLineNumber}}this._empty=!1}))),this._disposables.add(suggestModel.onDidCancel((e=>{this._empty||e.retrigger||(this._empty=!0)})))}getLastOvertypedInfo(idx){if(!this._empty&&idx>=0&&idx<this._lastOvertyped.length)return this._lastOvertyped[idx]}dispose(){this._disposables.dispose()}}OvertypingCapturer._maxSelectionLength=51200;