var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import*as dom from"../../../../base/browser/dom.js";import{MarkdownString}from"../../../../base/common/htmlContent.js";import{DisposableStore}from"../../../../base/common/lifecycle.js";import{MarkdownRenderer}from"../../markdownRenderer/browser/markdownRenderer.js";import{Range}from"../../../common/core/range.js";import{ILanguageService}from"../../../common/languages/language.js";import{HoverForeignElementAnchor}from"../../hover/browser/hoverTypes.js";import{GhostTextController,ShowNextInlineSuggestionAction,ShowPreviousInlineSuggestionAction}from"./ghostTextController.js";import*as nls from"../../../../nls.js";import{IAccessibilityService}from"../../../../platform/accessibility/common/accessibility.js";import{IMenuService,MenuId,MenuItemAction}from"../../../../platform/actions/common/actions.js";import{ICommandService}from"../../../../platform/commands/common/commands.js";import{IContextKeyService}from"../../../../platform/contextkey/common/contextkey.js";import{IOpenerService}from"../../../../platform/opener/common/opener.js";import{inlineSuggestCommitId}from"./consts.js";export class InlineCompletionsHover{constructor(owner,range,controller){this.owner=owner,this.range=range,this.controller=controller}isValidForHoverAnchor(anchor){return 1===anchor.type&&this.range.startColumn<=anchor.range.startColumn&&this.range.endColumn>=anchor.range.endColumn}hasMultipleSuggestions(){return this.controller.hasMultipleInlineCompletions()}get commands(){var _a,_b,_c;return(null===(_c=null===(_b=null===(_a=this.controller.activeModel)||void 0===_a?void 0:_a.activeInlineCompletionsModel)||void 0===_b?void 0:_b.completionSession.value)||void 0===_c?void 0:_c.commands)||[]}}let InlineCompletionsHoverParticipant=class InlineCompletionsHoverParticipant{constructor(_editor,_commandService,_menuService,_contextKeyService,_languageService,_openerService,accessibilityService){this._editor=_editor,this._commandService=_commandService,this._menuService=_menuService,this._contextKeyService=_contextKeyService,this._languageService=_languageService,this._openerService=_openerService,this.accessibilityService=accessibilityService,this.hoverOrdinal=3}suggestHoverAnchor(mouseEvent){const controller=GhostTextController.get(this._editor);if(!controller)return null;const target=mouseEvent.target;if(8===target.type){const viewZoneData=target.detail;if(controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId))return new HoverForeignElementAnchor(1e3,this,Range.fromPositions(viewZoneData.positionBefore||viewZoneData.position,viewZoneData.positionBefore||viewZoneData.position))}if(7===target.type&&controller.shouldShowHoverAt(target.range))return new HoverForeignElementAnchor(1e3,this,target.range);if(6===target.type){if(target.detail.mightBeForeignElement&&controller.shouldShowHoverAt(target.range))return new HoverForeignElementAnchor(1e3,this,target.range)}return null}computeSync(anchor,lineDecorations){const controller=GhostTextController.get(this._editor);return controller&&controller.shouldShowHoverAt(anchor.range)?[new InlineCompletionsHover(this,anchor.range,controller)]:[]}renderHoverParts(context,hoverParts){const disposableStore=new DisposableStore,part=hoverParts[0];this.accessibilityService.isScreenReaderOptimized()&&this.renderScreenReaderText(context,part,disposableStore);const menu=disposableStore.add(this._menuService.createMenu(MenuId.InlineCompletionsActions,this._contextKeyService)),previousAction=context.statusBar.addAction({label:nls.localize("showNextInlineSuggestion","Next"),commandId:ShowNextInlineSuggestionAction.ID,run:()=>this._commandService.executeCommand(ShowNextInlineSuggestionAction.ID)}),nextAction=context.statusBar.addAction({label:nls.localize("showPreviousInlineSuggestion","Previous"),commandId:ShowPreviousInlineSuggestionAction.ID,run:()=>this._commandService.executeCommand(ShowPreviousInlineSuggestionAction.ID)});context.statusBar.addAction({label:nls.localize("acceptInlineSuggestion","Accept"),commandId:inlineSuggestCommitId,run:()=>this._commandService.executeCommand(inlineSuggestCommitId)});const actions=[previousAction,nextAction];for(const action of actions)action.setEnabled(!1);part.hasMultipleSuggestions().then((hasMore=>{for(const action of actions)action.setEnabled(hasMore)}));for(const command of part.commands)context.statusBar.addAction({label:command.title,commandId:command.id,run:()=>this._commandService.executeCommand(command.id,...command.arguments||[])});for(const[_,group]of menu.getActions())for(const action of group)action instanceof MenuItemAction&&context.statusBar.addAction({label:action.label,commandId:action.item.id,run:()=>this._commandService.executeCommand(action.item.id)});return disposableStore}renderScreenReaderText(context,part,disposableStore){var _a,_b;const $=dom.$,markdownHoverElement=$("div.hover-row.markdown-hover"),hoverContentsElement=dom.append(markdownHoverElement,$("div.hover-contents")),renderer=disposableStore.add(new MarkdownRenderer({editor:this._editor},this._languageService,this._openerService)),ghostText=null===(_b=null===(_a=part.controller.activeModel)||void 0===_a?void 0:_a.inlineCompletionsModel)||void 0===_b?void 0:_b.ghostText;if(ghostText){const lineText=this._editor.getModel().getLineContent(ghostText.lineNumber);(code=>{disposableStore.add(renderer.onDidRenderAsync((()=>{hoverContentsElement.className="hover-contents code-hover-contents",context.onContentsChanged()})));const inlineSuggestionAvailable=nls.localize("inlineSuggestionFollows","Suggestion:"),renderedContents=disposableStore.add(renderer.render((new MarkdownString).appendText(inlineSuggestionAvailable).appendCodeblock("text",code)));hoverContentsElement.replaceChildren(renderedContents.element)})(ghostText.renderForScreenReader(lineText))}context.fragment.appendChild(markdownHoverElement)}};InlineCompletionsHoverParticipant=__decorate([__param(1,ICommandService),__param(2,IMenuService),__param(3,IContextKeyService),__param(4,ILanguageService),__param(5,IOpenerService),__param(6,IAccessibilityService)],InlineCompletionsHoverParticipant);export{InlineCompletionsHoverParticipant};