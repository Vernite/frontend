var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import*as dom from"../../../../base/browser/dom.js";import*as aria from"../../../../base/browser/ui/aria/aria.js";import{DomScrollableElement}from"../../../../base/browser/ui/scrollbar/scrollableElement.js";import{Codicon}from"../../../../base/common/codicons.js";import{Event}from"../../../../base/common/event.js";import{Disposable,DisposableStore}from"../../../../base/common/lifecycle.js";import{escapeRegExpCharacters}from"../../../../base/common/strings.js";import{assertIsDefined}from"../../../../base/common/types.js";import"./parameterHints.css";import{ILanguageService}from"../../../common/languages/language.js";import{ILanguageFeaturesService}from"../../../common/services/languageFeatures.js";import{MarkdownRenderer}from"../../markdownRenderer/browser/markdownRenderer.js";import{ParameterHintsModel}from"./parameterHintsModel.js";import{Context}from"./provideSignatureHelp.js";import*as nls from"../../../../nls.js";import{IContextKeyService}from"../../../../platform/contextkey/common/contextkey.js";import{IOpenerService}from"../../../../platform/opener/common/opener.js";import{editorHoverBackground,editorHoverBorder,editorHoverForeground,listHighlightForeground,registerColor,textCodeBlockBackground,textLinkActiveForeground,textLinkForeground}from"../../../../platform/theme/common/colorRegistry.js";import{registerIcon}from"../../../../platform/theme/common/iconRegistry.js";import{isHighContrast}from"../../../../platform/theme/common/theme.js";import{registerThemingParticipant,ThemeIcon}from"../../../../platform/theme/common/themeService.js";const $=dom.$,parameterHintsNextIcon=registerIcon("parameter-hints-next",Codicon.chevronDown,nls.localize("parameterHintsNextIcon","Icon for show next parameter hint.")),parameterHintsPreviousIcon=registerIcon("parameter-hints-previous",Codicon.chevronUp,nls.localize("parameterHintsPreviousIcon","Icon for show previous parameter hint."));let ParameterHintsWidget=class ParameterHintsWidget extends Disposable{constructor(editor,contextKeyService,openerService,languageService,languageFeaturesService){super(),this.editor=editor,this.renderDisposeables=this._register(new DisposableStore),this.visible=!1,this.announcedLabel=null,this.allowEditorOverflow=!0,this.markdownRenderer=this._register(new MarkdownRenderer({editor},languageService,openerService)),this.model=this._register(new ParameterHintsModel(editor,languageFeaturesService.signatureHelpProvider)),this.keyVisible=Context.Visible.bindTo(contextKeyService),this.keyMultipleSignatures=Context.MultipleSignatures.bindTo(contextKeyService),this._register(this.model.onChangedHints((newParameterHints=>{newParameterHints?(this.show(),this.render(newParameterHints)):this.hide()})))}createParameterHintDOMNodes(){const element=$(".editor-widget.parameter-hints-widget"),wrapper=dom.append(element,$(".phwrapper"));wrapper.tabIndex=-1;const controls=dom.append(wrapper,$(".controls")),previous=dom.append(controls,$(".button"+ThemeIcon.asCSSSelector(parameterHintsPreviousIcon))),overloads=dom.append(controls,$(".overloads")),next=dom.append(controls,$(".button"+ThemeIcon.asCSSSelector(parameterHintsNextIcon)));this._register(dom.addDisposableListener(previous,"click",(e=>{dom.EventHelper.stop(e),this.previous()}))),this._register(dom.addDisposableListener(next,"click",(e=>{dom.EventHelper.stop(e),this.next()})));const body=$(".body"),scrollbar=new DomScrollableElement(body,{alwaysConsumeMouseWheel:!0});this._register(scrollbar),wrapper.appendChild(scrollbar.getDomNode());const signature=dom.append(body,$(".signature")),docs=dom.append(body,$(".docs"));element.style.userSelect="text",this.domNodes={element,signature,overloads,docs,scrollbar},this.editor.addContentWidget(this),this.hide(),this._register(this.editor.onDidChangeCursorSelection((e=>{this.visible&&this.editor.layoutContentWidget(this)})));const updateFont=()=>{if(!this.domNodes)return;const fontInfo=this.editor.getOption(46);this.domNodes.element.style.fontSize=`${fontInfo.fontSize}px`,this.domNodes.element.style.lineHeight=""+fontInfo.lineHeight/fontInfo.fontSize};updateFont(),this._register(Event.chain(this.editor.onDidChangeConfiguration.bind(this.editor)).filter((e=>e.hasChanged(46))).on(updateFont,null)),this._register(this.editor.onDidLayoutChange((e=>this.updateMaxHeight()))),this.updateMaxHeight()}show(){this.visible||(this.domNodes||this.createParameterHintDOMNodes(),this.keyVisible.set(!0),this.visible=!0,setTimeout((()=>{var _a;null===(_a=this.domNodes)||void 0===_a||_a.element.classList.add("visible")}),100),this.editor.layoutContentWidget(this))}hide(){var _a;this.renderDisposeables.clear(),this.visible&&(this.keyVisible.reset(),this.visible=!1,this.announcedLabel=null,null===(_a=this.domNodes)||void 0===_a||_a.element.classList.remove("visible"),this.editor.layoutContentWidget(this))}getPosition(){return this.visible?{position:this.editor.getPosition(),preference:[1,2]}:null}render(hints){var _a;if(this.renderDisposeables.clear(),!this.domNodes)return;const multiple=hints.signatures.length>1;this.domNodes.element.classList.toggle("multiple",multiple),this.keyMultipleSignatures.set(multiple),this.domNodes.signature.innerText="",this.domNodes.docs.innerText="";const signature=hints.signatures[hints.activeSignature];if(!signature)return;const code=dom.append(this.domNodes.signature,$(".code")),fontInfo=this.editor.getOption(46);code.style.fontSize=`${fontInfo.fontSize}px`,code.style.fontFamily=fontInfo.fontFamily;const hasParameters=signature.parameters.length>0,activeParameterIndex=null!==(_a=signature.activeParameter)&&void 0!==_a?_a:hints.activeParameter;if(hasParameters)this.renderParameters(code,signature,activeParameterIndex);else{dom.append(code,$("span")).textContent=signature.label}const activeParameter=signature.parameters[activeParameterIndex];if(null==activeParameter?void 0:activeParameter.documentation){const documentation=$("span.documentation");if("string"==typeof activeParameter.documentation)documentation.textContent=activeParameter.documentation;else{const renderedContents=this.renderMarkdownDocs(activeParameter.documentation);documentation.appendChild(renderedContents.element)}dom.append(this.domNodes.docs,$("p",{},documentation))}if(void 0===signature.documentation);else if("string"==typeof signature.documentation)dom.append(this.domNodes.docs,$("p",{},signature.documentation));else{const renderedContents=this.renderMarkdownDocs(signature.documentation);dom.append(this.domNodes.docs,renderedContents.element)}const hasDocs=this.hasDocs(signature,activeParameter);if(this.domNodes.signature.classList.toggle("has-docs",hasDocs),this.domNodes.docs.classList.toggle("empty",!hasDocs),this.domNodes.overloads.textContent=String(hints.activeSignature+1).padStart(hints.signatures.length.toString().length,"0")+"/"+hints.signatures.length,activeParameter){let labelToAnnounce="";const param=signature.parameters[activeParameterIndex];labelToAnnounce=Array.isArray(param.label)?signature.label.substring(param.label[0],param.label[1]):param.label,param.documentation&&(labelToAnnounce+="string"==typeof param.documentation?`, ${param.documentation}`:`, ${param.documentation.value}`),signature.documentation&&(labelToAnnounce+="string"==typeof signature.documentation?`, ${signature.documentation}`:`, ${signature.documentation.value}`),this.announcedLabel!==labelToAnnounce&&(aria.alert(nls.localize("hint","{0}, hint",labelToAnnounce)),this.announcedLabel=labelToAnnounce)}this.editor.layoutContentWidget(this),this.domNodes.scrollbar.scanDomNode()}renderMarkdownDocs(markdown){const renderedContents=this.renderDisposeables.add(this.markdownRenderer.render(markdown,{asyncRenderCallback:()=>{var _a;null===(_a=this.domNodes)||void 0===_a||_a.scrollbar.scanDomNode()}}));return renderedContents.element.classList.add("markdown-docs"),renderedContents}hasDocs(signature,activeParameter){return!!(activeParameter&&"string"==typeof activeParameter.documentation&&assertIsDefined(activeParameter.documentation).length>0)||(!!(activeParameter&&"object"==typeof activeParameter.documentation&&assertIsDefined(activeParameter.documentation).value.length>0)||(!!(signature.documentation&&"string"==typeof signature.documentation&&assertIsDefined(signature.documentation).length>0)||!!(signature.documentation&&"object"==typeof signature.documentation&&assertIsDefined(signature.documentation.value).length>0)))}renderParameters(parent,signature,activeParameterIndex){const[start,end]=this.getParameterLabelOffsets(signature,activeParameterIndex),beforeSpan=document.createElement("span");beforeSpan.textContent=signature.label.substring(0,start);const paramSpan=document.createElement("span");paramSpan.textContent=signature.label.substring(start,end),paramSpan.className="parameter active";const afterSpan=document.createElement("span");afterSpan.textContent=signature.label.substring(end),dom.append(parent,beforeSpan,paramSpan,afterSpan)}getParameterLabelOffsets(signature,paramIdx){const param=signature.parameters[paramIdx];if(param){if(Array.isArray(param.label))return param.label;if(param.label.length){const regex=new RegExp(`(\\W|^)${escapeRegExpCharacters(param.label)}(?=\\W|$)`,"g");regex.test(signature.label);const idx=regex.lastIndex-param.label.length;return idx>=0?[idx,regex.lastIndex]:[0,0]}return[0,0]}return[0,0]}next(){this.editor.focus(),this.model.next()}previous(){this.editor.focus(),this.model.previous()}cancel(){this.model.cancel()}getDomNode(){return this.domNodes||this.createParameterHintDOMNodes(),this.domNodes.element}getId(){return ParameterHintsWidget.ID}trigger(context){this.model.trigger(context,0)}updateMaxHeight(){if(!this.domNodes)return;const maxHeight=`${Math.max(this.editor.getLayoutInfo().height/4,250)}px`;this.domNodes.element.style.maxHeight=maxHeight;const wrapper=this.domNodes.element.getElementsByClassName("phwrapper");wrapper.length&&(wrapper[0].style.maxHeight=maxHeight)}};ParameterHintsWidget.ID="editor.widget.parameterHintsWidget",ParameterHintsWidget=__decorate([__param(1,IContextKeyService),__param(2,IOpenerService),__param(3,ILanguageService),__param(4,ILanguageFeaturesService)],ParameterHintsWidget);export{ParameterHintsWidget};export const editorHoverWidgetHighlightForeground=registerColor("editorHoverWidget.highlightForeground",{dark:listHighlightForeground,light:listHighlightForeground,hcDark:listHighlightForeground,hcLight:listHighlightForeground},nls.localize("editorHoverWidgetHighlightForeground","Foreground color of the active item in the parameter hint."));registerThemingParticipant(((theme,collector)=>{const border=theme.getColor(editorHoverBorder);if(border){const borderWidth=isHighContrast(theme.type)?2:1;collector.addRule(`.monaco-editor .parameter-hints-widget { border: ${borderWidth}px solid ${border}; }`),collector.addRule(`.monaco-editor .parameter-hints-widget.multiple .body { border-left: 1px solid ${border.transparent(.5)}; }`),collector.addRule(`.monaco-editor .parameter-hints-widget .signature.has-docs { border-bottom: 1px solid ${border.transparent(.5)}; }`)}const background=theme.getColor(editorHoverBackground);background&&collector.addRule(`.monaco-editor .parameter-hints-widget { background-color: ${background}; }`);const link=theme.getColor(textLinkForeground);link&&collector.addRule(`.monaco-editor .parameter-hints-widget a { color: ${link}; }`);const linkHover=theme.getColor(textLinkActiveForeground);linkHover&&collector.addRule(`.monaco-editor .parameter-hints-widget a:hover { color: ${linkHover}; }`);const foreground=theme.getColor(editorHoverForeground);foreground&&collector.addRule(`.monaco-editor .parameter-hints-widget { color: ${foreground}; }`);const codeBackground=theme.getColor(textCodeBlockBackground);codeBackground&&collector.addRule(`.monaco-editor .parameter-hints-widget code { background-color: ${codeBackground}; }`);const parameterHighlightColor=theme.getColor(editorHoverWidgetHighlightForeground);parameterHighlightColor&&collector.addRule(`.monaco-editor .parameter-hints-widget .parameter.active { color: ${parameterHighlightColor}}`)}));