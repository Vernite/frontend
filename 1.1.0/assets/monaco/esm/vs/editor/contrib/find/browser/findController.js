var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}},__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import{Delayer}from"../../../../base/common/async.js";import{Disposable}from"../../../../base/common/lifecycle.js";import*as strings from"../../../../base/common/strings.js";import{EditorAction,EditorCommand,MultiEditorAction,registerEditorAction,registerEditorCommand,registerEditorContribution,registerMultiEditorAction}from"../../../browser/editorExtensions.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{CONTEXT_FIND_INPUT_FOCUSED,CONTEXT_FIND_WIDGET_VISIBLE,CONTEXT_REPLACE_INPUT_FOCUSED,FindModelBoundToEditorModel,FIND_IDS,ToggleCaseSensitiveKeybinding,TogglePreserveCaseKeybinding,ToggleRegexKeybinding,ToggleSearchScopeKeybinding,ToggleWholeWordKeybinding}from"./findModel.js";import{FindOptionsWidget}from"./findOptionsWidget.js";import{FindReplaceState}from"./findState.js";import{FindWidget}from"./findWidget.js";import*as nls from"../../../../nls.js";import{MenuId}from"../../../../platform/actions/common/actions.js";import{IClipboardService}from"../../../../platform/clipboard/common/clipboardService.js";import{ContextKeyExpr,IContextKeyService}from"../../../../platform/contextkey/common/contextkey.js";import{IContextViewService}from"../../../../platform/contextview/browser/contextView.js";import{IKeybindingService}from"../../../../platform/keybinding/common/keybinding.js";import{INotificationService}from"../../../../platform/notification/common/notification.js";import{IStorageService}from"../../../../platform/storage/common/storage.js";import{IThemeService}from"../../../../platform/theme/common/themeService.js";const SEARCH_STRING_MAX_LENGTH=524288;export function getSelectionSearchString(editor,seedSearchStringFromSelection="single",seedSearchStringFromNonEmptySelection=!1){if(!editor.hasModel())return null;const selection=editor.getSelection();if("single"===seedSearchStringFromSelection&&selection.startLineNumber===selection.endLineNumber||"multiple"===seedSearchStringFromSelection)if(selection.isEmpty()){const wordAtPosition=editor.getConfiguredWordAtPosition(selection.getStartPosition());if(wordAtPosition&&!1===seedSearchStringFromNonEmptySelection)return wordAtPosition.word}else if(editor.getModel().getValueLengthInRange(selection)<524288)return editor.getModel().getValueInRange(selection);return null}let CommonFindController=class CommonFindController extends Disposable{constructor(editor,contextKeyService,storageService,clipboardService){super(),this._editor=editor,this._findWidgetVisible=CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService),this._contextKeyService=contextKeyService,this._storageService=storageService,this._clipboardService=clipboardService,this._updateHistoryDelayer=new Delayer(500),this._state=this._register(new FindReplaceState),this.loadQueryState(),this._register(this._state.onFindReplaceStateChange((e=>this._onStateChanged(e)))),this._model=null,this._register(this._editor.onDidChangeModel((()=>{const shouldRestartFind=this._editor.getModel()&&this._state.isRevealed;this.disposeModel(),this._state.change({searchScope:null,matchCase:this._storageService.getBoolean("editor.matchCase",1,!1),wholeWord:this._storageService.getBoolean("editor.wholeWord",1,!1),isRegex:this._storageService.getBoolean("editor.isRegex",1,!1),preserveCase:this._storageService.getBoolean("editor.preserveCase",1,!1)},!1),shouldRestartFind&&this._start({forceRevealReplace:!1,seedSearchStringFromSelection:"none",seedSearchStringFromNonEmptySelection:!1,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!1,updateSearchScope:!1,loop:this._editor.getOption(37).loop})})))}get editor(){return this._editor}static get(editor){return editor.getContribution(CommonFindController.ID)}dispose(){this.disposeModel(),super.dispose()}disposeModel(){this._model&&(this._model.dispose(),this._model=null)}_onStateChanged(e){this.saveQueryState(e),e.isRevealed&&(this._state.isRevealed?this._findWidgetVisible.set(!0):(this._findWidgetVisible.reset(),this.disposeModel())),e.searchString&&this.setGlobalBufferTerm(this._state.searchString)}saveQueryState(e){e.isRegex&&this._storageService.store("editor.isRegex",this._state.actualIsRegex,1,0),e.wholeWord&&this._storageService.store("editor.wholeWord",this._state.actualWholeWord,1,0),e.matchCase&&this._storageService.store("editor.matchCase",this._state.actualMatchCase,1,0),e.preserveCase&&this._storageService.store("editor.preserveCase",this._state.actualPreserveCase,1,0)}loadQueryState(){this._state.change({matchCase:this._storageService.getBoolean("editor.matchCase",1,this._state.matchCase),wholeWord:this._storageService.getBoolean("editor.wholeWord",1,this._state.wholeWord),isRegex:this._storageService.getBoolean("editor.isRegex",1,this._state.isRegex),preserveCase:this._storageService.getBoolean("editor.preserveCase",1,this._state.preserveCase)},!1)}isFindInputFocused(){return!!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService)}getState(){return this._state}closeFindWidget(){this._state.change({isRevealed:!1,searchScope:null},!1),this._editor.focus()}toggleCaseSensitive(){this._state.change({matchCase:!this._state.matchCase},!1),this._state.isRevealed||this.highlightFindOptions()}toggleWholeWords(){this._state.change({wholeWord:!this._state.wholeWord},!1),this._state.isRevealed||this.highlightFindOptions()}toggleRegex(){this._state.change({isRegex:!this._state.isRegex},!1),this._state.isRevealed||this.highlightFindOptions()}togglePreserveCase(){this._state.change({preserveCase:!this._state.preserveCase},!1),this._state.isRevealed||this.highlightFindOptions()}toggleSearchScope(){if(this._state.searchScope)this._state.change({searchScope:null},!0);else if(this._editor.hasModel()){const selections=this._editor.getSelections();selections.map((selection=>(1===selection.endColumn&&selection.endLineNumber>selection.startLineNumber&&(selection=selection.setEndPosition(selection.endLineNumber-1,this._editor.getModel().getLineMaxColumn(selection.endLineNumber-1))),selection.isEmpty()?null:selection))).filter((element=>!!element)),selections.length&&this._state.change({searchScope:selections},!0)}}setSearchString(searchString){this._state.isRegex&&(searchString=strings.escapeRegExpCharacters(searchString)),this._state.change({searchString},!1)}highlightFindOptions(ignoreWhenVisible=!1){}_start(opts,newState){return __awaiter(this,void 0,void 0,(function*(){if(this.disposeModel(),!this._editor.hasModel())return;const stateChanges=Object.assign(Object.assign({},newState),{isRevealed:!0});if("single"===opts.seedSearchStringFromSelection){const selectionSearchString=getSelectionSearchString(this._editor,opts.seedSearchStringFromSelection,opts.seedSearchStringFromNonEmptySelection);selectionSearchString&&(this._state.isRegex?stateChanges.searchString=strings.escapeRegExpCharacters(selectionSearchString):stateChanges.searchString=selectionSearchString)}else if("multiple"===opts.seedSearchStringFromSelection&&!opts.updateSearchScope){const selectionSearchString=getSelectionSearchString(this._editor,opts.seedSearchStringFromSelection);selectionSearchString&&(stateChanges.searchString=selectionSearchString)}if(!stateChanges.searchString&&opts.seedSearchStringFromGlobalClipboard){const selectionSearchString=yield this.getGlobalBufferTerm();if(!this._editor.hasModel())return;selectionSearchString&&(stateChanges.searchString=selectionSearchString)}if(opts.forceRevealReplace||stateChanges.isReplaceRevealed?stateChanges.isReplaceRevealed=!0:this._findWidgetVisible.get()||(stateChanges.isReplaceRevealed=!1),opts.updateSearchScope){const currentSelections=this._editor.getSelections();currentSelections.some((selection=>!selection.isEmpty()))&&(stateChanges.searchScope=currentSelections)}stateChanges.loop=opts.loop,this._state.change(stateChanges,!1),this._model||(this._model=new FindModelBoundToEditorModel(this._editor,this._state))}))}start(opts,newState){return this._start(opts,newState)}moveToNextMatch(){return!!this._model&&(this._model.moveToNextMatch(),!0)}moveToPrevMatch(){return!!this._model&&(this._model.moveToPrevMatch(),!0)}replace(){return!!this._model&&(this._model.replace(),!0)}replaceAll(){return!!this._model&&(this._model.replaceAll(),!0)}selectAllMatches(){return!!this._model&&(this._model.selectAllMatches(),this._editor.focus(),!0)}getGlobalBufferTerm(){return __awaiter(this,void 0,void 0,(function*(){return this._editor.getOption(37).globalFindClipboard&&this._editor.hasModel()&&!this._editor.getModel().isTooLargeForSyncing()?this._clipboardService.readFindText():""}))}setGlobalBufferTerm(text){this._editor.getOption(37).globalFindClipboard&&this._editor.hasModel()&&!this._editor.getModel().isTooLargeForSyncing()&&this._clipboardService.writeFindText(text)}};CommonFindController.ID="editor.contrib.findController",CommonFindController=__decorate([__param(1,IContextKeyService),__param(2,IStorageService),__param(3,IClipboardService)],CommonFindController);export{CommonFindController};let FindController=class FindController extends CommonFindController{constructor(editor,_contextViewService,_contextKeyService,_keybindingService,_themeService,_notificationService,_storageService,clipboardService){super(editor,_contextKeyService,_storageService,clipboardService),this._contextViewService=_contextViewService,this._keybindingService=_keybindingService,this._themeService=_themeService,this._notificationService=_notificationService,this._widget=null,this._findOptionsWidget=null}_start(opts,newState){const _super=Object.create(null,{_start:{get:()=>super._start}});return __awaiter(this,void 0,void 0,(function*(){this._widget||this._createFindWidget();const selection=this._editor.getSelection();let updateSearchScope=!1;switch(this._editor.getOption(37).autoFindInSelection){case"always":updateSearchScope=!0;break;case"never":updateSearchScope=!1;break;case"multiline":updateSearchScope=!!selection&&selection.startLineNumber!==selection.endLineNumber;break}opts.updateSearchScope=opts.updateSearchScope||updateSearchScope,yield _super._start.call(this,opts,newState),this._widget&&(2===opts.shouldFocus?this._widget.focusReplaceInput():1===opts.shouldFocus&&this._widget.focusFindInput())}))}highlightFindOptions(ignoreWhenVisible=!1){this._widget||this._createFindWidget(),this._state.isRevealed&&!ignoreWhenVisible?this._widget.highlightFindOptions():this._findOptionsWidget.highlightFindOptions()}_createFindWidget(){this._widget=this._register(new FindWidget(this._editor,this,this._state,this._contextViewService,this._keybindingService,this._contextKeyService,this._themeService,this._storageService,this._notificationService)),this._findOptionsWidget=this._register(new FindOptionsWidget(this._editor,this._state,this._keybindingService,this._themeService))}};FindController=__decorate([__param(1,IContextViewService),__param(2,IContextKeyService),__param(3,IKeybindingService),__param(4,IThemeService),__param(5,INotificationService),__param(6,IStorageService),__param(7,IClipboardService)],FindController);export{FindController};export const StartFindAction=registerMultiEditorAction(new MultiEditorAction({id:FIND_IDS.StartFindAction,label:nls.localize("startFindAction","Find"),alias:"Find",precondition:ContextKeyExpr.or(EditorContextKeys.focus,ContextKeyExpr.has("editorIsOpen")),kbOpts:{kbExpr:null,primary:2084,weight:100},menuOpts:{menuId:MenuId.MenubarEditMenu,group:"3_find",title:nls.localize({key:"miFind",comment:["&& denotes a mnemonic"]},"&&Find"),order:1}}));StartFindAction.addImplementation(0,((accessor,editor,args)=>{const controller=CommonFindController.get(editor);return!!controller&&controller.start({forceRevealReplace:!1,seedSearchStringFromSelection:"never"!==editor.getOption(37).seedSearchStringFromSelection?"single":"none",seedSearchStringFromNonEmptySelection:"selection"===editor.getOption(37).seedSearchStringFromSelection,seedSearchStringFromGlobalClipboard:editor.getOption(37).globalFindClipboard,shouldFocus:1,shouldAnimate:!0,updateSearchScope:!1,loop:editor.getOption(37).loop})}));const findArgDescription={description:"Open a new In-Editor Find Widget.",args:[{name:"Open a new In-Editor Find Widget args",schema:{properties:{searchString:{type:"string"},replaceString:{type:"string"},regex:{type:"boolean"},regexOverride:{type:"number",description:nls.localize("actions.find.isRegexOverride",'Overrides "Use Regular Expression" flag.\nThe flag will not be saved for the future.\n0: Do Nothing\n1: True\n2: False')},wholeWord:{type:"boolean"},wholeWordOverride:{type:"number",description:nls.localize("actions.find.wholeWordOverride",'Overrides "Match Whole Word" flag.\nThe flag will not be saved for the future.\n0: Do Nothing\n1: True\n2: False')},matchCase:{type:"boolean"},matchCaseOverride:{type:"number",description:nls.localize("actions.find.matchCaseOverride",'Overrides "Math Case" flag.\nThe flag will not be saved for the future.\n0: Do Nothing\n1: True\n2: False')},preserveCase:{type:"boolean"},preserveCaseOverride:{type:"number",description:nls.localize("actions.find.preserveCaseOverride",'Overrides "Preserve Case" flag.\nThe flag will not be saved for the future.\n0: Do Nothing\n1: True\n2: False')},findInSelection:{type:"boolean"}}}}]};export class StartFindWithArgsAction extends EditorAction{constructor(){super({id:FIND_IDS.StartFindWithArgs,label:nls.localize("startFindWithArgsAction","Find With Arguments"),alias:"Find With Arguments",precondition:void 0,kbOpts:{kbExpr:null,primary:0,weight:100},description:findArgDescription})}run(accessor,editor,args){return __awaiter(this,void 0,void 0,(function*(){const controller=CommonFindController.get(editor);if(controller){const newState=args?{searchString:args.searchString,replaceString:args.replaceString,isReplaceRevealed:void 0!==args.replaceString,isRegex:args.isRegex,wholeWord:args.matchWholeWord,matchCase:args.isCaseSensitive,preserveCase:args.preserveCase}:{};yield controller.start({forceRevealReplace:!1,seedSearchStringFromSelection:0===controller.getState().searchString.length&&"never"!==editor.getOption(37).seedSearchStringFromSelection?"single":"none",seedSearchStringFromNonEmptySelection:"selection"===editor.getOption(37).seedSearchStringFromSelection,seedSearchStringFromGlobalClipboard:!0,shouldFocus:1,shouldAnimate:!0,updateSearchScope:(null==args?void 0:args.findInSelection)||!1,loop:editor.getOption(37).loop},newState),controller.setGlobalBufferTerm(controller.getState().searchString)}}))}}export class StartFindWithSelectionAction extends EditorAction{constructor(){super({id:FIND_IDS.StartFindWithSelection,label:nls.localize("startFindWithSelectionAction","Find With Selection"),alias:"Find With Selection",precondition:void 0,kbOpts:{kbExpr:null,primary:0,mac:{primary:2083},weight:100}})}run(accessor,editor){return __awaiter(this,void 0,void 0,(function*(){const controller=CommonFindController.get(editor);controller&&(yield controller.start({forceRevealReplace:!1,seedSearchStringFromSelection:"multiple",seedSearchStringFromNonEmptySelection:!1,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:editor.getOption(37).loop}),controller.setGlobalBufferTerm(controller.getState().searchString))}))}}export class MatchFindAction extends EditorAction{run(accessor,editor){return __awaiter(this,void 0,void 0,(function*(){const controller=CommonFindController.get(editor);controller&&!this._run(controller)&&(yield controller.start({forceRevealReplace:!1,seedSearchStringFromSelection:0===controller.getState().searchString.length&&"never"!==editor.getOption(37).seedSearchStringFromSelection?"single":"none",seedSearchStringFromNonEmptySelection:"selection"===editor.getOption(37).seedSearchStringFromSelection,seedSearchStringFromGlobalClipboard:!0,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:editor.getOption(37).loop}),this._run(controller))}))}}export class NextMatchFindAction extends MatchFindAction{constructor(){super({id:FIND_IDS.NextMatchFindAction,label:nls.localize("findNextMatchAction","Find Next"),alias:"Find Next",precondition:void 0,kbOpts:[{kbExpr:EditorContextKeys.focus,primary:61,mac:{primary:2085,secondary:[61]},weight:100},{kbExpr:ContextKeyExpr.and(EditorContextKeys.focus,CONTEXT_FIND_INPUT_FOCUSED),primary:3,weight:100}]})}_run(controller){return!!controller.moveToNextMatch()&&(controller.editor.pushUndoStop(),!0)}}export class PreviousMatchFindAction extends MatchFindAction{constructor(){super({id:FIND_IDS.PreviousMatchFindAction,label:nls.localize("findPreviousMatchAction","Find Previous"),alias:"Find Previous",precondition:void 0,kbOpts:[{kbExpr:EditorContextKeys.focus,primary:1085,mac:{primary:3109,secondary:[1085]},weight:100},{kbExpr:ContextKeyExpr.and(EditorContextKeys.focus,CONTEXT_FIND_INPUT_FOCUSED),primary:1027,weight:100}]})}_run(controller){return controller.moveToPrevMatch()}}export class SelectionMatchFindAction extends EditorAction{run(accessor,editor){return __awaiter(this,void 0,void 0,(function*(){const controller=CommonFindController.get(editor);if(!controller)return;const seedSearchStringFromNonEmptySelection="selection"===editor.getOption(37).seedSearchStringFromSelection;let selectionSearchString=null;"never"!==editor.getOption(37).seedSearchStringFromSelection&&(selectionSearchString=getSelectionSearchString(editor,"single",seedSearchStringFromNonEmptySelection)),selectionSearchString&&controller.setSearchString(selectionSearchString),this._run(controller)||(yield controller.start({forceRevealReplace:!1,seedSearchStringFromSelection:"never"!==editor.getOption(37).seedSearchStringFromSelection?"single":"none",seedSearchStringFromNonEmptySelection,seedSearchStringFromGlobalClipboard:!1,shouldFocus:0,shouldAnimate:!0,updateSearchScope:!1,loop:editor.getOption(37).loop}),this._run(controller))}))}}export class NextSelectionMatchFindAction extends SelectionMatchFindAction{constructor(){super({id:FIND_IDS.NextSelectionMatchFindAction,label:nls.localize("nextSelectionMatchFindAction","Find Next Selection"),alias:"Find Next Selection",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.focus,primary:2109,weight:100}})}_run(controller){return controller.moveToNextMatch()}}export class PreviousSelectionMatchFindAction extends SelectionMatchFindAction{constructor(){super({id:FIND_IDS.PreviousSelectionMatchFindAction,label:nls.localize("previousSelectionMatchFindAction","Find Previous Selection"),alias:"Find Previous Selection",precondition:void 0,kbOpts:{kbExpr:EditorContextKeys.focus,primary:3133,weight:100}})}_run(controller){return controller.moveToPrevMatch()}}export const StartFindReplaceAction=registerMultiEditorAction(new MultiEditorAction({id:FIND_IDS.StartFindReplaceAction,label:nls.localize("startReplace","Replace"),alias:"Replace",precondition:ContextKeyExpr.or(EditorContextKeys.focus,ContextKeyExpr.has("editorIsOpen")),kbOpts:{kbExpr:null,primary:2086,mac:{primary:2596},weight:100},menuOpts:{menuId:MenuId.MenubarEditMenu,group:"3_find",title:nls.localize({key:"miReplace",comment:["&& denotes a mnemonic"]},"&&Replace"),order:2}}));StartFindReplaceAction.addImplementation(0,((accessor,editor,args)=>{if(!editor.hasModel()||editor.getOption(83))return!1;const controller=CommonFindController.get(editor);if(!controller)return!1;const currentSelection=editor.getSelection(),findInputFocused=controller.isFindInputFocused(),seedSearchStringFromSelection=!currentSelection.isEmpty()&&currentSelection.startLineNumber===currentSelection.endLineNumber&&"never"!==editor.getOption(37).seedSearchStringFromSelection&&!findInputFocused,shouldFocus=findInputFocused||seedSearchStringFromSelection?2:1;return controller.start({forceRevealReplace:!0,seedSearchStringFromSelection:seedSearchStringFromSelection?"single":"none",seedSearchStringFromNonEmptySelection:"selection"===editor.getOption(37).seedSearchStringFromSelection,seedSearchStringFromGlobalClipboard:"never"!==editor.getOption(37).seedSearchStringFromSelection,shouldFocus,shouldAnimate:!0,updateSearchScope:!1,loop:editor.getOption(37).loop})})),registerEditorContribution(CommonFindController.ID,FindController),registerEditorAction(StartFindWithArgsAction),registerEditorAction(StartFindWithSelectionAction),registerEditorAction(NextMatchFindAction),registerEditorAction(PreviousMatchFindAction),registerEditorAction(NextSelectionMatchFindAction),registerEditorAction(PreviousSelectionMatchFindAction);const FindCommand=EditorCommand.bindToContribution(CommonFindController.get);registerEditorCommand(new FindCommand({id:FIND_IDS.CloseFindWidgetCommand,precondition:CONTEXT_FIND_WIDGET_VISIBLE,handler:x=>x.closeFindWidget(),kbOpts:{weight:105,kbExpr:ContextKeyExpr.and(EditorContextKeys.focus,ContextKeyExpr.not("isComposing")),primary:9,secondary:[1033]}})),registerEditorCommand(new FindCommand({id:FIND_IDS.ToggleCaseSensitiveCommand,precondition:void 0,handler:x=>x.toggleCaseSensitive(),kbOpts:{weight:105,kbExpr:EditorContextKeys.focus,primary:ToggleCaseSensitiveKeybinding.primary,mac:ToggleCaseSensitiveKeybinding.mac,win:ToggleCaseSensitiveKeybinding.win,linux:ToggleCaseSensitiveKeybinding.linux}})),registerEditorCommand(new FindCommand({id:FIND_IDS.ToggleWholeWordCommand,precondition:void 0,handler:x=>x.toggleWholeWords(),kbOpts:{weight:105,kbExpr:EditorContextKeys.focus,primary:ToggleWholeWordKeybinding.primary,mac:ToggleWholeWordKeybinding.mac,win:ToggleWholeWordKeybinding.win,linux:ToggleWholeWordKeybinding.linux}})),registerEditorCommand(new FindCommand({id:FIND_IDS.ToggleRegexCommand,precondition:void 0,handler:x=>x.toggleRegex(),kbOpts:{weight:105,kbExpr:EditorContextKeys.focus,primary:ToggleRegexKeybinding.primary,mac:ToggleRegexKeybinding.mac,win:ToggleRegexKeybinding.win,linux:ToggleRegexKeybinding.linux}})),registerEditorCommand(new FindCommand({id:FIND_IDS.ToggleSearchScopeCommand,precondition:void 0,handler:x=>x.toggleSearchScope(),kbOpts:{weight:105,kbExpr:EditorContextKeys.focus,primary:ToggleSearchScopeKeybinding.primary,mac:ToggleSearchScopeKeybinding.mac,win:ToggleSearchScopeKeybinding.win,linux:ToggleSearchScopeKeybinding.linux}})),registerEditorCommand(new FindCommand({id:FIND_IDS.TogglePreserveCaseCommand,precondition:void 0,handler:x=>x.togglePreserveCase(),kbOpts:{weight:105,kbExpr:EditorContextKeys.focus,primary:TogglePreserveCaseKeybinding.primary,mac:TogglePreserveCaseKeybinding.mac,win:TogglePreserveCaseKeybinding.win,linux:TogglePreserveCaseKeybinding.linux}})),registerEditorCommand(new FindCommand({id:FIND_IDS.ReplaceOneAction,precondition:CONTEXT_FIND_WIDGET_VISIBLE,handler:x=>x.replace(),kbOpts:{weight:105,kbExpr:EditorContextKeys.focus,primary:3094}})),registerEditorCommand(new FindCommand({id:FIND_IDS.ReplaceOneAction,precondition:CONTEXT_FIND_WIDGET_VISIBLE,handler:x=>x.replace(),kbOpts:{weight:105,kbExpr:ContextKeyExpr.and(EditorContextKeys.focus,CONTEXT_REPLACE_INPUT_FOCUSED),primary:3}})),registerEditorCommand(new FindCommand({id:FIND_IDS.ReplaceAllAction,precondition:CONTEXT_FIND_WIDGET_VISIBLE,handler:x=>x.replaceAll(),kbOpts:{weight:105,kbExpr:EditorContextKeys.focus,primary:2563}})),registerEditorCommand(new FindCommand({id:FIND_IDS.ReplaceAllAction,precondition:CONTEXT_FIND_WIDGET_VISIBLE,handler:x=>x.replaceAll(),kbOpts:{weight:105,kbExpr:ContextKeyExpr.and(EditorContextKeys.focus,CONTEXT_REPLACE_INPUT_FOCUSED),primary:void 0,mac:{primary:2051}}})),registerEditorCommand(new FindCommand({id:FIND_IDS.SelectAllMatchesAction,precondition:CONTEXT_FIND_WIDGET_VISIBLE,handler:x=>x.selectAllMatches(),kbOpts:{weight:105,kbExpr:EditorContextKeys.focus,primary:515}}));