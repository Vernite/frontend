import{Range}from"../../../common/core/range.js";export class ReplaceAllCommand{constructor(editorSelection,ranges,replaceStrings){this._editorSelection=editorSelection,this._ranges=ranges,this._replaceStrings=replaceStrings,this._trackedEditorSelectionId=null}getEditOperations(model,builder){if(this._ranges.length>0){const ops=[];for(let i=0;i<this._ranges.length;i++)ops.push({range:this._ranges[i],text:this._replaceStrings[i]});ops.sort(((o1,o2)=>Range.compareRangesUsingStarts(o1.range,o2.range)));const resultOps=[];let previousOp=ops[0];for(let i=1;i<ops.length;i++)previousOp.range.endLineNumber===ops[i].range.startLineNumber&&previousOp.range.endColumn===ops[i].range.startColumn?(previousOp.range=previousOp.range.plusRange(ops[i].range),previousOp.text=previousOp.text+ops[i].text):(resultOps.push(previousOp),previousOp=ops[i]);resultOps.push(previousOp);for(const op of resultOps)builder.addEditOperation(op.range,op.text)}this._trackedEditorSelectionId=builder.trackSelection(this._editorSelection)}computeCursorState(model,helper){return helper.getTrackedSelection(this._trackedEditorSelectionId)}}