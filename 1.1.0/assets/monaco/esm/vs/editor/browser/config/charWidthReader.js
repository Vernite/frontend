import{applyFontInfo}from"./domFontInfo.js";export class CharWidthRequest{constructor(chr,type){this.chr=chr,this.type=type,this.width=0}fulfill(width){this.width=width}}class DomCharWidthReader{constructor(bareFontInfo,requests){this._bareFontInfo=bareFontInfo,this._requests=requests,this._container=null,this._testElements=null}read(){this._createDomElements(),document.body.appendChild(this._container),this._readFromDomElements(),document.body.removeChild(this._container),this._container=null,this._testElements=null}_createDomElements(){const container=document.createElement("div");container.style.position="absolute",container.style.top="-50000px",container.style.width="50000px";const regularDomNode=document.createElement("div");applyFontInfo(regularDomNode,this._bareFontInfo),container.appendChild(regularDomNode);const boldDomNode=document.createElement("div");applyFontInfo(boldDomNode,this._bareFontInfo),boldDomNode.style.fontWeight="bold",container.appendChild(boldDomNode);const italicDomNode=document.createElement("div");applyFontInfo(italicDomNode,this._bareFontInfo),italicDomNode.style.fontStyle="italic",container.appendChild(italicDomNode);const testElements=[];for(const request of this._requests){let parent;0===request.type&&(parent=regularDomNode),2===request.type&&(parent=boldDomNode),1===request.type&&(parent=italicDomNode),parent.appendChild(document.createElement("br"));const testElement=document.createElement("span");DomCharWidthReader._render(testElement,request),parent.appendChild(testElement),testElements.push(testElement)}this._container=container,this._testElements=testElements}static _render(testElement,request){if(" "===request.chr){let htmlString="Â ";for(let i=0;i<8;i++)htmlString+=htmlString;testElement.innerText=htmlString}else{let testString=request.chr;for(let i=0;i<8;i++)testString+=testString;testElement.textContent=testString}}_readFromDomElements(){for(let i=0,len=this._requests.length;i<len;i++){const request=this._requests[i],testElement=this._testElements[i];request.fulfill(testElement.offsetWidth/256)}}}export function readCharWidths(bareFontInfo,requests){new DomCharWidthReader(bareFontInfo,requests).read()}