var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import{$,append,clearNode,createStyleSheet,h,hasParentWithClass}from"../../dom.js";import{DomEmitter}from"../../event.js";import{StandardKeyboardEvent}from"../../keyboardEvent.js";import{ActionBar}from"../actionbar/actionbar.js";import{FindInput}from"../findinput/findInput.js";import{ElementsDragAndDropData}from"../list/listView.js";import{isButton,isInputElement,isMonacoEditor,List,MouseController}from"../list/listWidget.js";import{Toggle}from"../toggle/toggle.js";import{getVisibleState,isFilterResult}from"./indexTreeModel.js";import{TreeMouseEventTarget}from"./tree.js";import{Action}from"../../../common/actions.js";import{distinct,equals,range}from"../../../common/arrays.js";import{disposableTimeout,timeout}from"../../../common/async.js";import{Codicon}from"../../../common/codicons.js";import{SetMap}from"../../../common/collections.js";import{Emitter,Event,EventBufferer,Relay}from"../../../common/event.js";import{fuzzyScore,FuzzyScore}from"../../../common/filters.js";import{Disposable,DisposableStore,dispose,toDisposable}from"../../../common/lifecycle.js";import{clamp}from"../../../common/numbers.js";import{isNumber}from"../../../common/types.js";import"./media/tree.css";import{localize}from"../../../../nls.js";class TreeElementsDragAndDropData extends ElementsDragAndDropData{constructor(data){super(data.elements.map((node=>node.element))),this.data=data}}function asTreeDragAndDropData(data){return data instanceof ElementsDragAndDropData?new TreeElementsDragAndDropData(data):data}class TreeNodeListDragAndDrop{constructor(modelProvider,dnd){this.modelProvider=modelProvider,this.dnd=dnd,this.autoExpandDisposable=Disposable.None}getDragURI(node){return this.dnd.getDragURI(node.element)}getDragLabel(nodes,originalEvent){if(this.dnd.getDragLabel)return this.dnd.getDragLabel(nodes.map((node=>node.element)),originalEvent)}onDragStart(data,originalEvent){var _a,_b;null===(_b=(_a=this.dnd).onDragStart)||void 0===_b||_b.call(_a,asTreeDragAndDropData(data),originalEvent)}onDragOver(data,targetNode,targetIndex,originalEvent,raw=!0){const result=this.dnd.onDragOver(asTreeDragAndDropData(data),targetNode&&targetNode.element,targetIndex,originalEvent),didChangeAutoExpandNode=this.autoExpandNode!==targetNode;if(didChangeAutoExpandNode&&(this.autoExpandDisposable.dispose(),this.autoExpandNode=targetNode),void 0===targetNode)return result;if(didChangeAutoExpandNode&&"boolean"!=typeof result&&result.autoExpand&&(this.autoExpandDisposable=disposableTimeout((()=>{const model=this.modelProvider(),ref=model.getNodeLocation(targetNode);model.isCollapsed(ref)&&model.setCollapsed(ref,!1),this.autoExpandNode=void 0}),500)),"boolean"==typeof result||!result.accept||void 0===result.bubble||result.feedback){if(!raw){return{accept:"boolean"==typeof result?result:result.accept,effect:"boolean"==typeof result?void 0:result.effect,feedback:[targetIndex]}}return result}if(1===result.bubble){const model=this.modelProvider(),ref=model.getNodeLocation(targetNode),parentRef=model.getParentNodeLocation(ref),parentNode=model.getNode(parentRef),parentIndex=parentRef&&model.getListIndex(parentRef);return this.onDragOver(data,parentNode,parentIndex,originalEvent,!1)}const model=this.modelProvider(),ref=model.getNodeLocation(targetNode),start=model.getListIndex(ref),length=model.getListRenderCount(ref);return Object.assign(Object.assign({},result),{feedback:range(start,start+length)})}drop(data,targetNode,targetIndex,originalEvent){this.autoExpandDisposable.dispose(),this.autoExpandNode=void 0,this.dnd.drop(asTreeDragAndDropData(data),targetNode&&targetNode.element,targetIndex,originalEvent)}onDragEnd(originalEvent){var _a,_b;null===(_b=(_a=this.dnd).onDragEnd)||void 0===_b||_b.call(_a,originalEvent)}}function asListOptions(modelProvider,options){return options&&Object.assign(Object.assign({},options),{identityProvider:options.identityProvider&&{getId:el=>options.identityProvider.getId(el.element)},dnd:options.dnd&&new TreeNodeListDragAndDrop(modelProvider,options.dnd),multipleSelectionController:options.multipleSelectionController&&{isSelectionSingleChangeEvent:e=>options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({},e),{element:e.element})),isSelectionRangeChangeEvent:e=>options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({},e),{element:e.element}))},accessibilityProvider:options.accessibilityProvider&&Object.assign(Object.assign({},options.accessibilityProvider),{getSetSize(node){const model=modelProvider(),ref=model.getNodeLocation(node),parentRef=model.getParentNodeLocation(ref);return model.getNode(parentRef).visibleChildrenCount},getPosInSet:node=>node.visibleChildIndex+1,isChecked:options.accessibilityProvider&&options.accessibilityProvider.isChecked?node=>options.accessibilityProvider.isChecked(node.element):void 0,getRole:options.accessibilityProvider&&options.accessibilityProvider.getRole?node=>options.accessibilityProvider.getRole(node.element):()=>"treeitem",getAriaLabel:e=>options.accessibilityProvider.getAriaLabel(e.element),getWidgetAriaLabel:()=>options.accessibilityProvider.getWidgetAriaLabel(),getWidgetRole:options.accessibilityProvider&&options.accessibilityProvider.getWidgetRole?()=>options.accessibilityProvider.getWidgetRole():()=>"tree",getAriaLevel:options.accessibilityProvider&&options.accessibilityProvider.getAriaLevel?node=>options.accessibilityProvider.getAriaLevel(node.element):node=>node.depth,getActiveDescendantId:options.accessibilityProvider.getActiveDescendantId&&(node=>options.accessibilityProvider.getActiveDescendantId(node.element))}),keyboardNavigationLabelProvider:options.keyboardNavigationLabelProvider&&Object.assign(Object.assign({},options.keyboardNavigationLabelProvider),{getKeyboardNavigationLabel:node=>options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element)})})}export class ComposedTreeDelegate{constructor(delegate){this.delegate=delegate}getHeight(element){return this.delegate.getHeight(element.element)}getTemplateId(element){return this.delegate.getTemplateId(element.element)}hasDynamicHeight(element){return!!this.delegate.hasDynamicHeight&&this.delegate.hasDynamicHeight(element.element)}setDynamicHeight(element,height){var _a,_b;null===(_b=(_a=this.delegate).setDynamicHeight)||void 0===_b||_b.call(_a,element.element,height)}}export var RenderIndentGuides;!function(RenderIndentGuides){RenderIndentGuides.None="none",RenderIndentGuides.OnHover="onHover",RenderIndentGuides.Always="always"}(RenderIndentGuides||(RenderIndentGuides={}));class EventCollection{constructor(onDidChange,_elements=[]){this._elements=_elements,this.disposables=new DisposableStore,this.onDidChange=Event.forEach(onDidChange,(elements=>this._elements=elements),this.disposables)}get elements(){return this._elements}dispose(){this.disposables.dispose()}}class TreeRenderer{constructor(renderer,modelProvider,onDidChangeCollapseState,activeNodes,options={}){var _a;this.renderer=renderer,this.modelProvider=modelProvider,this.activeNodes=activeNodes,this.renderedElements=new Map,this.renderedNodes=new Map,this.indent=TreeRenderer.DefaultIndent,this.hideTwistiesOfChildlessElements=!1,this.shouldRenderIndentGuides=!1,this.renderedIndentGuides=new SetMap,this.activeIndentNodes=new Set,this.indentGuidesDisposable=Disposable.None,this.disposables=new DisposableStore,this.templateId=renderer.templateId,this.updateOptions(options),Event.map(onDidChangeCollapseState,(e=>e.node))(this.onDidChangeNodeTwistieState,this,this.disposables),null===(_a=renderer.onDidChangeTwistieState)||void 0===_a||_a.call(renderer,this.onDidChangeTwistieState,this,this.disposables)}updateOptions(options={}){if(void 0!==options.indent&&(this.indent=clamp(options.indent,0,40)),void 0!==options.renderIndentGuides){const shouldRenderIndentGuides=options.renderIndentGuides!==RenderIndentGuides.None;if(shouldRenderIndentGuides!==this.shouldRenderIndentGuides&&(this.shouldRenderIndentGuides=shouldRenderIndentGuides,this.indentGuidesDisposable.dispose(),shouldRenderIndentGuides)){const disposables=new DisposableStore;this.activeNodes.onDidChange(this._onDidChangeActiveNodes,this,disposables),this.indentGuidesDisposable=disposables,this._onDidChangeActiveNodes(this.activeNodes.elements)}}void 0!==options.hideTwistiesOfChildlessElements&&(this.hideTwistiesOfChildlessElements=options.hideTwistiesOfChildlessElements)}renderTemplate(container){const el=append(container,$(".monaco-tl-row")),indent=append(el,$(".monaco-tl-indent")),twistie=append(el,$(".monaco-tl-twistie")),contents=append(el,$(".monaco-tl-contents")),templateData=this.renderer.renderTemplate(contents);return{container,indent,twistie,indentGuidesDisposable:Disposable.None,templateData}}renderElement(node,index,templateData,height){"number"==typeof height&&(this.renderedNodes.set(node,{templateData,height}),this.renderedElements.set(node.element,node));const indent=TreeRenderer.DefaultIndent+(node.depth-1)*this.indent;templateData.twistie.style.paddingLeft=`${indent}px`,templateData.indent.style.width=indent+this.indent-16+"px",this.renderTwistie(node,templateData),"number"==typeof height&&this.renderIndentGuides(node,templateData),this.renderer.renderElement(node,index,templateData.templateData,height)}disposeElement(node,index,templateData,height){var _a,_b;templateData.indentGuidesDisposable.dispose(),null===(_b=(_a=this.renderer).disposeElement)||void 0===_b||_b.call(_a,node,index,templateData.templateData,height),"number"==typeof height&&(this.renderedNodes.delete(node),this.renderedElements.delete(node.element))}disposeTemplate(templateData){this.renderer.disposeTemplate(templateData.templateData)}onDidChangeTwistieState(element){const node=this.renderedElements.get(element);node&&this.onDidChangeNodeTwistieState(node)}onDidChangeNodeTwistieState(node){const data=this.renderedNodes.get(node);data&&(this.renderTwistie(node,data.templateData),this._onDidChangeActiveNodes(this.activeNodes.elements),this.renderIndentGuides(node,data.templateData))}renderTwistie(node,templateData){templateData.twistie.classList.remove(...Codicon.treeItemExpanded.classNamesArray);let twistieRendered=!1;this.renderer.renderTwistie&&(twistieRendered=this.renderer.renderTwistie(node.element,templateData.twistie)),node.collapsible&&(!this.hideTwistiesOfChildlessElements||node.visibleChildrenCount>0)?(twistieRendered||templateData.twistie.classList.add(...Codicon.treeItemExpanded.classNamesArray),templateData.twistie.classList.add("collapsible"),templateData.twistie.classList.toggle("collapsed",node.collapsed)):templateData.twistie.classList.remove("collapsible","collapsed"),node.collapsible?templateData.container.setAttribute("aria-expanded",String(!node.collapsed)):templateData.container.removeAttribute("aria-expanded")}renderIndentGuides(target,templateData){if(clearNode(templateData.indent),templateData.indentGuidesDisposable.dispose(),!this.shouldRenderIndentGuides)return;const disposableStore=new DisposableStore,model=this.modelProvider();let node=target;for(;;){const ref=model.getNodeLocation(node),parentRef=model.getParentNodeLocation(ref);if(!parentRef)break;const parent=model.getNode(parentRef),guide=$(".indent-guide",{style:`width: ${this.indent}px`});this.activeIndentNodes.has(parent)&&guide.classList.add("active"),0===templateData.indent.childElementCount?templateData.indent.appendChild(guide):templateData.indent.insertBefore(guide,templateData.indent.firstElementChild),this.renderedIndentGuides.add(parent,guide),disposableStore.add(toDisposable((()=>this.renderedIndentGuides.delete(parent,guide)))),node=parent}templateData.indentGuidesDisposable=disposableStore}_onDidChangeActiveNodes(nodes){if(!this.shouldRenderIndentGuides)return;const set=new Set,model=this.modelProvider();nodes.forEach((node=>{const ref=model.getNodeLocation(node);try{const parentRef=model.getParentNodeLocation(ref);node.collapsible&&node.children.length>0&&!node.collapsed?set.add(node):parentRef&&set.add(model.getNode(parentRef))}catch(_a){}})),this.activeIndentNodes.forEach((node=>{set.has(node)||this.renderedIndentGuides.forEach(node,(line=>line.classList.remove("active")))})),set.forEach((node=>{this.activeIndentNodes.has(node)||this.renderedIndentGuides.forEach(node,(line=>line.classList.add("active")))})),this.activeIndentNodes=set}dispose(){this.renderedNodes.clear(),this.renderedElements.clear(),this.indentGuidesDisposable.dispose(),dispose(this.disposables)}}TreeRenderer.DefaultIndent=8;class FindFilter{constructor(tree,keyboardNavigationLabelProvider,_filter){this.tree=tree,this.keyboardNavigationLabelProvider=keyboardNavigationLabelProvider,this._filter=_filter,this._totalCount=0,this._matchCount=0,this._pattern="",this._lowercasePattern="",this.disposables=new DisposableStore,tree.onWillRefilter(this.reset,this,this.disposables)}get totalCount(){return this._totalCount}get matchCount(){return this._matchCount}filter(element,parentVisibility){let visibility=1;if(this._filter){const result=this._filter.filter(element,parentVisibility);if(visibility="boolean"==typeof result?result?1:0:isFilterResult(result)?getVisibleState(result.visibility):result,0===visibility)return!1}if(this._totalCount++,!this._pattern)return this._matchCount++,{data:FuzzyScore.Default,visibility};const label=this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element),labels=Array.isArray(label)?label:[label];for(const l of labels){const labelStr=l&&l.toString();if(void 0===labelStr)return{data:FuzzyScore.Default,visibility};const score=fuzzyScore(this._pattern,this._lowercasePattern,0,labelStr,labelStr.toLowerCase(),0,{firstMatchCanBeWeak:!0,boostFullMatch:!0});if(score)return this._matchCount++,1===labels.length?{data:score,visibility}:{data:{label:labelStr,score},visibility}}return this.tree.findMode===TreeFindMode.Filter?2:{data:FuzzyScore.Default,visibility}}reset(){this._totalCount=0,this._matchCount=0}dispose(){dispose(this.disposables)}}export class ModeToggle extends Toggle{constructor(opts){var _a;super({icon:Codicon.filter,title:localize("filter","Filter"),isChecked:null!==(_a=null==opts?void 0:opts.isChecked)&&void 0!==_a&&_a,inputActiveOptionBorder:null==opts?void 0:opts.inputActiveOptionBorder,inputActiveOptionForeground:null==opts?void 0:opts.inputActiveOptionForeground,inputActiveOptionBackground:null==opts?void 0:opts.inputActiveOptionBackground})}}export var TreeFindMode;!function(TreeFindMode){TreeFindMode[TreeFindMode.Highlight=0]="Highlight",TreeFindMode[TreeFindMode.Filter=1]="Filter"}(TreeFindMode||(TreeFindMode={}));class FindWidget extends Disposable{constructor(container,tree,contextViewProvider,mode,options){super(),this.tree=tree,this.elements=h(".monaco-tree-type-filter",[h(".monaco-tree-type-filter-grab.codicon.codicon-debug-gripper@grab",{tabIndex:0}),h(".monaco-tree-type-filter-input@findInput"),h(".monaco-tree-type-filter-actionbar@actionbar")]),this.width=0,this.right=0,this._onDidDisable=new Emitter,container.appendChild(this.elements.root),this._register(toDisposable((()=>container.removeChild(this.elements.root)))),this.modeToggle=this._register(new ModeToggle(Object.assign(Object.assign({},options),{isChecked:mode===TreeFindMode.Filter}))),this.onDidChangeMode=Event.map(this.modeToggle.onChange,(()=>this.modeToggle.checked?TreeFindMode.Filter:TreeFindMode.Highlight),this._store),this.findInput=this._register(new FindInput(this.elements.findInput,contextViewProvider,!1,{label:localize("type to search","Type to search"),additionalToggles:[this.modeToggle]})),this.actionbar=this._register(new ActionBar(this.elements.actionbar)),this.mode=mode;const emitter=this._register(new DomEmitter(this.findInput.inputBox.inputElement,"keydown")),onKeyDown=this._register(Event.chain(emitter.event)).map((e=>new StandardKeyboardEvent(e))).event;this._register(onKeyDown((e=>{if(18===e.keyCode)return e.preventDefault(),e.stopPropagation(),void this.tree.domFocus()})));const closeAction=this._register(new Action("close",localize("close","Close"),"codicon codicon-close",!0,(()=>this.dispose())));this.actionbar.push(closeAction,{icon:!0,label:!1});const onGrabMouseDown=this._register(new DomEmitter(this.elements.grab,"mousedown"));this._register(onGrabMouseDown.event((e=>{const disposables=new DisposableStore,onWindowMouseMove=disposables.add(new DomEmitter(window,"mousemove")),onWindowMouseUp=disposables.add(new DomEmitter(window,"mouseup")),startRight=this.right,startX=e.pageX;this.elements.grab.classList.add("grabbing");const update=e=>{const deltaX=e.pageX-startX;this.right=startRight-deltaX,this.layout()};disposables.add(onWindowMouseMove.event(update)),disposables.add(onWindowMouseUp.event((e=>{update(e),this.elements.grab.classList.remove("grabbing"),disposables.dispose()})))})));const onGrabKeyDown=this._register(Event.chain(this._register(new DomEmitter(this.elements.grab,"keydown")).event)).map((e=>new StandardKeyboardEvent(e))).event;this._register(onGrabKeyDown((e=>{let right;15===e.keyCode?right=Number.POSITIVE_INFINITY:17===e.keyCode?right=0:10===e.keyCode&&(right=0===this.right?Number.POSITIVE_INFINITY:0),void 0!==right&&(e.preventDefault(),e.stopPropagation(),this.right=right,this.layout())}))),this.onDidChangeValue=this.findInput.onDidChange,this.style(null!=options?options:{})}set mode(mode){this.modeToggle.checked=mode===TreeFindMode.Filter,this.findInput.inputBox.setPlaceHolder(mode===TreeFindMode.Filter?localize("type to filter","Type to filter"):localize("type to search","Type to search"))}style(styles){this.findInput.style(styles),styles.listFilterWidgetBackground&&(this.elements.root.style.backgroundColor=styles.listFilterWidgetBackground.toString()),styles.listFilterWidgetShadow&&(this.elements.root.style.boxShadow=`0 0 8px 2px ${styles.listFilterWidgetShadow}`)}layout(width=this.width){this.width=width,this.right=clamp(this.right,0,Math.max(0,width-212)),this.elements.root.style.right=`${this.right}px`}showMessage(message){this.findInput.showMessage(message)}clearMessage(){this.findInput.clearMessage()}dispose(){const _super=Object.create(null,{dispose:{get:()=>super.dispose}});return __awaiter(this,void 0,void 0,(function*(){this._onDidDisable.fire(),this.elements.root.classList.add("disabled"),yield timeout(300),_super.dispose.call(this)}))}}class FindController{constructor(tree,model,view,filter,contextViewProvider){var _a;this.tree=tree,this.view=view,this.filter=filter,this.contextViewProvider=contextViewProvider,this._pattern="",this.width=0,this._onDidChangeMode=new Emitter,this.onDidChangeMode=this._onDidChangeMode.event,this._onDidChangePattern=new Emitter,this._onDidChangeOpenState=new Emitter,this.onDidChangeOpenState=this._onDidChangeOpenState.event,this.enabledDisposables=new DisposableStore,this.disposables=new DisposableStore,this._mode=null!==(_a=tree.options.defaultFindMode)&&void 0!==_a?_a:TreeFindMode.Highlight,model.onDidSplice(this.onDidSpliceModel,this,this.disposables)}get pattern(){return this._pattern}get mode(){return this._mode}set mode(mode){mode!==this._mode&&(this._mode=mode,this.widget&&(this.widget.mode=this._mode),this.tree.refilter(),this.render(),this._onDidChangeMode.fire(mode))}onDidSpliceModel(){this.widget&&0!==this.pattern.length&&(this.tree.refilter(),this.render())}render(){var _a,_b;const noMatches=this.filter.totalCount>0&&0===this.filter.matchCount;this.pattern&&noMatches?null===(_a=this.widget)||void 0===_a||_a.showMessage({type:2,content:localize("not found","No elements found.")}):null===(_b=this.widget)||void 0===_b||_b.clearMessage()}shouldAllowFocus(node){return!this.widget||!this.pattern||this._mode===TreeFindMode.Filter||(this.filter.totalCount>0&&this.filter.matchCount<=1||!FuzzyScore.isDefault(node.filterData))}style(styles){var _a;this.styles=styles,null===(_a=this.widget)||void 0===_a||_a.style(styles)}layout(width){var _a;this.width=width,null===(_a=this.widget)||void 0===_a||_a.layout(width)}dispose(){this._onDidChangePattern.dispose(),this.enabledDisposables.dispose(),this.disposables.dispose()}}function asTreeMouseEvent(event){let target=TreeMouseEventTarget.Unknown;return hasParentWithClass(event.browserEvent.target,"monaco-tl-twistie","monaco-tl-row")?target=TreeMouseEventTarget.Twistie:hasParentWithClass(event.browserEvent.target,"monaco-tl-contents","monaco-tl-row")?target=TreeMouseEventTarget.Element:hasParentWithClass(event.browserEvent.target,"monaco-tree-type-filter","monaco-list")&&(target=TreeMouseEventTarget.Filter),{browserEvent:event.browserEvent,element:event.element?event.element.element:null,target}}function dfs(node,fn){fn(node),node.children.forEach((child=>dfs(child,fn)))}class Trait{constructor(getFirstViewElementWithTrait,identityProvider){this.getFirstViewElementWithTrait=getFirstViewElementWithTrait,this.identityProvider=identityProvider,this.nodes=[],this._onDidChange=new Emitter,this.onDidChange=this._onDidChange.event}get nodeSet(){return this._nodeSet||(this._nodeSet=this.createNodeSet()),this._nodeSet}set(nodes,browserEvent){!(null==browserEvent?void 0:browserEvent.__forceEvent)&&equals(this.nodes,nodes)||this._set(nodes,!1,browserEvent)}_set(nodes,silent,browserEvent){if(this.nodes=[...nodes],this.elements=void 0,this._nodeSet=void 0,!silent){const that=this;this._onDidChange.fire({get elements(){return that.get()},browserEvent})}}get(){return this.elements||(this.elements=this.nodes.map((node=>node.element))),[...this.elements]}getNodes(){return this.nodes}has(node){return this.nodeSet.has(node)}onDidModelSplice({insertedNodes,deletedNodes}){if(!this.identityProvider){const set=this.createNodeSet(),visit=node=>set.delete(node);return deletedNodes.forEach((node=>dfs(node,visit))),void this.set([...set.values()])}const deletedNodesIdSet=new Set,deletedNodesVisitor=node=>deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());deletedNodes.forEach((node=>dfs(node,deletedNodesVisitor)));const insertedNodesMap=new Map,insertedNodesVisitor=node=>insertedNodesMap.set(this.identityProvider.getId(node.element).toString(),node);insertedNodes.forEach((node=>dfs(node,insertedNodesVisitor)));const nodes=[];for(const node of this.nodes){const id=this.identityProvider.getId(node.element).toString();if(deletedNodesIdSet.has(id)){const insertedNode=insertedNodesMap.get(id);insertedNode&&nodes.push(insertedNode)}else nodes.push(node)}if(this.nodes.length>0&&0===nodes.length){const node=this.getFirstViewElementWithTrait();node&&nodes.push(node)}this._set(nodes,!0)}createNodeSet(){const set=new Set;for(const node of this.nodes)set.add(node);return set}}class TreeNodeListMouseController extends MouseController{constructor(list,tree){super(list),this.tree=tree}onViewPointer(e){if(isButton(e.browserEvent.target)||isInputElement(e.browserEvent.target)||isMonacoEditor(e.browserEvent.target))return;const node=e.element;if(!node)return super.onViewPointer(e);if(this.isSelectionRangeChangeEvent(e)||this.isSelectionSingleChangeEvent(e))return super.onViewPointer(e);const target=e.browserEvent.target,onTwistie=target.classList.contains("monaco-tl-twistie")||target.classList.contains("monaco-icon-label")&&target.classList.contains("folder-icon")&&e.browserEvent.offsetX<16;let expandOnlyOnTwistieClick=!1;if(expandOnlyOnTwistieClick="function"==typeof this.tree.expandOnlyOnTwistieClick?this.tree.expandOnlyOnTwistieClick(node.element):!!this.tree.expandOnlyOnTwistieClick,expandOnlyOnTwistieClick&&!onTwistie&&2!==e.browserEvent.detail)return super.onViewPointer(e);if(!this.tree.expandOnDoubleClick&&2===e.browserEvent.detail)return super.onViewPointer(e);if(node.collapsible){const model=this.tree.model,location=model.getNodeLocation(node),recursive=e.browserEvent.altKey;if(this.tree.setFocus([location]),model.setCollapsed(location,void 0,recursive),expandOnlyOnTwistieClick&&onTwistie)return}super.onViewPointer(e)}onDoubleClick(e){!e.browserEvent.target.classList.contains("monaco-tl-twistie")&&this.tree.expandOnDoubleClick&&super.onDoubleClick(e)}}class TreeNodeList extends List{constructor(user,container,virtualDelegate,renderers,focusTrait,selectionTrait,anchorTrait,options){super(user,container,virtualDelegate,renderers,options),this.focusTrait=focusTrait,this.selectionTrait=selectionTrait,this.anchorTrait=anchorTrait}createMouseController(options){return new TreeNodeListMouseController(this,options.tree)}splice(start,deleteCount,elements=[]){if(super.splice(start,deleteCount,elements),0===elements.length)return;const additionalFocus=[],additionalSelection=[];let anchor;elements.forEach(((node,index)=>{this.focusTrait.has(node)&&additionalFocus.push(start+index),this.selectionTrait.has(node)&&additionalSelection.push(start+index),this.anchorTrait.has(node)&&(anchor=start+index)})),additionalFocus.length>0&&super.setFocus(distinct([...super.getFocus(),...additionalFocus])),additionalSelection.length>0&&super.setSelection(distinct([...super.getSelection(),...additionalSelection])),"number"==typeof anchor&&super.setAnchor(anchor)}setFocus(indexes,browserEvent,fromAPI=!1){super.setFocus(indexes,browserEvent),fromAPI||this.focusTrait.set(indexes.map((i=>this.element(i))),browserEvent)}setSelection(indexes,browserEvent,fromAPI=!1){super.setSelection(indexes,browserEvent),fromAPI||this.selectionTrait.set(indexes.map((i=>this.element(i))),browserEvent)}setAnchor(index,fromAPI=!1){super.setAnchor(index),fromAPI||(void 0===index?this.anchorTrait.set([]):this.anchorTrait.set([this.element(index)]))}}export class AbstractTree{constructor(_user,container,delegate,renderers,_options={}){var _a;this._user=_user,this._options=_options,this.eventBufferer=new EventBufferer,this.onDidChangeFindOpenState=Event.None,this.disposables=new DisposableStore,this._onWillRefilter=new Emitter,this.onWillRefilter=this._onWillRefilter.event,this._onDidUpdateOptions=new Emitter;const treeDelegate=new ComposedTreeDelegate(delegate),onDidChangeCollapseStateRelay=new Relay,onDidChangeActiveNodes=new Relay,activeNodes=this.disposables.add(new EventCollection(onDidChangeActiveNodes.event));this.renderers=renderers.map((r=>new TreeRenderer(r,(()=>this.model),onDidChangeCollapseStateRelay.event,activeNodes,_options)));for(const r of this.renderers)this.disposables.add(r);let filter;_options.keyboardNavigationLabelProvider&&(filter=new FindFilter(this,_options.keyboardNavigationLabelProvider,_options.filter),_options=Object.assign(Object.assign({},_options),{filter}),this.disposables.add(filter)),this.focus=new Trait((()=>this.view.getFocusedElements()[0]),_options.identityProvider),this.selection=new Trait((()=>this.view.getSelectedElements()[0]),_options.identityProvider),this.anchor=new Trait((()=>this.view.getAnchorElement()),_options.identityProvider),this.view=new TreeNodeList(_user,container,treeDelegate,this.renderers,this.focus,this.selection,this.anchor,Object.assign(Object.assign({},asListOptions((()=>this.model),_options)),{tree:this})),this.model=this.createModel(_user,this.view,_options),onDidChangeCollapseStateRelay.input=this.model.onDidChangeCollapseState;const onDidModelSplice=Event.forEach(this.model.onDidSplice,(e=>{this.eventBufferer.bufferEvents((()=>{this.focus.onDidModelSplice(e),this.selection.onDidModelSplice(e)}))}),this.disposables);if(onDidModelSplice((()=>null),null,this.disposables),onDidChangeActiveNodes.input=Event.chain(Event.any(onDidModelSplice,this.focus.onDidChange,this.selection.onDidChange)).debounce((()=>null),0).map((()=>{const set=new Set;for(const node of this.focus.getNodes())set.add(node);for(const node of this.selection.getNodes())set.add(node);return[...set.values()]})).event,!1!==_options.keyboardSupport){const onKeyDown=Event.chain(this.view.onKeyDown).filter((e=>!isInputElement(e.target))).map((e=>new StandardKeyboardEvent(e)));onKeyDown.filter((e=>15===e.keyCode)).on(this.onLeftArrow,this,this.disposables),onKeyDown.filter((e=>17===e.keyCode)).on(this.onRightArrow,this,this.disposables),onKeyDown.filter((e=>10===e.keyCode)).on(this.onSpace,this,this.disposables)}(null===(_a=_options.findWidgetEnabled)||void 0===_a||_a)&&_options.keyboardNavigationLabelProvider&&_options.contextViewProvider?(this.findController=new FindController(this,this.model,this.view,filter,_options.contextViewProvider),this.focusNavigationFilter=node=>this.findController.shouldAllowFocus(node),this.onDidChangeFindOpenState=this.findController.onDidChangeOpenState,this.disposables.add(this.findController),this.onDidChangeFindMode=this.findController.onDidChangeMode):this.onDidChangeFindMode=Event.None,this.styleElement=createStyleSheet(this.view.getHTMLElement()),this.getHTMLElement().classList.toggle("always",this._options.renderIndentGuides===RenderIndentGuides.Always)}get onDidChangeFocus(){return this.eventBufferer.wrapEvent(this.focus.onDidChange)}get onDidChangeSelection(){return this.eventBufferer.wrapEvent(this.selection.onDidChange)}get onMouseDblClick(){return Event.filter(Event.map(this.view.onMouseDblClick,asTreeMouseEvent),(e=>e.target!==TreeMouseEventTarget.Filter))}get onPointer(){return Event.map(this.view.onPointer,asTreeMouseEvent)}get onDidFocus(){return this.view.onDidFocus}get onDidChangeModel(){return Event.signal(this.model.onDidSplice)}get onDidChangeCollapseState(){return this.model.onDidChangeCollapseState}get findMode(){var _a,_b;return null!==(_b=null===(_a=this.findController)||void 0===_a?void 0:_a.mode)&&void 0!==_b?_b:TreeFindMode.Highlight}set findMode(findMode){this.findController&&(this.findController.mode=findMode)}get expandOnDoubleClick(){return void 0===this._options.expandOnDoubleClick||this._options.expandOnDoubleClick}get expandOnlyOnTwistieClick(){return void 0===this._options.expandOnlyOnTwistieClick||this._options.expandOnlyOnTwistieClick}get onDidDispose(){return this.view.onDidDispose}updateOptions(optionsUpdate={}){this._options=Object.assign(Object.assign({},this._options),optionsUpdate);for(const renderer of this.renderers)renderer.updateOptions(optionsUpdate);this.view.updateOptions(this._options),this._onDidUpdateOptions.fire(this._options),this.getHTMLElement().classList.toggle("always",this._options.renderIndentGuides===RenderIndentGuides.Always)}get options(){return this._options}getHTMLElement(){return this.view.getHTMLElement()}get scrollTop(){return this.view.scrollTop}set scrollTop(scrollTop){this.view.scrollTop=scrollTop}domFocus(){this.view.domFocus()}layout(height,width){var _a;this.view.layout(height,width),isNumber(width)&&(null===(_a=this.findController)||void 0===_a||_a.layout(width))}style(styles){var _a;const suffix=`.${this.view.domId}`,content=[];styles.treeIndentGuidesStroke&&(content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeIndentGuidesStroke.transparent(.4)}; }`),content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`)),this.styleElement.textContent=content.join("\n"),null===(_a=this.findController)||void 0===_a||_a.style(styles),this.view.style(styles)}getParentElement(location){const parentRef=this.model.getParentNodeLocation(location);return this.model.getNode(parentRef).element}getFirstElementChild(location){return this.model.getFirstElementChild(location)}getNode(location){return this.model.getNode(location)}collapse(location,recursive=!1){return this.model.setCollapsed(location,!0,recursive)}expand(location,recursive=!1){return this.model.setCollapsed(location,!1,recursive)}isCollapsible(location){return this.model.isCollapsible(location)}setCollapsible(location,collapsible){return this.model.setCollapsible(location,collapsible)}isCollapsed(location){return this.model.isCollapsed(location)}refilter(){this._onWillRefilter.fire(void 0),this.model.refilter()}setSelection(elements,browserEvent){const nodes=elements.map((e=>this.model.getNode(e)));this.selection.set(nodes,browserEvent);const indexes=elements.map((e=>this.model.getListIndex(e))).filter((i=>i>-1));this.view.setSelection(indexes,browserEvent,!0)}getSelection(){return this.selection.get()}setFocus(elements,browserEvent){const nodes=elements.map((e=>this.model.getNode(e)));this.focus.set(nodes,browserEvent);const indexes=elements.map((e=>this.model.getListIndex(e))).filter((i=>i>-1));this.view.setFocus(indexes,browserEvent,!0)}getFocus(){return this.focus.get()}reveal(location,relativeTop){this.model.expandTo(location);const index=this.model.getListIndex(location);-1!==index&&this.view.reveal(index,relativeTop)}onLeftArrow(e){e.preventDefault(),e.stopPropagation();const nodes=this.view.getFocusedElements();if(0===nodes.length)return;const node=nodes[0],location=this.model.getNodeLocation(node);if(!this.model.setCollapsed(location,!0)){const parentLocation=this.model.getParentNodeLocation(location);if(!parentLocation)return;const parentListIndex=this.model.getListIndex(parentLocation);this.view.reveal(parentListIndex),this.view.setFocus([parentListIndex])}}onRightArrow(e){e.preventDefault(),e.stopPropagation();const nodes=this.view.getFocusedElements();if(0===nodes.length)return;const node=nodes[0],location=this.model.getNodeLocation(node);if(!this.model.setCollapsed(location,!1)){if(!node.children.some((child=>child.visible)))return;const[focusedIndex]=this.view.getFocus(),firstChildIndex=focusedIndex+1;this.view.reveal(firstChildIndex),this.view.setFocus([firstChildIndex])}}onSpace(e){e.preventDefault(),e.stopPropagation();const nodes=this.view.getFocusedElements();if(0===nodes.length)return;const node=nodes[0],location=this.model.getNodeLocation(node),recursive=e.browserEvent.altKey;this.model.setCollapsed(location,void 0,recursive)}dispose(){dispose(this.disposables),this.view.dispose()}}