var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r};import{isFirefox}from"../../browser.js";import{DataTransfers,StaticDND}from"../../dnd.js";import{$,addDisposableListener,animate,getContentHeight,getContentWidth,getTopLeftOffset,scheduleAtNextAnimationFrame}from"../../dom.js";import{DomEmitter}from"../../event.js";import{EventType as TouchEventType,Gesture}from"../../touch.js";import{SmoothScrollableElement}from"../scrollbar/scrollableElement.js";import{distinct,equals}from"../../../common/arrays.js";import{Delayer,disposableTimeout}from"../../../common/async.js";import{memoize}from"../../../common/decorators.js";import{Emitter,Event}from"../../../common/event.js";import{Disposable,DisposableStore,dispose,toDisposable}from"../../../common/lifecycle.js";import{Range}from"../../../common/range.js";import{Scrollable}from"../../../common/scrollable.js";import{RangeMap,shift}from"./rangeMap.js";import{RowCache}from"./rowCache.js";const DefaultOptions={useShadows:!0,verticalScrollMode:1,setRowLineHeight:!0,setRowHeight:!0,supportDynamicHeights:!1,dnd:{getDragElements:e=>[e],getDragURI:()=>null,onDragStart(){},onDragOver:()=>!1,drop(){}},horizontalScrolling:!1,transformOptimization:!0,alwaysConsumeMouseWheel:!0};export class ElementsDragAndDropData{constructor(elements){this.elements=elements}update(){}getData(){return this.elements}}export class ExternalElementsDragAndDropData{constructor(elements){this.elements=elements}update(){}getData(){return this.elements}}export class NativeDragAndDropData{constructor(){this.types=[],this.files=[]}update(dataTransfer){if(dataTransfer.types&&this.types.splice(0,this.types.length,...dataTransfer.types),dataTransfer.files){this.files.splice(0,this.files.length);for(let i=0;i<dataTransfer.files.length;i++){const file=dataTransfer.files.item(i);file&&(file.size||file.type)&&this.files.push(file)}}}getData(){return{types:this.types,files:this.files}}}function equalsDragFeedback(f1,f2){return Array.isArray(f1)&&Array.isArray(f2)?equals(f1,f2):f1===f2}class ListViewAccessibilityProvider{constructor(accessibilityProvider){(null==accessibilityProvider?void 0:accessibilityProvider.getSetSize)?this.getSetSize=accessibilityProvider.getSetSize.bind(accessibilityProvider):this.getSetSize=(e,i,l)=>l,(null==accessibilityProvider?void 0:accessibilityProvider.getPosInSet)?this.getPosInSet=accessibilityProvider.getPosInSet.bind(accessibilityProvider):this.getPosInSet=(e,i)=>i+1,(null==accessibilityProvider?void 0:accessibilityProvider.getRole)?this.getRole=accessibilityProvider.getRole.bind(accessibilityProvider):this.getRole=_=>"listitem",(null==accessibilityProvider?void 0:accessibilityProvider.isChecked)?this.isChecked=accessibilityProvider.isChecked.bind(accessibilityProvider):this.isChecked=_=>{}}}export class ListView{constructor(container,virtualDelegate,renderers,options=DefaultOptions){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;if(this.virtualDelegate=virtualDelegate,this.domId="list_id_"+ ++ListView.InstanceCount,this.renderers=new Map,this.renderWidth=0,this._scrollHeight=0,this.scrollableElementUpdateDisposable=null,this.scrollableElementWidthDelayer=new Delayer(50),this.splicing=!1,this.dragOverAnimationStopDisposable=Disposable.None,this.dragOverMouseY=0,this.canDrop=!1,this.currentDragFeedbackDisposable=Disposable.None,this.onDragLeaveTimeout=Disposable.None,this.disposables=new DisposableStore,this._onDidChangeContentHeight=new Emitter,this._horizontalScrolling=!1,options.horizontalScrolling&&options.supportDynamicHeights)throw new Error("Horizontal scrolling and dynamic heights not supported simultaneously");this.items=[],this.itemId=0,this.rangeMap=new RangeMap;for(const renderer of renderers)this.renderers.set(renderer.templateId,renderer);this.cache=this.disposables.add(new RowCache(this.renderers)),this.lastRenderTop=0,this.lastRenderHeight=0,this.domNode=document.createElement("div"),this.domNode.className="monaco-list",this.domNode.classList.add(this.domId),this.domNode.tabIndex=0,this.domNode.classList.toggle("mouse-support","boolean"!=typeof options.mouseSupport||options.mouseSupport),this._horizontalScrolling=null!==(_a=options.horizontalScrolling)&&void 0!==_a?_a:DefaultOptions.horizontalScrolling,this.domNode.classList.toggle("horizontal-scrolling",this._horizontalScrolling),this.additionalScrollHeight=void 0===options.additionalScrollHeight?0:options.additionalScrollHeight,this.accessibilityProvider=new ListViewAccessibilityProvider(options.accessibilityProvider),this.rowsContainer=document.createElement("div"),this.rowsContainer.className="monaco-list-rows";(null!==(_b=options.transformOptimization)&&void 0!==_b?_b:DefaultOptions.transformOptimization)&&(this.rowsContainer.style.transform="translate3d(0px, 0px, 0px)"),this.disposables.add(Gesture.addTarget(this.rowsContainer)),this.scrollable=new Scrollable({forceIntegerValues:!0,smoothScrollDuration:null!==(_c=options.smoothScrolling)&&void 0!==_c&&_c?125:0,scheduleAtNextAnimationFrame:cb=>scheduleAtNextAnimationFrame(cb)}),this.scrollableElement=this.disposables.add(new SmoothScrollableElement(this.rowsContainer,{alwaysConsumeMouseWheel:null!==(_d=options.alwaysConsumeMouseWheel)&&void 0!==_d?_d:DefaultOptions.alwaysConsumeMouseWheel,horizontal:1,vertical:null!==(_e=options.verticalScrollMode)&&void 0!==_e?_e:DefaultOptions.verticalScrollMode,useShadows:null!==(_f=options.useShadows)&&void 0!==_f?_f:DefaultOptions.useShadows,mouseWheelScrollSensitivity:options.mouseWheelScrollSensitivity,fastScrollSensitivity:options.fastScrollSensitivity},this.scrollable)),this.domNode.appendChild(this.scrollableElement.getDomNode()),container.appendChild(this.domNode),this.scrollableElement.onScroll(this.onScroll,this,this.disposables),this.disposables.add(addDisposableListener(this.rowsContainer,TouchEventType.Change,(e=>this.onTouchChange(e)))),this.disposables.add(addDisposableListener(this.scrollableElement.getDomNode(),"scroll",(e=>e.target.scrollTop=0))),this.disposables.add(addDisposableListener(this.domNode,"dragover",(e=>this.onDragOver(this.toDragEvent(e))))),this.disposables.add(addDisposableListener(this.domNode,"drop",(e=>this.onDrop(this.toDragEvent(e))))),this.disposables.add(addDisposableListener(this.domNode,"dragleave",(e=>this.onDragLeave(this.toDragEvent(e))))),this.disposables.add(addDisposableListener(this.domNode,"dragend",(e=>this.onDragEnd(e)))),this.setRowLineHeight=null!==(_g=options.setRowLineHeight)&&void 0!==_g?_g:DefaultOptions.setRowLineHeight,this.setRowHeight=null!==(_h=options.setRowHeight)&&void 0!==_h?_h:DefaultOptions.setRowHeight,this.supportDynamicHeights=null!==(_j=options.supportDynamicHeights)&&void 0!==_j?_j:DefaultOptions.supportDynamicHeights,this.dnd=null!==(_k=options.dnd)&&void 0!==_k?_k:DefaultOptions.dnd,this.layout()}get contentHeight(){return this.rangeMap.size}get horizontalScrolling(){return this._horizontalScrolling}set horizontalScrolling(value){if(value!==this._horizontalScrolling){if(value&&this.supportDynamicHeights)throw new Error("Horizontal scrolling and dynamic heights not supported simultaneously");if(this._horizontalScrolling=value,this.domNode.classList.toggle("horizontal-scrolling",this._horizontalScrolling),this._horizontalScrolling){for(const item of this.items)this.measureItemWidth(item);this.updateScrollWidth(),this.scrollableElement.setScrollDimensions({width:getContentWidth(this.domNode)}),this.rowsContainer.style.width=`${Math.max(this.scrollWidth||0,this.renderWidth)}px`}else this.scrollableElementWidthDelayer.cancel(),this.scrollableElement.setScrollDimensions({width:this.renderWidth,scrollWidth:this.renderWidth}),this.rowsContainer.style.width=""}}updateOptions(options){void 0!==options.additionalScrollHeight&&(this.additionalScrollHeight=options.additionalScrollHeight,this.scrollableElement.setScrollDimensions({scrollHeight:this.scrollHeight})),void 0!==options.smoothScrolling&&this.scrollable.setSmoothScrollDuration(options.smoothScrolling?125:0),void 0!==options.horizontalScrolling&&(this.horizontalScrolling=options.horizontalScrolling),void 0!==options.mouseWheelScrollSensitivity&&this.scrollableElement.updateOptions({mouseWheelScrollSensitivity:options.mouseWheelScrollSensitivity}),void 0!==options.fastScrollSensitivity&&this.scrollableElement.updateOptions({fastScrollSensitivity:options.fastScrollSensitivity})}splice(start,deleteCount,elements=[]){if(this.splicing)throw new Error("Can't run recursive splices.");this.splicing=!0;try{return this._splice(start,deleteCount,elements)}finally{this.splicing=!1,this._onDidChangeContentHeight.fire(this.contentHeight)}}_splice(start,deleteCount,elements=[]){const previousRenderRange=this.getRenderRange(this.lastRenderTop,this.lastRenderHeight),deleteRange={start,end:start+deleteCount},removeRange=Range.intersect(previousRenderRange,deleteRange),rowsToDispose=new Map;for(let i=removeRange.end-1;i>=removeRange.start;i--){const item=this.items[i];if(item.dragStartDisposable.dispose(),item.checkedDisposable.dispose(),item.row){let rows=rowsToDispose.get(item.templateId);rows||(rows=[],rowsToDispose.set(item.templateId,rows));const renderer=this.renderers.get(item.templateId);renderer&&renderer.disposeElement&&renderer.disposeElement(item.element,i,item.row.templateData,item.size),rows.push(item.row)}item.row=null}const previousRestRange={start:start+deleteCount,end:this.items.length},previousRenderedRestRange=Range.intersect(previousRestRange,previousRenderRange),previousUnrenderedRestRanges=Range.relativeComplement(previousRestRange,previousRenderRange),inserted=elements.map((element=>({id:String(this.itemId++),element,templateId:this.virtualDelegate.getTemplateId(element),size:this.virtualDelegate.getHeight(element),width:void 0,hasDynamicHeight:!!this.virtualDelegate.hasDynamicHeight&&this.virtualDelegate.hasDynamicHeight(element),lastDynamicHeightWidth:void 0,row:null,uri:void 0,dropTarget:!1,dragStartDisposable:Disposable.None,checkedDisposable:Disposable.None})));let deleted;0===start&&deleteCount>=this.items.length?(this.rangeMap=new RangeMap,this.rangeMap.splice(0,0,inserted),deleted=this.items,this.items=inserted):(this.rangeMap.splice(start,deleteCount,inserted),deleted=this.items.splice(start,deleteCount,...inserted));const delta=elements.length-deleteCount,renderRange=this.getRenderRange(this.lastRenderTop,this.lastRenderHeight),renderedRestRange=shift(previousRenderedRestRange,delta),updateRange=Range.intersect(renderRange,renderedRestRange);for(let i=updateRange.start;i<updateRange.end;i++)this.updateItemInDOM(this.items[i],i);const removeRanges=Range.relativeComplement(renderedRestRange,renderRange);for(const range of removeRanges)for(let i=range.start;i<range.end;i++)this.removeItemFromDOM(i);const unrenderedRestRanges=previousUnrenderedRestRanges.map((r=>shift(r,delta))),insertRanges=[{start,end:start+elements.length},...unrenderedRestRanges].map((r=>Range.intersect(renderRange,r))),beforeElement=this.getNextToLastElement(insertRanges);for(const range of insertRanges)for(let i=range.start;i<range.end;i++){const item=this.items[i],rows=rowsToDispose.get(item.templateId),row=null==rows?void 0:rows.pop();this.insertItemInDOM(i,beforeElement,row)}for(const rows of rowsToDispose.values())for(const row of rows)this.cache.release(row);return this.eventuallyUpdateScrollDimensions(),this.supportDynamicHeights&&this._rerender(this.scrollTop,this.renderHeight),deleted.map((i=>i.element))}eventuallyUpdateScrollDimensions(){this._scrollHeight=this.contentHeight,this.rowsContainer.style.height=`${this._scrollHeight}px`,this.scrollableElementUpdateDisposable||(this.scrollableElementUpdateDisposable=scheduleAtNextAnimationFrame((()=>{this.scrollableElement.setScrollDimensions({scrollHeight:this.scrollHeight}),this.updateScrollWidth(),this.scrollableElementUpdateDisposable=null})))}eventuallyUpdateScrollWidth(){this.horizontalScrolling?this.scrollableElementWidthDelayer.trigger((()=>this.updateScrollWidth())):this.scrollableElementWidthDelayer.cancel()}updateScrollWidth(){if(!this.horizontalScrolling)return;let scrollWidth=0;for(const item of this.items)void 0!==item.width&&(scrollWidth=Math.max(scrollWidth,item.width));this.scrollWidth=scrollWidth,this.scrollableElement.setScrollDimensions({scrollWidth:0===scrollWidth?0:scrollWidth+10})}rerender(){if(this.supportDynamicHeights){for(const item of this.items)item.lastDynamicHeightWidth=void 0;this._rerender(this.lastRenderTop,this.lastRenderHeight)}}get length(){return this.items.length}get renderHeight(){return this.scrollableElement.getScrollDimensions().height}element(index){return this.items[index].element}domElement(index){const row=this.items[index].row;return row&&row.domNode}elementHeight(index){return this.items[index].size}elementTop(index){return this.rangeMap.positionAt(index)}indexAt(position){return this.rangeMap.indexAt(position)}indexAfter(position){return this.rangeMap.indexAfter(position)}layout(height,width){const scrollDimensions={height:"number"==typeof height?height:getContentHeight(this.domNode)};this.scrollableElementUpdateDisposable&&(this.scrollableElementUpdateDisposable.dispose(),this.scrollableElementUpdateDisposable=null,scrollDimensions.scrollHeight=this.scrollHeight),this.scrollableElement.setScrollDimensions(scrollDimensions),void 0!==width&&(this.renderWidth=width,this.supportDynamicHeights&&this._rerender(this.scrollTop,this.renderHeight)),this.horizontalScrolling&&this.scrollableElement.setScrollDimensions({width:"number"==typeof width?width:getContentWidth(this.domNode)})}render(previousRenderRange,renderTop,renderHeight,renderLeft,scrollWidth,updateItemsInDOM=!1){const renderRange=this.getRenderRange(renderTop,renderHeight),rangesToInsert=Range.relativeComplement(renderRange,previousRenderRange),rangesToRemove=Range.relativeComplement(previousRenderRange,renderRange),beforeElement=this.getNextToLastElement(rangesToInsert);if(updateItemsInDOM){const rangesToUpdate=Range.intersect(previousRenderRange,renderRange);for(let i=rangesToUpdate.start;i<rangesToUpdate.end;i++)this.updateItemInDOM(this.items[i],i)}for(const range of rangesToInsert)for(let i=range.start;i<range.end;i++)this.insertItemInDOM(i,beforeElement);for(const range of rangesToRemove)for(let i=range.start;i<range.end;i++)this.removeItemFromDOM(i);void 0!==renderLeft&&(this.rowsContainer.style.left=`-${renderLeft}px`),this.rowsContainer.style.top=`-${renderTop}px`,this.horizontalScrolling&&void 0!==scrollWidth&&(this.rowsContainer.style.width=`${Math.max(scrollWidth,this.renderWidth)}px`),this.lastRenderTop=renderTop,this.lastRenderHeight=renderHeight}insertItemInDOM(index,beforeElement,row){const item=this.items[index];item.row||(item.row=null!=row?row:this.cache.alloc(item.templateId));const role=this.accessibilityProvider.getRole(item.element)||"listitem";item.row.domNode.setAttribute("role",role);const checked=this.accessibilityProvider.isChecked(item.element);if("boolean"==typeof checked)item.row.domNode.setAttribute("aria-checked",String(!!checked));else if(checked){const update=checked=>item.row.domNode.setAttribute("aria-checked",String(!!checked));update(checked.value),item.checkedDisposable=checked.onDidChange(update)}item.row.domNode.parentElement||(beforeElement?this.rowsContainer.insertBefore(item.row.domNode,beforeElement):this.rowsContainer.appendChild(item.row.domNode)),this.updateItemInDOM(item,index);const renderer=this.renderers.get(item.templateId);if(!renderer)throw new Error(`No renderer found for template id ${item.templateId}`);null==renderer||renderer.renderElement(item.element,index,item.row.templateData,item.size);const uri=this.dnd.getDragURI(item.element);item.dragStartDisposable.dispose(),item.row.domNode.draggable=!!uri,uri&&(item.dragStartDisposable=addDisposableListener(item.row.domNode,"dragstart",(event=>this.onDragStart(item.element,uri,event)))),this.horizontalScrolling&&(this.measureItemWidth(item),this.eventuallyUpdateScrollWidth())}measureItemWidth(item){if(!item.row||!item.row.domNode)return;item.row.domNode.style.width=isFirefox?"-moz-fit-content":"fit-content",item.width=getContentWidth(item.row.domNode);const style=window.getComputedStyle(item.row.domNode);style.paddingLeft&&(item.width+=parseFloat(style.paddingLeft)),style.paddingRight&&(item.width+=parseFloat(style.paddingRight)),item.row.domNode.style.width=""}updateItemInDOM(item,index){item.row.domNode.style.top=`${this.elementTop(index)}px`,this.setRowHeight&&(item.row.domNode.style.height=`${item.size}px`),this.setRowLineHeight&&(item.row.domNode.style.lineHeight=`${item.size}px`),item.row.domNode.setAttribute("data-index",`${index}`),item.row.domNode.setAttribute("data-last-element",index===this.length-1?"true":"false"),item.row.domNode.setAttribute("data-parity",index%2==0?"even":"odd"),item.row.domNode.setAttribute("aria-setsize",String(this.accessibilityProvider.getSetSize(item.element,index,this.length))),item.row.domNode.setAttribute("aria-posinset",String(this.accessibilityProvider.getPosInSet(item.element,index))),item.row.domNode.setAttribute("id",this.getElementDomId(index)),item.row.domNode.classList.toggle("drop-target",item.dropTarget)}removeItemFromDOM(index){const item=this.items[index];if(item.dragStartDisposable.dispose(),item.checkedDisposable.dispose(),item.row){const renderer=this.renderers.get(item.templateId);renderer&&renderer.disposeElement&&renderer.disposeElement(item.element,index,item.row.templateData,item.size),this.cache.release(item.row),item.row=null}this.horizontalScrolling&&this.eventuallyUpdateScrollWidth()}getScrollTop(){return this.scrollableElement.getScrollPosition().scrollTop}setScrollTop(scrollTop,reuseAnimation){this.scrollableElementUpdateDisposable&&(this.scrollableElementUpdateDisposable.dispose(),this.scrollableElementUpdateDisposable=null,this.scrollableElement.setScrollDimensions({scrollHeight:this.scrollHeight})),this.scrollableElement.setScrollPosition({scrollTop,reuseAnimation})}get scrollTop(){return this.getScrollTop()}set scrollTop(scrollTop){this.setScrollTop(scrollTop)}get scrollHeight(){return this._scrollHeight+(this.horizontalScrolling?10:0)+this.additionalScrollHeight}get onMouseClick(){return Event.map(this.disposables.add(new DomEmitter(this.domNode,"click")).event,(e=>this.toMouseEvent(e)),this.disposables)}get onMouseDblClick(){return Event.map(this.disposables.add(new DomEmitter(this.domNode,"dblclick")).event,(e=>this.toMouseEvent(e)),this.disposables)}get onMouseMiddleClick(){return Event.filter(Event.map(this.disposables.add(new DomEmitter(this.domNode,"auxclick")).event,(e=>this.toMouseEvent(e)),this.disposables),(e=>1===e.browserEvent.button),this.disposables)}get onMouseDown(){return Event.map(this.disposables.add(new DomEmitter(this.domNode,"mousedown")).event,(e=>this.toMouseEvent(e)),this.disposables)}get onMouseOver(){return Event.map(this.disposables.add(new DomEmitter(this.domNode,"mouseover")).event,(e=>this.toMouseEvent(e)),this.disposables)}get onContextMenu(){return Event.any(Event.map(this.disposables.add(new DomEmitter(this.domNode,"contextmenu")).event,(e=>this.toMouseEvent(e)),this.disposables),Event.map(this.disposables.add(new DomEmitter(this.domNode,TouchEventType.Contextmenu)).event,(e=>this.toGestureEvent(e)),this.disposables))}get onTouchStart(){return Event.map(this.disposables.add(new DomEmitter(this.domNode,"touchstart")).event,(e=>this.toTouchEvent(e)),this.disposables)}get onTap(){return Event.map(this.disposables.add(new DomEmitter(this.rowsContainer,TouchEventType.Tap)).event,(e=>this.toGestureEvent(e)),this.disposables)}toMouseEvent(browserEvent){const index=this.getItemIndexFromEventTarget(browserEvent.target||null),item=void 0===index?void 0:this.items[index];return{browserEvent,index,element:item&&item.element}}toTouchEvent(browserEvent){const index=this.getItemIndexFromEventTarget(browserEvent.target||null),item=void 0===index?void 0:this.items[index];return{browserEvent,index,element:item&&item.element}}toGestureEvent(browserEvent){const index=this.getItemIndexFromEventTarget(browserEvent.initialTarget||null),item=void 0===index?void 0:this.items[index];return{browserEvent,index,element:item&&item.element}}toDragEvent(browserEvent){const index=this.getItemIndexFromEventTarget(browserEvent.target||null),item=void 0===index?void 0:this.items[index];return{browserEvent,index,element:item&&item.element}}onScroll(e){try{const previousRenderRange=this.getRenderRange(this.lastRenderTop,this.lastRenderHeight);this.render(previousRenderRange,e.scrollTop,e.height,e.scrollLeft,e.scrollWidth),this.supportDynamicHeights&&this._rerender(e.scrollTop,e.height,e.inSmoothScrolling)}catch(err){throw console.error("Got bad scroll event:",e),err}}onTouchChange(event){event.preventDefault(),event.stopPropagation(),this.scrollTop-=event.translationY}onDragStart(element,uri,event){var _a,_b;if(!event.dataTransfer)return;const elements=this.dnd.getDragElements(element);if(event.dataTransfer.effectAllowed="copyMove",event.dataTransfer.setData(DataTransfers.TEXT,uri),event.dataTransfer.setDragImage){let label;this.dnd.getDragLabel&&(label=this.dnd.getDragLabel(elements,event)),void 0===label&&(label=String(elements.length));const dragImage=$(".monaco-drag-image");dragImage.textContent=label,document.body.appendChild(dragImage),event.dataTransfer.setDragImage(dragImage,-10,-10),setTimeout((()=>document.body.removeChild(dragImage)),0)}this.currentDragData=new ElementsDragAndDropData(elements),StaticDND.CurrentDragAndDropData=new ExternalElementsDragAndDropData(elements),null===(_b=(_a=this.dnd).onDragStart)||void 0===_b||_b.call(_a,this.currentDragData,event)}onDragOver(event){var _a;if(event.browserEvent.preventDefault(),this.onDragLeaveTimeout.dispose(),StaticDND.CurrentDragAndDropData&&"vscode-ui"===StaticDND.CurrentDragAndDropData.getData())return!1;if(this.setupDragAndDropScrollTopAnimation(event.browserEvent),!event.browserEvent.dataTransfer)return!1;if(!this.currentDragData)if(StaticDND.CurrentDragAndDropData)this.currentDragData=StaticDND.CurrentDragAndDropData;else{if(!event.browserEvent.dataTransfer.types)return!1;this.currentDragData=new NativeDragAndDropData}const result=this.dnd.onDragOver(this.currentDragData,event.element,event.index,event.browserEvent);if(this.canDrop="boolean"==typeof result?result:result.accept,!this.canDrop)return this.currentDragFeedback=void 0,this.currentDragFeedbackDisposable.dispose(),!1;let feedback;if(event.browserEvent.dataTransfer.dropEffect="boolean"!=typeof result&&0===result.effect?"copy":"move",feedback="boolean"!=typeof result&&result.feedback?result.feedback:void 0===event.index?[-1]:[event.index],feedback=distinct(feedback).filter((i=>i>=-1&&i<this.length)).sort(((a,b)=>a-b)),feedback=-1===feedback[0]?[-1]:feedback,equalsDragFeedback(this.currentDragFeedback,feedback))return!0;if(this.currentDragFeedback=feedback,this.currentDragFeedbackDisposable.dispose(),-1===feedback[0])this.domNode.classList.add("drop-target"),this.rowsContainer.classList.add("drop-target"),this.currentDragFeedbackDisposable=toDisposable((()=>{this.domNode.classList.remove("drop-target"),this.rowsContainer.classList.remove("drop-target")}));else{for(const index of feedback){const item=this.items[index];item.dropTarget=!0,null===(_a=item.row)||void 0===_a||_a.domNode.classList.add("drop-target")}this.currentDragFeedbackDisposable=toDisposable((()=>{var _a;for(const index of feedback){const item=this.items[index];item.dropTarget=!1,null===(_a=item.row)||void 0===_a||_a.domNode.classList.remove("drop-target")}}))}return!0}onDragLeave(event){var _a,_b;this.onDragLeaveTimeout.dispose(),this.onDragLeaveTimeout=disposableTimeout((()=>this.clearDragOverFeedback()),100),this.currentDragData&&(null===(_b=(_a=this.dnd).onDragLeave)||void 0===_b||_b.call(_a,this.currentDragData,event.element,event.index,event.browserEvent))}onDrop(event){if(!this.canDrop)return;const dragData=this.currentDragData;this.teardownDragAndDropScrollTopAnimation(),this.clearDragOverFeedback(),this.currentDragData=void 0,StaticDND.CurrentDragAndDropData=void 0,dragData&&event.browserEvent.dataTransfer&&(event.browserEvent.preventDefault(),dragData.update(event.browserEvent.dataTransfer),this.dnd.drop(dragData,event.element,event.index,event.browserEvent))}onDragEnd(event){var _a,_b;this.canDrop=!1,this.teardownDragAndDropScrollTopAnimation(),this.clearDragOverFeedback(),this.currentDragData=void 0,StaticDND.CurrentDragAndDropData=void 0,null===(_b=(_a=this.dnd).onDragEnd)||void 0===_b||_b.call(_a,event)}clearDragOverFeedback(){this.currentDragFeedback=void 0,this.currentDragFeedbackDisposable.dispose(),this.currentDragFeedbackDisposable=Disposable.None}setupDragAndDropScrollTopAnimation(event){if(!this.dragOverAnimationDisposable){const viewTop=getTopLeftOffset(this.domNode).top;this.dragOverAnimationDisposable=animate(this.animateDragAndDropScrollTop.bind(this,viewTop))}this.dragOverAnimationStopDisposable.dispose(),this.dragOverAnimationStopDisposable=disposableTimeout((()=>{this.dragOverAnimationDisposable&&(this.dragOverAnimationDisposable.dispose(),this.dragOverAnimationDisposable=void 0)}),1e3),this.dragOverMouseY=event.pageY}animateDragAndDropScrollTop(viewTop){if(void 0===this.dragOverMouseY)return;const diff=this.dragOverMouseY-viewTop,upperLimit=this.renderHeight-35;diff<35?this.scrollTop+=Math.max(-14,Math.floor(.3*(diff-35))):diff>upperLimit&&(this.scrollTop+=Math.min(14,Math.floor(.3*(diff-upperLimit))))}teardownDragAndDropScrollTopAnimation(){this.dragOverAnimationStopDisposable.dispose(),this.dragOverAnimationDisposable&&(this.dragOverAnimationDisposable.dispose(),this.dragOverAnimationDisposable=void 0)}getItemIndexFromEventTarget(target){const scrollableElement=this.scrollableElement.getDomNode();let element=target;for(;element instanceof HTMLElement&&element!==this.rowsContainer&&scrollableElement.contains(element);){const rawIndex=element.getAttribute("data-index");if(rawIndex){const index=Number(rawIndex);if(!isNaN(index))return index}element=element.parentElement}}getRenderRange(renderTop,renderHeight){return{start:this.rangeMap.indexAt(renderTop),end:this.rangeMap.indexAfter(renderTop+renderHeight-1)}}_rerender(renderTop,renderHeight,inSmoothScrolling){const previousRenderRange=this.getRenderRange(renderTop,renderHeight);let anchorElementIndex,anchorElementTopDelta;renderTop===this.elementTop(previousRenderRange.start)?(anchorElementIndex=previousRenderRange.start,anchorElementTopDelta=0):previousRenderRange.end-previousRenderRange.start>1&&(anchorElementIndex=previousRenderRange.start+1,anchorElementTopDelta=this.elementTop(anchorElementIndex)-renderTop);let heightDiff=0;for(;;){const renderRange=this.getRenderRange(renderTop,renderHeight);let didChange=!1;for(let i=renderRange.start;i<renderRange.end;i++){const diff=this.probeDynamicHeight(i);0!==diff&&this.rangeMap.splice(i,1,[this.items[i]]),heightDiff+=diff,didChange=didChange||0!==diff}if(!didChange){0!==heightDiff&&this.eventuallyUpdateScrollDimensions();const unrenderRanges=Range.relativeComplement(previousRenderRange,renderRange);for(const range of unrenderRanges)for(let i=range.start;i<range.end;i++)this.items[i].row&&this.removeItemFromDOM(i);const renderRanges=Range.relativeComplement(renderRange,previousRenderRange);for(const range of renderRanges)for(let i=range.start;i<range.end;i++){const afterIndex=i+1,beforeRow=afterIndex<this.items.length?this.items[afterIndex].row:null,beforeElement=beforeRow?beforeRow.domNode:null;this.insertItemInDOM(i,beforeElement)}for(let i=renderRange.start;i<renderRange.end;i++)this.items[i].row&&this.updateItemInDOM(this.items[i],i);if("number"==typeof anchorElementIndex){const deltaScrollTop=this.scrollable.getFutureScrollPosition().scrollTop-renderTop,newScrollTop=this.elementTop(anchorElementIndex)-anchorElementTopDelta+deltaScrollTop;this.setScrollTop(newScrollTop,inSmoothScrolling)}return void this._onDidChangeContentHeight.fire(this.contentHeight)}}}probeDynamicHeight(index){var _a,_b,_c;const item=this.items[index];if(this.virtualDelegate.getDynamicHeight){const newSize=this.virtualDelegate.getDynamicHeight(item.element);if(null!==newSize){const size=item.size;return item.size=newSize,item.lastDynamicHeightWidth=this.renderWidth,newSize-size}}if(!item.hasDynamicHeight||item.lastDynamicHeightWidth===this.renderWidth)return 0;if(this.virtualDelegate.hasDynamicHeight&&!this.virtualDelegate.hasDynamicHeight(item.element))return 0;const size=item.size;if(!this.setRowHeight&&item.row){const newSize=item.row.domNode.offsetHeight;return item.size=newSize,item.lastDynamicHeightWidth=this.renderWidth,newSize-size}const row=this.cache.alloc(item.templateId);row.domNode.style.height="",this.rowsContainer.appendChild(row.domNode);const renderer=this.renderers.get(item.templateId);return renderer&&(renderer.renderElement(item.element,index,row.templateData,void 0),null===(_a=renderer.disposeElement)||void 0===_a||_a.call(renderer,item.element,index,row.templateData,void 0)),item.size=row.domNode.offsetHeight,null===(_c=(_b=this.virtualDelegate).setDynamicHeight)||void 0===_c||_c.call(_b,item.element,item.size),item.lastDynamicHeightWidth=this.renderWidth,this.rowsContainer.removeChild(row.domNode),this.cache.release(row),item.size-size}getNextToLastElement(ranges){const lastRange=ranges[ranges.length-1];if(!lastRange)return null;const nextToLastItem=this.items[lastRange.end];return nextToLastItem&&nextToLastItem.row?nextToLastItem.row.domNode:null}getElementDomId(index){return`${this.domId}_${index}`}dispose(){var _a;if(this.items){for(const item of this.items)if(item.row){const renderer=this.renderers.get(item.row.templateId);renderer&&(null===(_a=renderer.disposeElement)||void 0===_a||_a.call(renderer,item.element,-1,item.row.templateData,void 0),renderer.disposeTemplate(item.row.templateData))}this.items=[]}this.domNode&&this.domNode.parentNode&&this.domNode.parentNode.removeChild(this.domNode),dispose(this.disposables)}}ListView.InstanceCount=0,__decorate([memoize],ListView.prototype,"onMouseClick",null),__decorate([memoize],ListView.prototype,"onMouseDblClick",null),__decorate([memoize],ListView.prototype,"onMouseMiddleClick",null),__decorate([memoize],ListView.prototype,"onMouseDown",null),__decorate([memoize],ListView.prototype,"onMouseOver",null),__decorate([memoize],ListView.prototype,"onContextMenu",null),__decorate([memoize],ListView.prototype,"onTouchStart",null),__decorate([memoize],ListView.prototype,"onTap",null);