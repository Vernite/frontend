var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{binarySearch}from"../../../../base/common/arrays.js";import{Emitter}from"../../../../base/common/event.js";import{DisposableStore}from"../../../../base/common/lifecycle.js";import{LinkedList}from"../../../../base/common/linkedList.js";import{compare}from"../../../../base/common/strings.js";import{URI}from"../../../../base/common/uri.js";import{Range}from"../../../common/core/range.js";import{registerSingleton}from"../../../../platform/instantiation/common/extensions.js";import{createDecorator}from"../../../../platform/instantiation/common/instantiation.js";import{IMarkerService,MarkerSeverity}from"../../../../platform/markers/common/markers.js";import{IConfigurationService}from"../../../../platform/configuration/common/configuration.js";export class MarkerCoordinate{constructor(marker,index,total){this.marker=marker,this.index=index,this.total=total}}let MarkerList=class MarkerList{constructor(resourceFilter,_markerService,_configService){this._markerService=_markerService,this._configService=_configService,this._onDidChange=new Emitter,this.onDidChange=this._onDidChange.event,this._dispoables=new DisposableStore,this._markers=[],this._nextIdx=-1,URI.isUri(resourceFilter)?this._resourceFilter=uri=>uri.toString()===resourceFilter.toString():resourceFilter&&(this._resourceFilter=resourceFilter);const compareOrder=this._configService.getValue("problems.sortOrder"),compareMarker=(a,b)=>{let res=compare(a.resource.toString(),b.resource.toString());return 0===res&&(res="position"===compareOrder?Range.compareRangesUsingStarts(a,b)||MarkerSeverity.compare(a.severity,b.severity):MarkerSeverity.compare(a.severity,b.severity)||Range.compareRangesUsingStarts(a,b)),res},updateMarker=()=>{this._markers=this._markerService.read({resource:URI.isUri(resourceFilter)?resourceFilter:void 0,severities:MarkerSeverity.Error|MarkerSeverity.Warning|MarkerSeverity.Info}),"function"==typeof resourceFilter&&(this._markers=this._markers.filter((m=>this._resourceFilter(m.resource)))),this._markers.sort(compareMarker)};updateMarker(),this._dispoables.add(_markerService.onMarkerChanged((uris=>{this._resourceFilter&&!uris.some((uri=>this._resourceFilter(uri)))||(updateMarker(),this._nextIdx=-1,this._onDidChange.fire())})))}dispose(){this._dispoables.dispose(),this._onDidChange.dispose()}matches(uri){return!this._resourceFilter&&!uri||!(!this._resourceFilter||!uri)&&this._resourceFilter(uri)}get selected(){const marker=this._markers[this._nextIdx];return marker&&new MarkerCoordinate(marker,this._nextIdx+1,this._markers.length)}_initIdx(model,position,fwd){let found=!1,idx=this._markers.findIndex((marker=>marker.resource.toString()===model.uri.toString()));idx<0&&(idx=binarySearch(this._markers,{resource:model.uri},((a,b)=>compare(a.resource.toString(),b.resource.toString()))),idx<0&&(idx=~idx));for(let i=idx;i<this._markers.length;i++){let range=Range.lift(this._markers[i]);if(range.isEmpty()){const word=model.getWordAtPosition(range.getStartPosition());word&&(range=new Range(range.startLineNumber,word.startColumn,range.startLineNumber,word.endColumn))}if(position&&(range.containsPosition(position)||position.isBeforeOrEqual(range.getStartPosition()))){this._nextIdx=i,found=!0;break}if(this._markers[i].resource.toString()!==model.uri.toString())break}found||(this._nextIdx=fwd?0:this._markers.length-1),this._nextIdx<0&&(this._nextIdx=this._markers.length-1)}resetIndex(){this._nextIdx=-1}move(fwd,model,position){if(0===this._markers.length)return!1;const oldIdx=this._nextIdx;return-1===this._nextIdx?this._initIdx(model,position,fwd):fwd?this._nextIdx=(this._nextIdx+1)%this._markers.length:fwd||(this._nextIdx=(this._nextIdx-1+this._markers.length)%this._markers.length),oldIdx!==this._nextIdx}find(uri,position){let idx=this._markers.findIndex((marker=>marker.resource.toString()===uri.toString()));if(!(idx<0))for(;idx<this._markers.length;idx++)if(Range.containsPosition(this._markers[idx],position))return new MarkerCoordinate(this._markers[idx],idx+1,this._markers.length)}};MarkerList=__decorate([__param(1,IMarkerService),__param(2,IConfigurationService)],MarkerList);export{MarkerList};export const IMarkerNavigationService=createDecorator("IMarkerNavigationService");let MarkerNavigationService=class MarkerNavigationService{constructor(_markerService,_configService){this._markerService=_markerService,this._configService=_configService,this._provider=new LinkedList}getMarkerList(resource){for(const provider of this._provider){const result=provider.getMarkerList(resource);if(result)return result}return new MarkerList(resource,this._markerService,this._configService)}};MarkerNavigationService=__decorate([__param(0,IMarkerService),__param(1,IConfigurationService)],MarkerNavigationService),registerSingleton(IMarkerNavigationService,MarkerNavigationService,!0);