import{EditorAction,EditorCommand,registerEditorAction,registerEditorCommand}from"../../../browser/editorExtensions.js";import{ReplaceCommand}from"../../../common/commands/replaceCommand.js";import{EditorOptions}from"../../../common/config/editorOptions.js";import{CursorState}from"../../../common/cursorCommon.js";import{WordOperations}from"../../../common/cursor/cursorWordOperations.js";import{getMapForWordSeparators}from"../../../common/core/wordCharacterClassifier.js";import{Position}from"../../../common/core/position.js";import{Range}from"../../../common/core/range.js";import{Selection}from"../../../common/core/selection.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{ILanguageConfigurationService}from"../../../common/languages/languageConfigurationRegistry.js";import*as nls from"../../../../nls.js";import{CONTEXT_ACCESSIBILITY_MODE_ENABLED}from"../../../../platform/accessibility/common/accessibility.js";import{ContextKeyExpr}from"../../../../platform/contextkey/common/contextkey.js";import{IsWindowsContext}from"../../../../platform/contextkey/common/contextkeys.js";export class MoveWordCommand extends EditorCommand{constructor(opts){super(opts),this._inSelectionMode=opts.inSelectionMode,this._wordNavigationType=opts.wordNavigationType}runEditorCommand(accessor,editor,args){if(!editor.hasModel())return;const wordSeparators=getMapForWordSeparators(editor.getOption(119)),model=editor.getModel(),result=editor.getSelections().map((sel=>{const inPosition=new Position(sel.positionLineNumber,sel.positionColumn),outPosition=this._move(wordSeparators,model,inPosition,this._wordNavigationType);return this._moveTo(sel,outPosition,this._inSelectionMode)}));if(model.pushStackElement(),editor._getViewModel().setCursorStates("moveWordCommand",3,result.map((r=>CursorState.fromModelSelection(r)))),1===result.length){const pos=new Position(result[0].positionLineNumber,result[0].positionColumn);editor.revealPosition(pos,0)}}_moveTo(from,to,inSelectionMode){return inSelectionMode?new Selection(from.selectionStartLineNumber,from.selectionStartColumn,to.lineNumber,to.column):new Selection(to.lineNumber,to.column,to.lineNumber,to.column)}}export class WordLeftCommand extends MoveWordCommand{_move(wordSeparators,model,position,wordNavigationType){return WordOperations.moveWordLeft(wordSeparators,model,position,wordNavigationType)}}export class WordRightCommand extends MoveWordCommand{_move(wordSeparators,model,position,wordNavigationType){return WordOperations.moveWordRight(wordSeparators,model,position,wordNavigationType)}}export class CursorWordStartLeft extends WordLeftCommand{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordStartLeft",precondition:void 0})}}export class CursorWordEndLeft extends WordLeftCommand{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordEndLeft",precondition:void 0})}}export class CursorWordLeft extends WordLeftCommand{constructor(){var _a;super({inSelectionMode:!1,wordNavigationType:1,id:"cursorWordLeft",precondition:void 0,kbOpts:{kbExpr:ContextKeyExpr.and(EditorContextKeys.textInputFocus,null===(_a=ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED,IsWindowsContext))||void 0===_a?void 0:_a.negate()),primary:2063,mac:{primary:527},weight:100}})}}export class CursorWordStartLeftSelect extends WordLeftCommand{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordStartLeftSelect",precondition:void 0})}}export class CursorWordEndLeftSelect extends WordLeftCommand{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordEndLeftSelect",precondition:void 0})}}export class CursorWordLeftSelect extends WordLeftCommand{constructor(){var _a;super({inSelectionMode:!0,wordNavigationType:1,id:"cursorWordLeftSelect",precondition:void 0,kbOpts:{kbExpr:ContextKeyExpr.and(EditorContextKeys.textInputFocus,null===(_a=ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED,IsWindowsContext))||void 0===_a?void 0:_a.negate()),primary:3087,mac:{primary:1551},weight:100}})}}export class CursorWordAccessibilityLeft extends WordLeftCommand{constructor(){super({inSelectionMode:!1,wordNavigationType:3,id:"cursorWordAccessibilityLeft",precondition:void 0})}_move(_,model,position,wordNavigationType){return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue),model,position,wordNavigationType)}}export class CursorWordAccessibilityLeftSelect extends WordLeftCommand{constructor(){super({inSelectionMode:!0,wordNavigationType:3,id:"cursorWordAccessibilityLeftSelect",precondition:void 0})}_move(_,model,position,wordNavigationType){return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue),model,position,wordNavigationType)}}export class CursorWordStartRight extends WordRightCommand{constructor(){super({inSelectionMode:!1,wordNavigationType:0,id:"cursorWordStartRight",precondition:void 0})}}export class CursorWordEndRight extends WordRightCommand{constructor(){var _a;super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordEndRight",precondition:void 0,kbOpts:{kbExpr:ContextKeyExpr.and(EditorContextKeys.textInputFocus,null===(_a=ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED,IsWindowsContext))||void 0===_a?void 0:_a.negate()),primary:2065,mac:{primary:529},weight:100}})}}export class CursorWordRight extends WordRightCommand{constructor(){super({inSelectionMode:!1,wordNavigationType:2,id:"cursorWordRight",precondition:void 0})}}export class CursorWordStartRightSelect extends WordRightCommand{constructor(){super({inSelectionMode:!0,wordNavigationType:0,id:"cursorWordStartRightSelect",precondition:void 0})}}export class CursorWordEndRightSelect extends WordRightCommand{constructor(){var _a;super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordEndRightSelect",precondition:void 0,kbOpts:{kbExpr:ContextKeyExpr.and(EditorContextKeys.textInputFocus,null===(_a=ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED,IsWindowsContext))||void 0===_a?void 0:_a.negate()),primary:3089,mac:{primary:1553},weight:100}})}}export class CursorWordRightSelect extends WordRightCommand{constructor(){super({inSelectionMode:!0,wordNavigationType:2,id:"cursorWordRightSelect",precondition:void 0})}}export class CursorWordAccessibilityRight extends WordRightCommand{constructor(){super({inSelectionMode:!1,wordNavigationType:3,id:"cursorWordAccessibilityRight",precondition:void 0})}_move(_,model,position,wordNavigationType){return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue),model,position,wordNavigationType)}}export class CursorWordAccessibilityRightSelect extends WordRightCommand{constructor(){super({inSelectionMode:!0,wordNavigationType:3,id:"cursorWordAccessibilityRightSelect",precondition:void 0})}_move(_,model,position,wordNavigationType){return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue),model,position,wordNavigationType)}}export class DeleteWordCommand extends EditorCommand{constructor(opts){super(opts),this._whitespaceHeuristics=opts.whitespaceHeuristics,this._wordNavigationType=opts.wordNavigationType}runEditorCommand(accessor,editor,args){const languageConfigurationService=accessor.get(ILanguageConfigurationService);if(!editor.hasModel())return;const wordSeparators=getMapForWordSeparators(editor.getOption(119)),model=editor.getModel(),selections=editor.getSelections(),autoClosingBrackets=editor.getOption(5),autoClosingQuotes=editor.getOption(8),autoClosingPairs=languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getAutoClosingPairs(),viewModel=editor._getViewModel(),commands=selections.map((sel=>{const deleteRange=this._delete({wordSeparators,model,selection:sel,whitespaceHeuristics:this._whitespaceHeuristics,autoClosingDelete:editor.getOption(6),autoClosingBrackets,autoClosingQuotes,autoClosingPairs,autoClosedCharacters:viewModel.getCursorAutoClosedCharacters()},this._wordNavigationType);return new ReplaceCommand(deleteRange,"")}));editor.pushUndoStop(),editor.executeCommands(this.id,commands),editor.pushUndoStop()}}export class DeleteWordLeftCommand extends DeleteWordCommand{_delete(ctx,wordNavigationType){const r=WordOperations.deleteWordLeft(ctx,wordNavigationType);return r||new Range(1,1,1,1)}}export class DeleteWordRightCommand extends DeleteWordCommand{_delete(ctx,wordNavigationType){const r=WordOperations.deleteWordRight(ctx,wordNavigationType);if(r)return r;const lineCount=ctx.model.getLineCount(),maxColumn=ctx.model.getLineMaxColumn(lineCount);return new Range(lineCount,maxColumn,lineCount,maxColumn)}}export class DeleteWordStartLeft extends DeleteWordLeftCommand{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:0,id:"deleteWordStartLeft",precondition:EditorContextKeys.writable})}}export class DeleteWordEndLeft extends DeleteWordLeftCommand{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:2,id:"deleteWordEndLeft",precondition:EditorContextKeys.writable})}}export class DeleteWordLeft extends DeleteWordLeftCommand{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:0,id:"deleteWordLeft",precondition:EditorContextKeys.writable,kbOpts:{kbExpr:EditorContextKeys.textInputFocus,primary:2049,mac:{primary:513},weight:100}})}}export class DeleteWordStartRight extends DeleteWordRightCommand{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:0,id:"deleteWordStartRight",precondition:EditorContextKeys.writable})}}export class DeleteWordEndRight extends DeleteWordRightCommand{constructor(){super({whitespaceHeuristics:!1,wordNavigationType:2,id:"deleteWordEndRight",precondition:EditorContextKeys.writable})}}export class DeleteWordRight extends DeleteWordRightCommand{constructor(){super({whitespaceHeuristics:!0,wordNavigationType:2,id:"deleteWordRight",precondition:EditorContextKeys.writable,kbOpts:{kbExpr:EditorContextKeys.textInputFocus,primary:2068,mac:{primary:532},weight:100}})}}export class DeleteInsideWord extends EditorAction{constructor(){super({id:"deleteInsideWord",precondition:EditorContextKeys.writable,label:nls.localize("deleteInsideWord","Delete Word"),alias:"Delete Word"})}run(accessor,editor,args){if(!editor.hasModel())return;const wordSeparators=getMapForWordSeparators(editor.getOption(119)),model=editor.getModel(),commands=editor.getSelections().map((sel=>{const deleteRange=WordOperations.deleteInsideWord(wordSeparators,model,sel);return new ReplaceCommand(deleteRange,"")}));editor.pushUndoStop(),editor.executeCommands(this.id,commands),editor.pushUndoStop()}}registerEditorCommand(new CursorWordStartLeft),registerEditorCommand(new CursorWordEndLeft),registerEditorCommand(new CursorWordLeft),registerEditorCommand(new CursorWordStartLeftSelect),registerEditorCommand(new CursorWordEndLeftSelect),registerEditorCommand(new CursorWordLeftSelect),registerEditorCommand(new CursorWordStartRight),registerEditorCommand(new CursorWordEndRight),registerEditorCommand(new CursorWordRight),registerEditorCommand(new CursorWordStartRightSelect),registerEditorCommand(new CursorWordEndRightSelect),registerEditorCommand(new CursorWordRightSelect),registerEditorCommand(new CursorWordAccessibilityLeft),registerEditorCommand(new CursorWordAccessibilityLeftSelect),registerEditorCommand(new CursorWordAccessibilityRight),registerEditorCommand(new CursorWordAccessibilityRightSelect),registerEditorCommand(new DeleteWordStartLeft),registerEditorCommand(new DeleteWordEndLeft),registerEditorCommand(new DeleteWordLeft),registerEditorCommand(new DeleteWordStartRight),registerEditorCommand(new DeleteWordEndRight),registerEditorCommand(new DeleteWordRight),registerEditorAction(DeleteInsideWord);