export class CodeActionKind{constructor(value){this.value=value}equals(other){return this.value===other.value}contains(other){return this.equals(other)||""===this.value||other.value.startsWith(this.value+CodeActionKind.sep)}intersects(other){return this.contains(other)||other.contains(this)}append(part){return new CodeActionKind(this.value+CodeActionKind.sep+part)}}CodeActionKind.sep=".",CodeActionKind.None=new CodeActionKind("@@none@@"),CodeActionKind.Empty=new CodeActionKind(""),CodeActionKind.QuickFix=new CodeActionKind("quickfix"),CodeActionKind.Refactor=new CodeActionKind("refactor"),CodeActionKind.Source=new CodeActionKind("source"),CodeActionKind.SourceOrganizeImports=CodeActionKind.Source.append("organizeImports"),CodeActionKind.SourceFixAll=CodeActionKind.Source.append("fixAll");export var CodeActionTriggerSource;!function(CodeActionTriggerSource){CodeActionTriggerSource.Refactor="refactor",CodeActionTriggerSource.RefactorPreview="refactor preview",CodeActionTriggerSource.Lightbulb="lightbulb",CodeActionTriggerSource.Default="other (default)",CodeActionTriggerSource.SourceAction="source action",CodeActionTriggerSource.QuickFix="quick fix action",CodeActionTriggerSource.FixAll="fix all",CodeActionTriggerSource.OrganizeImports="organize imports",CodeActionTriggerSource.AutoFix="auto fix",CodeActionTriggerSource.QuickFixHover="quick fix hover window",CodeActionTriggerSource.OnSave="save participants",CodeActionTriggerSource.ProblemsView="problems view"}(CodeActionTriggerSource||(CodeActionTriggerSource={}));export function mayIncludeActionsOfKind(filter,providedKind){return!(filter.include&&!filter.include.intersects(providedKind))&&((!filter.excludes||!filter.excludes.some((exclude=>excludesAction(providedKind,exclude,filter.include))))&&!(!filter.includeSourceActions&&CodeActionKind.Source.contains(providedKind)))}export function filtersAction(filter,action){const actionKind=action.kind?new CodeActionKind(action.kind):void 0;return!!(!filter.include||actionKind&&filter.include.contains(actionKind))&&(!(filter.excludes&&actionKind&&filter.excludes.some((exclude=>excludesAction(actionKind,exclude,filter.include))))&&(!(!filter.includeSourceActions&&actionKind&&CodeActionKind.Source.contains(actionKind))&&!(filter.onlyIncludePreferredActions&&!action.isPreferred)))}function excludesAction(providedKind,exclude,include){return!!exclude.contains(providedKind)&&(!include||!exclude.contains(include))}export class CodeActionCommandArgs{constructor(kind,apply,preferred){this.kind=kind,this.apply=apply,this.preferred=preferred}static fromUser(arg,defaults){return arg&&"object"==typeof arg?new CodeActionCommandArgs(CodeActionCommandArgs.getKindFromUser(arg,defaults.kind),CodeActionCommandArgs.getApplyFromUser(arg,defaults.apply),CodeActionCommandArgs.getPreferredUser(arg)):new CodeActionCommandArgs(defaults.kind,defaults.apply,!1)}static getApplyFromUser(arg,defaultAutoApply){switch("string"==typeof arg.apply?arg.apply.toLowerCase():""){case"first":return"first";case"never":return"never";case"ifsingle":return"ifSingle";default:return defaultAutoApply}}static getKindFromUser(arg,defaultKind){return"string"==typeof arg.kind?new CodeActionKind(arg.kind):defaultKind}static getPreferredUser(arg){return"boolean"==typeof arg.preferred&&arg.preferred}}