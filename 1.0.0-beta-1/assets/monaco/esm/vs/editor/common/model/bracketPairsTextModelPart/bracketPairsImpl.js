import{Emitter}from"../../../../base/common/event.js";import{Disposable,DisposableStore,MutableDisposable}from"../../../../base/common/lifecycle.js";import{Range}from"../../core/range.js";import{BracketPairsTree}from"./bracketPairsTree/bracketPairsTree.js";import{ignoreBracketsInToken}from"../../languages/supports.js";import{BracketsUtils}from"../../languages/supports/richEditBrackets.js";import{compareBy,findLast,findLastMaxBy}from"../../../../base/common/arrays.js";export class BracketPairsTextModelPart extends Disposable{constructor(textModel,languageConfigurationService){super(),this.textModel=textModel,this.languageConfigurationService=languageConfigurationService,this.bracketPairsTree=this._register(new MutableDisposable),this.onDidChangeEmitter=new Emitter,this.onDidChange=this.onDidChangeEmitter.event,this.bracketsRequested=!1,this._register(this.languageConfigurationService.onDidChange((e=>{var _a;e.languageId&&!(null===(_a=this.bracketPairsTree.value)||void 0===_a?void 0:_a.object.didLanguageChange(e.languageId))||(this.bracketPairsTree.clear(),this.updateBracketPairsTree())})))}get canBuildAST(){return this.textModel.getValueLength()<=5e6}handleDidChangeOptions(e){this.bracketPairsTree.clear(),this.updateBracketPairsTree()}handleDidChangeLanguage(e){this.bracketPairsTree.clear(),this.updateBracketPairsTree()}handleDidChangeContent(change){var _a;null===(_a=this.bracketPairsTree.value)||void 0===_a||_a.object.handleContentChanged(change)}handleDidChangeBackgroundTokenizationState(){var _a;null===(_a=this.bracketPairsTree.value)||void 0===_a||_a.object.handleDidChangeBackgroundTokenizationState()}handleDidChangeTokens(e){var _a;null===(_a=this.bracketPairsTree.value)||void 0===_a||_a.object.handleDidChangeTokens(e)}updateBracketPairsTree(){if(this.bracketsRequested&&this.canBuildAST){if(!this.bracketPairsTree.value){const store=new DisposableStore;this.bracketPairsTree.value=createDisposableRef(store.add(new BracketPairsTree(this.textModel,(languageId=>this.languageConfigurationService.getLanguageConfiguration(languageId)))),store),store.add(this.bracketPairsTree.value.object.onDidChange((e=>this.onDidChangeEmitter.fire(e)))),this.onDidChangeEmitter.fire()}}else this.bracketPairsTree.value&&(this.bracketPairsTree.clear(),this.onDidChangeEmitter.fire())}getBracketPairsInRange(range){var _a;return this.bracketsRequested=!0,this.updateBracketPairsTree(),(null===(_a=this.bracketPairsTree.value)||void 0===_a?void 0:_a.object.getBracketPairsInRange(range,!1))||[]}getBracketPairsInRangeWithMinIndentation(range){var _a;return this.bracketsRequested=!0,this.updateBracketPairsTree(),(null===(_a=this.bracketPairsTree.value)||void 0===_a?void 0:_a.object.getBracketPairsInRange(range,!0))||[]}getBracketsInRange(range){var _a;return this.bracketsRequested=!0,this.updateBracketPairsTree(),(null===(_a=this.bracketPairsTree.value)||void 0===_a?void 0:_a.object.getBracketsInRange(range))||[]}findMatchingBracketUp(_bracket,_position,maxDuration){const position=this.textModel.validatePosition(_position),languageId=this.textModel.getLanguageIdAtPosition(position.lineNumber,position.column);if(this.canBuildAST){const closingBracketInfo=this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew.getClosingBracketInfo(_bracket);if(!closingBracketInfo)return null;const bracketPair=findLast(this.getBracketPairsInRange(Range.fromPositions(_position,_position))||[],(b=>closingBracketInfo.closes(b.openingBracketInfo)));return bracketPair?bracketPair.openingBracketRange:null}{const bracket=_bracket.toLowerCase(),bracketsSupport=this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;if(!bracketsSupport)return null;const data=bracketsSupport.textIsBracket[bracket];return data?stripBracketSearchCanceled(this._findMatchingBracketUp(data,position,createTimeBasedContinueBracketSearchPredicate(maxDuration))):null}}matchBracket(position,maxDuration){if(this.canBuildAST){const bracketPair=findLastMaxBy(this.getBracketPairsInRange(Range.fromPositions(position,position)).filter((item=>void 0!==item.closingBracketRange&&(item.openingBracketRange.containsPosition(position)||item.closingBracketRange.containsPosition(position)))),compareBy((item=>item.openingBracketRange.containsPosition(position)?item.openingBracketRange:item.closingBracketRange),Range.compareRangesUsingStarts));return bracketPair?[bracketPair.openingBracketRange,bracketPair.closingBracketRange]:null}{const continueSearchPredicate=createTimeBasedContinueBracketSearchPredicate(maxDuration);return this._matchBracket(this.textModel.validatePosition(position),continueSearchPredicate)}}_establishBracketSearchOffsets(position,lineTokens,modeBrackets,tokenIndex){const tokenCount=lineTokens.getCount(),currentLanguageId=lineTokens.getLanguageId(tokenIndex);let searchStartOffset=Math.max(0,position.column-1-modeBrackets.maxBracketLength);for(let i=tokenIndex-1;i>=0;i--){const tokenEndOffset=lineTokens.getEndOffset(i);if(tokenEndOffset<=searchStartOffset)break;if(ignoreBracketsInToken(lineTokens.getStandardTokenType(i))||lineTokens.getLanguageId(i)!==currentLanguageId){searchStartOffset=tokenEndOffset;break}}let searchEndOffset=Math.min(lineTokens.getLineContent().length,position.column-1+modeBrackets.maxBracketLength);for(let i=tokenIndex+1;i<tokenCount;i++){const tokenStartOffset=lineTokens.getStartOffset(i);if(tokenStartOffset>=searchEndOffset)break;if(ignoreBracketsInToken(lineTokens.getStandardTokenType(i))||lineTokens.getLanguageId(i)!==currentLanguageId){searchEndOffset=tokenStartOffset;break}}return{searchStartOffset,searchEndOffset}}_matchBracket(position,continueSearchPredicate){const lineNumber=position.lineNumber,lineTokens=this.textModel.tokenization.getLineTokens(lineNumber),lineText=this.textModel.getLineContent(lineNumber),tokenIndex=lineTokens.findTokenIndexAtOffset(position.column-1);if(tokenIndex<0)return null;const currentModeBrackets=this.languageConfigurationService.getLanguageConfiguration(lineTokens.getLanguageId(tokenIndex)).brackets;if(currentModeBrackets&&!ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex))){let{searchStartOffset,searchEndOffset}=this._establishBracketSearchOffsets(position,lineTokens,currentModeBrackets,tokenIndex),bestResult=null;for(;;){const foundBracket=BracketsUtils.findNextBracketInRange(currentModeBrackets.forwardRegex,lineNumber,lineText,searchStartOffset,searchEndOffset);if(!foundBracket)break;if(foundBracket.startColumn<=position.column&&position.column<=foundBracket.endColumn){const foundBracketText=lineText.substring(foundBracket.startColumn-1,foundBracket.endColumn-1).toLowerCase(),r=this._matchFoundBracket(foundBracket,currentModeBrackets.textIsBracket[foundBracketText],currentModeBrackets.textIsOpenBracket[foundBracketText],continueSearchPredicate);if(r){if(r instanceof BracketSearchCanceled)return null;bestResult=r}}searchStartOffset=foundBracket.endColumn-1}if(bestResult)return bestResult}if(tokenIndex>0&&lineTokens.getStartOffset(tokenIndex)===position.column-1){const prevTokenIndex=tokenIndex-1,prevModeBrackets=this.languageConfigurationService.getLanguageConfiguration(lineTokens.getLanguageId(prevTokenIndex)).brackets;if(prevModeBrackets&&!ignoreBracketsInToken(lineTokens.getStandardTokenType(prevTokenIndex))){const{searchStartOffset,searchEndOffset}=this._establishBracketSearchOffsets(position,lineTokens,prevModeBrackets,prevTokenIndex),foundBracket=BracketsUtils.findPrevBracketInRange(prevModeBrackets.reversedRegex,lineNumber,lineText,searchStartOffset,searchEndOffset);if(foundBracket&&foundBracket.startColumn<=position.column&&position.column<=foundBracket.endColumn){const foundBracketText=lineText.substring(foundBracket.startColumn-1,foundBracket.endColumn-1).toLowerCase(),r=this._matchFoundBracket(foundBracket,prevModeBrackets.textIsBracket[foundBracketText],prevModeBrackets.textIsOpenBracket[foundBracketText],continueSearchPredicate);if(r)return r instanceof BracketSearchCanceled?null:r}}}return null}_matchFoundBracket(foundBracket,data,isOpen,continueSearchPredicate){if(!data)return null;const matched=isOpen?this._findMatchingBracketDown(data,foundBracket.getEndPosition(),continueSearchPredicate):this._findMatchingBracketUp(data,foundBracket.getStartPosition(),continueSearchPredicate);return matched?matched instanceof BracketSearchCanceled?matched:[foundBracket,matched]:null}_findMatchingBracketUp(bracket,position,continueSearchPredicate){const languageId=bracket.languageId,reversedBracketRegex=bracket.reversedRegex;let count=-1,totalCallCount=0;const searchPrevMatchingBracketInRange=(lineNumber,lineText,searchStartOffset,searchEndOffset)=>{for(;;){if(continueSearchPredicate&&++totalCallCount%100==0&&!continueSearchPredicate())return BracketSearchCanceled.INSTANCE;const r=BracketsUtils.findPrevBracketInRange(reversedBracketRegex,lineNumber,lineText,searchStartOffset,searchEndOffset);if(!r)break;const hitText=lineText.substring(r.startColumn-1,r.endColumn-1).toLowerCase();if(bracket.isOpen(hitText)?count++:bracket.isClose(hitText)&&count--,0===count)return r;searchEndOffset=r.startColumn-1}return null};for(let lineNumber=position.lineNumber;lineNumber>=1;lineNumber--){const lineTokens=this.textModel.tokenization.getLineTokens(lineNumber),tokenCount=lineTokens.getCount(),lineText=this.textModel.getLineContent(lineNumber);let tokenIndex=tokenCount-1,searchStartOffset=lineText.length,searchEndOffset=lineText.length;lineNumber===position.lineNumber&&(tokenIndex=lineTokens.findTokenIndexAtOffset(position.column-1),searchStartOffset=position.column-1,searchEndOffset=position.column-1);let prevSearchInToken=!0;for(;tokenIndex>=0;tokenIndex--){const searchInToken=lineTokens.getLanguageId(tokenIndex)===languageId&&!ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex));if(searchInToken)prevSearchInToken?searchStartOffset=lineTokens.getStartOffset(tokenIndex):(searchStartOffset=lineTokens.getStartOffset(tokenIndex),searchEndOffset=lineTokens.getEndOffset(tokenIndex));else if(prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=searchPrevMatchingBracketInRange(lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return r}prevSearchInToken=searchInToken}if(prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=searchPrevMatchingBracketInRange(lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return r}}return null}_findMatchingBracketDown(bracket,position,continueSearchPredicate){const languageId=bracket.languageId,bracketRegex=bracket.forwardRegex;let count=1,totalCallCount=0;const searchNextMatchingBracketInRange=(lineNumber,lineText,searchStartOffset,searchEndOffset)=>{for(;;){if(continueSearchPredicate&&++totalCallCount%100==0&&!continueSearchPredicate())return BracketSearchCanceled.INSTANCE;const r=BracketsUtils.findNextBracketInRange(bracketRegex,lineNumber,lineText,searchStartOffset,searchEndOffset);if(!r)break;const hitText=lineText.substring(r.startColumn-1,r.endColumn-1).toLowerCase();if(bracket.isOpen(hitText)?count++:bracket.isClose(hitText)&&count--,0===count)return r;searchStartOffset=r.endColumn-1}return null},lineCount=this.textModel.getLineCount();for(let lineNumber=position.lineNumber;lineNumber<=lineCount;lineNumber++){const lineTokens=this.textModel.tokenization.getLineTokens(lineNumber),tokenCount=lineTokens.getCount(),lineText=this.textModel.getLineContent(lineNumber);let tokenIndex=0,searchStartOffset=0,searchEndOffset=0;lineNumber===position.lineNumber&&(tokenIndex=lineTokens.findTokenIndexAtOffset(position.column-1),searchStartOffset=position.column-1,searchEndOffset=position.column-1);let prevSearchInToken=!0;for(;tokenIndex<tokenCount;tokenIndex++){const searchInToken=lineTokens.getLanguageId(tokenIndex)===languageId&&!ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex));if(searchInToken)prevSearchInToken||(searchStartOffset=lineTokens.getStartOffset(tokenIndex)),searchEndOffset=lineTokens.getEndOffset(tokenIndex);else if(prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=searchNextMatchingBracketInRange(lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return r}prevSearchInToken=searchInToken}if(prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=searchNextMatchingBracketInRange(lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return r}}return null}findPrevBracket(_position){var _a;const position=this.textModel.validatePosition(_position);if(this.canBuildAST)return this.bracketsRequested=!0,this.updateBracketPairsTree(),(null===(_a=this.bracketPairsTree.value)||void 0===_a?void 0:_a.object.getFirstBracketBefore(position))||null;let languageId=null,modeBrackets=null,bracketConfig=null;for(let lineNumber=position.lineNumber;lineNumber>=1;lineNumber--){const lineTokens=this.textModel.tokenization.getLineTokens(lineNumber),tokenCount=lineTokens.getCount(),lineText=this.textModel.getLineContent(lineNumber);let tokenIndex=tokenCount-1,searchStartOffset=lineText.length,searchEndOffset=lineText.length;if(lineNumber===position.lineNumber){tokenIndex=lineTokens.findTokenIndexAtOffset(position.column-1),searchStartOffset=position.column-1,searchEndOffset=position.column-1;const tokenLanguageId=lineTokens.getLanguageId(tokenIndex);languageId!==tokenLanguageId&&(languageId=tokenLanguageId,modeBrackets=this.languageConfigurationService.getLanguageConfiguration(languageId).brackets,bracketConfig=this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew)}let prevSearchInToken=!0;for(;tokenIndex>=0;tokenIndex--){const tokenLanguageId=lineTokens.getLanguageId(tokenIndex);if(languageId!==tokenLanguageId){if(modeBrackets&&bracketConfig&&prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex,lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return this._toFoundBracket(bracketConfig,r);prevSearchInToken=!1}languageId=tokenLanguageId,modeBrackets=this.languageConfigurationService.getLanguageConfiguration(languageId).brackets,bracketConfig=this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew}const searchInToken=!!modeBrackets&&!ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex));if(searchInToken)prevSearchInToken?searchStartOffset=lineTokens.getStartOffset(tokenIndex):(searchStartOffset=lineTokens.getStartOffset(tokenIndex),searchEndOffset=lineTokens.getEndOffset(tokenIndex));else if(bracketConfig&&modeBrackets&&prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex,lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return this._toFoundBracket(bracketConfig,r)}prevSearchInToken=searchInToken}if(bracketConfig&&modeBrackets&&prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex,lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return this._toFoundBracket(bracketConfig,r)}}return null}findNextBracket(_position){var _a;const position=this.textModel.validatePosition(_position);if(this.canBuildAST)return this.bracketsRequested=!0,this.updateBracketPairsTree(),(null===(_a=this.bracketPairsTree.value)||void 0===_a?void 0:_a.object.getFirstBracketAfter(position))||null;const lineCount=this.textModel.getLineCount();let languageId=null,modeBrackets=null,bracketConfig=null;for(let lineNumber=position.lineNumber;lineNumber<=lineCount;lineNumber++){const lineTokens=this.textModel.tokenization.getLineTokens(lineNumber),tokenCount=lineTokens.getCount(),lineText=this.textModel.getLineContent(lineNumber);let tokenIndex=0,searchStartOffset=0,searchEndOffset=0;if(lineNumber===position.lineNumber){tokenIndex=lineTokens.findTokenIndexAtOffset(position.column-1),searchStartOffset=position.column-1,searchEndOffset=position.column-1;const tokenLanguageId=lineTokens.getLanguageId(tokenIndex);languageId!==tokenLanguageId&&(languageId=tokenLanguageId,modeBrackets=this.languageConfigurationService.getLanguageConfiguration(languageId).brackets,bracketConfig=this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew)}let prevSearchInToken=!0;for(;tokenIndex<tokenCount;tokenIndex++){const tokenLanguageId=lineTokens.getLanguageId(tokenIndex);if(languageId!==tokenLanguageId){if(bracketConfig&&modeBrackets&&prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex,lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return this._toFoundBracket(bracketConfig,r);prevSearchInToken=!1}languageId=tokenLanguageId,modeBrackets=this.languageConfigurationService.getLanguageConfiguration(languageId).brackets,bracketConfig=this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew}const searchInToken=!!modeBrackets&&!ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex));if(searchInToken)prevSearchInToken||(searchStartOffset=lineTokens.getStartOffset(tokenIndex)),searchEndOffset=lineTokens.getEndOffset(tokenIndex);else if(bracketConfig&&modeBrackets&&prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex,lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return this._toFoundBracket(bracketConfig,r)}prevSearchInToken=searchInToken}if(bracketConfig&&modeBrackets&&prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex,lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return this._toFoundBracket(bracketConfig,r)}}return null}findEnclosingBrackets(_position,maxDuration){const position=this.textModel.validatePosition(_position);if(this.canBuildAST){const range=Range.fromPositions(position),bracketPair=findLast(this.getBracketPairsInRange(Range.fromPositions(position,position)),(item=>void 0!==item.closingBracketRange&&item.range.strictContainsRange(range)));return bracketPair?[bracketPair.openingBracketRange,bracketPair.closingBracketRange]:null}const continueSearchPredicate=createTimeBasedContinueBracketSearchPredicate(maxDuration),lineCount=this.textModel.getLineCount(),savedCounts=new Map;let counts=[];const resetCounts=(languageId,modeBrackets)=>{if(!savedCounts.has(languageId)){const tmp=[];for(let i=0,len=modeBrackets?modeBrackets.brackets.length:0;i<len;i++)tmp[i]=0;savedCounts.set(languageId,tmp)}counts=savedCounts.get(languageId)};let totalCallCount=0;const searchInRange=(modeBrackets,lineNumber,lineText,searchStartOffset,searchEndOffset)=>{for(;;){if(continueSearchPredicate&&++totalCallCount%100==0&&!continueSearchPredicate())return BracketSearchCanceled.INSTANCE;const r=BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex,lineNumber,lineText,searchStartOffset,searchEndOffset);if(!r)break;const hitText=lineText.substring(r.startColumn-1,r.endColumn-1).toLowerCase(),bracket=modeBrackets.textIsBracket[hitText];if(bracket&&(bracket.isOpen(hitText)?counts[bracket.index]++:bracket.isClose(hitText)&&counts[bracket.index]--,-1===counts[bracket.index]))return this._matchFoundBracket(r,bracket,!1,continueSearchPredicate);searchStartOffset=r.endColumn-1}return null};let languageId=null,modeBrackets=null;for(let lineNumber=position.lineNumber;lineNumber<=lineCount;lineNumber++){const lineTokens=this.textModel.tokenization.getLineTokens(lineNumber),tokenCount=lineTokens.getCount(),lineText=this.textModel.getLineContent(lineNumber);let tokenIndex=0,searchStartOffset=0,searchEndOffset=0;if(lineNumber===position.lineNumber){tokenIndex=lineTokens.findTokenIndexAtOffset(position.column-1),searchStartOffset=position.column-1,searchEndOffset=position.column-1;const tokenLanguageId=lineTokens.getLanguageId(tokenIndex);languageId!==tokenLanguageId&&(languageId=tokenLanguageId,modeBrackets=this.languageConfigurationService.getLanguageConfiguration(languageId).brackets,resetCounts(languageId,modeBrackets))}let prevSearchInToken=!0;for(;tokenIndex<tokenCount;tokenIndex++){const tokenLanguageId=lineTokens.getLanguageId(tokenIndex);if(languageId!==tokenLanguageId){if(modeBrackets&&prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=searchInRange(modeBrackets,lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return stripBracketSearchCanceled(r);prevSearchInToken=!1}languageId=tokenLanguageId,modeBrackets=this.languageConfigurationService.getLanguageConfiguration(languageId).brackets,resetCounts(languageId,modeBrackets)}const searchInToken=!!modeBrackets&&!ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex));if(searchInToken)prevSearchInToken||(searchStartOffset=lineTokens.getStartOffset(tokenIndex)),searchEndOffset=lineTokens.getEndOffset(tokenIndex);else if(modeBrackets&&prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=searchInRange(modeBrackets,lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return stripBracketSearchCanceled(r)}prevSearchInToken=searchInToken}if(modeBrackets&&prevSearchInToken&&searchStartOffset!==searchEndOffset){const r=searchInRange(modeBrackets,lineNumber,lineText,searchStartOffset,searchEndOffset);if(r)return stripBracketSearchCanceled(r)}}return null}_toFoundBracket(bracketConfig,r){if(!r)return null;let text=this.textModel.getValueInRange(r);text=text.toLowerCase();const bracketInfo=bracketConfig.getBracketInfo(text);return bracketInfo?{range:r,bracketInfo}:null}}function createDisposableRef(object,disposable){return{object,dispose:()=>null==disposable?void 0:disposable.dispose()}}function createTimeBasedContinueBracketSearchPredicate(maxDuration){if(void 0===maxDuration)return()=>!0;{const startTime=Date.now();return()=>Date.now()-startTime<=maxDuration}}class BracketSearchCanceled{constructor(){this._searchCanceledBrand=void 0}}function stripBracketSearchCanceled(result){return result instanceof BracketSearchCanceled?null:result}BracketSearchCanceled.INSTANCE=new BracketSearchCanceled;