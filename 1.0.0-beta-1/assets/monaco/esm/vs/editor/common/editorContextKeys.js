import*as nls from"../../nls.js";import{RawContextKey}from"../../platform/contextkey/common/contextkey.js";export var EditorContextKeys;!function(EditorContextKeys){EditorContextKeys.editorSimpleInput=new RawContextKey("editorSimpleInput",!1,!0),EditorContextKeys.editorTextFocus=new RawContextKey("editorTextFocus",!1,nls.localize("editorTextFocus","Whether the editor text has focus (cursor is blinking)")),EditorContextKeys.focus=new RawContextKey("editorFocus",!1,nls.localize("editorFocus","Whether the editor or an editor widget has focus (e.g. focus is in the find widget)")),EditorContextKeys.textInputFocus=new RawContextKey("textInputFocus",!1,nls.localize("textInputFocus","Whether an editor or a rich text input has focus (cursor is blinking)")),EditorContextKeys.readOnly=new RawContextKey("editorReadonly",!1,nls.localize("editorReadonly","Whether the editor is read only")),EditorContextKeys.inDiffEditor=new RawContextKey("inDiffEditor",!1,nls.localize("inDiffEditor","Whether the context is a diff editor")),EditorContextKeys.columnSelection=new RawContextKey("editorColumnSelection",!1,nls.localize("editorColumnSelection","Whether `editor.columnSelection` is enabled")),EditorContextKeys.writable=EditorContextKeys.readOnly.toNegated(),EditorContextKeys.hasNonEmptySelection=new RawContextKey("editorHasSelection",!1,nls.localize("editorHasSelection","Whether the editor has text selected")),EditorContextKeys.hasOnlyEmptySelection=EditorContextKeys.hasNonEmptySelection.toNegated(),EditorContextKeys.hasMultipleSelections=new RawContextKey("editorHasMultipleSelections",!1,nls.localize("editorHasMultipleSelections","Whether the editor has multiple selections")),EditorContextKeys.hasSingleSelection=EditorContextKeys.hasMultipleSelections.toNegated(),EditorContextKeys.tabMovesFocus=new RawContextKey("editorTabMovesFocus",!1,nls.localize("editorTabMovesFocus","Whether `Tab` will move focus out of the editor")),EditorContextKeys.tabDoesNotMoveFocus=EditorContextKeys.tabMovesFocus.toNegated(),EditorContextKeys.isInWalkThroughSnippet=new RawContextKey("isInEmbeddedEditor",!1,!0),EditorContextKeys.canUndo=new RawContextKey("canUndo",!1,!0),EditorContextKeys.canRedo=new RawContextKey("canRedo",!1,!0),EditorContextKeys.hoverVisible=new RawContextKey("editorHoverVisible",!1,nls.localize("editorHoverVisible","Whether the editor hover is visible")),EditorContextKeys.inCompositeEditor=new RawContextKey("inCompositeEditor",void 0,nls.localize("inCompositeEditor","Whether the editor is part of a larger editor (e.g. notebooks)")),EditorContextKeys.notInCompositeEditor=EditorContextKeys.inCompositeEditor.toNegated(),EditorContextKeys.languageId=new RawContextKey("editorLangId","",nls.localize("editorLangId","The language identifier of the editor")),EditorContextKeys.hasCompletionItemProvider=new RawContextKey("editorHasCompletionItemProvider",!1,nls.localize("editorHasCompletionItemProvider","Whether the editor has a completion item provider")),EditorContextKeys.hasCodeActionsProvider=new RawContextKey("editorHasCodeActionsProvider",!1,nls.localize("editorHasCodeActionsProvider","Whether the editor has a code actions provider")),EditorContextKeys.hasCodeLensProvider=new RawContextKey("editorHasCodeLensProvider",!1,nls.localize("editorHasCodeLensProvider","Whether the editor has a code lens provider")),EditorContextKeys.hasDefinitionProvider=new RawContextKey("editorHasDefinitionProvider",!1,nls.localize("editorHasDefinitionProvider","Whether the editor has a definition provider")),EditorContextKeys.hasDeclarationProvider=new RawContextKey("editorHasDeclarationProvider",!1,nls.localize("editorHasDeclarationProvider","Whether the editor has a declaration provider")),EditorContextKeys.hasImplementationProvider=new RawContextKey("editorHasImplementationProvider",!1,nls.localize("editorHasImplementationProvider","Whether the editor has an implementation provider")),EditorContextKeys.hasTypeDefinitionProvider=new RawContextKey("editorHasTypeDefinitionProvider",!1,nls.localize("editorHasTypeDefinitionProvider","Whether the editor has a type definition provider")),EditorContextKeys.hasHoverProvider=new RawContextKey("editorHasHoverProvider",!1,nls.localize("editorHasHoverProvider","Whether the editor has a hover provider")),EditorContextKeys.hasDocumentHighlightProvider=new RawContextKey("editorHasDocumentHighlightProvider",!1,nls.localize("editorHasDocumentHighlightProvider","Whether the editor has a document highlight provider")),EditorContextKeys.hasDocumentSymbolProvider=new RawContextKey("editorHasDocumentSymbolProvider",!1,nls.localize("editorHasDocumentSymbolProvider","Whether the editor has a document symbol provider")),EditorContextKeys.hasReferenceProvider=new RawContextKey("editorHasReferenceProvider",!1,nls.localize("editorHasReferenceProvider","Whether the editor has a reference provider")),EditorContextKeys.hasRenameProvider=new RawContextKey("editorHasRenameProvider",!1,nls.localize("editorHasRenameProvider","Whether the editor has a rename provider")),EditorContextKeys.hasSignatureHelpProvider=new RawContextKey("editorHasSignatureHelpProvider",!1,nls.localize("editorHasSignatureHelpProvider","Whether the editor has a signature help provider")),EditorContextKeys.hasInlayHintsProvider=new RawContextKey("editorHasInlayHintsProvider",!1,nls.localize("editorHasInlayHintsProvider","Whether the editor has an inline hints provider")),EditorContextKeys.hasDocumentFormattingProvider=new RawContextKey("editorHasDocumentFormattingProvider",!1,nls.localize("editorHasDocumentFormattingProvider","Whether the editor has a document formatting provider")),EditorContextKeys.hasDocumentSelectionFormattingProvider=new RawContextKey("editorHasDocumentSelectionFormattingProvider",!1,nls.localize("editorHasDocumentSelectionFormattingProvider","Whether the editor has a document selection formatting provider")),EditorContextKeys.hasMultipleDocumentFormattingProvider=new RawContextKey("editorHasMultipleDocumentFormattingProvider",!1,nls.localize("editorHasMultipleDocumentFormattingProvider","Whether the editor has multiple document formatting providers")),EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider=new RawContextKey("editorHasMultipleDocumentSelectionFormattingProvider",!1,nls.localize("editorHasMultipleDocumentSelectionFormattingProvider","Whether the editor has multiple document selection formatting providers"))}(EditorContextKeys||(EditorContextKeys={}));