var _a,__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import*as strings from"../../../base/common/strings.js";import{LineTokens}from"../../common/tokens/lineTokens.js";import{TokenizationRegistry}from"../../common/languages.js";import{RenderLineInput,renderViewLine2 as renderViewLine}from"../../common/viewLayout/viewLineRenderer.js";import{ViewLineRenderingData}from"../../common/viewModel.js";import{MonarchTokenizer}from"../common/monarch/monarchLexer.js";const ttPolicy=null===(_a=window.trustedTypes)||void 0===_a?void 0:_a.createPolicy("standaloneColorizer",{createHTML:value=>value});export class Colorizer{static colorizeElement(themeService,languageService,domNode,options){const theme=(options=options||{}).theme||"vs",mimeType=options.mimeType||domNode.getAttribute("lang")||domNode.getAttribute("data-lang");if(!mimeType)return console.error("Mode not detected"),Promise.resolve();const languageId=languageService.getLanguageIdByMimeType(mimeType)||mimeType;themeService.setTheme(theme);const text=domNode.firstChild?domNode.firstChild.nodeValue:"";domNode.className+=" "+theme;return this.colorize(languageService,text||"",languageId,options).then((str=>{var _a;const trustedhtml=null!==(_a=null==ttPolicy?void 0:ttPolicy.createHTML(str))&&void 0!==_a?_a:str;domNode.innerHTML=trustedhtml}),(err=>console.error(err)))}static colorize(languageService,text,languageId,options){return __awaiter(this,void 0,void 0,(function*(){const languageIdCodec=languageService.languageIdCodec;let tabSize=4;options&&"number"==typeof options.tabSize&&(tabSize=options.tabSize),strings.startsWithUTF8BOM(text)&&(text=text.substr(1));const lines=strings.splitLines(text);if(!languageService.isRegisteredLanguageId(languageId))return _fakeColorize(lines,tabSize,languageIdCodec);const tokenizationSupport=yield TokenizationRegistry.getOrCreate(languageId);return tokenizationSupport?_colorize(lines,tabSize,tokenizationSupport,languageIdCodec):_fakeColorize(lines,tabSize,languageIdCodec)}))}static colorizeLine(line,mightContainNonBasicASCII,mightContainRTL,tokens,tabSize=4){const isBasicASCII=ViewLineRenderingData.isBasicASCII(line,mightContainNonBasicASCII),containsRTL=ViewLineRenderingData.containsRTL(line,isBasicASCII,mightContainRTL);return renderViewLine(new RenderLineInput(!1,!0,line,!1,isBasicASCII,containsRTL,0,tokens,[],tabSize,0,0,0,0,-1,"none",!1,!1,null)).html}static colorizeModelLine(model,lineNumber,tabSize=4){const content=model.getLineContent(lineNumber);model.tokenization.forceTokenization(lineNumber);const inflatedTokens=model.tokenization.getLineTokens(lineNumber).inflate();return this.colorizeLine(content,model.mightContainNonBasicASCII(),model.mightContainRTL(),inflatedTokens,tabSize)}}function _colorize(lines,tabSize,tokenizationSupport,languageIdCodec){return new Promise(((c,e)=>{const execute=()=>{const result=_actualColorize(lines,tabSize,tokenizationSupport,languageIdCodec);if(tokenizationSupport instanceof MonarchTokenizer){const status=tokenizationSupport.getLoadStatus();if(!1===status.loaded)return void status.promise.then(execute,e)}c(result)};execute()}))}function _fakeColorize(lines,tabSize,languageIdCodec){let html=[];const tokens=new Uint32Array(2);tokens[0]=0,tokens[1]=33587200;for(let i=0,length=lines.length;i<length;i++){const line=lines[i];tokens[0]=line.length;const lineTokens=new LineTokens(tokens,line,languageIdCodec),isBasicASCII=ViewLineRenderingData.isBasicASCII(line,!0),containsRTL=ViewLineRenderingData.containsRTL(line,isBasicASCII,!0),renderResult=renderViewLine(new RenderLineInput(!1,!0,line,!1,isBasicASCII,containsRTL,0,lineTokens,[],tabSize,0,0,0,0,-1,"none",!1,!1,null));html=html.concat(renderResult.html),html.push("<br/>")}return html.join("")}function _actualColorize(lines,tabSize,tokenizationSupport,languageIdCodec){let html=[],state=tokenizationSupport.getInitialState();for(let i=0,length=lines.length;i<length;i++){const line=lines[i],tokenizeResult=tokenizationSupport.tokenizeEncoded(line,!0,state);LineTokens.convertToEndOffset(tokenizeResult.tokens,line.length);const lineTokens=new LineTokens(tokenizeResult.tokens,line,languageIdCodec),isBasicASCII=ViewLineRenderingData.isBasicASCII(line,!0),containsRTL=ViewLineRenderingData.containsRTL(line,isBasicASCII,!0),renderResult=renderViewLine(new RenderLineInput(!1,!0,line,!1,isBasicASCII,containsRTL,0,lineTokens.inflate(),[],tabSize,0,0,0,0,-1,"none",!1,!1,null));html=html.concat(renderResult.html),html.push("<br/>"),state=tokenizeResult.endState}return html.join("")}