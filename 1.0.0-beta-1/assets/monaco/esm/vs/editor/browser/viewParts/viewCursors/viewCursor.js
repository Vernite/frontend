import*as dom from"../../../../base/browser/dom.js";import{createFastDomNode}from"../../../../base/browser/fastDomNode.js";import*as strings from"../../../../base/common/strings.js";import{applyFontInfo}from"../../config/domFontInfo.js";import{TextEditorCursorStyle}from"../../../common/config/editorOptions.js";import{Position}from"../../../common/core/position.js";import{Range}from"../../../common/core/range.js";import{MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}from"../../../../base/browser/ui/mouseCursor/mouseCursor.js";class ViewCursorRenderData{constructor(top,left,width,height,textContent,textContentClassName){this.top=top,this.left=left,this.width=width,this.height=height,this.textContent=textContent,this.textContentClassName=textContentClassName}}export class ViewCursor{constructor(context){this._context=context;const options=this._context.configuration.options,fontInfo=options.get(46);this._cursorStyle=options.get(24),this._lineHeight=options.get(61),this._typicalHalfwidthCharacterWidth=fontInfo.typicalHalfwidthCharacterWidth,this._lineCursorWidth=Math.min(options.get(27),this._typicalHalfwidthCharacterWidth),this._isVisible=!0,this._domNode=createFastDomNode(document.createElement("div")),this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`),this._domNode.setHeight(this._lineHeight),this._domNode.setTop(0),this._domNode.setLeft(0),applyFontInfo(this._domNode,fontInfo),this._domNode.setDisplay("none"),this._position=new Position(1,1),this._lastRenderedContent="",this._renderData=null}getDomNode(){return this._domNode}getPosition(){return this._position}show(){this._isVisible||(this._domNode.setVisibility("inherit"),this._isVisible=!0)}hide(){this._isVisible&&(this._domNode.setVisibility("hidden"),this._isVisible=!1)}onConfigurationChanged(e){const options=this._context.configuration.options,fontInfo=options.get(46);return this._cursorStyle=options.get(24),this._lineHeight=options.get(61),this._typicalHalfwidthCharacterWidth=fontInfo.typicalHalfwidthCharacterWidth,this._lineCursorWidth=Math.min(options.get(27),this._typicalHalfwidthCharacterWidth),applyFontInfo(this._domNode,fontInfo),!0}onCursorPositionChanged(position){return this._position=position,!0}_getGraphemeAwarePosition(){const{lineNumber,column}=this._position,lineContent=this._context.viewModel.getLineContent(lineNumber),[startOffset,endOffset]=strings.getCharContainingOffset(lineContent,column-1);return[new Position(lineNumber,startOffset+1),lineContent.substring(startOffset,endOffset)]}_prepareRender(ctx){let textContent="";const[position,nextGrapheme]=this._getGraphemeAwarePosition();if(this._cursorStyle===TextEditorCursorStyle.Line||this._cursorStyle===TextEditorCursorStyle.LineThin){const visibleRange=ctx.visibleRangeForPosition(position);if(!visibleRange||visibleRange.outsideRenderedLine)return null;let width;this._cursorStyle===TextEditorCursorStyle.Line?(width=dom.computeScreenAwareSize(this._lineCursorWidth>0?this._lineCursorWidth:2),width>2&&(textContent=nextGrapheme)):width=dom.computeScreenAwareSize(1);let left=visibleRange.left;width>=2&&left>=1&&(left-=1);const top=ctx.getVerticalOffsetForLineNumber(position.lineNumber)-ctx.bigNumbersDelta;return new ViewCursorRenderData(top,left,width,this._lineHeight,textContent,"")}const visibleRangeForCharacter=ctx.linesVisibleRangesForRange(new Range(position.lineNumber,position.column,position.lineNumber,position.column+nextGrapheme.length),!1);if(!visibleRangeForCharacter||0===visibleRangeForCharacter.length)return null;const firstVisibleRangeForCharacter=visibleRangeForCharacter[0];if(firstVisibleRangeForCharacter.outsideRenderedLine||0===firstVisibleRangeForCharacter.ranges.length)return null;const range=firstVisibleRangeForCharacter.ranges[0],width="\t"===nextGrapheme||range.width<1?this._typicalHalfwidthCharacterWidth:range.width;let textContentClassName="";if(this._cursorStyle===TextEditorCursorStyle.Block){const lineData=this._context.viewModel.getViewLineData(position.lineNumber);textContent=nextGrapheme;const tokenIndex=lineData.tokens.findTokenIndexAtOffset(position.column-1);textContentClassName=lineData.tokens.getClassName(tokenIndex)}let top=ctx.getVerticalOffsetForLineNumber(position.lineNumber)-ctx.bigNumbersDelta,height=this._lineHeight;return this._cursorStyle!==TextEditorCursorStyle.Underline&&this._cursorStyle!==TextEditorCursorStyle.UnderlineThin||(top+=this._lineHeight-2,height=2),new ViewCursorRenderData(top,range.left,width,height,textContent,textContentClassName)}prepareRender(ctx){this._renderData=this._prepareRender(ctx)}render(ctx){return this._renderData?(this._lastRenderedContent!==this._renderData.textContent&&(this._lastRenderedContent=this._renderData.textContent,this._domNode.domNode.textContent=this._lastRenderedContent),this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`),this._domNode.setDisplay("block"),this._domNode.setTop(this._renderData.top),this._domNode.setLeft(this._renderData.left),this._domNode.setWidth(this._renderData.width),this._domNode.setLineHeight(this._renderData.height),this._domNode.setHeight(this._renderData.height),{domNode:this._domNode.domNode,position:this._position,contentLeft:this._renderData.left,height:this._renderData.height,width:2}):(this._domNode.setDisplay("none"),null)}}