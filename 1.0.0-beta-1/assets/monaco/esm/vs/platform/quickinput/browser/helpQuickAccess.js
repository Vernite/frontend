var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{localize}from"../../../nls.js";import{Registry}from"../../registry/common/platform.js";import{DisposableStore}from"../../../base/common/lifecycle.js";import{IKeybindingService}from"../../keybinding/common/keybinding.js";import{Extensions}from"../common/quickAccess.js";import{IQuickInputService}from"../common/quickInput.js";let HelpQuickAccessProvider=class HelpQuickAccessProvider{constructor(quickInputService,keybindingService){this.quickInputService=quickInputService,this.keybindingService=keybindingService,this.registry=Registry.as(Extensions.Quickaccess)}provide(picker){const disposables=new DisposableStore;return disposables.add(picker.onDidAccept((()=>{const[item]=picker.selectedItems;item&&this.quickInputService.quickAccess.show(item.prefix,{preserveValue:!0})}))),disposables.add(picker.onDidChangeValue((value=>{const providerDescriptor=this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));providerDescriptor&&providerDescriptor.prefix&&providerDescriptor.prefix!==HelpQuickAccessProvider.PREFIX&&this.quickInputService.quickAccess.show(providerDescriptor.prefix,{preserveValue:!0})}))),picker.items=this.getQuickAccessProviders(),disposables}getQuickAccessProviders(){const providers=[];for(const provider of this.registry.getQuickAccessProviders().sort(((providerA,providerB)=>providerA.prefix.localeCompare(providerB.prefix))))if(provider.prefix!==HelpQuickAccessProvider.PREFIX)for(const helpEntry of provider.helpEntries){const prefix=helpEntry.prefix||provider.prefix,label=prefix||"â€¦";providers.push({prefix,label,keybinding:helpEntry.commandId?this.keybindingService.lookupKeybinding(helpEntry.commandId):void 0,ariaLabel:localize("helpPickAriaLabel","{0}, {1}",label,helpEntry.description),description:helpEntry.description})}return providers}};HelpQuickAccessProvider.PREFIX="?",HelpQuickAccessProvider=__decorate([__param(0,IQuickInputService),__param(1,IKeybindingService)],HelpQuickAccessProvider);export{HelpQuickAccessProvider};