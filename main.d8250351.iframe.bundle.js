(globalThis.webpackChunkvernite=globalThis.webpackChunkvernite||[]).push([[179],{"./src/styles/styles.scss":()=>{},"./src/app/_main/components/button/button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{$Default:()=>$Default,Icon:()=>Icon,Pending:()=>Pending,Type:()=>Type,Variant:()=>Variant,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stories/helpers/arg-type.helper.ts"),_button_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/app/_main/components/button/button.component.ts"),_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@fortawesome/free-solid-svg-icons/index.es.js"),src_stories_helpers_classes_story_page_config_class__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/stories/helpers/classes/story-page-config.class.ts"),src_stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/stories/helpers/classes/story-template.class.ts"),src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/stories/helpers/classes/story.class.ts");const config=new src_stories_helpers_classes_story_page_config_class__WEBPACK_IMPORTED_MODULE_2__.y({title:"Components/Button",component:_button_component__WEBPACK_IMPORTED_MODULE_1__.r,selector:"app-button",argTypes:{variant:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__.bw,type:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__.bw,icon:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__.aS,elementRef:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__.zC}}),template=new src_stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_4__.q({content:"Button"}),__WEBPACK_DEFAULT_EXPORT__=config.meta(),$Default=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({template,config}).story(),Variant=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({template,config,multiple:{prop:"variant",options:["primary","secondary","important"]},description:"To customize the general appearance you need to use the `variant` property with one of the specified values.\n    If you will not specify variant, the button will appear with `secondary` styling."}).story(),Pending=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({template,config,description:"To make the button show with loader you need to pass `pending` property with value: `true`.",code:'<app-button [pending]="true">Button</app-button>',props:{pending:!0}}).story(),Type=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({template,config,code:'<app-button type="button"></app-button>',description:"If button is nested in a form, the default behavior is making this button a `submit` button. To\n  omit this it is needed to set `type` to `button`.",props:{type:"button"}}).story(),Icon=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({template,config,code:'<app-button [icon]="faAdd"></app-button>',description:"You can set `icon` property to add icon before text in buttons. This option supports prefixes like: `mat` |\n  `fas` | `fab` | `cu`.",props:{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_5__.XSk}}).story()},"./src/app/_main/components/card/card.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{$Default:()=>$Default,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _card_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/app/_main/components/card/card.component.ts"),_stories_helpers_classes_story_page_config_class__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/stories/helpers/classes/story-page-config.class.ts"),_stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/stories/helpers/classes/story-template.class.ts"),src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/stories/helpers/classes/story.class.ts");const config=new _stories_helpers_classes_story_page_config_class__WEBPACK_IMPORTED_MODULE_1__.y({title:"Components/Card",component:_card_component__WEBPACK_IMPORTED_MODULE_0__.A,selector:"app-card"}),template=new _stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_3__.q({content:'\n  <div class="card-title">Sample card</div>\n  <div class="card-content">Little bit of content</div>\n  <div class="card-content">\n    <app-button>Action</app-button>\n  </div>\n'}),__WEBPACK_DEFAULT_EXPORT__=config.meta(),$Default=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_2__.o({template,config}).story()},"./src/app/_main/components/checkbox/checkbox.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{$Default:()=>$Default,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stories/helpers/arg-type.helper.ts"),_ngneat_reactive_forms__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ngneat/reactive-forms/fesm2020/ngneat-reactive-forms.mjs"),_checkbox_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/app/_main/components/checkbox/checkbox.component.ts"),src_stories_helpers_classes_form_control_story_page_config_class__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/stories/helpers/classes/form-control-story-page-config.class.ts"),src_stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/stories/helpers/classes/story-template.class.ts"),src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/stories/helpers/classes/story.class.ts");const config=new src_stories_helpers_classes_form_control_story_page_config_class__WEBPACK_IMPORTED_MODULE_2__.l({title:"Components/Checkbox",component:_checkbox_component__WEBPACK_IMPORTED_MODULE_1__.b,selector:"app-checkbox",argTypes:{autocomplete:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__.bw}}),formControl=new _ngneat_reactive_forms__WEBPACK_IMPORTED_MODULE_4__.NI,template=new src_stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_5__.q({formControl,content:"Sample checkbox"}),__WEBPACK_DEFAULT_EXPORT__=config.meta(),$Default=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({template,config}).story()},"./src/app/_main/components/input-date-time/input-date-time.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{$Default:()=>$Default,FloatingLabel:()=>FloatingLabel,Placeholder:()=>Placeholder,StaticLabel:()=>StaticLabel,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _input_date_time_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/app/_main/components/input-date-time/input-date-time.component.ts"),_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/stories/helpers/arg-type.helper.ts"),_ngneat_reactive_forms__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ngneat/reactive-forms/fesm2020/ngneat-reactive-forms.mjs"),_stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/stories/helpers/classes/story-template.class.ts"),src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/stories/helpers/classes/story.class.ts");const config=new(__webpack_require__("./src/stories/helpers/classes/form-control-story-page-config.class.ts").l)({title:"Components/InputDateTime",component:_input_date_time_component__WEBPACK_IMPORTED_MODULE_0__.M,selector:"app-input-date-time",argTypes:{autocomplete:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_1__.bw,type:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_1__.bw}}),formControl=new _ngneat_reactive_forms__WEBPACK_IMPORTED_MODULE_4__.NI,template=new _stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_5__.q({formControl}),__WEBPACK_DEFAULT_EXPORT__=config.meta(),$Default=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_2__.o({template,config}).story(),FloatingLabel=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_2__.o({template,config,props:{floatingLabel:"Sample field"},description:"Best way to describe field purpose is to add a `floatingLabel`. The floating label will\n    be shown above the field if field is in focus state or when the input contains some value."}).story(),StaticLabel=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_2__.o({template,config,props:{staticLabel:"Sample field"},description:"This is the other way to show the user purpose of this field. Static label will be always displayed\n    above the input field regardless of state and content"}).story(),Placeholder=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_2__.o({template,config,props:{placeholder:"Sample placeholder"},description:"..."}).story()},"./src/app/_main/components/input/input.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{$Default:()=>$Default,FloatingLabel:()=>FloatingLabel,Hint:()=>Hint,Placeholder:()=>Placeholder,StaticLabel:()=>StaticLabel,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _input_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/app/_main/components/input/input.component.ts"),_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/stories/helpers/arg-type.helper.ts"),_ngneat_reactive_forms__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ngneat/reactive-forms/fesm2020/ngneat-reactive-forms.mjs"),src_stories_helpers_classes_form_control_story_page_config_class__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/stories/helpers/classes/form-control-story-page-config.class.ts"),src_stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/stories/helpers/classes/story-template.class.ts"),src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/stories/helpers/classes/story.class.ts");const config=new src_stories_helpers_classes_form_control_story_page_config_class__WEBPACK_IMPORTED_MODULE_2__.l({title:"Components/Input",component:_input_component__WEBPACK_IMPORTED_MODULE_0__.a,selector:"app-input",argTypes:{autocomplete:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_1__.bw,type:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_1__.bw}}),formControl=new _ngneat_reactive_forms__WEBPACK_IMPORTED_MODULE_4__.NI,template=new src_stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_5__.q({formControl}),__WEBPACK_DEFAULT_EXPORT__=config.meta(),$Default=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({template,config}).story(),FloatingLabel=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({template,config,props:{floatingLabel:"Sample field"},description:"Best way to describe field purpose is to add a `floatingLabel`. The floating label will\n    be shown above the field if field is in focus state or when the input contains some value."}).story(),StaticLabel=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({template,config,props:{staticLabel:"Sample field"},description:"This is the other way to show the user purpose of this field. Static label will be always displayed\n    above the input field regardless of state and content"}).story(),Hint=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({template,config,props:{hint:"Sample hint"},description:"..."}).story(),Placeholder=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({template,config,props:{placeholder:"Sample placeholder"},description:"..."}).story()},"./src/app/_main/components/textarea/textarea.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{$Default:()=>$Default,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stories/helpers/arg-type.helper.ts"),_ngneat_reactive_forms__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ngneat/reactive-forms/fesm2020/ngneat-reactive-forms.mjs"),_textarea_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/app/_main/components/textarea/textarea.component.ts"),src_stories_helpers_classes_form_control_story_page_config_class__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/stories/helpers/classes/form-control-story-page-config.class.ts"),src_stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/stories/helpers/classes/story-template.class.ts"),src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/stories/helpers/classes/story.class.ts");const config=new src_stories_helpers_classes_form_control_story_page_config_class__WEBPACK_IMPORTED_MODULE_2__.l({title:"Components/Textarea",component:_textarea_component__WEBPACK_IMPORTED_MODULE_1__.R,selector:"app-textarea",argTypes:{autocomplete:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__.bw,input:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__.zC,output:_stories_helpers_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__.zC}}),__WEBPACK_DEFAULT_EXPORT__=config.meta(),formControl=new _ngneat_reactive_forms__WEBPACK_IMPORTED_MODULE_4__.NI,template=new src_stories_helpers_classes_story_template_class__WEBPACK_IMPORTED_MODULE_5__.q({formControl}),$Default=new src_stories_helpers_classes_story_class__WEBPACK_IMPORTED_MODULE_3__.o({config,template}).story()},"./src/app/_main/classes/control-accessor.class.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>ControlAccessor});var tslib__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_angular_forms__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),_ngneat_reactive_forms__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@ngneat/reactive-forms/fesm2020/ngneat-reactive-forms.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js");let ControlAccessor=class ControlAccessor{constructor(ngControl,cdRef){this.ngControl=ngControl,this.cdRef=cdRef,this.autocomplete="off",this._required=!1,this.destroy$=new rxjs__WEBPACK_IMPORTED_MODULE_0__.x,this.touched$=new rxjs__WEBPACK_IMPORTED_MODULE_0__.x,this._previousValue=void 0,this._previousValueBuffer=void 0,this.ngControl.valueAccessor=this}get required(){return this._required}get name(){var _a,_b;return(null===(_b=null===(_a=this.ngControl)||void 0===_a?void 0:_a.name)||void 0===_b?void 0:_b.toString())||""}get isControlInitialized(){var _a;return Boolean(null===(_a=this.ngControl)||void 0===_a?void 0:_a.control)}get control(){var _a;return(null===(_a=this.ngControl)||void 0===_a?void 0:_a.control)||new _ngneat_reactive_forms__WEBPACK_IMPORTED_MODULE_1__.NI}get value(){return this.control.value}get previousValue(){return this._previousValue}get errors(){return this.control.errors}ngOnInit(){this._watchForInit()}_watchForInit(){const afterSetup=()=>{this._checkIfIsRequired(),this._initValidation(),this.ngAfterControlInit()};if(this.ngControl.control)return afterSetup();const _setUpControl=this.ngControl._setUpControl;this.ngControl._setUpControl=(...args)=>{const tmp=_setUpControl.apply(this.ngControl,...args);return afterSetup(),tmp}}_checkIfIsRequired(){if(this.control._rawValidators)for(const validator of this.ngControl.control._rawValidators)if("required"===validator.name){this._required=!0;break}}_initValidation(){this.control.addValidators((control=>this.validate(control)))}validate(control){return null}writeValue(value){this._previousValue=this._previousValueBuffer,this._previousValueBuffer=value}registerOnChange(fn){}registerOnTouched(fn){}setDisabledState(isDisabled){this.control.setDisable(isDisabled)}ngOnDestroy(){this.destroy$.next(null),this.destroy$.complete(),this.touched$.complete()}ngAfterControlInit(){}};ControlAccessor.ctorParameters=()=>[{type:_angular_forms__WEBPACK_IMPORTED_MODULE_2__.NgControl,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Optional}]},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.ChangeDetectorRef}],ControlAccessor.propDecorators={autocomplete:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input}]},ControlAccessor=(0,tslib__WEBPACK_IMPORTED_MODULE_4__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({template:""})],ControlAccessor)},"./src/app/_main/components/button/button.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{r:()=>ButtonComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let ButtonComponent=class ButtonComponent{constructor(){this.variant="secondary",this.type="submit",this.pending=!1}focus(){setTimeout((()=>{this.elementRef.nativeElement.focus()}),200)}};ButtonComponent.propDecorators={variant:[{type:core.Input}],type:[{type:core.Input}],pending:[{type:core.Input}],icon:[{type:core.Input}],elementRef:[{type:core.ViewChild,args:["btn"]}]},ButtonComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-button",template:'<button #btn [ngClass]="[variant]" [type]="type" [class.button-with-icon]="icon">\n  <div class="prefix" [class.pending]="pending">\n    <mat-spinner diameter="18" [class.hide]="!pending"></mat-spinner>\n    <app-icon *ngIf="icon" [icon]="icon" [class.hide]="pending" size="16px"></app-icon>\n  </div>\n  <ng-content></ng-content>\n</button>\n',styles:['/**\n * This typography specification is based on: https://spectrum.adobe.com/page/typography/\n * and the tailwind utility classes: https://tailwindcss.com/docs/font-size\n *\n * Tips:\n * 16px <-> 1rem\n */\n/* ======================= */\n/* ==== CONFIGURATION ==== */\n/* ======================= */\n:root {\n  --font-family: montserrat, roboto, "Helvetica Neue", sans-serif;\n  --text-label-font-size: 0.75rem;\n  --text-label-font-weight: 400;\n  --text-label-text-transform: uppercase;\n  --text-title-font-size: 0.875rem;\n  --text-title-font-weight: 700;\n  --text-title-text-transform: none;\n  --text-base-font-size: 0.875rem;\n  --text-base-font-weight: 400;\n  --text-base-text-transform: none;\n  --text-lg-font-size: 1rem;\n  --text-lg-font-weight: 400;\n  --text-lg-text-transform: none;\n  --text-xl-font-size: 1.125rem;\n  --text-xl-font-weight: 400;\n  --text-xl-text-transform: none;\n  --text-2xl-font-size: 1.25rem;\n  --text-2xl-font-weight: 400;\n  --text-2xl-text-transform: none;\n  --text-3xl-font-size: 1.5rem;\n  --text-3xl-font-weight: 400;\n  --text-3xl-text-transform: none;\n  --text-4xl-font-size: 1.75rem;\n  --text-4xl-font-weight: 400;\n  --text-4xl-text-transform: none;\n  --text-5xl-font-size: 2rem;\n  --text-5xl-font-weight: 400;\n  --text-5xl-text-transform: none;\n}\n/* ==================================== */\n/* ==== UTILITY CLASSES AND MIXINS ==== */\n/* ==================================== */\n.text-label {\n  font-family: var(--font-family);\n  font-size: var(--text-label-font-size);\n  font-weight: var(--text-label-font-weight);\n  text-transform: var(--text-label-text-transform);\n  color: var(--color-text);\n}\n.text-base {\n  font-family: var(--font-family);\n  font-size: var(--text-base-font-size);\n  font-weight: var(--text-base-font-weight);\n  text-transform: var(--text-base-text-transform);\n  color: var(--color-text);\n}\n.text-title {\n  font-family: var(--font-family);\n  font-size: var(--text-title-font-size);\n  font-weight: var(--text-title-font-weight);\n  text-transform: var(--text-title-text-transform);\n  color: var(--color-text);\n}\n.text-lg {\n  font-family: var(--font-family);\n  font-size: var(--text-lg-font-size);\n  font-weight: var(--text-lg-font-weight);\n  text-transform: var(--text-lg-text-transform);\n  color: var(--color-text);\n}\n.text-xl {\n  font-family: var(--font-family);\n  font-size: var(--text-xl-font-size);\n  font-weight: var(--text-xl-font-weight);\n  text-transform: var(--text-xl-text-transform);\n  color: var(--color-text);\n}\n.text-2xl {\n  font-family: var(--font-family);\n  font-size: var(--text-2xl-font-size);\n  font-weight: var(--text-2xl-font-weight);\n  text-transform: var(--text-2xl-text-transform);\n  color: var(--color-text);\n}\n.text-3xl {\n  font-family: var(--font-family);\n  font-size: var(--text-3xl-font-size);\n  font-weight: var(--text-3xl-font-weight);\n  text-transform: var(--text-3xl-text-transform);\n  color: var(--color-text);\n}\n.text-4xl {\n  font-family: var(--font-family);\n  font-size: var(--text-4xl-font-size);\n  font-weight: var(--text-4xl-font-weight);\n  text-transform: var(--text-4xl-text-transform);\n  color: var(--color-text);\n}\n.text-5xl {\n  font-family: var(--font-family);\n  font-size: var(--text-5xl-font-size);\n  font-weight: var(--text-5xl-font-weight);\n  text-transform: var(--text-5xl-text-transform);\n  color: var(--color-text);\n}\nbutton mat-spinner,\nbutton app-icon {\n  opacity: 1;\n  transform: scale(1);\n  transition: opacity 0.2s;\n}\nbutton mat-spinner.hide,\nbutton app-icon.hide {\n  opacity: 0;\n}\nbutton .prefix {\n  position: relative;\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  transition: width 0.2s, margin-right 0.2s;\n}\nbutton .prefix > * {\n  position: absolute;\n}\nbutton:not(.button-with-icon) .prefix:not(.pending) {\n  width: 0;\n  margin-right: 0;\n}\nbutton {\n  font-family: var(--font-family);\n  font-size: var(--text-title-font-size);\n  font-weight: var(--text-title-font-weight);\n  text-transform: var(--text-title-text-transform);\n  position: relative;\n  display: flex;\n  min-width: 64px;\n  height: 38px;\n  align-items: center;\n  justify-content: center;\n  padding: 0.8125rem 1.25rem;\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n  outline: 0 !important;\n  transition: background-color 0.2s ease;\n  width: 100%;\n}\nbutton > *:not(:last-child) {\n  margin-right: 0.75rem;\n}\nbutton:not(.transparent) {\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n}\nbutton::before {\n  position: absolute;\n  top: -4px;\n  right: -4px;\n  bottom: -4px;\n  left: -4px;\n  border-radius: calc(var(--border-radius) * 1.5);\n  content: "";\n  opacity: 0;\n  pointer-events: none;\n  transition: opacity 0.1s ease;\n}\nbutton:focus::before {\n  opacity: 1;\n}\nbutton:active {\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);\n}\nbutton.primary {\n  background-color: var(--color-button-primary-background);\n}\nbutton.primary::before {\n  border: 2px solid var(--color-button-primary-border-active);\n}\nbutton.primary:hover {\n  background-color: var(--color-button-primary-background-hover);\n}\nbutton.primary:active {\n  background-color: var(--color-button-primary-background-active);\n}\nbutton.secondary {\n  background-color: var(--color-button-secondary-background);\n}\nbutton.secondary::before {\n  border: 2px solid var(--color-button-secondary-border-active);\n}\nbutton.secondary:hover {\n  background-color: var(--color-button-secondary-background-hover);\n}\nbutton.secondary:active {\n  background-color: var(--color-button-secondary-background-active);\n}\nbutton.important {\n  background-color: var(--color-button-important-background);\n}\nbutton.important::before {\n  border: 2px solid var(--color-button-important-border-active);\n}\nbutton.important:hover {\n  background-color: var(--color-button-important-background-hover);\n}\nbutton.important:active {\n  background-color: var(--color-button-important-background-active);\n}']})],ButtonComponent)},"./src/app/_main/components/card/card.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>CardComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let CardComponent=class CardComponent{constructor(){}};CardComponent.ctorParameters=()=>[],CardComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-card",template:'<div class="card">\n  <div class="card-header-wrapper">\n    <ng-content select=".card-title"></ng-content>\n  </div>\n  <div class="card-content-wrapper">\n    <ng-content select=".card-content"></ng-content>\n  </div>\n  <div class="card-actions-wrapper">\n    <ng-content select=".card-actions"></ng-content>\n  </div>\n</div>\n',styles:['/**\n * This typography specification is based on: https://spectrum.adobe.com/page/typography/\n * and the tailwind utility classes: https://tailwindcss.com/docs/font-size\n *\n * Tips:\n * 16px <-> 1rem\n */\n/* ======================= */\n/* ==== CONFIGURATION ==== */\n/* ======================= */\n:root {\n  --font-family: montserrat, roboto, "Helvetica Neue", sans-serif;\n  --text-label-font-size: 0.75rem;\n  --text-label-font-weight: 400;\n  --text-label-text-transform: uppercase;\n  --text-title-font-size: 0.875rem;\n  --text-title-font-weight: 700;\n  --text-title-text-transform: none;\n  --text-base-font-size: 0.875rem;\n  --text-base-font-weight: 400;\n  --text-base-text-transform: none;\n  --text-lg-font-size: 1rem;\n  --text-lg-font-weight: 400;\n  --text-lg-text-transform: none;\n  --text-xl-font-size: 1.125rem;\n  --text-xl-font-weight: 400;\n  --text-xl-text-transform: none;\n  --text-2xl-font-size: 1.25rem;\n  --text-2xl-font-weight: 400;\n  --text-2xl-text-transform: none;\n  --text-3xl-font-size: 1.5rem;\n  --text-3xl-font-weight: 400;\n  --text-3xl-text-transform: none;\n  --text-4xl-font-size: 1.75rem;\n  --text-4xl-font-weight: 400;\n  --text-4xl-text-transform: none;\n  --text-5xl-font-size: 2rem;\n  --text-5xl-font-weight: 400;\n  --text-5xl-text-transform: none;\n}\n/* ==================================== */\n/* ==== UTILITY CLASSES AND MIXINS ==== */\n/* ==================================== */\n.text-label {\n  font-family: var(--font-family);\n  font-size: var(--text-label-font-size);\n  font-weight: var(--text-label-font-weight);\n  text-transform: var(--text-label-text-transform);\n  color: var(--color-text);\n}\n.text-base {\n  font-family: var(--font-family);\n  font-size: var(--text-base-font-size);\n  font-weight: var(--text-base-font-weight);\n  text-transform: var(--text-base-text-transform);\n  color: var(--color-text);\n}\n.text-title {\n  font-family: var(--font-family);\n  font-size: var(--text-title-font-size);\n  font-weight: var(--text-title-font-weight);\n  text-transform: var(--text-title-text-transform);\n  color: var(--color-text);\n}\n.text-lg {\n  font-family: var(--font-family);\n  font-size: var(--text-lg-font-size);\n  font-weight: var(--text-lg-font-weight);\n  text-transform: var(--text-lg-text-transform);\n  color: var(--color-text);\n}\n.text-xl {\n  font-family: var(--font-family);\n  font-size: var(--text-xl-font-size);\n  font-weight: var(--text-xl-font-weight);\n  text-transform: var(--text-xl-text-transform);\n  color: var(--color-text);\n}\n.text-2xl {\n  font-family: var(--font-family);\n  font-size: var(--text-2xl-font-size);\n  font-weight: var(--text-2xl-font-weight);\n  text-transform: var(--text-2xl-text-transform);\n  color: var(--color-text);\n}\n.text-3xl {\n  font-family: var(--font-family);\n  font-size: var(--text-3xl-font-size);\n  font-weight: var(--text-3xl-font-weight);\n  text-transform: var(--text-3xl-text-transform);\n  color: var(--color-text);\n}\n.text-4xl {\n  font-family: var(--font-family);\n  font-size: var(--text-4xl-font-size);\n  font-weight: var(--text-4xl-font-weight);\n  text-transform: var(--text-4xl-text-transform);\n  color: var(--color-text);\n}\n.text-5xl {\n  font-family: var(--font-family);\n  font-size: var(--text-5xl-font-size);\n  font-weight: var(--text-5xl-font-weight);\n  text-transform: var(--text-5xl-text-transform);\n  color: var(--color-text);\n}\n:host {\n  width: 100%;\n  flex-grow: 1;\n  flex-shrink: 1;\n}\n:host.important .card {\n  border: 1px solid var(--color-red-700);\n}\n:host.important .card-header-wrapper {\n  color: var(--color-red-700);\n}\n.card {\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  border: 1px solid var(--color-secondary-500);\n  border-radius: var(--border-radius);\n}\n.card-header-wrapper {\n  font-family: var(--font-family);\n  font-size: var(--text-title-font-size);\n  font-weight: var(--text-title-font-weight);\n  text-transform: var(--text-title-text-transform);\n  margin-bottom: 7px;\n  color: var(--color-text);\n}\n.card-content-wrapper {\n  font-family: var(--font-family);\n  font-size: var(--text-base-font-size);\n  font-weight: var(--text-base-font-weight);\n  text-transform: var(--text-base-text-transform);\n  margin-bottom: 15px;\n  color: var(--color-text);\n  opacity: 0.7;\n}\n.card-actions-wrapper {\n  font-family: var(--font-family);\n  font-size: var(--text-base-font-size);\n  font-weight: var(--text-base-font-weight);\n  text-transform: var(--text-base-text-transform);\n  color: var(--color-text);\n}']})],CardComponent)},"./src/app/_main/components/checkbox/checkbox.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{b:()=>CheckboxComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),control_accessor_class=__webpack_require__("./src/app/_main/classes/control-accessor.class.ts");let CheckboxComponent=class CheckboxComponent extends control_accessor_class.A{};CheckboxComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-checkbox",template:'<mat-checkbox [formControl]="control" [class.required]="required" [name]="name">\n  <ng-content></ng-content>\n</mat-checkbox>\n<mat-error>{{ control.errors | validationError }}</mat-error>\n',styles:[":host {\n  position: relative;\n}\n\nmat-checkbox.ng-invalid.ng-touched ~ mat-error {\n  display: none;\n}\n\nmat-error {\n  position: absolute;\n  bottom: -5px;\n  left: 28px;\n  display: none;\n  font-size: 12px;\n}"]})],CheckboxComponent)},"./src/app/_main/components/input-date-time/date-picker/date-picker.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{L:()=>DatePickerComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),dayjs_min=__webpack_require__("./node_modules/dayjs/dayjs.min.js"),dayjs_min_default=__webpack_require__.n(dayjs_min),index_es=__webpack_require__("./node_modules/@fortawesome/free-solid-svg-icons/index.es.js"),control_accessor_class=__webpack_require__("./src/app/_main/classes/control-accessor.class.ts");let DatePickerComponent=class DatePickerComponent extends control_accessor_class.A{constructor(){super(...arguments),this.firstDayOfWeek=1,this.hideTodayButton=!1,this.cursor=this.control.value?dayjs_min_default()(this.control.value):dayjs_min_default()(),this.currentDate=dayjs_min_default()(),this.monthNames=dayjs_min_default().months(),this.weekdaysShort=[...dayjs_min_default().weekdaysShort().slice(this.firstDayOfWeek),...dayjs_min_default().weekdaysShort().slice(0,this.firstDayOfWeek)],this.faChevronLeft=index_es.A35,this.faChevronRight=index_es._tD,this.daysGrid=this.calculateDaysGrid()}calculateDaysGrid(){let pointer=(()=>{const date=this.cursor.startOf("month"),day=date.day();return date.subtract(day+7-this.firstDayOfWeek,"day")})();const daysGrid=[];for(let i=0;i<6;i++){daysGrid.push([]);for(let j=0;j<7;j++){const day={id:pointer.valueOf(),name:pointer.date(),isWeekend:0===pointer.day()||6===pointer.day(),isFromPreviousMonth:pointer.month()<this.cursor.month(),isFromNextMonth:pointer.month()>this.cursor.month(),today:pointer.isSame(this.currentDate,"day"),selected:pointer.isSame(dayjs_min_default()(this.control.value||0),"day")};daysGrid[i].push(day),pointer=pointer.add(1,"day")}}return daysGrid}previousMonth(){console.log(this.cursor.format("YYYY-MM-DD")),this.cursor=this.cursor.subtract(1,"month"),console.log(this.cursor.format("YYYY-MM-DD")),this.daysGrid=this.calculateDaysGrid()}nextMonth(){this.cursor=this.cursor.add(1,"month"),this.daysGrid=this.calculateDaysGrid()}today(){this.cursor=dayjs_min_default()(),this.daysGrid=this.calculateDaysGrid(),this.control.setValue(this.cursor.valueOf())}setControlProperties(propertyNames,values){let value=dayjs_min_default()(this.control.value||0);for(let i=0;i<Math.min(propertyNames.length,values.length);i++)value=value.set(propertyNames[i],values[i]);this.control.setValue(value.valueOf())}selectDay(day){day.isFromPreviousMonth?this.cursor=this.cursor.subtract(1,"month"):day.isFromNextMonth&&(this.cursor=this.cursor.add(1,"month")),this.cursor=this.cursor.date(day.name),this.control.setValue(this.cursor.valueOf()),this.daysGrid=this.calculateDaysGrid()}ngAfterControlInit(){this.control.value&&(this.cursor=dayjs_min_default()(this.control.value),this.daysGrid=this.calculateDaysGrid())}writeValue(value){super.writeValue(value),value&&!dayjs_min_default()(this.value).isSame(dayjs_min_default()(this.previousValue))&&(console.log("new value",value),this.cursor=dayjs_min_default()(value)),this.daysGrid=this.calculateDaysGrid()}};DatePickerComponent.propDecorators={firstDayOfWeek:[{type:core.Input}],hideTodayButton:[{type:core.Input}]},DatePickerComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"date-picker",template:'<div class="date">\n  <div class="year-header">\n    {{ cursor | dayjsFormat:\'YYYY\' }}\n  </div>\n  <div class="header">\n    <button class="previous-month" (click)="previousMonth()">\n      <app-icon [icon]="faChevronLeft" size="1rem"></app-icon>\n    </button>\n    <h4 class="month-name">\n      {{ cursor | month }}\n    </h4>\n    <button class="next-month" (click)="nextMonth()">\n      <app-icon [icon]="faChevronRight" size="1rem"></app-icon>\n    </button>\n  </div>\n  <div class="calendar">\n    <div class="weekdays">\n      <span *ngFor="let weekday of weekdaysShort" class="weekday">{{ weekday }}</span>\n    </div>\n    <div class="calendar-grid">\n      <div class="row" *ngFor="let row of daysGrid">\n        <div class="cell" *ngFor="let day of row" (click)="selectDay(day)" [class.today]="day.today"\n          [class.selected]="day.selected">\n          <span class="day" [class.opacity-50]="day.isFromPreviousMonth || day.isFromNextMonth">{{ day.name }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf="!hideTodayButton" class="date-actions">\n    <button (click)="today()" i18n>Today</button>\n  </div>\n</div>\n',styles:[":host {\n  display: flex;\n  color: var(--color-text);\n}\n\n.date .year-header {\n  padding: 0.5rem;\n  opacity: 0.5;\n  text-align: center;\n}\n\n.date .header {\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem 1rem 1rem 1rem;\n}\n\n.date .header .previous-month,\n.date .header .next-month {\n  padding: 0.25rem;\n  background-color: transparent;\n  border-radius: 3px;\n  color: var(--color-text);\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.1s ease;\n}\n\n.date .header .previous-month:hover,\n.date .header .next-month:hover {\n  background-color: var(--color-secondary-800);\n}\n\n.date .calendar {\n  width: 300px;\n  padding: 0 1rem;\n}\n\n.date .calendar .weekdays {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  margin-bottom: 0.25rem;\n  font-size: 0.75rem;\n  opacity: 0.5;\n}\n\n.date .calendar .weekdays > * {\n  width: 100%;\n  text-align: center;\n}\n\n.date .calendar .calendar-grid {\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.date .calendar .calendar-grid .row {\n  display: flex;\n  width: 100%;\n  justify-content: stretch;\n}\n\n.date .calendar .calendar-grid .row .cell {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  padding: 0.1rem;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: background-color 0.1s ease;\n}\n\n.date .calendar .calendar-grid .row .cell.today {\n  background-color: var(--color-secondary-800);\n}\n\n.date .calendar .calendar-grid .row .cell.selected {\n  background-color: var(--color-primary-500);\n}\n\n.date .calendar .calendar-grid .row .cell:not(.selected):hover {\n  background-color: var(--color-secondary-800);\n}\n\n.date .date-actions {\n  display: flex;\n  justify-content: flex-end;\n  padding: 1rem;\n}\n\n.date .date-actions button {\n  padding: 0.25rem 0.5rem;\n  background-color: transparent;\n  border-radius: 3px;\n  color: var(--color-text);\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.1s ease;\n}\n\n.date .date-actions button:hover {\n  background-color: var(--color-secondary-800);\n}"]})],DatePickerComponent)},"./src/app/_main/components/input-date-time/input-date-time.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{M:()=>InputDateTimeComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),control_accessor_class=__webpack_require__("./src/app/_main/classes/control-accessor.class.ts"),index_es=__webpack_require__("./node_modules/@fortawesome/free-solid-svg-icons/index.es.js"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),fromEvent=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),ngneat_until_destroy=__webpack_require__("./node_modules/@ngneat/until-destroy/fesm2020/ngneat-until-destroy.mjs"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),ngneat_reactive_forms=__webpack_require__("./node_modules/@ngneat/reactive-forms/fesm2020/ngneat-reactive-forms.mjs"),dayjs_min=__webpack_require__("./node_modules/dayjs/dayjs.min.js"),dayjs_min_default=__webpack_require__.n(dayjs_min),date_picker_component=__webpack_require__("./src/app/_main/components/input-date-time/date-picker/date-picker.component.ts");let InputDateTimeComponent=class InputDateTimeComponent extends control_accessor_class.A{constructor(elementRef,cdRef,ngControl){var _a;super(ngControl,cdRef),this.elementRef=elementRef,this.placeholder="",this.faCalendar=index_es.fT7,this.isPickerOpen$=new BehaviorSubject.X(!1),this.displayFormat="DD.MM.YYYY HH:mm",this.displayControl=new ngneat_reactive_forms.NI(this.format(null===(_a=this.control)||void 0===_a?void 0:_a.value)),this.focused=!1}ngOnInit(){super.ngOnInit(),(0,fromEvent.R)(document,"keydown").pipe((0,filter.h)((event=>"Backspace"===event.key)),(0,filter.h)((()=>this.focused)),(0,ngneat_until_destroy.t)(this)).subscribe((()=>{this.control.setValue(null)}))}waitForClickOutside(fn){(0,fromEvent.R)(document,"mousedown").pipe((0,ngneat_until_destroy.t)(this),(0,filter.h)((e=>!(this.overlay&&this.overlay.nativeElement.contains(e.target)||this.elementRef&&this.elementRef.nativeElement.contains(e.target)))),(0,take.q)(1)).subscribe((()=>fn()))}openPicker(){this.isPickerOpen$.next(!0),setTimeout((()=>{this.waitForClickOutside((()=>this.closePicker()))}),100)}closePicker(){this.isPickerOpen$.next(!1)}onFocusStateChanged(state){state&&(this.focused=state,this.openPicker())}format(value){return value?dayjs_min_default()(value).format(this.displayFormat):""}writeValue(value){super.writeValue(value),this.displayControl.setValue(this.format(value)),this.datePicker&&this.datePicker.writeValue(value)}};InputDateTimeComponent.ctorParameters=()=>[{type:core.ElementRef},{type:core.ChangeDetectorRef},{type:fesm2020_forms.NgControl}],InputDateTimeComponent.propDecorators={placeholder:[{type:core.Input}],floatingLabel:[{type:core.Input}],staticLabel:[{type:core.Input}],pending:[{type:core.Input}],overlay:[{type:core.ViewChild,args:["overlay"]}],datePicker:[{type:core.ViewChild,args:[date_picker_component.L]}]},InputDateTimeComponent=(0,tslib_es6.gn)([(0,ngneat_until_destroy.c)(),(0,core.Component)({selector:"app-input-date-time",template:'<app-input #trigger="cdkOverlayOrigin" [formControl]="displayControl" [floatingLabel]="floatingLabel"\n  [staticLabel]="staticLabel" [placeholder]="placeholder" [readonly]="true" [pending]="pending"\n  (focus)="onFocusStateChanged($event)" cdkOverlayOrigin>\n  <span class="suffix">\n    <app-icon [icon]="faCalendar" size="16px"></app-icon>\n  </span>\n</app-input>\n\n<ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]="trigger"\n  [cdkConnectedOverlayOpen]="(isPickerOpen$ | async) || false"\n  [cdkConnectedOverlayBackdropClass]="\'cdk-overlay-transparent-backdrop\'" [cdkConnectedOverlayHasBackdrop]="true">\n  <div #overlay class="overlay">\n    <date-time-picker [formControl]="control"></date-time-picker>\n  </div>\n</ng-template>\n',styles:[".overlay {\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n}"]})],InputDateTimeComponent)},"./src/app/_main/components/input/input.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{a:()=>InputComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var text_field=__webpack_require__("./node_modules/@angular/cdk/fesm2020/text-field.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),control_accessor_class=__webpack_require__("./src/app/_main/classes/control-accessor.class.ts");let InputComponent=class InputComponent extends control_accessor_class.A{constructor(ngControl,autofillMonitor,cdRef){super(ngControl,cdRef),this.ngControl=ngControl,this.autofillMonitor=autofillMonitor,this.type="text",this.placeholder="",this.focus=new core.EventEmitter,this.focused=!1,this.autofilledByBrowser=!1}ngAfterViewInit(){this.autofillMonitor.monitor(this.input.nativeElement).subscribe((()=>{this.autofilledByBrowser=!0}))}onFocus(){this.focused=!0,this.focus.emit(!0)}onBlur(){this.focused=!1,this.focus.emit(!1)}};InputComponent.ctorParameters=()=>[{type:fesm2020_forms.NgControl},{type:text_field.Lq},{type:core.ChangeDetectorRef}],InputComponent.propDecorators={type:[{type:core.Input}],floatingLabel:[{type:core.Input}],staticLabel:[{type:core.Input}],placeholder:[{type:core.Input}],hint:[{type:core.Input}],readonly:[{type:core.Input}],allowResizeByError:[{type:core.Input}],pending:[{type:core.Input}],focus:[{type:core.Output}],focused:[{type:core.HostBinding,args:["class.focused"]}],input:[{type:core.ViewChild,args:["input"]}]},InputComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-input",template:'<div class="input-form-field" [class.required]="required" [class.has-value]="!!control.value || autofilledByBrowser">\n  <label *ngIf="staticLabel" class="static-label">{{ staticLabel }}</label>\n  <div class="input-wrapper">\n    <div class="fragment-left">\n      <div #fragmentLeft class="fragment-left-wrapper">\n        <ng-content select=".prefix"></ng-content>\n      </div>\n    </div>\n    <div class="fragment-middle">\n      <label *ngIf="floatingLabel" class="floating-label">{{ floatingLabel }}</label>\n    </div>\n    <div class="fragment-right">\n      <ng-container *ngIf="pending; else suffix">\n        <loader></loader>\n      </ng-container>\n      <ng-template #suffix>\n        <ng-content select=".suffix"></ng-content>\n      </ng-template>\n    </div>\n    <input #input [name]="name" [type]="type" [placeholder]="placeholder" [formControl]="control" [readonly]="readonly"\n      [autocomplete]="autocomplete" (focus)="onFocus()" (blur)="onBlur()"\n      [style.padding-left]="(fragmentLeft.clientWidth + 16) + \'px\'">\n  </div>\n  <div *ngIf="control.touched && control.invalid" class="error" [class.relative]="allowResizeByError">\n    {{ control.errors | validationError }}\n  </div>\n</div>\n',styles:['/**\n * This typography specification is based on: https://spectrum.adobe.com/page/typography/\n * and the tailwind utility classes: https://tailwindcss.com/docs/font-size\n *\n * Tips:\n * 16px <-> 1rem\n */\n/* ======================= */\n/* ==== CONFIGURATION ==== */\n/* ======================= */\n:root {\n  --font-family: montserrat, roboto, "Helvetica Neue", sans-serif;\n  --text-label-font-size: 0.75rem;\n  --text-label-font-weight: 400;\n  --text-label-text-transform: uppercase;\n  --text-title-font-size: 0.875rem;\n  --text-title-font-weight: 700;\n  --text-title-text-transform: none;\n  --text-base-font-size: 0.875rem;\n  --text-base-font-weight: 400;\n  --text-base-text-transform: none;\n  --text-lg-font-size: 1rem;\n  --text-lg-font-weight: 400;\n  --text-lg-text-transform: none;\n  --text-xl-font-size: 1.125rem;\n  --text-xl-font-weight: 400;\n  --text-xl-text-transform: none;\n  --text-2xl-font-size: 1.25rem;\n  --text-2xl-font-weight: 400;\n  --text-2xl-text-transform: none;\n  --text-3xl-font-size: 1.5rem;\n  --text-3xl-font-weight: 400;\n  --text-3xl-text-transform: none;\n  --text-4xl-font-size: 1.75rem;\n  --text-4xl-font-weight: 400;\n  --text-4xl-text-transform: none;\n  --text-5xl-font-size: 2rem;\n  --text-5xl-font-weight: 400;\n  --text-5xl-text-transform: none;\n}\n/* ==================================== */\n/* ==== UTILITY CLASSES AND MIXINS ==== */\n/* ==================================== */\n.text-label {\n  font-family: var(--font-family);\n  font-size: var(--text-label-font-size);\n  font-weight: var(--text-label-font-weight);\n  text-transform: var(--text-label-text-transform);\n  color: var(--color-text);\n}\n.text-base {\n  font-family: var(--font-family);\n  font-size: var(--text-base-font-size);\n  font-weight: var(--text-base-font-weight);\n  text-transform: var(--text-base-text-transform);\n  color: var(--color-text);\n}\n.text-title {\n  font-family: var(--font-family);\n  font-size: var(--text-title-font-size);\n  font-weight: var(--text-title-font-weight);\n  text-transform: var(--text-title-text-transform);\n  color: var(--color-text);\n}\n.text-lg {\n  font-family: var(--font-family);\n  font-size: var(--text-lg-font-size);\n  font-weight: var(--text-lg-font-weight);\n  text-transform: var(--text-lg-text-transform);\n  color: var(--color-text);\n}\n.text-xl {\n  font-family: var(--font-family);\n  font-size: var(--text-xl-font-size);\n  font-weight: var(--text-xl-font-weight);\n  text-transform: var(--text-xl-text-transform);\n  color: var(--color-text);\n}\n.text-2xl {\n  font-family: var(--font-family);\n  font-size: var(--text-2xl-font-size);\n  font-weight: var(--text-2xl-font-weight);\n  text-transform: var(--text-2xl-text-transform);\n  color: var(--color-text);\n}\n.text-3xl {\n  font-family: var(--font-family);\n  font-size: var(--text-3xl-font-size);\n  font-weight: var(--text-3xl-font-weight);\n  text-transform: var(--text-3xl-text-transform);\n  color: var(--color-text);\n}\n.text-4xl {\n  font-family: var(--font-family);\n  font-size: var(--text-4xl-font-size);\n  font-weight: var(--text-4xl-font-weight);\n  text-transform: var(--text-4xl-text-transform);\n  color: var(--color-text);\n}\n.text-5xl {\n  font-family: var(--font-family);\n  font-size: var(--text-5xl-font-size);\n  font-weight: var(--text-5xl-font-weight);\n  text-transform: var(--text-5xl-text-transform);\n  color: var(--color-text);\n}\n:host {\n  display: inline-block;\n  width: 100%;\n}\n.form-field {\n  display: flex;\n  max-width: 400px;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n}\n.form-field > label {\n  font-family: var(--font-family);\n  font-size: var(--text-title-font-size);\n  font-weight: var(--text-title-font-weight);\n  text-transform: var(--text-title-text-transform);\n  margin-bottom: 0.4rem;\n  color: var(--color-input-text);\n}\n.form-field > label.required::after {\n  margin-left: 0.2rem;\n  color: var(--color-input-text);\n  content: "*";\n}\n.input-form-field {\n  position: relative;\n}\n.input-form-field .static-label {\n  font-family: var(--font-family);\n  font-size: var(--text-title-font-size);\n  font-weight: var(--text-title-font-weight);\n  text-transform: var(--text-title-text-transform);\n  margin-bottom: 0.4rem;\n  color: var(--color-input-text);\n}\n.input-form-field .static-label.required::after {\n  margin-left: 0.2rem;\n  color: var(--color-input-text);\n  content: "*";\n}\n.input-form-field .floating-label {\n  font-family: var(--font-family);\n  font-size: var(--text-base-font-size);\n  font-weight: var(--text-base-font-weight);\n  text-transform: var(--text-base-text-transform);\n  padding: 0 0.4rem;\n  color: var(--color-text);\n  transition: transform 0.2s ease, font-size 0.2s ease;\n}\n.input-form-field .fragment-left,\n.input-form-field .fragment-middle,\n.input-form-field .fragment-right {\n  z-index: 1;\n  height: 100%;\n  border: 2px solid var(--color-input-border);\n  pointer-events: none;\n}\n.input-form-field .fragment-left {\n  display: flex;\n  width: 0.5rem;\n  align-items: center;\n  padding-left: 0.5rem;\n  border-right-width: 0;\n  border-bottom-left-radius: var(--border-radius);\n  border-top-left-radius: var(--border-radius);\n}\n.input-form-field .fragment-left .fragment-left-wrapper {\n  flex-shrink: 0;\n}\n.input-form-field .fragment-middle {\n  display: flex;\n  align-items: center;\n  border-right-width: 0;\n  border-left-width: 0;\n}\n.input-form-field .fragment-right {\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  justify-content: flex-end;\n  padding-right: 0.75rem;\n  border-left-width: 0;\n  border-bottom-right-radius: var(--border-radius);\n  border-top-right-radius: var(--border-radius);\n}\n.input-form-field .input-wrapper {\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 44px;\n  background-color: var(--color-input-background);\n  border-radius: var(--border-radius);\n  transition: background-color 0.2s ease-in-out;\n}\n.input-form-field .input-wrapper:hover {\n  background-color: var(--color-input-background-hover);\n}\n.input-form-field input {\n  font-family: var(--font-family);\n  font-size: var(--text-base-font-size);\n  font-weight: var(--text-base-font-weight);\n  text-transform: var(--text-base-text-transform);\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  padding-left: 0.9rem;\n  background-color: var(--color-input-background);\n  background-color: transparent;\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n}\n.has-value .floating-label,\n:host.focused .floating-label {\n  font-size: 0.75em;\n  transform: translateY(-22px);\n}\n.has-value .fragment-middle,\n:host.focused .fragment-middle {\n  border-top-width: 0;\n}\n:host:not(.focused) input::placeholder {\n  opacity: 0;\n}\n:host.ng-touched.ng-invalid .fragment-left,\n:host.ng-touched.ng-invalid .fragment-middle,\n:host.ng-touched.ng-invalid .fragment-right {\n  border-color: var(--color-red-500);\n}\n:host.focused .input-form-field .fragment-left,\n:host.focused .input-form-field .fragment-middle,\n:host.focused .input-form-field .fragment-right {\n  border-color: var(--color-primary-500);\n}\n.required .static-label::after,\n.required .floating-label::after {\n  margin-left: 0.2rem;\n  color: var(--color-red-500);\n  content: "*";\n}\n.error {\n  position: absolute;\n  margin-top: 0.2rem;\n  color: var(--color-red-500);\n  font-size: 12px;\n  line-height: 0.8rem;\n}']})],InputComponent)},"./src/app/_main/components/textarea/textarea.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>TextareaComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var SelectionEditOperationType,snakeCase=__webpack_require__("./node_modules/lodash-es/snakeCase.js");!function(SelectionEditOperationType){SelectionEditOperationType.before="BEFORE",SelectionEditOperationType.after="AFTER",SelectionEditOperationType.beforeEachLine="BEFORE_EACH_LINE",SelectionEditOperationType.afterEachLine="AFTER_EACH_LINE"}(SelectionEditOperationType||(SelectionEditOperationType={}));const SelectionEditOperationOrder={before:1,after:4,beforeEachLine:2,afterEachLine:3},SelectionEditOperationConverter={[SelectionEditOperationType.before]:(editor,selection,value)=>[{range:{startColumn:1,startLineNumber:selection.startLineNumber,endColumn:1,endLineNumber:selection.startLineNumber},text:value}],[SelectionEditOperationType.after]:(editor,selection,value)=>{var _a;const column=((null===(_a=editor.getModel())||void 0===_a?void 0:_a.getLineLength(selection.endLineNumber))||0)+1;return[{range:{startColumn:column,startLineNumber:selection.endLineNumber,endColumn:column,endLineNumber:selection.endLineNumber},text:value}]},[SelectionEditOperationType.beforeEachLine]:(editor,selection,value)=>{const startLine=selection.startLineNumber,endLine=selection.endLineNumber,difference=Math.abs(startLine-endLine)+1,offset=Math.min(startLine,endLine);return[...new Array(difference).keys()].map((k=>k+offset)).map((line=>({range:{startLineNumber:line,startColumn:1,endLineNumber:line,endColumn:1},text:value})))},[SelectionEditOperationType.afterEachLine]:(editor,selection,value)=>{const model=editor.getModel();if(!model)return[];const startLine=selection.startLineNumber,endLine=selection.endLineNumber,difference=Math.abs(startLine-endLine)+1,offset=Math.min(startLine,endLine);return[...new Array(difference).keys()].map((k=>k+offset)).map((line=>{const column=model.getLineLength(line)+1;return{range:{startLineNumber:line,startColumn:column,endLineNumber:line,endColumn:column},text:value}}))}};class SelectionEditPlugin{static init(prototype){prototype.getSelectionEdits=function(edits){return SelectionEditPlugin.getSelectionEdits.bind(this)(edits)},prototype.executeSelectionEdits=function(edits,endCursorState){return SelectionEditPlugin.executeSelectionEdits.bind(this)(edits,endCursorState)}}static getSelectionEdits(edits){const editor=this,selections=editor.getSelections();let _edits=[];if(!selections)return[];for(const selection of selections){const entries=Object.entries(edits).sort(((a,b)=>SelectionEditOperationOrder[a[0]]-SelectionEditOperationOrder[b[0]]));for(const[key,value]of entries){const _key=(0,snakeCase.Z)(key).toUpperCase();_edits=[..._edits,...SelectionEditOperationConverter[_key](editor,selection,value)]}}return _edits}static executeSelectionEdits(edits,endCursorState){const _edits=this.getSelectionEdits(edits);this.executeEdits("",_edits,endCursorState)}}var editor_main=__webpack_require__("./node_modules/monaco-editor/esm/vs/editor/editor.main.js");class Monaco{static get initialized(){return this._initialized}static init(){Monaco._initialized||Monaco.loadPlugins()}static loadPlugins(){const dummy=document.createElement("div"),prototype=editor_main.j6.create(dummy).__proto__;SelectionEditPlugin.init(prototype)}}Monaco._initialized=!1;var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),control_accessor_class=__webpack_require__("./src/app/_main/classes/control-accessor.class.ts"),marked_esm=__webpack_require__("./node_modules/marked/lib/marked.esm.js"),es=__webpack_require__("./node_modules/highlight.js/es/index.js"),index_es=__webpack_require__("./node_modules/@fortawesome/free-solid-svg-icons/index.es.js");const EMOJI_SEQUENCE_ALIASES={":-)":"🙂",":)":"🙂",":-|":"😐",":|":"😐",":-(":"☹️",":(":"☹️",":-D":"😃",":D":"😃",":-p":"😛",":p":"😛",":-o":"😲",":o":"😲",";-)":"😉",";)":"😉","<3":"❤️","</3":"💔","8-)":"😎"},EMOJI_SEQUENCE_REGEX=new RegExp("^("+Object.keys(EMOJI_SEQUENCE_ALIASES).map((sequence=>sequence.split("").map((char=>[")","(","|"].includes(char)?`\\${char}`:char)).join(""))).join("|")+")","gi");var emoji=__webpack_require__("./node_modules/emoji-js/lib/emoji.js");const EMOJI_ALIASES={crush:"1f970",tear:"1f972"};class Emoji{static emojiNameToUnicode(emojiName){return Emoji.colonsToUnicode(`:${emojiName}:`)}static colonsToUnicode(source){return Emoji._emojiConvertor.replace_colons(source)}static characterSequenceToUnicode(characterSequence){return EMOJI_SEQUENCE_ALIASES[characterSequence]||characterSequence}static unicodeToTwemoji(source){window.twemoji.parse(source,{size:"16x16",base:"https://twemoji.maxcdn.com/"})}}Emoji._emojiConvertor=(()=>{const emojiConvertor=new emoji.EmojiConvertor;return emojiConvertor.replace_mode="unified",emojiConvertor.allow_native=!0,emojiConvertor.allow_caps=!0,emojiConvertor.addAliases(EMOJI_ALIASES),emojiConvertor})();const marked_emoji_extension_emoji={name:"emoji",level:"inline",start:src=>src.indexOf(":"),tokenizer(src,_tokens){const match=/^:(\w+):/.exec(src),matchSequence=EMOJI_SEQUENCE_REGEX.exec(src);return matchSequence?{type:"emoji",raw:matchSequence[0],emoji:matchSequence[1],emojiType:"sequence"}:match?{type:"emoji",raw:match[0],emoji:match[1],emojiType:"colon"}:void 0},renderer:token=>`<span class="emoji">${("colon"===token.emojiType?Emoji.emojiNameToUnicode:Emoji.characterSequenceToUnicode)(token.emoji)}</span>`};class Marked{static init(){Marked._initialized||(marked_esm.TU.use({extensions:[marked_emoji_extension_emoji]}),Marked._initialized=!0)}static getRenderer(){let renderer=new marked_esm.Th;return renderer=function linkOverride(renderer){const linkRenderer=renderer.link;return renderer.link=(href,title,text)=>{if(!href)return linkRenderer.call(renderer,href,title,text);const localLink=href.startsWith(`${location.protocol}//${location.hostname}`),html=linkRenderer.call(renderer,href,title,text);return localLink?html:html.replace(/^<a /,'<a target="_blank" rel="noreferrer noopener nofollow" ')},renderer}(renderer),renderer}}Marked._initialized=!1;editor_main.j6.defineTheme("dark",{base:"vs-dark",inherit:!0,rules:[],colors:{"editor.background":"#364053"}});let TextareaComponent=class TextareaComponent extends control_accessor_class.A{constructor(){super(...arguments),this.placeholder="",this.rows=4,this.cols=50,this.renderer=Marked.getRenderer(),this.mode="editor",this.editor=null,this.faCode=index_es.dT$,this.faUnderline=index_es.jmw,this.faBold=index_es.c_t,this.faItalic=index_es.cJz,this.faQuoteLeft=index_es.y1i,this.faList=index_es.Zrf,this.faListNumeric=index_es.ZYZ,this.faLink=index_es.nNP,this.faFileCode=index_es.w49}ngOnInit(){super.ngOnInit(),Marked.init(),Monaco.init(),es.Z.configure({languages:[]})}ngAfterViewInit(){var _a;const container=this.input.nativeElement,_editor=editor_main.j6.create(container,{value:this.control.value||"",language:"markdown",scrollBeyondLastLine:!1,wordWrap:"on",wrappingStrategy:"advanced",minimap:{enabled:!1},overviewRulerLanes:0,theme:"dark",wordBasedSuggestions:!1});let ignoreEvent=!1;const updateHeight=()=>{const contentHeight=Math.min(500,_editor.getContentHeight()),containerWidth=Math.min(1e3,container.scrollWidth);container.style.width=`${containerWidth}px`,container.style.height=`${contentHeight}px`;try{ignoreEvent=!0,_editor.layout({width:containerWidth,height:contentHeight})}finally{ignoreEvent=!1}};_editor.onDidContentSizeChange(updateHeight),null===(_a=_editor.getModel())||void 0===_a||_a.onDidChangeContent((()=>{this.control.setValue(_editor.getValue())})),updateHeight(),this.editor=_editor}openEditor(){this.mode="editor"}openPreview(){var _a;const{renderer}=this;this.output.nativeElement.innerHTML=marked_esm.TU.parse((null===(_a=this.editor)||void 0===_a?void 0:_a.getValue())||"",{renderer}),this.output.nativeElement.querySelectorAll("pre code").forEach((c=>{es.Z.highlightElement(c)})),this.mode="preview"}applyUnderline(){var _a,_b;null===(_a=this.editor)||void 0===_a||_a.executeSelectionEdits({before:"<u>",after:"</u>"}),null===(_b=this.editor)||void 0===_b||_b.focus()}applyBold(){var _a,_b;null===(_a=this.editor)||void 0===_a||_a.executeSelectionEdits({before:"**",after:"**"}),null===(_b=this.editor)||void 0===_b||_b.focus()}applyItalic(){var _a,_b;null===(_a=this.editor)||void 0===_a||_a.executeSelectionEdits({before:"*",after:"*"}),null===(_b=this.editor)||void 0===_b||_b.focus()}applyLink(){var _a,_b;null===(_a=this.editor)||void 0===_a||_a.executeSelectionEdits({before:"[",after:"](https://google.com)"}),null===(_b=this.editor)||void 0===_b||_b.focus()}applyList(){var _a,_b;null===(_a=this.editor)||void 0===_a||_a.executeSelectionEdits({before:"<ul>\n",after:"\n</ul>",beforeEachLine:"  <li>",afterEachLine:"</li>"}),null===(_b=this.editor)||void 0===_b||_b.focus()}applyListNumeric(){var _a,_b;null===(_a=this.editor)||void 0===_a||_a.executeSelectionEdits({before:"<ol>\n",after:"\n</ol>",beforeEachLine:"  <li>",afterEachLine:"</li>"}),null===(_b=this.editor)||void 0===_b||_b.focus()}applyQuote(){var _a,_b;null===(_a=this.editor)||void 0===_a||_a.executeSelectionEdits({beforeEachLine:">"}),null===(_b=this.editor)||void 0===_b||_b.focus()}applyCode(){var _a,_b;null===(_a=this.editor)||void 0===_a||_a.executeSelectionEdits({before:"`",after:"`"}),null===(_b=this.editor)||void 0===_b||_b.focus()}applyCodeBlock(){var _a,_b;null===(_a=this.editor)||void 0===_a||_a.executeSelectionEdits({before:"```javascript\n",after:"\n```"}),null===(_b=this.editor)||void 0===_b||_b.focus()}};TextareaComponent.propDecorators={floatingLabel:[{type:core.Input}],staticLabel:[{type:core.Input}],placeholder:[{type:core.Input}],hint:[{type:core.Input}],rows:[{type:core.Input}],cols:[{type:core.Input}],input:[{type:core.ViewChild,args:["input"]}],output:[{type:core.ViewChild,args:["output"]}]},TextareaComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-textarea",template:'<div class="form-field">\n  \x3c!-- <label *ngIf="staticLabel" [class.required]="required">{{ staticLabel }}</label>\n  <mat-form-field appearance="outline" [class.without-floating-label]="!floatingLabel">\n    <mat-label *ngIf="floatingLabel">{{ floatingLabel }}</mat-label>\n    <textarea #input matInput [placeholder]="placeholder" [required]="required" [formControl]="control"\n      [autocomplete]="autocomplete" [rows]="rows" [cols]="cols" name="test"></textarea>\n    <mat-error>{{ ngControl.control?.errors | validationError }}</mat-error>\n    <mat-hint *ngIf="hint">{{ hint }}</mat-hint>\n  </mat-form-field> --\x3e\n  <section class="switch">\n    <button (click)="openEditor()" [class.active]="mode === \'editor\'" type="button">Editor</button>\n    <button (click)="openPreview()" [class.active]="mode === \'preview\'" type="button">Preview</button>\n  </section>\n  <div #input [class.hidden]="mode !== \'editor\'"></div>\n  <div #output class="preview" [class.hidden]="mode !== \'preview\'"></div>\n  <section class="tools">\n\n    \x3c!-- Bold --\x3e\n    <div class="tool" matTooltip="Bold" i18n-matTooltip (click)="applyBold()">\n      <div class="icon">\n        <app-icon size="16px" [icon]="faBold"></app-icon>\n      </div>\n    </div>\n\n    \x3c!-- Italic --\x3e\n    <div class="tool" matTooltip="Italic" i18n-matTooltip (click)="applyItalic()">\n      <div class="icon">\n        <app-icon size="16px" [icon]="faItalic"></app-icon>\n      </div>\n    </div>\n\n    \x3c!-- Underline --\x3e\n    <div class="tool" matTooltip="Underline" i18n-matTooltip (click)="applyUnderline()">\n      <div class="icon">\n        <app-icon size="16px" [icon]="faUnderline"></app-icon>\n      </div>\n    </div>\n\n    \x3c!-- Link --\x3e\n    <div class="tool" matTooltip="Link" i18n-matTooltip (click)="applyLink()">\n      <div class="icon">\n        <app-icon size="16px" [icon]="faLink"></app-icon>\n      </div>\n    </div>\n\n    \x3c!-- List --\x3e\n    <div class="tool" matTooltip="Dotted list" i18n-matTooltip (click)="applyList()">\n      <div class="icon">\n        <app-icon size="16px" [icon]="faList"></app-icon>\n      </div>\n    </div>\n\n    \x3c!-- List numeric --\x3e\n    <div class="tool" matTooltip="Numeric list" i18n-matTooltip (click)="applyListNumeric()">\n      <div class="icon">\n        <app-icon size="16px" [icon]="faListNumeric"></app-icon>\n      </div>\n    </div>\n\n    \x3c!-- Quote --\x3e\n    <div class="tool" matTooltip="Quote" i18n-matTooltip (click)="applyQuote()">\n      <div class="icon">\n        <app-icon size="16px" [icon]="faQuoteLeft"></app-icon>\n      </div>\n    </div>\n\n    \x3c!-- Code --\x3e\n    <div class="tool" matTooltip="Code" i18n-matTooltip (click)="applyCode()">\n      <div class="icon">\n        <app-icon size="16px" [icon]="faCode"></app-icon>\n      </div>\n    </div>\n\n    \x3c!-- Code block --\x3e\n    <div class="tool" matTooltip="Block of code" i18n-matTooltip (click)="applyCodeBlock()">\n      <div class="icon">\n        <app-icon size="16px" [icon]="faFileCode"></app-icon>\n      </div>\n    </div>\n  </section>\n</div>\n',styles:[":host {\n  display: block;\n  color: var(--color-text);\n}\n\n.form-field {\n  padding: 1rem 0 0 0;\n  border: 1px solid var(--color-input-border);\n  background-color: var(--color-input-background);\n  border-radius: var(--border-radius);\n}\n\n.form-field .switch {\n  margin-bottom: 1em;\n  margin-left: 1em;\n}\n\n.form-field .switch > * {\n  opacity: 0.5;\n}\n\n.form-field .switch > *:not(:last-child) {\n  margin-right: 1em;\n}\n\n.form-field .switch > *.active {\n  opacity: 1;\n}\n\n.form-field .preview {\n  overflow: auto;\n  max-height: 500px;\n  padding: 0 1em;\n}\n\n.preview ::ng-deep h1 {\n  font-size: 2em;\n}\n\n.preview ::ng-deep h2 {\n  font-size: 1.8em;\n}\n\n.preview ::ng-deep h3 {\n  font-size: 1.6em;\n}\n\n.preview ::ng-deep h4 {\n  font-size: 1.4em;\n}\n\n.preview ::ng-deep h5 {\n  font-size: 1.2em;\n}\n\n.preview ::ng-deep h6 {\n  font-size: 1em;\n}\n\n.preview ::ng-deep hr {\n  margin: 1rem 0;\n  opacity: 0.5;\n}\n\n.preview ::ng-deep blockquote {\n  display: inline-block;\n  padding-left: 1rem;\n  border-left: 2px solid var(--color-secondary-200);\n}\n\n.preview ::ng-deep ul,\n.preview ::ng-deep ol,\n.preview ::ng-deep menu {\n  padding-left: 40px;\n  margin: 10px 0;\n  list-style: initial;\n}\n\n.preview ::ng-deep ol {\n  list-style: decimal;\n}\n\n.preview ::ng-deep a {\n  color: var(--color-purple-300);\n  text-decoration: underline;\n}\n\n.preview ::ng-deep code {\n  display: inline-block;\n  padding: 0.2rem 0.5rem;\n  background-color: var(--color-secondary-600);\n  border-radius: 2px;\n}\n\n.preview ::ng-deep table td, .preview ::ng-deep table th {\n  padding: 0.5rem;\n  border: 0.1rem solid var(--color-secondary-600);\n}\n\n.preview ::ng-deep .emoji {\n  display: inline-block;\n}\n\n.tools {\n  display: flex;\n  padding: 1rem;\n}\n\n.tools .tool {\n  display: block;\n  padding: 0.5rem;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.tools .tool:hover {\n  background-color: var(--color-secondary-700);\n}\n\n.tools .tool:not(:last-child) {\n  margin-right: 0.1rem;\n}"]})],TextareaComponent)},"./src/environments/environment.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{N:()=>environment});__webpack_require__("./node_modules/zone.js/fesm2015/zone-error.js");const environment={production:!1,apiURL:"/api",disableConsoleLog:!1,version:"0.0.14"}},"./src/polyfills.ts":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@angular/localize/fesm2020/init.mjs"),__webpack_require__("./node_modules/zone.js/fesm2015/zone.js");var dayjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/dayjs/dayjs.min.js"),dayjs__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_2__),dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/dayjs/plugin/utc.js"),dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_3__),dayjs_plugin_localeData__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/dayjs/plugin/localeData.js"),dayjs_plugin_localeData__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(dayjs_plugin_localeData__WEBPACK_IMPORTED_MODULE_4__),dayjs_plugin_objectSupport__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/dayjs/plugin/objectSupport.js"),dayjs_plugin_objectSupport__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(dayjs_plugin_objectSupport__WEBPACK_IMPORTED_MODULE_5__),dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/dayjs/plugin/customParseFormat.js"),dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_6__),dayjs_plugin_isToday__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/dayjs/plugin/isToday.js"),dayjs_plugin_isToday__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(dayjs_plugin_isToday__WEBPACK_IMPORTED_MODULE_7__),dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/dayjs/plugin/isBetween.js"),dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_8__),_environments_environment__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/environments/environment.ts");dayjs__WEBPACK_IMPORTED_MODULE_2___default().extend(dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_3___default()),dayjs__WEBPACK_IMPORTED_MODULE_2___default().extend(dayjs_plugin_localeData__WEBPACK_IMPORTED_MODULE_4___default()),dayjs__WEBPACK_IMPORTED_MODULE_2___default().extend(dayjs_plugin_objectSupport__WEBPACK_IMPORTED_MODULE_5___default()),dayjs__WEBPACK_IMPORTED_MODULE_2___default().extend(dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_6___default()),dayjs__WEBPACK_IMPORTED_MODULE_2___default().extend(dayjs_plugin_isToday__WEBPACK_IMPORTED_MODULE_7___default()),dayjs__WEBPACK_IMPORTED_MODULE_2___default().extend(dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_8___default()),_environments_environment__WEBPACK_IMPORTED_MODULE_9__.N.production||(window.dayjs=dayjs__WEBPACK_IMPORTED_MODULE_2___default())},"./src/stories/helpers/arg-type.helper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{aS:()=>DOCS_ICON_SELECT,bw:()=>DOCS_SELECT,gp:()=>DOCS_PRESET_CONTROL_ACCESSOR,zC:()=>DOCS_READONLY});var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@fortawesome/free-solid-svg-icons/index.es.js");const icons={none:null,faQuestion:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_0__.Psp,faPenToSquare:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_0__.Yai,faTrashArrowUp:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_0__.XTR,faAdd:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_0__.XSk},DOCS_ICON_SELECT={control:{type:"select"},options:Object.keys(icons),mapping:icons},DOCS_READONLY={control:!1},DOCS_SELECT={control:{type:"select"}},DOCS_PRESET_CONTROL_ACCESSOR={ngControl:DOCS_READONLY,required:{control:{type:!1},table:{category:"getters",type:{summary:"boolean"}},description:"Property to describe if the control is required in a form (contains `requiredValidator()`)",type:{name:"boolean"}},control:{control:{type:!1},table:{category:"getters",type:{summary:"FormControl"}},description:"Control attached to this control accessor",type:{name:"FormControl"}},formControl:{control:{type:!1},table:{category:"inputs",type:{summary:"FormControl"}},description:"Control to attach to this control accessor (`formControlName` can also be used instead)",type:{name:"FormControl"}},formControlName:{control:{type:!1},table:{category:"inputs",type:{summary:"string"}},description:"Control to attach to this control accessor - require to be nested in `formGroup` (`formControl` can also be used instead)",type:{name:"string"}}}},"./src/stories/helpers/classes/form-control-story-page-config.class.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{l:()=>FormControlStoryPageConfig});var lodash_es__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lodash-es/merge.js"),_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stories/helpers/arg-type.helper.ts"),_story_page_config_class__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/stories/helpers/classes/story-page-config.class.ts");const DEFAULT_CONFIG={argTypes:Object.assign({},_arg_type_helper__WEBPACK_IMPORTED_MODULE_0__.gp)};class FormControlStoryPageConfig extends _story_page_config_class__WEBPACK_IMPORTED_MODULE_1__.y{constructor(meta){super((0,lodash_es__WEBPACK_IMPORTED_MODULE_2__.Z)({},DEFAULT_CONFIG,meta))}}},"./src/stories/helpers/classes/story-page-config.class.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{y:()=>StoryPageConfig});var fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/animations.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),drag_drop=__webpack_require__("./node_modules/@angular/cdk/fesm2020/drag-drop.mjs"),observers=__webpack_require__("./node_modules/@angular/cdk/fesm2020/observers.mjs"),overlay=__webpack_require__("./node_modules/@angular/cdk/fesm2020/overlay.mjs"),platform=__webpack_require__("./node_modules/@angular/cdk/fesm2020/platform.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),autocomplete=__webpack_require__("./node_modules/@angular/material/fesm2020/autocomplete.mjs"),badge=__webpack_require__("./node_modules/@angular/material/fesm2020/badge.mjs"),fesm2020_checkbox=__webpack_require__("./node_modules/@angular/material/fesm2020/checkbox.mjs"),fesm2020_core=__webpack_require__("./node_modules/@angular/material/fesm2020/core.mjs"),datepicker=__webpack_require__("./node_modules/@angular/material/fesm2020/datepicker.mjs"),dialog=__webpack_require__("./node_modules/@angular/material/fesm2020/dialog.mjs"),form_field=__webpack_require__("./node_modules/@angular/material/fesm2020/form-field.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2020/icon.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2020/input.mjs"),menu=__webpack_require__("./node_modules/@angular/material/fesm2020/menu.mjs"),progress_spinner=__webpack_require__("./node_modules/@angular/material/fesm2020/progress-spinner.mjs"),fesm2020_select=__webpack_require__("./node_modules/@angular/material/fesm2020/select.mjs"),table=__webpack_require__("./node_modules/@angular/material/fesm2020/table.mjs"),tabs=__webpack_require__("./node_modules/@angular/material/fesm2020/tabs.mjs"),tooltip=__webpack_require__("./node_modules/@angular/material/fesm2020/tooltip.mjs"),router=__webpack_require__("./node_modules/@angular/router/fesm2020/router.mjs"),angular_fontawesome=__webpack_require__("./node_modules/@fortawesome/angular-fontawesome/fesm2020/angular-fontawesome.mjs"),button_component=__webpack_require__("./src/app/_main/components/button/button.component.ts"),card_component=__webpack_require__("./src/app/_main/components/card/card.component.ts"),checkbox_component=__webpack_require__("./src/app/_main/components/checkbox/checkbox.component.ts");var Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js");class DialogRef{constructor(){this.afterOpened$=new Subject.x,this.beforeClosed$=new Subject.x,this.afterClosed$=new Subject.x,this.state$=new BehaviorSubject.X(2)}close(dialogResult){this.state$.next(1),this.beforeClosed$.next(dialogResult),this.state$.next(2),this.afterClosed$.next(dialogResult),this.afterClosed$.complete(),this.afterOpened$.complete(),this.beforeClosed$.complete(),this.state$.complete()}afterOpened(){return this.state$.next(0),this.afterOpened$}afterClosed(){return this.afterClosed$}beforeClosed(){return this.beforeClosed$}backdropClick(){throw new Error("method should not be called when using custom outlet")}keydownEvents(){throw new Error("Method not implemented.")}updatePosition(position){throw new Error("method not be called when using custom outlet")}updateSize(width,height){throw new Error("method should not be called when using custom outlet")}addPanelClass(classes){throw new Error("method should not be called when using custom outlet")}removePanelClass(classes){throw new Error("method should not be called when using custom outlet")}getState(){return this.state$.value}}let ViewContainerDirective=class ViewContainerDirective{constructor(viewContainerRef){this.viewContainerRef=viewContainerRef}};function Service(){return function decorator(target){setTimeout((()=>{const WINDOW=window,ngRef=WINDOW.ngRef;ngRef&&(WINDOW.SERVICES||(WINDOW.SERVICES={}),WINDOW.SERVICES[target.name]=ngRef.get(target))}))}}ViewContainerDirective.ctorParameters=()=>[{type:core.ViewContainerRef}],ViewContainerDirective=(0,tslib_es6.gn)([(0,core.Directive)({selector:"[view-container]"})],ViewContainerDirective);var operators_filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");var AlertDialogVariant;!function(AlertDialogVariant){AlertDialogVariant.DEFAULT="default",AlertDialogVariant.IMPORTANT="important"}(AlertDialogVariant||(AlertDialogVariant={}));let AlertDialog=class AlertDialog{constructor(data,dialogRef){this.data=data,this.dialogRef=dialogRef,this.AlertDialogVariant=AlertDialogVariant,this.important=this.data.variant===AlertDialogVariant.IMPORTANT,data.variant||(data.variant=AlertDialogVariant.DEFAULT)}cancel(){this.dialogRef.close(!1)}confirm(){this.dialogRef.close(!0)}};var DialogOutlet;AlertDialog.ctorParameters=()=>[{type:void 0,decorators:[{type:core.Inject,args:[dialog.WI]}]},{type:dialog.so}],AlertDialog.propDecorators={important:[{type:core.HostBinding,args:["class.important-dialog"]}]},AlertDialog=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-alert-dialog",template:'<h1 mat-dialog-title [class.important]="data.variant === AlertDialogVariant.IMPORTANT">{{ data.title }}</h1>\n<div mat-dialog-content>\n  <div>{{ data.message }}</div>\n</div>\n<div mat-dialog-actions>\n  <app-button mat-button (click)="cancel()">{{ data.cancelText }}</app-button>\n  <ng-container *ngIf="data.variant === AlertDialogVariant.IMPORTANT && data.confirmText">\n    <app-button mat-button (click)="confirm()" variant="important" appFocusInitial>{{ data.confirmText }}</app-button>\n  </ng-container>\n  <ng-container *ngIf="data.variant !== AlertDialogVariant.IMPORTANT && data.confirmText">\n    <app-button mat-button (click)="confirm()" variant="primary" appFocusInitial>{{ data.confirmText }}</app-button>\n  </ng-container>\n</div>\n',styles:[""]})],AlertDialog),function(DialogOutlet){DialogOutlet.CONTENT_RIGHT="CONTENT_RIGHT"}(DialogOutlet||(DialogOutlet={}));let DialogService=class DialogService{constructor(matDialog,injector){this.matDialog=matDialog,this.injector=injector,this.dialogsMap=new Map,this.dialogs$=new BehaviorSubject.X(this.dialogsMap),this.outlets=new Map}get isAnyDialogOpen(){return this.dialogs$.getValue().size>0}open(component,data={},outlet){let dialog;if(outlet){const outletComponent=this.outlets.get(outlet);if(!outletComponent)throw new Error(`${outlet} is not assigned to any dialog outlet component, you need to call registerOutlet()`);dialog=outletComponent.renderDialog(component,data)}else dialog=this.matDialog.open(component,{data,width:"400px"});const uid=(0,v4.Z)();return this.dialogsMap.set(uid,dialog),dialog.afterClosed().subscribe((()=>{this.dialogsMap.delete(uid),this.dialogs$.next(this.dialogsMap)})),this.dialogs$.next(this.dialogsMap),dialog}closeAll(){this.dialogsMap.forEach((dialog=>{dialog.close()}))}registerOutlet(outlet,component){this.outlets.set(outlet,component)}alert(data){return this.open(AlertDialog,data).afterClosed().pipe((0,operators_filter.h)((result=>result)))}openErrorDialog(error){const data={title:"Error",message:error,variant:AlertDialogVariant.IMPORTANT,cancelText:$localize`Close`};return this.alert(data)}confirm(data){return this.alert(data)}confirmProjectDelete(project){return this.confirm({title:$localize`Delete project "${project.name}"`,message:$localize`Are you sure you want to delete project "${project.name}"?`,confirmText:$localize`Delete`,cancelText:$localize`Cancel`,variant:AlertDialogVariant.IMPORTANT})}confirmWorkspaceDelete(workspace){return this.confirm({title:$localize`Delete workspace "${workspace.name}"`,message:$localize`Are you sure you want to delete this workspace "${workspace.name}"?`,confirmText:$localize`Delete`,cancelText:$localize`Cancel`,variant:AlertDialogVariant.IMPORTANT})}};DialogService.ctorParameters=()=>[{type:dialog.uw},{type:core.Injector}],DialogService=(0,tslib_es6.gn)([Service(),(0,core.Injectable)({providedIn:"root"})],DialogService);var take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js");let DialogOutletComponent=class DialogOutletComponent{constructor(dialogService,injector){this.dialogService=dialogService,this.injector=injector,this.width="0px"}set outlet(outlet){this.dialogService.registerOutlet(outlet,this)}renderDialog(component,data){const dialogRef=new DialogRef,injector=this.createInjector(data,dialogRef);return dialogRef.beforeClosed().pipe((0,take.q)(1)).subscribe((()=>{this.clearComponent()})),this.loadComponent(component,injector),dialogRef}loadComponent(component,injector){const viewContainerRef=this.host.viewContainerRef;viewContainerRef.clear();viewContainerRef.createComponent(component,{injector});this.show()}clearComponent(){this.hide(),setTimeout((()=>{this.host.viewContainerRef.clear()}),500)}createInjector(data,dialogRef){return core.Injector.create({providers:[{provide:dialog.WI,useValue:data},{provide:dialog.so,useValue:dialogRef}],parent:this.injector})}show(){this.width="450px"}hide(){this.width="0px"}};DialogOutletComponent.ctorParameters=()=>[{type:DialogService},{type:core.Injector}],DialogOutletComponent.propDecorators={host:[{type:core.ViewChild,args:[ViewContainerDirective,{static:!0}]}],outlet:[{type:core.Input}],width:[{type:core.HostBinding,args:["style.width"]}]},DialogOutletComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-dialog-outlet",template:'<div class="dialog-outlet" cdk-scrollable>\n  <ng-template view-container></ng-template>\n</div>\n',styles:[":host {\n  display: block;\n  overflow: hidden;\n  width: 0;\n  flex-shrink: 0;\n  transition: width 0.4s ease;\n}\n\n.dialog-outlet {\n  width: 450px;\n  height: 100%;\n  border-radius: 0;\n  overflow-y: auto;\n}"]})],DialogOutletComponent);var ngneat_reactive_forms=__webpack_require__("./node_modules/@ngneat/reactive-forms/fesm2020/ngneat-reactive-forms.mjs"),control_accessor_class=__webpack_require__("./src/app/_main/classes/control-accessor.class.ts");let FiltersComponent=class FiltersComponent extends control_accessor_class.A{constructor(ngControl,cdRef){super(ngControl,cdRef),this.ngControl=ngControl,this._filters=[]}set filters(filters){this.form=new ngneat_reactive_forms.Oe(filters.map((filter=>new ngneat_reactive_forms.NI(filter.value)))),this._filters=filters}get filters(){return this._filters}getControl(index){var _a;return(null===(_a=this.form)||void 0===_a?void 0:_a.controls[index])||new ngneat_reactive_forms.NI}saveFilters(){var _a;if(!this.form)return;let formValue=[];for(const[index,filter]of this.filters.entries()){const filterValue=Number(null===(_a=this.form)||void 0===_a?void 0:_a.controls[index].value);filter.value=filterValue,formValue.push(filter)}this.control.setValue(formValue)}};FiltersComponent.ctorParameters=()=>[{type:fesm2020_forms.NgControl},{type:core.ChangeDetectorRef}],FiltersComponent.propDecorators={filters:[{type:core.Input}]},FiltersComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-filters",template:'<div class="filters">\n  <ng-container *ngFor="let filter of filters; index as i">\n    <ng-container [ngSwitch]="filter.type">\n      <div class="filter" *ngSwitchCase="\'checkbox\'">\n        <app-checkbox [formControl]="getControl(i)">{{ filter.label }}</app-checkbox>\n      </div>\n      <p *ngSwitchDefault>Unknown filter type: {{ filter.type }}</p>\n    </ng-container>\n  </ng-container>\n\n  \x3c!-- TODO: Add reset filters button --\x3e\n  \x3c!-- TODO: Make filters auto reload and remove "Save filters" button --\x3e\n  <app-button variant="primary" (click)="saveFilters()" i18n>Save filters</app-button>\n</div>\n',styles:[".filters {\n  width: 100%;\n}\n.filters app-button {\n  width: 100%;\n}\n.filters app-button ::ng-deep button {\n  width: 100%;\n}"]})],FiltersComponent);var index_es=__webpack_require__("./node_modules/@fortawesome/free-solid-svg-icons/index.es.js"),isString=__webpack_require__("./node_modules/lodash-es/isString.js");class Utils{static regexIndexOf(string,regex,startPos=0){var indexOf=string.substring(startPos).search(regex);return indexOf>=0?indexOf+startPos:indexOf}static snakeCase(inputString){return inputString.split("").map(((character,index)=>Utils.isLetter(character)&&character==character.toUpperCase()?index>0?"_"+character.toLowerCase():character.toLowerCase():character)).join("")}static has(object,keys){for(const key of keys)if(!object.hasOwnProperty(key))return!1;return!0}static isLetter(char){return!(char.length>1)&&(char>="A"&&char<="Z"||char>="a"&&char<="z")}static isISODate(text){return!!(0,isString.Z)(text)&&("Invalid Date"!==new Date(text)&&!isNaN(new Date(text))&&text===new Date(text).toISOString())}}let IconComponent=class IconComponent{constructor(){this.size="24px",this._icon="",this.prefix="fas",this.name="question"}set icon(value){if(this._icon=value,"string"==typeof value){const splitIndex=Utils.regexIndexOf(value,/[A-Z]/);this.prefix=value.substring(0,splitIndex),this.name=value.substring(splitIndex)}else this.prefix=value.prefix,this.name=value.iconName}get icon(){return this._icon}get width(){return this.size}get height(){return this.size}get iconDefinition(){return"string"==typeof this._icon?index_es.Psp:this._icon}get style(){return{"font-size":this.size,width:this.size,height:this.size,"line-height":this.size}}get snakeCaseName(){return Utils.snakeCase(this.name)}};IconComponent.propDecorators={size:[{type:core.Input}],icon:[{type:core.Input}],width:[{type:core.HostBinding,args:["style.width"]}],height:[{type:core.HostBinding,args:["style.height"]}]},IconComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-icon",template:'<ng-container [ngSwitch]="prefix">\n  <ng-container *ngSwitchCase="\'fas\'">\n    <fa-icon [icon]="iconDefinition" [ngStyle]="style"></fa-icon>\n  </ng-container>\n  <ng-container *ngSwitchCase="\'far\'">\n    <fa-icon [icon]="iconDefinition" [ngStyle]="style"></fa-icon>\n  </ng-container>\n  <ng-container *ngSwitchCase="\'fab\'">\n    <fa-icon [icon]="iconDefinition" [ngStyle]="style"></fa-icon>\n  </ng-container>\n  <ng-container *ngSwitchCase="\'mat\'">\n    <mat-icon [ngStyle]="style">{{ snakeCaseName }}</mat-icon>\n  </ng-container>\n  <ng-container *ngSwitchCase="\'cu\'">\n    <img [ngStyle]="style" [src]="\'assets/icons/\' + snakeCaseName + \'.svg\'" />\n  </ng-container>\n  <ng-container *ngSwitchDefault>\n    <mat-icon [ngStyle]="style">question_mark</mat-icon>\n  </ng-container>\n</ng-container>\n',styles:[":host {\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  font-size: 0;\n}\n:host fa-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n}"]})],IconComponent);var date_picker_component=__webpack_require__("./src/app/_main/components/input-date-time/date-picker/date-picker.component.ts"),input_date_time_component=__webpack_require__("./src/app/_main/components/input-date-time/input-date-time.component.ts"),input_component=__webpack_require__("./src/app/_main/components/input/input.component.ts");var environment=__webpack_require__("./src/environments/environment.ts");let RouterExtensionsService=class RouterExtensionsService{constructor(router){this.router=router}get snapshot(){if(!this.router.routerState)return{params:{},data:{}};let node=this.router.routerState.snapshot._root;for(;node.children[0];)node=node.children[0];return{params:node.value.params,data:node.value.data}}};RouterExtensionsService.ctorParameters=()=>[{type:router.F0}],RouterExtensionsService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],RouterExtensionsService);let MainViewComponent=class MainViewComponent{constructor(routerExtensions){this.routerExtensions=routerExtensions,this.version=environment.N.version,this.DialogOutlet=DialogOutlet,this.hideNavigation=!1}ngOnInit(){const data=this.routerExtensions.snapshot.data;this.hideNavigation=data.hideNavigation}};MainViewComponent.ctorParameters=()=>[{type:RouterExtensionsService}],MainViewComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-main-view",template:'<app-sidebar-navigation *ngIf="!hideNavigation"></app-sidebar-navigation>\n\n<section>\n  <app-upper-navigation *ngIf="!hideNavigation"></app-upper-navigation>\n\n  <app-snackbar-outlet></app-snackbar-outlet>\n\n  <section class="content">\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n\n    <app-dialog-outlet [outlet]="DialogOutlet.CONTENT_RIGHT"></app-dialog-outlet>\n  </section>\n</section>\n\n<span class="version">{{ version }}</span>\n',styles:[":host {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: var(--color-secondary-700);\n}\n\nsection {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow-x: hidden;\n}\n\nsection .content {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n}\n\nsection .content main {\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.version {\n  position: absolute;\n  bottom: 1rem;\n  left: 1em;\n  color: var(--color-text);\n  opacity: 0.5;\n}"]})],MainViewComponent);var DataFilterType,DataFilterControlType,map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js");!function(DataFilterType){DataFilterType.FRONTEND="frontend",DataFilterType.BACKEND="backend"}(DataFilterType||(DataFilterType={})),function(DataFilterControlType){DataFilterControlType.CHECKBOX="checkbox",DataFilterControlType.TEXT="text",DataFilterControlType.NUMBER="number",DataFilterControlType.SELECT="select",DataFilterControlType.DATE="date"}(DataFilterControlType||(DataFilterControlType={}));let ApiService=class ApiService{constructor(httpClient){this.httpClient=httpClient,this.apiURL=environment.N.apiURL}request(method,url,options){const params=this.getParamsFromFilters(null==options?void 0:options.filters);return this.httpClient.request(method,this.apiURL+url,Object.assign(Object.assign({responseType:"json",withCredentials:!0},options),{params:Object.assign(Object.assign({},(null==options?void 0:options.params)||{}),params||{})}))}get(url,options){return this.request("GET",url,options)}post(url,options){return this.request("POST",url,options)}delete(url,options){return this.request("DELETE",url,options)}put(url,options){return this.request("PUT",url,options)}patch(url,options){return this.request("PATCH",url,options)}getParamsFromFilters(filters){if(!filters)return;const params={};Array.isArray(filters)||(filters=[filters]);for(const filter of filters)filter.type==DataFilterType.BACKEND&&(params[filter.field]=filter.value);return params}};ApiService.ctorParameters=()=>[{type:http.eN}],ApiService=(0,tslib_es6.gn)([Service(),(0,core.Injectable)({providedIn:"root"})],ApiService);var catchError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/catchError.js"),throwError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/throwError.js");let SnackbarService=class SnackbarService{constructor(){this.snackbars$=new BehaviorSubject.X(new Map)}show(message,color="gray",duration=4e3){const data={message,duration,color},uid=(0,v4.Z)(),map=this.snackbars$.value;map.set(uid,data),this.snackbars$.next(map)}close(uid){this.snackbars$.value.delete(uid)}closeAll(){this.snackbars$.next(new Map)}};SnackbarService.ctorParameters=()=>[],SnackbarService=(0,tslib_es6.gn)([Service(),(0,core.Injectable)({providedIn:"root"})],SnackbarService);class BaseService{constructor(_injector){this._injector=_injector,this._snackbarService=this._injector.get(SnackbarService)}handleErrorWithCode(err,code){if(code){const{message}=this.errorCodes[code];this._snackbarService.show(message,"red")}else 503===err.status&&this._snackbarService.show($localize`Service is currently unavailable`,"red")}validate(codeMappings){return(0,catchError.K)((err=>{const code=codeMappings[err.status||err.text];return this.handleErrorWithCode(err,code),(0,throwError._)((()=>err))}))}}var shareReplay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js");function Cache(options){return function(target,propertyKey,descriptor){const originalMethod=descriptor.value;return descriptor.value=function(...args){const cacheKey=`__${String(propertyKey)}_${JSON.stringify(args)}`,cache=target[cacheKey];if(cache)return cache;const result=originalMethod.apply(this,args);return target[cacheKey]=result.pipe((0,shareReplay.d)(1)),options&&options.interval&&setTimeout((()=>{delete target[cacheKey]}),options.interval),result},descriptor}}let WorkspaceService=class WorkspaceService extends BaseService{constructor(injector,apiService){super(injector),this.injector=injector,this.apiService=apiService,this.errorCodes={WORKSPACE_NOT_FOUND:{message:$localize`Workspace not found`},FORM_NOT_VALID:{message:$localize`Some required fields in form are missing`}}}get(id){return this.apiService.get(`/workspace/${id}`).pipe(this.validate({404:"WORKSPACE_NOT_FOUND"}))}delete(id){return this.apiService.delete(`/workspace/${id}`).pipe(this.validate({404:"WORKSPACE_NOT_FOUND"}))}update(workspace){return this.apiService.put(`/workspace/${workspace.id}`,{body:workspace}).pipe(this.validate({400:"FORM_NOT_VALID",404:"WORKSPACE_NOT_FOUND"}))}list(){return this.apiService.get("/workspace")}create(workspace){return this.apiService.post("/workspace",{body:workspace}).pipe(this.validate({400:"FORM_NOT_VALID"}))}};WorkspaceService.ctorParameters=()=>[{type:core.Injector},{type:ApiService}],(0,tslib_es6.gn)([Cache()],WorkspaceService.prototype,"get",null),(0,tslib_es6.gn)([Cache()],WorkspaceService.prototype,"list",null),WorkspaceService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],WorkspaceService);let ProjectService=class ProjectService extends BaseService{constructor(injector,apiService,workspaceService){super(injector),this.injector=injector,this.apiService=apiService,this.workspaceService=workspaceService,this.errorCodes={PROJECT_NOT_FOUND:{message:$localize`Project not found`},WORKSPACE_NOT_FOUND:{message:$localize`Workspace not found`},FORM_VALIDATION_ERROR:{message:$localize`Form validation error`}}}get(projectId){return this.apiService.get(`/project/${projectId}`).pipe(this.validate({404:"PROJECT_NOT_FOUND"}))}delete(projectId){return this.apiService.delete(`/project/${projectId}`).pipe(this.validate({404:"PROJECT_NOT_FOUND"}))}update(project){return this.apiService.put(`/project/${project.id}`,{body:project}).pipe(this.validate({400:"FORM_VALIDATION_ERROR",404:"PROJECT_NOT_FOUND"}))}create(project){return this.apiService.post("/project",{body:project}).pipe(this.validate({400:"FORM_VALIDATION_ERROR",404:"WORKSPACE_NOT_FOUND"}))}list(){return this.workspaceService.list().pipe((0,map.U)((workspaces=>workspaces.reduce(((projects,workspace)=>(projects.push(...workspace.projectsWithPrivileges.map((p=>p.project))),projects)),[]))))}};ProjectService.ctorParameters=()=>[{type:core.Injector},{type:ApiService},{type:WorkspaceService}],(0,tslib_es6.gn)([Cache()],ProjectService.prototype,"get",null),ProjectService=(0,tslib_es6.gn)([Service(),(0,core.Injectable)({providedIn:"root"})],ProjectService);let NavElementWorkspaceComponent=class NavElementWorkspaceComponent{constructor(workspaceService,dialogService,projectService,router){this.workspaceService=workspaceService,this.dialogService=dialogService,this.projectService=projectService,this.router=router,this.workspace={id:-1},this.faAngleDown=index_es.gc2,this.activeWorkspace=!1,this.showArrow$=new BehaviorSubject.X(!1)}openWorkspace(){this.activeWorkspace=!0}closeWorkspace(){this.activeWorkspace=!1}toggleWorkspace(){this.activeWorkspace?this.closeWorkspace():this.openWorkspace()}ngAfterViewInit(){setTimeout((()=>{var _a;this.showArrow$.next(Boolean(null===(_a=this.listElement)||void 0===_a?void 0:_a.nativeElement.children.length))}))}routeToWorkspace(){this.router.navigateByUrl("/",{skipLocationChange:!0}).then((()=>this.router.navigate(["/",this.workspace.id])))}routeToProject(project){this.router.navigateByUrl("/",{skipLocationChange:!0}).then((()=>this.router.navigate(["/",this.workspace.id,project.id])))}createProject(){this.router.navigateByUrl("/",{skipLocationChange:!0}).then((()=>this.router.navigate(["/",this.workspace.id,"create"])))}editProject(project){this.router.navigateByUrl("/",{skipLocationChange:!0}).then((()=>this.router.navigate(["/",this.workspace.id,project.id,"edit"])))}deleteProject(project){this.dialogService.confirmProjectDelete(project).subscribe((()=>{this.projectService.delete(project.id).subscribe((()=>{window.location.reload()}))}))}editWorkspace(){this.router.navigateByUrl("/",{skipLocationChange:!0}).then((()=>this.router.navigate(["/",this.workspace.id,"edit"])))}deleteWorkspace(){this.dialogService.confirmWorkspaceDelete(this.workspace).subscribe((()=>{this.workspaceService.delete(this.workspace.id).subscribe((()=>{window.location.reload()}))}))}openWithVSCode(project){window.open(`https://github.dev/${project.gitHubIntegration}`,"_blank")}openWithLocalVSCode(project){window.open(`vscode://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,"_blank")}openWithLocalVSCodeInsiders(project){window.open(`vscode-insiders://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,"_blank")}};NavElementWorkspaceComponent.ctorParameters=()=>[{type:WorkspaceService},{type:DialogService},{type:ProjectService},{type:router.F0}],NavElementWorkspaceComponent.propDecorators={routerLink:[{type:core.Input}],workspace:[{type:core.Input}],listElement:[{type:core.ViewChild,args:["elementList"]}]},NavElementWorkspaceComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-nav-element-workspace",template:'<section>\n  <div class="workspace">\n    <div class="element" (click)="toggleWorkspace()">\n      <ng-content></ng-content>\n    </div>\n    <div class="icons">\n      <div class="open-below" [class.hidden]="(showArrow$ | async) === false" (click)="toggleWorkspace()">\n        <app-icon [icon]="faAngleDown" size="16px" [class.active]="activeWorkspace"></app-icon>\n      </div>\n      <div class="options">\n        <button mat-icon-button [matMenuTriggerFor]="menu" aria-label="Menu">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu="matMenu">\n          <button mat-menu-item (click)="createProject()">\n            <span i18n>Create project</span>\n          </button>\n          <button mat-menu-item (click)="routeToWorkspace()">\n            <span i18n>Manage projects</span>\n          </button>\n          <button mat-menu-item (click)="editWorkspace()">\n            <span i18n>Edit workspace</span>\n          </button>\n          <button mat-menu-item class="important" (click)="deleteWorkspace()">\n            <span i18n>Delete workspace</span>\n          </button>\n        </mat-menu>\n      </div>\n    </div>\n  </div>\n  <div class="project" [class.active]="activeWorkspace">\n    <ul #elementList>\n      <li *ngFor="let projectWithPriv of workspace.projectsWithPrivileges">\n        <div class="sub-element" (click)="routeToProject(projectWithPriv.project)">{{projectWithPriv.project.name}}</div>\n        <div class="icons" [matMenuTriggerFor]="menu">\n          <div class="options">\n            <button mat-icon-button aria-label="Menu">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu="matMenu">\n              <button mat-menu-item *ngIf="projectWithPriv.project.gitHubIntegration"\n                (click)="openWithVSCode(projectWithPriv.project)">\n                <span i18n>Open in github.dev</span>\n              </button>\n              <button mat-menu-item *ngIf="projectWithPriv.project.gitHubIntegration"\n                (click)="openWithLocalVSCode(projectWithPriv.project)">\n                <span i18n>Open in Visual Studio Code</span>\n              </button>\n              <button mat-menu-item *ngIf="projectWithPriv.project.gitHubIntegration"\n                (click)="openWithLocalVSCodeInsiders(projectWithPriv.project)">\n                <span i18n>Open in Visual Studio Code Insiders</span>\n              </button>\n              <button mat-menu-item (click)="editProject(projectWithPriv.project)">\n                <span i18n>Edit project</span>\n              </button>\n              <button mat-menu-item class="important" (click)="deleteProject(projectWithPriv.project)">\n                <span i18n>Delete project</span>\n              </button>\n            </mat-menu>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <ng-content select=".options"></ng-content>\n</section>\n',styles:['/**\n * This typography specification is based on: https://spectrum.adobe.com/page/typography/\n * and the tailwind utility classes: https://tailwindcss.com/docs/font-size\n *\n * Tips:\n * 16px <-> 1rem\n */\n/* ======================= */\n/* ==== CONFIGURATION ==== */\n/* ======================= */\n:root {\n  --font-family: montserrat, roboto, "Helvetica Neue", sans-serif;\n  --text-label-font-size: 0.75rem;\n  --text-label-font-weight: 400;\n  --text-label-text-transform: uppercase;\n  --text-title-font-size: 0.875rem;\n  --text-title-font-weight: 700;\n  --text-title-text-transform: none;\n  --text-base-font-size: 0.875rem;\n  --text-base-font-weight: 400;\n  --text-base-text-transform: none;\n  --text-lg-font-size: 1rem;\n  --text-lg-font-weight: 400;\n  --text-lg-text-transform: none;\n  --text-xl-font-size: 1.125rem;\n  --text-xl-font-weight: 400;\n  --text-xl-text-transform: none;\n  --text-2xl-font-size: 1.25rem;\n  --text-2xl-font-weight: 400;\n  --text-2xl-text-transform: none;\n  --text-3xl-font-size: 1.5rem;\n  --text-3xl-font-weight: 400;\n  --text-3xl-text-transform: none;\n  --text-4xl-font-size: 1.75rem;\n  --text-4xl-font-weight: 400;\n  --text-4xl-text-transform: none;\n  --text-5xl-font-size: 2rem;\n  --text-5xl-font-weight: 400;\n  --text-5xl-text-transform: none;\n}\n/* ==================================== */\n/* ==== UTILITY CLASSES AND MIXINS ==== */\n/* ==================================== */\n.text-label {\n  font-family: var(--font-family);\n  font-size: var(--text-label-font-size);\n  font-weight: var(--text-label-font-weight);\n  text-transform: var(--text-label-text-transform);\n  color: var(--color-text);\n}\n.text-base {\n  font-family: var(--font-family);\n  font-size: var(--text-base-font-size);\n  font-weight: var(--text-base-font-weight);\n  text-transform: var(--text-base-text-transform);\n  color: var(--color-text);\n}\n.text-title {\n  font-family: var(--font-family);\n  font-size: var(--text-title-font-size);\n  font-weight: var(--text-title-font-weight);\n  text-transform: var(--text-title-text-transform);\n  color: var(--color-text);\n}\n.text-lg {\n  font-family: var(--font-family);\n  font-size: var(--text-lg-font-size);\n  font-weight: var(--text-lg-font-weight);\n  text-transform: var(--text-lg-text-transform);\n  color: var(--color-text);\n}\n.text-xl {\n  font-family: var(--font-family);\n  font-size: var(--text-xl-font-size);\n  font-weight: var(--text-xl-font-weight);\n  text-transform: var(--text-xl-text-transform);\n  color: var(--color-text);\n}\n.text-2xl {\n  font-family: var(--font-family);\n  font-size: var(--text-2xl-font-size);\n  font-weight: var(--text-2xl-font-weight);\n  text-transform: var(--text-2xl-text-transform);\n  color: var(--color-text);\n}\n.text-3xl {\n  font-family: var(--font-family);\n  font-size: var(--text-3xl-font-size);\n  font-weight: var(--text-3xl-font-weight);\n  text-transform: var(--text-3xl-text-transform);\n  color: var(--color-text);\n}\n.text-4xl {\n  font-family: var(--font-family);\n  font-size: var(--text-4xl-font-size);\n  font-weight: var(--text-4xl-font-weight);\n  text-transform: var(--text-4xl-text-transform);\n  color: var(--color-text);\n}\n.text-5xl {\n  font-family: var(--font-family);\n  font-size: var(--text-5xl-font-size);\n  font-weight: var(--text-5xl-font-weight);\n  text-transform: var(--text-5xl-text-transform);\n  color: var(--color-text);\n}\n:host {\n  font-family: var(--font-family);\n  font-size: var(--text-title-font-size);\n  font-weight: var(--text-title-font-weight);\n  text-transform: var(--text-title-text-transform);\n  background-color: var(--color-secondary-600);\n}\nli {\n  background-color: var(--color-secondary-700);\n}\n.workspace {\n  display: flex;\n  width: 100%;\n  height: 46px;\n  justify-content: space-between;\n  border-radius: var(--border-radius);\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n}\n.workspace .element {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  padding: 0 0 0 30px;\n}\n.workspace .icons {\n  display: flex;\n  height: 100%;\n  align-items: center;\n}\n.workspace .icons .options {\n  display: flex;\n  height: 100%;\n  align-items: center;\n  padding: 0 5px 0 0;\n}\n.workspace .icons .open-below {\n  display: flex;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  padding: 0 5px;\n}\n.workspace .icons .open-below app-icon {\n  display: flex;\n  justify-content: center;\n}\n.workspace .icons .open-below app-icon.active {\n  transform: scaleY(-1);\n}\n.workspace .icons .options button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.workspace:hover {\n  background-color: var(--color-secondary-500);\n}\n.project {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n}\n.project.active {\n  display: block;\n  justify-content: center;\n  background-color: var(--color-secondary-600);\n  color: var(--color-neutral-300);\n  transition: background-color 0.2s ease-in-out;\n}\n.project.active li {\n  display: flex;\n  width: 100%;\n  height: 46px;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: var(--border-radius);\n}\n.project.active li .sub-element {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  padding: 0 0 0 40px;\n}\n.project.active li .icons {\n  display: flex;\n  height: 100%;\n  align-items: center;\n  padding: 0 5px 0 0;\n}\n.project.active li:hover {\n  background-color: var(--color-secondary-500);\n}\nbutton {\n  display: flex;\n  align-items: center;\n}\n.hidden {\n  visibility: hidden;\n}']})],NavElementWorkspaceComponent);let NavElementComponent=class NavElementComponent{constructor(){this.active=!1,this.showArrow$=new BehaviorSubject.X(!1),this.faAngleDown=index_es.gc2}openNavElement(){this.active=!0}closeNavElement(){this.active=!1}toggleNavElement(){this.active?this.closeNavElement():this.openNavElement()}ngAfterViewInit(){setTimeout((()=>{var _a;this.showArrow$.next(Boolean(null===(_a=this.listElement)||void 0===_a?void 0:_a.nativeElement.children.length))}))}};NavElementComponent.ctorParameters=()=>[],NavElementComponent.propDecorators={routerLink:[{type:core.Input}],showOptions:[{type:core.Input}],listElement:[{type:core.ViewChild,args:["elementList"]}]},NavElementComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-nav-element",template:'<section>\n  <div class="element" (click)="toggleNavElement()">\n    <fa-icon></fa-icon>\n    <ng-content></ng-content>\n  </div>\n  <div class="icons">\n    <div class="open-below" [class.hidden]="(showArrow$ | async) === false" (click)="toggleNavElement()">\n      <app-icon [icon]="faAngleDown" size="16px" [class.active]="active"></app-icon>\n    </div>\n    <div class="options" [class.hidden]="!showOptions" [matMenuTriggerFor]="menu">\n      <button mat-icon-button aria-label="Menu">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu="matMenu">\n        <ng-content select=".options"></ng-content>\n      </mat-menu>\n    </div>\n  </div>\n</section>\n<div class="list" #elementList [class.active]="active">\n  <ng-content select=".open-below"></ng-content>\n</div>\n',styles:['/**\n * This typography specification is based on: https://spectrum.adobe.com/page/typography/\n * and the tailwind utility classes: https://tailwindcss.com/docs/font-size\n *\n * Tips:\n * 16px <-> 1rem\n */\n/* ======================= */\n/* ==== CONFIGURATION ==== */\n/* ======================= */\n:root {\n  --font-family: montserrat, roboto, "Helvetica Neue", sans-serif;\n  --text-label-font-size: 0.75rem;\n  --text-label-font-weight: 400;\n  --text-label-text-transform: uppercase;\n  --text-title-font-size: 0.875rem;\n  --text-title-font-weight: 700;\n  --text-title-text-transform: none;\n  --text-base-font-size: 0.875rem;\n  --text-base-font-weight: 400;\n  --text-base-text-transform: none;\n  --text-lg-font-size: 1rem;\n  --text-lg-font-weight: 400;\n  --text-lg-text-transform: none;\n  --text-xl-font-size: 1.125rem;\n  --text-xl-font-weight: 400;\n  --text-xl-text-transform: none;\n  --text-2xl-font-size: 1.25rem;\n  --text-2xl-font-weight: 400;\n  --text-2xl-text-transform: none;\n  --text-3xl-font-size: 1.5rem;\n  --text-3xl-font-weight: 400;\n  --text-3xl-text-transform: none;\n  --text-4xl-font-size: 1.75rem;\n  --text-4xl-font-weight: 400;\n  --text-4xl-text-transform: none;\n  --text-5xl-font-size: 2rem;\n  --text-5xl-font-weight: 400;\n  --text-5xl-text-transform: none;\n}\n/* ==================================== */\n/* ==== UTILITY CLASSES AND MIXINS ==== */\n/* ==================================== */\n.text-label {\n  font-family: var(--font-family);\n  font-size: var(--text-label-font-size);\n  font-weight: var(--text-label-font-weight);\n  text-transform: var(--text-label-text-transform);\n  color: var(--color-text);\n}\n.text-base {\n  font-family: var(--font-family);\n  font-size: var(--text-base-font-size);\n  font-weight: var(--text-base-font-weight);\n  text-transform: var(--text-base-text-transform);\n  color: var(--color-text);\n}\n.text-title {\n  font-family: var(--font-family);\n  font-size: var(--text-title-font-size);\n  font-weight: var(--text-title-font-weight);\n  text-transform: var(--text-title-text-transform);\n  color: var(--color-text);\n}\n.text-lg {\n  font-family: var(--font-family);\n  font-size: var(--text-lg-font-size);\n  font-weight: var(--text-lg-font-weight);\n  text-transform: var(--text-lg-text-transform);\n  color: var(--color-text);\n}\n.text-xl {\n  font-family: var(--font-family);\n  font-size: var(--text-xl-font-size);\n  font-weight: var(--text-xl-font-weight);\n  text-transform: var(--text-xl-text-transform);\n  color: var(--color-text);\n}\n.text-2xl {\n  font-family: var(--font-family);\n  font-size: var(--text-2xl-font-size);\n  font-weight: var(--text-2xl-font-weight);\n  text-transform: var(--text-2xl-text-transform);\n  color: var(--color-text);\n}\n.text-3xl {\n  font-family: var(--font-family);\n  font-size: var(--text-3xl-font-size);\n  font-weight: var(--text-3xl-font-weight);\n  text-transform: var(--text-3xl-text-transform);\n  color: var(--color-text);\n}\n.text-4xl {\n  font-family: var(--font-family);\n  font-size: var(--text-4xl-font-size);\n  font-weight: var(--text-4xl-font-weight);\n  text-transform: var(--text-4xl-text-transform);\n  color: var(--color-text);\n}\n.text-5xl {\n  font-family: var(--font-family);\n  font-size: var(--text-5xl-font-size);\n  font-weight: var(--text-5xl-font-weight);\n  text-transform: var(--text-5xl-text-transform);\n  color: var(--color-text);\n}\n:host {\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n}\nsection {\n  font-family: var(--font-family);\n  font-size: var(--text-title-font-size);\n  font-weight: var(--text-title-font-weight);\n  text-transform: var(--text-title-text-transform);\n  display: flex;\n  width: 100%;\n  height: 46px;\n  align-items: center;\n  justify-content: space-between;\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: color 0.2s ease-in-out;\n}\nsection .element {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  padding: 0 0 0 20px;\n}\nsection .icons {\n  display: flex;\n  height: 100%;\n  align-items: center;\n}\nsection .icons .options {\n  display: flex;\n  height: 100%;\n  align-items: center;\n  padding: 0 5px 0 0;\n}\nsection .icons .open-below {\n  display: flex;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  padding: 0 5px;\n}\nsection .icons .open-below app-icon {\n  display: flex;\n  justify-content: center;\n}\nsection .icons .open-below app-icon.active {\n  transform: scaleY(-1);\n}\nsection .icons .options button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\nsection:hover {\n  color: var(--color-text);\n}\n.list {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n}\n.list.active {\n  display: block;\n  justify-content: center;\n  background-color: var(--color-secondary-600);\n}\n.hidden {\n  visibility: hidden;\n}']})],NavElementComponent);let EmptyOptionsComponent=class EmptyOptionsComponent{constructor(){this.display="inline"}hide(){this.display="none"}show(){this.display="inline"}};EmptyOptionsComponent.propDecorators={display:[{type:core.HostBinding,args:["style.display"]}]},EmptyOptionsComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-empty-options",template:'<div class="empty-options">\n  <ng-content></ng-content>\n</div>\n',styles:[".empty-options {\n  padding: 0 1rem;\n  color: var(--color-text);\n  font-size: 0.9rem;\n  opacity: 0.5;\n}"]})],EmptyOptionsComponent);let OptionComponent=class OptionComponent{constructor(ref){this.ref=ref,this.selected=!1}get viewValue(){return this.ref.nativeElement.innerText}};OptionComponent.ctorParameters=()=>[{type:core.ElementRef}],OptionComponent.propDecorators={value:[{type:core.Input},{type:core.HostBinding,args:["value"]}],icon:[{type:core.Input}]},OptionComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-option",template:'<app-icon *ngIf="icon" [icon]="icon" size="1rem"></app-icon>\n<ng-content></ng-content>\n',styles:[":host {\n  display: flex;\n  align-items: center;\n  padding: 0.25rem 0.75rem;\n  color: var(--color-text);\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n:host:hover {\n  background-color: var(--color-secondary-500);\n}\n:host app-icon {\n  margin-right: 1rem;\n}"]})],OptionComponent);var ngneat_until_destroy=__webpack_require__("./node_modules/@ngneat/until-destroy/fesm2020/ngneat-until-destroy.mjs"),isNil=__webpack_require__("./node_modules/lodash-es/isNil.js"),isEqual=__webpack_require__("./node_modules/lodash-es/isEqual.js"),fromEvent=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js");let SelectComponent=class SelectComponent extends control_accessor_class.A{constructor(ngControl,cdRef){super(ngControl,cdRef),this.isOpen$=new BehaviorSubject.X(!1),this.selected$=new BehaviorSubject.X({control:new ngneat_reactive_forms.NI("")}),this.overlayMinWidth=0,this.faChevronDown=index_es.ptq}open(){this.overlayMinWidth=this.input.input.nativeElement.clientWidth,setTimeout((()=>{(0,fromEvent.R)(document,"click").pipe((0,ngneat_until_destroy.t)(this),(0,operators_filter.h)((e=>{var _a;return!(null===(_a=this.overlay)||void 0===_a?void 0:_a.nativeElement.contains(e.target))})),(0,take.q)(1)).subscribe((()=>this.close())),this.isOpen$.next(!0)}))}ngAfterViewInit(){var _a;this.loadOptions(),this.control.valueChanges.subscribe((()=>{this.loadOptions()})),null===(_a=this.queryOptions)||void 0===_a||_a.changes.subscribe((()=>{this.loadOptions()}))}close(){this.isOpen$.next(!1)}toggle(){return this.isOpen$.value?this.close():this.open()}loadOptions(){let activeOption=null;this.queryOptions&&0!==this.queryOptions.length?(this.hideEmptyOptions(),this.queryOptions.forEach(((option,index)=>{option.ref.nativeElement.addEventListener("click",(()=>{var _a;this.select(null===(_a=this.queryOptions)||void 0===_a?void 0:_a.get(index))})),this.compare(option.value,this.control.value)&&(activeOption=option)})),this.setActiveOption(activeOption),this.cdRef.detectChanges()):this.showEmptyOptions()}setActiveOption(option){const currentLabel=this.selected$.getValue();currentLabel.control.setValue((null==option?void 0:option.viewValue)||""),currentLabel.icon=null==option?void 0:option.icon,currentLabel.optionComponent=option||void 0,this.selected$.next(currentLabel)}sameAsSelected(option){var _a;return this.selected$.value.optionComponent===option||(null===(_a=this.selected$.value.optionComponent)||void 0===_a?void 0:_a.value)===(null==option?void 0:option.value)}select(option){this.close(),this.sameAsSelected(option)||(this.setActiveOption(option),this.control.setValue((0,isNil.Z)(null==option?void 0:option.value)?null:option.value),option&&(option.selected=!0))}compare(a,b){const{comparer}=this;return comparer&&a&&b&&(void 0!==a[comparer]||void 0!==b[comparer])?a[comparer]===b[comparer]:a==b||(0,isEqual.Z)(a,b)}showEmptyOptions(){var _a;null===(_a=this.emptyOptions)||void 0===_a||_a.forEach((emptyOption=>{emptyOption.show()}))}hideEmptyOptions(){var _a;null===(_a=this.emptyOptions)||void 0===_a||_a.forEach((emptyOption=>{emptyOption.hide()}))}ngAfterControlInit(){this.control&&(this.control.touch$.pipe((0,ngneat_until_destroy.t)(this)).subscribe((()=>{this.selected$.value.control.markAsTouched()})),this.control.errors$.pipe((0,ngneat_until_destroy.t)(this)).subscribe((errors=>{this.selected$.value.control.setErrors(errors)})))}};SelectComponent.ctorParameters=()=>[{type:fesm2020_forms.NgControl},{type:core.ChangeDetectorRef}],SelectComponent.propDecorators={input:[{type:core.ViewChild,args:["input"]}],overlay:[{type:core.ViewChild,args:["overlay"]}],queryOptions:[{type:core.ContentChildren,args:[OptionComponent]}],emptyOptions:[{type:core.ContentChildren,args:[EmptyOptionsComponent]}],floatingLabel:[{type:core.Input}],comparer:[{type:core.Input}],allowResizeByError:[{type:core.Input}]},SelectComponent=(0,tslib_es6.gn)([(0,ngneat_until_destroy.c)(),(0,core.Component)({selector:"app-select",template:'<ng-container *ngIf="isControlInitialized">\n  <ng-container *ngLet="selected$ | async as selected">\n    <div class="trigger" #trigger="cdkOverlayOrigin" cdkOverlayOrigin></div>\n    <app-input #input (click)="toggle()" type="text" [formControl]="selected.control" [readonly]="true"\n      [floatingLabel]="floatingLabel" [allowResizeByError]="allowResizeByError">\n      <app-icon class="prefix" *ngIf="selected.icon" size="1rem" [icon]="selected.icon"></app-icon>\n      <app-icon class="suffix" [icon]="faChevronDown" size="0.75rem"></app-icon>\n    </app-input>\n\n    <ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]="trigger"\n      [cdkConnectedOverlayOpen]="(isOpen$ | async) || false"\n      [cdkConnectedOverlayBackdropClass]="\'cdk-overlay-transparent-backdrop\'" [cdkConnectedOverlayHasBackdrop]="true"\n      [cdkConnectedOverlayMinWidth]="overlayMinWidth + \'px\'" [cdkConnectedOverlayWidth]="overlayMinWidth + \'px\'">\n      <div #overlay class="overlay">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  </ng-container>\n</ng-container>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  display: inline-block;\n  position: relative;\n  width: 100%;\n}\n\n.overlay {\n  overflow: auto;\n  width: 100%;\n  max-height: 300px;\n  padding: 1rem;\n  padding: 0.5rem 0;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.1);\n}\n\n.trigger {\n  position: absolute;\n  height: 44px;\n}\n\n:host ::ng-deep app-input, :host ::ng-deep > *,\n:host ::ng-deep input {\n  color: var(--color-text);\n  cursor: pointer !important;\n}"]})],SelectComponent);let SidebarNavigationComponent=class SidebarNavigationComponent{constructor(workspaceService,router){this.workspaceService=workspaceService,this.router=router,this.workspaceList=this.workspaceService.list()}createWorkspace(){this.router.navigate(["/","create"])}};SidebarNavigationComponent.ctorParameters=()=>[{type:WorkspaceService},{type:router.F0}],SidebarNavigationComponent.propDecorators={icon:[{type:core.Input}]},SidebarNavigationComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-sidebar-navigation",template:'<section>\n  <div class="logo" routerLink="/"></div>\n  <div class="switch-navigation-width"></div>\n</section>\n<app-nav-element [showOptions]="false" routerLink="/dashboard" i18n>Dashboard</app-nav-element>\n<app-nav-element [showOptions]="true">\n  <div i18n>Workspaces</div>\n  <div class="open-below">\n    <ul>\n      <app-nav-element-workspace *ngFor="let workspace of workspaceList|async" [workspace]="workspace">\n        {{workspace.name}}\n      </app-nav-element-workspace>\n    </ul>\n  </div>\n  <div class="options">\n    <button mat-menu-item (click)="createWorkspace()">\n      <span i18n>Create workspace</span>\n    </button>\n    <button mat-menu-item routerLink="/">\n      <span i18n>Manage workspaces</span>\n    </button>\n  </div>\n</app-nav-element>\n<app-nav-element [showOptions]="false" routerLink="/email" i18n>Emails</app-nav-element>\n<app-nav-element [showOptions]="false" routerLink="/messages" i18n>Messages</app-nav-element>\n<app-nav-element [showOptions]="false" routerLink="/calendar" i18n>Calendar</app-nav-element>\n',styles:[":host {\n  display: flex;\n  width: 250px;\n  height: 100%;\n  flex-direction: column;\n  flex-shrink: 0;\n  background-color: var(--color-secondary-800);\n}\n\n.logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin: 10px 20px 0;\n  background-image: url('logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  background-size: contain;\n  cursor: pointer;\n  transform-origin: 50% 25%;\n  transition: transform 0.2s ease;\n}\n\n.logo:hover {\n  transform: scale(1.02);\n}"]})],SidebarNavigationComponent);let SnackbarOutletComponent=class SnackbarOutletComponent{constructor(snackbarService){this.snackbarService=snackbarService,this.snackbars$=this.snackbarService.snackbars$}trackSnackbarTuple(_index,[uid,_]){return uid}};SnackbarOutletComponent.ctorParameters=()=>[{type:SnackbarService}],SnackbarOutletComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-snackbar-outlet",template:'<app-snackbar *ngFor="let entry of (snackbars$ | async)?.entries(); trackBy: trackSnackbarTuple" [uid]="entry[0]"\n  [message]="entry[1].message" [color]="entry[1].color"></app-snackbar>\n',styles:[":host {\n  position: absolute;\n  z-index: 50;\n  top: 74px;\n  right: 0;\n  display: flex;\n  overflow: hidden;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-right: 10px;\n}\n\napp-snackbar:not(:last-child) {\n  margin-bottom: 0.5rem;\n}"]})],SnackbarOutletComponent);var uniqueId=__webpack_require__("./node_modules/lodash-es/uniqueId.js");let SnackbarComponent=class SnackbarComponent{constructor(snackbarService){this.snackbarService=snackbarService,this.faClose=index_es.YIN,this.uid=(0,uniqueId.Z)(),this.duration=4e3,this.color="gray",this.animationName="open"}get colorStyle(){switch(this.color){case"gray":default:return"var(--color-gray-500)";case"green":return"#00b300";case"red":return"#ff0000";case"yellow":return"#ffff00"}}ngOnInit(){setTimeout((()=>{this.close()}),this.duration)}close(){this.setAnimationName("close"),setTimeout((()=>{this.snackbarService.close(this.uid)}),1e3)}setAnimationName(name){this.animationName=name}};SnackbarComponent.ctorParameters=()=>[{type:SnackbarService}],SnackbarComponent.propDecorators={uid:[{type:core.Input}],message:[{type:core.Input}],duration:[{type:core.Input}],color:[{type:core.Input}],animationName:[{type:core.HostBinding,args:["style.animation-name"]}]},SnackbarComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-snackbar",template:'<div class="content" [style.background-color]="colorStyle">\n  <p class="message">\n    {{ message }}\n  </p>\n  <div class="close-button" (click)="close()"></div>\n</div>\n',styles:[':host {\n  display: block;\n  overflow: visible;\n  animation: open 1s ease-in-out forwards;\n}\n\n.content {\n  display: flex;\n  padding: 1rem;\n  border-radius: var(--border-radius);\n}\n\n.content .message {\n  margin-right: 0.75rem;\n  color: var(--color-text);\n}\n\n.content .close-button {\n  position: relative;\n  width: 24px;\n  height: 24px;\n  color: var(--color-text);\n  cursor: pointer;\n}\n\n.content .close-button::before, .content .close-button::after {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  display: block;\n  width: 1px;\n  height: 1rem;\n  margin-top: 0.25rem;\n  background-color: var(--color-text);\n  border-radius: 50%;\n  content: "";\n  transition: background-color 0.4s ease;\n}\n\n.content .close-button::before {\n  transform: rotate(45deg);\n}\n\n.content .close-button::after {\n  transform: rotate(-45deg);\n}\n\n@keyframes open {\n  from {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n}\n\n@keyframes close {\n  from {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n  to {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n}']})],SnackbarComponent);var textarea_component=__webpack_require__("./src/app/_main/components/textarea/textarea.component.ts");var dayjs_min=__webpack_require__("./node_modules/dayjs/dayjs.min.js"),dayjs_min_default=__webpack_require__.n(dayjs_min),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js");let AuthService=class AuthService extends BaseService{constructor(injector,apiService){super(injector),this.injector=injector,this.apiService=apiService,this.errorCodes={INVALID_TOKEN:{message:$localize`Invalid token`}}}register({email,password,name,surname,username}){return this.apiService.post("/auth/register",{body:{email,password,name,surname,username}})}login({email,password,remember}){return this.apiService.post("/auth/login",{body:{email,password,remember}}).pipe((0,tap.b)((()=>localStorage.setItem("lastLoginTry",dayjs_min_default()().valueOf().toString()))))}logout(){return localStorage.removeItem("logged"),this.apiService.post("/auth/logout")}resetPassword({email}){return this.apiService.post("/auth/password/recover",{body:{email}})}setNewPassword(token,password){return this.apiService.post("/auth/password/reset",{body:{token,password}})}deleteAccount(){return this.apiService.delete("/auth/delete")}deleteAccountConfirmation(token){return this.apiService.delete("/auth/delete/confirm",{body:{token}}).pipe(this.validate({403:"INVALID_TOKEN",404:"INVALID_TOKEN"}))}recoverAccount(){return this.apiService.post("/auth/delete/recover")}isLoggedIn(){return!!localStorage.getItem("logged")}clearCache(){localStorage.removeItem("logged")}getLastLoginTime(){return dayjs_min_default()(Number(localStorage.getItem("lastLoginTry")||0))}};AuthService.ctorParameters=()=>[{type:core.Injector},{type:ApiService}],AuthService=(0,tslib_es6.gn)([Service(),(0,core.Injectable)({providedIn:"root"})],AuthService);let MemberService=class MemberService extends BaseService{constructor(injector,apiService){super(injector),this.injector=injector,this.apiService=apiService,this.errorCodes={NOT_ENOUGH_PRIVILEGES:{message:$localize`You don't have enough privileges to do this`},PROJECT_NOT_FOUND:{message:$localize`Project not found`}}}list(projectId){return this.apiService.get(`/project/${projectId}/member`)}remove(projectId,id){return this.apiService.put(`/project/${projectId}/member`,{body:id}).pipe(this.validate({403:"NOT_ENOUGH_PRIVILEGES",404:"PROJECT_NOT_FOUND"}))}leave(projectId){return this.apiService.delete(`/project/${projectId}/member`).pipe(this.validate({404:"PROJECT_NOT_FOUND"}))}add(emails,projects){return this.apiService.post("/project/member",{body:{emails,projects}})}map(projectId){return this.list(projectId).pipe((0,map.U)((members=>members.reduce(((acc,member)=>(acc.set(member.user.id,member),acc)),new Map))))}};MemberService.ctorParameters=()=>[{type:core.Injector},{type:ApiService}],(0,tslib_es6.gn)([Cache()],MemberService.prototype,"list",null),MemberService=(0,tslib_es6.gn)([Service(),(0,core.Injectable)({providedIn:"root"})],MemberService);var isNumber=__webpack_require__("./node_modules/lodash-es/isNumber.js");class Enum{static isNumeric(enumType){return Object.values(enumType).some((val=>(0,isNumber.Z)(val)))}static keys(enumType){return Object.keys(enumType).filter((k=>!Number(k)&&"0"!=k))}static values(enumType){return Enum.isNumeric(enumType)?Object.values(enumType).filter((v=>Number(v))).map((v=>Number(v))):Object.values(enumType)}static entries(enumType){return Enum.isNumeric(enumType)?Object.entries(enumType).filter((e=>(0,isNumber.Z)(e[1]))).map((e=>[e[0],Number(e[1])])):Object.entries(enumType)}}var mergeMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),interval=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/interval.js");let GitIntegrationService=class GitIntegrationService extends BaseService{constructor(injector,apiService,projectService){super(injector),this.injector=injector,this.apiService=apiService,this.projectService=projectService,this.errorCodes={PROJECT_ALREADY_HAS_INTEGRATION:{message:$localize`Project already has integration`},PROJECT_OR_INSTALLATION_NOT_FOUND:{message:$localize`Project or git installation not found`},INSTALLATION_WITH_GIVEN_ID_NOT_FOUND:{message:$localize`Installation with given id not found`},PROJECT_OR_INTEGRATION_NOT_FOUND:{message:$localize`Project or integration not found`}}}startGitHubIntegration(){return this.apiService.get("/user/integration/github/repository").pipe((0,map.U)((response=>response.link)),(0,mergeMap.z)((url=>{const win=window.open(url,"_blank");if(!win)throw new Error("This browser does not support window.open");return(0,interval.F)(100).pipe((0,map.U)((()=>win.closed)),(0,operators_filter.h)((closed=>closed)),(0,take.q)(1))})))}postGitHubIntegration(installationId){return this.apiService.post("/user/integration/github",{params:{installationId}})}getGitHubIntegration(){return this.apiService.get("/user/integration/github/repository")}attachGitHubIntegration(projectId,repositoryName){return this.apiService.post(`/project/${projectId}/integration/github`,{body:repositoryName}).pipe(this.validate({400:"PROJECT_ALREADY_HAS_INTEGRATION",404:"PROJECT_OR_INSTALLATION_NOT_FOUND"}))}getConnectedGitHubAccounts(){return this.apiService.get("/user/integration/github").pipe((0,map.U)((accounts=>accounts.map((account=>Object.assign(Object.assign({},account),{gitHubUsername:`@${account.gitHubUsername}`}))))))}deleteConnectedGitHubAccount(gitHubAccountId){return this.apiService.delete(`/user/integration/github/${gitHubAccountId}`).pipe(this.validate({404:"INSTALLATION_WITH_GIVEN_ID_NOT_FOUND"}))}deleteGitHubIntegration(projectId){return this.apiService.delete(`/project/${projectId}/integration/github`).pipe(this.validate({404:"PROJECT_OR_INTEGRATION_NOT_FOUND"}))}hasGitHubIntegration(projectId){return this.projectService.get(projectId).pipe((0,map.U)((project=>!!project.gitHubIntegration)))}gitHubIssueList(projectId){return this.apiService.get(`/project/${projectId}/integration/git/issue`).pipe(this.validate({404:"PROJECT_OR_INTEGRATION_NOT_FOUND"}))}gitHubPullList(projectId){return this.apiService.get(`/project/${projectId}/integration/git/pull`).pipe(this.validate({404:"PROJECT_OR_INTEGRATION_NOT_FOUND"}))}isOwnerOfRepository(repositoryName,account){const preparedUsername=account.gitHubUsername.replace("@","");return Boolean(repositoryName.match(new RegExp("^"+preparedUsername+"/*")))}getGitHubAccountConnectedProjects(account){return this.projectService.list().pipe((0,map.U)((projects=>projects.filter((project=>project.gitHubIntegration&&this.isOwnerOfRepository(project.gitHubIntegration,account))))))}};function validateForm(form){return form.markAllAsTouched(),form._updateTreeValidity(),form.valid}GitIntegrationService.ctorParameters=()=>[{type:core.Injector},{type:ApiService},{type:ProjectService}],(0,tslib_es6.gn)([Cache()],GitIntegrationService.prototype,"getConnectedGitHubAccounts",null),GitIntegrationService=(0,tslib_es6.gn)([Service(),(0,core.Injectable)({providedIn:"root"})],GitIntegrationService);var TaskPriority,TaskType,merge=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),skip=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/skip.js");!function(TaskPriority){TaskPriority.HIGHEST="highest",TaskPriority.HIGH="high",TaskPriority.MEDIUM="medium",TaskPriority.LOW="low",TaskPriority.LOWEST="lowest"}(TaskPriority||(TaskPriority={})),function(TaskType){TaskType[TaskType.NONE=-1]="NONE",TaskType[TaskType.TASK=0]="TASK",TaskType[TaskType.USER_STORY=1]="USER_STORY",TaskType[TaskType.ISSUE=2]="ISSUE",TaskType[TaskType.EPIC=3]="EPIC",TaskType[TaskType.SUBTASK=4]="SUBTASK"}(TaskType||(TaskType={}));const TaskTypeHierarchy={[TaskType.NONE]:[TaskType.TASK,TaskType.EPIC,TaskType.USER_STORY,TaskType.ISSUE],[TaskType.TASK]:[TaskType.SUBTASK,TaskType.ISSUE],[TaskType.EPIC]:[TaskType.USER_STORY,TaskType.ISSUE,TaskType.TASK],[TaskType.USER_STORY]:[TaskType.SUBTASK],[TaskType.ISSUE]:[TaskType.SUBTASK],[TaskType.SUBTASK]:[]};var pairwise=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/pairwise.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js");function requiredValidator(){return function required(control){return null===control.value||void 0===control.value||""===control.value||!1===control.value?{type:"required",message:$localize`This field is required`}:null}}var combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js");let StatusDialog=class StatusDialog{constructor(data,dialogRef){this.data=data,this.dialogRef=dialogRef,this.form=new ngneat_reactive_forms.cw({name:new ngneat_reactive_forms.NI("",[requiredValidator()]),begin:new ngneat_reactive_forms.NI(!1),final:new ngneat_reactive_forms.NI(!1),color:new ngneat_reactive_forms.NI(0,[requiredValidator()])})}ngOnInit(){const{status}=this.data;status&&this.form.patchValue(status)}cancel(){this.dialogRef.close()}close(){validateForm(this.form)&&(console.log(Object.assign({},this.data.status)),this.dialogRef.close(Object.assign(Object.assign({},this.data.status),this.form.value)))}};StatusDialog.ctorParameters=()=>[{type:void 0,decorators:[{type:core.Inject,args:[dialog.WI]}]},{type:dialog.so}],StatusDialog=(0,tslib_es6.gn)([(0,core.Component)({selector:"status-dialog",template:'<h1 mat-dialog-title>{{ data.title }}</h1>\n<div mat-dialog-content>\n  <form [formGroup]="form" autocomplete="off">\n\n    \x3c!-- Name field --\x3e\n    <app-input floatingLabel="Name" formControlName="name" i18n-floatingLabel>\n    </app-input>\n\n    \x3c!-- Color field --\x3e\n    <input-color formControlName="color" i18n-floatingLabel floatingLabel="Color"></input-color>\n\n    \x3c!-- Begin field --\x3e\n    <app-checkbox formControlName="begin" i18n>Begin</app-checkbox>\n\n    \x3c!-- Final field --\x3e\n    <app-checkbox formControlName="final" i18n>Final</app-checkbox>\n\n  </form>\n</div>\n<div mat-dialog-actions>\n  <app-button mat-button (click)="cancel()" i18n>Cancel</app-button>\n  <app-button (click)="close()" variant="primary">{{ data.confirmButtonText }}</app-button>\n</div>\n',styles:["form {\n  display: flex;\n  flex-direction: column;\n  padding-top: 1rem;\n}\nform > *:not(:last-child):not(app-checkbox) {\n  margin-bottom: 1.5rem;\n}"]})],StatusDialog);let StatusService=class StatusService extends BaseService{constructor(injector,apiService,taskService,dialogService){super(injector),this.injector=injector,this.apiService=apiService,this.taskService=taskService,this.dialogService=dialogService,this.errorCodes={PROJECT_NOT_FOUND:{message:$localize`Project not found`},PROJECT_OR_STATUS_NOT_FOUND:{message:$localize`Project or status not found`},FORM_VALIDATION_ERROR:{message:$localize`Form validation error`},STATUS_IS_NOT_EMPTY:{message:$localize`Status is not empty`}}}list(projectId){return this.apiService.get(`/project/${projectId}/status/`).pipe(this.validate({404:"PROJECT_NOT_FOUND"}))}get(projectId,statusId){return this.apiService.get(`/project/${projectId}/status/${statusId}`).pipe(this.validate({404:"PROJECT_OR_STATUS_NOT_FOUND"}))}create(projectId,status){return this.apiService.post(`/project/${projectId}/status/`,{body:status}).pipe(this.validate({400:"FORM_VALIDATION_ERROR",404:"PROJECT_NOT_FOUND"}))}update(projectId,status){return this.apiService.put(`/project/${projectId}/status/${status.id}`,{body:status}).pipe(this.validate({400:"FORM_VALIDATION_ERROR",404:"PROJECT_OR_STATUS_NOT_FOUND"}))}delete(projectId,status){return this.apiService.delete(`/project/${projectId}/status/${status.id}`).pipe(this.validate({400:"STATUS_IS_NOT_EMPTY",404:"PROJECT_OR_STATUS_NOT_FOUND"}))}getDefaultStatusList(){return[{name:"To Do",color:0,ordinal:0,begin:!0,final:!1},{name:"In Progress",color:0,ordinal:1,begin:!1,final:!1},{name:"Done",color:0,ordinal:2,begin:!1,final:!0}]}listWithTasks(projectId){return(0,combineLatest.a)([this.list(projectId),this.taskService.list(projectId)]).pipe((0,map.U)((([statuses,tasks])=>(statuses.forEach((status=>{status.tasks=tasks.filter((task=>task.statusId===status.id))})),statuses))))}board(projectId){return(0,combineLatest.a)([this.list(projectId),this.taskService.list(projectId)]).pipe((0,map.U)((([statuses,tasks])=>{var _a;const board=[],OTHER=["OTHER",statuses.map((s=>Object.assign(Object.assign({},s),{tasks:[]})))];for(const task of tasks)if(null===(_a=task.subTasks)||void 0===_a?void 0:_a.length){const statusesWithSubtasks=statuses.map((status=>{var _a;return Object.assign(Object.assign({},status),{tasks:(null===(_a=task.subTasks)||void 0===_a?void 0:_a.filter((subtask=>subtask.statusId===status.id)))||[]})}));board.push([task,statusesWithSubtasks])}else{let status=OTHER[1].find((status=>status.id===task.statusId));status.tasks||(status.tasks=[]),status.tasks.push(task)}return board.push(OTHER),board})))}openEditStatusDialog(status){return this.dialogService.open(StatusDialog,{status,title:$localize`Edit status`,confirmButtonText:$localize`Update`}).afterClosed().pipe((0,operators_filter.h)(Boolean))}openCreateNewStatusDialog(){return this.dialogService.open(StatusDialog,{title:$localize`Create new status`,confirmButtonText:$localize`Create`}).afterClosed().pipe((0,operators_filter.h)(Boolean))}};var TaskDialogVariant;StatusService.ctorParameters=()=>[{type:core.Injector},{type:ApiService},{type:TaskService},{type:DialogService}],(0,tslib_es6.gn)([Cache()],StatusService.prototype,"list",null),(0,tslib_es6.gn)([Cache()],StatusService.prototype,"get",null),StatusService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],StatusService),function(TaskDialogVariant){TaskDialogVariant.CREATE="create",TaskDialogVariant.EDIT="edit"}(TaskDialogVariant||(TaskDialogVariant={}));let TaskDialog=class TaskDialog{constructor(data,dialogRef,statusService,workspaceService,gitIntegrationService,routerExtensions,taskService){var _a;this.data=data,this.dialogRef=dialogRef,this.statusService=statusService,this.workspaceService=workspaceService,this.gitIntegrationService=gitIntegrationService,this.routerExtensions=routerExtensions,this.taskService=taskService,this.TaskDialogVariant=TaskDialogVariant,this.taskTypes$=this.taskService.listTaskTypes(null===(_a=this.data.parentTask)||void 0===_a?void 0:_a.type),this.taskPriorities=Object.values(TaskPriority),this.isGitHubIntegrationAvailable=!1,this.form=new ngneat_reactive_forms.cw({id:new ngneat_reactive_forms.NI(null),parentTaskId:new ngneat_reactive_forms.NI(null),type:new ngneat_reactive_forms.NI(this.taskTypes$.value[0][1],[requiredValidator()]),name:new ngneat_reactive_forms.NI("",[requiredValidator()]),statusId:new ngneat_reactive_forms.NI(null,[requiredValidator()]),projectId:new ngneat_reactive_forms.NI(null,[requiredValidator()]),workspaceId:new ngneat_reactive_forms.NI(null,[requiredValidator()]),description:new ngneat_reactive_forms.NI(""),priority:new ngneat_reactive_forms.NI(TaskPriority.MEDIUM,[requiredValidator()]),deadline:new ngneat_reactive_forms.NI(null),estimatedDate:new ngneat_reactive_forms.NI(null),issue:new ngneat_reactive_forms.NI(null),pull:new ngneat_reactive_forms.NI(null)}),this.interactive$=function timeToInteraction(time=100){const subject=new BehaviorSubject.X(!1),_merge=(0,merge.T)((0,of.of)(!1),(0,interval.F)(time).pipe((0,take.q)(1),(0,map.U)((()=>!0)))).pipe((0,tap.b)((val=>subject.next(val))),(0,skip.T)(1),(0,tap.b)((()=>{_merge.unsubscribe(),subject.complete()}))).subscribe();return subject}(),this.TaskType=TaskType}ngOnInit(){this.loadParamsFromUrl();const{workspaceId,projectId,task}=this.data;this.form.patchValue({workspaceId,projectId}),task&&this.form.patchValue(task),this.workspaceList$=this.workspaceService.list(),this.form.get("workspaceId").valueChanges.pipe((0,pairwise.G)(),(0,ngneat_until_destroy.t)(this)).subscribe((([oldWorkspaceId,newWorkspaceId])=>{oldWorkspaceId!==newWorkspaceId&&(console.log("fromSubscription"),this.onWorkspaceIdChange.bind(this)(newWorkspaceId))})),this.form.get("projectId").valueChanges.pipe((0,distinctUntilChanged.x)(),(0,ngneat_until_destroy.t)(this)).subscribe(this.onProjectIdChange.bind(this)),workspaceId&&(console.log("fromInit"),this.onWorkspaceIdChange(workspaceId)),projectId&&this.onProjectIdChange(projectId)}onWorkspaceIdChange(workspaceId){console.log("onWorkspaceIdChange",workspaceId),this.interactive$.value&&this.form.get("projectId").setValue(null),workspaceId&&(this.projectList$=this.workspaceService.get(workspaceId).pipe((0,map.U)((workspace=>workspace.projectsWithPrivileges.map((project=>project.project))))))}onProjectIdChange(projectId){projectId&&(this.statusList$=this.statusService.list(projectId),this.statusList$.pipe((0,ngneat_until_destroy.t)(this)).subscribe((statuses=>{var _a;const statusId=null===(_a=statuses.find((status=>status.begin)))||void 0===_a?void 0:_a.id;statusId&&this.form.patchValue({statusId})})),this.gitIntegrationService.hasGitHubIntegration(projectId).subscribe((value=>{this.isGitHubIntegrationAvailable=value})))}loadParamsFromUrl(){const{workspaceId,projectId}=this.routerExtensions.snapshot.params;(0,isNil.Z)(workspaceId)||this.data.workspaceId||(this.data.workspaceId=Number(workspaceId)),(0,isNil.Z)(projectId)||this.data.projectId||(this.data.projectId=Number(projectId))}confirm(){validateForm(this.form)&&this.dialogRef.close(this.form.value)}cancel(){this.dialogRef.close(!1)}};TaskDialog.ctorParameters=()=>[{type:void 0,decorators:[{type:core.Inject,args:[dialog.WI]}]},{type:dialog.so},{type:StatusService},{type:WorkspaceService},{type:GitIntegrationService},{type:RouterExtensionsService},{type:TaskService}],TaskDialog=(0,tslib_es6.gn)([(0,ngneat_until_destroy.c)(),(0,core.Component)({selector:"app-task-dialog",template:'<h1 mat-dialog-title *ngIf="data.variant === TaskDialogVariant.EDIT" i18n>Edit task: {{ data.task?.name }}</h1>\n<h1 mat-dialog-title *ngIf="data.variant === TaskDialogVariant.CREATE && !data.parentTask" i18n>Create new task</h1>\n<h1 mat-dialog-title *ngIf="data.parentTask" i18n>Create new subtask</h1>\n<div mat-dialog-content>\n  <form (submit)="confirm()" [formGroup]="form" autocomplete="off">\n\n    \x3c!-- Workspace --\x3e\n    <app-select *ngIf="!data.parentTask" formControlName="workspaceId" floatingLabel="Workspace" i18n-floatingLabel>\n      <app-option *ngFor="let workspace of workspaceList$ | async" [value]="workspace.id">{{ workspace.name }}\n      </app-option>\n      <app-empty-options i18n>There is no workspaces</app-empty-options>\n    </app-select>\n\n    \x3c!-- Project --\x3e\n    <ng-container *ngIf="!data.parentTask && form.get(\'workspaceId\')?.value">\n      <app-select formControlName="projectId" floatingLabel="Project" i18n-floatingLabel>\n        <app-option *ngFor="let project of projectList$ | async" [value]="project.id">{{project.name}}\n        </app-option>\n        <app-empty-options i18n>Selected workspace is empty</app-empty-options>\n      </app-select>\n    </ng-container>\n\n    \x3c!-- Type field --\x3e\n    <app-select formControlName="type" floatingLabel="Type" i18n-floatingLabel>\n      <app-option *ngFor="let type of taskTypes$ | async" [value]="type[1]" [icon]="type[0] | taskTypeIcon">\n        {{ type[1] | taskType }}\n      </app-option>\n    </app-select>\n\n    \x3c!-- Name field --\x3e\n    <app-input floatingLabel="Name" placeholder="New task" formControlName="name" i18n-floatingLabel i18n-placeholder>\n    </app-input>\n\n    \x3c!-- Description field --\x3e\n    <app-textarea floatingLabel="Description" placeholder="Sample description..." formControlName="description"\n      i18n-floatingLabel i18n-placeholder [rows]="10"></app-textarea>\n\n    \x3c!-- Status --\x3e\n    <app-select formControlName="statusId" floatingLabel="Status" i18n-floatingLabel>\n      <app-option *ngFor="let status of statusList$ | async" [value]="status.id">\n        {{ status.name }}\n      </app-option>\n      <app-empty-options i18n>This project doesn\'t have any status.</app-empty-options>\n    </app-select>\n\n    \x3c!-- Priorities --\x3e\n    <app-select formControlName="priority" floatingLabel="Priority" i18n-floatingLabel>\n      <app-option *ngFor="let priority of taskPriorities" [value]="priority" [icon]="priority | taskPriorityIcon">{{\n        priority | taskPriority }}</app-option>\n    </app-select>\n\n    \x3c!-- Deadline --\x3e\n    <app-input-date-time formControlName="deadline" floatingLabel="Deadline" placeholder="Choose a date"\n      i18n-floatingLabel i18n-placeholder>\n    </app-input-date-time>\n\n    \x3c!-- Estimate time --\x3e\n    <app-input-date-time formControlName="estimatedDate" floatingLabel="Estimated date" placeholder="Choose a date"\n      i18n-floatingLabel i18n-placeholder>\n    </app-input-date-time>\n\n    \x3c!-- Parent --\x3e\n    <input-task-parent *ngIf="![TaskType.EPIC, TaskType.USER_STORY, undefined].includes(form.get(\'type\')?.value)"\n      [projectId]="form.get(\'projectId\').value || -1" formControlName="parentTaskId" [type]="form.get(\'type\')?.value">\n    </input-task-parent>\n\n    \x3c!-- Epic --\x3e\n    \x3c!-- <input-epic *ngIf="form.get(\'type\').value !== TaskType.EPIC" formControlName="parentTaskId"\n      [projectId]="form.get(\'projectId\').value || -1"></input-epic> --\x3e\n\n    \x3c!-- GitHub issue integration --\x3e\n    <input-issue *ngIf="isGitHubIntegrationAvailable && form.get(\'projectId\')?.value" formControlName="issue"\n      [projectId]="form.get(\'projectId\').value || -1"></input-issue>\n\n    \x3c!-- Github pull request integration --\x3e\n    <input-pull-request *ngIf="isGitHubIntegrationAvailable && form.get(\'projectId\')?.value" formControlName="pull"\n      [projectId]="form.get(\'projectId\').value || -1"></input-pull-request>\n\n  </form>\n</div>\n<div mat-dialog-actions>\n  <app-button mat-button (click)="cancel()" i18n>Cancel</app-button>\n  <app-button *ngIf="data.variant === TaskDialogVariant.CREATE" (click)="confirm()" variant="primary" i18n>Create\n  </app-button>\n  <app-button *ngIf="data.variant === TaskDialogVariant.EDIT" (click)="confirm()" variant="primary" i18n>Save changes\n  </app-button>\n</div>\n',styles:["form > * {\n  display: block;\n  width: 100%;\n  margin-bottom: 1.5rem;\n}"]})],TaskDialog);var switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),empty=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/empty.js");let TaskService=class TaskService extends BaseService{constructor(injector,apiService,dialogService,memberService,snackbarService){super(injector),this.injector=injector,this.apiService=apiService,this.dialogService=dialogService,this.memberService=memberService,this.snackbarService=snackbarService,this.lists=new Map,this.errorCodes={FORM_VALIDATION_ERROR:{message:$localize`Form validation error`},PROJECT_NOT_FOUND:{message:$localize`Project not found`}}}list(projectId,filters){return this.apiService.get(`/project/${projectId}/task`,{filters}).pipe(this.validate({404:"PROJECT_NOT_FOUND"}))}create(projectId,task){return this.apiService.post(`/project/${projectId}/task/`,{body:task}).pipe(this.validate({400:"FORM_VALIDATION_ERROR",404:"PROJECT_NOT_FOUND"}),(0,tap.b)((()=>{this.snackbarService.show($localize`Task created successfully!`)})))}update(projectId,task){return this.apiService.put(`/project/${projectId}/task/${task.id}`,{body:task}).pipe(this.validate({400:"FORM_VALIDATION_ERROR",404:"PROJECT_NOT_FOUND"}),(0,tap.b)((()=>{this.snackbarService.show($localize`Task updated successfully!`)})))}delete(projectId,taskId){return this.apiService.delete(`/project/${projectId}/task/${taskId}`).pipe(this.validate({404:"PROJECT_NOT_FOUND"}))}deleteWithConfirmation(projectId,task){return this.dialogService.confirm({title:$localize`Delete task "${task.name}"`,message:$localize`Are you sure you want to delete this task "${task.name}"?`,confirmText:$localize`Delete`,cancelText:$localize`Cancel`,variant:AlertDialogVariant.IMPORTANT}).pipe((0,switchMap.w)((confirmed=>confirmed?this.delete(projectId,task.id).pipe((0,switchMap.w)((()=>(0,of.of)(!0)))):empty.E)))}openEditTaskDialog(projectId,task){return this.dialogService.open(TaskDialog,{variant:TaskDialogVariant.EDIT,projectId,task},DialogOutlet.CONTENT_RIGHT).afterClosed().pipe((0,switchMap.w)((updatedTask=>updatedTask?this.update(projectId,updatedTask):empty.E)))}openCreateNewTaskDialog(){return this.dialogService.open(TaskDialog,{variant:TaskDialogVariant.CREATE},DialogOutlet.CONTENT_RIGHT).afterClosed().pipe((0,switchMap.w)((task=>task?this.create(task.projectId,task):empty.E)))}openCreateSubtaskDialog(projectId,parentTask){return this.dialogService.open(TaskDialog,{variant:TaskDialogVariant.CREATE,projectId,parentTask,task:{parentTaskId:parentTask.id}},DialogOutlet.CONTENT_RIGHT).afterClosed().pipe((0,switchMap.w)((newTask=>newTask?this.create(projectId,newTask):empty.E)))}schedule(projectId){return(0,combineLatest.a)([this.list(projectId).pipe((0,take.q)(1)),this.memberService.list(projectId).pipe((0,take.q)(1))]).pipe((0,map.U)((([tasks,members])=>{const schedules=[];for(const{user}of members)schedules.push({user,tasks:new Map});for(const task of tasks){const schedule=schedules.find((s=>s.user.id===task.assigneeId));schedule&&(task.estimatedDate?schedule.tasks.set(dayjs_min(task.estimatedDate).format("YYYY-MM-DD"),task):(schedule.tasks.has(null)||schedule.tasks.set(null,[]),schedule.tasks.get(null).push(task)))}return schedules})))}assign(assigneeId,taskId,projectId){return this.update(projectId,{id:taskId,assigneeId})}changeStatus(statusId,taskId,projectId){return this.update(projectId,{id:taskId,statusId})}listTaskTypes(parentTaskType){const parentTaskTypeNormal=(0,isNumber.Z)(parentTaskType)?parentTaskType:-1,desiredTaskTypes=TaskTypeHierarchy[parentTaskTypeNormal],taskTypesEntries=Enum.entries(TaskType);return new BehaviorSubject.X(desiredTaskTypes.map((taskType=>taskTypesEntries.find((([_,value])=>value===taskType)))))}listEpics(projectId){return this.list(projectId).pipe((0,map.U)((tasks=>tasks.filter((task=>task.type===TaskType.EPIC)))))}};TaskService.ctorParameters=()=>[{type:core.Injector},{type:ApiService},{type:DialogService},{type:MemberService},{type:SnackbarService}],(0,tslib_es6.gn)([Cache()],TaskService.prototype,"list",null),TaskService=(0,tslib_es6.gn)([Service(),(0,core.Injectable)({providedIn:"root"})],TaskService);let UpperNavigationComponent=class UpperNavigationComponent{constructor(dialogService,taskService,workspaceService,authService,router){this.dialogService=dialogService,this.taskService=taskService,this.workspaceService=workspaceService,this.authService=authService,this.router=router,this.faAngleDown=index_es.gc2,this.faUser=index_es.ILF,this.faCog=index_es.b7W,this.faSignOut=index_es.HEx,this.active=!1,this._isButtonDisabled=!0}ngOnInit(){this.workspaceService.list().pipe((0,map.U)((workspaces=>{0===workspaces.length||0===workspaces.filter((workspace=>workspace.projectsWithPrivileges.length)).length?this._isButtonDisabled=!1:this._isButtonDisabled=!0})))}createNewTask(){this.taskService.openCreateNewTaskDialog().subscribe((()=>{location.reload()}))}logout(){this.authService.logout().subscribe((()=>{this.router.navigate(["/","auth","login"])}))}isButtonDisabled(){return this._isButtonDisabled}openProfile(){this.active=!0,(0,fromEvent.R)(document,"click").pipe((0,skip.T)(1),(0,take.q)(1)).subscribe((()=>{this.closeProfile()}))}closeProfile(){this.active=!1}toggleProfile(){this.active?this.closeProfile():this.openProfile()}};UpperNavigationComponent.ctorParameters=()=>[{type:DialogService},{type:TaskService},{type:WorkspaceService},{type:AuthService},{type:router.F0}],UpperNavigationComponent.propDecorators={openBelow:[{type:core.ViewChild,args:["openBelow"]}]},UpperNavigationComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-upper-navigation",template:'<app-button *ngIf="isButtonDisabled()" variant="primary" (click)="createNewTask()" type="button" i18n>New task\n</app-button>\n<div class="search"></div>\n<section class="flex-end-position">\n  <fa-icon></fa-icon>\n  <div class="profile">\n    <div class="avatar"></div>\n    <div class="name"></div>\n    <div #openBelow class="open-below" (click)="toggleProfile()" [class.active]="active">\n      <app-icon [icon]="faAngleDown" size="16px"></app-icon>\n    </div>\n  </div>\n</section>\n<div class="options" [class.active]="active">\n  <ul>\n    <li>\n      <a routerLink="/settings/account" routerLinkActive="active">\n        <app-icon [icon]="faUser" size="16px"></app-icon>\n        <h2 i18n>Profile</h2>\n      </a>\n    </li>\n    <li>\n      <a routerLink="/settings/localization" routerLinkActive="active">\n        <app-icon [icon]="faCog" size="16px"></app-icon>\n        <h2 i18n>Settings</h2>\n      </a>\n    </li>\n    <li>\n      <a (click)="logout()">\n        <app-icon [icon]="faSignOut" size="16px"></app-icon>\n        <h2 i18n>Log out</h2>\n      </a>\n    </li>\n  </ul>\n</div>\n',styles:[":host {\n  display: flex;\n  width: 100%;\n  height: 62px;\n  align-items: center;\n  background-color: var(--color-secondary-800);\n  color: var(--color-text);\n}\n\napp-button {\n  align-items: center;\n  justify-content: center;\n  padding: 10px 20px;\n  margin: 0;\n}\n\n.flex-end-position {\n  position: absolute;\n  right: 0;\n  display: flex;\n  height: 62px;\n}\n\n.flex-end-position .profile {\n  width: 200px;\n}\n\n.flex-end-position .profile .open-below {\n  position: absolute;\n  right: 0;\n  display: flex;\n  height: 100%;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.flex-end-position .profile .open-below app-icon {\n  display: flex;\n  align-items: center;\n}\n\n.flex-end-position .profile .open-below app-icon.active {\n  transform: scaleY(-1);\n}\n\n.options {\n  position: absolute;\n  z-index: 2;\n  top: 62px;\n  right: 0;\n  display: none;\n  width: 200px;\n  cursor: pointer;\n}\n\n.options.active {\n  display: block;\n  background-color: var(--color-secondary-600);\n  color: var(--color-text);\n}\n\n.options.active a {\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 12px 10px;\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n  transition: background-color 0.2s ease-in-out;\n}\n\n.options.active a app-icon {\n  margin-right: 1rem;\n  margin-left: 2rem;\n}\n\n.options.active a:hover {\n  background-color: var(--color-secondary-500);\n}"]})],UpperNavigationComponent);let ClickStopPropagationDirective=class ClickStopPropagationDirective{onClick(event){event.stopPropagation(),window.document.dispatchEvent(new Event("click",{bubbles:!0,cancelable:!0}))}};ClickStopPropagationDirective.propDecorators={onClick:[{type:core.HostListener,args:["click",["$event"]]}]},ClickStopPropagationDirective=(0,tslib_es6.gn)([(0,core.Directive)({selector:"[click-stop-propagation]"})],ClickStopPropagationDirective);let UserService=class UserService{constructor(apiService,authService){this.apiService=apiService,this.authService=authService}getUserDefaultPreferences(){return{dateFormat:"DD.MM.YYYY",timeFormat:"HH:mm",firstDayOfWeek:1}}update(user){return this.apiService.put("/auth/edit",{body:user})}getMyself(){return this.userData$||(this.userData$=this.apiService.get("/auth/me").pipe((0,map.U)((user=>Object.assign({},this.getUserDefaultPreferences(),user))),(0,shareReplay.d)(1))),this.userData$}getDateFormat(){return this.getMyself().pipe((0,map.U)((user=>user.dateFormat)))}clearCache(){this.authService.clearCache()}isLocallyLogged(){return Boolean(localStorage.getItem("logged"))}};UserService.ctorParameters=()=>[{type:ApiService},{type:AuthService}],UserService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],UserService);let ErrorInterceptor=class ErrorInterceptor{constructor(dialogService,router,userService,authService){this.dialogService=dialogService,this.router=router,this.userService=userService,this.authService=authService,this._stoppedInterceptionProcess=!1}constructError(e){var _a;return{status:(null==e?void 0:e.status)||-1,message:(null===(_a=null==e?void 0:e.error)||void 0===_a?void 0:_a.message)||""}}stopInterceptionProcess(){this._stoppedInterceptionProcess=!0}intercept(req,next){return next.handle(req).pipe((0,catchError.K)(((e,obs)=>{const error=this.constructError(e);return 401===error.status?this._stoppedInterceptionProcess?empty.E:(this.stopInterceptionProcess(),this.dialogService.closeAll(),"user deleted"===error.message?(this.userService.clearCache(),this.router.navigate(["/auth/delete-account"]),empty.E):(this.userService.isLocallyLogged()&&(this.userService.clearCache(),this.authService.getLastLoginTime().diff(dayjs_min_default()(),"day")<1&&this.dialogService.openErrorDialog($localize`Your session has expired.`)),this.router.navigate(["/auth/login"]),empty.E)):(0,throwError._)((()=>e))})))}};ErrorInterceptor.ctorParameters=()=>[{type:DialogService},{type:router.F0},{type:UserService},{type:AuthService}],ErrorInterceptor=(0,tslib_es6.gn)([(0,core.Injectable)()],ErrorInterceptor);let MockPage=class MockPage{constructor(activatedRoute){this.activatedRoute=activatedRoute,this.image=""}ngOnInit(){this.activatedRoute.data.subscribe((({image})=>{this.image=image}))}};MockPage.ctorParameters=()=>[{type:router.gz}],MockPage=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-mock",template:'<img [src]="image" />\n',styles:['img {\n  width: 100%;\n  border: 4px solid #f39c12;\n}\n\n:host {\n  position: relative;\n  display: block;\n  text-align: center;\n}\n\n:host::after {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  display: block;\n  padding: 1rem 4rem;\n  background-color: #f39c12;\n  border-radius: var(--border-radius);\n  color: #222;\n  content: "Work in progress";\n  font-weight: bold;\n  text-align: center;\n  transform: translate(-50%, -50%);\n}']})],MockPage);let DayjsPipe=class DayjsPipe{transform(value,format){return format?dayjs_min_default()(value).format(format):value?((0,isNumber.Z)(value),dayjs_min_default()(value)):null}};DayjsPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"dayjs"})],DayjsPipe);let DateByPreferencesPipe=class DateByPreferencesPipe{constructor(userService){this.userService=userService}transform(value){return value?this.userService.getDateFormat().pipe((0,tap.b)((dateFormat=>console.log([value,dateFormat]))),(0,map.U)((dateFormat=>dayjs_min_default()(value).format(dateFormat)))):empty.E}};DateByPreferencesPipe.ctorParameters=()=>[{type:UserService}],DateByPreferencesPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"dateByPreferences"})],DateByPreferencesPipe);let DayOfWeekPipe=class DayOfWeekPipe{constructor(){this.weekDays=dayjs_min_default().weekdays()}transform(value){return this.weekDays[value.day()]}};DayOfWeekPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"dayOfWeek"})],DayOfWeekPipe);let DayjsFormatPipe=class DayjsFormatPipe{transform(value,format){return value.format(format)}};DayjsFormatPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"dayjsFormat"})],DayjsFormatPipe);let MonthPipe=class MonthPipe{constructor(){this.monthNames=dayjs_min_default().months()}transform(value){return(0,isNumber.Z)(value)?this.monthNames[value]:(0,isString.Z)(value)?this.monthNames[dayjs_min_default()(value).month()]:this.monthNames[value.month()]}};MonthPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"month"})],MonthPipe);let ValidationErrorPipe=class ValidationErrorPipe{transform(value){return(null==value?void 0:value.message)||null}};ValidationErrorPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"validationError"})],ValidationErrorPipe);let YearPipe=class YearPipe{transform(value){return value.year()}};YearPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"year"})],YearPipe);let LetDirective=class LetDirective{constructor(_viewContainer,_templateRef){this._context={ngLet:null},_viewContainer.createEmbeddedView(_templateRef,this._context)}set ngLet(value){this._context.ngLet=value}};LetDirective.ctorParameters=()=>[{type:core.ViewContainerRef},{type:core.TemplateRef}],LetDirective.propDecorators={ngLet:[{type:core.Input}]},LetDirective=(0,tslib_es6.gn)([(0,core.Directive)({selector:"[ngLet]"})],LetDirective);let FocusInitialDirective=class FocusInitialDirective{constructor(el){this.el=el}ngAfterViewInit(){this.el.nativeElement.__ngContext__[33].focus()}};FocusInitialDirective.ctorParameters=()=>[{type:core.ElementRef}],FocusInitialDirective=(0,tslib_es6.gn)([(0,core.Directive)({selector:"[appFocusInitial]"})],FocusInitialDirective);let TabsComponent=class TabsComponent{};TabsComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"tabs",template:'<div class="flex">\n  <ng-content select=".prefix"></ng-content>\n  <ng-content select="tab"></ng-content>\n</div>\n<div class="flex">\n  <ng-content select=".suffix"></ng-content>\n</div>\n',styles:[":host {\n  display: flex;\n  justify-content: space-between;\n  color: var(--color-text);\n}\n\n:host ::ng-deep .prefix,\n:host ::ng-deep .suffix {\n  padding: 1rem 1.5rem;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  height: 100%;\n}"]})],TabsComponent);let TabComponent=class TabComponent{};TabComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"tab",template:'<button class="tab">\n  <ng-content></ng-content>\n</button>\n',styles:[":host.active .tab {\n  border-bottom: 1px solid var(--color-primary-700);\n}\n\n.tab {\n  padding: 1rem 1.5rem;\n  transition: background-color 0.1s ease;\n}\n\n.tab:hover {\n  background-color: var(--color-secondary-800);\n}"]})],TabComponent);var node_modules_color=__webpack_require__("./node_modules/color/index.js"),color_default=__webpack_require__.n(node_modules_color);let InputColorComponent=class InputColorComponent extends control_accessor_class.A{constructor(){super(...arguments),this.userControl=new ngneat_reactive_forms.NI(""),this.colorRGB="rgb(0, 0, 0)"}ngAfterControlInit(){this.control.value?(this.colorObject=node_modules_color(this.control.value),this.userControl.patchValue(this.colorObject.rgb().string())):(this.colorObject=node_modules_color("#000000"),this.userControl.patchValue(this.colorObject.rgb().string()));let changesFromInside=!1;this.control.valueChanges.pipe((0,ngneat_until_destroy.t)(this)).subscribe((value=>{console.log("parsing from:",value);const color=node_modules_color(value);this.colorRGB=color.rgb().string()})),this.control.valueChanges.pipe((0,ngneat_until_destroy.t)(this),(0,operators_filter.h)((()=>!changesFromInside))).subscribe((value=>{console.log("parsing from:",value);const color=node_modules_color(value);this.colorRGB=color.rgb().string(),this.userControl.setValue(color.toString(),{emitEvent:!1})})),this.userControl.valueChanges.pipe((0,ngneat_until_destroy.t)(this)).subscribe((value=>{if(console.log("parsing from userInput:",value),value)try{const color=node_modules_color(value);console.log(color),changesFromInside=!0,this.control.setValue(color.rgbNumber()),changesFromInside=!1}catch(e){}}))}};InputColorComponent.propDecorators={floatingLabel:[{type:core.Input}],staticLabel:[{type:core.Input}]},InputColorComponent=(0,tslib_es6.gn)([(0,ngneat_until_destroy.c)(),(0,core.Component)({selector:"input-color",template:'<app-input [formControl]="userControl" [staticLabel]="staticLabel" [floatingLabel]="floatingLabel">\n  <div class="prefix color-square" [style.backgroundColor]="colorRGB"></div>\n</app-input>\n',styles:[".color-square {\n  width: 1rem;\n  height: 1rem;\n  border-radius: 4px;\n  margin-right: 4px;\n}"]})],InputColorComponent);let ColorComponent=class ColorComponent{constructor(){this._color=0,this.rgbColor="rgb(0, 0, 0)"}set color(color){this._color=color,this.rgbColor=node_modules_color(color).rgb().string()}get color(){return this._color}};ColorComponent.propDecorators={color:[{type:core.Input}]},ColorComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"color",template:'<div class="color-square" [style.backgroundColor]="rgbColor"></div>\n<span class="text-base">{{ rgbColor }}</span>\n',styles:[":host {\n  display: flex;\n  align-items: center;\n}\n\n.color-square {\n  width: 1rem;\n  height: 1rem;\n  border-radius: 0.25rem;\n  margin-right: 0.5rem;\n}"]})],ColorComponent);let LoaderComponent=class LoaderComponent{constructor(){this.size="1rem"}};LoaderComponent.propDecorators={size:[{type:core.HostBinding,args:["style.width"]},{type:core.HostBinding,args:["style.height"]},{type:core.Input}]},LoaderComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"loader",template:'<span class="loader"></span>\n',styles:[':host {\n  display: block;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.loader {\n  display: block;\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n\n/** @author jh3y */\n\n.loader:before {\n  animation: spin 0.5s infinite linear;\n  border-radius: 100%;\n  box-shadow: inset -2px 0 0 0px var(--color-text);\n  content: "";\n  height: 100%;\n  position: absolute;\n  width: 100%;\n  display: block;\n}']})],LoaderComponent);let ContrastColorPipe=class ContrastColorPipe{transform(value,luminosityCap=.1){return color_default()(value).luminosity()>luminosityCap?"light":"dark"}};ContrastColorPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"contrastColor"})],ContrastColorPipe);let DateTimePickerComponent=class DateTimePickerComponent extends control_accessor_class.A{};DateTimePickerComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"date-time-picker",template:'<div class="general">\n  <div class="header">\n    <ng-container *ngIf="control.value | dayjs as date">\n      <div class="year">{{ date | year }}</div>\n      <div class="date">{{ date | dayjsFormat:\'MMMM D\' }}</div>\n      <div class="opacity-50">{{ date | dayOfWeek }}</div>\n    </ng-container>\n  </div>\n  <time-picker [formControl]="control"></time-picker>\n</div>\n<date-picker [formControl]="control"></date-picker>\n',styles:[":host {\n  display: flex;\n  color: var(--color-text);\n}\n\n.general {\n  display: flex;\n  width: 180px;\n  flex-direction: column;\n  padding: 1rem;\n  background-color: var(--color-secondary-500);\n  border-radius: var(--border-radius) 0 0 var(--border-radius);\n}\n\n.general .header {\n  height: 78px;\n}\n\n.general .header .year {\n  opacity: 0.75;\n}\n\n.general .header .date {\n  font-size: 1.2rem;\n}"]})],DateTimePickerComponent);let TimePickerComponent=class TimePickerComponent extends control_accessor_class.A{constructor(){super(...arguments),this.cursor=this.control.value?dayjs_min_default()(this.control.value):dayjs_min_default()(),this.faChevronUp=index_es.mTx,this.faChevronDown=index_es.ptq}now(){const today=dayjs_min_default()();this.cursor=this.cursor.set("hour",today.hour()),this.cursor=this.cursor.set("minute",today.minute()),this.control.setValue(this.cursor.valueOf())}increaseMinutes(){this.cursor=this.cursor.add(1,"minute"),this.setControlProperties(["hour","minute"],[this.cursor.hour(),this.cursor.minute()])}decreaseMinutes(){this.cursor=this.cursor.subtract(1,"minute"),this.setControlProperties(["hour","minute"],[this.cursor.hour(),this.cursor.minute()])}increaseHours(){this.cursor=this.cursor.add(1,"hour"),this.setControlProperties(["hour","minute"],[this.cursor.hour(),this.cursor.minute()])}decreaseHours(){this.cursor=this.cursor.subtract(1,"hour"),this.setControlProperties(["hour","minute"],[this.cursor.hour(),this.cursor.minute()])}setControlProperties(propertyNames,values){let value=dayjs_min_default()(this.control.value||0);for(let i=0;i<Math.min(propertyNames.length,values.length);i++)value=value.set(propertyNames[i],values[i]);this.control.setValue(value.valueOf())}onHourChange(event){var _a;const value=null===(_a=event.target)||void 0===_a?void 0:_a.valueAsNumber;this.cursor=this.cursor.set("hour",value)}onMinuteChange(event){var _a;const value=null===(_a=event.target)||void 0===_a?void 0:_a.valueAsNumber;this.cursor=this.cursor.set("minute",value)}ngAfterControlInit(){this.control.value&&(this.cursor=dayjs_min_default()(this.control.value))}writeValue(value){super.writeValue(value),value&&(this.cursor=dayjs_min_default()(value))}};var MainModule_1;TimePickerComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"time-picker",template:'<div class="time">\n  <div class="time-selector">\n    <button class="arrow-up" (click)="increaseHours()">\n      <app-icon [icon]="faChevronUp" size="1rem"></app-icon>\n    </button>\n    <input type="number" [value]="cursor | dayjsFormat:\'HH\'" (change)="onHourChange($event)" readonly>\n    <button class="arrow-down" (click)="decreaseHours()">\n      <app-icon [icon]="faChevronDown" size="1rem"></app-icon>\n    </button>\n  </div>\n  <span class="colon">:</span>\n  <div class="time-selector">\n    <button class="arrow-up" (click)="increaseMinutes()">\n      <app-icon [icon]="faChevronUp" size="1rem"></app-icon>\n    </button>\n    <input type="number" [value]="cursor | dayjsFormat:\'mm\'" (change)="onMinuteChange($event)" readonly>\n    <button class="arrow-down" (click)="decreaseMinutes()">\n      <app-icon [icon]="faChevronDown" size="1rem"></app-icon>\n    </button>\n  </div>\n</div>\n',styles:[".time-selector {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.time-selector .arrow-up,\n.time-selector .arrow-down {\n  padding: 0.25rem;\n  border: none;\n  background-color: transparent;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: background-color 0.1s ease;\n}\n.time-selector .arrow-up:hover,\n.time-selector .arrow-down:hover {\n  background-color: var(--color-secondary-600);\n}\n.time {\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  justify-content: center;\n  margin: 1rem;\n}\n.time .colon {\n  display: inline-block;\n  margin: 0 0.5rem;\n}\n.time input {\n  width: 2rem;\n  background-color: transparent;\n  text-align: center;\n}\n.time-actions {\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n}\n.time-actions button {\n  padding: 0.25rem 0.5rem;\n  background-color: transparent;\n  border-radius: 3px;\n  color: var(--color-text);\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.1s ease;\n}\n.time-actions button:hover {\n  background-color: var(--color-secondary-600);\n}\n/* --- DISABLE ARROW BUTTONS IN INPUT TYPE NUMBER ---  */\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  margin: 0;\n  -webkit-appearance: none;\n}\n/* Firefox */\ninput[type=number] {\n  -moz-appearance: textfield;\n}"]})],TimePickerComponent);const ngModuleConfig={imports:[common.ez,router.Bz,observers.Q8],importExports:[fesm2020_forms.FormsModule,fesm2020_forms.ReactiveFormsModule,http.JF,drag_drop._t,platform.ud,overlay.U8,dialog.Is,icon.Ps,menu.Tx,table.p0,autocomplete.Bb,badge.g,fesm2020_checkbox.p9,datepicker.FA,fesm2020_core.XK,form_field.lN,input.c,tooltip.AV,tabs.Nh,progress_spinner.Cq,fesm2020_select.LD,angular_fontawesome.uH],declarations:[],exportDeclarations:[input_component.a,button_component.r,ValidationErrorPipe,AlertDialog,IconComponent,FocusInitialDirective,SidebarNavigationComponent,NavElementComponent,NavElementWorkspaceComponent,UpperNavigationComponent,SelectComponent,OptionComponent,MainViewComponent,textarea_component.R,checkbox_component.b,card_component.A,ClickStopPropagationDirective,input_date_time_component.M,LetDirective,FiltersComponent,SnackbarComponent,SnackbarOutletComponent,MockPage,DialogOutletComponent,ViewContainerDirective,EmptyOptionsComponent,date_picker_component.L,DateTimePickerComponent,MonthPipe,DayjsPipe,YearPipe,DayjsFormatPipe,DayOfWeekPipe,DayjsPipe,DateByPreferencesPipe,TabsComponent,TabComponent,InputColorComponent,ColorComponent,LoaderComponent,ContrastColorPipe,TimePickerComponent],providers:[{provide:http.TP,useClass:ErrorInterceptor,multi:!0},fesm2020_checkbox.p9,datepicker.FA,DialogService,ApiService]};let MainModule=MainModule_1=class MainModule{constructor(injector){MainModule_1.injector=injector,window.injector=injector}};MainModule.ctorParameters=()=>[{type:core.Injector}],MainModule=MainModule_1=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[...ngModuleConfig.imports,...ngModuleConfig.importExports],declarations:[...ngModuleConfig.declarations,...ngModuleConfig.exportDeclarations],exports:[...ngModuleConfig.importExports,...ngModuleConfig.exportDeclarations],providers:[...ngModuleConfig.providers]})],MainModule);var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),lodash_es_merge=__webpack_require__("./node_modules/lodash-es/merge.js");function getAllProperties(obj){let allProps=function loop(obj){let props=Object.getOwnPropertyNames(obj),proto=Object.getPrototypeOf(obj);return null!==proto?props.concat(loop(proto)):props}(obj);return allProps.filter(((prop,i)=>!allProps.includes(prop,i+1)))}class TestNgControl extends fesm2020_forms.NgControl{constructor(){super(...arguments),this._control=new ngneat_reactive_forms.NI("")}viewToModelUpdate(newValue){this._control=newValue}get control(){return this._control}}const DEFAULT_METADATA={imports:[MainModule,animations.PW],providers:[{provide:fesm2020_forms.NgControl,useClass:TestNgControl}]},IGNORED_PROPERTIES=getAllProperties({});class StoryPageConfig{constructor(meta){this._meta=meta,this._meta.decorators=[(0,client.moduleMetadata)((0,lodash_es_merge.Z)({},DEFAULT_METADATA,this._meta.metadata))],this.disableEditingFunctions()}disableEditingFunctions(){this._meta.argTypes||(this._meta.argTypes={});const properties=getAllProperties(this._meta.component.prototype);for(const[property,predicate]of properties.map((p=>[p,this.propertyPredicate(p)])))if("function"==typeof this._meta.component.prototype[property])switch(predicate){case"delete":this._meta.argTypes[property]={table:{disable:!0}};break;case"readonly":this._meta.argTypes[property]={control:!1}}}propertyPredicate(property){return"_"===property[0]||property.startsWith("ng")?"delete":IGNORED_PROPERTIES.includes(property)?null:"readonly"}setTitle(title){return this._meta.title=title,this}addDecorators(decorators){return this._meta.decorators||(this._meta.decorators=[]),this._meta.decorators=[].concat(this._meta.decorators,decorators),this}get selector(){return this._meta.selector}meta(){return this._meta}}},"./src/stories/helpers/classes/story-template.class.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{q:()=>StoryTemplate});var lodash_es__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/merge.js");class StoryTemplate{constructor(args){const controlObject=args.formControl?{formControl:args.formControl}:{};this._args=(0,lodash_es__WEBPACK_IMPORTED_MODULE_0__.Z)({},controlObject,args)}get props(){return this._args}template(){return(args=>({props:(0,lodash_es__WEBPACK_IMPORTED_MODULE_0__.Z)({},args)})).bind({})}}},"./src/stories/helpers/classes/story.class.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{o:()=>Story});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),merge=__webpack_require__("./node_modules/lodash-es/merge.js"),omit=__webpack_require__("./node_modules/lodash-es/omit.js");function componentTemplateDecorator(props,config){return(0,client.componentWrapperDecorator)((defTemplate=>{const content=props.content||"",selector=config.selector,defPropsString=function extractPropsString(template){var _a;return(null===(_a=template.match(/(?<=(<[A-Za-z-]* ))[^>]*(?=>)/g))||void 0===_a?void 0:_a[0])||""}(defTemplate),newPropsString=function buildPropsString(props){const filteredProps=(0,omit.Z)(props,["content"]);return Object.entries(filteredProps).map((([key,_])=>`[${key}]="${key}"`)).join(" ")}(props),template=function buildTemplate(selector,content,propsString){return`<${selector} ${propsString}>${content}</${selector}>`}(selector,content,function combinePropsString(...propsStrings){return propsStrings.join(" ").trim().replace(/  +/g," ")}(defPropsString,newPropsString));return config.wrapWithDiv?wrapWithDiv(template):template}))}function wrapWithDiv(template){return`<div style="display:flex;gap:1rem;">${template}</div>`}class Story{constructor(config){this._config=config,this._story=config.template.template(),config.multiple&&((story,selector,input,values)=>{const inputRegex=new RegExp(`( |)\\[${input}\\]="${input}"`,"g"),addInputToTemplate=(template,value)=>{let valueCapital=value[0].toUpperCase()+value.substring(1);return template.replace("><",` ${input}="${value}">${valueCapital}<`)};story.decorators=[(0,client.componentWrapperDecorator)((story=>{const baseTemplate=story.replace(inputRegex,"");return wrapWithDiv(values.map((v=>addInputToTemplate(baseTemplate,v))).join(""))}))],story.argTypes={[input]:{table:{disable:!0}}};const emptyTemplate=`<${selector}></${selector}>`,snippet=values.map((v=>addInputToTemplate(emptyTemplate,v))).join("\n");story.parameters={docs:{source:{code:snippet,language:"html",type:"auto"}}}})(this._story,config.config.selector,config.multiple.prop,config.multiple.options),config.description&&this.addDescription(config.description),config.code&&this.addCode(config.code),config.html?this.addTemplate(config.html):config.multiple||this.addDefaultTemplate(),this.props&&this.addProps(this.props)}mergeConfig(config){(0,merge.Z)(this._story,config)}addDescription(description){this.mergeConfig({parameters:{docs:{description:{story:description}}}})}addProps(props){this.mergeConfig({args:(0,omit.Z)(props,["content"])})}addCode(code){this.mergeConfig({parameters:{docs:{source:{code,language:"html",type:"auto"}}}})}addTemplate(template){this.mergeConfig({decorators:[(0,client.componentWrapperDecorator)((()=>template))],parameters:{docs:{source:{code:template,language:"html",type:"auto"}}}})}addDefaultTemplate(){this.mergeConfig({decorators:[componentTemplateDecorator(this.props,{selector:this._config.config.selector})]})}get props(){return(0,merge.Z)({},this._config.props,this._config.template.props)}story(){return this._story}}},"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{__namedExportsOrder:()=>__namedExportsOrder,globalTypes:()=>globalTypes,parameters:()=>parameters});var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js"),esm=__webpack_require__("./node_modules/@storybook/theming/dist/esm/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[{"name":"ContrastColorPipe","id":"pipe-ContrastColorPipe-be2b6ef6bd60d534b20424b18b55918f85120de97f6f2874290780bb3cb5f6f7db73bbdb2588ef0cdd73ba0d3352f208c537eaa41a302dc5f8668dc3ca6f9e04","file":"src/app/_main/pipes/contrast-color/contrast-color.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"luminosityCap","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"0.1"}],"optional":false,"returnType":"string","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"luminosityCap","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"0.1","tagName":{"text":"param"}}]}],"ngname":"contrastColor","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport Color from \'color\';\\n\\n@Pipe({\\n  name: \'contrastColor\',\\n})\\nexport class ContrastColorPipe implements PipeTransform {\\n  transform(value: any, luminosityCap: number = 0.1): string {\\n    const color = Color(value);\\n    return color.luminosity() > luminosityCap ? \'light\' : \'dark\';\\n  }\\n}\\n"},{"name":"DateByPreferencesPipe","id":"pipe-DateByPreferencesPipe-4a260be45e3d538f1a5eb0e40d2776f68d286709acf27d2499dc2fe14c2e27c8bc45bb1b41acd3228be10a18daebccf1034145825ef66f72136131f022280f20","file":"src/app/_main/pipes/date-by-preferences/date-by-preferences.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"dateByPreferences","sourceCode":"import { PipeTransform } from \'@angular/core\';\\nimport dayjs from \'dayjs\';\\nimport { Pipe } from \'@angular/core\';\\nimport { UserService } from \'@auth/services/user/user.service\';\\nimport { EMPTY, map, tap } from \'rxjs\';\\n\\n@Pipe({\\n  name: \'dateByPreferences\',\\n})\\nexport class DateByPreferencesPipe implements PipeTransform {\\n  constructor(private userService: UserService) {}\\n\\n  transform(value: any): any {\\n    if (value) {\\n      return this.userService.getDateFormat().pipe(\\n        tap((dateFormat: string) => console.log([value, dateFormat])),\\n        map((dateFormat: string) => dayjs(value).format(dateFormat)),\\n      );\\n    } else {\\n      return EMPTY;\\n    }\\n  }\\n}\\n"},{"name":"DayjsFormatPipe","id":"pipe-DayjsFormatPipe-f79d185a9b248db36666669613f1c1cd451e972dd9a4db805d8dc28d5c193755aeaea8d09bac1c1e77ad23217e54f2f206064244165942ce76cd9eb5ad26fa3d","file":"src/app/_main/pipes/dayjs-format/dayjs-format.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"dayjs.Dayjs","deprecated":false,"deprecationMessage":""},{"name":"format","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"dayjs.Dayjs","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"format","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"dayjsFormat","sourceCode":"import { PipeTransform } from \'@angular/core\';\\nimport dayjs from \'dayjs\';\\nimport { Pipe } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'dayjsFormat\',\\n})\\nexport class DayjsFormatPipe implements PipeTransform {\\n  transform(value: dayjs.Dayjs, format: string): any {\\n    return value.format(format);\\n  }\\n}\\n"},{"name":"DayjsPipe","id":"pipe-DayjsPipe-f2cdc9a967a569588302f908965e10595f7e95639dd7a5128ec8c43878d58201180ff6955430ad9bba0ad7efc8f4246666b9d8ce993df2d9b03347227369a76d","file":"src/app/_main/pipes/dayjs/dayjs.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"format","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"format","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"ngname":"dayjs","sourceCode":"import { PipeTransform } from \'@angular/core\';\\nimport dayjs from \'dayjs\';\\nimport { Pipe } from \'@angular/core\';\\nimport { isNumber } from \'lodash-es\';\\n\\n@Pipe({\\n  name: \'dayjs\',\\n})\\nexport class DayjsPipe implements PipeTransform {\\n  transform(value: any, format?: string): any {\\n    if (format) {\\n      return dayjs(value).format(format);\\n    } else if (value) {\\n      if (isNumber(value)) {\\n        return dayjs(value);\\n      } else {\\n        return dayjs(value);\\n      }\\n    } else {\\n      return null;\\n    }\\n  }\\n}\\n"},{"name":"DayOfWeekPipe","id":"pipe-DayOfWeekPipe-e70157f6e61d14f6b9bbda216df3773043e7580b395f7c53e1a8e8bcf89d72acb132b8bd58fda143aefc0ee69ed946501325e6a16d17f61f2042eb81bd23573b","file":"src/app/_main/pipes/day-of-week/day-of-week.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[{"name":"weekDays","defaultValue":"dayjs.weekdays()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":8,"modifierKind":[121]}],"methods":[{"name":"transform","args":[{"name":"value","type":"dayjs.Dayjs","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"dayjs.Dayjs","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"dayOfWeek","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport dayjs from \'dayjs\';\\n\\n@Pipe({\\n  name: \'dayOfWeek\',\\n})\\nexport class DayOfWeekPipe implements PipeTransform {\\n  private weekDays = dayjs.weekdays();\\n\\n  transform(value: dayjs.Dayjs): any {\\n    return this.weekDays[value.day()];\\n  }\\n}\\n"},{"name":"MonthPipe","id":"pipe-MonthPipe-56d0d628759630f6c799694a614483d69a05938ca9ad8cde77f76c1c0fcc28305b4e9283e09acb39fd9ba4e83b45708e48456c0a7b9ec0860e89f87697e41d5c","file":"src/app/_main/pipes/month/month.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[{"name":"monthNames","defaultValue":"dayjs.months()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10,"modifierKind":[121]}],"methods":[{"name":"transform","args":[{"name":"value","type":"number | unixTimestamp | dayjs.Dayjs","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"number | unixTimestamp | dayjs.Dayjs","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"month","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport dayjs from \'dayjs\';\\nimport { isNumber, isString } from \'lodash-es\';\\nimport { unixTimestamp } from \'../../interfaces/date.interface\';\\n\\n@Pipe({\\n  name: \'month\',\\n})\\nexport class MonthPipe implements PipeTransform {\\n  private monthNames = dayjs.months();\\n\\n  transform(value: number | unixTimestamp | dayjs.Dayjs): any {\\n    if (isNumber(value)) {\\n      return this.monthNames[value];\\n    } else if (isString(value)) {\\n      return this.monthNames[dayjs(value).month()];\\n    } else {\\n      return this.monthNames[value.month()];\\n    }\\n  }\\n}\\n"},{"name":"StatusColorPipe","id":"pipe-StatusColorPipe-c3e275b188696da99a3f34e479332845cd887c0d967ac665a5539a89dea727ddd37625c6e823e71511191f61ed497ca7e6a5243327b8649c4978ca1cf8b4cf01","file":"src/app/tasks/pipes/status-color.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":" | undefined","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":" | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"statusColor","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport Color from \'color\';\\n\\n@Pipe({\\n  name: \'statusColor\',\\n})\\nexport class StatusColorPipe implements PipeTransform {\\n  transform(value: Status[\'color\'] | undefined): any {\\n    return Color(value).rgb().string();\\n  }\\n}\\n"},{"name":"TaskPriorityIconPipe","id":"pipe-TaskPriorityIconPipe-0f13d4348f59efc764909c6c0817a5139355cbb4c84e343f6eb90ca16b759e4707ed1bac5338e910d582c63ce2efc427d8e6859bf294e12fbf8d207254ea1a48","file":"src/app/tasks/pipes/task-priority-icon.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":7,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"taskPriorityIcon","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'taskPriorityIcon\',\\n})\\nexport class TaskPriorityIconPipe implements PipeTransform {\\n  transform(value: any): any {\\n    switch (value) {\\n      case \'lowest\':\\n        return \'cuPriorityLowest\';\\n      case \'low\':\\n        return \'cuPriorityLow\';\\n      case \'medium\':\\n        return \'cuPriorityMedium\';\\n      case \'high\':\\n        return \'cuPriorityHigh\';\\n      case \'highest\':\\n        return \'cuPriorityHighest\';\\n    }\\n  }\\n}\\n"},{"name":"TaskPriorityPipe","id":"pipe-TaskPriorityPipe-fb1b34e3e30f60fb79fb6d16f590559bd65e54379aeef23705e15ef5384a5654e5eeef9170f1889806df5263fd28a47de8302c6a0ea2dafaf883a2cfc0898b2a","file":"src/app/tasks/pipes/task-priority.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":7,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"taskPriority","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'taskPriority\',\\n})\\nexport class TaskPriorityPipe implements PipeTransform {\\n  transform(value: any): any {\\n    switch (value) {\\n      case \'lowest\':\\n        return $localize`Lowest`;\\n      case \'low\':\\n        return $localize`Low`;\\n      case \'medium\':\\n        return $localize`Medium`;\\n      case \'high\':\\n        return $localize`High`;\\n      case \'highest\':\\n        return $localize`Highest`;\\n    }\\n  }\\n}\\n"},{"name":"TaskTypeIconPipe","id":"pipe-TaskTypeIconPipe-e3c249945c32266752ca57e0a63690298db3d1ae5639bd254c2da3af6e14551a19f04c60cc3a78a42410914e81ce0961546facf3527c67e8680dfcd76da8d1d3","file":"src/app/tasks/pipes/task-type-icon.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":10,"deprecated":true,"deprecationMessage":"","rawdescription":"\\n\\n","description":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"taskTypeIcon","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'taskTypeIcon\',\\n})\\nexport class TaskTypeIconPipe implements PipeTransform {\\n  /**\\n   * @deprecated\\n   */\\n  transform(value: any): any {\\n    switch (value) {\\n      case \'TASK\':\\n        return \'cuTask\';\\n      case \'ISSUE\':\\n        return \'cuIssue\';\\n      case \'EPIC\':\\n        return \'cuEpic\';\\n      case \'USER_STORY\':\\n        return \'cuUserStory\';\\n      case \'SUBTASK\':\\n        return \'cuSubtask\';\\n    }\\n  }\\n}\\n"},{"name":"TaskTypePipe","id":"pipe-TaskTypePipe-a3ef634c83e84ee5e2a444011323ade5cfb12ceb70475b6e7ded953a1b7300b5a64792ccc1e802bb5fac58d052d7eac5f08bdf7237621a913ef4548745557ff5","file":"src/app/tasks/pipes/task-type.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"type","type":"\\"name\\" | \\"icon\\"","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"string","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"type","type":"\\"name\\" | \\"icon\\"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"type","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Color","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"type","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"type","type":"\\"color\\" | \\"name\\" | \\"icon\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'name\'"}],"optional":false,"returnType":"string | Color","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"type","type":"\\"color\\" | \\"name\\" | \\"icon\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'name\'","tagName":{"text":"param"}}]}],"ngname":"taskType","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport { TaskType } from \'@tasks/enums/task-type.enum\';\\nimport * as Color from \'color\';\\n\\n@Pipe({\\n  name: \'taskType\',\\n})\\nexport class TaskTypePipe implements PipeTransform {\\n  transform(value: any, type?: \'name\' | \'icon\'): string;\\n  transform(value: any, type: \'color\'): Color;\\n\\n  transform(value: any, type: \'color\' | \'name\' | \'icon\' = \'name\'): string | Color {\\n    switch (value as TaskType) {\\n      // Task\\n      case TaskType.TASK:\\n        return {\\n          name: $localize`Task`,\\n          color: Color.rgb(52, 152, 219),\\n          icon: \'cuTask\',\\n        }[type];\\n\\n      // User story\\n      case TaskType.USER_STORY:\\n        return {\\n          name: $localize`User story`,\\n          color: Color.rgb(46, 204, 113),\\n          icon: \'cuUserStory\',\\n        }[type];\\n\\n      // Issue\\n      case TaskType.ISSUE:\\n        return {\\n          name: $localize`Issue`,\\n          color: Color.rgb(231, 76, 60),\\n          icon: \'cuIssue\',\\n        }[type];\\n\\n      // Epic\\n      case TaskType.EPIC:\\n        return {\\n          name: $localize`Epic`,\\n          color: Color.rgb(155, 89, 182),\\n          icon: \'cuEpic\',\\n        }[type];\\n\\n      // Subtask\\n      case TaskType.SUBTASK:\\n        return {\\n          name: $localize`Subtask`,\\n          color: Color.rgb(88, 183, 189),\\n          icon: \'cuSubtask\',\\n        }[type];\\n\\n      // Unknown\\n      default:\\n        console.warn(\'Unknown task type:\', value);\\n        return value;\\n    }\\n  }\\n}\\n"},{"name":"TimeTrackDurationPipe","id":"pipe-TimeTrackDurationPipe-9d8290848e66698e511b1361b0a3773d64ae27e194ccaee69f85e1abdd7792f4f9700e02831086c72ac82bf97ce15c702b36444dc03f35ff667f565d282455ce","file":"src/app/tasks/pipes/time-track-duration/time-track-duration.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[{"name":"timeTrackTimer","defaultValue":"new TimeTrackTimerPipe()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10,"modifierKind":[121]}],"methods":[{"name":"transform","args":[{"name":"value","type":"TimeTrack | undefined","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"TimeTrack | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"timeTrackDuration","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport dayjs from \'dayjs\';\\nimport { TimeTrack } from \'../../interfaces/time-track.interface\';\\nimport { TimeTrackTimerPipe } from \'../time-track-timer/time-track-timer.pipe\';\\n\\n@Pipe({\\n  name: \'timeTrackDuration\',\\n})\\nexport class TimeTrackDurationPipe implements PipeTransform {\\n  private timeTrackTimer = new TimeTrackTimerPipe();\\n\\n  transform(value: TimeTrack | undefined): any {\\n    if (!value) return 0;\\n\\n    const start = dayjs(value.startDate);\\n    const end = value.endDate ? dayjs(value.endDate) : dayjs();\\n\\n    const milliseconds = end.diff(start, \'milliseconds\');\\n\\n    return this.timeTrackTimer.transform(milliseconds);\\n  }\\n}\\n"},{"name":"TimeTracksTotalPipe","id":"pipe-TimeTracksTotalPipe-427d9467c002580bc3db8c9b4d0d944d534c22331cab81107c07ff002b0bd8a97aa773c1cdccaa7df965547c77ec7c9270a5295225089b276856b0c726d328c1","file":"src/app/tasks/pipes/time-tracks-total/time-tracks-total.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"TimeTrack[] | undefined","deprecated":false,"deprecationMessage":""},{"name":"format","type":"\\"milliseconds\\" | \\"string\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'string\'"}],"optional":false,"returnType":"any","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"TimeTrack[] | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"format","type":"\\"milliseconds\\" | \\"string\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'string\'","tagName":{"text":"param"}}]}],"ngname":"timeTracksTotal","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport { TimeTrack } from \'../../interfaces/time-track.interface\';\\n\\n@Pipe({\\n  name: \'timeTracksTotal\',\\n})\\nexport class TimeTracksTotalPipe implements PipeTransform {\\n  transform(value: TimeTrack[] | undefined, format: \'milliseconds\' | \'string\' = \'string\'): any {\\n    if (!value) return format === \'string\' ? \'\' : 0;\\n\\n    const milliseconds = value.reduce(\\n      (acc, track) => acc + ((track.endDate || new Date().getTime()) - track.startDate),\\n      0,\\n    );\\n    if (format === \'milliseconds\') {\\n      return milliseconds;\\n    } else {\\n      const hours = Math.floor(milliseconds / 1000 / 60 / 60);\\n      const minutes = Math.floor((milliseconds / 1000 / 60) % 60);\\n\\n      return `${hours}h ${minutes}m`;\\n    }\\n  }\\n}\\n"},{"name":"TimeTrackTimerPipe","id":"pipe-TimeTrackTimerPipe-c9290dfa053441a1d581ccac0d578db23ddd85b69576efa76434281c3b73e3a676d039eb5e22697eb0531fe6b35dac18a3025b057b26713ca8fc9fd92f736b55","file":"src/app/tasks/pipes/time-track-timer/time-track-timer.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":7,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"timeTrackTimer","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'timeTrackTimer\',\\n})\\nexport class TimeTrackTimerPipe implements PipeTransform {\\n  transform(value: number): any {\\n    const hours = Math.floor(value / 1000 / 60 / 60);\\n    const minutes = Math.floor((value / 1000 / 60) % 60);\\n    const seconds = Math.floor((value / 1000) % 60);\\n\\n    return `${hours}h ${minutes}m ${seconds}s`;\\n  }\\n}\\n"},{"name":"ValidationErrorPipe","id":"pipe-ValidationErrorPipe-41111031ce97f5273431476b91e1017acb1d46c30150f2f2de48b0f6f1b282e40a52027928b4b579119537bfb75f0b8e9a82a464448d9424b23f70687687f4c7","file":"src/app/_main/pipes/validation-error/validation-error.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"<p>Pipe to transform validation errors to a human readable string</p>\\n","rawdescription":"\\n\\nPipe to transform validation errors to a human readable string\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n\\n","description":"","jsdoctags":[{"name":{"pos":249,"end":254,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":243,"end":248,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The value to be transformed</li>\\n</ul>\\n"},{"tagName":{"pos":291,"end":298,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>message from validation error</p>\\n"}]}],"ngname":"validationError","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n/**\\n * Pipe to transform validation errors to a human readable string\\n */\\n@Pipe({\\n  name: \'validationError\',\\n})\\nexport class ValidationErrorPipe implements PipeTransform {\\n  /**\\n   *\\n   * @param value - The value to be transformed\\n   * @returns message from validation error\\n   */\\n  transform(value: any): any {\\n    return value?.message || null;\\n  }\\n}\\n"},{"name":"YearPipe","id":"pipe-YearPipe-9807593fe4e6bd6d4b6d01108a0de4092c0d06063ac4686d4109b883d558b87b6b74198f5e42d185b2c5abaaeabbcd6a10c0c53e4c6bf1cb387013c1edfdce53","file":"src/app/_main/pipes/year/year.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"dayjs.Dayjs","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"dayjs.Dayjs","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"year","sourceCode":"import { PipeTransform } from \'@angular/core\';\\nimport dayjs from \'dayjs\';\\nimport { Pipe } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'year\',\\n})\\nexport class YearPipe implements PipeTransform {\\n  transform(value: dayjs.Dayjs): any {\\n    return value.year();\\n  }\\n}\\n"}],"interfaces":[{"name":"AddMemberDialogData","id":"interface-AddMemberDialogData-6140aee0e7020a5e4cb044de42665e5f1e04724e9a346c85c86d60b4f702076935a9c012a4a66dca748b7c75242ceabc56e96403ba4b511a9dcb3350d51e3d5c","file":"src/app/dashboard/dialogs/add-member/add-member.dialog.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, Inject } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { MatDialogRef, MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { Workspace } from \'@dashboard/interfaces/workspace.interface\';\\nimport { RouterExtensionsService } from \'@main/services/router-extensions/router-extensions.service\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport { Observable } from \'rxjs\';\\nimport { requiredValidator } from \'../../../_main/validators/required.validator\';\\n\\nexport interface AddMemberDialogData {\\n  workspaceId: number;\\n  projectId?: number;\\n}\\n\\n@Component({\\n  selector: \'app-add-member-dialog\',\\n  templateUrl: \'./add-member.dialog.html\',\\n  styleUrls: [\'./add-member.dialog.scss\'],\\n})\\nexport class AddMemberDialog {\\n  public statusList$!: Observable<Status[]>;\\n  public workspaceList$!: Observable<Workspace[]>;\\n\\n  public form = new FormGroup({\\n    email: new FormControl(\'\', [requiredValidator()]),\\n  });\\n\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\\n    private dialogRef: MatDialogRef<AddMemberDialog>,\\n    private routerExtensions: RouterExtensionsService,\\n  ) {}\\n\\n  addMembers() {\\n    const formValues = this.form.value;\\n\\n    this.form.markAllAsTouched();\\n    this.form.updateValueAndValidity();\\n\\n    if (this.form.invalid) return;\\n\\n    this.dialogRef.close([formValues.email]);\\n  }\\n\\n  cancel() {\\n    this.dialogRef.close();\\n  }\\n}\\n","properties":[{"name":"projectId","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":12},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"AlertDialogData","id":"interface-AlertDialogData-1e9dca51168e9c41f2c020f82ddd6af014cbe023031cdc1cac54160d287e5cbaef852cabeaf8c65bc799462a41f1a374b319965fd93d415427fda5e5aac39455","file":"src/app/_main/dialogs/alert/alert.dialog.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, HostBinding, Inject } from \'@angular/core\';\\nimport { MatDialogRef, MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\n/**\\n * Type of the dialog variant. Used to specify what dialog styling should be used.\\n */\\nexport enum AlertDialogVariant {\\n  DEFAULT = \'default\',\\n  IMPORTANT = \'important\',\\n}\\n\\n/**\\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\\n */\\nexport interface AlertDialogData {\\n  /**\\n   * Dialog title. Displayed at the top of the dialog.\\n   */\\n  title?: string;\\n  /**\\n   * Dialog message. Displayed below the title.\\n   */\\n  message?: string;\\n  /**\\n   * Confirm button text.\\n   */\\n  confirmText?: string;\\n  /**\\n   * Cancel button text.\\n   */\\n  cancelText?: string;\\n  /**\\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\\n   */\\n  variant?: AlertDialogVariant;\\n}\\n\\n/**\\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\\n */\\n@Component({\\n  selector: \'app-alert-dialog\',\\n  templateUrl: \'./alert.dialog.html\',\\n  styleUrls: [\'./alert.dialog.scss\'],\\n})\\nexport class AlertDialog {\\n  /**\\n   * Passthrough to the dialog\'s variant enumerable.\\n   */\\n  public AlertDialogVariant = AlertDialogVariant;\\n\\n  /**\\n   * Default constructor. Injects the dialog reference and data.\\n   * @param data Object to pass as data to the dialog\\n   * @param dialogRef Reference to dialog instance\\n   */\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\\n    private dialogRef: MatDialogRef<AlertDialog>,\\n  ) {\\n    data.variant ||= AlertDialogVariant.DEFAULT;\\n  }\\n\\n  /**\\n   * Host binding to set if the dialog is important.\\n   */\\n  @HostBinding(\'class.important-dialog\') important: boolean =\\n    this.data.variant === AlertDialogVariant.IMPORTANT;\\n\\n  /**\\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\\n   */\\n  cancel() {\\n    this.dialogRef.close(false);\\n  }\\n\\n  /**\\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\\n   */\\n  confirm() {\\n    this.dialogRef.close(true);\\n  }\\n}\\n","properties":[{"name":"cancelText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Cancel button text.</p>\\n","line":31,"rawdescription":"\\n\\nCancel button text.\\n"},{"name":"confirmText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Confirm button text.</p>\\n","line":27,"rawdescription":"\\n\\nConfirm button text.\\n"},{"name":"message","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Dialog message. Displayed below the title.</p>\\n","line":23,"rawdescription":"\\n\\nDialog message. Displayed below the title.\\n"},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Dialog title. Displayed at the top of the dialog.</p>\\n","line":19,"rawdescription":"\\n\\nDialog title. Displayed at the top of the dialog.\\n"},{"name":"variant","deprecated":false,"deprecationMessage":"","type":"AlertDialogVariant","optional":true,"description":"<p>Type of the dialog variant. Used to specify what dialog styling should be used.</p>\\n","line":35,"rawdescription":"\\n\\nType of the dialog variant. Used to specify what dialog styling should be used.\\n"}],"indexSignatures":[],"kind":165,"description":"<p>Alert dialog data interface. Indicates what data will be passed to the dialog.</p>\\n","rawdescription":"\\n\\nAlert dialog data interface. Indicates what data will be passed to the dialog.\\n","methods":[]},{"name":"CacheOptions","id":"interface-CacheOptions-519e3b308486e60ac4866778ca23e38f4352513ad6e17dca2dc8b6f139f1b0489eef22edb1db27c9092afb57846d2ba2c577596ef376145a4b48a641a30d43fb","file":"src/app/_main/decorators/cache/cache.decorator.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Observable, shareReplay } from \'rxjs\';\\n\\nexport interface CacheOptions {\\n  interval: number;\\n}\\n\\n/**\\n * Decorator to cache API responses as observables.\\n */\\nexport function Cache(options?: CacheOptions): MethodDecorator {\\n  return function (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) {\\n    const originalMethod = descriptor.value;\\n\\n    descriptor.value = function (...args: any[]) {\\n      const cacheKey = `__${String(propertyKey)}_${JSON.stringify(args)}`;\\n      const cache = target[cacheKey];\\n\\n      if (cache) {\\n        return cache;\\n      }\\n\\n      const result = originalMethod.apply(this, args) as Observable<any>;\\n      target[cacheKey] = result.pipe(shareReplay(1));\\n\\n      if (options && options.interval) {\\n        setTimeout(() => {\\n          delete target[cacheKey];\\n        }, options.interval);\\n      }\\n\\n      return result;\\n    };\\n\\n    return descriptor;\\n  };\\n}\\n","properties":[{"name":"interval","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"CalendarDay","id":"interface-CalendarDay-a905142d38efd744610a06b5bda2647d250a92d65113e75701dad442a1d6d53bc94e4e10fe0feee9f5d38f5164eba8742b3a35b61eddd4f0c203ca9f6157132f","file":"src/app/_main/components/input-date-time/date-picker.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export type DaysGrid = CalendarDay[][];\\n\\nexport interface CalendarDay {\\n  id: number;\\n  name: number;\\n  isWeekend: boolean;\\n  isFromPreviousMonth: boolean;\\n  isFromNextMonth: boolean;\\n  today: boolean;\\n  selected: boolean;\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4},{"name":"isFromNextMonth","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":8},{"name":"isFromPreviousMonth","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":7},{"name":"isWeekend","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":6},{"name":"name","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":5},{"name":"selected","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10},{"name":"today","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"DataFilter","id":"interface-DataFilter-5490de5715217ee4e8cc4f4f9ad16e31df58bd8737d1dd9a04d09e3ea170c03a43b501cbaf401b777dced2c5f882380e6da8c37ee1aeb18639524459aad55e91","file":"src/app/_main/interfaces/filters.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IconDefinition } from \'@fortawesome/free-solid-svg-icons\';\\n\\n// TODO: Rework filters interfaces\\n\\nexport interface FilterBase {\\n  label: string;\\n  value: any;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterCheckbox<T = boolean> extends FilterBase {\\n  type: \'checkbox\';\\n  options: {\\n    1: T | null;\\n    0: T | null;\\n  };\\n  value: 1 | 0;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterText extends FilterBase {\\n  type: \'text\';\\n  value: string;\\n}\\n\\nexport interface FilterNumber extends FilterBase {\\n  type: \'number\';\\n  value: number;\\n}\\n\\nexport interface FilterSelect<T> extends FilterBase {\\n  type: \'select\';\\n  options: {\\n    label: string;\\n    value: T;\\n    icon?: IconDefinition | string;\\n  }[];\\n  value: T | null;\\n}\\n\\nexport type Filter = FilterCheckbox<any> | FilterText | FilterNumber | FilterSelect<any>;\\n\\nexport type FilterType = Filter[\'type\'];\\n\\n// New filters system\\nexport enum DataFilterType {\\n  FRONTEND = \'frontend\',\\n  BACKEND = \'backend\',\\n}\\n\\nexport enum DataFilterControlType {\\n  CHECKBOX = \'checkbox\',\\n  TEXT = \'text\',\\n  NUMBER = \'number\',\\n  SELECT = \'select\',\\n  DATE = \'date\',\\n}\\n\\nexport interface DataFilter<T, V> {\\n  type: DataFilterType;\\n  field: string;\\n  value: V;\\n  apply?(list: T[]): T[];\\n}\\n\\nexport interface DataFilterDisplay<T, V> {\\n  type: DataFilterControlType;\\n  label: string;\\n  dataFilter: DataFilter<T, V>;\\n}\\n","properties":[{"name":"field","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":61},{"name":"type","deprecated":false,"deprecationMessage":"","type":"DataFilterType","optional":false,"description":"","line":60},{"name":"value","deprecated":false,"deprecationMessage":"","type":"V","optional":false,"description":"","line":62}],"indexSignatures":[],"kind":167,"methods":[{"name":"apply","args":[{"name":"list","type":"T[]","deprecated":false,"deprecationMessage":""}],"optional":true,"returnType":"T[]","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"list","type":"T[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},{"name":"DataFilterDisplay","id":"interface-DataFilterDisplay-5490de5715217ee4e8cc4f4f9ad16e31df58bd8737d1dd9a04d09e3ea170c03a43b501cbaf401b777dced2c5f882380e6da8c37ee1aeb18639524459aad55e91","file":"src/app/_main/interfaces/filters.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IconDefinition } from \'@fortawesome/free-solid-svg-icons\';\\n\\n// TODO: Rework filters interfaces\\n\\nexport interface FilterBase {\\n  label: string;\\n  value: any;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterCheckbox<T = boolean> extends FilterBase {\\n  type: \'checkbox\';\\n  options: {\\n    1: T | null;\\n    0: T | null;\\n  };\\n  value: 1 | 0;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterText extends FilterBase {\\n  type: \'text\';\\n  value: string;\\n}\\n\\nexport interface FilterNumber extends FilterBase {\\n  type: \'number\';\\n  value: number;\\n}\\n\\nexport interface FilterSelect<T> extends FilterBase {\\n  type: \'select\';\\n  options: {\\n    label: string;\\n    value: T;\\n    icon?: IconDefinition | string;\\n  }[];\\n  value: T | null;\\n}\\n\\nexport type Filter = FilterCheckbox<any> | FilterText | FilterNumber | FilterSelect<any>;\\n\\nexport type FilterType = Filter[\'type\'];\\n\\n// New filters system\\nexport enum DataFilterType {\\n  FRONTEND = \'frontend\',\\n  BACKEND = \'backend\',\\n}\\n\\nexport enum DataFilterControlType {\\n  CHECKBOX = \'checkbox\',\\n  TEXT = \'text\',\\n  NUMBER = \'number\',\\n  SELECT = \'select\',\\n  DATE = \'date\',\\n}\\n\\nexport interface DataFilter<T, V> {\\n  type: DataFilterType;\\n  field: string;\\n  value: V;\\n  apply?(list: T[]): T[];\\n}\\n\\nexport interface DataFilterDisplay<T, V> {\\n  type: DataFilterControlType;\\n  label: string;\\n  dataFilter: DataFilter<T, V>;\\n}\\n","properties":[{"name":"dataFilter","deprecated":false,"deprecationMessage":"","type":"DataFilter<T | V>","optional":false,"description":"","line":69},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":68},{"name":"type","deprecated":false,"deprecationMessage":"","type":"DataFilterControlType","optional":false,"description":"","line":67}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"EmojiToken","id":"interface-EmojiToken-53ffde60d915e09a9ef74f4314e107044df1daa786ebb49bb85214136b9bcb7535ad93b27133c099ae58714a2413c71f613e7aca0713b6fa488ecae57172fb7d","file":"src/app/_main/libs/marked/extensions/marked-emoji-extension.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EMOJI_SEQUENCE_REGEX } from \'@main/libs/emoji/emoji-sequence.aliases\';\\nimport { Emoji } from \'@main/libs/emoji/emoji.lib\';\\nimport { marked } from \'marked\';\\n\\ninterface EmojiToken {\\n  type: \'emoji\';\\n  raw: string;\\n  emoji: string;\\n  emojiType: \'sequence\' | \'colon\';\\n}\\n\\n/**\\n * Emoji extension to use with `marked` parser\\n *\\n * Replaces only `:smile:` notation\\n */\\nexport const emoji = {\\n  name: \'emoji\',\\n  level: \'inline\', // This is an inline-level tokenizer\\n  start(src: string) {\\n    return src.indexOf(\':\');\\n  }, // Hint to Marked.js to stop and check for a match\\n  tokenizer(src: string, _tokens: any) {\\n    const rule = /^:(\\\\w+):/; // Regex for the complete token, anchor to string start\\n    const match = rule.exec(src);\\n\\n    const matchSequence = EMOJI_SEQUENCE_REGEX.exec(src);\\n\\n    if (matchSequence) {\\n      return {\\n        type: \'emoji\',\\n        raw: matchSequence[0],\\n        emoji: matchSequence[1],\\n        emojiType: \'sequence\',\\n      };\\n    }\\n\\n    if (match) {\\n      return {\\n        // Token to generate\\n        type: \'emoji\', // Should match \\"name\\" above\\n        raw: match[0], // Text to consume from the source\\n        emoji: match[1], // Additional custom properties\\n        emojiType: \'colon\',\\n      };\\n    }\\n\\n    return undefined;\\n  },\\n  renderer(token: EmojiToken): string {\\n    const convertFunction =\\n      token.emojiType === \'colon\' ? Emoji.emojiNameToUnicode : Emoji.characterSequenceToUnicode;\\n    const convertedEmoji = convertFunction(token.emoji);\\n\\n    return `<span class=\\"emoji\\">${convertedEmoji}</span>`;\\n  },\\n} as marked.TokenizerExtension & marked.RendererExtension;\\n","properties":[{"name":"emoji","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"emojiType","deprecated":false,"deprecationMessage":"","type":"\\"sequence\\" | \\"colon\\"","optional":false,"description":"","line":9},{"name":"raw","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"type","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"ErrorCodesMap","id":"interface-ErrorCodesMap-e51026a4007b067c26d90f480e366629ca002f3a1e1346187c971a2b83dcba45aca288766ce239a778f8fdde742d7b2d918326f4c59e13590506cb7338fbb715","file":"src/app/_main/interfaces/http-error.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface HTTPError {\\n  status: number;\\n  text: string;\\n}\\n\\nexport type Errors<T extends string> = T;\\n\\nexport type ErrorCodes<T extends string = string> = {\\n  [key in T]: {\\n    message: string;\\n  };\\n};\\n\\nexport interface ErrorCodesMap {\\n  [key: string | number]: keyof ErrorCodes;\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-e51026a4007b067c26d90f480e366629ca002f3a1e1346187c971a2b83dcba45aca288766ce239a778f8fdde742d7b2d918326f4c59e13590506cb7338fbb715","args":[{"name":"key","type":"string | number","deprecated":false,"deprecationMessage":""}],"returnType":"ErrorCodes","line":14,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"ErrorValidationTree","id":"interface-ErrorValidationTree-ef191642339ccb1a9bad6d8e3f250107e23a41dbf41700780e8f4673e3316da66991b4cb747fb6f26a63c6a34a88de6679b1db0d1f01ca670b5df60d3f97e7d1","file":"src/app/_main/decorators/service-validator.decorator.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { Observable } from \'rxjs\';\\n\\nexport interface ErrorValidationTree {\\n  [key: string]: {\\n    [key: number]: string;\\n  };\\n}\\n\\n/**\\n * @TODO: Replace this function with some kind of operator function in requests\\n */\\nexport function ServiceValidator(errorValidationTree: ErrorValidationTree) {\\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\\n    descriptor.value = function (identifier: string) {\\n      // const result = originalMethod.apply(this, identifier);\\n\\n      // This function returns new observable to use it as a pipe in other observables\\n      return <T = any>(source: Observable<T>) => {\\n        // Check for match in response\\n        const match = (response: any) => {\\n          // identifier check\\n          if (!errorValidationTree[identifier]) return;\\n\\n          // Status check\\n          const status = response?.error?.status || response?.status;\\n          if (!status) return;\\n\\n          return errorValidationTree[identifier][status] || null;\\n        };\\n\\n        const showAlert = (message: string, responseType: \'SUCCESS\' | \'ERROR\') => {\\n          const dialogService = (window as any).injector.get(DialogService);\\n\\n          dialogService.alert({\\n            title:\\n              responseType === \'SUCCESS\' ? $localize`Success` : $localize`Something went wrong`,\\n            message,\\n            cancelText: $localize`OK`,\\n          });\\n        };\\n\\n        return new Observable<any>((subscriber) => {\\n          source.subscribe({\\n            next(value) {\\n              const m = match(value);\\n\\n              if (m) {\\n                showAlert(m, \'ERROR\');\\n              } else {\\n                subscriber.next(value);\\n              }\\n            },\\n            error(error) {\\n              const m = match(error);\\n\\n              if (m) {\\n                showAlert(m, \'ERROR\');\\n              } else {\\n                subscriber.error(error);\\n              }\\n            },\\n            complete() {\\n              subscriber.complete();\\n            },\\n          });\\n        });\\n      };\\n    };\\n\\n    return descriptor;\\n  };\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-ef191642339ccb1a9bad6d8e3f250107e23a41dbf41700780e8f4673e3316da66991b4cb747fb6f26a63c6a34a88de6679b1db0d1f01ca670b5df60d3f97e7d1","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"literal type","line":4,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"ExtendedMeta","id":"interface-ExtendedMeta-fb1e9f6e7a05be7f30e819f400a6a312108c47cfb0a4c758503d7b7c0810b485439e6534b4b31af2a046bebdb64227cd7c34ebb5b528fd1dfc4213c55a87b1cc","file":"src/stories/helpers/classes/story-page-config.class.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { NgControl } from \'@angular/forms\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { MainModule } from \'@main/_main.module\';\\nimport { Meta, moduleMetadata } from \'@storybook/angular\';\\nimport { NgModuleMetadata } from \'@storybook/angular/dist/ts3.9/client/preview/types\';\\nimport { merge } from \'lodash-es\';\\nimport { getAllProperties } from \'../functions/get-all-properties.function\';\\nimport { TestNgControl } from \'../../../tests/helpers/ng-control-testing-provider.helper\';\\n\\nexport interface ExtendedMeta extends Meta {\\n  metadata?: Partial<NgModuleMetadata>;\\n  selector: string;\\n}\\n\\nconst DEFAULT_METADATA: Partial<NgModuleMetadata> = {\\n  imports: [MainModule, BrowserAnimationsModule],\\n  providers: [\\n    {\\n      provide: NgControl,\\n      useClass: TestNgControl,\\n    },\\n  ],\\n};\\n\\nconst IGNORED_PROPERTIES = getAllProperties({});\\n\\nexport class StoryPageConfig {\\n  private _meta: ExtendedMeta;\\n\\n  constructor(meta: ExtendedMeta) {\\n    this._meta = meta;\\n\\n    this._meta.decorators = [moduleMetadata(merge({}, DEFAULT_METADATA, this._meta.metadata))];\\n    this.disableEditingFunctions();\\n  }\\n\\n  private disableEditingFunctions() {\\n    if (!this._meta.argTypes) {\\n      this._meta.argTypes = {};\\n    }\\n\\n    const properties = getAllProperties(this._meta.component.prototype);\\n    for (const [property, predicate] of properties.map(\\n      (p) => [p, this.propertyPredicate(p)] as [string, any],\\n    )) {\\n      if (typeof this._meta.component.prototype[property] === \'function\') {\\n        switch (predicate) {\\n          case \'delete\':\\n            this._meta.argTypes[property] = { table: { disable: true } };\\n            break;\\n          case \'readonly\':\\n            this._meta.argTypes[property] = { control: false };\\n            break;\\n        }\\n      }\\n    }\\n  }\\n\\n  private propertyPredicate(property: string) {\\n    if (property[0] === \'_\') return \'delete\';\\n    if (property.startsWith(\'ng\')) return \'delete\';\\n    return !IGNORED_PROPERTIES.includes(property) ? \'readonly\' : null;\\n  }\\n\\n  public setTitle(title: string) {\\n    this._meta.title = title;\\n    return this;\\n  }\\n\\n  public addDecorators(decorators: Meta[\'decorators\']) {\\n    if (!this._meta.decorators) {\\n      this._meta.decorators = [];\\n    }\\n\\n    this._meta.decorators = ([] as any[]).concat(this._meta.decorators, decorators);\\n    return this;\\n  }\\n\\n  public get selector() {\\n    return this._meta.selector;\\n  }\\n\\n  public meta() {\\n    return this._meta as Meta;\\n  }\\n}\\n","properties":[{"name":"metadata","deprecated":false,"deprecationMessage":"","type":"Partial<NgModuleMetadata>","optional":true,"description":"","line":11},{"name":"selector","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12}],"indexSignatures":[],"kind":165,"methods":[],"extends":"Meta"},{"name":"FilterBase","id":"interface-FilterBase-5490de5715217ee4e8cc4f4f9ad16e31df58bd8737d1dd9a04d09e3ea170c03a43b501cbaf401b777dced2c5f882380e6da8c37ee1aeb18639524459aad55e91","file":"src/app/_main/interfaces/filters.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IconDefinition } from \'@fortawesome/free-solid-svg-icons\';\\n\\n// TODO: Rework filters interfaces\\n\\nexport interface FilterBase {\\n  label: string;\\n  value: any;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterCheckbox<T = boolean> extends FilterBase {\\n  type: \'checkbox\';\\n  options: {\\n    1: T | null;\\n    0: T | null;\\n  };\\n  value: 1 | 0;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterText extends FilterBase {\\n  type: \'text\';\\n  value: string;\\n}\\n\\nexport interface FilterNumber extends FilterBase {\\n  type: \'number\';\\n  value: number;\\n}\\n\\nexport interface FilterSelect<T> extends FilterBase {\\n  type: \'select\';\\n  options: {\\n    label: string;\\n    value: T;\\n    icon?: IconDefinition | string;\\n  }[];\\n  value: T | null;\\n}\\n\\nexport type Filter = FilterCheckbox<any> | FilterText | FilterNumber | FilterSelect<any>;\\n\\nexport type FilterType = Filter[\'type\'];\\n\\n// New filters system\\nexport enum DataFilterType {\\n  FRONTEND = \'frontend\',\\n  BACKEND = \'backend\',\\n}\\n\\nexport enum DataFilterControlType {\\n  CHECKBOX = \'checkbox\',\\n  TEXT = \'text\',\\n  NUMBER = \'number\',\\n  SELECT = \'select\',\\n  DATE = \'date\',\\n}\\n\\nexport interface DataFilter<T, V> {\\n  type: DataFilterType;\\n  field: string;\\n  value: V;\\n  apply?(list: T[]): T[];\\n}\\n\\nexport interface DataFilterDisplay<T, V> {\\n  type: DataFilterControlType;\\n  label: string;\\n  dataFilter: DataFilter<T, V>;\\n}\\n","properties":[{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"value","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":167,"methods":[{"name":"apply","args":[{"name":"list","type":"any[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any[]","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"list","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},{"name":"FilterCheckbox","id":"interface-FilterCheckbox-5490de5715217ee4e8cc4f4f9ad16e31df58bd8737d1dd9a04d09e3ea170c03a43b501cbaf401b777dced2c5f882380e6da8c37ee1aeb18639524459aad55e91","file":"src/app/_main/interfaces/filters.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IconDefinition } from \'@fortawesome/free-solid-svg-icons\';\\n\\n// TODO: Rework filters interfaces\\n\\nexport interface FilterBase {\\n  label: string;\\n  value: any;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterCheckbox<T = boolean> extends FilterBase {\\n  type: \'checkbox\';\\n  options: {\\n    1: T | null;\\n    0: T | null;\\n  };\\n  value: 1 | 0;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterText extends FilterBase {\\n  type: \'text\';\\n  value: string;\\n}\\n\\nexport interface FilterNumber extends FilterBase {\\n  type: \'number\';\\n  value: number;\\n}\\n\\nexport interface FilterSelect<T> extends FilterBase {\\n  type: \'select\';\\n  options: {\\n    label: string;\\n    value: T;\\n    icon?: IconDefinition | string;\\n  }[];\\n  value: T | null;\\n}\\n\\nexport type Filter = FilterCheckbox<any> | FilterText | FilterNumber | FilterSelect<any>;\\n\\nexport type FilterType = Filter[\'type\'];\\n\\n// New filters system\\nexport enum DataFilterType {\\n  FRONTEND = \'frontend\',\\n  BACKEND = \'backend\',\\n}\\n\\nexport enum DataFilterControlType {\\n  CHECKBOX = \'checkbox\',\\n  TEXT = \'text\',\\n  NUMBER = \'number\',\\n  SELECT = \'select\',\\n  DATE = \'date\',\\n}\\n\\nexport interface DataFilter<T, V> {\\n  type: DataFilterType;\\n  field: string;\\n  value: V;\\n  apply?(list: T[]): T[];\\n}\\n\\nexport interface DataFilterDisplay<T, V> {\\n  type: DataFilterControlType;\\n  label: string;\\n  dataFilter: DataFilter<T, V>;\\n}\\n","properties":[{"name":"options","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":13},{"name":"type","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":12},{"name":"value","deprecated":false,"deprecationMessage":"","type":"\\"1\\" | \\"0\\"","optional":false,"description":"","line":17}],"indexSignatures":[],"kind":167,"methods":[{"name":"apply","args":[{"name":"list","type":"any[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any[]","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"list","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"extends":"FilterBase"},{"name":"FilterNumber","id":"interface-FilterNumber-5490de5715217ee4e8cc4f4f9ad16e31df58bd8737d1dd9a04d09e3ea170c03a43b501cbaf401b777dced2c5f882380e6da8c37ee1aeb18639524459aad55e91","file":"src/app/_main/interfaces/filters.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IconDefinition } from \'@fortawesome/free-solid-svg-icons\';\\n\\n// TODO: Rework filters interfaces\\n\\nexport interface FilterBase {\\n  label: string;\\n  value: any;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterCheckbox<T = boolean> extends FilterBase {\\n  type: \'checkbox\';\\n  options: {\\n    1: T | null;\\n    0: T | null;\\n  };\\n  value: 1 | 0;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterText extends FilterBase {\\n  type: \'text\';\\n  value: string;\\n}\\n\\nexport interface FilterNumber extends FilterBase {\\n  type: \'number\';\\n  value: number;\\n}\\n\\nexport interface FilterSelect<T> extends FilterBase {\\n  type: \'select\';\\n  options: {\\n    label: string;\\n    value: T;\\n    icon?: IconDefinition | string;\\n  }[];\\n  value: T | null;\\n}\\n\\nexport type Filter = FilterCheckbox<any> | FilterText | FilterNumber | FilterSelect<any>;\\n\\nexport type FilterType = Filter[\'type\'];\\n\\n// New filters system\\nexport enum DataFilterType {\\n  FRONTEND = \'frontend\',\\n  BACKEND = \'backend\',\\n}\\n\\nexport enum DataFilterControlType {\\n  CHECKBOX = \'checkbox\',\\n  TEXT = \'text\',\\n  NUMBER = \'number\',\\n  SELECT = \'select\',\\n  DATE = \'date\',\\n}\\n\\nexport interface DataFilter<T, V> {\\n  type: DataFilterType;\\n  field: string;\\n  value: V;\\n  apply?(list: T[]): T[];\\n}\\n\\nexport interface DataFilterDisplay<T, V> {\\n  type: DataFilterControlType;\\n  label: string;\\n  dataFilter: DataFilter<T, V>;\\n}\\n","properties":[{"name":"type","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27},{"name":"value","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":28}],"indexSignatures":[],"kind":165,"methods":[],"extends":"FilterBase"},{"name":"FilterSelect","id":"interface-FilterSelect-5490de5715217ee4e8cc4f4f9ad16e31df58bd8737d1dd9a04d09e3ea170c03a43b501cbaf401b777dced2c5f882380e6da8c37ee1aeb18639524459aad55e91","file":"src/app/_main/interfaces/filters.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IconDefinition } from \'@fortawesome/free-solid-svg-icons\';\\n\\n// TODO: Rework filters interfaces\\n\\nexport interface FilterBase {\\n  label: string;\\n  value: any;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterCheckbox<T = boolean> extends FilterBase {\\n  type: \'checkbox\';\\n  options: {\\n    1: T | null;\\n    0: T | null;\\n  };\\n  value: 1 | 0;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterText extends FilterBase {\\n  type: \'text\';\\n  value: string;\\n}\\n\\nexport interface FilterNumber extends FilterBase {\\n  type: \'number\';\\n  value: number;\\n}\\n\\nexport interface FilterSelect<T> extends FilterBase {\\n  type: \'select\';\\n  options: {\\n    label: string;\\n    value: T;\\n    icon?: IconDefinition | string;\\n  }[];\\n  value: T | null;\\n}\\n\\nexport type Filter = FilterCheckbox<any> | FilterText | FilterNumber | FilterSelect<any>;\\n\\nexport type FilterType = Filter[\'type\'];\\n\\n// New filters system\\nexport enum DataFilterType {\\n  FRONTEND = \'frontend\',\\n  BACKEND = \'backend\',\\n}\\n\\nexport enum DataFilterControlType {\\n  CHECKBOX = \'checkbox\',\\n  TEXT = \'text\',\\n  NUMBER = \'number\',\\n  SELECT = \'select\',\\n  DATE = \'date\',\\n}\\n\\nexport interface DataFilter<T, V> {\\n  type: DataFilterType;\\n  field: string;\\n  value: V;\\n  apply?(list: T[]): T[];\\n}\\n\\nexport interface DataFilterDisplay<T, V> {\\n  type: DataFilterControlType;\\n  label: string;\\n  dataFilter: DataFilter<T, V>;\\n}\\n","properties":[{"name":"options","deprecated":false,"deprecationMessage":"","type":"literal type[]","optional":false,"description":"","line":33},{"name":"type","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32},{"name":"value","deprecated":false,"deprecationMessage":"","type":"T | null","optional":false,"description":"","line":38}],"indexSignatures":[],"kind":165,"methods":[],"extends":"FilterBase"},{"name":"FilterText","id":"interface-FilterText-5490de5715217ee4e8cc4f4f9ad16e31df58bd8737d1dd9a04d09e3ea170c03a43b501cbaf401b777dced2c5f882380e6da8c37ee1aeb18639524459aad55e91","file":"src/app/_main/interfaces/filters.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IconDefinition } from \'@fortawesome/free-solid-svg-icons\';\\n\\n// TODO: Rework filters interfaces\\n\\nexport interface FilterBase {\\n  label: string;\\n  value: any;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterCheckbox<T = boolean> extends FilterBase {\\n  type: \'checkbox\';\\n  options: {\\n    1: T | null;\\n    0: T | null;\\n  };\\n  value: 1 | 0;\\n  apply(list: any[]): any[];\\n}\\n\\nexport interface FilterText extends FilterBase {\\n  type: \'text\';\\n  value: string;\\n}\\n\\nexport interface FilterNumber extends FilterBase {\\n  type: \'number\';\\n  value: number;\\n}\\n\\nexport interface FilterSelect<T> extends FilterBase {\\n  type: \'select\';\\n  options: {\\n    label: string;\\n    value: T;\\n    icon?: IconDefinition | string;\\n  }[];\\n  value: T | null;\\n}\\n\\nexport type Filter = FilterCheckbox<any> | FilterText | FilterNumber | FilterSelect<any>;\\n\\nexport type FilterType = Filter[\'type\'];\\n\\n// New filters system\\nexport enum DataFilterType {\\n  FRONTEND = \'frontend\',\\n  BACKEND = \'backend\',\\n}\\n\\nexport enum DataFilterControlType {\\n  CHECKBOX = \'checkbox\',\\n  TEXT = \'text\',\\n  NUMBER = \'number\',\\n  SELECT = \'select\',\\n  DATE = \'date\',\\n}\\n\\nexport interface DataFilter<T, V> {\\n  type: DataFilterType;\\n  field: string;\\n  value: V;\\n  apply?(list: T[]): T[];\\n}\\n\\nexport interface DataFilterDisplay<T, V> {\\n  type: DataFilterControlType;\\n  label: string;\\n  dataFilter: DataFilter<T, V>;\\n}\\n","properties":[{"name":"type","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23}],"indexSignatures":[],"kind":165,"methods":[],"extends":"FilterBase"},{"name":"GitAccount","id":"interface-GitAccount-0442995cc42b8ee2ffde717e9fae932d7c28f35f63c37c4e5205cfb0d686c40c0ef058d86cd775c030266f82af0763bf1db21470754642ebe3efda7b82b722aa","file":"src/app/dashboard/interfaces/git-integration.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { JSONParsable } from \'./../../_main/interfaces/json-parsable.interface\';\\n\\nexport interface GitRepository extends JSONParsable {\\n  id: number;\\n  fullName: string;\\n  private: boolean;\\n}\\n\\nexport interface GitIntegration extends JSONParsable {\\n  link: string;\\n  gitRepositories: GitRepository[];\\n}\\n\\nexport interface GitIssue extends JSONParsable {\\n  id: number;\\n  url: string;\\n  state: string;\\n  title: string;\\n  description: string;\\n  service: string;\\n}\\n\\nexport interface GitAccount extends JSONParsable {\\n  id: number;\\n  gitHubUsername: string;\\n  suspended: boolean;\\n}\\n\\nexport interface GitPull extends JSONParsable {\\n  id: number;\\n  url: string;\\n  state: string;\\n  title: string;\\n  description: string;\\n  service: string;\\n  branch: string;\\n}\\n","properties":[{"name":"gitHubUsername","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":24},{"name":"suspended","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26}],"indexSignatures":[],"kind":165,"methods":[],"extends":"JSONParsable"},{"name":"GitAccountWithUsage","id":"interface-GitAccountWithUsage-d65bb50747c154151ba81a46a4404f66924e19f3327bf4e3b694ae55628a6766f787bb8435a98955cf2cb4d066901efb87b82a0629f4af4e9617d4abb6ebca27","file":"src/app/settings/pages/settings-integrations/settings-integrations.page.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { GitAccount } from \'@dashboard/interfaces/git-integration.interface\';\\nimport { GitIntegrationService } from \'@dashboard/services/git-integration/git-integration.service\';\\nimport { map, Observable, take } from \'rxjs\';\\nimport { faPlus } from \'@fortawesome/free-solid-svg-icons\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\n\\ninterface GitAccountWithUsage {\\n  account: GitAccount;\\n  usage: Observable<string>;\\n}\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'app-settings-integrations\',\\n  templateUrl: \'./settings-integrations.page.html\',\\n  styleUrls: [\'./settings-integrations.page.scss\'],\\n})\\nexport class SettingsIntegrationsPage implements OnInit {\\n  public gitHubAccounts$!: Observable<GitAccountWithUsage[]>;\\n\\n  /** @ignore */\\n  faPlus = faPlus;\\n\\n  constructor(private gitIntegrationService: GitIntegrationService) {}\\n\\n  ngOnInit() {\\n    this.loadGitHubIntegration();\\n  }\\n\\n  public openGitHubIntegration() {\\n    this.gitIntegrationService.startGitHubIntegration().pipe(untilDestroyed(this)).subscribe();\\n  }\\n\\n  public loadGitHubIntegration(): void {\\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\\n      map((accounts) => {\\n        return accounts.map((account) => {\\n          return {\\n            account,\\n            usage: this.getConnectedProjects(account).pipe(take(1)),\\n          };\\n        });\\n      }),\\n    );\\n  }\\n\\n  public disconnect(account: GitAccount): void {\\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\\n      window.open(link, \'_blank\');\\n    });\\n  }\\n\\n  public getConnectedProjects(account: GitAccount): Observable<string> {\\n    return this.gitIntegrationService\\n      .getGitHubAccountConnectedProjects(account)\\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(\', \')));\\n  }\\n}\\n","properties":[{"name":"account","deprecated":false,"deprecationMessage":"","type":"GitAccount","optional":false,"description":"","line":9},{"name":"usage","deprecated":false,"deprecationMessage":"","type":"Observable<string>","optional":false,"description":"","line":10}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GitIntegration","id":"interface-GitIntegration-0442995cc42b8ee2ffde717e9fae932d7c28f35f63c37c4e5205cfb0d686c40c0ef058d86cd775c030266f82af0763bf1db21470754642ebe3efda7b82b722aa","file":"src/app/dashboard/interfaces/git-integration.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { JSONParsable } from \'./../../_main/interfaces/json-parsable.interface\';\\n\\nexport interface GitRepository extends JSONParsable {\\n  id: number;\\n  fullName: string;\\n  private: boolean;\\n}\\n\\nexport interface GitIntegration extends JSONParsable {\\n  link: string;\\n  gitRepositories: GitRepository[];\\n}\\n\\nexport interface GitIssue extends JSONParsable {\\n  id: number;\\n  url: string;\\n  state: string;\\n  title: string;\\n  description: string;\\n  service: string;\\n}\\n\\nexport interface GitAccount extends JSONParsable {\\n  id: number;\\n  gitHubUsername: string;\\n  suspended: boolean;\\n}\\n\\nexport interface GitPull extends JSONParsable {\\n  id: number;\\n  url: string;\\n  state: string;\\n  title: string;\\n  description: string;\\n  service: string;\\n  branch: string;\\n}\\n","properties":[{"name":"gitRepositories","deprecated":false,"deprecationMessage":"","type":"GitRepository[]","optional":false,"description":"","line":11},{"name":"link","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10}],"indexSignatures":[],"kind":165,"methods":[],"extends":"JSONParsable"},{"name":"GitIssue","id":"interface-GitIssue-0442995cc42b8ee2ffde717e9fae932d7c28f35f63c37c4e5205cfb0d686c40c0ef058d86cd775c030266f82af0763bf1db21470754642ebe3efda7b82b722aa","file":"src/app/dashboard/interfaces/git-integration.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { JSONParsable } from \'./../../_main/interfaces/json-parsable.interface\';\\n\\nexport interface GitRepository extends JSONParsable {\\n  id: number;\\n  fullName: string;\\n  private: boolean;\\n}\\n\\nexport interface GitIntegration extends JSONParsable {\\n  link: string;\\n  gitRepositories: GitRepository[];\\n}\\n\\nexport interface GitIssue extends JSONParsable {\\n  id: number;\\n  url: string;\\n  state: string;\\n  title: string;\\n  description: string;\\n  service: string;\\n}\\n\\nexport interface GitAccount extends JSONParsable {\\n  id: number;\\n  gitHubUsername: string;\\n  suspended: boolean;\\n}\\n\\nexport interface GitPull extends JSONParsable {\\n  id: number;\\n  url: string;\\n  state: string;\\n  title: string;\\n  description: string;\\n  service: string;\\n  branch: string;\\n}\\n","properties":[{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":15},{"name":"service","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20},{"name":"state","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":17},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18},{"name":"url","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16}],"indexSignatures":[],"kind":165,"methods":[],"extends":"JSONParsable"},{"name":"GitPull","id":"interface-GitPull-0442995cc42b8ee2ffde717e9fae932d7c28f35f63c37c4e5205cfb0d686c40c0ef058d86cd775c030266f82af0763bf1db21470754642ebe3efda7b82b722aa","file":"src/app/dashboard/interfaces/git-integration.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { JSONParsable } from \'./../../_main/interfaces/json-parsable.interface\';\\n\\nexport interface GitRepository extends JSONParsable {\\n  id: number;\\n  fullName: string;\\n  private: boolean;\\n}\\n\\nexport interface GitIntegration extends JSONParsable {\\n  link: string;\\n  gitRepositories: GitRepository[];\\n}\\n\\nexport interface GitIssue extends JSONParsable {\\n  id: number;\\n  url: string;\\n  state: string;\\n  title: string;\\n  description: string;\\n  service: string;\\n}\\n\\nexport interface GitAccount extends JSONParsable {\\n  id: number;\\n  gitHubUsername: string;\\n  suspended: boolean;\\n}\\n\\nexport interface GitPull extends JSONParsable {\\n  id: number;\\n  url: string;\\n  state: string;\\n  title: string;\\n  description: string;\\n  service: string;\\n  branch: string;\\n}\\n","properties":[{"name":"branch","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":36},{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":30},{"name":"service","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35},{"name":"state","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":33},{"name":"url","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31}],"indexSignatures":[],"kind":165,"methods":[],"extends":"JSONParsable"},{"name":"GitRepository","id":"interface-GitRepository-0442995cc42b8ee2ffde717e9fae932d7c28f35f63c37c4e5205cfb0d686c40c0ef058d86cd775c030266f82af0763bf1db21470754642ebe3efda7b82b722aa","file":"src/app/dashboard/interfaces/git-integration.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { JSONParsable } from \'./../../_main/interfaces/json-parsable.interface\';\\n\\nexport interface GitRepository extends JSONParsable {\\n  id: number;\\n  fullName: string;\\n  private: boolean;\\n}\\n\\nexport interface GitIntegration extends JSONParsable {\\n  link: string;\\n  gitRepositories: GitRepository[];\\n}\\n\\nexport interface GitIssue extends JSONParsable {\\n  id: number;\\n  url: string;\\n  state: string;\\n  title: string;\\n  description: string;\\n  service: string;\\n}\\n\\nexport interface GitAccount extends JSONParsable {\\n  id: number;\\n  gitHubUsername: string;\\n  suspended: boolean;\\n}\\n\\nexport interface GitPull extends JSONParsable {\\n  id: number;\\n  url: string;\\n  state: string;\\n  title: string;\\n  description: string;\\n  service: string;\\n  branch: string;\\n}\\n","properties":[{"name":"fullName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4},{"name":"private","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[],"extends":"JSONParsable"},{"name":"HTTPError","id":"interface-HTTPError-e51026a4007b067c26d90f480e366629ca002f3a1e1346187c971a2b83dcba45aca288766ce239a778f8fdde742d7b2d918326f4c59e13590506cb7338fbb715","file":"src/app/_main/interfaces/http-error.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface HTTPError {\\n  status: number;\\n  text: string;\\n}\\n\\nexport type Errors<T extends string> = T;\\n\\nexport type ErrorCodes<T extends string = string> = {\\n  [key in T]: {\\n    message: string;\\n  };\\n};\\n\\nexport interface ErrorCodesMap {\\n  [key: string | number]: keyof ErrorCodes;\\n}\\n","properties":[{"name":"status","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IntegrationComponent","id":"interface-IntegrationComponent-baf141ab9606029963356cad8eec471559137eb9784a69c3a46e9c888eb85fbcf94afc447d1ce638a5aa9c429e7366b9a59b5c400f0c263d3a885f3f1a56f435","file":"src/app/dashboard/modules/integration-modules/interfaces/integration-component.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { Observable } from \'rxjs\';\\n\\nexport interface IntegrationComponent {\\n  project?: Project;\\n  save(): Observable<any>;\\n}\\n","properties":[{"name":"project","deprecated":false,"deprecationMessage":"","type":"Project","optional":true,"description":"","line":5}],"indexSignatures":[],"kind":167,"methods":[{"name":"save","args":[],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":6,"deprecated":false,"deprecationMessage":""}]},{"name":"IntegrationModuleEntry","id":"interface-IntegrationModuleEntry-1d163c0089b9d576f1abb866337f324ed630d6401867a2c9ebf3ba02b0820328732cba5cf830b9b89d381d74c445adf73a6431d66041ada5ef1cf7187edc064d","file":"src/app/_main/interfaces/integration-module.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injector, Type } from \'@angular/core\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { IntegrationComponent } from \'@dashboard/modules/integration-modules/interfaces/integration-component.interface\';\\nimport { IconDefinition } from \'@fortawesome/fontawesome-svg-core\';\\nimport { Observable } from \'rxjs\';\\n\\nexport interface IntegrationModuleEntryConfig {\\n  title: string;\\n  description: string;\\n  icon: string | IconDefinition;\\n  isAttached(project: Project, injector: Injector): boolean;\\n  detach(project: Project, injector: Injector): Observable<boolean>;\\n}\\n\\nexport interface IntegrationModuleEntry extends IntegrationModuleEntryConfig {\\n  id: string;\\n  component: Type<IntegrationComponent>;\\n}\\n","properties":[{"name":"component","deprecated":false,"deprecationMessage":"","type":"Type<IntegrationComponent>","optional":false,"description":"","line":17},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16}],"indexSignatures":[],"kind":165,"methods":[],"extends":"IntegrationModuleEntryConfig"},{"name":"IntegrationModuleEntryConfig","id":"interface-IntegrationModuleEntryConfig-1d163c0089b9d576f1abb866337f324ed630d6401867a2c9ebf3ba02b0820328732cba5cf830b9b89d381d74c445adf73a6431d66041ada5ef1cf7187edc064d","file":"src/app/_main/interfaces/integration-module.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injector, Type } from \'@angular/core\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { IntegrationComponent } from \'@dashboard/modules/integration-modules/interfaces/integration-component.interface\';\\nimport { IconDefinition } from \'@fortawesome/fontawesome-svg-core\';\\nimport { Observable } from \'rxjs\';\\n\\nexport interface IntegrationModuleEntryConfig {\\n  title: string;\\n  description: string;\\n  icon: string | IconDefinition;\\n  isAttached(project: Project, injector: Injector): boolean;\\n  detach(project: Project, injector: Injector): Observable<boolean>;\\n}\\n\\nexport interface IntegrationModuleEntry extends IntegrationModuleEntryConfig {\\n  id: string;\\n  component: Type<IntegrationComponent>;\\n}\\n","properties":[{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string | IconDefinition","optional":false,"description":"","line":10},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":167,"methods":[{"name":"detach","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isAttached","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},{"name":"IntegrationModuleSelectDialogData","id":"interface-IntegrationModuleSelectDialogData-62516db20a49bbfb966abdc8cf0dc2f4a6117b9533b664395e169bf41609ee72690ac358c908032df09638c76ad4f43fcdcca435a759c7f37ffb903b822853e4","file":"src/app/dashboard/modules/integration-modules/dialogs/integration-module-select/integration-module-select.dialog.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, Inject, OnInit } from \'@angular/core\';\\nimport { MatDialogRef, MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { IntegrationModuleService } from \'@dashboard/modules/integration-modules/services/integration-module/integration-module.service\';\\nimport { IntegrationModuleEntry } from \'@main/interfaces/integration-module.interface\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\n\\nexport interface IntegrationModuleSelectDialogData {\\n  modules: IntegrationModuleEntry[];\\n}\\n\\n@Component({\\n  templateUrl: \'./integration-module-select.dialog.html\',\\n})\\nexport class IntegrationModuleSelectDialog implements OnInit {\\n  public modules$ = this.integrationModuleService.registry$;\\n  public form = new FormGroup(\\n    Object.fromEntries(\\n      this.modules$.value.map((module) => [module.id, new FormControl<boolean>()]),\\n    ),\\n  );\\n\\n  constructor(\\n    private integrationModuleService: IntegrationModuleService,\\n    private dialogRef: MatDialogRef<IntegrationModuleSelectDialog>,\\n    @Inject(MAT_DIALOG_DATA) public data: IntegrationModuleSelectDialogData,\\n  ) {}\\n\\n  ngOnInit() {\\n    this.form.patchValue(Object.fromEntries(this.data.modules.map((module) => [module.id, true])));\\n  }\\n\\n  close() {\\n    const modulesMap = new Map(this.modules$.value.map((m) => [m.id, m]));\\n\\n    this.dialogRef.close(\\n      Object.entries(this.form.value)\\n        .filter(([_, state]) => state)\\n        .map(([moduleId]) => modulesMap.get(moduleId)),\\n    );\\n  }\\n}\\n","properties":[{"name":"modules","deprecated":false,"deprecationMessage":"","type":"IntegrationModuleEntry[]","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"JSONParsable","id":"interface-JSONParsable-93e27ec29df5d53f60d148fd812269ecf75dae295d2b34a3995662c3f38a17823da937ca7feb4f84429db7ae76b0f957d2b8190d8cd8ef0b517d44254d3b56c2","file":"src/app/_main/interfaces/json-parsable.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import dayjs from \'dayjs\';\\n\\nexport type JSONPrimitive = string | number | boolean | undefined | null;\\n\\nexport interface JSONParsable {\\n  [key: string]: JSONPrimitive | JSONPrimitive[] | dayjs.Dayjs | JSONParsable | JSONParsable[];\\n}\\n\\nexport interface JSONParsed {\\n  [key: string]: JSONPrimitive | JSONPrimitive[] | JSONParsed | JSONParsed[];\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-93e27ec29df5d53f60d148fd812269ecf75dae295d2b34a3995662c3f38a17823da937ca7feb4f84429db7ae76b0f957d2b8190d8cd8ef0b517d44254d3b56c2","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"JSONPrimitive | [] | dayjs.Dayjs | JSONParsable | []","line":5,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"JSONParsed","id":"interface-JSONParsed-93e27ec29df5d53f60d148fd812269ecf75dae295d2b34a3995662c3f38a17823da937ca7feb4f84429db7ae76b0f957d2b8190d8cd8ef0b517d44254d3b56c2","file":"src/app/_main/interfaces/json-parsable.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import dayjs from \'dayjs\';\\n\\nexport type JSONPrimitive = string | number | boolean | undefined | null;\\n\\nexport interface JSONParsable {\\n  [key: string]: JSONPrimitive | JSONPrimitive[] | dayjs.Dayjs | JSONParsable | JSONParsable[];\\n}\\n\\nexport interface JSONParsed {\\n  [key: string]: JSONPrimitive | JSONPrimitive[] | JSONParsed | JSONParsed[];\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-93e27ec29df5d53f60d148fd812269ecf75dae295d2b34a3995662c3f38a17823da937ca7feb4f84429db7ae76b0f957d2b8190d8cd8ef0b517d44254d3b56c2","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"JSONPrimitive | [] | JSONParsed | []","line":9,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"LetContext","id":"interface-LetContext-dad31174d6b77242ec85fb1e9550d94920d2e30aa138dc8a792333c22f3cfc3aa05987eca68352b2579e857fc52e9e4254bd87e687541fcf701ecb567c9ddf39","file":"src/app/_main/directives/let/let.directive.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Directive, Input, TemplateRef, ViewContainerRef } from \'@angular/core\';\\n\\ninterface LetContext<T> {\\n  ngLet: T;\\n}\\n\\n@Directive({\\n  selector: \'[ngLet]\',\\n})\\nexport class LetDirective<T> {\\n  private _context: LetContext<T | null> = { ngLet: null };\\n\\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef<LetContext<T>>) {\\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\\n  }\\n\\n  @Input()\\n  set ngLet(value: T) {\\n    this._context.ngLet = value;\\n  }\\n}\\n","properties":[{"name":"ngLet","deprecated":false,"deprecationMessage":"","type":"T","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"LoaderOptions","id":"interface-LoaderOptions-ab5e719b2985ff6dcea366519c910ea12e0201c66c03e70e3ce1ee1b7455bf5335e9dbe7aa05b72852ba5fa91352550506cbdd3cbcb2c5af9ea6ec257b0fdbd4","file":"src/app/_main/classes/loader/loader-options.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface LoaderOptions {\\n  // TODO: Implements fullscreen loader\\n  fullscreen?: boolean;\\n}\\n","properties":[{"name":"fullscreen","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"ModifyUser","id":"interface-ModifyUser-bda07e2556329d2e923636a4a8191f7a11bd38ab489c0c96b0d636a422772ddddb4ec9ac8dba68cf2cc29f6d82b850d939d1089da1e30e8d91038fc1f5c1b769","file":"src/app/auth/interfaces/user.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { JSONParsable } from \'@main/interfaces/json-parsable.interface\';\\n\\nexport interface User extends JSONParsable {\\n  id: number;\\n  name: string;\\n  surname: string;\\n  email: string;\\n  username: string;\\n  password: string;\\n  avatar: string;\\n  dateFormat: string;\\n  timeFormat: string;\\n  firstDayOfWeek: number;\\n}\\n\\nexport interface UserWithPrivileges extends JSONParsable {\\n  user: User;\\n  privileges: number;\\n}\\n\\nexport interface ModifyUser extends JSONParsable {\\n  name?: string;\\n  surname?: string;\\n  avatar?: string;\\n}\\n\\nexport interface UserData extends JSONParsable {\\n  id: number;\\n  name: string;\\n  surname: string;\\n  username: string;\\n  avatar: string;\\n}\\n","properties":[{"name":"avatar","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":24},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":22},{"name":"surname","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":23}],"indexSignatures":[],"kind":165,"methods":[],"extends":"JSONParsable"},{"name":"PersistentMapOptions","id":"interface-PersistentMapOptions-e9304fd2d5e73a56daa7559536506512d8ec2ca3613c2e21a9bb809a245813aaa7fefd9aedd4c3688b9bc9bd6dae4bc98c34f28459d8a31160196002d49972df","file":"src/app/_main/classes/persistent-map.class.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface PersistentMapOptions {\\n  persistentKey: string;\\n}\\n\\nexport class PersistentMap<K, V> extends Map<K, V> {\\n  override clear(): void {\\n    localStorage.removeItem(this._persistentKey);\\n    super.clear();\\n  }\\n\\n  override delete(key: K): boolean {\\n    const temp = super.delete(key);\\n    this.saveState();\\n    return temp;\\n  }\\n\\n  override set(key: K, value: V): this {\\n    const temp = super.set(key, value);\\n    this.saveState();\\n    return temp;\\n  }\\n\\n  private saveState() {\\n    localStorage.setItem(this._persistentKey, JSON.stringify([...this.entries()]));\\n  }\\n\\n  private _persistentKey = \'\';\\n\\n  constructor(\\n    { persistentKey }: PersistentMapOptions,\\n    entries?: readonly (readonly [K, V])[] | null,\\n  ) {\\n    super(\\n      persistentKey && localStorage.getItem(persistentKey)\\n        ? JSON.parse(localStorage.getItem(persistentKey)!)\\n        : entries,\\n    );\\n\\n    if (!persistentKey) {\\n      console.error(\'PersistentMap need persistentKey option\');\\n      return;\\n    }\\n\\n    this._persistentKey = persistentKey;\\n  }\\n}\\n","properties":[{"name":"persistentKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Project","id":"interface-Project-0a5607b4b2beda613ff019236e842dbf3e314d3dab34d7997761925b03aa92af4ee727113d17b0c437e0e16d0476d557dfd0ec588ffed16f7aadc1b3a9923231","file":"src/app/dashboard/interfaces/project.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ProjectMember } from \'./project-member.interface\';\\nimport { JSONParsable } from \'./../../_main/interfaces/json-parsable.interface\';\\n\\nexport interface Project extends JSONParsable {\\n  /**\\n   * The project\'s ID.\\n   */\\n  id: number;\\n\\n  /**\\n   * The project\'s name.\\n   */\\n  name: string;\\n\\n  /**\\n   * GitHub repository name\\n   * @example\\n   * \\"SamPanDonte/untitled\\"\\n   */\\n  gitHubIntegration: string;\\n\\n  /**\\n   * List of projects members\\n   */\\n  projectMembers?: ProjectMember[];\\n}\\n","properties":[{"name":"gitHubIntegration","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>GitHub repository name</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">&quot;SamPanDonte/untitled&quot;</code></pre></div>","line":20,"rawdescription":"\\n\\nGitHub repository name\\n```html\\n\\"SamPanDonte/untitled\\"\\n```","jsdoctags":[{"pos":333,"end":373,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":334,"end":341,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>&quot;SamPanDonte/untitled&quot;</p>\\n"}]},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>The project&#39;s ID.</p>\\n","line":8,"rawdescription":"\\n\\nThe project\'s ID.\\n"},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The project&#39;s name.</p>\\n","line":13,"rawdescription":"\\n\\nThe project\'s name.\\n"},{"name":"projectMembers","deprecated":false,"deprecationMessage":"","type":"ProjectMember[]","optional":true,"description":"<p>List of projects members</p>\\n","line":25,"rawdescription":"\\n\\nList of projects members\\n"}],"indexSignatures":[],"kind":165,"methods":[],"extends":"JSONParsable"},{"name":"ProjectForm","id":"interface-ProjectForm-7cab8738994a33b2f22e019e307b80edabd23f6a9953dd852d2e7488be5a0b9bf868aff6627ad19f671054aa9069fa70c4c723816e8025f94223252c9f32f3e7","file":"src/app/dashboard/interfaces/project-form.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Observable } from \'rxjs\';\\nimport { Project } from \'./project.interface\';\\n\\nexport interface ProjectForm {\\n  project?: Project;\\n  save(): Observable<Project>;\\n}\\n","properties":[{"name":"project","deprecated":false,"deprecationMessage":"","type":"Project","optional":true,"description":"","line":5}],"indexSignatures":[],"kind":167,"methods":[{"name":"save","args":[],"optional":false,"returnType":"Observable<Project>","typeParameters":[],"line":6,"deprecated":false,"deprecationMessage":""}]},{"name":"ProjectMember","id":"interface-ProjectMember-ef398103f37349952a09152450ee015368aba1afe70b10c1cc9741a6d5f707d52113bbb444b3f9aed25187cc7c31d4f5fbae54b6999d51b072cbd51a61fa56f4","file":"src/app/dashboard/interfaces/project-member.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { JSONParsable } from \'./../../_main/interfaces/json-parsable.interface\';\\n\\n/**\\n * Project member interface. Process member is a user who has access to the project.\\n */\\nexport interface ProjectMember extends JSONParsable {\\n  user: {\\n    id: number;\\n    name: string;\\n    surname: string;\\n    email: string;\\n    avatar: string;\\n    username: string;\\n  };\\n  privileges: number;\\n}\\n","properties":[{"name":"privileges","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":15},{"name":"user","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"description":"<p>Project member interface. Process member is a user who has access to the project.</p>\\n","rawdescription":"\\n\\nProject member interface. Process member is a user who has access to the project.\\n","methods":[],"extends":"JSONParsable"},{"name":"RequestOptions","id":"interface-RequestOptions-c0c23462887201501939ed5228bf7d2fca397663b01bcaf0b88d1527a2686342aefe141f5d845c9432d3b73e46a4fecd866d420130a412f2905e7f7b932ad059","file":"src/app/_main/interfaces/request-options.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { HttpContext, HttpHeaders, HttpParams } from \'@angular/common/http\';\\nimport { DataFilter } from \'./filters.interface\';\\nimport { JSONParsable, JSONPrimitive } from \'./json-parsable.interface\';\\n\\n/**\\n * Request options interface\\n * Use this interface to configure request options like body, params, headers, etc.\\n */\\nexport interface RequestOptions {\\n  /**\\n   * Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.\\n   */\\n  body?: JSONParsable | JSONPrimitive | JSONPrimitive[];\\n  /**\\n   * Headers to send with the request.\\n   */\\n  headers?:\\n    | HttpHeaders\\n    | {\\n        [header: string]: string | string[];\\n      };\\n  /**\\n   * Additional context to attach with request.\\n   */\\n  context?: HttpContext;\\n  /**\\n   * Part of the response to observe.\\n   */\\n  observe?: \'body\';\\n  /**\\n   * Query params to send with the request.\\n   */\\n  params?:\\n    | HttpParams\\n    | {\\n        [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;\\n      };\\n  /**\\n   * Used to report progress events like download or upload progress.\\n   */\\n  reportProgress?: boolean;\\n\\n  /**\\n   * Response type to expect from the server.\\n   * For example:\\n   * - blob - will return a Blob object (used when API sends back a file).\\n   * - json - will return a JSON object.\\n   * - text - will return a string.\\n   *\\n   * Default is json.\\n   */\\n  responseType?: \'arraybuffer\' | \'blob\' | \'json\' | \'text\';\\n  /**\\n   * If you want the credentials (cookie authentication token) to be passable through a call,\\n   * you need to add `{ withCredentials: true }` in your httpClient call.\\n   */\\n  withCredentials?: boolean;\\n\\n  filters?: DataFilter<any, any>[] | DataFilter<any, any>;\\n}\\n","properties":[{"name":"body","deprecated":false,"deprecationMessage":"","type":"JSONParsable | JSONPrimitive | JSONPrimitive[]","optional":true,"description":"<p>Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.</p>\\n","line":13,"rawdescription":"\\n\\nBody to send with the request. Used int POST, PATH, PATCH, DELETE requests.\\n"},{"name":"context","deprecated":false,"deprecationMessage":"","type":"HttpContext","optional":true,"description":"<p>Additional context to attach with request.</p>\\n","line":25,"rawdescription":"\\n\\nAdditional context to attach with request.\\n"},{"name":"filters","deprecated":false,"deprecationMessage":"","type":"DataFilter<any, any>[] | DataFilter<any | any>","optional":true,"description":"","line":59},{"name":"headers","deprecated":false,"deprecationMessage":"","type":"HttpHeaders | literal type","optional":true,"description":"<p>Headers to send with the request.</p>\\n","line":17,"rawdescription":"\\n\\nHeaders to send with the request.\\n"},{"name":"observe","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"<p>Part of the response to observe.</p>\\n","line":29,"rawdescription":"\\n\\nPart of the response to observe.\\n"},{"name":"params","deprecated":false,"deprecationMessage":"","type":"HttpParams | literal type","optional":true,"description":"<p>Query params to send with the request.</p>\\n","line":33,"rawdescription":"\\n\\nQuery params to send with the request.\\n"},{"name":"reportProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Used to report progress events like download or upload progress.</p>\\n","line":41,"rawdescription":"\\n\\nUsed to report progress events like download or upload progress.\\n"},{"name":"responseType","deprecated":false,"deprecationMessage":"","type":"\\"arraybuffer\\" | \\"blob\\" | \\"json\\" | \\"text\\"","optional":true,"description":"<p>Response type to expect from the server.\\nFor example:</p>\\n<ul>\\n<li>blob - will return a Blob object (used when API sends back a file).</li>\\n<li>json - will return a JSON object.</li>\\n<li>text - will return a string.</li>\\n</ul>\\n<p>Default is json.</p>\\n","line":52,"rawdescription":"\\n\\nResponse type to expect from the server.\\nFor example:\\n- blob - will return a Blob object (used when API sends back a file).\\n- json - will return a JSON object.\\n- text - will return a string.\\n\\nDefault is json.\\n"},{"name":"withCredentials","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>If you want the credentials (cookie authentication token) to be passable through a call,\\nyou need to add <code>{ withCredentials: true }</code> in your httpClient call.</p>\\n","line":57,"rawdescription":"\\n\\nIf you want the credentials (cookie authentication token) to be passable through a call,\\nyou need to add `{ withCredentials: true }` in your httpClient call.\\n"}],"indexSignatures":[],"kind":165,"description":"<p>Request options interface\\nUse this interface to configure request options like body, params, headers, etc.</p>\\n","rawdescription":"\\n\\nRequest options interface\\nUse this interface to configure request options like body, params, headers, etc.\\n","methods":[]},{"name":"Saveable","id":"interface-Saveable-7858ffb60a7cbbf3a8343b8d08c4cfab0e3bcb97f6c267e150e781a50eec73aa89436a8aa33d8fec302b76d86788e0858e1a9d6767e5575d811e5c747db9c552","file":"src/app/dashboard/interfaces/saveable.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Observable } from \'rxjs\';\\n\\n// TODO: Integrate this interface with the rest of the project or remove it\\nexport interface Saveable {\\n  save(): Observable<boolean>;\\n}\\n","properties":[],"indexSignatures":[],"kind":167,"methods":[{"name":"save","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":5,"deprecated":false,"deprecationMessage":""}]},{"name":"SelectionEditOperation","id":"interface-SelectionEditOperation-d5e675ff028bb4904d9ff20084bab9242c7a854d28fb69b7938853ceac90253a0ab8f4294b1b8ae2123e63ddfb7213c30e181c844770be87d03b5546acb11ead","file":"src/app/_main/classes/monaco-extended.class.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import * as monaco from \'monaco-editor\';\\n\\ntype MonacoEditor = monaco.editor.IStandaloneCodeEditor;\\ntype Selection = monaco.Selection;\\ntype EditOperation = monaco.editor.IIdentifiedSingleEditOperation;\\n\\ninterface SelectionEditOperation {\\n  before?: string;\\n  after?: string;\\n  beforeEachLine?: string;\\n  afterEachLine?: string;\\n}\\n\\nexport class MonacoExtended {\\n  public static insertTextAt(\\n    editor: MonacoEditor,\\n    lineNumber: number,\\n    column: number,\\n    text: string,\\n  ) {\\n    editor.executeEdits(\'\', [\\n      {\\n        range: {\\n          startLineNumber: lineNumber,\\n          startColumn: column,\\n          endLineNumber: lineNumber,\\n          endColumn: column,\\n        },\\n        text,\\n      },\\n    ]);\\n  }\\n\\n  public static executeEdits(editor: MonacoEditor, edits: EditOperation[]) {\\n    for (const edit of edits) {\\n      if (edit.range?.startColumn && !edit.range?.endColumn)\\n        (edit.range as any).endColumn = edit.range.startColumn;\\n      if (edit.range?.startLineNumber && !edit.range?.endLineNumber)\\n        (edit.range as any).endLineNumber = edit.range.startLineNumber;\\n    }\\n    return editor.executeEdits(\'\', edits);\\n  }\\n\\n  public static removeTextAt(\\n    editor: MonacoEditor,\\n    startLineNumber: number,\\n    startColumn: number,\\n    endLineNumber: number,\\n    endColumn: number,\\n  ) {\\n    editor.executeEdits(\'\', [\\n      {\\n        range: {\\n          startLineNumber,\\n          startColumn,\\n          endLineNumber,\\n          endColumn,\\n        },\\n        text: null,\\n      },\\n    ]);\\n  }\\n\\n  public static insertTextBeforeSelection(\\n    editor: MonacoEditor,\\n    selection: Selection,\\n    text: string,\\n  ) {\\n    MonacoExtended.insertTextAt(editor, selection.startLineNumber, selection.startColumn, text);\\n  }\\n\\n  public static insertTextAfterSelection(editor: MonacoEditor, selection: Selection, text: string) {\\n    MonacoExtended.insertTextAt(editor, selection.endLineNumber, selection.endColumn, text);\\n  }\\n\\n  public static insertTextBeforeAndAfterEachSelection(\\n    editor: MonacoEditor,\\n    selections: Selection[],\\n    beforeSelectionText: string,\\n    afterSelectionText: string = \'\',\\n  ) {\\n    const edits = ([] as any[]).concat(\\n      ...selections.map((selection) => {\\n        return [\\n          {\\n            range: {\\n              startLineNumber: selection.startLineNumber,\\n              startColumn: selection.startColumn,\\n              endLineNumber: selection.startLineNumber,\\n              endColumn: selection.startColumn,\\n            },\\n            text: beforeSelectionText,\\n          },\\n          {\\n            range: {\\n              startLineNumber: selection.endLineNumber,\\n              startColumn: selection.endColumn,\\n              endLineNumber: selection.endLineNumber,\\n              endColumn: selection.endColumn,\\n            },\\n            text: afterSelectionText,\\n          },\\n        ];\\n      }),\\n    );\\n\\n    editor.executeEdits(\'\', edits);\\n  }\\n\\n  public static removeTextBeforeAndAfterEachSelection(\\n    editor: MonacoEditor,\\n    selections: Selection[],\\n    beforeSelectionText: string,\\n    afterSelectionText: string = \'\',\\n  ) {\\n    const model = editor.getModel();\\n    const afterSelectionTextLinesCount = (afterSelectionText.match(/\\\\n/g) || [])?.length;\\n    const edits: any[] = [];\\n\\n    if (!model) return;\\n\\n    for (const selection of selections) {\\n      if (\\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText)\\n      ) {\\n        edits.push({\\n          range: {\\n            startLineNumber: selection.startLineNumber,\\n            startColumn: selection.startColumn,\\n            endLineNumber:\\n              selection.startLineNumber + (beforeSelectionText.match(/\\\\n/g) || [])?.length,\\n            endColumn: beforeSelectionText.replace(/.*\\\\n/g, \'\').length + 1,\\n          },\\n          text: \'\',\\n        });\\n        edits.push({\\n          range: {\\n            startLineNumber: selection.endLineNumber - afterSelectionTextLinesCount,\\n            startColumn:\\n              model.getLineContent(selection.endLineNumber - afterSelectionTextLinesCount).length -\\n              (afterSelectionText.replace(/\\\\n[^]*$/g, \'\').length - 1),\\n            endLineNumber: selection.endLineNumber,\\n            endColumn: selection.endColumn,\\n          },\\n          text: \'\',\\n        });\\n      }\\n    }\\n\\n    editor.executeEdits(\'\', edits);\\n  }\\n\\n  public static selectionStartWith(editor: MonacoEditor, selection: Selection, text: string) {\\n    const selectedValue = editor\\n      .getModel()\\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\\n    return selectedValue?.startsWith(text);\\n  }\\n\\n  public static selectionEndsWith(editor: MonacoEditor, selection: Selection, text: string) {\\n    const selectedValue = editor\\n      .getModel()\\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\\n    return selectedValue?.endsWith(text);\\n  }\\n\\n  public static toggleEndAndStartOfEachSelection(\\n    editor: MonacoEditor,\\n    beforeSelectionText: string,\\n    afterSelectionText: string = \'\',\\n  ) {\\n    const selections = editor.getSelections();\\n    if (!selections) return;\\n\\n    const shouldDelete = selections.some(\\n      (selection) =>\\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText),\\n    );\\n\\n    const mode: \'delete\' | \'add\' = shouldDelete ? \'delete\' : \'add\';\\n\\n    if (mode === \'delete\') {\\n      MonacoExtended.removeTextBeforeAndAfterEachSelection(\\n        editor,\\n        selections,\\n        beforeSelectionText,\\n        afterSelectionText,\\n      );\\n    } else {\\n      MonacoExtended.insertTextBeforeAndAfterEachSelection(\\n        editor,\\n        selections,\\n        beforeSelectionText,\\n        afterSelectionText,\\n      );\\n    }\\n  }\\n}\\n","properties":[{"name":"after","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":9},{"name":"afterEachLine","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":11},{"name":"before","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":8},{"name":"beforeEachLine","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"SelectLabel","id":"interface-SelectLabel-600b52f3d60a890cde34b3ebbc58b5f8ecf48f15527576695d0f6d2fe3304411aa7b5a6cfa4f16275774cca1a51a0aefd2cec907341f055fa5939f808be0274c","file":"src/app/_main/components/select/select-label.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormControl } from \'@ngneat/reactive-forms\';\\nimport { IconDefinition } from \'@fortawesome/fontawesome-svg-core\';\\nimport { OptionComponent } from \'./option/option.component\';\\n\\nexport interface SelectLabel {\\n  icon?: string | IconDefinition;\\n  control: FormControl<string>;\\n  optionComponent?: OptionComponent;\\n}\\n","properties":[{"name":"control","deprecated":false,"deprecationMessage":"","type":"FormControl<string>","optional":false,"description":"","line":7},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string | IconDefinition","optional":true,"description":"","line":6},{"name":"optionComponent","deprecated":false,"deprecationMessage":"","type":"OptionComponent","optional":true,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"SinglePersonSchedule","id":"interface-SinglePersonSchedule-bba22b498c14d3c4a832194bc43e5c1bd93d01550b1088f38ba6ab7cf0bde866f00410e81a4c8134e535522a8803b6dd30554213dfe3507600015d08be546d39","file":"src/app/tasks/interfaces/schedule.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { UserData } from \'@auth/interfaces/user.interface\';\\n\\nexport type Schedule = SinglePersonSchedule[];\\n\\nexport interface SinglePersonSchedule {\\n  user: UserData;\\n  tasks: Map<number | null, Task>;\\n}\\n","properties":[{"name":"tasks","deprecated":false,"deprecationMessage":"","type":"Map<number | null | Task>","optional":false,"description":"","line":7},{"name":"user","deprecated":false,"deprecationMessage":"","type":"UserData","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"SnackbarData","id":"interface-SnackbarData-2e4c56c730c6383aad04190750758d91b46182de6ad3142519896aa5a69f908e8960f439ab6842721d1f143b4f107e1e17aa248bf45befba2001184071c40d9c","file":"src/app/_main/components/snackbar/snackbar.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface SnackbarData {\\n  color: \'gray\' | \'green\' | \'red\' | \'yellow\';\\n  message: string;\\n  duration: number;\\n}\\n","properties":[{"name":"color","deprecated":false,"deprecationMessage":"","type":"\\"gray\\" | \\"green\\" | \\"red\\" | \\"yellow\\"","optional":false,"description":"","line":2},{"name":"duration","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4},{"name":"message","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Status","id":"interface-Status-a39a427b34a8bfe6180f2e2e68eee42f197b8fd3fec754ce8d93efb8d9ecb592fa16878eb1abd94f80501f19496ef8872fff34f5d01659a275673efaea76aaad","file":"src/app/tasks/interfaces/status.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { color } from \'../../_main/interfaces/color.interface\';\\nimport { Task } from \'./task.interface\';\\nimport { JSONParsable } from \'./../../_main/interfaces/json-parsable.interface\';\\n\\n/**\\n * Task status/column interface\\n */\\nexport interface Status extends JSONParsable {\\n  /**\\n   * Status id (unique per database)\\n   */\\n  id?: number;\\n\\n  /**\\n   * Status name (Header displayed in labels or on the top of the columns)\\n   */\\n  name: string;\\n\\n  /**\\n   * Status color (used to display as the background of the labels)\\n   */\\n  color: color;\\n\\n  /**\\n   * Status final (used to determine if the task is done or not)\\n   */\\n  final: boolean;\\n\\n  /**\\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\\n   * the work on the task does not started yet.\\n   */\\n  begin: boolean;\\n\\n  ordinal: number;\\n}\\n\\n/**\\n * Status with task interface - status column with tasks\\n */\\nexport interface StatusWithTasks extends Status {\\n  tasks: Task[];\\n}\\n","properties":[{"name":"begin","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"<p>Status begin (used to determine if the task is in progress or not). If begin is true,\\nthe work on the task does not started yet.</p>\\n","line":33,"rawdescription":"\\n\\nStatus begin (used to determine if the task is in progress or not). If begin is true,\\nthe work on the task does not started yet.\\n"},{"name":"color","deprecated":false,"deprecationMessage":"","type":"color","optional":false,"description":"<p>Status color (used to display as the background of the labels)</p>\\n","line":22,"rawdescription":"\\n\\nStatus color (used to display as the background of the labels)\\n"},{"name":"final","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"<p>Status final (used to determine if the task is done or not)</p>\\n","line":27,"rawdescription":"\\n\\nStatus final (used to determine if the task is done or not)\\n"},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>Status id (unique per database)</p>\\n","line":12,"rawdescription":"\\n\\nStatus id (unique per database)\\n"},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>Status name (Header displayed in labels or on the top of the columns)</p>\\n","line":17,"rawdescription":"\\n\\nStatus name (Header displayed in labels or on the top of the columns)\\n"},{"name":"ordinal","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":35}],"indexSignatures":[],"kind":165,"description":"<p>Task status/column interface</p>\\n","rawdescription":"\\n\\nTask status/column interface\\n","methods":[],"extends":"JSONParsable"},{"name":"StatusDialogData","id":"interface-StatusDialogData-feec3dc4c2f2b7b4d1531f9124dfae0f5191bceea5b0b3d81dba9c3b7b2a7cb3a6bce3b3960570883a037371574b71ba16765753d06cb9080e790d53b23f2206","file":"src/app/dashboard/dialogs/status/status.dialog.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, Inject, OnInit } from \'@angular/core\';\\nimport { MatDialogRef, MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { color } from \'@main/interfaces/color.interface\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport { validateForm } from \'@main/classes/form.class\';\\n\\nexport interface StatusDialogData {\\n  status?: Partial<Status>;\\n  title: string;\\n  confirmButtonText: string;\\n}\\n\\n@Component({\\n  selector: \'status-dialog\',\\n  templateUrl: \'./status.dialog.html\',\\n  styleUrls: [\'./status.dialog.scss\'],\\n})\\nexport class StatusDialog implements OnInit {\\n  public form = new FormGroup({\\n    name: new FormControl(\'\', [requiredValidator()]),\\n    begin: new FormControl(false),\\n    final: new FormControl(false),\\n    color: new FormControl<color>(0, [requiredValidator()]),\\n  });\\n\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public data: StatusDialogData,\\n    private dialogRef: MatDialogRef<StatusDialogData>,\\n  ) {}\\n\\n  ngOnInit() {\\n    const { status } = this.data;\\n\\n    if (status) {\\n      this.form.patchValue(status as any);\\n    }\\n  }\\n\\n  cancel() {\\n    this.dialogRef.close();\\n  }\\n\\n  close() {\\n    if (validateForm(this.form)) {\\n      console.log({ ...this.data.status });\\n      this.dialogRef.close({ ...this.data.status, ...this.form.value });\\n    }\\n  }\\n}\\n","properties":[{"name":"confirmButtonText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"status","deprecated":false,"deprecationMessage":"","type":"Partial<Status>","optional":true,"description":"","line":10},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"StatusWithTasks","id":"interface-StatusWithTasks-a39a427b34a8bfe6180f2e2e68eee42f197b8fd3fec754ce8d93efb8d9ecb592fa16878eb1abd94f80501f19496ef8872fff34f5d01659a275673efaea76aaad","file":"src/app/tasks/interfaces/status.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { color } from \'../../_main/interfaces/color.interface\';\\nimport { Task } from \'./task.interface\';\\nimport { JSONParsable } from \'./../../_main/interfaces/json-parsable.interface\';\\n\\n/**\\n * Task status/column interface\\n */\\nexport interface Status extends JSONParsable {\\n  /**\\n   * Status id (unique per database)\\n   */\\n  id?: number;\\n\\n  /**\\n   * Status name (Header displayed in labels or on the top of the columns)\\n   */\\n  name: string;\\n\\n  /**\\n   * Status color (used to display as the background of the labels)\\n   */\\n  color: color;\\n\\n  /**\\n   * Status final (used to determine if the task is done or not)\\n   */\\n  final: boolean;\\n\\n  /**\\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\\n   * the work on the task does not started yet.\\n   */\\n  begin: boolean;\\n\\n  ordinal: number;\\n}\\n\\n/**\\n * Status with task interface - status column with tasks\\n */\\nexport interface StatusWithTasks extends Status {\\n  tasks: Task[];\\n}\\n","properties":[{"name":"tasks","deprecated":false,"deprecationMessage":"","type":"Task[]","optional":false,"description":"","line":42}],"indexSignatures":[],"kind":165,"description":"<p>Status with task interface - status column with tasks</p>\\n","rawdescription":"\\n\\nStatus with task interface - status column with tasks\\n","methods":[],"extends":"Status"},{"name":"StoryConfig","id":"interface-StoryConfig-6e6d1bb28d53958f126399d559d441dd08d803efd12a09abd5572233e80faa1818c36262195da6552d1b0082103d18c60f722445ad2c2eeff6c64a5d6e810676","file":"src/stories/helpers/classes/story.class.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormControl } from \'@ngneat/reactive-forms\';\\nimport { componentWrapperDecorator } from \'@storybook/angular\';\\nimport { merge, omit } from \'lodash-es\';\\nimport { exposeAllPossibilities } from \'../component-content-decorator.helper\';\\nimport { StoryPageConfig } from \'./story-page-config.class\';\\nimport { StoryTemplate } from \'./story-template.class\';\\nimport { StoryFn } from \'@storybook/angular\';\\nimport { componentTemplateDecorator } from \'../functions/component-template-decorator.function\';\\n\\nexport type Props<C> = Partial<C> & {\\n  formControl?: FormControl<any>;\\n  content?: string;\\n};\\n\\nexport interface StoryConfig<C> {\\n  config: StoryPageConfig;\\n  template: StoryTemplate<C>;\\n  description?: string;\\n  multiple?: {\\n    prop: string;\\n    options: any[];\\n  };\\n  props?: Props<C>;\\n  code?: string;\\n  html?: string;\\n}\\n\\nexport class Story<C> {\\n  private _config: StoryConfig<C>;\\n  private _story: StoryFn<C>;\\n\\n  constructor(config: StoryConfig<C>) {\\n    this._config = config;\\n    this._story = config.template.template();\\n\\n    if (config.multiple) {\\n      exposeAllPossibilities(\\n        this._story,\\n        config.config.selector,\\n        config.multiple.prop,\\n        config.multiple.options,\\n      );\\n    }\\n\\n    if (config.description) {\\n      this.addDescription(config.description);\\n    }\\n\\n    if (config.code) {\\n      this.addCode(config.code);\\n    }\\n\\n    if (config.html) {\\n      this.addTemplate(config.html);\\n    } else if (!config.multiple) {\\n      this.addDefaultTemplate();\\n    }\\n\\n    if (this.props) {\\n      this.addProps(this.props);\\n    }\\n  }\\n\\n  public mergeConfig(config: any) {\\n    merge(this._story, config);\\n  }\\n\\n  public addDescription(description: string) {\\n    this.mergeConfig({\\n      parameters: {\\n        docs: {\\n          description: {\\n            story: description,\\n          },\\n        },\\n      },\\n    });\\n  }\\n\\n  public addProps(props: Props<C>) {\\n    this.mergeConfig({\\n      args: omit(props, [\'content\']),\\n    });\\n  }\\n\\n  public addCode(code: string) {\\n    this.mergeConfig({\\n      parameters: {\\n        docs: {\\n          source: {\\n            code: code,\\n            language: \'html\',\\n            type: \'auto\',\\n          },\\n        },\\n      },\\n    });\\n  }\\n\\n  public addTemplate(template: string) {\\n    this.mergeConfig({\\n      decorators: [componentWrapperDecorator(() => template)],\\n      parameters: {\\n        docs: {\\n          source: {\\n            code: template,\\n            language: \'html\',\\n            type: \'auto\',\\n          },\\n        },\\n      },\\n    });\\n  }\\n\\n  public addDefaultTemplate() {\\n    this.mergeConfig({\\n      decorators: [\\n        componentTemplateDecorator(this.props, {\\n          selector: this._config.config.selector,\\n        }),\\n      ],\\n    });\\n  }\\n\\n  public get props() {\\n    return merge({}, this._config.props, this._config.template.props);\\n  }\\n\\n  public story() {\\n    return this._story;\\n  }\\n}\\n","properties":[{"name":"code","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":24},{"name":"config","deprecated":false,"deprecationMessage":"","type":"StoryPageConfig","optional":false,"description":"","line":16},{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":18},{"name":"html","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":25},{"name":"multiple","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":19},{"name":"props","deprecated":false,"deprecationMessage":"","type":"Props<C>","optional":true,"description":"","line":23},{"name":"template","deprecated":false,"deprecationMessage":"","type":"StoryTemplate<C>","optional":false,"description":"","line":17}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Task","id":"interface-Task-f6dd42abe0abed5a1f358e1bf64f6abd868eab643a2102fdcf9b6ac04557dd6721d8a2211e483af1997ff8758584f9809d18aa8f3ae5719f04079808b71c42a9","file":"src/app/tasks/interfaces/task.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { GitIssue, GitPull } from \'@dashboard/interfaces/git-integration.interface\';\\nimport { TaskType } from \'@tasks/enums/task-type.enum\';\\nimport { JSONParsable } from \'./../../_main/interfaces/json-parsable.interface\';\\nimport { unixTimestamp } from \'../../_main/interfaces/date.interface\';\\nimport { TimeTrack } from \'./time-track.interface\';\\n\\n/**\\n * Project task interface\\n */\\nexport interface Task extends JSONParsable {\\n  /**\\n   * Task id (unique per project)\\n   */\\n  id: number;\\n\\n  /**\\n   * Task name\\n   */\\n  name: string;\\n\\n  /**\\n   * Task description\\n   */\\n  description: string;\\n\\n  /**\\n   * Task deadline to be completed\\n   */\\n  deadline: unixTimestamp;\\n\\n  /**\\n   * Task estimated date to work on it\\n   */\\n  estimatedDate: unixTimestamp;\\n\\n  /**\\n   * Project identifier\\n   */\\n  projectId: number;\\n\\n  /**\\n   * Workspace identifier\\n   */\\n  workspaceId: number;\\n\\n  /**\\n   * Status id (unique per database)\\n   */\\n  statusId?: number;\\n\\n  /**\\n   * Parent task id\\n   */\\n  parentTaskId?: number;\\n\\n  /**\\n   * List of subtasks\\n   */\\n  subTasks?: Task[];\\n\\n  /**\\n   * Optional link to the GitHub issue\\n   */\\n  issue?: GitIssue;\\n\\n  /**\\n   * Task type (ex. EPIC, USER_STORY)\\n   */\\n  type: TaskType;\\n\\n  /**\\n   * Optional link to the GitHub pull request\\n   */\\n  pull?: GitPull;\\n\\n  /**\\n   * Optional merged pull requests list\\n   */\\n  mergedPullList?: GitPull[];\\n\\n  /**\\n   * Optional user id who is assigned to task\\n   */\\n  assigneeId?: number | null;\\n\\n  /**\\n   * List of trackers for this task\\n   */\\n  timeTracks: TimeTrack[];\\n\\n  /**\\n   * Epic attached to task\\n   */\\n  epic: Task | null;\\n}\\n","properties":[{"name":"assigneeId","deprecated":false,"deprecationMessage":"","type":"number | null","optional":true,"description":"<p>Optional user id who is assigned to task</p>\\n","line":84,"rawdescription":"\\n\\nOptional user id who is assigned to task\\n"},{"name":"deadline","deprecated":false,"deprecationMessage":"","type":"unixTimestamp","optional":false,"description":"<p>Task deadline to be completed</p>\\n","line":29,"rawdescription":"\\n\\nTask deadline to be completed\\n"},{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>Task description</p>\\n","line":24,"rawdescription":"\\n\\nTask description\\n"},{"name":"epic","deprecated":false,"deprecationMessage":"","type":"Task | null","optional":false,"description":"<p>Epic attached to task</p>\\n","line":94,"rawdescription":"\\n\\nEpic attached to task\\n"},{"name":"estimatedDate","deprecated":false,"deprecationMessage":"","type":"unixTimestamp","optional":false,"description":"<p>Task estimated date to work on it</p>\\n","line":34,"rawdescription":"\\n\\nTask estimated date to work on it\\n"},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Task id (unique per project)</p>\\n","line":14,"rawdescription":"\\n\\nTask id (unique per project)\\n"},{"name":"issue","deprecated":false,"deprecationMessage":"","type":"GitIssue","optional":true,"description":"<p>Optional link to the GitHub issue</p>\\n","line":64,"rawdescription":"\\n\\nOptional link to the GitHub issue\\n"},{"name":"mergedPullList","deprecated":false,"deprecationMessage":"","type":"GitPull[]","optional":true,"description":"<p>Optional merged pull requests list</p>\\n","line":79,"rawdescription":"\\n\\nOptional merged pull requests list\\n"},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>Task name</p>\\n","line":19,"rawdescription":"\\n\\nTask name\\n"},{"name":"parentTaskId","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>Parent task id</p>\\n","line":54,"rawdescription":"\\n\\nParent task id\\n"},{"name":"projectId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Project identifier</p>\\n","line":39,"rawdescription":"\\n\\nProject identifier\\n"},{"name":"pull","deprecated":false,"deprecationMessage":"","type":"GitPull","optional":true,"description":"<p>Optional link to the GitHub pull request</p>\\n","line":74,"rawdescription":"\\n\\nOptional link to the GitHub pull request\\n"},{"name":"statusId","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>Status id (unique per database)</p>\\n","line":49,"rawdescription":"\\n\\nStatus id (unique per database)\\n"},{"name":"subTasks","deprecated":false,"deprecationMessage":"","type":"Task[]","optional":true,"description":"<p>List of subtasks</p>\\n","line":59,"rawdescription":"\\n\\nList of subtasks\\n"},{"name":"timeTracks","deprecated":false,"deprecationMessage":"","type":"TimeTrack[]","optional":false,"description":"<p>List of trackers for this task</p>\\n","line":89,"rawdescription":"\\n\\nList of trackers for this task\\n"},{"name":"type","deprecated":false,"deprecationMessage":"","type":"TaskType","optional":false,"description":"<p>Task type (ex. EPIC, USER_STORY)</p>\\n","line":69,"rawdescription":"\\n\\nTask type (ex. EPIC, USER_STORY)\\n"},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Workspace identifier</p>\\n","line":44,"rawdescription":"\\n\\nWorkspace identifier\\n"}],"indexSignatures":[],"kind":165,"description":"<p>Project task interface</p>\\n","rawdescription":"\\n\\nProject task interface\\n","methods":[],"extends":"JSONParsable"},{"name":"TaskDialogData","id":"interface-TaskDialogData-0355244cece7cc1110568db264cec02f3140ab6bdc246520c8f3006e88b9a052856015f9576ca70161e3eae4c4ef28480036a87fc51c468dde8e36a4d9b4b2fc","file":"src/app/tasks/dialogs/task/task.dialog.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, Inject, OnInit } from \'@angular/core\';\\nimport { MatDialogRef, MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { GitIssue, GitPull } from \'@dashboard/interfaces/git-integration.interface\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { Workspace } from \'@dashboard/interfaces/workspace.interface\';\\nimport { GitIntegrationService } from \'@dashboard/services/git-integration/git-integration.service\';\\nimport { WorkspaceService } from \'@dashboard/services/workspace/workspace.service\';\\nimport { validateForm } from \'@main/classes/form.class\';\\nimport { timeToInteraction } from \'@main/classes/time-to-interaction.class\';\\nimport { RouterExtensionsService } from \'@main/services/router-extensions/router-extensions.service\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\nimport { TaskPriority } from \'@tasks/enums/task-priority.enum\';\\nimport { TaskType } from \'@tasks/enums/task-type.enum\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport { isNil } from \'lodash-es\';\\nimport { distinctUntilChanged, map, Observable, pairwise } from \'rxjs\';\\nimport { requiredValidator } from \'../../../_main/validators/required.validator\';\\nimport { Task } from \'../../interfaces/task.interface\';\\nimport { unixTimestamp } from \'../../../_main/interfaces/date.interface\';\\nimport { StatusService } from \'@tasks/services/status/status.service\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\n\\nexport enum TaskDialogVariant {\\n  CREATE = \'create\',\\n  EDIT = \'edit\',\\n}\\n\\nexport interface TaskDialogData {\\n  workspaceId: number;\\n  projectId?: number;\\n  variant: TaskDialogVariant;\\n  task?: Partial<Task>;\\n  parentTask?: Task;\\n}\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'app-task-dialog\',\\n  templateUrl: \'./task.dialog.html\',\\n  styleUrls: [\'./task.dialog.scss\'],\\n})\\nexport class TaskDialog implements OnInit {\\n  TaskDialogVariant = TaskDialogVariant;\\n\\n  public taskTypes$ = this.taskService.listTaskTypes(this.data.parentTask?.type);\\n  public taskPriorities = Object.values(TaskPriority);\\n\\n  public statusList$!: Observable<Status[]>;\\n  public workspaceList$!: Observable<Workspace[]>;\\n  public projectList$!: Observable<Project[]>;\\n  public issueList$!: Observable<GitIssue[]>;\\n  public pullList$!: Observable<GitPull[]>;\\n\\n  public isGitHubIntegrationAvailable: boolean = false;\\n\\n  public form = new FormGroup({\\n    id: new FormControl<number | null>(null),\\n    parentTaskId: new FormControl<number | null>(null),\\n    type: new FormControl<TaskType>(this.taskTypes$.value[0][1], [requiredValidator()]),\\n    name: new FormControl<string>(\'\', [requiredValidator()]),\\n    statusId: new FormControl<number | null>(null, [requiredValidator()]),\\n    projectId: new FormControl<number | null>(null, [requiredValidator()]),\\n    workspaceId: new FormControl<number | null>(null, [requiredValidator()]),\\n    description: new FormControl<string>(\'\'),\\n    priority: new FormControl<TaskPriority>(TaskPriority.MEDIUM, [requiredValidator()]),\\n    deadline: new FormControl<unixTimestamp | null>(null),\\n    estimatedDate: new FormControl<unixTimestamp | null>(null),\\n    issue: new FormControl<GitIssue | \'CREATE\' | \'DETACH\' | null>(null),\\n    pull: new FormControl<GitPull | \'DETACH\' | null>(null),\\n  });\\n\\n  public interactive$ = timeToInteraction();\\n\\n  /** @ignore */\\n  TaskType = TaskType;\\n\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\\n    private dialogRef: MatDialogRef<TaskDialog>,\\n    private statusService: StatusService,\\n    private workspaceService: WorkspaceService,\\n    private gitIntegrationService: GitIntegrationService,\\n    private routerExtensions: RouterExtensionsService,\\n    private taskService: TaskService,\\n  ) {}\\n\\n  ngOnInit() {\\n    this.loadParamsFromUrl();\\n\\n    const { workspaceId, projectId, task } = this.data;\\n    this.form.patchValue({ workspaceId, projectId });\\n    if (task) {\\n      this.form.patchValue(task);\\n    }\\n\\n    this.workspaceList$ = this.workspaceService.list();\\n\\n    this.form\\n      .get(\'workspaceId\')\\n      .valueChanges.pipe(pairwise(), untilDestroyed(this))\\n      .subscribe(([oldWorkspaceId, newWorkspaceId]) => {\\n        if (oldWorkspaceId !== newWorkspaceId) {\\n          console.log(\'fromSubscription\');\\n          this.onWorkspaceIdChange.bind(this)(newWorkspaceId);\\n        }\\n      });\\n    this.form\\n      .get(\'projectId\')\\n      .valueChanges.pipe(distinctUntilChanged(), untilDestroyed(this))\\n      .subscribe(this.onProjectIdChange.bind(this));\\n\\n    if (workspaceId) {\\n      console.log(\'fromInit\');\\n      this.onWorkspaceIdChange(workspaceId);\\n    }\\n\\n    if (projectId) {\\n      this.onProjectIdChange(projectId);\\n    }\\n  }\\n\\n  onWorkspaceIdChange(workspaceId: number | null) {\\n    console.log(\'onWorkspaceIdChange\', workspaceId);\\n    if (this.interactive$.value) {\\n      this.form.get(\'projectId\').setValue(null);\\n    }\\n\\n    if (!workspaceId) return;\\n\\n    this.projectList$ = this.workspaceService\\n      .get(workspaceId)\\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\\n  }\\n\\n  onProjectIdChange(projectId: number | null) {\\n    if (!projectId) return;\\n\\n    this.statusList$ = this.statusService.list(projectId);\\n\\n    this.statusList$.pipe(untilDestroyed(this)).subscribe((statuses) => {\\n      const statusId = statuses.find((status) => status.begin)?.id;\\n\\n      if (!statusId) return;\\n\\n      this.form.patchValue({ statusId });\\n    });\\n\\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\\n      this.isGitHubIntegrationAvailable = value;\\n    });\\n  }\\n\\n  loadParamsFromUrl() {\\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\\n\\n    if (!isNil(workspaceId) && !this.data.workspaceId) this.data.workspaceId = Number(workspaceId);\\n    if (!isNil(projectId) && !this.data.projectId) this.data.projectId = Number(projectId);\\n  }\\n\\n  confirm() {\\n    if (validateForm(this.form)) {\\n      this.dialogRef.close(this.form.value);\\n    }\\n  }\\n\\n  cancel() {\\n    this.dialogRef.close(false);\\n  }\\n}\\n","properties":[{"name":"parentTask","deprecated":false,"deprecationMessage":"","type":"Task","optional":true,"description":"","line":34},{"name":"projectId","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":31},{"name":"task","deprecated":false,"deprecationMessage":"","type":"Partial<Task>","optional":true,"description":"","line":33},{"name":"variant","deprecated":false,"deprecationMessage":"","type":"TaskDialogVariant","optional":false,"description":"","line":32},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":30}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TemplateDecoratorConfig","id":"interface-TemplateDecoratorConfig-c317bf0a8699445550546dcb84d7f0e8957f3e5009fbe009750794ed5f73212cb3b3a45f410c2d846806d908ffc344fb7415cc6cddbd635d7c08aac1a589609b","file":"src/stories/helpers/functions/component-template-decorator.function.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { componentWrapperDecorator } from \'@storybook/angular\';\\nimport { omit } from \'lodash-es\';\\nimport { Props } from \'../classes/story.class\';\\n\\nexport interface TemplateDecoratorConfig {\\n  selector: string;\\n  content?: string;\\n  wrapWithDiv?: boolean;\\n}\\n\\nexport function componentTemplateDecorator<C>(props: Props<C>, config: TemplateDecoratorConfig) {\\n  return componentWrapperDecorator((defTemplate: string) => {\\n    const content = props.content || \'\';\\n    const selector = config.selector;\\n\\n    const defPropsString = extractPropsString(defTemplate);\\n    const newPropsString = buildPropsString(props);\\n\\n    const propsString = combinePropsString(defPropsString, newPropsString);\\n\\n    const template = buildTemplate(selector, content, propsString);\\n\\n    if (config.wrapWithDiv) {\\n      return wrapWithDiv(template);\\n    } else {\\n      return template;\\n    }\\n  });\\n}\\n\\nexport function buildTemplate(selector: string, content: string, propsString: string) {\\n  return `<${selector} ${propsString}>${content}</${selector}>`;\\n}\\n\\nexport function wrapWithDiv(template: string) {\\n  const style = \'display:flex;gap:1rem;\';\\n  return `<div style=\\"${style}\\">${template}</div>`;\\n}\\n\\nexport function buildPropsString<C>(props: Props<C>) {\\n  const filteredProps = omit(props, [\'content\']);\\n\\n  return Object.entries(filteredProps)\\n    .map(([key, _]) => `[${key}]=\\"${key}\\"`)\\n    .join(\' \');\\n}\\n\\nexport function extractPropsString(template: string) {\\n  return template.match(/(?<=(<[A-Za-z-]* ))[^>]*(?=>)/g)?.[0] || \'\';\\n}\\n\\nexport function combinePropsString(...propsStrings: string[]) {\\n  return propsStrings.join(\' \').trim().replace(/  +/g, \' \');\\n}\\n","properties":[{"name":"content","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":7},{"name":"selector","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"wrapWithDiv","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TimeTrack","id":"interface-TimeTrack-36fe5e5823a516662f058151fc59deb69dc3a6e9ee4167da06f3f2e4ab536b1aea6f1836269511e987a52bf3c64fd459d01422be767bdb4afdc3c7270c6a3eb2","file":"src/app/tasks/interfaces/time-track.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { unixTimestamp } from \'@main/interfaces/date.interface\';\\nimport { JSONParsable } from \'@main/interfaces/json-parsable.interface\';\\n\\nexport interface TimeTrack extends JSONParsable {\\n  id?: number;\\n  startDate: unixTimestamp;\\n  endDate?: unixTimestamp;\\n  edited: boolean;\\n  projectId: number;\\n  taskId: number;\\n  userId: number;\\n}\\n","properties":[{"name":"edited","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":8},{"name":"endDate","deprecated":false,"deprecationMessage":"","type":"unixTimestamp","optional":true,"description":"","line":7},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":5},{"name":"projectId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":9},{"name":"startDate","deprecated":false,"deprecationMessage":"","type":"unixTimestamp","optional":false,"description":"","line":6},{"name":"taskId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":10},{"name":"userId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[],"extends":"JSONParsable"},{"name":"User","id":"interface-User-bda07e2556329d2e923636a4a8191f7a11bd38ab489c0c96b0d636a422772ddddb4ec9ac8dba68cf2cc29f6d82b850d939d1089da1e30e8d91038fc1f5c1b769","file":"src/app/auth/interfaces/user.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { JSONParsable } from \'@main/interfaces/json-parsable.interface\';\\n\\nexport interface User extends JSONParsable {\\n  id: number;\\n  name: string;\\n  surname: string;\\n  email: string;\\n  username: string;\\n  password: string;\\n  avatar: string;\\n  dateFormat: string;\\n  timeFormat: string;\\n  firstDayOfWeek: number;\\n}\\n\\nexport interface UserWithPrivileges extends JSONParsable {\\n  user: User;\\n  privileges: number;\\n}\\n\\nexport interface ModifyUser extends JSONParsable {\\n  name?: string;\\n  surname?: string;\\n  avatar?: string;\\n}\\n\\nexport interface UserData extends JSONParsable {\\n  id: number;\\n  name: string;\\n  surname: string;\\n  username: string;\\n  avatar: string;\\n}\\n","properties":[{"name":"avatar","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10},{"name":"dateFormat","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11},{"name":"email","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"firstDayOfWeek","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"password","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"surname","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"timeFormat","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"username","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[],"extends":"JSONParsable"},{"name":"UserData","id":"interface-UserData-bda07e2556329d2e923636a4a8191f7a11bd38ab489c0c96b0d636a422772ddddb4ec9ac8dba68cf2cc29f6d82b850d939d1089da1e30e8d91038fc1f5c1b769","file":"src/app/auth/interfaces/user.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { JSONParsable } from \'@main/interfaces/json-parsable.interface\';\\n\\nexport interface User extends JSONParsable {\\n  id: number;\\n  name: string;\\n  surname: string;\\n  email: string;\\n  username: string;\\n  password: string;\\n  avatar: string;\\n  dateFormat: string;\\n  timeFormat: string;\\n  firstDayOfWeek: number;\\n}\\n\\nexport interface UserWithPrivileges extends JSONParsable {\\n  user: User;\\n  privileges: number;\\n}\\n\\nexport interface ModifyUser extends JSONParsable {\\n  name?: string;\\n  surname?: string;\\n  avatar?: string;\\n}\\n\\nexport interface UserData extends JSONParsable {\\n  id: number;\\n  name: string;\\n  surname: string;\\n  username: string;\\n  avatar: string;\\n}\\n","properties":[{"name":"avatar","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":28},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29},{"name":"surname","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30},{"name":"username","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31}],"indexSignatures":[],"kind":165,"methods":[],"extends":"JSONParsable"},{"name":"UserSession","id":"interface-UserSession-9617158b26ccdda6a2f13ee789e24a1c9deff7df12fc38ecf664c69e9952e5ed5b1bc0cdf34991c0b15bac52dcf531f9145792d7c774c8f769b4ed1fab5f174d","file":"src/app/settings/interfaces/session.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface UserSession {\\n  id: number;\\n  userAgent: string;\\n  ip: string;\\n  lastUsed: number;\\n  remembered: boolean;\\n  geoip: {\\n    city: string;\\n    country: string;\\n  };\\n  current: boolean;\\n}\\n","properties":[{"name":"current","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":11},{"name":"geoip","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":7},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2},{"name":"ip","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"lastUsed","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":5},{"name":"remembered","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":6},{"name":"userAgent","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"UserWithPrivileges","id":"interface-UserWithPrivileges-bda07e2556329d2e923636a4a8191f7a11bd38ab489c0c96b0d636a422772ddddb4ec9ac8dba68cf2cc29f6d82b850d939d1089da1e30e8d91038fc1f5c1b769","file":"src/app/auth/interfaces/user.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { JSONParsable } from \'@main/interfaces/json-parsable.interface\';\\n\\nexport interface User extends JSONParsable {\\n  id: number;\\n  name: string;\\n  surname: string;\\n  email: string;\\n  username: string;\\n  password: string;\\n  avatar: string;\\n  dateFormat: string;\\n  timeFormat: string;\\n  firstDayOfWeek: number;\\n}\\n\\nexport interface UserWithPrivileges extends JSONParsable {\\n  user: User;\\n  privileges: number;\\n}\\n\\nexport interface ModifyUser extends JSONParsable {\\n  name?: string;\\n  surname?: string;\\n  avatar?: string;\\n}\\n\\nexport interface UserData extends JSONParsable {\\n  id: number;\\n  name: string;\\n  surname: string;\\n  username: string;\\n  avatar: string;\\n}\\n","properties":[{"name":"privileges","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":18},{"name":"user","deprecated":false,"deprecationMessage":"","type":"User","optional":false,"description":"","line":17}],"indexSignatures":[],"kind":165,"methods":[],"extends":"JSONParsable"},{"name":"ValidationError","id":"interface-ValidationError-930babca5f011324f2141b9112cf771b83ca0d1e0908687d90fb13c7643fcf9e2411971f52e1fdf85b21d0d4fa8b08d60db14827fb1289dd1f91b2599a62e6a2","file":"src/app/_main/interfaces/validation-error.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface ValidationError {\\n  /**\\n   * Type of the error. For example \'required\', \'minlength\', \'maxlength\', \'pattern\', \'email\', etc.\\n   */\\n  type: string;\\n  /**\\n   * Human readable error message.\\n   */\\n  message: string;\\n}\\n","properties":[{"name":"message","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>Human readable error message.</p>\\n","line":12,"rawdescription":"\\n\\nHuman readable error message.\\n"},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>Type of the error. For example &#39;required&#39;, &#39;minlength&#39;, &#39;maxlength&#39;, &#39;pattern&#39;, &#39;email&#39;, etc.</p>\\n","line":8,"rawdescription":"\\n\\nType of the error. For example \'required\', \'minlength\', \'maxlength\', \'pattern\', \'email\', etc.\\n"}],"indexSignatures":[],"kind":165,"description":"<p>Validation error interface. Used with form controls to specify what validators returned errors.</p>\\n","rawdescription":"\\n\\nValidation error interface. Used with form controls to specify what validators returned errors.\\n","methods":[]},{"name":"Workspace","id":"interface-Workspace-53fb876078292f42fb437d2ebf44c6d405ca599d39b58ad123b09e3ebdfb87491929a9a2dbe348b838b1bb4fb69372d9959890416d4b15acc5b37e50e9e5efc5","file":"src/app/dashboard/interfaces/workspace.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Project } from \'./project.interface\';\\nimport { JSONParsable } from \'./../../_main/interfaces/json-parsable.interface\';\\n\\n/**\\n * Main workspace (projects/spaces grouping entity) interface\\n */\\nexport interface Workspace extends JSONParsable {\\n  /**\\n   * Workspace ID\\n   */\\n  id: number;\\n  /**\\n   * Workspace name\\n   */\\n  name: string;\\n\\n  projectsWithPrivileges: {\\n    project: Project;\\n    privileges: number;\\n  }[];\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Workspace ID</p>\\n","line":11,"rawdescription":"\\n\\nWorkspace ID\\n"},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>Workspace name</p>\\n","line":15,"rawdescription":"\\n\\nWorkspace name\\n"},{"name":"projectsWithPrivileges","deprecated":false,"deprecationMessage":"","type":"literal type[]","optional":false,"description":"","line":17}],"indexSignatures":[],"kind":165,"description":"<p>Main workspace (projects/spaces grouping entity) interface</p>\\n","rawdescription":"\\n\\nMain workspace (projects/spaces grouping entity) interface\\n","methods":[],"extends":"JSONParsable"}],"injectables":[{"name":"ApiService","id":"injectable-ApiService-2dfd1961f7a8e81f2d0d223b7f6574eccedea8990ffe80a44f2b81076be54fd3e10954c6a48f1bc951ac48a27c01a4ef14f5b7193aa62c2e3b95cceca553e61e","file":"src/app/_main/services/api/api.service.ts","properties":[{"name":"apiURL","defaultValue":"environment.apiURL","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>URL of the API. Provided in the environment configuration file.</p>\\n","line":19,"rawdescription":"\\n\\nURL of the API. Provided in the environment configuration file.\\n","modifierKind":[121]}],"methods":[{"name":"delete","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":["T"],"line":73,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSends DELETE request to the API.\\n","description":"<p>Sends DELETE request to the API.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2141,"end":2144,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"url"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2135,"end":2140,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>URL where to send request</p>\\n"},{"name":{"pos":2183,"end":2190,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"options"},"type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2177,"end":2182,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>advanced options to configure request</p>\\n"},{"tagName":{"pos":2235,"end":2242,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"get","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":["T"],"line":53,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSends GET request to the API.\\n","description":"<p>Sends GET request to the API.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1457,"end":1460,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"url"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1451,"end":1456,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>URL where to send request</p>\\n"},{"name":{"pos":1499,"end":1506,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"options"},"type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1493,"end":1498,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>advanced options to configure request</p>\\n"},{"tagName":{"pos":1551,"end":1558,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"getParamsFromFilters","args":[{"name":"filters","type":"DataFilter<T, V>[] | DataFilter<T | V>","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"RequestOptions","typeParameters":["T","V"],"line":97,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"filters","type":"DataFilter<T, V>[] | DataFilter<T | V>","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"patch","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":["T"],"line":93,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSends PATCH request to the API.\\n","description":"<p>Sends PATCH request to the API.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2827,"end":2830,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"url"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2821,"end":2826,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>URL where to send request</p>\\n"},{"name":{"pos":2869,"end":2876,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"options"},"type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2863,"end":2868,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>advanced options to configure request</p>\\n"},{"tagName":{"pos":2921,"end":2928,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"post","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":["T"],"line":63,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSends POST request to the API.\\n","description":"<p>Sends POST request to the API.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1797,"end":1800,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"url"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1791,"end":1796,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>URL where to send request</p>\\n"},{"name":{"pos":1839,"end":1846,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"options"},"type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1833,"end":1838,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>advanced options to configure request</p>\\n"},{"tagName":{"pos":1891,"end":1898,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"put","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":["T"],"line":83,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSends PUT request to the API.\\n","description":"<p>Sends PUT request to the API.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2486,"end":2489,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"url"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2480,"end":2485,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>URL where to send request</p>\\n"},{"name":{"pos":2528,"end":2535,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"options"},"type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2522,"end":2527,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>advanced options to configure request</p>\\n"},{"tagName":{"pos":2580,"end":2587,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"request","args":[{"name":"method","type":"string","deprecated":false,"deprecationMessage":""},{"name":"url","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":["T"],"line":33,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSends request to the API.\\n","description":"<p>Sends request to the API.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":799,"end":805,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"method"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":793,"end":798,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>HTTP method to use</p>\\n"},{"name":{"pos":837,"end":840,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"url"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":831,"end":836,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>URL where to send request</p>\\n"},{"name":{"pos":879,"end":886,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"options"},"type":"RequestOptions","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":873,"end":878,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>advanced options to configure request</p>\\n"},{"tagName":{"pos":931,"end":938,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Service to access the API</p>\\n","rawdescription":"\\n\\nService to access the API\\n","sourceCode":"import { HttpClient } from \'@angular/common/http\';\\nimport { Injectable } from \'@angular/core\';\\nimport { Service } from \'@main/decorators/service/service.decorator\';\\nimport { environment } from \'src/environments/environment\';\\nimport { RequestOptions } from \'../../interfaces/request-options.interface\';\\nimport { DataFilter, DataFilterType } from \'@main/interfaces/filters.interface\';\\n\\n/**\\n * Service to access the API\\n */\\n@Service()\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class ApiService {\\n  /**\\n   * URL of the API. Provided in the environment configuration file.\\n   */\\n  private apiURL: string = environment.apiURL;\\n\\n  /**\\n   * Default service constructor with `HttpClient` dependency\\n   */\\n  constructor(private httpClient: HttpClient) {}\\n\\n  /**\\n   * Sends request to the API.\\n   * @param method HTTP method to use\\n   * @param url URL where to send request\\n   * @param options advanced options to configure request\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public request<T = any>(method: string, url: string, options?: RequestOptions) {\\n    const params = this.getParamsFromFilters(options?.filters);\\n\\n    return this.httpClient.request<T>(method, this.apiURL + url, {\\n      responseType: \'json\' as any,\\n      withCredentials: true,\\n      ...options,\\n      params: {\\n        ...(options?.params || {}),\\n        ...(params || {}),\\n      },\\n    });\\n  }\\n\\n  /**\\n   * Sends GET request to the API.\\n   * @param url URL where to send request\\n   * @param options advanced options to configure request\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public get<T = any>(url: string, options?: RequestOptions) {\\n    return this.request<T>(\'GET\', url, options);\\n  }\\n\\n  /**\\n   * Sends POST request to the API.\\n   * @param url URL where to send request\\n   * @param options advanced options to configure request\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public post<T = any>(url: string, options?: RequestOptions) {\\n    return this.request<T>(\'POST\', url, options);\\n  }\\n\\n  /**\\n   * Sends DELETE request to the API.\\n   * @param url URL where to send request\\n   * @param options advanced options to configure request\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public delete<T = any>(url: string, options?: RequestOptions) {\\n    return this.request<T>(\'DELETE\', url, options);\\n  }\\n\\n  /**\\n   * Sends PUT request to the API.\\n   * @param url URL where to send request\\n   * @param options advanced options to configure request\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public put<T = any>(url: string, options?: RequestOptions) {\\n    return this.request<T>(\'PUT\', url, options);\\n  }\\n\\n  /**\\n   * Sends PATCH request to the API.\\n   * @param url URL where to send request\\n   * @param options advanced options to configure request\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public patch<T = any>(url: string, options?: RequestOptions) {\\n    return this.request<T>(\'PATCH\', url, options);\\n  }\\n\\n  private getParamsFromFilters<T, V extends string | boolean | number>(\\n    filters?: DataFilter<T, V>[] | DataFilter<T, V>,\\n  ) {\\n    if (!filters) {\\n      return;\\n    }\\n\\n    const params: RequestOptions[\'params\'] = {};\\n\\n    if (!Array.isArray(filters)) {\\n      filters = [filters];\\n    }\\n    for (const filter of filters) {\\n      if (filter.type == DataFilterType.BACKEND) {\\n        params[filter.field] = filter.value;\\n      }\\n    }\\n\\n    return params;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"<p>Default service constructor with <code>HttpClient</code> dependency</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":19,"rawdescription":"\\n\\nDefault service constructor with `HttpClient` dependency\\n","jsdoctags":[{"name":"httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"AuthService","id":"injectable-AuthService-dcbd90e1954af7de33002423a82930721571da7db11089cd29760ad8af26f6969e43838ec6db4b2fddee42dfa2eacf86ea4f6990ed756784b70bff85977a13d4","file":"src/app/auth/services/auth/auth.service.ts","properties":[{"name":"errorCodes","defaultValue":"{\\n    INVALID_TOKEN: {\\n      message: $localize`Invalid token`,\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":14,"modifierKind":[122,158],"inheritance":{"file":"BaseService"}},{"name":"_snackbarService","defaultValue":"this._injector.get(SnackbarService)","deprecated":false,"deprecationMessage":"","type":"SnackbarService","optional":false,"description":"","line":8,"modifierKind":[121],"inheritance":{"file":"BaseService"}}],"methods":[{"name":"clearCache","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"deleteAccount","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"deleteAccountConfirmation","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getLastLoginTime","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isLoggedIn","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"login","args":[{"type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"logout","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"recoverAccount","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"register","args":[{"type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"resetPassword","args":[{"type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setNewPassword","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""},{"name":"password","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"password","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleErrorWithCode","args":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":""},{"name":"code","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"code","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}},{"name":"validate","args":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OperatorFunction<E, E>","typeParameters":["E"],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, Injector } from \'@angular/core\';\\nimport { Service } from \'@main/decorators/service/service.decorator\';\\nimport dayjs from \'dayjs\';\\nimport { tap } from \'rxjs\';\\nimport { ApiService } from \'@main/services/api/api.service\';\\nimport { BaseService } from \'@main/services/base/base.service\';\\nimport { ErrorCodes, Errors } from \'@main/interfaces/http-error.interface\';\\n\\n@Service()\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class AuthService extends BaseService<Errors<\'INVALID_TOKEN\'>> {\\n  protected override errorCodes = {\\n    INVALID_TOKEN: {\\n      message: $localize`Invalid token`,\\n    },\\n  };\\n\\n  constructor(private injector: Injector, private apiService: ApiService) {\\n    super(injector);\\n  }\\n\\n  public register({\\n    email,\\n    password,\\n    name,\\n    surname,\\n    username,\\n  }: {\\n    email: string;\\n    password: string;\\n    name: string;\\n    surname: string;\\n    username: string;\\n  }) {\\n    return this.apiService.post(`/auth/register`, {\\n      body: { email, password, name, surname, username },\\n    });\\n  }\\n\\n  public login({\\n    email,\\n    password,\\n    remember,\\n  }: {\\n    email: string;\\n    password: string;\\n    remember: boolean;\\n  }) {\\n    return this.apiService\\n      .post(`/auth/login`, { body: { email, password, remember } })\\n      .pipe(tap(() => localStorage.setItem(\'lastLoginTry\', dayjs().valueOf().toString())));\\n  }\\n\\n  public logout() {\\n    localStorage.removeItem(\'logged\');\\n    return this.apiService.post(`/auth/logout`);\\n  }\\n\\n  public resetPassword({ email }: { email: string }) {\\n    return this.apiService.post(`/auth/password/recover`, { body: { email } });\\n  }\\n\\n  public setNewPassword(token: string, password: string) {\\n    return this.apiService.post(`/auth/password/reset`, { body: { token, password } });\\n  }\\n\\n  public deleteAccount() {\\n    return this.apiService.delete(`/auth/delete`);\\n  }\\n\\n  public deleteAccountConfirmation(token: string) {\\n    return this.apiService.delete(`/auth/delete/confirm`, { body: { token } }).pipe(\\n      this.validate({\\n        403: \'INVALID_TOKEN\',\\n        404: \'INVALID_TOKEN\',\\n      }),\\n    );\\n  }\\n\\n  public recoverAccount() {\\n    return this.apiService.post(`/auth/delete/recover`);\\n  }\\n\\n  public isLoggedIn() {\\n    if (localStorage.getItem(\'logged\')) {\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  public clearCache() {\\n    localStorage.removeItem(\'logged\');\\n  }\\n\\n  public getLastLoginTime() {\\n    return dayjs(Number(localStorage.getItem(\'lastLoginTry\') || 0));\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"BaseService","type":"injectable"},{"name":"DialogService","id":"injectable-DialogService-67f5877d593d449d06c01c6c81142ce9277d02ba6ebecdcd9412e95d10bf5232122329e6d6169fa9857c635477a7d08f91ad3e53c4cc6ddaf78e710a160ca5c2","file":"src/app/_main/services/dialog/dialog.service.ts","properties":[{"name":"dialogs$","defaultValue":"new BehaviorSubject<Map<number, MatDialogRef<unknown, any> | DialogRef>>(\\n    this.dialogsMap,\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[121]},{"name":"dialogsMap","defaultValue":"new Map()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[121]},{"name":"outlets","defaultValue":"new Map<DialogOutlet, any>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[121]}],"methods":[{"name":"alert","args":[{"name":"data","type":"AlertDialogData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens a alert/information dialog.\\n","description":"<p>Opens a alert/information dialog.</p>\\n","jsdoctags":[{"name":{"pos":2551,"end":2555,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"AlertDialogData","deprecated":false,"deprecationMessage":"","tagName":{"pos":2545,"end":2550,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Object to pass as data to the dialog</p>\\n"},{"tagName":{"pos":2599,"end":2606,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Reference to the newly-opened dialog.</p>\\n"}]},{"name":"closeAll","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":""},{"name":"confirm","args":[{"name":"data","type":"AlertDialogData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens a confirm dialog.\\n","description":"<p>Opens a confirm dialog.</p>\\n","jsdoctags":[{"name":{"pos":3075,"end":3079,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"AlertDialogData","deprecated":false,"deprecationMessage":"","tagName":{"pos":3069,"end":3074,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Object to pass as data to the dialog</p>\\n"},{"tagName":{"pos":3123,"end":3130,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Reference to the newly-opened dialog.</p>\\n"}]},{"name":"confirmProjectDelete","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"confirmWorkspaceDelete","args":[{"name":"workspace","type":"Workspace","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"workspace","type":"Workspace","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"open","args":[{"name":"component","type":"any","deprecated":false,"deprecationMessage":""},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","defaultValue":"{}"},{"name":"outlet","type":"DialogOutlet","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"MatDialogRef | DialogRef","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens a modal dialog containing the given component.\\n","description":"<p>Opens a modal dialog containing the given component.</p>\\n","jsdoctags":[{"name":{"pos":1305,"end":1314,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"component"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1299,"end":1304,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Type of the component to load into the dialog.</p>\\n"},{"name":{"pos":1374,"end":1378,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"pos":1368,"end":1373,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Object to pass as data to the dialog</p>\\n"},{"name":"outlet","type":"DialogOutlet","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"tagName":{"pos":1422,"end":1429,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Reference to the newly-opened dialog.</p>\\n"}]},{"name":"openErrorDialog","args":[{"name":"error","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"error","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOutlet","args":[{"name":"outlet","type":"DialogOutlet","deprecated":false,"deprecationMessage":""},{"name":"component","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"outlet","type":"DialogOutlet","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"component","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Service to manage dialogs.</p>\\n","rawdescription":"\\n\\nService to manage dialogs.\\n","sourceCode":"import { Injectable, Injector } from \'@angular/core\';\\nimport { MatDialog, MatDialogRef } from \'@angular/material/dialog\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { Workspace } from \'@dashboard/interfaces/workspace.interface\';\\nimport { DialogRef } from \'@main/classes/dialog-ref.class\';\\nimport { Service } from \'@main/decorators/service/service.decorator\';\\nimport { BehaviorSubject, filter } from \'rxjs\';\\nimport { v4 as uuid } from \'uuid\';\\nimport { AlertDialog, AlertDialogData, AlertDialogVariant } from \'../../dialogs/alert/alert.dialog\';\\n\\nexport enum DialogOutlet {\\n  CONTENT_RIGHT = \'CONTENT_RIGHT\',\\n}\\n\\n/**\\n * Service to manage dialogs.\\n */\\n@Service()\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class DialogService {\\n  private dialogsMap = new Map();\\n  private dialogs$ = new BehaviorSubject<Map<number, MatDialogRef<unknown, any> | DialogRef>>(\\n    this.dialogsMap,\\n  );\\n  private outlets = new Map<DialogOutlet, any>();\\n\\n  public get isAnyDialogOpen() {\\n    return this.dialogs$.getValue().size > 0;\\n  }\\n  /**\\n   * Default constructor with `MatDialog` dependency.\\n   * @param matDialog MatDialog instance\\n   */\\n  constructor(private matDialog: MatDialog, private injector: Injector) {}\\n\\n  /**\\n   * Opens a modal dialog containing the given component.\\n   * @param component Type of the component to load into the dialog.\\n   * @param data Object to pass as data to the dialog\\n   * @returns Reference to the newly-opened dialog.\\n   */\\n  open(component: any, data: any = {}, outlet?: DialogOutlet): MatDialogRef<any> | DialogRef {\\n    let dialog: MatDialogRef<any> | DialogRef;\\n\\n    if (outlet) {\\n      const outletComponent = this.outlets.get(outlet);\\n\\n      if (!outletComponent)\\n        throw new Error(\\n          `${outlet} is not assigned to any dialog outlet component, you need to call registerOutlet()`,\\n        );\\n\\n      dialog = outletComponent.renderDialog(component, data);\\n    } else {\\n      dialog = this.matDialog.open(component, {\\n        data,\\n        width: \'400px\',\\n      });\\n    }\\n\\n    const uid = uuid();\\n    this.dialogsMap.set(uid, dialog);\\n\\n    dialog.afterClosed().subscribe(() => {\\n      this.dialogsMap.delete(uid);\\n      this.dialogs$.next(this.dialogsMap);\\n    });\\n\\n    this.dialogs$.next(this.dialogsMap);\\n\\n    return dialog;\\n  }\\n\\n  closeAll() {\\n    this.dialogsMap.forEach((dialog) => {\\n      dialog.close();\\n    });\\n  }\\n\\n  registerOutlet(outlet: DialogOutlet, component: any) {\\n    this.outlets.set(outlet, component);\\n  }\\n\\n  /**\\n   * Opens a alert/information dialog.\\n   * @param data Object to pass as data to the dialog\\n   * @returns Reference to the newly-opened dialog.\\n   */\\n  alert(data: AlertDialogData) {\\n    return this.open(AlertDialog, data)\\n      .afterClosed()\\n      .pipe(filter((result) => result));\\n  }\\n\\n  openErrorDialog(error: string) {\\n    const data: AlertDialogData = {\\n      title: \'Error\',\\n      message: error,\\n      variant: AlertDialogVariant.IMPORTANT,\\n      cancelText: $localize`Close`,\\n    };\\n    return this.alert(data);\\n  }\\n\\n  /**\\n   * Opens a confirm dialog.\\n   * @param data Object to pass as data to the dialog\\n   * @returns Reference to the newly-opened dialog.\\n   */\\n  confirm(data: AlertDialogData) {\\n    return this.alert(data);\\n  }\\n\\n  confirmProjectDelete(project: Project) {\\n    return this.confirm({\\n      title: $localize`Delete project \\"${project.name}\\"`,\\n      message: $localize`Are you sure you want to delete project \\"${project.name}\\"?`,\\n      confirmText: $localize`Delete`,\\n      cancelText: $localize`Cancel`,\\n      variant: AlertDialogVariant.IMPORTANT,\\n    });\\n  }\\n\\n  confirmWorkspaceDelete(workspace: Workspace) {\\n    return this.confirm({\\n      title: $localize`Delete workspace \\"${workspace.name}\\"`,\\n      message: $localize`Are you sure you want to delete this workspace \\"${workspace.name}\\"?`,\\n      confirmText: $localize`Delete`,\\n      cancelText: $localize`Cancel`,\\n      variant: AlertDialogVariant.IMPORTANT,\\n    });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"<p>Default constructor with <code>MatDialog</code> dependency.</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"matDialog","type":"MatDialog","deprecated":false,"deprecationMessage":""},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""}],"line":31,"rawdescription":"\\n\\nDefault constructor with `MatDialog` dependency.\\n","jsdoctags":[{"name":{"pos":1118,"end":1127,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"matDialog"},"type":"MatDialog","deprecated":false,"deprecationMessage":"","tagName":{"pos":1112,"end":1117,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>MatDialog instance</p>\\n"},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"isAnyDialogOpen":{"name":"isAnyDialogOpen","getSignature":{"name":"isAnyDialogOpen","type":"","returnType":"","line":29}}},"type":"injectable"},{"name":"GitIntegrationService","id":"injectable-GitIntegrationService-fbc83373e170d3594bdf8dfd99d504ee56c12f31a6af69a83f4ae9965341c1b43db2c8bc95b2435512c73ae719fa42f4fac85f462cfb70dd314d97784ebd5178","file":"src/app/dashboard/services/git-integration/git-integration.service.ts","properties":[{"name":"errorCodes","defaultValue":"{\\n    PROJECT_ALREADY_HAS_INTEGRATION: {\\n      message: $localize`Project already has integration`,\\n    },\\n    PROJECT_OR_INSTALLATION_NOT_FOUND: {\\n      message: $localize`Project or git installation not found`,\\n    },\\n    INSTALLATION_WITH_GIVEN_ID_NOT_FOUND: {\\n      message: $localize`Installation with given id not found`,\\n    },\\n    PROJECT_OR_INTEGRATION_NOT_FOUND: {\\n      message: $localize`Project or integration not found`,\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":41,"modifierKind":[122],"inheritance":{"file":"BaseService"}},{"name":"_snackbarService","defaultValue":"this._injector.get(SnackbarService)","deprecated":false,"deprecationMessage":"","type":"SnackbarService","optional":false,"description":"","line":8,"modifierKind":[121],"inheritance":{"file":"BaseService"}}],"methods":[{"name":"attachGitHubIntegration","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"repositoryName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAttach GitHub repository to specific project\\n","description":"<p>Attach GitHub repository to specific project</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3454,"end":3463,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":3448,"end":3453,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id to attach GitHub account</p>\\n"},{"name":{"pos":3512,"end":3526,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"repositoryName"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":3506,"end":3511,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Repository name to connect with</p>\\n"}]},{"name":"deleteConnectedGitHubAccount","args":[{"name":"gitHubAccountId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDelete the given account connection\\n","description":"<p>Delete the given account connection</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4498,"end":4513,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"gitHubAccountId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":4492,"end":4497,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>GitHub account id</p>\\n"},{"tagName":{"pos":4538,"end":4545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>object with link to open the GitHub page with application removal</p>\\n"}]},{"name":"deleteGitHubIntegration","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<void>","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDetach GitHub integration from project\\n","description":"<p>Detach GitHub integration from project</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4959,"end":4968,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":4953,"end":4958,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id to remove integration from</p>\\n"}]},{"name":"getConnectedGitHubAccounts","args":[],"optional":false,"returnType":"Observable<GitAccount[]>","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet list of connected GitHub accounts\\n","description":"<p>Get list of connected GitHub accounts</p>\\n","decorators":[{"name":"Cache","stringifiedArguments":""}],"modifierKind":[123],"jsdoctags":[{"tagName":{"pos":4069,"end":4076,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>List of connected GitHub accounts</p>\\n"}]},{"name":"getGitHubAccountConnectedProjects","args":[{"name":"account","type":"GitAccount","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Project[]>","typeParameters":[],"line":208,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns list of projects connected to current user repositories\\n","description":"<p>Returns list of projects connected to current user repositories</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":7124,"end":7131,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"account"},"type":"GitAccount","deprecated":false,"deprecationMessage":"","tagName":{"pos":7118,"end":7123,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Current user GitAccount</p>\\n"},{"tagName":{"pos":7162,"end":7169,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>list of projects connected to current user repositories</p>\\n"}]},{"name":"getGitHubIntegration","args":[],"optional":false,"returnType":"Observable<GitIntegration>","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet GitHub integration object with repositories list\\n","description":"<p>Get GitHub integration object with repositories list</p>\\n","modifierKind":[123]},{"name":"gitHubIssueList","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":170,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet list of issues from GitHub\\n","description":"<p>Get list of issues from GitHub</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5694,"end":5703,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":5688,"end":5693,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Id of the project to get all issues available to connect to</p>\\n"},{"tagName":{"pos":5770,"end":5777,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>list of GitHub issues</p>\\n"}]},{"name":"gitHubPullList","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet list of pull requests from GitHub\\n","description":"<p>Get list of pull requests from GitHub</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":6090,"end":6099,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":6084,"end":6089,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Id of the project to get all pull requests available to connect to</p>\\n"},{"tagName":{"pos":6173,"end":6180,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>list of GitHub pull requests</p>\\n"}]},{"name":"hasGitHubIntegration","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":161,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCheck if project has GitHub integration (you can also check this with Project object by checking for\\n`gitHubIntegration` property)\\n","description":"<p>Check if project has GitHub integration (you can also check this with Project object by checking for\\n<code>gitHubIntegration</code> property)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5421,"end":5430,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":5415,"end":5420,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Id of the project to check</p>\\n"}]},{"name":"isOwnerOfRepository","args":[{"name":"repositoryName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"account","type":"GitAccount","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if the given account is the owner of the repository\\n```html\\n```","description":"<p>Checks if the given account is the owner of the repository</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\"></code></pre></div>","modifierKind":[123],"jsdoctags":[{"name":{"pos":6519,"end":6533,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"repositoryName"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":6513,"end":6518,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Repository name with it&#39;s owner ex.</p>\\n"},{"name":{"pos":6594,"end":6601,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"account"},"type":"GitAccount","deprecated":false,"deprecationMessage":"","tagName":{"pos":6588,"end":6593,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>GitHub account object to test with</p>\\n"},{"tagName":{"pos":6643,"end":6650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>this.gitHubIntegrationService.isOwnerOfRepository(&#39;@czemar/cli&#39;, account)</p>\\n"},{"tagName":{"pos":6731,"end":6738,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>true if the repository is owned by the account</p>\\n"}]},{"name":"postGitHubIntegration","args":[{"name":"installationId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<void>","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAfter GitHub authentication, GitHub page redirects to our system with installationId, so It is needed to send the installationId to backend by ourselves.\\n","description":"<p>After GitHub authentication, GitHub page redirects to our system with installationId, so It is needed to send the installationId to backend by ourselves.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2921,"end":2935,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"installationId"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2915,"end":2920,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Installation id returned by GitHub in redirect link</p>\\n"}]},{"name":"startGitHubIntegration","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nStart GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\\n```html\\n```","description":"<p>Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\"></code></pre></div>","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":2088,"end":2095,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>this.gitHubIntegrationService.startGitHubIntegration()</p>\\n"},{"tagName":{"pos":2157,"end":2164,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Observable<boolean> true if the opened window with GitHub integration was closed</p>\\n"}]},{"name":"handleErrorWithCode","args":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":""},{"name":"code","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"code","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}},{"name":"validate","args":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OperatorFunction<E, E>","typeParameters":["E"],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}}],"deprecated":false,"deprecationMessage":"","description":"<p>How to use Git integration service:</p>\\n<ol>\\n<li><p>Run method <code>startGitHubIntegration()</code> to start the integration process and open the browser to the GitHub login page.</p>\\n</li>\\n<li><p>Run method <code>postGitHubIntegration(installationId: string)</code> after receiving <code>installationId</code> to finalize integration\\nprocess.</p>\\n</li>\\n</ol>\\n","rawdescription":"\\n\\nHow to use Git integration service:\\n\\n1. Run method `startGitHubIntegration()` to start the integration process and open the browser to the GitHub login page.\\n\\n2. Run method `postGitHubIntegration(installationId: string)` after receiving `installationId` to finalize integration\\nprocess.\\n\\n","sourceCode":"import { Injectable, Injector } from \'@angular/core\';\\nimport { GitAccount, GitIntegration } from \'@dashboard/interfaces/git-integration.interface\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { Service } from \'@main/decorators/service/service.decorator\';\\nimport { ApiService } from \'@main/services/api/api.service\';\\nimport { filter, interval, map, mergeMap, Observable, take } from \'rxjs\';\\nimport { ProjectService } from \'../project/project.service\';\\nimport { Errors } from \'@main/interfaces/http-error.interface\';\\nimport { BaseService } from \'@main/services/base/base.service\';\\nimport { Cache } from \'@main/decorators/cache/cache.decorator\';\\n\\n/**\\n * How to use Git integration service:\\n *\\n * 1. Run method `startGitHubIntegration()` to start the integration process and open the browser to the GitHub login page.\\n *\\n * 2. Run method `postGitHubIntegration(installationId: string)` after receiving `installationId` to finalize integration\\n * process.\\n *\\n */\\n@Service()\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class GitIntegrationService extends BaseService<\\n  Errors<\\n    | \'PROJECT_ALREADY_HAS_INTEGRATION\'\\n    | \'PROJECT_OR_INSTALLATION_NOT_FOUND\'\\n    | \'INSTALLATION_WITH_GIVEN_ID_NOT_FOUND\'\\n    | \'PROJECT_OR_INTEGRATION_NOT_FOUND\'\\n  >\\n> {\\n  constructor(\\n    private injector: Injector,\\n    private apiService: ApiService,\\n    private projectService: ProjectService,\\n  ) {\\n    super(injector);\\n  }\\n\\n  protected errorCodes = {\\n    PROJECT_ALREADY_HAS_INTEGRATION: {\\n      message: $localize`Project already has integration`,\\n    },\\n    PROJECT_OR_INSTALLATION_NOT_FOUND: {\\n      message: $localize`Project or git installation not found`,\\n    },\\n    INSTALLATION_WITH_GIVEN_ID_NOT_FOUND: {\\n      message: $localize`Installation with given id not found`,\\n    },\\n    PROJECT_OR_INTEGRATION_NOT_FOUND: {\\n      message: $localize`Project or integration not found`,\\n    },\\n  };\\n\\n  /**\\n   * Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\\n   * @example this.gitHubIntegrationService.startGitHubIntegration()\\n   * @returns Observable<boolean> true if the opened window with GitHub integration was closed\\n   */\\n  public startGitHubIntegration(): Observable<boolean> {\\n    return this.apiService.get(\'/user/integration/github/repository\').pipe(\\n      map((response: any) => response.link),\\n      mergeMap((url) => {\\n        const win = window.open(url, \'_blank\');\\n\\n        if (!win) throw new Error(\'This browser does not support window.open\');\\n\\n        return interval(100).pipe(\\n          map(() => win.closed),\\n          filter((closed) => closed),\\n          take(1),\\n        );\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * After GitHub authentication, GitHub page redirects to our system with installationId, so It is needed to send the installationId to backend by ourselves.\\n   * @param installationId Installation id returned by GitHub in redirect link\\n   */\\n  public postGitHubIntegration(installationId: string): Observable<void> {\\n    return this.apiService.post(`/user/integration/github`, {\\n      params: { installationId },\\n    });\\n  }\\n\\n  /**\\n   * Get GitHub integration object with repositories list\\n   */\\n  public getGitHubIntegration(): Observable<GitIntegration> {\\n    return this.apiService.get(\'/user/integration/github/repository\');\\n  }\\n\\n  /**\\n   * Attach GitHub repository to specific project\\n   * @param projectId Project id to attach GitHub account\\n   * @param repositoryName Repository name to connect with\\n   */\\n  public attachGitHubIntegration(\\n    projectId: number,\\n    repositoryName: string,\\n  ): Observable<{ id: number; name: string; gitHubIntegration: string }> {\\n    return this.apiService\\n      .post(`/project/${projectId}/integration/github`, {\\n        body: repositoryName,\\n      })\\n      .pipe(\\n        this.validate({\\n          400: \'PROJECT_ALREADY_HAS_INTEGRATION\',\\n          404: \'PROJECT_OR_INSTALLATION_NOT_FOUND\',\\n        }),\\n      );\\n  }\\n\\n  /**\\n   * Get list of connected GitHub accounts\\n   * @returns List of connected GitHub accounts\\n   */\\n  @Cache()\\n  public getConnectedGitHubAccounts(): Observable<GitAccount[]> {\\n    return this.apiService\\n      .get(\'/user/integration/github\')\\n      .pipe(\\n        map((accounts: GitAccount[]) =>\\n          accounts.map((account) => ({ ...account, gitHubUsername: `@${account.gitHubUsername}` })),\\n        ),\\n      );\\n  }\\n\\n  /**\\n   * Delete the given account connection\\n   * @param gitHubAccountId GitHub account id\\n   * @returns object with link to open the GitHub page with application removal\\n   */\\n  public deleteConnectedGitHubAccount(gitHubAccountId: number): Observable<{ link: string }> {\\n    return this.apiService.delete(`/user/integration/github/${gitHubAccountId}`).pipe(\\n      this.validate({\\n        404: \'INSTALLATION_WITH_GIVEN_ID_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Detach GitHub integration from project\\n   * @param projectId Project id to remove integration from\\n   */\\n  public deleteGitHubIntegration(projectId: number): Observable<void> {\\n    return this.apiService.delete(`/project/${projectId}/integration/github`).pipe(\\n      this.validate({\\n        404: \'PROJECT_OR_INTEGRATION_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Check if project has GitHub integration (you can also check this with Project object by checking for\\n   * `gitHubIntegration` property)\\n   * @param projectId Id of the project to check\\n   */\\n  public hasGitHubIntegration(projectId: number): Observable<boolean> {\\n    return this.projectService.get(projectId).pipe(map((project) => !!project.gitHubIntegration));\\n  }\\n\\n  /**\\n   * Get list of issues from GitHub\\n   * @param projectId Id of the project to get all issues available to connect to\\n   * @returns list of GitHub issues\\n   */\\n  public gitHubIssueList(projectId: number) {\\n    return this.apiService.get(`/project/${projectId}/integration/git/issue`).pipe(\\n      this.validate({\\n        404: \'PROJECT_OR_INTEGRATION_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Get list of pull requests from GitHub\\n   * @param projectId Id of the project to get all pull requests available to connect to\\n   * @returns list of GitHub pull requests\\n   */\\n  public gitHubPullList(projectId: number) {\\n    return this.apiService.get(`/project/${projectId}/integration/git/pull`).pipe(\\n      this.validate({\\n        404: \'PROJECT_OR_INTEGRATION_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Checks if the given account is the owner of the repository\\n   * @param repositoryName Repository name with it\'s owner ex. @czemar/cli\\n   * @param account GitHub account object to test with\\n   * @example this.gitHubIntegrationService.isOwnerOfRepository(\'@czemar/cli\', account)\\n   * @returns true if the repository is owned by the account\\n   */\\n  public isOwnerOfRepository(repositoryName: string, account: GitAccount): boolean {\\n    const preparedUsername = account.gitHubUsername.replace(\'@\', \'\');\\n    return Boolean(repositoryName.match(new RegExp(\'^\' + preparedUsername + \'/*\')));\\n  }\\n\\n  /**\\n   * Returns list of projects connected to current user repositories\\n   * @param account Current user GitAccount\\n   * @returns list of projects connected to current user repositories\\n   */\\n  public getGitHubAccountConnectedProjects(account: GitAccount): Observable<Project[]> {\\n    return this.projectService\\n      .list()\\n      .pipe(\\n        map((projects) =>\\n          projects.filter(\\n            (project: Project) =>\\n              project.gitHubIntegration &&\\n              this.isOwnerOfRepository(project.gitHubIntegration, account),\\n          ),\\n        ),\\n      );\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":""}],"line":32,"jsdoctags":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"BaseService","type":"injectable"},{"name":"IntegrationModuleService","id":"injectable-IntegrationModuleService-841bbbb30eca0df61328ca1e863eacd11fddba8ccabb6b0d162bfa443fbb127abdb1e0422314f247d7c9fde652c4f4100c37d26162f1262aad25955317ae4abf","file":"src/app/dashboard/modules/integration-modules/services/integration-module/integration-module.service.ts","properties":[{"name":"registry$","defaultValue":"new BehaviorSubject<IntegrationModuleEntry[]>([])","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14,"modifierKind":[124,144]}],"methods":[{"name":"openIntegrationModuleSelectDialog","args":[{"name":"data","type":"IntegrationModuleSelectDialogData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"data","type":"IntegrationModuleSelectDialogData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"register","args":[{"name":"entry","type":"IntegrationModuleEntry","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"entry","type":"IntegrationModuleEntry","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"unregister","args":[{"name":"entry","type":"IntegrationModuleEntry","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"entry","type":"IntegrationModuleEntry","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Service } from \'@main/decorators/service/service.decorator\';\\nimport { IntegrationModuleEntry } from \'@main/interfaces/integration-module.interface\';\\nimport { BehaviorSubject } from \'rxjs\';\\nimport { DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { IntegrationModuleSelectDialog } from \'@dashboard/modules/integration-modules/dialogs/integration-module-select/integration-module-select.dialog\';\\nimport { IntegrationModuleSelectDialogData } from \'./../../dialogs/integration-module-select/integration-module-select.dialog\';\\n\\n@Service()\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class IntegrationModuleService {\\n  public static readonly registry$ = new BehaviorSubject<IntegrationModuleEntry[]>([]);\\n\\n  public get registry$() {\\n    return IntegrationModuleService.registry$;\\n  }\\n\\n  constructor(private dialogService: DialogService) {}\\n\\n  public static register(entry: IntegrationModuleEntry) {\\n    const _regVal = this.registry$.value;\\n    _regVal.push(entry);\\n    this.registry$.next(_regVal);\\n  }\\n\\n  public static unregister(entry: IntegrationModuleEntry) {\\n    const _regVal = this.registry$.value;\\n    this.registry$.next(_regVal.filter(({ id }) => id !== entry.id));\\n  }\\n\\n  public openIntegrationModuleSelectDialog(data: IntegrationModuleSelectDialogData) {\\n    return this.dialogService.open(IntegrationModuleSelectDialog, data);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"registry$":{"name":"registry$","getSignature":{"name":"registry$","type":"","returnType":"","line":16}}},"type":"injectable"},{"name":"MemberService","id":"injectable-MemberService-78c18ac1a68c5b7e34da27b04cafe1eeb2e3272e76a9bab005dda972942276de9ed331b296ccb47c8e1012930d4f57dcaad19a97c88d7bc89e3513a71f4f9498","file":"src/app/dashboard/services/member/member.service.ts","properties":[{"name":"errorCodes","defaultValue":"{\\n    NOT_ENOUGH_PRIVILEGES: {\\n      message: $localize`You don\'t have enough privileges to do this`,\\n    },\\n    PROJECT_NOT_FOUND: {\\n      message: $localize`Project not found`,\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":17,"modifierKind":[122,158],"inheritance":{"file":"BaseService"}},{"name":"_snackbarService","defaultValue":"this._injector.get(SnackbarService)","deprecated":false,"deprecationMessage":"","type":"SnackbarService","optional":false,"description":"","line":8,"modifierKind":[121],"inheritance":{"file":"BaseService"}}],"methods":[{"name":"add","args":[{"name":"emails","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"projects","type":"number[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdds members to projects.\\n","description":"<p>Adds members to projects.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2297,"end":2303,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"emails"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":2291,"end":2296,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>emails of people to add</p>\\n"},{"name":"projects","type":"number[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":2394,"end":2401,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"leave","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<undefined>","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLet member leave project.\\n","description":"<p>Let member leave project.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1863,"end":1872,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1857,"end":1862,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>project which are members from</p>\\n"},{"tagName":{"pos":1969,"end":1976,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"list","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<ProjectMember[]>","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLists members in given project\\n","description":"<p>Lists members in given project</p>\\n","decorators":[{"name":"Cache","stringifiedArguments":""}],"modifierKind":[123],"jsdoctags":[{"name":{"pos":1038,"end":1047,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1032,"end":1037,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>project which are members from</p>\\n"},{"tagName":{"pos":1085,"end":1092,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"map","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Map<number, ProjectMember>>","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates members map from given project\\n","description":"<p>Creates members map from given project</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2743,"end":2752,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":2737,"end":2742,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>project which are members from</p>\\n"},{"tagName":{"pos":2790,"end":2797,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"remove","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"id","type":"number[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<ProjectMember[]>","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves members from project\\n","description":"<p>Removes members from project</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1356,"end":1365,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1350,"end":1355,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>project which are members from</p>\\n"},{"name":{"pos":1409,"end":1411,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"number[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":1403,"end":1408,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>list of member ids to remove from project</p>\\n"},{"tagName":{"pos":1460,"end":1467,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"handleErrorWithCode","args":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":""},{"name":"code","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"code","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}},{"name":"validate","args":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OperatorFunction<E, E>","typeParameters":["E"],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, Injector } from \'@angular/core\';\\nimport { ProjectMember } from \'@dashboard/interfaces/project-member.interface\';\\nimport { map, Observable } from \'rxjs\';\\nimport { ApiService } from \'@main/services/api/api.service\';\\nimport { Service } from \'@main/decorators/service/service.decorator\';\\nimport { BaseService } from \'@main/services/base/base.service\';\\nimport { Errors } from \'@main/interfaces/http-error.interface\';\\nimport { Cache } from \'@main/decorators/cache/cache.decorator\';\\n\\n@Service()\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class MemberService extends BaseService<\\n  Errors<\'NOT_ENOUGH_PRIVILEGES\' | \'PROJECT_NOT_FOUND\'>\\n> {\\n  protected override errorCodes = {\\n    NOT_ENOUGH_PRIVILEGES: {\\n      message: $localize`You don\'t have enough privileges to do this`,\\n    },\\n    PROJECT_NOT_FOUND: {\\n      message: $localize`Project not found`,\\n    },\\n  };\\n\\n  constructor(private injector: Injector, private apiService: ApiService) {\\n    super(injector);\\n  }\\n\\n  /**\\n   * Lists members in given project\\n   * @param projectId project which are members from\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  @Cache()\\n  public list(projectId: number): Observable<ProjectMember[]> {\\n    return this.apiService.get(`/project/${projectId}/member`);\\n  }\\n\\n  /**\\n   * Removes members from project\\n   * @param projectId project which are members from\\n   * @param id list of member ids to remove from project\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public remove(projectId: number, id: number[]): Observable<ProjectMember[]> {\\n    return this.apiService.put(`/project/${projectId}/member`, { body: id }).pipe(\\n      this.validate({\\n        403: \'NOT_ENOUGH_PRIVILEGES\',\\n        404: \'PROJECT_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Let member leave project.\\n   * @param projectId project which are members from\\n   * @param id id of the member who will leave the project\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public leave(projectId: number): Observable<null> {\\n    return this.apiService.delete(`/project/${projectId}/member`).pipe(\\n      this.validate({\\n        404: \'PROJECT_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Adds members to projects.\\n   * @param emails emails of people to add\\n   * @param projectList projects where people will be added\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public add(\\n    emails: string[],\\n    projects: number[],\\n  ): Observable<{ emails: string[]; projectList: number[] }> {\\n    return this.apiService.post(`/project/member`, { body: { emails, projects } });\\n  }\\n\\n  /**\\n   * Creates members map from given project\\n   * @param projectId project which are members from\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public map(projectId: number): Observable<Map<number, ProjectMember>> {\\n    return this.list(projectId).pipe(\\n      map((members) =>\\n        members.reduce((acc: Map<number, ProjectMember>, member: ProjectMember) => {\\n          acc.set(member.user.id, member);\\n          return acc;\\n        }, new Map<number, ProjectMember>()),\\n      ),\\n    );\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""}],"line":24,"jsdoctags":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"BaseService","type":"injectable"},{"name":"ProjectService","id":"injectable-ProjectService-3c825ee9885e8c1d23ea418ba5dbd9437cf143588f2f71b77396663287786249384e3de48cb7871c0c88ed21a7b5e64b0fe3e1dd653ca016ef44f8ee089cd768","file":"src/app/dashboard/services/project/project.service.ts","properties":[{"name":"errorCodes","defaultValue":"{\\n    PROJECT_NOT_FOUND: {\\n      message: $localize`Project not found`,\\n    },\\n    WORKSPACE_NOT_FOUND: {\\n      message: $localize`Workspace not found`,\\n    },\\n    FORM_VALIDATION_ERROR: {\\n      message: $localize`Form validation error`,\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":19,"modifierKind":[122,158],"inheritance":{"file":"BaseService"}},{"name":"_snackbarService","defaultValue":"this._injector.get(SnackbarService)","deprecated":false,"deprecationMessage":"","type":"SnackbarService","optional":false,"description":"","line":8,"modifierKind":[121],"inheritance":{"file":"BaseService"}}],"methods":[{"name":"create","args":[{"name":"project","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Project>","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates a new project.\\n","description":"<p>Creates a new project.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2757,"end":2764,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"project"},"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"pos":2751,"end":2756,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>project to add</p>\\n"},{"tagName":{"pos":2786,"end":2793,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"delete","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<void>","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDeletes the project by its ID.\\n","description":"<p>Deletes the project by its ID.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1783,"end":1792,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1777,"end":1782,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>identifier of the project to delete from the API</p>\\n"},{"tagName":{"pos":1848,"end":1855,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"get","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Project>","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets a project by its ID.\\n","description":"<p>Gets a project by its ID.</p>\\n","decorators":[{"name":"Cache","stringifiedArguments":""}],"modifierKind":[123],"jsdoctags":[{"name":{"pos":1315,"end":1324,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1309,"end":1314,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>identifier of the project to get from the API</p>\\n"},{"tagName":{"pos":1377,"end":1384,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"list","args":[],"optional":false,"returnType":"Observable<Project[]>","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nList projects in given workspace.\\n","description":"<p>List projects in given workspace.</p>\\n","modifierKind":[123]},{"name":"update","args":[{"name":"project","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Project>","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates a project.\\n","description":"<p>Updates a project.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2234,"end":2241,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"project"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":2228,"end":2233,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>project object to update in the API</p>\\n"},{"tagName":{"pos":2284,"end":2291,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"handleErrorWithCode","args":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":""},{"name":"code","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"code","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}},{"name":"validate","args":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OperatorFunction<E, E>","typeParameters":["E"],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, Injector } from \'@angular/core\';\\nimport { Workspace } from \'@dashboard/interfaces/workspace.interface\';\\nimport { map, Observable } from \'rxjs\';\\nimport { ApiService } from \'@main/services/api/api.service\';\\nimport { Project } from \'../../interfaces/project.interface\';\\nimport { Service } from \'@main/decorators/service/service.decorator\';\\nimport { Errors } from \'@main/interfaces/http-error.interface\';\\nimport { BaseService } from \'@main/services/base/base.service\';\\nimport { WorkspaceService } from \'@dashboard/services/workspace/workspace.service\';\\nimport { Cache } from \'@main/decorators/cache/cache.decorator\';\\n\\n@Service()\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class ProjectService extends BaseService<\\n  Errors<\'PROJECT_NOT_FOUND\' | \'WORKSPACE_NOT_FOUND\' | \'FORM_VALIDATION_ERROR\'>\\n> {\\n  protected override errorCodes = {\\n    PROJECT_NOT_FOUND: {\\n      message: $localize`Project not found`,\\n    },\\n    WORKSPACE_NOT_FOUND: {\\n      message: $localize`Workspace not found`,\\n    },\\n    FORM_VALIDATION_ERROR: {\\n      message: $localize`Form validation error`,\\n    },\\n  };\\n\\n  constructor(\\n    private injector: Injector,\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n  ) {\\n    super(injector);\\n  }\\n\\n  /**\\n   * Gets a project by its ID.\\n   * @param projectId identifier of the project to get from the API\\n   * @returns Request observable, which completes when request is finished\\n   * @throws HTTPError with `404` status if the project does not exist\\n   */\\n  @Cache()\\n  public get(projectId: number): Observable<Project> {\\n    return this.apiService.get(`/project/${projectId}`).pipe(\\n      this.validate({\\n        404: \'PROJECT_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Deletes the project by its ID.\\n   * @param projectId identifier of the project to delete from the API\\n   * @returns Request observable, which completes when request is finished\\n   * @throws HTTPError with `404` status if the project does not exist\\n   */\\n  public delete(projectId: number): Observable<void> {\\n    return this.apiService.delete(`/project/${projectId}`).pipe(\\n      this.validate({\\n        404: \'PROJECT_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Updates a project.\\n   * @param project project object to update in the API\\n   * @returns Request observable, which completes when request is finished\\n   * @throws HTTPError with `404` status if the project does not exist\\n   */\\n  public update(project: Partial<Project> & { id: number }): Observable<Project> {\\n    return this.apiService.put(`/project/${project.id}`, { body: project }).pipe(\\n      this.validate({\\n        400: \'FORM_VALIDATION_ERROR\',\\n        404: \'PROJECT_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Creates a new project.\\n   * @param project project to add\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public create(project: { name: string; workspaceId: number }): Observable<Project> {\\n    return this.apiService.post(\'/project\', { body: project }).pipe(\\n      this.validate({\\n        400: \'FORM_VALIDATION_ERROR\',\\n        404: \'WORKSPACE_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * List projects in given workspace.\\n   */\\n  public list(): Observable<Project[]> {\\n    return this.workspaceService.list().pipe(\\n      map((workspaces) =>\\n        workspaces.reduce((projects: any, workspace: Workspace) => {\\n          projects.push(...workspace.projectsWithPrivileges.map((p) => p.project));\\n          return projects;\\n        }, []),\\n      ),\\n    );\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":29,"jsdoctags":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"BaseService","type":"injectable"},{"name":"RouterExtensionsService","id":"injectable-RouterExtensionsService-3c13c58beb892664f6acdfedd2cded7793784e170af5a5f983a09dc50d185b7b421c710b5d801dc2b502c6ef130da34559045b18863b8e75930d5dedd8ab45f3","file":"src/app/_main/services/router-extensions/router-extensions.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class RouterExtensionsService {\\n  constructor(private router: Router) {}\\n  public get snapshot() {\\n    if (!this.router.routerState) return { params: {}, data: {} };\\n\\n    let node = (this.router.routerState.snapshot as any)._root;\\n    while (node.children[0]) {\\n      node = node.children[0];\\n    }\\n\\n    return { params: node.value.params, data: node.value.data };\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":7,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"snapshot":{"name":"snapshot","getSignature":{"name":"snapshot","type":"","returnType":"","line":9}}},"type":"injectable"},{"name":"SessionsService","id":"injectable-SessionsService-1ab8615a9713454a4898c1f0ed8823c057ef598c9e9344dd13839f2ba34cf51455a0ef27b3c93698d8441c4ee76a3e9d8111cb15127d7695879a034fe6198b26","file":"src/app/settings/services/sessions.service.ts","properties":[{"name":"errorCodes","defaultValue":"{\\n    CANNOT_REVOKE_SESSION: {\\n      message: $localize`Cannot revoke session`,\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":12,"modifierKind":[122,158],"inheritance":{"file":"BaseService"}},{"name":"_snackbarService","defaultValue":"this._injector.get(SnackbarService)","deprecated":false,"deprecationMessage":"","type":"SnackbarService","optional":false,"description":"","line":8,"modifierKind":[121],"inheritance":{"file":"BaseService"}}],"methods":[{"name":"delete","args":[{"name":"id","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"id","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"list","args":[],"optional":false,"returnType":"Observable<UserSession[]>","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleErrorWithCode","args":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":""},{"name":"code","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"code","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}},{"name":"validate","args":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OperatorFunction<E, E>","typeParameters":["E"],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, Injector } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { UserSession } from \'src/app/settings/interfaces/session.interface\';\\nimport { ApiService } from \'@main/services/api/api.service\';\\nimport { BaseService } from \'@main/services/base/base.service\';\\nimport { Errors } from \'@main/interfaces/http-error.interface\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class SessionsService extends BaseService<Errors<\'CANNOT_REVOKE_SESSION\'>> {\\n  protected override errorCodes = {\\n    CANNOT_REVOKE_SESSION: {\\n      message: $localize`Cannot revoke session`,\\n    },\\n  };\\n\\n  constructor(private injector: Injector, private apiService: ApiService) {\\n    super(injector);\\n  }\\n\\n  public list(): Observable<UserSession[]> {\\n    return this.apiService.get(`/session`);\\n  }\\n\\n  public delete(id: number) {\\n    return this.apiService.delete(`/session/${id}`).pipe(\\n      this.validate({\\n        403: \'CANNOT_REVOKE_SESSION\',\\n      }),\\n    );\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"BaseService","type":"injectable"},{"name":"SnackbarService","id":"injectable-SnackbarService-9d2ea4c3e996f634c7441d25e12f5ccffa7570a724f98c5759947207c55efe67568508eb3e5ee7f6998df77ef5a7103f42f6feb5abbc1b71654d84ac158843ae","file":"src/app/_main/services/snackbar/snackbar.service.ts","properties":[{"name":"snackbars$","defaultValue":"new BehaviorSubject<Map<string, SnackbarData>>(new Map())","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14,"modifierKind":[123]}],"methods":[{"name":"close","args":[{"name":"uid","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"uid","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"closeAll","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"show","args":[{"name":"message","type":"string","deprecated":false,"deprecationMessage":""},{"name":"color","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"\'gray\'"},{"name":"duration","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"4000"}],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"color","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"\'gray\'","tagName":{"text":"param"}},{"name":"duration","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"4000","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { SnackbarData } from \'@main/components/snackbar/snackbar.interface\';\\nimport { Service } from \'@main/decorators/service/service.decorator\';\\nimport { BehaviorSubject } from \'rxjs\';\\nimport { v4 as uuid } from \'uuid\';\\n\\n@Service()\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class SnackbarService {\\n  constructor() {}\\n\\n  public snackbars$ = new BehaviorSubject<Map<string, SnackbarData>>(new Map());\\n\\n  public show(message: string, color: SnackbarData[\'color\'] = \'gray\', duration: number = 4000) {\\n    const data = { message, duration, color };\\n    const uid = uuid();\\n\\n    const map = this.snackbars$.value;\\n    map.set(uid, data);\\n\\n    this.snackbars$.next(map);\\n  }\\n\\n  public close(uid: string) {\\n    const map = this.snackbars$.value;\\n    map.delete(uid);\\n  }\\n\\n  public closeAll() {\\n    this.snackbars$.next(new Map());\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":11},"type":"injectable"},{"name":"StatusService","id":"injectable-StatusService-19f29bfb87e73ac550bfe41cfe3df305d4f0ed9871d0d6117293ea07eea2cf732ab71b471027807ca030314cf11dd9c4c51faef8ea76e8a485372e86c4b77f59","file":"src/app/tasks/services/status/status.service.ts","properties":[{"name":"errorCodes","defaultValue":"{\\n    PROJECT_NOT_FOUND: {\\n      message: $localize`Project not found`,\\n    },\\n    PROJECT_OR_STATUS_NOT_FOUND: {\\n      message: $localize`Project or status not found`,\\n    },\\n    FORM_VALIDATION_ERROR: {\\n      message: $localize`Form validation error`,\\n    },\\n    STATUS_IS_NOT_EMPTY: {\\n      message: $localize`Status is not empty`,\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":24,"modifierKind":[122,158],"inheritance":{"file":"BaseService"}},{"name":"_snackbarService","defaultValue":"this._injector.get(SnackbarService)","deprecated":false,"deprecationMessage":"","type":"SnackbarService","optional":false,"description":"","line":8,"modifierKind":[121],"inheritance":{"file":"BaseService"}}],"methods":[{"name":"board","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<[]>","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"create","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"status","type":"Status","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Status>","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates new status\\n","description":"<p>Creates new status</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2425,"end":2434,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":2419,"end":2424,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to create status</p>\\n"},{"name":{"pos":2389,"end":2395,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"status"},"type":"Status","deprecated":false,"deprecationMessage":"","tagName":{"pos":2383,"end":2388,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Status to create</p>\\n"},{"tagName":{"pos":2476,"end":2483,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable with the created status</p>\\n"}]},{"name":"delete","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"status","type":"Status","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<undefined>","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDeletes status\\n","description":"<p>Deletes status</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3369,"end":3378,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":3363,"end":3368,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to create status</p>\\n"},{"name":{"pos":3330,"end":3336,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"status"},"type":"Status","deprecated":false,"deprecationMessage":"","tagName":{"pos":3324,"end":3329,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Status id to delete</p>\\n"},{"tagName":{"pos":3420,"end":3427,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable</p>\\n"}]},{"name":"get","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"statusId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Status[]>","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet status information\\n","description":"<p>Get status information</p>\\n","decorators":[{"name":"Cache","stringifiedArguments":""}],"modifierKind":[123],"jsdoctags":[{"name":{"pos":1996,"end":2005,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1990,"end":1995,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to get status</p>\\n"},{"name":{"pos":1932,"end":1940,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"statusId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1926,"end":1931,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Status id needed to get status information</p>\\n"},{"tagName":{"pos":2044,"end":2051,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable with the status</p>\\n"}]},{"name":"getDefaultStatusList","args":[],"optional":false,"returnType":"Status[]","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"list","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Status[]>","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet list of statuses\\n","description":"<p>Get list of statuses</p>\\n","decorators":[{"name":"Cache","stringifiedArguments":""}],"modifierKind":[123],"jsdoctags":[{"name":{"pos":1564,"end":1573,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1558,"end":1563,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to create status</p>\\n"},{"tagName":{"pos":1615,"end":1622,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable with list of statuses</p>\\n"}]},{"name":"listWithTasks","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<StatusWithTasks[]>","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openCreateNewStatusDialog","args":[],"optional":false,"returnType":"Observable<Status>","typeParameters":[],"line":192,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens dialog to create new task\\n","description":"<p>Opens dialog to create new task</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":6058,"end":6065,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>created task, EMPTY otherwise (when user cancels the dialog)</p>\\n"}]},{"name":"openEditStatusDialog","args":[{"name":"status","type":"Status","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Status>","typeParameters":[],"line":177,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens dialog to edit specific status\\n","description":"<p>Opens dialog to edit specific status</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5574,"end":5580,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"status"},"type":"Status","deprecated":false,"deprecationMessage":"","tagName":{"pos":5568,"end":5573,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Status to update</p>\\n"},{"tagName":{"pos":5604,"end":5611,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Observable with updated status, EMPTY otherwise (when user cancels the dialog)</p>\\n"}]},{"name":"update","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"status","type":"Status","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Status>","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates status\\n","description":"<p>Updates status</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2885,"end":2894,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":2879,"end":2884,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to create status</p>\\n"},{"name":{"pos":2849,"end":2855,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"status"},"type":"Status","deprecated":false,"deprecationMessage":"","tagName":{"pos":2843,"end":2848,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Status to update</p>\\n"},{"tagName":{"pos":2936,"end":2943,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable with the updated status</p>\\n"}]},{"name":"handleErrorWithCode","args":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":""},{"name":"code","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"code","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}},{"name":"validate","args":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OperatorFunction<E, E>","typeParameters":["E"],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, Injector } from \'@angular/core\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport { combineLatest, filter, map, Observable } from \'rxjs\';\\nimport { ApiService } from \'@main/services/api/api.service\';\\nimport { DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { StatusDialog, StatusDialogData } from \'@dashboard/dialogs/status/status.dialog\';\\nimport { BaseService } from \'@main/services/base/base.service\';\\nimport { Errors } from \'@main/interfaces/http-error.interface\';\\nimport { TaskService } from \'../task/task.service\';\\nimport { Status, StatusWithTasks } from \'@tasks/interfaces/status.interface\';\\nimport { Cache } from \'@main/decorators/cache/cache.decorator\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class StatusService extends BaseService<\\n  Errors<\\n    | \'PROJECT_NOT_FOUND\'\\n    | \'PROJECT_OR_STATUS_NOT_FOUND\'\\n    | \'FORM_VALIDATION_ERROR\'\\n    | \'STATUS_IS_NOT_EMPTY\'\\n  >\\n> {\\n  protected override errorCodes = {\\n    PROJECT_NOT_FOUND: {\\n      message: $localize`Project not found`,\\n    },\\n    PROJECT_OR_STATUS_NOT_FOUND: {\\n      message: $localize`Project or status not found`,\\n    },\\n    FORM_VALIDATION_ERROR: {\\n      message: $localize`Form validation error`,\\n    },\\n    STATUS_IS_NOT_EMPTY: {\\n      message: $localize`Status is not empty`,\\n    },\\n  };\\n\\n  constructor(\\n    private injector: Injector,\\n    private apiService: ApiService,\\n    private taskService: TaskService,\\n    private dialogService: DialogService,\\n  ) {\\n    super(injector);\\n  }\\n\\n  /**\\n   * Get list of statuses\\n   * @param projectId Project id needed to create status\\n   * @returns Request observable with list of statuses\\n   */\\n  @Cache()\\n  public list(projectId: number): Observable<Status[]> {\\n    return this.apiService.get(`/project/${projectId}/status/`).pipe(\\n      this.validate({\\n        404: \'PROJECT_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Get status information\\n   * @param statusId Status id needed to get status information\\n   * @param projectId Project id needed to get status\\n   * @returns Request observable with the status\\n   */\\n  @Cache()\\n  public get(projectId: number, statusId: number): Observable<Status[]> {\\n    return this.apiService.get(`/project/${projectId}/status/${statusId}`).pipe(\\n      this.validate({\\n        404: \'PROJECT_OR_STATUS_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Creates new status\\n   * @param status Status to create\\n   * @param projectId Project id needed to create status\\n   * @returns Request observable with the created status\\n   */\\n  public create(projectId: number, status: Status): Observable<Status> {\\n    return this.apiService.post(`/project/${projectId}/status/`, { body: status }).pipe(\\n      this.validate({\\n        400: \'FORM_VALIDATION_ERROR\',\\n        404: \'PROJECT_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Updates status\\n   * @param status Status to update\\n   * @param projectId Project id needed to create status\\n   * @returns Request observable with the updated status\\n   */\\n  public update(projectId: number, status: Status): Observable<Status> {\\n    return this.apiService.put(`/project/${projectId}/status/${status.id}`, { body: status }).pipe(\\n      this.validate({\\n        400: \'FORM_VALIDATION_ERROR\',\\n        404: \'PROJECT_OR_STATUS_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Deletes status\\n   * @param status Status id to delete\\n   * @param projectId Project id needed to create status\\n   * @returns Request observable\\n   */\\n  public delete(projectId: number, status: Status): Observable<null> {\\n    return this.apiService.delete(`/project/${projectId}/status/${status.id}`).pipe(\\n      this.validate({\\n        400: \'STATUS_IS_NOT_EMPTY\',\\n        404: \'PROJECT_OR_STATUS_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  public getDefaultStatusList(): Status[] {\\n    return [\\n      { name: \'To Do\', color: 0, ordinal: 0, begin: true, final: false },\\n      { name: \'In Progress\', color: 0, ordinal: 1, begin: false, final: false },\\n      { name: \'Done\', color: 0, ordinal: 2, begin: false, final: true },\\n    ];\\n  }\\n\\n  public listWithTasks(projectId: number): Observable<StatusWithTasks[]> {\\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\\n      map(([statuses, tasks]) => {\\n        statuses.forEach((status) => {\\n          (status as StatusWithTasks).tasks = tasks.filter((task) => task.statusId === status.id);\\n        });\\n        return statuses as StatusWithTasks[];\\n      }),\\n    );\\n  }\\n\\n  public board(projectId: number): Observable<[Task | string, StatusWithTasks[]][]> {\\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\\n      map(([statuses, tasks]) => {\\n        const board: [Task | string, StatusWithTasks[]][] = [];\\n        const OTHER = [\'OTHER\', statuses.map((s) => ({ ...s, tasks: [] }))] as [\\n          string,\\n          StatusWithTasks[],\\n        ];\\n\\n        for (const task of tasks) {\\n          if (task.subTasks?.length) {\\n            const statusesWithSubtasks = statuses.map((status) => ({\\n              ...status,\\n              tasks: task.subTasks?.filter((subtask: Task) => subtask.statusId === status.id) || [],\\n            }));\\n            board.push([task, statusesWithSubtasks]);\\n          } else {\\n            let status = OTHER[1].find((status) => status.id === task.statusId)!;\\n            if (!status.tasks) {\\n              status.tasks = [];\\n            }\\n            status.tasks.push(task);\\n          }\\n        }\\n\\n        board.push(OTHER);\\n        return board;\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Opens dialog to edit specific status\\n   * @param status Status to update\\n   * @returns Observable with updated status, EMPTY otherwise (when user cancels the dialog)\\n   */\\n  public openEditStatusDialog(status: Status): Observable<Status> {\\n    return this.dialogService\\n      .open(StatusDialog, {\\n        status,\\n        title: $localize`Edit status`,\\n        confirmButtonText: $localize`Update`,\\n      } as StatusDialogData)\\n      .afterClosed()\\n      .pipe(filter(Boolean));\\n  }\\n\\n  /**\\n   * Opens dialog to create new task\\n   * @returns created task, EMPTY otherwise (when user cancels the dialog)\\n   */\\n  public openCreateNewStatusDialog(): Observable<Status> {\\n    return this.dialogService\\n      .open(StatusDialog, {\\n        title: $localize`Create new status`,\\n        confirmButtonText: $localize`Create`,\\n      } as StatusDialogData)\\n      .afterClosed()\\n      .pipe(filter(Boolean));\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""}],"line":37,"jsdoctags":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"BaseService","type":"injectable"},{"name":"TaskService","id":"injectable-TaskService-4aa157e112bd2644df92eebc31d8be83b95fb20386ebd669d0eba8a3fa2ea087db4d66f40ecf49c9b75a284eba4c50a95527857448f0bc9667e85caffbc9b0a5","file":"src/app/tasks/services/task/task.service.ts","properties":[{"name":"errorCodes","defaultValue":"{\\n    FORM_VALIDATION_ERROR: {\\n      message: $localize`Form validation error`,\\n    },\\n    PROJECT_NOT_FOUND: {\\n      message: $localize`Project not found`,\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":43,"modifierKind":[122,158],"inheritance":{"file":"BaseService"}},{"name":"lists","defaultValue":"new Map<Project[\'id\'], ReplaySubject<Task[]>>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":41,"modifierKind":[121]},{"name":"_snackbarService","defaultValue":"this._injector.get(SnackbarService)","deprecated":false,"deprecationMessage":"","type":"SnackbarService","optional":false,"description":"","line":8,"modifierKind":[121],"inheritance":{"file":"BaseService"}}],"methods":[{"name":"assign","args":[{"name":"assigneeId","type":"number | null","deprecated":false,"deprecationMessage":""},{"name":"taskId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Task>","typeParameters":[],"line":284,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAssign task to specific user\\n","description":"<p>Assign task to specific user</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"assigneeId","type":"number | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":{"pos":8456,"end":8462,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"taskId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":8450,"end":8455,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>task to assign</p>\\n"},{"name":{"pos":8490,"end":8499,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":8484,"end":8489,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>project id needed to assign task</p>\\n"},{"tagName":{"pos":8539,"end":8546,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Updated task object</p>\\n"}]},{"name":"changeStatus","args":[{"name":"statusId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"taskId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Task>","typeParameters":[],"line":295,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChange status of specific task\\n","description":"<p>Change status of specific task</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":8793,"end":8801,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"statusId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":8787,"end":8792,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>status to change task to</p>\\n"},{"name":{"pos":8839,"end":8845,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"taskId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":8833,"end":8838,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>task to change status of</p>\\n"},{"name":{"pos":8883,"end":8892,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":8877,"end":8882,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>project id needed to change status</p>\\n"},{"tagName":{"pos":8934,"end":8941,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Updated task object</p>\\n"}]},{"name":"create","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"task","type":"Task","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Task>","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates new task\\n","description":"<p>Creates new task</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2644,"end":2653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":2638,"end":2643,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to create task</p>\\n"},{"name":{"pos":2612,"end":2616,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"task"},"type":"Task","deprecated":false,"deprecationMessage":"","tagName":{"pos":2606,"end":2611,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Task to create</p>\\n"},{"tagName":{"pos":2693,"end":2700,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable with the created task</p>\\n"}]},{"name":"delete","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"taskId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<undefined>","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDeletes task\\n","description":"<p>Deletes task</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3768,"end":3777,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":3762,"end":3767,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to delete task</p>\\n"},{"name":{"pos":3731,"end":3737,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"taskId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":3725,"end":3730,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Task id to delete</p>\\n"},{"tagName":{"pos":3817,"end":3824,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable</p>\\n"}]},{"name":"deleteWithConfirmation","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"task","type":"Task","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean | null>","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens dialog to delete specific task\\n","description":"<p>Opens dialog to delete specific task</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4139,"end":4148,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":4133,"end":4138,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to delete task</p>\\n"},{"name":{"pos":4194,"end":4198,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"task"},"type":"Task","deprecated":false,"deprecationMessage":"","tagName":{"pos":4188,"end":4193,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Task to delete</p>\\n"},{"tagName":{"pos":4220,"end":4227,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)</p>\\n"}]},{"name":"list","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"filters","type":"DataFilter<Task, any>[] | DataFilter<Task | any>","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<Task[]>","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet list of tasks\\n","description":"<p>Get list of tasks</p>\\n","decorators":[{"name":"Cache","stringifiedArguments":""}],"modifierKind":[123],"jsdoctags":[{"name":{"pos":2164,"end":2173,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":2158,"end":2163,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to list all tasks</p>\\n"},{"name":"filters","type":"DataFilter<Task, any>[] | DataFilter<Task | any>","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"tagName":{"pos":2216,"end":2223,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable with list of tasks</p>\\n"}]},{"name":"listEpics","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":321,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nList all epics for specific project\\n","description":"<p>List all epics for specific project</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":9786,"end":9795,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":9780,"end":9785,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>project identifier to list epics from</p>\\n"},{"tagName":{"pos":9840,"end":9847,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>observable with list of epics</p>\\n"}]},{"name":"listTaskTypes","args":[{"name":"parentTaskType","type":"TaskType","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":304,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nList all task types for specific parent task\\n","description":"<p>List all task types for specific parent task</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":9197,"end":9211,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"parentTaskType"},"type":"TaskType","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":9191,"end":9196,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>parent task type to list task types for</p>\\n"},{"tagName":{"pos":9258,"end":9265,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>observable with list of task types</p>\\n"}]},{"name":"openCreateNewTaskDialog","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":188,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens dialog to create new task\\n","description":"<p>Opens dialog to create new task</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":5816,"end":5823,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>created task, EMPTY otherwise (when user cancels the dialog)</p>\\n"}]},{"name":"openCreateSubtaskDialog","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"parentTask","type":"Task","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Task | null>","typeParameters":[],"line":215,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens dialog to create new subtask\\n","description":"<p>Opens dialog to create new subtask</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":6406,"end":6415,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":6400,"end":6405,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to update subtask</p>\\n"},{"name":{"pos":6464,"end":6474,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"parentTask"},"type":"Task","deprecated":false,"deprecationMessage":"","tagName":{"pos":6458,"end":6463,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Parent task id to which attach subtask</p>\\n"},{"tagName":{"pos":6520,"end":6527,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>created subtask, EMPTY otherwise (when user cancels the dialog)</p>\\n"}]},{"name":"openEditTaskDialog","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"task","type":"Task","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Task | null>","typeParameters":[],"line":161,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens dialog to edit specific task\\n","description":"<p>Opens dialog to edit specific task</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5039,"end":5048,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":5033,"end":5038,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to update task</p>\\n"},{"name":{"pos":5094,"end":5098,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"task"},"type":"Task","deprecated":false,"deprecationMessage":"","tagName":{"pos":5088,"end":5093,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Task to update</p>\\n"},{"tagName":{"pos":5120,"end":5127,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Observable with updated task, EMPTY otherwise (when user cancels the dialog)</p>\\n"}]},{"name":"schedule","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Schedule>","typeParameters":[],"line":246,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerates schedule object for specific project\\n","description":"<p>Generates schedule object for specific project</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":7326,"end":7335,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":7320,"end":7325,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id to generate schedule from</p>\\n"},{"tagName":{"pos":7379,"end":7386,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Schedule object with all tasks</p>\\n"}]},{"name":"update","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"task","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Task>","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates task\\n","description":"<p>Updates task</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3186,"end":3195,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":3180,"end":3185,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id needed to update task</p>\\n"},{"name":{"pos":3154,"end":3158,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"task"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":3148,"end":3153,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Task to update</p>\\n"},{"tagName":{"pos":3235,"end":3242,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable with the updated task</p>\\n"}]},{"name":"handleErrorWithCode","args":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":""},{"name":"code","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"code","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}},{"name":"validate","args":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OperatorFunction<E, E>","typeParameters":["E"],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, Injector } from \'@angular/core\';\\nimport { ProjectMember } from \'@dashboard/interfaces/project-member.interface\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { MemberService } from \'@dashboard/services/member/member.service\';\\nimport { Enum } from \'@main/classes/enum.class\';\\nimport { Cache } from \'@main/decorators/cache/cache.decorator\';\\nimport { Service } from \'@main/decorators/service/service.decorator\';\\nimport { AlertDialogVariant } from \'@main/dialogs/alert/alert.dialog\';\\nimport { DataFilter } from \'@main/interfaces/filters.interface\';\\nimport { Errors } from \'@main/interfaces/http-error.interface\';\\nimport { ApiService } from \'@main/services/api/api.service\';\\nimport { BaseService } from \'@main/services/base/base.service\';\\nimport { DialogOutlet, DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { SnackbarService } from \'@main/services/snackbar/snackbar.service\';\\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from \'@tasks/dialogs/task/task.dialog\';\\nimport { TaskType, TaskTypeHierarchy } from \'@tasks/enums/task-type.enum\';\\nimport { Schedule } from \'@tasks/interfaces/schedule.interface\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport * as dayjs from \'dayjs\';\\nimport { isNumber } from \'lodash-es\';\\nimport {\\n  BehaviorSubject,\\n  combineLatest,\\n  EMPTY,\\n  map,\\n  Observable,\\n  of,\\n  ReplaySubject,\\n  switchMap,\\n  take,\\n  tap,\\n} from \'rxjs\';\\n\\n@Service()\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class TaskService extends BaseService<\\n  Errors<\'FORM_VALIDATION_ERROR\' | \'PROJECT_NOT_FOUND\'>\\n> {\\n  private lists = new Map<Project[\'id\'], ReplaySubject<Task[]>>();\\n\\n  protected override errorCodes = {\\n    FORM_VALIDATION_ERROR: {\\n      message: $localize`Form validation error`,\\n    },\\n    PROJECT_NOT_FOUND: {\\n      message: $localize`Project not found`,\\n    },\\n  };\\n\\n  constructor(\\n    private injector: Injector,\\n    private apiService: ApiService,\\n    private dialogService: DialogService,\\n    private memberService: MemberService,\\n    private snackbarService: SnackbarService,\\n  ) {\\n    super(injector);\\n  }\\n\\n  /**\\n   * Get list of tasks\\n   * @param projectId Project id needed to list all tasks\\n   * @returns Request observable with list of tasks\\n   */\\n  @Cache()\\n  public list(\\n    projectId: number,\\n    filters?: DataFilter<Task, any>[] | DataFilter<Task, any>,\\n  ): Observable<Task[]> {\\n    return this.apiService.get<Task[]>(`/project/${projectId}/task`, { filters }).pipe(\\n      this.validate({\\n        404: \'PROJECT_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Creates new task\\n   * @param task Task to create\\n   * @param projectId Project id needed to create task\\n   * @returns Request observable with the created task\\n   */\\n  public create(projectId: number, task: Task): Observable<Task> {\\n    return this.apiService.post(`/project/${projectId}/task/`, { body: task }).pipe(\\n      this.validate({\\n        400: \'FORM_VALIDATION_ERROR\',\\n        404: \'PROJECT_NOT_FOUND\',\\n      }),\\n      tap(() => {\\n        this.snackbarService.show($localize`Task created successfully!`);\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Updates task\\n   * @param task Task to update\\n   * @param projectId Project id needed to update task\\n   * @returns Request observable with the updated task\\n   */\\n  public update(projectId: number, task: Partial<Task> & { id: number }): Observable<Task> {\\n    return this.apiService.put(`/project/${projectId}/task/${task.id}`, { body: task }).pipe(\\n      this.validate({\\n        400: \'FORM_VALIDATION_ERROR\',\\n        404: \'PROJECT_NOT_FOUND\',\\n      }),\\n      tap(() => {\\n        this.snackbarService.show($localize`Task updated successfully!`);\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Deletes task\\n   * @param taskId Task id to delete\\n   * @param projectId Project id needed to delete task\\n   * @returns Request observable\\n   */\\n  public delete(projectId: number, taskId: number): Observable<null> {\\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}`).pipe(\\n      this.validate({\\n        404: \'PROJECT_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Opens dialog to delete specific task\\n   * @param projectId Project id needed to delete task\\n   * @param task Task to delete\\n   * @returns Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)\\n   */\\n  public deleteWithConfirmation(projectId: number, task: Task): Observable<boolean | null> {\\n    return this.dialogService\\n      .confirm({\\n        title: $localize`Delete task \\"${task.name}\\"`,\\n        message: $localize`Are you sure you want to delete this task \\"${task.name}\\"?`,\\n        confirmText: $localize`Delete`,\\n        cancelText: $localize`Cancel`,\\n        variant: AlertDialogVariant.IMPORTANT,\\n      })\\n      .pipe(\\n        switchMap((confirmed) => {\\n          if (confirmed) {\\n            return this.delete(projectId, task.id).pipe(switchMap(() => of(true)));\\n          } else {\\n            return EMPTY;\\n          }\\n        }),\\n      );\\n  }\\n\\n  /**\\n   * Opens dialog to edit specific task\\n   * @param projectId Project id needed to update task\\n   * @param task Task to update\\n   * @returns Observable with updated task, EMPTY otherwise (when user cancels the dialog)\\n   */\\n  public openEditTaskDialog(projectId: number, task: Task): Observable<Task | null> {\\n    return this.dialogService\\n      .open(\\n        TaskDialog,\\n        {\\n          variant: TaskDialogVariant.EDIT,\\n          projectId,\\n          task,\\n        } as TaskDialogData,\\n        DialogOutlet.CONTENT_RIGHT,\\n      )\\n      .afterClosed()\\n      .pipe(\\n        switchMap((updatedTask: any) => {\\n          if (updatedTask) {\\n            return this.update(projectId, updatedTask);\\n          } else {\\n            return EMPTY;\\n          }\\n        }),\\n      );\\n  }\\n\\n  /**\\n   * Opens dialog to create new task\\n   * @returns created task, EMPTY otherwise (when user cancels the dialog)\\n   */\\n  public openCreateNewTaskDialog() {\\n    return this.dialogService\\n      .open(\\n        TaskDialog,\\n        {\\n          variant: TaskDialogVariant.CREATE,\\n        } as TaskDialogData,\\n        DialogOutlet.CONTENT_RIGHT,\\n      )\\n      .afterClosed()\\n      .pipe(\\n        switchMap((task: Task) => {\\n          if (task) {\\n            return this.create(task.projectId, task);\\n          } else {\\n            return EMPTY;\\n          }\\n        }),\\n      );\\n  }\\n\\n  /**\\n   * Opens dialog to create new subtask\\n   * @param projectId Project id needed to update subtask\\n   * @param parentTask Parent task id to which attach subtask\\n   * @returns created subtask, EMPTY otherwise (when user cancels the dialog)\\n   */\\n  public openCreateSubtaskDialog(projectId: number, parentTask: Task): Observable<Task | null> {\\n    return this.dialogService\\n      .open(\\n        TaskDialog,\\n        {\\n          variant: TaskDialogVariant.CREATE,\\n          projectId: projectId,\\n          parentTask: parentTask,\\n          task: {\\n            parentTaskId: parentTask.id,\\n          },\\n        } as TaskDialogData,\\n        DialogOutlet.CONTENT_RIGHT,\\n      )\\n      .afterClosed()\\n      .pipe(\\n        switchMap((newTask: any) => {\\n          if (newTask) {\\n            return this.create(projectId, newTask);\\n          } else {\\n            return EMPTY;\\n          }\\n        }),\\n      );\\n  }\\n\\n  /**\\n   * Generates schedule object for specific project\\n   * @param projectId Project id to generate schedule from\\n   * @returns Schedule object with all tasks\\n   */\\n  public schedule(projectId: number): Observable<Schedule> {\\n    return combineLatest([\\n      this.list(projectId).pipe(take(1)),\\n      this.memberService.list(projectId).pipe(take(1)),\\n    ]).pipe(\\n      map(([tasks, members]: [tasks: Task[], members: ProjectMember[]]) => {\\n        const schedules = [];\\n\\n        for (const { user } of members) {\\n          schedules.push({ user, tasks: new Map() });\\n        }\\n\\n        for (const task of tasks) {\\n          const schedule = schedules.find((s) => s.user.id === task.assigneeId);\\n\\n          if (!schedule) continue;\\n\\n          if (task.estimatedDate) {\\n            schedule.tasks.set(dayjs(task.estimatedDate).format(\'YYYY-MM-DD\'), task);\\n          } else {\\n            if (!schedule.tasks.has(null)) schedule.tasks.set(null, []);\\n\\n            schedule.tasks.get(null).push(task);\\n          }\\n        }\\n\\n        return schedules;\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Assign task to specific user\\n   * @param userId user to assign task to (if null, task will be unassigned)\\n   * @param taskId task to assign\\n   * @param projectId project id needed to assign task\\n   * @returns Updated task object\\n   */\\n  public assign(assigneeId: number | null, taskId: number, projectId: number): Observable<Task> {\\n    return this.update(projectId, { id: taskId, assigneeId });\\n  }\\n\\n  /**\\n   * Change status of specific task\\n   * @param statusId status to change task to\\n   * @param taskId task to change status of\\n   * @param projectId project id needed to change status\\n   * @returns Updated task object\\n   */\\n  public changeStatus(statusId: number, taskId: number, projectId: number): Observable<Task> {\\n    return this.update(projectId, { id: taskId, statusId });\\n  }\\n\\n  /**\\n   * List all task types for specific parent task\\n   * @param parentTaskType parent task type to list task types for\\n   * @returns observable with list of task types\\n   */\\n  public listTaskTypes(parentTaskType?: TaskType) {\\n    const parentTaskTypeNormal = isNumber(parentTaskType) ? parentTaskType : -1;\\n    const desiredTaskTypes = TaskTypeHierarchy[parentTaskTypeNormal];\\n    const taskTypesEntries = Enum.entries(TaskType);\\n\\n    return new BehaviorSubject(\\n      desiredTaskTypes.map(\\n        (taskType) => taskTypesEntries.find(([_, value]) => value === taskType)!,\\n      ),\\n    );\\n  }\\n\\n  /**\\n   * List all epics for specific project\\n   * @param projectId project identifier to list epics from\\n   * @returns observable with list of epics\\n   */\\n  public listEpics(projectId: number) {\\n    return this.list(projectId).pipe(\\n      map((tasks) => tasks.filter((task) => task.type === TaskType.EPIC)),\\n    );\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""},{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":""},{"name":"snackbarService","type":"SnackbarService","deprecated":false,"deprecationMessage":""}],"line":50,"jsdoctags":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"snackbarService","type":"SnackbarService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"BaseService","type":"injectable"},{"name":"TrackerService","id":"injectable-TrackerService-d7d3c8c0fa0b71f583a1054f2b7101dd51607cccab7c42e7e07252b4ad0a7457212cc9efd33e409f2deb89c733c13fb8c4aed5c27575e2fd3948c4b749b2058d","file":"src/app/tasks/services/tracker/tracker.service.ts","properties":[],"methods":[{"name":"create","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"taskId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"track","type":"TimeTrack","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<TimeTrack>","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates new time track\\n","description":"<p>Creates new time track</p>\\n","jsdoctags":[{"name":{"pos":2218,"end":2227,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":2212,"end":2217,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id to get time tracks from</p>\\n"},{"name":{"pos":2275,"end":2281,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"taskId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":2269,"end":2274,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Task id to get time tracks from</p>\\n"},{"name":{"pos":2326,"end":2331,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"track"},"type":"TimeTrack","deprecated":false,"deprecationMessage":"","tagName":{"pos":2320,"end":2325,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Time track to create</p>\\n"},{"tagName":{"pos":2359,"end":2366,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>observable with created time track</p>\\n"}]},{"name":"delete","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"taskId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"trackId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<void>","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDeletes existing time track\\n","description":"<p>Deletes existing time track</p>\\n","jsdoctags":[{"name":{"pos":1795,"end":1804,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1789,"end":1794,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id to get time tracks from</p>\\n"},{"name":{"pos":1852,"end":1858,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"taskId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1846,"end":1851,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Task id to get time tracks from</p>\\n"},{"name":"trackId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":1945,"end":1952,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>observable with deleted time track</p>\\n"}]},{"name":"deleteWithConfirmation","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"taskId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"trackId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"start","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"taskId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<TimeTrack>","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nStarts specific time track\\n","description":"<p>Starts specific time track</p>\\n","jsdoctags":[{"name":{"pos":932,"end":941,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":926,"end":931,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id to get time tracks from</p>\\n"},{"name":{"pos":989,"end":995,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"taskId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":983,"end":988,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Task id to get time tracks from</p>\\n"},{"tagName":{"pos":1034,"end":1041,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>observable with started time track</p>\\n"}]},{"name":"stop","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"taskId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<TimeTrack>","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nStops specific time track\\n","description":"<p>Stops specific time track</p>\\n","jsdoctags":[{"name":{"pos":575,"end":584,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":569,"end":574,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id to get time tracks from</p>\\n"},{"name":{"pos":632,"end":638,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"taskId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":626,"end":631,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Task id to get time tracks from</p>\\n"},{"tagName":{"pos":677,"end":684,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>observable with stopped time track</p>\\n"}]},{"name":"update","args":[{"name":"projectId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"taskId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"track","type":"TimeTrack","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<TimeTrack>","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates existing time track\\n","description":"<p>Updates existing time track</p>\\n","jsdoctags":[{"name":{"pos":1344,"end":1353,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"projectId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1338,"end":1343,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Project id to get time tracks from</p>\\n"},{"name":{"pos":1401,"end":1407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"taskId"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1395,"end":1400,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Task id to get time tracks from</p>\\n"},{"name":{"pos":1452,"end":1457,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"track"},"type":"TimeTrack","deprecated":false,"deprecationMessage":"","tagName":{"pos":1446,"end":1451,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Time track to update</p>\\n"},{"tagName":{"pos":1485,"end":1492,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>observable with updated time track</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'@main/services/api/api.service\';\\nimport { TimeTrack } from \'./../../interfaces/time-track.interface\';\\nimport { Observable, switchMap, EMPTY } from \'rxjs\';\\nimport { DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { AlertDialogVariant } from \'@main/dialogs/alert/alert.dialog\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class TrackerService {\\n  constructor(private apiService: ApiService, private dialogService: DialogService) {}\\n\\n  /**\\n   * Stops specific time track\\n   * @param projectId Project id to get time tracks from\\n   * @param taskId Task id to get time tracks from\\n   * @returns observable with stopped time track\\n   */\\n  stop(projectId: number, taskId: number): Observable<TimeTrack> {\\n    return this.apiService.post(`/project/${projectId}/task/${taskId}/track/stop`);\\n  }\\n\\n  /**\\n   * Starts specific time track\\n   * @param projectId Project id to get time tracks from\\n   * @param taskId Task id to get time tracks from\\n   * @returns observable with started time track\\n   * @throws Error if time track is already started\\n   */\\n  start(projectId: number, taskId: number): Observable<TimeTrack> {\\n    return this.apiService.post(`/project/${projectId}/task/${taskId}/track/start`);\\n  }\\n\\n  /**\\n   * Updates existing time track\\n   * @param projectId Project id to get time tracks from\\n   * @param taskId Task id to get time tracks from\\n   * @param track Time track to update\\n   * @returns observable with updated time track\\n   */\\n  update(projectId: number, taskId: number, track: TimeTrack): Observable<TimeTrack> {\\n    return this.apiService.put(`/project/${projectId}/task/${taskId}/track/${track.id}`, {\\n      body: track,\\n    });\\n  }\\n\\n  /**\\n   * Deletes existing time track\\n   * @param projectId Project id to get time tracks from\\n   * @param taskId Task id to get time tracks from\\n   * @param timeTrackId Time track id to delete\\n   * @returns observable with deleted time track\\n   */\\n  delete(projectId: number, taskId: number, trackId: number): Observable<void> {\\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}/track/${trackId}`);\\n  }\\n\\n  /**\\n   * Creates new time track\\n   * @param projectId Project id to get time tracks from\\n   * @param taskId Task id to get time tracks from\\n   * @param track Time track to create\\n   * @returns observable with created time track\\n   */\\n  create(projectId: number, taskId: number, track: TimeTrack): Observable<TimeTrack> {\\n    return this.apiService.post(`/project/${projectId}/task/${taskId}/track`, { body: track });\\n  }\\n\\n  public deleteWithConfirmation(projectId: number, taskId: number, trackId: number) {\\n    return this.dialogService\\n      .confirm({\\n        title: $localize`Delete time track`,\\n        message: $localize`Are you sure you want to delete this time track? This action is irreversible`,\\n        confirmText: $localize`Delete`,\\n        cancelText: $localize`Cancel`,\\n        variant: AlertDialogVariant.IMPORTANT,\\n      })\\n      .pipe(\\n        switchMap((confirmed) => {\\n          if (!confirmed) return EMPTY;\\n          return this.delete(projectId, taskId, trackId);\\n        }),\\n      );\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UserService","id":"injectable-UserService-cf734803fc9b93240cb77338cce1a8227e497949dc4c68fb2da1712948d68c25a9b4dc66c306005242157f430c553667c32e4b952f6fc0be946cbf45ad2c202b","file":"src/app/auth/services/user/user.service.ts","properties":[{"name":"userData$","deprecated":false,"deprecationMessage":"","type":"Observable<User>","optional":true,"description":"","line":13,"modifierKind":[121]}],"methods":[{"name":"clearCache","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getDateFormat","args":[],"optional":false,"returnType":"Observable<string>","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getMyself","args":[],"optional":false,"returnType":"Observable<User>","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getUserDefaultPreferences","args":[],"optional":false,"returnType":"{ dateFormat: string; timeFormat: string; firstDayOfWeek: number; }","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isLocallyLogged","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"update","args":[{"name":"user","type":"Partial<User>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<ModifyUser>","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"user","type":"Partial<User>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ModifyUser, User } from \'@auth/interfaces/user.interface\';\\nimport { ApiService } from \'@main/services/api/api.service\';\\nimport { Observable, map, shareReplay } from \'rxjs\';\\nimport { AuthService } from \'../auth/auth.service\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class UserService {\\n  constructor(private apiService: ApiService, private authService: AuthService) {}\\n\\n  private userData$?: Observable<User>;\\n\\n  public getUserDefaultPreferences() {\\n    return {\\n      dateFormat: \'DD.MM.YYYY\',\\n      timeFormat: \'HH:mm\',\\n      firstDayOfWeek: 1,\\n    };\\n  }\\n\\n  public update(user: Partial<User>): Observable<ModifyUser> {\\n    return this.apiService.put(`/auth/edit`, { body: user });\\n  }\\n\\n  public getMyself(): Observable<User> {\\n    if (this.userData$) return this.userData$;\\n    this.userData$ = this.apiService.get(`/auth/me`).pipe(\\n      map((user) => Object.assign({}, this.getUserDefaultPreferences(), user)),\\n      shareReplay(1),\\n    );\\n\\n    return this.userData$;\\n  }\\n\\n  public getDateFormat(): Observable<string> {\\n    return this.getMyself().pipe(map((user: User) => user.dateFormat));\\n  }\\n\\n  public clearCache(): void {\\n    this.authService.clearCache();\\n  }\\n\\n  public isLocallyLogged(): boolean {\\n    return Boolean(localStorage.getItem(\'logged\'));\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"WorkspaceService","id":"injectable-WorkspaceService-0ad39d6715b0bf029ec507d22c271c03a44dfb4bcc26fd4763a5c9e779c9bc5c10ded85080e88e2e4cc0fd1b559a6a2b284c6c9ed7749dc68dcc253cafc000f7","file":"src/app/dashboard/services/workspace/workspace.service.ts","properties":[{"name":"errorCodes","defaultValue":"{\\n    WORKSPACE_NOT_FOUND: {\\n      message: $localize`Workspace not found`,\\n    },\\n    FORM_NOT_VALID: {\\n      message: $localize`Some required fields in form are missing`,\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":18,"modifierKind":[122,158],"inheritance":{"file":"BaseService"}},{"name":"_snackbarService","defaultValue":"this._injector.get(SnackbarService)","deprecated":false,"deprecationMessage":"","type":"SnackbarService","optional":false,"description":"","line":8,"modifierKind":[121],"inheritance":{"file":"BaseService"}}],"methods":[{"name":"create","args":[{"name":"workspace","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Workspace>","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates a new workspace.\\n","description":"<p>Creates a new workspace.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2398,"end":2407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"workspace"},"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"pos":2392,"end":2397,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>workspace options to create in the API</p>\\n"},{"tagName":{"pos":2453,"end":2460,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"delete","args":[{"name":"id","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<undefined>","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDeletes the workspace by its ID.\\n","description":"<p>Deletes the workspace by its ID.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1354,"end":1356,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1348,"end":1353,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>identifier of the workspace to delete from the API</p>\\n"},{"tagName":{"pos":1414,"end":1421,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"get","args":[{"name":"id","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Workspace>","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets a workspace by its ID.\\n","description":"<p>Gets a workspace by its ID.</p>\\n","decorators":[{"name":"Cache","stringifiedArguments":""}],"modifierKind":[123],"jsdoctags":[{"name":{"pos":968,"end":970,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":962,"end":967,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>identifier of the workspace to get from the API</p>\\n"},{"tagName":{"pos":1025,"end":1032,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"list","args":[],"optional":false,"returnType":"Observable<Workspace[]>","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLists all available workspaces.\\n","description":"<p>Lists all available workspaces.</p>\\n","decorators":[{"name":"Cache","stringifiedArguments":""}],"modifierKind":[123],"jsdoctags":[{"tagName":{"pos":2170,"end":2177,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"update","args":[{"name":"workspace","type":"Partial<Workspace>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Workspace>","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates a workspace.\\n","description":"<p>Updates a workspace.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1721,"end":1730,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"workspace"},"type":"Partial<Workspace>","deprecated":false,"deprecationMessage":"","tagName":{"pos":1715,"end":1720,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>workspace object to update in the API</p>\\n"},{"tagName":{"pos":1775,"end":1782,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Request observable, which completes when request is finished</p>\\n"}]},{"name":"handleErrorWithCode","args":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":""},{"name":"code","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"code","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}},{"name":"validate","args":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OperatorFunction<E, E>","typeParameters":["E"],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"BaseService"}}],"deprecated":false,"deprecationMessage":"","description":"<p>Workspaces management service</p>\\n","rawdescription":"\\n\\nWorkspaces management service\\n","sourceCode":"import { Injectable, Injector } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { ApiService } from \'@main/services/api/api.service\';\\nimport { Workspace } from \'../../interfaces/workspace.interface\';\\nimport { BaseService } from \'@main/services/base/base.service\';\\nimport { Errors } from \'@main/interfaces/http-error.interface\';\\nimport { Cache } from \'@main/decorators/cache/cache.decorator\';\\n\\n/**\\n * Workspaces management service\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class WorkspaceService extends BaseService<\\n  Errors<\'WORKSPACE_NOT_FOUND\' | \'FORM_NOT_VALID\'>\\n> {\\n  protected override errorCodes = {\\n    WORKSPACE_NOT_FOUND: {\\n      message: $localize`Workspace not found`,\\n    },\\n    FORM_NOT_VALID: {\\n      message: $localize`Some required fields in form are missing`,\\n    },\\n  };\\n\\n  constructor(private injector: Injector, private apiService: ApiService) {\\n    super(injector);\\n  }\\n\\n  /**\\n   * Gets a workspace by its ID.\\n   * @param id identifier of the workspace to get from the API\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  @Cache()\\n  public get(id: number): Observable<Workspace> {\\n    return this.apiService.get(`/workspace/${id}`).pipe(\\n      this.validate({\\n        404: \'WORKSPACE_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Deletes the workspace by its ID.\\n   * @param id identifier of the workspace to delete from the API\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public delete(id: number): Observable<null> {\\n    return this.apiService.delete(`/workspace/${id}`).pipe(\\n      this.validate({\\n        404: \'WORKSPACE_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Updates a workspace.\\n   * @param workspace workspace object to update in the API\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public update(workspace: Partial<Workspace>): Observable<Workspace> {\\n    return this.apiService.put(`/workspace/${workspace.id}`, { body: workspace }).pipe(\\n      this.validate({\\n        400: \'FORM_NOT_VALID\',\\n        404: \'WORKSPACE_NOT_FOUND\',\\n      }),\\n    );\\n  }\\n\\n  /**\\n   * Lists all available workspaces.\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  @Cache()\\n  public list(): Observable<Workspace[]> {\\n    return this.apiService.get(`/workspace`);\\n  }\\n\\n  /**\\n   * Creates a new workspace.\\n   * @param workspace workspace options to create in the API\\n   * @returns Request observable, which completes when request is finished\\n   */\\n  public create(workspace: { name: string }): Observable<Workspace> {\\n    return this.apiService.post(`/workspace`, { body: workspace }).pipe(\\n      this.validate({\\n        400: \'FORM_NOT_VALID\',\\n      }),\\n    );\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"BaseService","type":"injectable"}],"guards":[{"name":"LoggedInUsersGuard","id":"injectable-LoggedInUsersGuard-32cea0623877c569ede87c12a5a246e799a2e6f1c75a16a54c6546c1fff311c5a7bb56bc8410c068b918a12e3128cfc3f02d8e31fee4a09741e972b0c37d0712","file":"src/app/auth/guard/logged-in-users.guard.ts","properties":[],"methods":[{"name":"canActivate","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { CanActivate, Router } from \'@angular/router\';\\nimport { AuthService } from \'@auth/services/auth/auth.service\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class LoggedInUsersGuard implements CanActivate {\\n  constructor(private router: Router, private authService: AuthService) {}\\n\\n  canActivate() {\\n    if (this.authService.isLoggedIn()) {\\n      return true;\\n    } else {\\n      this.router.navigate([\'/auth/login\']);\\n      return false;\\n    }\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""}],"line":6,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"guard"}],"interceptors":[{"name":"ErrorInterceptor","id":"injectable-ErrorInterceptor-d7a796eeeff89bc9e22ff189793e226bea2540a025697b59a4353c7a78b791d7715aea24d03494feee273a4dffb6a2815badc2aee2faff91f8f8629720849486","file":"src/app/_main/interceptors/error.interceptor.ts","properties":[{"name":"_stoppedInterceptionProcess","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[121]}],"methods":[{"name":"constructError","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{ status: any; message: any; }","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"intercept","args":[{"name":"req","type":"HttpRequest<any>","deprecated":false,"deprecationMessage":""},{"name":"next","type":"HttpHandler","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<HttpEvent<any>>","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"req","type":"HttpRequest<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"next","type":"HttpHandler","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"stopInterceptionProcess","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \'@angular/common/http\';\\nimport { Injectable } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { catchError, EMPTY, Observable, throwError } from \'rxjs\';\\nimport { UserService } from \'@auth/services/user/user.service\';\\nimport dayjs from \'dayjs\';\\nimport { AuthService } from \'@auth/services/auth/auth.service\';\\n\\n@Injectable()\\nexport class ErrorInterceptor implements HttpInterceptor {\\n  constructor(\\n    private dialogService: DialogService,\\n    private router: Router,\\n    private userService: UserService,\\n    private authService: AuthService,\\n  ) {}\\n\\n  private _stoppedInterceptionProcess = false;\\n\\n  constructError(e: any) {\\n    return {\\n      status: e?.status || -1,\\n      message: e?.error?.message || \'\',\\n    };\\n  }\\n\\n  stopInterceptionProcess() {\\n    this._stoppedInterceptionProcess = true;\\n  }\\n\\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\\n    return next.handle(req).pipe(\\n      catchError((e, obs) => {\\n        const error = this.constructError(e);\\n\\n        if (error.status === 401) {\\n          if (this._stoppedInterceptionProcess) return EMPTY;\\n          this.stopInterceptionProcess();\\n\\n          this.dialogService.closeAll();\\n\\n          // User is deleted\\n          if (error.message === \'user deleted\') {\\n            this.userService.clearCache();\\n            this.router.navigate([\'/auth/delete-account\']);\\n            return EMPTY;\\n          }\\n\\n          // Session expired\\n          if (this.userService.isLocallyLogged()) {\\n            this.userService.clearCache();\\n\\n            // If user was logged or was trying to login within one day, display session expired dialog\\n            if (this.authService.getLastLoginTime().diff(dayjs(), \'day\') < 1) {\\n              this.dialogService.openErrorDialog($localize`Your session has expired.`);\\n            }\\n          }\\n\\n          // Redirect to login page\\n          this.router.navigate([\'/auth/login\']);\\n          return EMPTY;\\n        }\\n\\n        return throwError(() => e);\\n      }),\\n    );\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"interceptor"}],"classes":[{"name":"BaseService","id":"class-BaseService-399f4e5cec872b2a5b8bae1895c33baf8ac775c317054af68b961767950519cc32cf757757d14d5c99efff2775a27e17fc3a953770906a8fd2a5594460353875","file":"src/app/_main/services/base/base.service.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { ErrorCodes, HTTPError, Errors } from \'@main/interfaces/http-error.interface\';\\nimport { catchError, throwError, OperatorFunction } from \'rxjs\';\\nimport { Injector } from \'@angular/core\';\\nimport { SnackbarService } from \'@main/services/snackbar/snackbar.service\';\\n\\nexport abstract class BaseService<T extends Errors<string>> {\\n  protected abstract errorCodes: ErrorCodes<T>;\\n  private _snackbarService: SnackbarService = this._injector.get(SnackbarService);\\n\\n  constructor(private _injector: Injector) {}\\n\\n  protected handleErrorWithCode(err: HTTPError, code: T) {\\n    if (code) {\\n      const { message } = this.errorCodes[code];\\n      this._snackbarService.show(message, \'red\');\\n    } else if (err.status === 503) {\\n      this._snackbarService.show($localize`Service is currently unavailable`, \'red\');\\n    }\\n  }\\n\\n  protected validate<E>(codeMappings: { [key in number | string]: T }) {\\n    return catchError((err: HTTPError) => {\\n      const code = codeMappings[err.status || err.text];\\n      this.handleErrorWithCode(err, code);\\n\\n      return throwError(() => err);\\n    }) as OperatorFunction<E, E>;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_injector","type":"Injector","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"_injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"_snackbarService","defaultValue":"this._injector.get(SnackbarService)","deprecated":false,"deprecationMessage":"","type":"SnackbarService","optional":false,"description":"","line":8,"modifierKind":[121]},{"name":"errorCodes","deprecated":false,"deprecationMessage":"","type":"ErrorCodes<T>","optional":false,"description":"","line":7,"modifierKind":[122,126]}],"methods":[{"name":"handleErrorWithCode","args":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":""},{"name":"code","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"err","type":"HTTPError","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"code","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"validate","args":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OperatorFunction<E, E>","typeParameters":["E"],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"codeMappings","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ColorUtils","id":"class-ColorUtils-ba835e17bd76e5f9dfc833ed0a46b9310bf851d15c31501b914d3a3d57ad59cdc753726f6436dcc777af48d21309592098a596730923737b67b29f5ea94584be","file":"src/app/_main/classes/color/color.utils.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import * as Color from \'color\';\\n\\nexport class ColorUtils {\\n  public static isHex(color: string) {\\n    return /^#[0-9A-F]{6}$/i.test(color);\\n  }\\n\\n  public static isHexA(color: string) {\\n    return /^#[0-9A-F]{8}$/i.test(color);\\n  }\\n\\n  public static isRgb(color: string) {\\n    return /^rgb\\\\((\\\\d{1,3}), (\\\\d{1,3}), (\\\\d{1,3})\\\\)$/i.test(color);\\n  }\\n\\n  public static isRgba(color: string) {\\n    return /^rgba\\\\((\\\\d{1,3}), (\\\\d{1,3}), (\\\\d{1,3}), (\\\\d{1,3})\\\\)$/i.test(color);\\n  }\\n\\n  public static isHsv(color: string) {\\n    return /^hsv\\\\((\\\\d{1,3}), (\\\\d{1,3}), (\\\\d{1,3})\\\\)$/i.test(color);\\n  }\\n\\n  public static isHsva(color: string) {\\n    return /^hsva\\\\((\\\\d{1,3}), (\\\\d{1,3}), (\\\\d{1,3}), (\\\\d{1,3})\\\\)$/i.test(color);\\n  }\\n\\n  public static colorFromString(color: string): Color {\\n    if (ColorUtils.isHex(color)) {\\n      return Color(color);\\n    } else if (ColorUtils.isHexA(color)) {\\n      return Color(color);\\n    } else if (ColorUtils.isRgb(color)) {\\n      return Color(color);\\n    } else if (ColorUtils.isRgba(color)) {\\n      return Color(color);\\n    } else if (ColorUtils.isHsv(color)) {\\n      return Color(color);\\n    } else if (ColorUtils.isHsva(color)) {\\n      return Color(color);\\n    } else {\\n      return Color(color);\\n    }\\n  }\\n\\n  public static colorToBytes(color: Color): number {\\n    return color.rgbNumber();\\n  }\\n}\\n","properties":[],"methods":[{"name":"colorFromString","args":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Color","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"colorToBytes","args":[{"name":"color","type":"Color","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"color","type":"Color","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isHex","args":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":4,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isHexA","args":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isHsv","args":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isHsva","args":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isRgb","args":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isRgba","args":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"color","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"DialogRef","id":"class-DialogRef-45cee09cabadc8048811225e24ebdf6f5886752c07ddd4cd81461b9451443dc89c5b88e0edde2e94212d8ac2efe3f1b17061140083b9dfd6391608b5810cbc55","file":"src/app/_main/classes/dialog-ref.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { DialogPosition, MatDialogState } from \'@angular/material/dialog\';\\nimport { BehaviorSubject, Observable, Subject } from \'rxjs\';\\n\\nexport class DialogRef<R = any> {\\n  private afterOpened$ = new Subject<void>();\\n\\n  private beforeClosed$ = new Subject<R | undefined>();\\n  private afterClosed$ = new Subject<R | undefined>();\\n\\n  private state$ = new BehaviorSubject<MatDialogState>(MatDialogState.CLOSED);\\n\\n  close(dialogResult?: R): void {\\n    this.state$.next(MatDialogState.CLOSING);\\n    this.beforeClosed$.next(dialogResult);\\n    this.state$.next(MatDialogState.CLOSED);\\n    this.afterClosed$.next(dialogResult);\\n\\n    this.afterClosed$.complete();\\n    this.afterOpened$.complete();\\n    this.beforeClosed$.complete();\\n    this.state$.complete();\\n  }\\n  /**\\n   * Gets an observable that is notified when the dialog is finished opening.\\n   */\\n  afterOpened(): Observable<void> {\\n    this.state$.next(MatDialogState.OPEN);\\n    return this.afterOpened$;\\n  }\\n  /**\\n   * Gets an observable that is notified when the dialog is finished closing.\\n   */\\n  afterClosed(): Observable<R | undefined> {\\n    return this.afterClosed$;\\n  }\\n  /**\\n   * Gets an observable that is notified when the dialog has started closing.\\n   */\\n  beforeClosed(): Observable<R | undefined> {\\n    return this.beforeClosed$;\\n  }\\n  /**\\n   * Gets an observable that emits when the overlay\'s backdrop has been clicked.\\n   */\\n  backdropClick(): Observable<MouseEvent> {\\n    throw new Error(`method should not be called when using custom outlet`);\\n  }\\n\\n  /**\\n   * Gets an observable that emits when keydown events are targeted on the overlay.\\n   */\\n  keydownEvents(): Observable<KeyboardEvent> {\\n    throw new Error(\'Method not implemented.\');\\n  }\\n  /**\\n   * Updates the dialog\'s position.\\n   * @param position New dialog position.\\n   */\\n  updatePosition(position?: DialogPosition): this {\\n    throw new Error(`method not be called when using custom outlet`);\\n  }\\n  /**\\n   * Updates the dialog\'s width and height.\\n   * @param width New width of the dialog.\\n   * @param height New height of the dialog.\\n   */\\n  updateSize(width?: string, height?: string): this {\\n    throw new Error(`method should not be called when using custom outlet`);\\n  }\\n  /** Add a CSS class or an array of classes to the overlay pane. */\\n  addPanelClass(classes: string | string[]): this {\\n    throw new Error(`method should not be called when using custom outlet`);\\n  }\\n  /** Remove a CSS class or an array of classes from the overlay pane. */\\n  removePanelClass(classes: string | string[]): this {\\n    throw new Error(`method should not be called when using custom outlet`);\\n  }\\n  /** Gets the current state of the dialog\'s lifecycle. */\\n  getState(): MatDialogState {\\n    return this.state$.value;\\n  }\\n}\\n","properties":[{"name":"afterClosed$","defaultValue":"new Subject<R | undefined>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":8,"modifierKind":[121]},{"name":"afterOpened$","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":5,"modifierKind":[121]},{"name":"beforeClosed$","defaultValue":"new Subject<R | undefined>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":7,"modifierKind":[121]},{"name":"state$","defaultValue":"new BehaviorSubject<MatDialogState>(MatDialogState.CLOSED)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10,"modifierKind":[121]}],"methods":[{"name":"addPanelClass","args":[{"name":"classes","type":"string | string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nAdd a CSS class or an array of classes to the overlay pane.","description":"<p>Add a CSS class or an array of classes to the overlay pane.</p>\\n","jsdoctags":[{"name":"classes","type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"afterClosed","args":[],"optional":false,"returnType":"Observable<R | undefined>","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets an observable that is notified when the dialog is finished closing.\\n","description":"<p>Gets an observable that is notified when the dialog is finished closing.</p>\\n"},{"name":"afterOpened","args":[],"optional":false,"returnType":"Observable<void>","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets an observable that is notified when the dialog is finished opening.\\n","description":"<p>Gets an observable that is notified when the dialog is finished opening.</p>\\n"},{"name":"backdropClick","args":[],"optional":false,"returnType":"Observable<MouseEvent>","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets an observable that emits when the overlay\'s backdrop has been clicked.\\n","description":"<p>Gets an observable that emits when the overlay&#39;s backdrop has been clicked.</p>\\n"},{"name":"beforeClosed","args":[],"optional":false,"returnType":"Observable<R | undefined>","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets an observable that is notified when the dialog has started closing.\\n","description":"<p>Gets an observable that is notified when the dialog has started closing.</p>\\n"},{"name":"close","args":[{"name":"dialogResult","type":"R","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"dialogResult","type":"R","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getState","args":[],"optional":false,"returnType":"MatDialogState","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nGets the current state of the dialog\'s lifecycle.","description":"<p>Gets the current state of the dialog&#39;s lifecycle.</p>\\n"},{"name":"keydownEvents","args":[],"optional":false,"returnType":"Observable<KeyboardEvent>","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets an observable that emits when keydown events are targeted on the overlay.\\n","description":"<p>Gets an observable that emits when keydown events are targeted on the overlay.</p>\\n"},{"name":"removePanelClass","args":[{"name":"classes","type":"string | string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nRemove a CSS class or an array of classes from the overlay pane.","description":"<p>Remove a CSS class or an array of classes from the overlay pane.</p>\\n","jsdoctags":[{"name":"classes","type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updatePosition","args":[{"name":"position","type":"DialogPosition","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the dialog\'s position.\\n","description":"<p>Updates the dialog&#39;s position.</p>\\n","jsdoctags":[{"name":{"pos":1767,"end":1775,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"position"},"type":"DialogPosition","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1761,"end":1766,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>New dialog position.</p>\\n"}]},{"name":"updateSize","args":[{"name":"width","type":"string","deprecated":false,"deprecationMessage":"","optional":true},{"name":"height","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the dialog\'s width and height.\\n","description":"<p>Updates the dialog&#39;s width and height.</p>\\n","jsdoctags":[{"name":{"pos":1991,"end":1996,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"width"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1985,"end":1990,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>New width of the dialog.</p>\\n"},{"name":{"pos":2034,"end":2040,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"height"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2028,"end":2033,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>New height of the dialog.</p>\\n"}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Emoji","id":"class-Emoji-0592d03e91b3d097b2c6c8b070d5f222c4634e180e3e9241ea351e466c01081378c3d9ac9c1a2999da88586de4c1e34f255019c5911252e3de50b193ca39fec9","file":"src/app/_main/libs/emoji/emoji.lib.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { EmojiConvertor } from \'emoji-js\';\\nimport { EMOJI_SEQUENCE_ALIASES } from \'./emoji-sequence.aliases\';\\nimport { EMOJI_ALIASES } from \'./emoji.aliases\';\\n\\nexport class Emoji {\\n  private static _emojiConvertor = (() => {\\n    const emojiConvertor = new EmojiConvertor();\\n    emojiConvertor.replace_mode = \'unified\';\\n    emojiConvertor.allow_native = true;\\n    emojiConvertor.allow_caps = true;\\n    emojiConvertor.addAliases(EMOJI_ALIASES);\\n    return emojiConvertor;\\n  })();\\n\\n  public static emojiNameToUnicode(emojiName: string) {\\n    return Emoji.colonsToUnicode(`:${emojiName}:`);\\n  }\\n\\n  public static colonsToUnicode(source: string) {\\n    return Emoji._emojiConvertor.replace_colons(source);\\n  }\\n\\n  public static characterSequenceToUnicode(characterSequence: string) {\\n    return (EMOJI_SEQUENCE_ALIASES as any)[characterSequence] || characterSequence;\\n  }\\n\\n  public static unicodeToTwemoji(source: string) {\\n    (window as any).twemoji.parse(source, {\\n      size: \'16x16\',\\n      // ext: \'.svg\',\\n      base: \'https://twemoji.maxcdn.com/\',\\n    });\\n  }\\n}\\n","properties":[{"name":"_emojiConvertor","defaultValue":"(() => {\\n    const emojiConvertor = new EmojiConvertor();\\n    emojiConvertor.replace_mode = \'unified\';\\n    emojiConvertor.allow_native = true;\\n    emojiConvertor.allow_caps = true;\\n    emojiConvertor.addAliases(EMOJI_ALIASES);\\n    return emojiConvertor;\\n  })()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":6,"modifierKind":[121,124]}],"methods":[{"name":"characterSequenceToUnicode","args":[{"name":"characterSequence","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"characterSequence","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"colonsToUnicode","args":[{"name":"source","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"source","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"emojiNameToUnicode","args":[{"name":"emojiName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"emojiName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"unicodeToTwemoji","args":[{"name":"source","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"source","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Enum","id":"class-Enum-d6d5cd23de54ebd7aee0bc953c81bba1b34c72fc4459703c59a22903ba5d497fb2bbeb660597850a103378f9c9ecc0281f8423b11c78a122182b7a4fe6171772","file":"src/app/_main/classes/enum.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { isNumber } from \'lodash-es\';\\n\\n/**\\n * Utility enum functions for typescript\\n */\\nexport class Enum {\\n  /**\\n   * Tests if the given enum is numeric - contains at leas one number as value.\\n   * @param enumType enum to test\\n   * @returns true or false based on whether enum has numeric values\\n   */\\n  public static isNumeric(enumType: {}): enumType is { [key: string]: number } {\\n    return Object.values(enumType).some((val) => isNumber(val));\\n  }\\n\\n  /**\\n   * Function to get enum keys.\\n   * @param enumType enum to get keys from\\n   * @example\\n   * enum TestEnum {\\n   *   One = 1,\\n   *   Two = 2,\\n   *   Three = 3,\\n   * }\\n   * Enum.keys(TestEnum) // [\'One\', \'Two\', \'Three\']\\n   * @returns array of enum keys\\n   */\\n  public static keys<T>(enumType: T): Array<keyof T> {\\n    return Object.keys(enumType).filter((k) => !Number(k) && k != \'0\') as (keyof T)[];\\n  }\\n\\n  /**\\n   * Function to get enum values.\\n   * @param enumType enum to get values from\\n   * @example\\n   * enum TestEnum {\\n   *   One = 1,\\n   *   Two = 2,\\n   *   Three = 3,\\n   * }\\n   * Enum.values(TestEnum) // [1, 2, 3]\\n   * @returns array of enum values\\n   */\\n  public static values<T>(enumType: T): (string | number)[] {\\n    if (!Enum.isNumeric(enumType)) {\\n      return Object.values(enumType);\\n    }\\n\\n    return Object.values(enumType)\\n      .filter((v) => Number(v))\\n      .map((v) => Number(v)) as any;\\n  }\\n\\n  /**\\n   * Function to get enum value by key.\\n   * @param enumType enum to get entries from\\n   * @example\\n   * enum TestEnum {\\n   *   One = 1,\\n   *   Two = 2,\\n   *   Three = 3,\\n   * }\\n   * Enum.entries(TestEnum) // [[\'One\', 1], [\'Two\', 2], [\'Three\', 3]]\\n   * @returns array of enum entries\\n   */\\n  public static entries<T>(enumType: T): [keyof T, T[keyof T]][] {\\n    if (!Enum.isNumeric(enumType)) {\\n      return Object.entries(enumType) as [keyof T, T[keyof T]][];\\n    }\\n\\n    return Object.entries(enumType)\\n      .filter((e) => isNumber(e[1]))\\n      .map((e) => [e[0], Number(e[1])]) as any as [keyof T, T[keyof T]][];\\n  }\\n}\\n","properties":[],"description":"<p>Utility enum functions for typescript</p>\\n","rawdescription":"\\n\\nUtility enum functions for typescript\\n","methods":[{"name":"entries","args":[{"name":"enumType","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"[]","typeParameters":["T"],"line":66,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFunction to get enum value by key.\\n```html\\nenum TestEnum {\\n  One = 1,\\n  Two = 2,\\n  Three = 3,\\n}\\nEnum.entries(TestEnum) // [[\'One\', 1], [\'Two\', 2], [\'Three\', 3]]\\n```","description":"<p>Function to get enum value by key.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">enum TestEnum {\\n  One = 1,\\n  Two = 2,\\n  Three = 3,\\n}\\nEnum.entries(TestEnum) // [[&#39;One&#39;, 1], [&#39;Two&#39;, 2], [&#39;Three&#39;, 3]]</code></pre></div>","modifierKind":[124],"jsdoctags":[{"name":{"pos":1434,"end":1442,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"enumType"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":1428,"end":1433,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>enum to get entries from</p>\\n"},{"tagName":{"pos":1474,"end":1481,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>enum TestEnum {\\n  One = 1,\\n  Two = 2,\\n  Three = 3,\\n}\\nEnum.entries(TestEnum) // [[&#39;One&#39;, 1], [&#39;Two&#39;, 2], [&#39;Three&#39;, 3]]</p>\\n"},{"tagName":{"pos":1636,"end":1643,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>array of enum entries</p>\\n"}]},{"name":"isNumeric","args":[{"name":"enumType","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"literal type","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTests if the given enum is numeric - contains at leas one number as value.\\n","description":"<p>Tests if the given enum is numeric - contains at leas one number as value.</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":206,"end":214,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"enumType"},"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"pos":200,"end":205,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>enum to test</p>\\n"},{"tagName":{"pos":234,"end":241,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>true or false based on whether enum has numeric values</p>\\n"}]},{"name":"keys","args":[{"name":"enumType","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Array<T>","typeParameters":["T"],"line":28,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFunction to get enum keys.\\n```html\\nenum TestEnum {\\n  One = 1,\\n  Two = 2,\\n  Three = 3,\\n}\\nEnum.keys(TestEnum) // [\'One\', \'Two\', \'Three\']\\n```","description":"<p>Function to get enum keys.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">enum TestEnum {\\n  One = 1,\\n  Two = 2,\\n  Three = 3,\\n}\\nEnum.keys(TestEnum) // [&#39;One&#39;, &#39;Two&#39;, &#39;Three&#39;]</code></pre></div>","modifierKind":[124],"jsdoctags":[{"name":{"pos":504,"end":512,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"enumType"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":498,"end":503,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>enum to get keys from</p>\\n"},{"tagName":{"pos":541,"end":548,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>enum TestEnum {\\n  One = 1,\\n  Two = 2,\\n  Three = 3,\\n}\\nEnum.keys(TestEnum) // [&#39;One&#39;, &#39;Two&#39;, &#39;Three&#39;]</p>\\n"},{"tagName":{"pos":685,"end":692,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>array of enum keys</p>\\n"}]},{"name":"values","args":[{"name":"enumType","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"[]","typeParameters":["T"],"line":44,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFunction to get enum values.\\n```html\\nenum TestEnum {\\n  One = 1,\\n  Two = 2,\\n  Three = 3,\\n}\\nEnum.values(TestEnum) // [1, 2, 3]\\n```","description":"<p>Function to get enum values.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">enum TestEnum {\\n  One = 1,\\n  Two = 2,\\n  Three = 3,\\n}\\nEnum.values(TestEnum) // [1, 2, 3]</code></pre></div>","modifierKind":[124],"jsdoctags":[{"name":{"pos":917,"end":925,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"enumType"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":911,"end":916,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>enum to get values from</p>\\n"},{"tagName":{"pos":956,"end":963,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>enum TestEnum {\\n  One = 1,\\n  Two = 2,\\n  Three = 3,\\n}\\nEnum.values(TestEnum) // [1, 2, 3]</p>\\n"},{"tagName":{"pos":1088,"end":1095,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>array of enum values</p>\\n"}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ESet","id":"class-ESet-79bd04d4871aeff90979ba8b95ae1fe81bc080d10a2dc6471e7f920f010c6a78050218aaa26f9eb275d731208b290fb09431b9104dc8a1d3b1d2320adf02707a","file":"src/app/_main/classes/e-set.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class ESet<T = any> extends Set<T> {\\n  toggle(key: any) {\\n    if (this.has(key)) {\\n      this.delete(key);\\n    } else {\\n      this.add(key);\\n    }\\n  }\\n}\\n","properties":[],"methods":[{"name":"toggle","args":[{"name":"key","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":2,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"key","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":"Set","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Filters","id":"class-Filters-fab28ef69db78ecb56ce1f81d1ffc31d0960e37abfd8d791ae8dc92048e24b5d7722989d78c28ac8ddb58d7c8ce318823e0bc6c54cc3f350d72cb2e6ecf159ed","file":"src/app/_main/classes/filters.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FilterCheckbox, FilterSelect } from \'@main/interfaces/filters.interface\';\\nimport { TaskType } from \'@tasks/enums/task-type.enum\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport { Enum } from \'./enum.class\';\\n\\n/** @TODO: split this class into modules */\\n\\nexport class Filters {\\n  public static ONLY_MY_TASKS(currentUserId: number): FilterCheckbox<{ assigneeId?: number }> {\\n    return {\\n      type: \'checkbox\',\\n      label: $localize`Only my tasks`,\\n      options: {\\n        1: { assigneeId: currentUserId },\\n        0: {},\\n      },\\n      value: 0,\\n      apply(tasks: Task[]) {\\n        const option = this.options[this.value];\\n        if (!option) return tasks;\\n\\n        return tasks.filter((task) =>\\n          option.assigneeId ? task.assigneeId === option.assigneeId : true,\\n        );\\n      },\\n    };\\n  }\\n\\n  public static TASK_TYPE(defaultTaskType: TaskType): FilterSelect<TaskType> {\\n    return {\\n      type: \'select\',\\n      label: $localize`Task type`,\\n      options: Enum.entries(TaskType).map(([label, value]) => ({\\n        label,\\n        value,\\n      })),\\n      value: defaultTaskType || null,\\n      apply(tasks: Task[]) {\\n        if (this.value === null) return tasks;\\n\\n        return tasks.filter((task) => task.type === this.value);\\n      },\\n    };\\n  }\\n}\\n","properties":[],"methods":[{"name":"ONLY_MY_TASKS","args":[{"name":"currentUserId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FilterCheckbox<literal type>","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"currentUserId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"TASK_TYPE","args":[{"name":"defaultTaskType","type":"TaskType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FilterSelect<TaskType>","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"defaultTaskType","type":"TaskType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"FormControlStoryPageConfig","id":"class-FormControlStoryPageConfig-4b51444a292f7bacfc13686eac1342a2f51eefd40085558bf365b12255242b72e74eee5ed414df21f2c7f348ceab0be24844901de537768725032f66b9b4ffdd","file":"src/stories/helpers/classes/form-control-story-page-config.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Meta } from \'@storybook/angular\';\\nimport { merge } from \'lodash-es\';\\nimport { DOCS_PRESET_CONTROL_ACCESSOR } from \'../arg-type.helper\';\\nimport { ExtendedMeta, StoryPageConfig } from \'./story-page-config.class\';\\n\\nconst DEFAULT_CONFIG: Partial<ExtendedMeta> = {\\n  argTypes: {\\n    ...DOCS_PRESET_CONTROL_ACCESSOR,\\n  },\\n} as Meta;\\n\\nexport class FormControlStoryPageConfig extends StoryPageConfig {\\n  constructor(meta: ExtendedMeta) {\\n    super(merge({}, DEFAULT_CONFIG, meta));\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"meta","type":"ExtendedMeta","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"meta","type":"ExtendedMeta","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"_meta","deprecated":false,"deprecationMessage":"","type":"ExtendedMeta","optional":false,"description":"","line":28,"modifierKind":[121],"inheritance":{"file":"StoryPageConfig"}}],"methods":[{"name":"addDecorators","args":[{"name":"decorators","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"this","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"decorators","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"StoryPageConfig"}},{"name":"disableEditingFunctions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"StoryPageConfig"}},{"name":"meta","args":[],"optional":false,"returnType":"Meta","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"StoryPageConfig"}},{"name":"propertyPredicate","args":[{"name":"property","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"\\"delete\\" | \\"readonly\\"","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"property","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"StoryPageConfig"}},{"name":"setTitle","args":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"this","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"StoryPageConfig"}}],"indexSignatures":[],"extends":"StoryPageConfig","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Loader","id":"class-Loader-62171b34d8595847292d6aa02e893ab6588d8b23052b5bdc2b70da27d17e53735a5077be33a70fc39e198de4942ede711c1ceac130c9c190d950ab15f349a41b","file":"src/app/_main/classes/loader/loader.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { environment } from \'src/environments/environment\';\\nimport { LoaderOptions } from \'./loader-options.interface\';\\n\\nexport class Loader {\\n  public get pending() {\\n    return this._pending;\\n  }\\n\\n  private _pending: boolean = false;\\n  private _pendingStart?: Date;\\n  private _timeout?: any;\\n\\n  public message?: string;\\n\\n  constructor(private options: LoaderOptions = {}) {}\\n\\n  public markAsPending() {\\n    if (this._pending) return;\\n\\n    this._pending = true;\\n    this._pendingStart = new Date();\\n\\n    // Runtime checker for zombie loaders\\n    if (!environment.production) {\\n      this._timeout = setTimeout(() => {\\n        if (this._pending) {\\n          console.error(\'Loader is pending for longer than 10 seconds\', this);\\n        }\\n      }, 10000);\\n    }\\n  }\\n\\n  public markAsDone() {\\n    if (!this._pending) return;\\n\\n    const finish = () => {\\n      this._pending = false;\\n      this._pendingStart = undefined;\\n      if (this._timeout) {\\n        clearTimeout(this._timeout);\\n      }\\n    };\\n\\n    const totalTimeOfPending = this._pendingStart?.getTime()\\n      ? new Date().getTime() - (this._pendingStart?.getTime() || 0)\\n      : 0;\\n    if (totalTimeOfPending < 1000) {\\n      setTimeout(() => {\\n        finish();\\n      }, 1000 - totalTimeOfPending);\\n    } else {\\n      finish();\\n    }\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"options","type":"LoaderOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"line":13,"jsdoctags":[{"name":"options","type":"LoaderOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]},"properties":[{"name":"_pending","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":9,"modifierKind":[121]},{"name":"_pendingStart","deprecated":false,"deprecationMessage":"","type":"Date","optional":true,"description":"","line":10,"modifierKind":[121]},{"name":"_timeout","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":11,"modifierKind":[121]},{"name":"message","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13,"modifierKind":[123]}],"methods":[{"name":"markAsDone","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"markAsPending","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"indexSignatures":[],"accessors":{"pending":{"name":"pending","getSignature":{"name":"pending","type":"","returnType":"","line":5}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Marked","id":"class-Marked-fb388cf194b426a537d850122a8450029a3ef566d2f6606b8dbf290e9e0b75148092ff60495c5d654cab01d62cb44a2074056ba5ce7f15d2ca4e41c74d84d55e","file":"src/app/_main/libs/marked/marked.lib.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { marked, Renderer } from \'marked\';\\nimport { emoji } from \'./extensions/marked-emoji-extension\';\\nimport { linkOverride } from \'./overrides/link.override\';\\n\\nexport class Marked {\\n  private static _initialized = false;\\n\\n  public static init() {\\n    if (Marked._initialized) return;\\n\\n    marked.use({\\n      extensions: [emoji],\\n    });\\n\\n    Marked._initialized = true;\\n  }\\n\\n  public static getRenderer() {\\n    let renderer = new Renderer();\\n\\n    renderer = linkOverride(renderer);\\n\\n    return renderer;\\n  }\\n}\\n","properties":[{"name":"_initialized","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":6,"modifierKind":[121,124]}],"methods":[{"name":"getRenderer","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","modifierKind":[124]},{"name":"init","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","modifierKind":[124]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Monaco","id":"class-Monaco-9094ef5a22c22413e6b160278f0bd322c5e1b2d00cdf6c33812ee48b573e783a8d84aca67d892e42ff5cd5171dcb0f02efe0bca0284e0a356943ce81a8d6b977","file":"src/app/_main/libs/monaco/monaco.lib.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { SelectionEditPlugin } from \'./plugins/selection-edit.plugin\';\\nimport { editor } from \'monaco-editor\';\\n\\nexport class Monaco {\\n  private static _initialized = false;\\n\\n  public static get initialized() {\\n    return this._initialized;\\n  }\\n\\n  public static init() {\\n    if (Monaco._initialized) return;\\n\\n    Monaco.loadPlugins();\\n  }\\n\\n  private static loadPlugins() {\\n    const dummy = document.createElement(\'div\');\\n    const instance = editor.create(dummy) as any;\\n    const prototype = instance.__proto__;\\n\\n    SelectionEditPlugin.init(prototype);\\n  }\\n}\\n","properties":[{"name":"_initialized","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":5,"modifierKind":[121,124]}],"methods":[{"name":"init","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[124]},{"name":"loadPlugins","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[121,124]}],"indexSignatures":[],"accessors":{"initialized":{"name":"initialized","getSignature":{"name":"initialized","type":"","returnType":"","line":7}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"MonacoExtended","id":"class-MonacoExtended-d5e675ff028bb4904d9ff20084bab9242c7a854d28fb69b7938853ceac90253a0ab8f4294b1b8ae2123e63ddfb7213c30e181c844770be87d03b5546acb11ead","file":"src/app/_main/classes/monaco-extended.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import * as monaco from \'monaco-editor\';\\n\\ntype MonacoEditor = monaco.editor.IStandaloneCodeEditor;\\ntype Selection = monaco.Selection;\\ntype EditOperation = monaco.editor.IIdentifiedSingleEditOperation;\\n\\ninterface SelectionEditOperation {\\n  before?: string;\\n  after?: string;\\n  beforeEachLine?: string;\\n  afterEachLine?: string;\\n}\\n\\nexport class MonacoExtended {\\n  public static insertTextAt(\\n    editor: MonacoEditor,\\n    lineNumber: number,\\n    column: number,\\n    text: string,\\n  ) {\\n    editor.executeEdits(\'\', [\\n      {\\n        range: {\\n          startLineNumber: lineNumber,\\n          startColumn: column,\\n          endLineNumber: lineNumber,\\n          endColumn: column,\\n        },\\n        text,\\n      },\\n    ]);\\n  }\\n\\n  public static executeEdits(editor: MonacoEditor, edits: EditOperation[]) {\\n    for (const edit of edits) {\\n      if (edit.range?.startColumn && !edit.range?.endColumn)\\n        (edit.range as any).endColumn = edit.range.startColumn;\\n      if (edit.range?.startLineNumber && !edit.range?.endLineNumber)\\n        (edit.range as any).endLineNumber = edit.range.startLineNumber;\\n    }\\n    return editor.executeEdits(\'\', edits);\\n  }\\n\\n  public static removeTextAt(\\n    editor: MonacoEditor,\\n    startLineNumber: number,\\n    startColumn: number,\\n    endLineNumber: number,\\n    endColumn: number,\\n  ) {\\n    editor.executeEdits(\'\', [\\n      {\\n        range: {\\n          startLineNumber,\\n          startColumn,\\n          endLineNumber,\\n          endColumn,\\n        },\\n        text: null,\\n      },\\n    ]);\\n  }\\n\\n  public static insertTextBeforeSelection(\\n    editor: MonacoEditor,\\n    selection: Selection,\\n    text: string,\\n  ) {\\n    MonacoExtended.insertTextAt(editor, selection.startLineNumber, selection.startColumn, text);\\n  }\\n\\n  public static insertTextAfterSelection(editor: MonacoEditor, selection: Selection, text: string) {\\n    MonacoExtended.insertTextAt(editor, selection.endLineNumber, selection.endColumn, text);\\n  }\\n\\n  public static insertTextBeforeAndAfterEachSelection(\\n    editor: MonacoEditor,\\n    selections: Selection[],\\n    beforeSelectionText: string,\\n    afterSelectionText: string = \'\',\\n  ) {\\n    const edits = ([] as any[]).concat(\\n      ...selections.map((selection) => {\\n        return [\\n          {\\n            range: {\\n              startLineNumber: selection.startLineNumber,\\n              startColumn: selection.startColumn,\\n              endLineNumber: selection.startLineNumber,\\n              endColumn: selection.startColumn,\\n            },\\n            text: beforeSelectionText,\\n          },\\n          {\\n            range: {\\n              startLineNumber: selection.endLineNumber,\\n              startColumn: selection.endColumn,\\n              endLineNumber: selection.endLineNumber,\\n              endColumn: selection.endColumn,\\n            },\\n            text: afterSelectionText,\\n          },\\n        ];\\n      }),\\n    );\\n\\n    editor.executeEdits(\'\', edits);\\n  }\\n\\n  public static removeTextBeforeAndAfterEachSelection(\\n    editor: MonacoEditor,\\n    selections: Selection[],\\n    beforeSelectionText: string,\\n    afterSelectionText: string = \'\',\\n  ) {\\n    const model = editor.getModel();\\n    const afterSelectionTextLinesCount = (afterSelectionText.match(/\\\\n/g) || [])?.length;\\n    const edits: any[] = [];\\n\\n    if (!model) return;\\n\\n    for (const selection of selections) {\\n      if (\\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText)\\n      ) {\\n        edits.push({\\n          range: {\\n            startLineNumber: selection.startLineNumber,\\n            startColumn: selection.startColumn,\\n            endLineNumber:\\n              selection.startLineNumber + (beforeSelectionText.match(/\\\\n/g) || [])?.length,\\n            endColumn: beforeSelectionText.replace(/.*\\\\n/g, \'\').length + 1,\\n          },\\n          text: \'\',\\n        });\\n        edits.push({\\n          range: {\\n            startLineNumber: selection.endLineNumber - afterSelectionTextLinesCount,\\n            startColumn:\\n              model.getLineContent(selection.endLineNumber - afterSelectionTextLinesCount).length -\\n              (afterSelectionText.replace(/\\\\n[^]*$/g, \'\').length - 1),\\n            endLineNumber: selection.endLineNumber,\\n            endColumn: selection.endColumn,\\n          },\\n          text: \'\',\\n        });\\n      }\\n    }\\n\\n    editor.executeEdits(\'\', edits);\\n  }\\n\\n  public static selectionStartWith(editor: MonacoEditor, selection: Selection, text: string) {\\n    const selectedValue = editor\\n      .getModel()\\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\\n    return selectedValue?.startsWith(text);\\n  }\\n\\n  public static selectionEndsWith(editor: MonacoEditor, selection: Selection, text: string) {\\n    const selectedValue = editor\\n      .getModel()\\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\\n    return selectedValue?.endsWith(text);\\n  }\\n\\n  public static toggleEndAndStartOfEachSelection(\\n    editor: MonacoEditor,\\n    beforeSelectionText: string,\\n    afterSelectionText: string = \'\',\\n  ) {\\n    const selections = editor.getSelections();\\n    if (!selections) return;\\n\\n    const shouldDelete = selections.some(\\n      (selection) =>\\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText),\\n    );\\n\\n    const mode: \'delete\' | \'add\' = shouldDelete ? \'delete\' : \'add\';\\n\\n    if (mode === \'delete\') {\\n      MonacoExtended.removeTextBeforeAndAfterEachSelection(\\n        editor,\\n        selections,\\n        beforeSelectionText,\\n        afterSelectionText,\\n      );\\n    } else {\\n      MonacoExtended.insertTextBeforeAndAfterEachSelection(\\n        editor,\\n        selections,\\n        beforeSelectionText,\\n        afterSelectionText,\\n      );\\n    }\\n  }\\n}\\n","properties":[],"methods":[{"name":"executeEdits","args":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":""},{"name":"edits","type":"EditOperation[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"edits","type":"EditOperation[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"insertTextAfterSelection","args":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":""},{"name":"selection","type":"Selection","deprecated":false,"deprecationMessage":""},{"name":"text","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selection","type":"Selection","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"text","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"insertTextAt","args":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":""},{"name":"lineNumber","type":"number","deprecated":false,"deprecationMessage":""},{"name":"column","type":"number","deprecated":false,"deprecationMessage":""},{"name":"text","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"lineNumber","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"column","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"text","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"insertTextBeforeAndAfterEachSelection","args":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":""},{"name":"selections","type":"Selection[]","deprecated":false,"deprecationMessage":""},{"name":"beforeSelectionText","type":"string","deprecated":false,"deprecationMessage":""},{"name":"afterSelectionText","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'"}],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selections","type":"Selection[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"beforeSelectionText","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"afterSelectionText","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'","tagName":{"text":"param"}}]},{"name":"insertTextBeforeSelection","args":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":""},{"name":"selection","type":"Selection","deprecated":false,"deprecationMessage":""},{"name":"text","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selection","type":"Selection","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"text","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeTextAt","args":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":""},{"name":"startLineNumber","type":"number","deprecated":false,"deprecationMessage":""},{"name":"startColumn","type":"number","deprecated":false,"deprecationMessage":""},{"name":"endLineNumber","type":"number","deprecated":false,"deprecationMessage":""},{"name":"endColumn","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"startLineNumber","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"startColumn","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"endLineNumber","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"endColumn","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeTextBeforeAndAfterEachSelection","args":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":""},{"name":"selections","type":"Selection[]","deprecated":false,"deprecationMessage":""},{"name":"beforeSelectionText","type":"string","deprecated":false,"deprecationMessage":""},{"name":"afterSelectionText","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'"}],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selections","type":"Selection[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"beforeSelectionText","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"afterSelectionText","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'","tagName":{"text":"param"}}]},{"name":"selectionEndsWith","args":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":""},{"name":"selection","type":"Selection","deprecated":false,"deprecationMessage":""},{"name":"text","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":161,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selection","type":"Selection","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"text","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectionStartWith","args":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":""},{"name":"selection","type":"Selection","deprecated":false,"deprecationMessage":""},{"name":"text","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selection","type":"Selection","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"text","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toggleEndAndStartOfEachSelection","args":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":""},{"name":"beforeSelectionText","type":"string","deprecated":false,"deprecationMessage":""},{"name":"afterSelectionText","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'"}],"optional":false,"returnType":"void","typeParameters":[],"line":168,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"editor","type":"MonacoEditor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"beforeSelectionText","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"afterSelectionText","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"PersistentMap","id":"class-PersistentMap-e9304fd2d5e73a56daa7559536506512d8ec2ca3613c2e21a9bb809a245813aaa7fefd9aedd4c3688b9bc9bd6dae4bc98c34f28459d8a31160196002d49972df","file":"src/app/_main/classes/persistent-map.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export interface PersistentMapOptions {\\n  persistentKey: string;\\n}\\n\\nexport class PersistentMap<K, V> extends Map<K, V> {\\n  override clear(): void {\\n    localStorage.removeItem(this._persistentKey);\\n    super.clear();\\n  }\\n\\n  override delete(key: K): boolean {\\n    const temp = super.delete(key);\\n    this.saveState();\\n    return temp;\\n  }\\n\\n  override set(key: K, value: V): this {\\n    const temp = super.set(key, value);\\n    this.saveState();\\n    return temp;\\n  }\\n\\n  private saveState() {\\n    localStorage.setItem(this._persistentKey, JSON.stringify([...this.entries()]));\\n  }\\n\\n  private _persistentKey = \'\';\\n\\n  constructor(\\n    { persistentKey }: PersistentMapOptions,\\n    entries?: readonly (readonly [K, V])[] | null,\\n  ) {\\n    super(\\n      persistentKey && localStorage.getItem(persistentKey)\\n        ? JSON.parse(localStorage.getItem(persistentKey)!)\\n        : entries,\\n    );\\n\\n    if (!persistentKey) {\\n      console.error(\'PersistentMap need persistentKey option\');\\n      return;\\n    }\\n\\n    this._persistentKey = persistentKey;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"type":"PersistentMapOptions","deprecated":false,"deprecationMessage":""},{"name":"entries","type":" | null","deprecated":false,"deprecationMessage":"","optional":true}],"line":27,"jsdoctags":[{"type":"PersistentMapOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"entries","type":" | null","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},"properties":[{"name":"_persistentKey","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27,"modifierKind":[121]}],"methods":[{"name":"clear","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":6,"deprecated":false,"deprecationMessage":"","modifierKind":[158]},{"name":"delete","args":[{"name":"key","type":"K","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"key","type":"K","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"saveState","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"set","args":[{"name":"key","type":"K","deprecated":false,"deprecationMessage":""},{"name":"value","type":"V","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"key","type":"K","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"V","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":"Map","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Random","id":"class-Random-581581b69ed6edb013bb3f94690e10abf06fa7f6f759220cad4e5210314a773d563ce41a0b800f5519b345137149bf8022901c589a08c21be9ae3b4b40cc5d46","file":"src/app/_main/classes/random.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class Random {\\n  private m_w = 123456789;\\n  private m_z = 987654321;\\n  private mask = 0xffffffff;\\n\\n  /**\\n   * Random number generation class with optional seed\\n   * @param seed the seed to use in random number generation\\n   */\\n  constructor(seed: number = new Date().getTime()) {\\n    this.m_w = (123456789 + seed) & this.mask;\\n    this.m_z = (987654321 - seed) & this.mask;\\n  }\\n\\n  /**\\n   * Returns number between 0 (inclusive) and 1.0 (exclusive),\\n   * just like Math.random().\\n   */\\n  public random() {\\n    this.m_z = (36969 * (this.m_z & 65535) + (this.m_z >> 16)) & this.mask;\\n    this.m_w = (18000 * (this.m_w & 65535) + (this.m_w >> 16)) & this.mask;\\n    let result = ((this.m_z << 16) + (this.m_w & 65535)) >>> 0;\\n    result /= 4294967296;\\n    return result;\\n  }\\n\\n  /**\\n   * Returns number from range\\n   * @param start start number (inclusive)\\n   * @param end end number (inclusive)\\n   * @param step optional step between random numbers\\n   */\\n  public range(start: number, end: number, step?: number) {\\n    const diff = Math.abs(end - start);\\n    const min = Math.min(start, end);\\n\\n    if (step) {\\n      const count = Math.floor(diff / step);\\n      return Math.floor(this.random() * count) * step + min;\\n    } else {\\n      return this.random() * diff + min;\\n    }\\n  }\\n\\n  /**\\n   * Returns fixed number (integer) from range\\n   * @param start start number (inclusive)\\n   * @param end end number (inclusive)\\n   */\\n  public fixedRange(start: number, end: number) {\\n    return this.range(start, end, 1);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"<p>Random number generation class with optional seed</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"seed","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"new Date().getTime()"}],"line":4,"rawdescription":"\\n\\nRandom number generation class with optional seed\\n","jsdoctags":[{"name":{"pos":179,"end":183,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"seed"},"type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"new Date().getTime()","tagName":{"pos":173,"end":178,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the seed to use in random number generation</p>\\n"}]},"properties":[{"name":"m_w","defaultValue":"123456789","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2,"modifierKind":[121]},{"name":"m_z","defaultValue":"987654321","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":3,"modifierKind":[121]},{"name":"mask","defaultValue":"0xffffffff","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4,"modifierKind":[121]}],"methods":[{"name":"fixedRange","args":[{"name":"start","type":"number","deprecated":false,"deprecationMessage":""},{"name":"end","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns fixed number (integer) from range\\n","description":"<p>Returns fixed number (integer) from range</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1347,"end":1352,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"start"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1341,"end":1346,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>start number (inclusive)</p>\\n"},{"name":{"pos":1390,"end":1393,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"end"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1384,"end":1389,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>end number (inclusive)</p>\\n"}]},{"name":"random","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns number between 0 (inclusive) and 1.0 (exclusive),\\njust like Math.random().\\n","description":"<p>Returns number between 0 (inclusive) and 1.0 (exclusive),\\njust like Math.random().</p>\\n","modifierKind":[123]},{"name":"range","args":[{"name":"start","type":"number","deprecated":false,"deprecationMessage":""},{"name":"end","type":"number","deprecated":false,"deprecationMessage":""},{"name":"step","type":"number","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns number from range\\n","description":"<p>Returns number from range</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":826,"end":831,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"start"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":820,"end":825,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>start number (inclusive)</p>\\n"},{"name":{"pos":869,"end":872,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"end"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":863,"end":868,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>end number (inclusive)</p>\\n"},{"name":{"pos":908,"end":912,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"step"},"type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":902,"end":907,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>optional step between random numbers</p>\\n"}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"SelectionEditPlugin","id":"class-SelectionEditPlugin-49e4a762fe538fe0d818170c43540567f43f147de7b46758da4b52d260b5ed308b693f706469f003b61ad50d3baa3f839a377889c7dcc7898b4a25c80aeace2d","file":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { snakeCase } from \'lodash-es\';\\nimport { CursorStateComputer, EditOperation, Editor, Selection } from \'../typings\';\\n\\nexport type SelectionEditOperation = { [key in SelectionEditOperationType]: string };\\n\\nexport enum SelectionEditOperationType {\\n  before = \'BEFORE\',\\n  after = \'AFTER\',\\n  beforeEachLine = \'BEFORE_EACH_LINE\',\\n  afterEachLine = \'AFTER_EACH_LINE\',\\n}\\n\\nexport const SelectionEditOperationOrder = {\\n  before: 1,\\n  after: 4,\\n  beforeEachLine: 2,\\n  afterEachLine: 3,\\n};\\n\\nconst SelectionEditOperationConverter: {\\n  [key in SelectionEditOperationType]: (\\n    editor: Editor,\\n    selection: Selection,\\n    value: string,\\n  ) => EditOperation[];\\n} = {\\n  [SelectionEditOperationType.before]: (editor: Editor, selection: Selection, value: string) => {\\n    return [\\n      {\\n        range: {\\n          startColumn: 1,\\n          startLineNumber: selection.startLineNumber,\\n          endColumn: 1,\\n          endLineNumber: selection.startLineNumber,\\n        },\\n        text: value,\\n      },\\n    ] as EditOperation[];\\n  },\\n  [SelectionEditOperationType.after]: (editor: Editor, selection: Selection, value: string) => {\\n    const column = (editor.getModel()?.getLineLength(selection.endLineNumber) || 0) + 1;\\n\\n    return [\\n      {\\n        range: {\\n          startColumn: column,\\n          startLineNumber: selection.endLineNumber,\\n          endColumn: column,\\n          endLineNumber: selection.endLineNumber,\\n        },\\n        text: value,\\n      },\\n    ] as EditOperation[];\\n  },\\n  [SelectionEditOperationType.beforeEachLine]: (\\n    editor: Editor,\\n    selection: Selection,\\n    value: string,\\n  ) => {\\n    const startLine = selection.startLineNumber;\\n    const endLine = selection.endLineNumber;\\n\\n    const difference = Math.abs(startLine - endLine) + 1;\\n    const offset = Math.min(startLine, endLine);\\n    const indexes = [...new Array(difference).keys()].map((k) => k + offset);\\n\\n    return indexes.map((line) => ({\\n      range: {\\n        startLineNumber: line,\\n        startColumn: 1,\\n        endLineNumber: line,\\n        endColumn: 1,\\n      },\\n      text: value,\\n    })) as EditOperation[];\\n  },\\n  [SelectionEditOperationType.afterEachLine]: (\\n    editor: Editor,\\n    selection: Selection,\\n    value: string,\\n  ) => {\\n    const model = editor.getModel();\\n    if (!model) return [];\\n\\n    const startLine = selection.startLineNumber;\\n    const endLine = selection.endLineNumber;\\n\\n    const difference = Math.abs(startLine - endLine) + 1;\\n    const offset = Math.min(startLine, endLine);\\n    const indexes = [...new Array(difference).keys()].map((k) => k + offset);\\n\\n    return indexes.map((line) => {\\n      const column = model.getLineLength(line) + 1;\\n\\n      return {\\n        range: {\\n          startLineNumber: line,\\n          startColumn: column,\\n          endLineNumber: line,\\n          endColumn: column,\\n        },\\n        text: value,\\n      } as EditOperation;\\n    });\\n  },\\n};\\n\\nexport class SelectionEditPlugin {\\n  public static init(prototype: any) {\\n    prototype.getSelectionEdits = function (edits: SelectionEditOperation) {\\n      return SelectionEditPlugin.getSelectionEdits.bind(this)(edits);\\n    };\\n\\n    prototype.executeSelectionEdits = function (\\n      edits: SelectionEditOperation,\\n      endCursorState?: CursorStateComputer | Selection[],\\n    ) {\\n      return SelectionEditPlugin.executeSelectionEdits.bind(this)(edits, endCursorState);\\n    };\\n  }\\n\\n  public static getSelectionEdits(edits: SelectionEditOperation): EditOperation[] {\\n    const editor: Editor = this as any;\\n    const selections = editor.getSelections();\\n    let _edits: EditOperation[] = [];\\n\\n    if (!selections) return [];\\n\\n    for (const selection of selections) {\\n      const entries = Object.entries(edits).sort((a: [string, string], b: [string, string]) => {\\n        return (\\n          (SelectionEditOperationOrder as any)[a[0] as any] -\\n          (SelectionEditOperationOrder as any)[b[0] as any]\\n        );\\n      });\\n      for (const [key, value] of entries) {\\n        const _key = snakeCase(key).toUpperCase();\\n        _edits = [\\n          ..._edits,\\n          ...SelectionEditOperationConverter[_key as SelectionEditOperationType](\\n            editor,\\n            selection,\\n            value,\\n          ),\\n        ];\\n      }\\n    }\\n    return _edits;\\n  }\\n\\n  public static executeSelectionEdits(\\n    edits: SelectionEditOperation,\\n    endCursorState?: CursorStateComputer | Selection[],\\n  ) {\\n    const editor: Editor = this as any;\\n    const _edits = this.getSelectionEdits(edits);\\n    editor.executeEdits(\'\', _edits, endCursorState);\\n  }\\n}\\n","properties":[],"methods":[{"name":"executeSelectionEdits","args":[{"name":"edits","type":"SelectionEditOperation","deprecated":false,"deprecationMessage":""},{"name":"endCursorState","type":"CursorStateComputer | Selection[]","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"edits","type":"SelectionEditOperation","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"endCursorState","type":"CursorStateComputer | Selection[]","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getSelectionEdits","args":[{"name":"edits","type":"SelectionEditOperation","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"EditOperation[]","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"edits","type":"SelectionEditOperation","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"init","args":[{"name":"prototype","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"prototype","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Story","id":"class-Story-6e6d1bb28d53958f126399d559d441dd08d803efd12a09abd5572233e80faa1818c36262195da6552d1b0082103d18c60f722445ad2c2eeff6c64a5d6e810676","file":"src/stories/helpers/classes/story.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormControl } from \'@ngneat/reactive-forms\';\\nimport { componentWrapperDecorator } from \'@storybook/angular\';\\nimport { merge, omit } from \'lodash-es\';\\nimport { exposeAllPossibilities } from \'../component-content-decorator.helper\';\\nimport { StoryPageConfig } from \'./story-page-config.class\';\\nimport { StoryTemplate } from \'./story-template.class\';\\nimport { StoryFn } from \'@storybook/angular\';\\nimport { componentTemplateDecorator } from \'../functions/component-template-decorator.function\';\\n\\nexport type Props<C> = Partial<C> & {\\n  formControl?: FormControl<any>;\\n  content?: string;\\n};\\n\\nexport interface StoryConfig<C> {\\n  config: StoryPageConfig;\\n  template: StoryTemplate<C>;\\n  description?: string;\\n  multiple?: {\\n    prop: string;\\n    options: any[];\\n  };\\n  props?: Props<C>;\\n  code?: string;\\n  html?: string;\\n}\\n\\nexport class Story<C> {\\n  private _config: StoryConfig<C>;\\n  private _story: StoryFn<C>;\\n\\n  constructor(config: StoryConfig<C>) {\\n    this._config = config;\\n    this._story = config.template.template();\\n\\n    if (config.multiple) {\\n      exposeAllPossibilities(\\n        this._story,\\n        config.config.selector,\\n        config.multiple.prop,\\n        config.multiple.options,\\n      );\\n    }\\n\\n    if (config.description) {\\n      this.addDescription(config.description);\\n    }\\n\\n    if (config.code) {\\n      this.addCode(config.code);\\n    }\\n\\n    if (config.html) {\\n      this.addTemplate(config.html);\\n    } else if (!config.multiple) {\\n      this.addDefaultTemplate();\\n    }\\n\\n    if (this.props) {\\n      this.addProps(this.props);\\n    }\\n  }\\n\\n  public mergeConfig(config: any) {\\n    merge(this._story, config);\\n  }\\n\\n  public addDescription(description: string) {\\n    this.mergeConfig({\\n      parameters: {\\n        docs: {\\n          description: {\\n            story: description,\\n          },\\n        },\\n      },\\n    });\\n  }\\n\\n  public addProps(props: Props<C>) {\\n    this.mergeConfig({\\n      args: omit(props, [\'content\']),\\n    });\\n  }\\n\\n  public addCode(code: string) {\\n    this.mergeConfig({\\n      parameters: {\\n        docs: {\\n          source: {\\n            code: code,\\n            language: \'html\',\\n            type: \'auto\',\\n          },\\n        },\\n      },\\n    });\\n  }\\n\\n  public addTemplate(template: string) {\\n    this.mergeConfig({\\n      decorators: [componentWrapperDecorator(() => template)],\\n      parameters: {\\n        docs: {\\n          source: {\\n            code: template,\\n            language: \'html\',\\n            type: \'auto\',\\n          },\\n        },\\n      },\\n    });\\n  }\\n\\n  public addDefaultTemplate() {\\n    this.mergeConfig({\\n      decorators: [\\n        componentTemplateDecorator(this.props, {\\n          selector: this._config.config.selector,\\n        }),\\n      ],\\n    });\\n  }\\n\\n  public get props() {\\n    return merge({}, this._config.props, this._config.template.props);\\n  }\\n\\n  public story() {\\n    return this._story;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"config","type":"StoryConfig<C>","deprecated":false,"deprecationMessage":""}],"line":30,"jsdoctags":[{"name":"config","type":"StoryConfig<C>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"StoryConfig<C>","optional":false,"description":"","line":29,"modifierKind":[121]},{"name":"_story","deprecated":false,"deprecationMessage":"","type":"StoryFn<C>","optional":false,"description":"","line":30,"modifierKind":[121]}],"methods":[{"name":"addCode","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"addDefaultTemplate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"addDescription","args":[{"name":"description","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"description","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"addProps","args":[{"name":"props","type":"Props<C>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"props","type":"Props<C>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"addTemplate","args":[{"name":"template","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"template","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mergeConfig","args":[{"name":"config","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"config","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"story","args":[],"optional":false,"returnType":"StoryFn<C>","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"indexSignatures":[],"accessors":{"props":{"name":"props","getSignature":{"name":"props","type":"","returnType":"","line":125}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"StoryPageConfig","id":"class-StoryPageConfig-fb1e9f6e7a05be7f30e819f400a6a312108c47cfb0a4c758503d7b7c0810b485439e6534b4b31af2a046bebdb64227cd7c34ebb5b528fd1dfc4213c55a87b1cc","file":"src/stories/helpers/classes/story-page-config.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { NgControl } from \'@angular/forms\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { MainModule } from \'@main/_main.module\';\\nimport { Meta, moduleMetadata } from \'@storybook/angular\';\\nimport { NgModuleMetadata } from \'@storybook/angular/dist/ts3.9/client/preview/types\';\\nimport { merge } from \'lodash-es\';\\nimport { getAllProperties } from \'../functions/get-all-properties.function\';\\nimport { TestNgControl } from \'../../../tests/helpers/ng-control-testing-provider.helper\';\\n\\nexport interface ExtendedMeta extends Meta {\\n  metadata?: Partial<NgModuleMetadata>;\\n  selector: string;\\n}\\n\\nconst DEFAULT_METADATA: Partial<NgModuleMetadata> = {\\n  imports: [MainModule, BrowserAnimationsModule],\\n  providers: [\\n    {\\n      provide: NgControl,\\n      useClass: TestNgControl,\\n    },\\n  ],\\n};\\n\\nconst IGNORED_PROPERTIES = getAllProperties({});\\n\\nexport class StoryPageConfig {\\n  private _meta: ExtendedMeta;\\n\\n  constructor(meta: ExtendedMeta) {\\n    this._meta = meta;\\n\\n    this._meta.decorators = [moduleMetadata(merge({}, DEFAULT_METADATA, this._meta.metadata))];\\n    this.disableEditingFunctions();\\n  }\\n\\n  private disableEditingFunctions() {\\n    if (!this._meta.argTypes) {\\n      this._meta.argTypes = {};\\n    }\\n\\n    const properties = getAllProperties(this._meta.component.prototype);\\n    for (const [property, predicate] of properties.map(\\n      (p) => [p, this.propertyPredicate(p)] as [string, any],\\n    )) {\\n      if (typeof this._meta.component.prototype[property] === \'function\') {\\n        switch (predicate) {\\n          case \'delete\':\\n            this._meta.argTypes[property] = { table: { disable: true } };\\n            break;\\n          case \'readonly\':\\n            this._meta.argTypes[property] = { control: false };\\n            break;\\n        }\\n      }\\n    }\\n  }\\n\\n  private propertyPredicate(property: string) {\\n    if (property[0] === \'_\') return \'delete\';\\n    if (property.startsWith(\'ng\')) return \'delete\';\\n    return !IGNORED_PROPERTIES.includes(property) ? \'readonly\' : null;\\n  }\\n\\n  public setTitle(title: string) {\\n    this._meta.title = title;\\n    return this;\\n  }\\n\\n  public addDecorators(decorators: Meta[\'decorators\']) {\\n    if (!this._meta.decorators) {\\n      this._meta.decorators = [];\\n    }\\n\\n    this._meta.decorators = ([] as any[]).concat(this._meta.decorators, decorators);\\n    return this;\\n  }\\n\\n  public get selector() {\\n    return this._meta.selector;\\n  }\\n\\n  public meta() {\\n    return this._meta as Meta;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"meta","type":"ExtendedMeta","deprecated":false,"deprecationMessage":""}],"line":28,"jsdoctags":[{"name":"meta","type":"ExtendedMeta","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"_meta","deprecated":false,"deprecationMessage":"","type":"ExtendedMeta","optional":false,"description":"","line":28,"modifierKind":[121]}],"methods":[{"name":"addDecorators","args":[{"name":"decorators","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"this","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"decorators","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"disableEditingFunctions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"meta","args":[],"optional":false,"returnType":"Meta","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"propertyPredicate","args":[{"name":"property","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"\\"delete\\" | \\"readonly\\"","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"property","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setTitle","args":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"this","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"accessors":{"selector":{"name":"selector","getSignature":{"name":"selector","type":"","returnType":"","line":79}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"StoryTemplate","id":"class-StoryTemplate-e88baf2e69592847207fb0c214d06e017824d6a61233f7b3db14f688638f500c51590877a7790472c1ddba9b6f3a40a90267c2475a0fa4d39c5fd10ab2dd5fc8","file":"src/stories/helpers/classes/story-template.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { merge } from \'lodash-es\';\\nimport { Props } from \'./story.class\';\\n\\nexport class StoryTemplate<C> {\\n  private _args: Props<C>;\\n\\n  constructor(args: Props<C>) {\\n    const controlObject = args.formControl ? { formControl: args.formControl } : {};\\n    this._args = merge({}, controlObject, args);\\n  }\\n\\n  public get props() {\\n    return this._args;\\n  }\\n\\n  public template() {\\n    return ((args: C) => ({\\n      props: merge({}, args),\\n    })).bind({});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"args","type":"Props<C>","deprecated":false,"deprecationMessage":""}],"line":5,"jsdoctags":[{"name":"args","type":"Props<C>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"_args","deprecated":false,"deprecationMessage":"","type":"Props<C>","optional":false,"description":"","line":5,"modifierKind":[121]}],"methods":[{"name":"template","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"indexSignatures":[],"accessors":{"props":{"name":"props","getSignature":{"name":"props","type":"","returnType":"","line":12}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"TaskFilters","id":"class-TaskFilters-efdfa4fc9fe6801bfce58148b5f15d54722fae8ad2da7fd0154e81a11cab479b0752a050d11b237c0fae729b673b93d7cc9f0b63682e3ee5aa18f8b244bd8b98","file":"src/app/tasks/filters/task.filters.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { DataFilter, DataFilterType } from \'@main/interfaces/filters.interface\';\\nimport { TaskType } from \'@tasks/enums/task-type.enum\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\n\\nexport class TaskFilters {\\n  public static SPRINT_ID(sprintId: number): DataFilter<Task, number> {\\n    return {\\n      type: DataFilterType.BACKEND,\\n      field: \'sprintId\',\\n      value: sprintId,\\n    };\\n  }\\n\\n  public static ASSIGNEE_ID(assigneeId: number): DataFilter<Task, number> {\\n    return {\\n      type: DataFilterType.BACKEND,\\n      field: \'assigneeId\',\\n      value: assigneeId,\\n    };\\n  }\\n\\n  public static STATUS_IDS(statusIds: number[]): DataFilter<Task, number[]> {\\n    return {\\n      type: DataFilterType.BACKEND,\\n      field: \'statusId\',\\n      value: statusIds,\\n    };\\n  }\\n\\n  public static TYPES(types: TaskType[]): DataFilter<Task, TaskType[]> {\\n    return {\\n      type: DataFilterType.BACKEND,\\n      field: \'type\',\\n      value: types,\\n    };\\n  }\\n\\n  public static PARENT_TASK_ID(parentTaskId: number): DataFilter<Task, number> {\\n    return {\\n      type: DataFilterType.BACKEND,\\n      field: \'parentTaskId\',\\n      value: parentTaskId,\\n    };\\n  }\\n\\n  public static BACKLOG(): DataFilter<Task, boolean> {\\n    return {\\n      type: DataFilterType.BACKEND,\\n      field: \'backlog\',\\n      value: true,\\n    };\\n  }\\n}\\n","properties":[],"methods":[{"name":"ASSIGNEE_ID","args":[{"name":"assigneeId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DataFilter<Task, number>","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"assigneeId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"BACKLOG","args":[],"optional":false,"returnType":"DataFilter<Task, boolean>","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","modifierKind":[124]},{"name":"PARENT_TASK_ID","args":[{"name":"parentTaskId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DataFilter<Task, number>","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"parentTaskId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"SPRINT_ID","args":[{"name":"sprintId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DataFilter<Task, number>","typeParameters":[],"line":6,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"sprintId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"STATUS_IDS","args":[{"name":"statusIds","type":"number[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DataFilter<Task, number[]>","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"statusIds","type":"number[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"TYPES","args":[{"name":"types","type":"TaskType[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DataFilter<Task, TaskType[]>","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"types","type":"TaskType[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"TestNgControl","id":"class-TestNgControl-65a600bc24eca89078e7e3dc17a344d2351408064349b50f38441af4884d2794be601c4825b1e9cb93588951541394916d0367ab09c49b656ae57e34b058ce78","file":"src/tests/helpers/ng-control-testing-provider.helper.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormControl } from \'@ngneat/reactive-forms\';\\nimport { AbstractControl, NgControl } from \'@angular/forms\';\\n\\nexport class TestNgControl extends NgControl {\\n  private _control = new FormControl<any>(\'\');\\n  viewToModelUpdate(newValue: any): void {\\n    this._control = newValue;\\n  }\\n  get control(): AbstractControl | null {\\n    return this._control;\\n  }\\n}\\n","properties":[{"name":"_control","defaultValue":"new FormControl<any>(\'\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":5,"modifierKind":[121]}],"methods":[{"name":"viewToModelUpdate","args":[{"name":"newValue","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":6,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"newValue","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":"NgControl","accessors":{"control":{"name":"control","getSignature":{"name":"control","type":"","returnType":"AbstractControl | null","line":9}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UserUtils","id":"class-UserUtils-54cb87eeceb3e562c1ea2d62f6607799b3b41c3b3e9cd25c67407e0f8672a01ced7e7f3d3ccb40987fc250b58a010310376cfcc599272cc698d2d73eb74ca44d","file":"src/app/dashboard/classes/user.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Random } from \'@main/classes/random.class\';\\nimport * as Color from \'color\';\\n\\nexport class UserUtils {\\n  public static getColorById(id: number): Color {\\n    const random = new Random(id);\\n    const randomNumber = random.random();\\n    const hue = randomNumber * 255;\\n    return Color.hsl(hue, 95, 41);\\n  }\\n\\n  /**\\n   * @unsupported\\n   */\\n  public static getColorByUsername(username: string): Color {\\n    let numberRepresentation = username\\n      .split(\'\')\\n      .map((c) => c.charCodeAt(0))\\n      .reduce((sum, n) => sum * 10 ** 6 + n, 0);\\n\\n    // This requires some tweaks to make the number smaller.\\n    numberRepresentation = numberRepresentation / 10000000;\\n\\n    const random = new Random(numberRepresentation);\\n    const randomNumber = random.random();\\n    const hue = randomNumber * 255;\\n    return Color.hsl(hue, 95, 41);\\n  }\\n}\\n","properties":[],"methods":[{"name":"getColorById","args":[{"name":"id","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Color","typeParameters":[],"line":5,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"id","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getColorByUsername","args":[{"name":"username","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Color","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n","description":"","modifierKind":[124],"jsdoctags":[{"name":"username","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Utils","id":"class-Utils-993fd52393b6abc75c16c90a949c606861f4701030642a1815d3e317f762756a0b354265ba1aef78552ff09f6244f5397e003887c973b25f4abc63e7e657818a","file":"src/app/_main/classes/util/utils.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { isString } from \'lodash-es\';\\n\\n/**\\n * Utilities class with some useful methods not available in any libraries.\\n *\\n * TODO: Move this utility functions outside of class\\n */\\nexport class Utils {\\n  /**\\n   * Function to find first occurrence of regex in string\\n   * @param string String to search in\\n   * @param regex Regex to search for\\n   * @param startPos Optional starting position in the string\\n   * @returns The index of the first match\\n   */\\n  public static regexIndexOf(string: string, regex: RegExp, startPos: number = 0) {\\n    var indexOf = string.substring(startPos).search(regex);\\n    return indexOf >= 0 ? indexOf + startPos : indexOf;\\n  }\\n\\n  /**\\n   * Converts string from camelCase and PascalCase to snake_case\\n   * @param inputString String to convert\\n   * @returns string in snake_case\\n   */\\n  public static snakeCase(inputString: string) {\\n    return inputString\\n      .split(\'\')\\n      .map((character, index) => {\\n        if (Utils.isLetter(character) && character == character.toUpperCase()) {\\n          if (index > 0) {\\n            return \'_\' + character.toLowerCase();\\n          } else {\\n            return character.toLowerCase();\\n          }\\n        } else {\\n          return character;\\n        }\\n      })\\n      .join(\'\');\\n  }\\n\\n  /**\\n   * Check if object has all the properties from array\\n   * @param object Object to check\\n   * @param keys keys to search for\\n   * @returns true if object has all of the specified properties, false otherwise.\\n   */\\n  public static has(object: any, keys: string[]) {\\n    for (const key of keys) {\\n      if (!object.hasOwnProperty(key)) {\\n        return false;\\n      }\\n    }\\n    return true;\\n  }\\n\\n  /**\\n   * Checks if passed character is a letter\\n   * @param char Character to check\\n   * @returns\\n   */\\n  public static isLetter(char: String) {\\n    if (char.length > 1) return false;\\n    return (char >= \'A\' && char <= \'Z\') || (char >= \'a\' && char <= \'z\');\\n  }\\n\\n  /**\\n   * Checks if passed string is an ISO date string\\n   * ex. 2011-10-05T14:48:00.000Z\\n   * @param text\\n   * @returns\\n   */\\n  public static isISODate(text: any) {\\n    if (!isString(text)) return false;\\n    if ((new Date(text) as any) !== \'Invalid Date\' && !isNaN(new Date(text) as any)) {\\n      if (text === new Date(text).toISOString()) {\\n        return true;\\n      } else {\\n        return false;\\n      }\\n    } else {\\n      return false;\\n    }\\n  }\\n}\\n","properties":[],"description":"<p>Utilities class with some useful methods not available in any libraries.</p>\\n<p>TODO: Move this utility functions outside of class</p>\\n","rawdescription":"\\n\\nUtilities class with some useful methods not available in any libraries.\\n\\nTODO: Move this utility functions outside of class\\n","methods":[{"name":"has","args":[{"name":"object","type":"any","deprecated":false,"deprecationMessage":""},{"name":"keys","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCheck if object has all the properties from array\\n","description":"<p>Check if object has all the properties from array</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":1328,"end":1334,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":147,"escapedText":"object"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1322,"end":1327,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Object to check</p>\\n"},{"name":{"pos":1363,"end":1367,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"keys"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":1357,"end":1362,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>keys to search for</p>\\n"},{"tagName":{"pos":1393,"end":1400,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>true if object has all of the specified properties, false otherwise.</p>\\n"}]},{"name":"isISODate","args":[{"name":"text","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if passed string is an ISO date string\\nex. 2011-10-05T14:48:00.000Z\\n","description":"<p>Checks if passed string is an ISO date string\\nex. 2011-10-05T14:48:00.000Z</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":2023,"end":2027,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"text"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":2017,"end":2022,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":2034,"end":2041,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"isLetter","args":[{"name":"char","type":"String","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if passed character is a letter\\n","description":"<p>Checks if passed character is a letter</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":1718,"end":1722,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"char"},"type":"String","deprecated":false,"deprecationMessage":"","tagName":{"pos":1712,"end":1717,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Character to check</p>\\n"},{"tagName":{"pos":1748,"end":1755,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"regexIndexOf","args":[{"name":"string","type":"string","deprecated":false,"deprecationMessage":""},{"name":"regex","type":"RegExp","deprecated":false,"deprecationMessage":""},{"name":"startPos","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"0"}],"optional":false,"returnType":"any","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFunction to find first occurrence of regex in string\\n","description":"<p>Function to find first occurrence of regex in string</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":277,"end":283,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":149,"escapedText":"string"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":271,"end":276,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>String to search in</p>\\n"},{"name":{"pos":316,"end":321,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"regex"},"type":"RegExp","deprecated":false,"deprecationMessage":"","tagName":{"pos":310,"end":315,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Regex to search for</p>\\n"},{"name":{"pos":354,"end":362,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"startPos"},"type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"0","tagName":{"pos":348,"end":353,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Optional starting position in the string</p>\\n"},{"tagName":{"pos":410,"end":417,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The index of the first match</p>\\n"}]},{"name":"snakeCase","args":[{"name":"inputString","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nConverts string from camelCase and PascalCase to snake_case\\n","description":"<p>Converts string from camelCase and PascalCase to snake_case</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":741,"end":752,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"inputString"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":735,"end":740,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>String to convert</p>\\n"},{"tagName":{"pos":777,"end":784,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>string in snake_case</p>\\n"}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[{"name":"ClickStopPropagationDirective","id":"directive-ClickStopPropagationDirective-ddc1d43f6a5b21c929b38cfb7537bf0ff6289e8593487d85d87831138e5c99f1f265e581b7ef0e6e059f1a148630c3dea495f2ae3c65d00682d55998e8f3abb2","file":"src/app/_main/directives/click-stop-propagation/click-stop-propagation.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, HostListener } from \'@angular/core\';\\n\\n@Directive({\\n  selector: \'[click-stop-propagation]\',\\n})\\nexport class ClickStopPropagationDirective {\\n  @HostListener(\'click\', [\'$event\'])\\n  public onClick(event: any): void {\\n    event.stopPropagation();\\n\\n    window.document.dispatchEvent(\\n      new Event(\'click\', {\\n        bubbles: true,\\n        cancelable: true,\\n      }),\\n    );\\n  }\\n}\\n","selector":"[click-stop-propagation]","providers":[],"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"click","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":8}],"propertiesClass":[],"methodsClass":[{"name":"onClick","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'click\', [\'$event\']"}],"modifierKind":[123],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},{"name":"FocusInitialDirective","id":"directive-FocusInitialDirective-feb498330e79a64654fda2c4cf92a23146803a354a64533c918b63d11d719d108550b6d6a7930b71f7840fd03eb4e9835d4fb9a7d226fee3b1d06a4da6dc7012","file":"src/app/_main/directives/focus-initial/focus-initial.directive.ts","type":"directive","description":"<p>Directive to focus on the first input element on the page</p>\\n","rawdescription":"\\n\\nDirective to focus on the first input element on the page\\n","sourceCode":"import { AfterViewInit, Directive, ElementRef } from \'@angular/core\';\\n\\n/**\\n * Directive to focus on the first input element on the page\\n */\\n@Directive({\\n  selector: \'[appFocusInitial]\',\\n})\\nexport class FocusInitialDirective implements AfterViewInit {\\n  /**\\n   * Default constructor of the directive.\\n   * @param el Reference to attached element\\n   */\\n  constructor(private el: ElementRef) {}\\n\\n  /**\\n   * Lifecycle hook to initialize the directive.\\n   */\\n  ngAfterViewInit(): void {\\n    this.el.nativeElement.__ngContext__[33].focus();\\n  }\\n}\\n","selector":"[appFocusInitial]","providers":[],"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLifecycle hook to initialize the directive.\\n","description":"<p>Lifecycle hook to initialize the directive.</p>\\n"}],"implements":["AfterViewInit"],"constructorObj":{"name":"constructor","description":"<p>Default constructor of the directive.</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"el","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":9,"rawdescription":"\\n\\nDefault constructor of the directive.\\n","jsdoctags":[{"name":{"pos":312,"end":314,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"el"},"type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"pos":306,"end":311,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Reference to attached element</p>\\n"}]}},{"name":"LetDirective","id":"directive-LetDirective-dad31174d6b77242ec85fb1e9550d94920d2e30aa138dc8a792333c22f3cfc3aa05987eca68352b2579e857fc52e9e4254bd87e687541fcf701ecb567c9ddf39","file":"src/app/_main/directives/let/let.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, Input, TemplateRef, ViewContainerRef } from \'@angular/core\';\\n\\ninterface LetContext<T> {\\n  ngLet: T;\\n}\\n\\n@Directive({\\n  selector: \'[ngLet]\',\\n})\\nexport class LetDirective<T> {\\n  private _context: LetContext<T | null> = { ngLet: null };\\n\\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef<LetContext<T>>) {\\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\\n  }\\n\\n  @Input()\\n  set ngLet(value: T) {\\n    this._context.ngLet = value;\\n  }\\n}\\n","selector":"[ngLet]","providers":[],"inputsClass":[{"name":"ngLet","deprecated":false,"deprecationMessage":"","line":18,"type":"T","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"_context","defaultValue":"{ ngLet: null }","deprecated":false,"deprecationMessage":"","type":"LetContext<T | null>","optional":false,"description":"","line":11,"modifierKind":[121]}],"methodsClass":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""},{"name":"_templateRef","type":"TemplateRef<LetContext<T>>","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_templateRef","type":"TemplateRef<LetContext<T>>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"ngLet":{"name":"ngLet","setSignature":{"name":"ngLet","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":18,"jsdoctags":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}},{"name":"ViewContainerDirective","id":"directive-ViewContainerDirective-225bcb7b95e8a355acb86f806f90e51e28e3d264438a1368b08ee2384c363ef49b6a5c00273e566daffcb33e0ae49cd0d897f123b9d4a6a4109a0fb710e96d59","file":"src/app/_main/directives/view-container/view-container.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, ViewContainerRef } from \'@angular/core\';\\n\\n@Directive({\\n  selector: \'[view-container]\',\\n})\\nexport class ViewContainerDirective {\\n  constructor(public viewContainerRef: ViewContainerRef) {}\\n}\\n","selector":"[view-container]","providers":[],"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"viewContainerRef","deprecated":false,"deprecationMessage":"","type":"ViewContainerRef","optional":false,"description":"","line":7,"modifierKind":[123]}],"methodsClass":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"viewContainerRef","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""}],"line":6,"jsdoctags":[{"name":"viewContainerRef","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}],"components":[{"name":"AddMemberDialog","id":"component-AddMemberDialog-6140aee0e7020a5e4cb044de42665e5f1e04724e9a346c85c86d60b4f702076935a9c012a4a66dca748b7c75242ceabc56e96403ba4b511a9dcb3350d51e3d5c","file":"src/app/dashboard/dialogs/add-member/add-member.dialog.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-add-member-dialog","styleUrls":["./add-member.dialog.scss"],"styles":[],"templateUrl":["./add-member.dialog.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"AddMemberDialogData","optional":false,"description":"","line":29,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123]},{"name":"form","defaultValue":"new FormGroup({\\n    email: new FormControl(\'\', [requiredValidator()]),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"statusList$","deprecated":false,"deprecationMessage":"","type":"Observable<Status[]>","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"workspaceList$","deprecated":false,"deprecationMessage":"","type":"Observable<Workspace[]>","optional":false,"description":"","line":22,"modifierKind":[123]}],"methodsClass":[{"name":"addMembers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""},{"name":"cancel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Inject } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { MatDialogRef, MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { Workspace } from \'@dashboard/interfaces/workspace.interface\';\\nimport { RouterExtensionsService } from \'@main/services/router-extensions/router-extensions.service\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport { Observable } from \'rxjs\';\\nimport { requiredValidator } from \'../../../_main/validators/required.validator\';\\n\\nexport interface AddMemberDialogData {\\n  workspaceId: number;\\n  projectId?: number;\\n}\\n\\n@Component({\\n  selector: \'app-add-member-dialog\',\\n  templateUrl: \'./add-member.dialog.html\',\\n  styleUrls: [\'./add-member.dialog.scss\'],\\n})\\nexport class AddMemberDialog {\\n  public statusList$!: Observable<Status[]>;\\n  public workspaceList$!: Observable<Workspace[]>;\\n\\n  public form = new FormGroup({\\n    email: new FormControl(\'\', [requiredValidator()]),\\n  });\\n\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\\n    private dialogRef: MatDialogRef<AddMemberDialog>,\\n    private routerExtensions: RouterExtensionsService,\\n  ) {}\\n\\n  addMembers() {\\n    const formValues = this.form.value;\\n\\n    this.form.markAllAsTouched();\\n    this.form.updateValueAndValidity();\\n\\n    if (this.form.invalid) return;\\n\\n    this.dialogRef.close([formValues.email]);\\n  }\\n\\n  cancel() {\\n    this.dialogRef.close();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"form {\\n  padding-top: 10px;\\n\\n  > * {\\n    width: 100%;\\n  }\\n}\\n","styleUrl":"./add-member.dialog.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"data","type":"AddMemberDialogData","deprecated":false,"deprecationMessage":""},{"name":"dialogRef","type":"MatDialogRef<AddMemberDialog>","deprecated":false,"deprecationMessage":""},{"name":"routerExtensions","type":"RouterExtensionsService","deprecated":false,"deprecationMessage":""}],"line":26,"jsdoctags":[{"name":"data","type":"AddMemberDialogData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogRef","type":"MatDialogRef<AddMemberDialog>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"routerExtensions","type":"RouterExtensionsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<h1 mat-dialog-title i18n>Add members</h1>\\n<div mat-dialog-content>\\n  <form [formGroup]=\\"form\\" autocomplete=\\"off\\">\\n\\n    \x3c!-- Name field --\x3e\\n    <app-input floatingLabel=\\"Email or Username\\" placeholder=\\"name@example.com\\" formControlName=\\"email\\"\\n      i18n-floatingLabel i18n-placeholder>\\n    </app-input>\\n\\n  </form>\\n</div>\\n<div mat-dialog-actions>\\n  <app-button mat-button (click)=\\"cancel()\\" i18n>Cancel</app-button>\\n  <app-button (click)=\\"addMembers()\\" variant=\\"primary\\" i18n>Add</app-button>\\n</div>\\n"},{"name":"AlertDialog","id":"component-AlertDialog-1e9dca51168e9c41f2c020f82ddd6af014cbe023031cdc1cac54160d287e5cbaef852cabeaf8c65bc799462a41f1a374b319965fd93d415427fda5e5aac39455","file":"src/app/_main/dialogs/alert/alert.dialog.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-alert-dialog","styleUrls":["./alert.dialog.scss"],"styles":[],"templateUrl":["./alert.dialog.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"AlertDialogVariant","defaultValue":"AlertDialogVariant","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Passthrough to the dialog&#39;s variant enumerable.</p>\\n","line":50,"rawdescription":"\\n\\nPassthrough to the dialog\'s variant enumerable.\\n","modifierKind":[123]},{"name":"data","deprecated":false,"deprecationMessage":"","type":"AlertDialogData","optional":false,"description":"Object to pass as data to the dialog","line":58,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123]},{"name":"important","defaultValue":"this.data.variant === AlertDialogVariant.IMPORTANT","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"<p>Host binding to set if the dialog is important.</p>\\n","line":67,"rawdescription":"\\n\\nHost binding to set if the dialog is important.\\n","decorators":[{"name":"HostBinding","stringifiedArguments":"\'class.important-dialog\'"}]}],"methodsClass":[{"name":"cancel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCloses the dialog. Returns false to indicate that the dialog was closed without confirmation.\\n","description":"<p>Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.</p>\\n"},{"name":"confirm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCloses the dialog. Returns true to indicate that the dialog was closed with confirmation.\\n","description":"<p>Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.</p>\\n"}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class.important-dialog","defaultValue":"this.data.variant === AlertDialogVariant.IMPORTANT","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHost binding to set if the dialog is important.\\n","description":"<p>Host binding to set if the dialog is important.</p>\\n","line":67,"type":"boolean","decorators":[]}],"hostListeners":[],"description":"<p>Alert dialog component. Simple dialog with a title, message, and configurable buttons.</p>\\n","rawdescription":"\\n\\nAlert dialog component. Simple dialog with a title, message, and configurable buttons.\\n","type":"component","sourceCode":"import { Component, HostBinding, Inject } from \'@angular/core\';\\nimport { MatDialogRef, MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\n/**\\n * Type of the dialog variant. Used to specify what dialog styling should be used.\\n */\\nexport enum AlertDialogVariant {\\n  DEFAULT = \'default\',\\n  IMPORTANT = \'important\',\\n}\\n\\n/**\\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\\n */\\nexport interface AlertDialogData {\\n  /**\\n   * Dialog title. Displayed at the top of the dialog.\\n   */\\n  title?: string;\\n  /**\\n   * Dialog message. Displayed below the title.\\n   */\\n  message?: string;\\n  /**\\n   * Confirm button text.\\n   */\\n  confirmText?: string;\\n  /**\\n   * Cancel button text.\\n   */\\n  cancelText?: string;\\n  /**\\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\\n   */\\n  variant?: AlertDialogVariant;\\n}\\n\\n/**\\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\\n */\\n@Component({\\n  selector: \'app-alert-dialog\',\\n  templateUrl: \'./alert.dialog.html\',\\n  styleUrls: [\'./alert.dialog.scss\'],\\n})\\nexport class AlertDialog {\\n  /**\\n   * Passthrough to the dialog\'s variant enumerable.\\n   */\\n  public AlertDialogVariant = AlertDialogVariant;\\n\\n  /**\\n   * Default constructor. Injects the dialog reference and data.\\n   * @param data Object to pass as data to the dialog\\n   * @param dialogRef Reference to dialog instance\\n   */\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\\n    private dialogRef: MatDialogRef<AlertDialog>,\\n  ) {\\n    data.variant ||= AlertDialogVariant.DEFAULT;\\n  }\\n\\n  /**\\n   * Host binding to set if the dialog is important.\\n   */\\n  @HostBinding(\'class.important-dialog\') important: boolean =\\n    this.data.variant === AlertDialogVariant.IMPORTANT;\\n\\n  /**\\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\\n   */\\n  cancel() {\\n    this.dialogRef.close(false);\\n  }\\n\\n  /**\\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\\n   */\\n  confirm() {\\n    this.dialogRef.close(true);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./alert.dialog.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"<p>Default constructor. Injects the dialog reference and data.</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"data","type":"AlertDialogData","deprecated":false,"deprecationMessage":""},{"name":"dialogRef","type":"MatDialogRef<AlertDialog>","deprecated":false,"deprecationMessage":""}],"line":50,"rawdescription":"\\n\\nDefault constructor. Injects the dialog reference and data.\\n","jsdoctags":[{"name":{"pos":1308,"end":1312,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"AlertDialogData","deprecated":false,"deprecationMessage":"","tagName":{"pos":1302,"end":1307,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Object to pass as data to the dialog</p>\\n"},{"name":{"pos":1362,"end":1371,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"dialogRef"},"type":"MatDialogRef<AlertDialog>","deprecated":false,"deprecationMessage":"","tagName":{"pos":1356,"end":1361,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Reference to dialog instance</p>\\n"}]},"templateData":"<h1 mat-dialog-title [class.important]=\\"data.variant === AlertDialogVariant.IMPORTANT\\">{{ data.title }}</h1>\\n<div mat-dialog-content>\\n  <div>{{ data.message }}</div>\\n</div>\\n<div mat-dialog-actions>\\n  <app-button mat-button (click)=\\"cancel()\\">{{ data.cancelText }}</app-button>\\n  <ng-container *ngIf=\\"data.variant === AlertDialogVariant.IMPORTANT && data.confirmText\\">\\n    <app-button mat-button (click)=\\"confirm()\\" variant=\\"important\\" appFocusInitial>{{ data.confirmText }}</app-button>\\n  </ng-container>\\n  <ng-container *ngIf=\\"data.variant !== AlertDialogVariant.IMPORTANT && data.confirmText\\">\\n    <app-button mat-button (click)=\\"confirm()\\" variant=\\"primary\\" appFocusInitial>{{ data.confirmText }}</app-button>\\n  </ng-container>\\n</div>\\n"},{"name":"AppComponent","id":"component-AppComponent-d42d696610c6f9fc38bb2087aa66766023c8c931e8a8e603c893f16aa966d8d1757b3cd2bf10da3086074b50f506a95ebd417c0b24cb1eeda4d583ea4d42ed71","file":"src/app/app.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-root","styleUrls":["./app.component.scss"],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"title","defaultValue":"\'vernite\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>Title of the page</p>\\n","line":15,"rawdescription":"\\n\\nTitle of the page\\n","modifierKind":[123]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"<p>Main Component with basic layout and main router outlet</p>\\n","rawdescription":"\\n\\nMain Component with basic layout and main router outlet\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\n\\n/**\\n * Main Component with basic layout and main router outlet\\n */\\n@Component({\\n  selector: \'app-root\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.scss\'],\\n})\\nexport class AppComponent {\\n  /**\\n   * Title of the page\\n   */\\n  public title = \'vernite\';\\n\\n  constructor() {\\n    document.addEventListener(\'DOMContentLoaded\', () => {\\n      document.body.classList.remove(\'preload\');\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  width: 100%;\\n  background-color: var(--color-secondary-700);\\n}\\n","styleUrl":"./app.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":15},"templateData":"<router-outlet></router-outlet>\\n"},{"name":"BoardPage","id":"component-BoardPage-6451b81a4ba72e10cd0b418c991a054cc9bfcb205f140cc7ccfd6fa0592ad6e243bcc6e006f027ed2afc96add500740dd43654c01e01c19f5332a3d485f06a39","file":"src/app/tasks/pages/board/board.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-board","styleUrls":["./board.page.scss"],"styles":[],"templateUrl":["./board.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"board$","deprecated":false,"deprecationMessage":"","type":"Observable<[]>","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"faCheck","defaultValue":"faCheck","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":34},{"name":"faChevronRight","defaultValue":"faChevronRight","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31},{"name":"faCodeCommit","defaultValue":"faCodeCommit","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32},{"name":"faCodePullRequest","defaultValue":"faCodePullRequest","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33},{"name":"faPlus","defaultValue":"faPlus","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30},{"name":"members$","deprecated":false,"deprecationMessage":"","type":"Observable<Map<number, ProjectMember>>","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"project$","deprecated":false,"deprecationMessage":"","type":"Observable<Project>","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"projectId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"statusList","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"StatusWithTasks[]","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"statusList$","deprecated":false,"deprecationMessage":"","type":"Observable<StatusWithTasks[]>","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"statusListSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":true,"description":"","line":44,"modifierKind":[121]},{"name":"taskMap","defaultValue":"new PersistentMap<number | string, boolean>({ persistentKey: \'board\' })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[123]}],"methodsClass":[{"name":"drop","args":[{"name":"event","type":"CdkDragDrop<Task[]>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"CdkDragDrop<Task[]>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getColumnsContainerHeight","args":[{"name":"mapKey","type":"string | number","deprecated":false,"deprecationMessage":""},{"name":"element","type":"HTMLElement","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mapKey","type":"string | number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"element","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTasksFromStatus","args":[{"name":"statusId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"statusId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"idOf","args":[{"name":"o","type":"Task | string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"o","type":"Task | string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":""},{"name":"openNewTaskDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":""},{"name":"toggle","args":[{"name":"board","type":"[, StatusWithTasks[]]","deprecated":false,"deprecationMessage":""},{"name":"element","type":"HTMLElement","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"board","type":"[, StatusWithTasks[]]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"element","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CdkDragDrop, moveItemInArray, transferArrayItem } from \'@angular/cdk/drag-drop\';\\nimport { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { ProjectMember } from \'@dashboard/interfaces/project-member.interface\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { MemberService } from \'@dashboard/services/member/member.service\';\\nimport { ProjectService } from \'@dashboard/services/project/project.service\';\\nimport {\\n  faCheck,\\n  faChevronRight,\\n  faCodeCommit,\\n  faCodePullRequest,\\n  faPlus,\\n} from \'@fortawesome/free-solid-svg-icons\';\\nimport { PersistentMap } from \'@main/classes/persistent-map.class\';\\nimport { StatusService } from \'@tasks/services/status/status.service\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\nimport { Observable, Subscription } from \'rxjs\';\\nimport { DialogService } from \'../../../_main/services/dialog/dialog.service\';\\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from \'../../dialogs/task/task.dialog\';\\nimport { StatusWithTasks } from \'../../interfaces/status.interface\';\\nimport { Task } from \'../../interfaces/task.interface\';\\n\\n@Component({\\n  selector: \'app-board\',\\n  templateUrl: \'./board.page.html\',\\n  styleUrls: [\'./board.page.scss\'],\\n})\\nexport class BoardPage implements OnInit, OnDestroy {\\n  faPlus = faPlus;\\n  faChevronRight = faChevronRight;\\n  faCodeCommit = faCodeCommit;\\n  faCodePullRequest = faCodePullRequest;\\n  faCheck = faCheck;\\n\\n  public taskMap = new PersistentMap<number | string, boolean>({ persistentKey: \'board\' });\\n  public projectId!: number;\\n\\n  public statusList$!: Observable<StatusWithTasks[]>;\\n  public board$!: Observable<[Task | string, StatusWithTasks[]][]>;\\n  public project$: Observable<Project>;\\n  public members$: Observable<Map<number, ProjectMember>>;\\n  public statusList: StatusWithTasks[] = [];\\n  private statusListSubscription?: Subscription;\\n\\n  constructor(\\n    private activatedRoute: ActivatedRoute,\\n    private taskService: TaskService,\\n    private statusService: StatusService,\\n    private dialogService: DialogService,\\n    private projectService: ProjectService,\\n    private memberService: MemberService,\\n  ) {\\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\\n\\n    this.projectId = projectId;\\n    this.project$ = this.projectService.get(projectId);\\n    this.board$ = this.statusService.board(projectId);\\n    this.statusList$ = this.statusService.listWithTasks(projectId);\\n    this.statusListSubscription = this.statusList$.subscribe((statusList) => {\\n      this.statusList = statusList;\\n    });\\n    this.members$ = this.memberService.map(projectId);\\n  }\\n\\n  getTasksFromStatus(statusId: number) {\\n    return this.statusList.find((status) => status.id === statusId)?.tasks;\\n  }\\n\\n  ngOnInit() {\\n    this.statusList$.subscribe((statusList) => {\\n      this.statusList = statusList;\\n    });\\n  }\\n\\n  ngOnDestroy() {\\n    this.statusListSubscription?.unsubscribe();\\n  }\\n\\n  drop(event: CdkDragDrop<Task[]>) {\\n    const previousStatusIndex = Number(\\n      event.previousContainer.element.nativeElement.dataset[\'index\'],\\n    );\\n    const newStatusIndex = Number(event.container.element.nativeElement.dataset[\'index\']);\\n    const previousStatus = this.statusList[previousStatusIndex];\\n    const newStatus = this.statusList[newStatusIndex];\\n    const previousTaskIndex = event.previousIndex;\\n    const task = event.previousContainer.data[previousTaskIndex];\\n\\n    const onSuccess = () => {\\n      task.statusId = newStatus.id;\\n      this.taskService.update(this.projectId, task as any).subscribe();\\n\\n      if (event.previousContainer === event.container) {\\n        moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\\n      } else {\\n        transferArrayItem(\\n          event.previousContainer.data,\\n          event.container.data,\\n          event.previousIndex,\\n          event.currentIndex,\\n        );\\n      }\\n    };\\n\\n    // Catch if the task has pull request and user is trying to move to finishing state\\n    if (task.pull && newStatus.final) {\\n      this.dialogService\\n        .alert({\\n          title: $localize`Are you sure?`,\\n          message: $localize`If you will move this task to finishing state, the attached pull request will be merged to the repository.`,\\n          confirmText: $localize`Merge`,\\n          cancelText: $localize`Cancel`,\\n        })\\n        .subscribe((result) => {\\n          if (!result) return;\\n\\n          onSuccess();\\n        });\\n    } else {\\n      onSuccess();\\n    }\\n  }\\n\\n  openNewTaskDialog() {\\n    this.dialogService\\n      .open(TaskDialog, {\\n        projectId: this.projectId,\\n        variant: TaskDialogVariant.CREATE,\\n      } as TaskDialogData)\\n      .afterClosed()\\n      .subscribe((result) => {\\n        if (result) {\\n          this.taskService.create(this.projectId, result).subscribe(() => {\\n            location.reload();\\n          });\\n        }\\n      });\\n  }\\n\\n  idOf(o: Task | string) {\\n    return (o as any).id || o;\\n  }\\n\\n  getColumnsContainerHeight(mapKey: string | number, element: HTMLElement) {\\n    return `${Number(!this.taskMap.get(mapKey)) * element.scrollHeight + 16}px`;\\n  }\\n\\n  toggle(board: [Task | string, StatusWithTasks[]], element: HTMLElement) {\\n    element.style.maxHeight = this.getColumnsContainerHeight(this.idOf(board[0]), element);\\n    this.taskMap.set(this.idOf(board[0]), !this.taskMap.get(this.idOf(board[0])) || false);\\n    element.style.maxHeight = this.getColumnsContainerHeight(this.idOf(board[0]), element);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column;\\n}\\n\\napp-view-options {\\n  width: auto;\\n  margin: 2rem 2rem 0 2rem;\\n}\\n\\napp-status-label {\\n  width: auto;\\n}\\n\\n.boards {\\n  display: flex;\\n  overflow: auto;\\n  flex-direction: column;\\n  padding: 0 2rem 2rem 2rem;\\n}\\n\\n.board {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 10px;\\n  margin-left: -1rem;\\n\\n  &:not(.collapsed) .task-title>app-icon {\\n    transform: rotate(90deg);\\n  }\\n\\n  .columns {\\n    display: flex;\\n    overflow: hidden;\\n    transition: max-height .4s ease;\\n\\n    &.collapsed {\\n      max-height: 0;\\n    }\\n  }\\n\\n  .column {\\n    display: flex;\\n    width: 300px;\\n    min-height: 100%;\\n    flex-direction: column;\\n    padding: 1rem 0.5rem 0 0.5rem;\\n\\n    &:first-child {\\n      padding-left: 0;\\n    }\\n\\n    .column-header {\\n      display: flex;\\n      align-items: center;\\n      justify-content: space-between;\\n      margin-bottom: 1em;\\n      color: var(--color-text);\\n\\n      h3 {\\n        margin: 0;\\n      }\\n\\n      app-icon {\\n        cursor: pointer;\\n      }\\n    }\\n\\n    .column-content {\\n      height: 100%;\\n      padding: 1rem;\\n      background-color: var(--color-secondary-800);\\n      border-radius: var(--border-radius);\\n\\n      app-board-task:last-child {\\n        margin-bottom: -1rem;\\n      }\\n    }\\n  }\\n}\\n\\n.cdk-drag-placeholder {\\n  opacity: 0;\\n}\\n\\n.cdk-drag-animating {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.column-content.cdk-drop-list-dragging app-board-task:not(.cdk-drag-placeholder) {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.task-title {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  height: 40px;\\n  align-items: center;\\n  padding-left: 0.5rem;\\n\\n  .task-id {\\n    display: block;\\n    margin-right: 1rem;\\n    opacity: 0.5;\\n  }\\n\\n  .task-property {\\n    display: flex;\\n    margin-left: 1rem;\\n    cursor: pointer;\\n    opacity: 0.5;\\n    transition: opacity 0.2s ease;\\n\\n    &:hover {\\n      opacity: 1;\\n    }\\n\\n    .check {\\n      margin-left: 5px;\\n      color: #2ecc71;\\n    }\\n  }\\n\\n  &>app-icon {\\n    margin-right: 1rem;\\n    opacity: 0.5;\\n    transition: transform .2s ease;\\n  }\\n}\\n\\n.status-list-banner {\\n  display: flex;\\n  padding: 1rem;\\n  border-bottom: 1px solid var(--color-secondary-500);\\n  margin-left: 2rem;\\n\\n  .status-banner {\\n    width: 300px;\\n    color: var(--color-text);\\n  }\\n}\\n\\n.row {\\n  cursor: pointer;\\n}\\n","styleUrl":"./board.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""},{"name":"statusService","type":"StatusService","deprecated":false,"deprecationMessage":""},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":""},{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":""}],"line":44,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"statusService","type":"StatusService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"templateData":"<app-view-options [project]=\\"(project$ | async)!\\"></app-view-options>\\n\\n<div class=\\"status-list-banner\\">\\n  <div *ngFor=\\"let status of statusList$ | async\\" class=\\"status-banner\\">\\n    {{ status.name }}\\n  </div>\\n</div>\\n\\n<div *ngLet=\\"(members$ | async)! as members\\" class=\\"boards\\">\\n  <div *ngFor=\\"let board of board$ | async\\" class=\\"board\\" [class.collapsed]=\\"taskMap.get(idOf(board[0]))\\"\\n    cdkDropListGroup>\\n    <div class=\\"table\\">\\n      <div class=\\"row\\" *ngLet=\\"board[0] as task\\" (click)=\\"toggle(board, columns)\\">\\n        <div class=\\"cell w-full\\">\\n          <div *ngIf=\\"task !== \'OTHER\'\\" class=\\"task-title\\">\\n            <app-icon [icon]=\\"faChevronRight\\" size=\\"16px\\"></app-icon>\\n            <span class=\\"task-id\\">#{{ task.id }}</span>\\n            <span>{{ task.name }}</span>\\n            <a *ngIf=\\"task.issue\\" [href]=\\"task.issue\\" class=\\"task-property\\" target=\\"_blank\\" matTooltip=\\"GitHub issue\\"\\n              i18n-matTooltip>\\n              <app-icon [icon]=\\"faCodeCommit\\" size=\\"14px\\"></app-icon>\\n            </a>\\n            <a *ngIf=\\"task.pull\\" [href]=\\"task.pull\\" class=\\"task-property\\" target=\\"_blank\\"\\n              matTooltip=\\"GitHub pull request\\" i18n-matTooltip>\\n              <app-icon [icon]=\\"faCodePullRequest\\" size=\\"14px\\"></app-icon>\\n            </a>\\n            <a *ngIf=\\"task.mergedPullList\\" [href]=\\"task.mergedPullList[0]\\" class=\\"task-property\\" target=\\"_blank\\"\\n              matTooltip=\\"GitHub pull request\\" i18n-matTooltip>\\n              <app-icon [icon]=\\"faCodePullRequest\\" size=\\"14px\\"></app-icon>\\n              <app-icon class=\\"check\\" [icon]=\\"faCheck\\" size=\\"14px\\"></app-icon>\\n            </a>\\n            <app-status-label [projectId]=\\"projectId\\" [taskId]=\\"task.id\\" [statuses]=\\"statusList\\" variant=\\"small\\"\\n              [statusId]=\\"task.statusId!\\" click-stop-propagation>\\n            </app-status-label>\\n          </div>\\n          <div *ngIf=\\"task === \'OTHER\'\\" class=\\"task-title\\">\\n            <app-icon [icon]=\\"faChevronRight\\" size=\\"16px\\"></app-icon>\\n            <span i18n>Other tasks</span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div #columns class=\\"columns\\" [class.collapsed]=\\"taskMap.get(idOf(board[0]))\\">\\n      <div *ngFor=\\"let column of board[1]; index as statusIndex\\" class=\\"column\\">\\n        <div class=\\"column-content\\" [cdkDropListData]=\\"column.tasks\\" (cdkDropListDropped)=\\"drop($event)\\"\\n          [attr.data-index]=\\"statusIndex\\" cdkDropList>\\n          <app-board-task *ngFor=\\"let task of column.tasks; index as taskIndex\\" class=\\"task\\" [task]=\\"task\\"\\n            [projectId]=\\"projectId\\" [members]=\\"members\\" [attr.data-index]=\\"taskIndex\\" cdkDrag>\\n          </app-board-task>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>"},{"name":"BoardTaskComponent","id":"component-BoardTaskComponent-07316c9b249f64164ef433f340ec08719fa1c5de6e96c9de7ab3c3d5c574f13cd207fc4d6d3afdc7a175b9d3317d6d769c387a1e293668dce4b0b576b8eeb02d","file":"src/app/tasks/components/board-task/board-task.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-board-task","styleUrls":["./board-task.component.scss"],"styles":[],"templateUrl":["./board-task.component.html"],"viewProviders":[],"inputsClass":[{"name":"members","defaultValue":"new Map()","deprecated":false,"deprecationMessage":"","line":21,"type":"Map<number | ProjectMember>","decorators":[]},{"name":"projectId","deprecated":false,"deprecationMessage":"","line":18,"type":"number","decorators":[]},{"name":"task","deprecated":false,"deprecationMessage":"","line":15,"type":"Task","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"faCheck","defaultValue":"faCheck","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25},{"name":"faCodeCommit","defaultValue":"faCodeCommit","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23},{"name":"faCodePullRequest","defaultValue":"faCodePullRequest","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24}],"methodsClass":[{"name":"createSubtask","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":""},{"name":"delete","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":""},{"name":"edit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { ProjectMember } from \'@dashboard/interfaces/project-member.interface\';\\nimport { faCheck, faCodeCommit, faCodePullRequest } from \'@fortawesome/free-solid-svg-icons\';\\nimport { DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\nimport { Task } from \'../../interfaces/task.interface\';\\n\\n@Component({\\n  selector: \'app-board-task\',\\n  templateUrl: \'./board-task.component.html\',\\n  styleUrls: [\'./board-task.component.scss\'],\\n})\\nexport class BoardTaskComponent {\\n  @Input()\\n  public task!: Task;\\n\\n  @Input()\\n  public projectId!: number;\\n\\n  @Input()\\n  public members: Map<number, ProjectMember> = new Map();\\n\\n  faCodeCommit = faCodeCommit;\\n  faCodePullRequest = faCodePullRequest;\\n  faCheck = faCheck;\\n\\n  constructor(private dialogService: DialogService, private taskService: TaskService) {}\\n\\n  delete() {\\n    this.taskService.deleteWithConfirmation(this.projectId, this.task).subscribe(() => {\\n      location.reload();\\n    });\\n  }\\n\\n  edit() {\\n    this.taskService.openEditTaskDialog(this.projectId, this.task).subscribe(() => {\\n      location.reload();\\n    });\\n  }\\n\\n  createSubtask() {\\n    this.taskService.openCreateSubtaskDialog(this.projectId, this.task).subscribe((task) => {\\n      if (!task) return;\\n\\n      location.reload();\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../styles/typography\';\\n\\n:host {\\n  display: block;\\n  cursor: move;\\n}\\n\\n.task {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 1rem;\\n  margin-bottom: 1rem;\\n  background-color: var(--color-board-task-background);\\n  border-radius: var(--border-radius);\\n  transition: background-color 0.2s ease, box-shadow 0.2s ease;\\n\\n  &:hover {\\n    background-color: var(--color-board-task-background-hover);\\n    box-shadow: 0 0 0.5rem 0.01rem rgb(0 0 0 / 10%);\\n  }\\n\\n  .top-section {\\n    display: flex;\\n\\n    >* {\\n      width: 50%;\\n    }\\n\\n    .assignees {\\n      .assignee {\\n        $size: 32px;\\n\\n        @include text-xl;\\n        display: flex;\\n        width: #{$size};\\n        height: #{$size};\\n        align-items: center;\\n        justify-content: center;\\n        background-color: #0a95d0;\\n        border-radius: calc($size / 2);\\n        color: var(--color-text);\\n\\n        font-weight: 700;\\n      }\\n    }\\n\\n    .deadline {\\n      color: var(--color-text);\\n\\n      .title {\\n        @include text-base;\\n      }\\n\\n      .value {\\n        @include text-title;\\n      }\\n    }\\n  }\\n\\n  .name {\\n    @include text-base;\\n    display: flex;\\n    align-items: center;\\n\\n    margin-top: 1rem;\\n    color: var(--color-text);\\n\\n    .task-id {\\n      margin-right: 0.5rem;\\n      opacity: 0.5;\\n    }\\n  }\\n\\n  .options {\\n    position: absolute;\\n    right: 5px;\\n    color: #fff;\\n  }\\n\\n  .commit {\\n    display: flex;\\n    width: 100%;\\n    justify-content: flex-end;\\n    padding: 0 0.5rem;\\n    color: var(--color-text);\\n    cursor: pointer;\\n    opacity: 0.5;\\n    transition: opacity 0.5s ease;\\n\\n    &:hover {\\n      opacity: 1;\\n    }\\n  }\\n\\n  .actions {\\n    display: flex;\\n    width: 100%;\\n    justify-content: flex-end;\\n\\n    >* {\\n      display: flex;\\n      margin-left: 1rem;\\n      color: var(--color-text);\\n      cursor: pointer;\\n      opacity: 0.5;\\n      transition: opacity 0.2s ease;\\n\\n      &:hover {\\n        opacity: 1;\\n      }\\n\\n      .check {\\n        margin-left: 5px;\\n        color: #2ecc71;\\n      }\\n    }\\n  }\\n}\\n\\n.task-type {\\n  display: block;\\n  width: 16px;\\n  height: 16px;\\n  margin-right: 1rem;\\n  border-radius: 4px;\\n}\\n","styleUrl":"./board-task.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<div *ngIf=\\"task\\" class=\\"task\\">\\n  <div class=\\"top-section\\">\\n    <div class=\\"assignees\\" *ngIf=\\"members\\">\\n      <app-input-assignee [assignee]=\\"members.get(task.assigneeId || -1) || null\\" [projectId]=\\"projectId\\"\\n        [taskId]=\\"task.id\\" [members]=\\"members || []\\"></app-input-assignee>\\n    </div>\\n    <div *ngIf=\\"task.deadline\\" class=\\"deadline\\">\\n      <div class=\\"title\\" i18n>\\n        Due date\\n      </div>\\n      <div class=\\"value\\">{{ task.deadline | dateByPreferences | async }}</div>\\n    </div>\\n  </div>\\n  <div class=\\"name\\">\\n    <span class=\\"task-type\\" [style.background-color]=\\"task.type | taskType:\'color\'\\"></span>\\n    <span class=\\"task-id\\">#{{ task.id }}</span>\\n    <span>{{ task.name }}</span>\\n  </div>\\n  \x3c!-- Time tracking cell --\x3e\\n  <div class=\\"mt-3\\">\\n    <tracker [projectId]=\\"projectId\\" [task]=\\"task\\"></tracker>\\n  </div>\\n  <div class=\\"actions\\">\\n    <a *ngIf=\\"task.issue\\" [href]=\\"task.issue.url\\" target=\\"_blank\\">\\n      <app-icon [icon]=\\"faCodeCommit\\" size=\\"14px\\"></app-icon>\\n    </a>\\n    <a *ngIf=\\"task.pull\\" [href]=\\"task.pull.url\\" target=\\"_blank\\">\\n      <app-icon [icon]=\\"faCodePullRequest\\" size=\\"14px\\"></app-icon>\\n    </a>\\n    <a *ngIf=\\"task.mergedPullList\\" [href]=\\"task.mergedPullList[0]\\" target=\\"_blank\\">\\n      <app-icon [icon]=\\"faCodePullRequest\\" size=\\"14px\\"></app-icon>\\n      <app-icon class=\\"check\\" [icon]=\\"faCheck\\" size=\\"14px\\"></app-icon>\\n    </a>\\n  </div>\\n  <div class=\\"options\\">\\n    <button mat-icon-button [matMenuTriggerFor]=\\"menu\\" class=\\"flex items-center\\">\\n      <app-icon icon=\\"matMoreVert\\"></app-icon>\\n    </button>\\n    <mat-menu #menu=\\"matMenu\\">\\n      <button mat-menu-item (click)=\\"edit()\\">\\n        <span i18n>Edit task</span>\\n      </button>\\n      <button mat-menu-item (click)=\\"createSubtask()\\">\\n        <span i18n>Create subtask</span>\\n      </button>\\n      <button mat-menu-item class=\\"important\\" (click)=\\"delete()\\">\\n        <span i18n>Delete task</span>\\n      </button>\\n    </mat-menu>\\n  </div>\\n</div>\\n"},{"name":"ButtonComponent","id":"component-ButtonComponent-977071be0baadb985e6aa296ce0fb6cece968b8a7981edb9e51ed32d5dc4c9e4c974afaa5d4d412841d2c0b9c1de1981a82148d8f4e290e5eeca43c6a63a0f13","file":"src/app/_main/components/button/button.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-button","styleUrls":["./button.component.scss"],"styles":[],"templateUrl":["./button.component.html"],"viewProviders":[],"inputsClass":[{"name":"icon","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIcon to display on the button.\\n","description":"<p>Icon to display on the button.</p>\\n","line":33,"type":"string | IconDefinition","decorators":[]},{"name":"pending","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInformation about the pending. If button is pending the loader icon will be shown.\\n","description":"<p>Information about the pending. If button is pending the loader icon will be shown.</p>\\n","line":28,"type":"boolean","decorators":[]},{"name":"type","defaultValue":"\'submit\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nButton behavior in forms. If this property is set to `submit`, this button will be able to submit the\\nform (perform submit event on click). If set to `button`, only the specified `(click)` action will be\\nexecuted.\\n","description":"<p>Button behavior in forms. If this property is set to <code>submit</code>, this button will be able to submit the\\nform (perform submit event on click). If set to <code>button</code>, only the specified <code>(click)</code> action will be\\nexecuted.</p>\\n","line":23,"type":"\\"button\\" | \\"submit\\"","decorators":[]},{"name":"variant","defaultValue":"\'secondary\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nStyle variant of the button.\\n","description":"<p>Style variant of the button.</p>\\n","line":16,"type":"\\"primary\\" | \\"secondary\\" | \\"important\\" | \\"transparent\\"","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLButtonElement>","optional":false,"description":"<p>Reference to native button element.</p>\\n","line":38,"rawdescription":"\\n\\nReference to native button element.\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'btn\'"}]}],"methodsClass":[{"name":"focus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFocus the native button element.\\n","description":"<p>Focus the native button element.</p>\\n"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"<p>Button component to visualize the general clickable elements on the page.</p>\\n","rawdescription":"\\n\\nButton component to visualize the general clickable elements on the page.\\n","type":"component","sourceCode":"import { Component, ElementRef, Input, ViewChild } from \'@angular/core\';\\nimport { IconDefinition } from \'@fortawesome/free-solid-svg-icons\';\\n\\n/**\\n * Button component to visualize the general clickable elements on the page.\\n */\\n@Component({\\n  selector: \'app-button\',\\n  templateUrl: \'./button.component.html\',\\n  styleUrls: [\'./button.component.scss\'],\\n})\\nexport class ButtonComponent {\\n  /**\\n   * Style variant of the button.\\n   */\\n  @Input() variant: \'primary\' | \'secondary\' | \'important\' | \'transparent\' = \'secondary\';\\n\\n  /**\\n   * Button behavior in forms. If this property is set to `submit`, this button will be able to submit the\\n   * form (perform submit event on click). If set to `button`, only the specified `(click)` action will be\\n   * executed.\\n   */\\n  @Input() type: \'button\' | \'submit\' = \'submit\';\\n\\n  /**\\n   * Information about the pending. If button is pending the loader icon will be shown.\\n   */\\n  @Input() pending?: boolean = false;\\n\\n  /**\\n   * Icon to display on the button.\\n   */\\n  @Input() icon?: string | IconDefinition;\\n\\n  /**\\n   * Reference to native button element.\\n   */\\n  @ViewChild(\'btn\') elementRef!: ElementRef<HTMLButtonElement>;\\n\\n  /**\\n   * Focus the native button element.\\n   */\\n  focus() {\\n    setTimeout(() => {\\n      this.elementRef.nativeElement.focus();\\n    }, 200);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../styles/typography\';\\n\\nbutton mat-spinner,\\nbutton app-icon {\\n  opacity: 1;\\n  transform: scale(1);\\n  transition: opacity 0.2s;\\n}\\n\\nbutton mat-spinner.hide,\\nbutton app-icon.hide {\\n  opacity: 0;\\n}\\n\\nbutton .prefix {\\n  position: relative;\\n  display: flex;\\n  width: 24px;\\n  height: 24px;\\n  align-items: center;\\n  justify-content: center;\\n  transition: width 0.2s, margin-right 0.2s;\\n\\n  >* {\\n    position: absolute;\\n  }\\n}\\n\\nbutton:not(.button-with-icon) .prefix:not(.pending) {\\n  width: 0;\\n  margin-right: 0;\\n}\\n\\nbutton {\\n  @include text-title;\\n\\n  position: relative;\\n  display: flex;\\n  min-width: 64px;\\n  height: 38px;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0.8125rem 1.25rem;\\n  border-radius: var(--border-radius);\\n  color: var(--color-text);\\n  outline: 0 !important;\\n  transition: background-color 0.2s ease;\\n  width: 100%;\\n\\n  >*:not(:last-child) {\\n    margin-right: 0.75rem;\\n  }\\n\\n  &:not(.transparent) {\\n    box-shadow: 0 4px 4px rgb(0 0 0 / 25%);\\n  }\\n\\n  &::before {\\n    $offset: 4px;\\n\\n    position: absolute;\\n    top: #{-$offset};\\n    right: #{-$offset};\\n    bottom: #{-$offset};\\n    left: #{-$offset};\\n    border-radius: calc(var(--border-radius) * 1.5);\\n    content: \'\';\\n    opacity: 0;\\n    pointer-events: none;\\n    transition: opacity 0.1s ease;\\n  }\\n\\n  &:focus {\\n    &::before {\\n      opacity: 1;\\n    }\\n  }\\n\\n  &:active {\\n    box-shadow: 0 1px 1px rgb(0 0 0 / 25%);\\n  }\\n\\n  &.primary {\\n    background-color: var(--color-button-primary-background);\\n\\n    &::before {\\n      border: 2px solid var(--color-button-primary-border-active);\\n    }\\n\\n    &:hover {\\n      background-color: var(--color-button-primary-background-hover);\\n    }\\n\\n    &:active {\\n      background-color: var(--color-button-primary-background-active);\\n    }\\n  }\\n\\n  &.secondary {\\n    background-color: var(--color-button-secondary-background);\\n\\n    &::before {\\n      border: 2px solid var(--color-button-secondary-border-active);\\n    }\\n\\n    &:hover {\\n      background-color: var(--color-button-secondary-background-hover);\\n    }\\n\\n    &:active {\\n      background-color: var(--color-button-secondary-background-active);\\n    }\\n  }\\n\\n  &.important {\\n    background-color: var(--color-button-important-background);\\n\\n    &::before {\\n      border: 2px solid var(--color-button-important-border-active);\\n    }\\n\\n    &:hover {\\n      background-color: var(--color-button-important-background-hover);\\n    }\\n\\n    &:active {\\n      background-color: var(--color-button-important-background-active);\\n    }\\n  }\\n}\\n","styleUrl":"./button.component.scss"}],"stylesData":"","templateData":"<button #btn [ngClass]=\\"[variant]\\" [type]=\\"type\\" [class.button-with-icon]=\\"icon\\">\\n  <div class=\\"prefix\\" [class.pending]=\\"pending\\">\\n    <mat-spinner diameter=\\"18\\" [class.hide]=\\"!pending\\"></mat-spinner>\\n    <app-icon *ngIf=\\"icon\\" [icon]=\\"icon\\" [class.hide]=\\"pending\\" size=\\"16px\\"></app-icon>\\n  </div>\\n  <ng-content></ng-content>\\n</button>\\n"},{"name":"CalendarComponent","id":"component-CalendarComponent-8292e88f78afd86a8c31d9f06d4bdfeb6d2632517f39a5a536b0e77b5004b143601ed50a09962d0fff8b4fd37c9f5dc59469a129ac359e6da3c5303eff38e113","file":"src/app/calendar/components/calendar/calendar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"calendar","styleUrls":["./calendar.component.scss"],"styles":[],"templateUrl":["./calendar.component.html"],"viewProviders":[],"inputsClass":[{"name":"date","deprecated":false,"deprecationMessage":"","line":11,"type":"dayjs.Dayjs","decorators":[]},{"name":"tasks","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":14,"type":"Task[]","decorators":[]}],"outputsClass":[{"name":"dateChange","defaultValue":"new EventEmitter<dayjs.Dayjs>()","deprecated":false,"deprecationMessage":"","line":12,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"nextMonth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""},{"name":"previousMonth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":""},{"name":"select","args":[{"name":"date","type":"dayjs.Dayjs","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"date","type":"dayjs.Dayjs","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"today","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter } from \'@angular/core\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport * as dayjs from \'dayjs\';\\n\\n@Component({\\n  selector: \'calendar\',\\n  templateUrl: \'./calendar.component.html\',\\n  styleUrls: [\'./calendar.component.scss\'],\\n})\\nexport class CalendarComponent {\\n  @Input() date!: dayjs.Dayjs;\\n  @Output() dateChange = new EventEmitter<dayjs.Dayjs>();\\n\\n  @Input() tasks: Task[] = [];\\n\\n  previousMonth() {\\n    this.date = this.date.subtract(1, \'month\');\\n    this.dateChange.emit(this.date);\\n  }\\n\\n  nextMonth() {\\n    this.date = this.date.add(1, \'month\');\\n    this.dateChange.emit(this.date);\\n  }\\n\\n  today() {\\n    this.date = dayjs();\\n    this.dateChange.emit(this.date);\\n  }\\n\\n  select(date: dayjs.Dayjs) {\\n    this.date = date;\\n    this.dateChange.emit(this.date);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column;\\n  border-right: 1px solid var(--color-secondary-400);\\n}\\n\\n.wrapper {\\n  display: flex;\\n  flex-grow: 1;\\n}\\n","styleUrl":"./calendar.component.scss"}],"stylesData":"","templateData":"<calendar-navbar [date]=\\"date\\" (previousMonth)=\\"previousMonth()\\" (nextMonth)=\\"nextMonth()\\" (today)=\\"today()\\">\\n</calendar-navbar>\\n<div class=\\"wrapper\\">\\n  <calendar-sidebar [date]=\\"date\\" (selectDate)=\\"select($event)\\"></calendar-sidebar>\\n  <calendar-grid [date]=\\"date\\" [tasks]=\\"tasks\\"></calendar-grid>\\n</div>\\n"},{"name":"CalendarGridComponent","id":"component-CalendarGridComponent-08a2c40272829ad69fd5bc3fb9d7474591b3ff04930007ab152f6507bc6bc279cd1d01c83175db982b2f3fe6b75d634fb09fec387ef3e61bf049ee11b4af6a4b","file":"src/app/calendar/components/calendar-grid/calendar-grid.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"calendar-grid","styleUrls":["./calendar-grid.component.scss"],"styles":[],"templateUrl":["./calendar-grid.component.html"],"viewProviders":[],"inputsClass":[{"name":"date","deprecated":false,"deprecationMessage":"","line":11,"type":"dayjs.Dayjs","decorators":[]},{"name":"tasks","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":12,"type":"Task[]","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"days","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"literal type[]","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"firstDay","defaultValue":"dayjs()","deprecated":false,"deprecationMessage":"","type":"dayjs.Dayjs","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"lastDay","defaultValue":"dayjs()","deprecated":false,"deprecationMessage":"","type":"dayjs.Dayjs","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"tasksByDate","defaultValue":"new Map<number, Task[]>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"weekdaysShort","defaultValue":"dayjs.weekdaysShort()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]}],"methodsClass":[{"name":"calculateGrid","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"calculateTaskEvents","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnChanges, SimpleChanges } from \'@angular/core\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport * as dayjs from \'dayjs\';\\n\\n@Component({\\n  selector: \'calendar-grid\',\\n  templateUrl: \'./calendar-grid.component.html\',\\n  styleUrls: [\'./calendar-grid.component.scss\'],\\n})\\nexport class CalendarGridComponent implements OnChanges {\\n  @Input() date!: dayjs.Dayjs;\\n  @Input() tasks: Task[] = [];\\n\\n  public days: {\\n    date: dayjs.Dayjs;\\n    tasks: Task[];\\n  }[] = [];\\n  public firstDay: dayjs.Dayjs = dayjs();\\n  public lastDay: dayjs.Dayjs = dayjs();\\n\\n  public tasksByDate = new Map<number, Task[]>();\\n\\n  public weekdaysShort = dayjs.weekdaysShort();\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes[\'date\'] && !changes[\'date\'].currentValue.isSame(changes[\'date\'].previousValue)) {\\n      this.calculateGrid();\\n\\n      if (this.tasks.length) {\\n        this.calculateTaskEvents();\\n      }\\n    }\\n\\n    if (changes[\'tasks\']) {\\n      this.calculateTaskEvents();\\n    }\\n  }\\n\\n  private calculateGrid() {\\n    console.log(\'calculateGrid\');\\n\\n    this.firstDay = this.date.startOf(\'month\');\\n    this.lastDay = this.date.endOf(\'month\');\\n\\n    const firstDay = this.date.startOf(\'month\').startOf(\'week\');\\n    const lastDay = this.date.endOf(\'month\').endOf(\'week\');\\n\\n    const days: {\\n      date: dayjs.Dayjs;\\n      tasks: Task[];\\n    }[] = [];\\n    let day = firstDay;\\n\\n    while (day <= lastDay) {\\n      days.push({ date: day, tasks: [] });\\n      day = day.add(1, \'day\');\\n    }\\n\\n    this.days = days;\\n  }\\n\\n  private calculateTaskEvents() {\\n    console.log(\'calculateTaskEvents\');\\n\\n    for (const task of this.tasks) {\\n      if (task.estimatedDate) {\\n        const day = dayjs(task.estimatedDate);\\n        const index = this.days.findIndex((d) => d.date.isSame(day, \'day\'));\\n\\n        if (index !== -1) {\\n          this.days[index].tasks.push(task);\\n        }\\n      }\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: grid;\\n  flex-grow: 1;\\n  background-color: var(--color-secondary-800);\\n  grid-auto-rows: 1fr;\\n  grid-template-columns: repeat(7, 1fr);\\n  grid-template-rows: 2rem;\\n}\\n\\n.week-name-cell {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-bottom: 1px solid var(--color-secondary-400);\\n  border-left: 1px solid var(--color-secondary-400);\\n}\\n\\n.cell {\\n  border-bottom: 1px solid var(--color-secondary-400);\\n  border-left: 1px solid var(--color-secondary-400);\\n  color: var(--color-text);\\n\\n  &.today .day::before {\\n    position: absolute;\\n    z-index: 1;\\n    display: block;\\n    width: 1.75rem;\\n    height: 1.75rem;\\n    background-color: var(--color-primary-500);\\n    border-radius: 1.75rem;\\n    content: \'\';\\n  }\\n\\n  &:not(.current-month) .day {\\n    opacity: 0.4;\\n  }\\n\\n  .day {\\n    position: relative;\\n    display: flex;\\n    width: 100%;\\n    align-items: center;\\n    justify-content: center;\\n    padding: 0.5rem;\\n\\n    span {\\n      z-index: 2;\\n    }\\n  }\\n}\\n\\n.task {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  padding: 0.25rem 0.5rem;\\n  border-radius: var(--border-radius);\\n}\\n","styleUrl":"./calendar-grid.component.scss"}],"stylesData":"","implements":["OnChanges"],"templateData":"<div *ngFor=\\"let weekdayShort of weekdaysShort\\" class=\\"cell week-name-cell\\">{{ weekdayShort }}</div>\\n<div *ngFor=\\"let day of days\\" class=\\"cell\\" [class.today]=\\"day.date.isToday()\\"\\n  [class.current-month]=\\"day.date.isBetween(firstDay, lastDay)\\">\\n  <p class=\\"day\\">\\n    <span>{{ day.date | dayjsFormat:\'D\' }}</span>\\n  </p>\\n  <div class=\\"events\\">\\n    <div class=\\"task\\" *ngFor=\\"let task of day.tasks\\"\\n      [style.background-color]=\\"(task.type | taskType:\'color\').rgb().toString()\\">\\n      {{ task.name }}\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"CalendarNavbarComponent","id":"component-CalendarNavbarComponent-704e2aba05ccbb9c99e32df045965ecde25349b59cd87e4a218459d9d8536d712bf2947b972bb7a04ee8d26a35b63424c06d35e311b175150d2c37b3c709e3c0","file":"src/app/calendar/components/calendar-navbar/calendar-navbar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"calendar-navbar","styleUrls":["./calendar-navbar.component.scss"],"styles":[],"templateUrl":["./calendar-navbar.component.html"],"viewProviders":[],"inputsClass":[{"name":"date","deprecated":false,"deprecationMessage":"","line":11,"type":"dayjs.Dayjs","decorators":[]}],"outputsClass":[{"name":"nextMonth","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":13,"type":"EventEmitter"},{"name":"previousMonth","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":14,"type":"EventEmitter"},{"name":"today","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":16,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, Output } from \'@angular/core\';\\nimport { faChevronLeft, faChevronRight } from \'@fortawesome/free-solid-svg-icons\';\\nimport dayjs from \'dayjs\';\\n\\n@Component({\\n  selector: \'calendar-navbar\',\\n  templateUrl: \'./calendar-navbar.component.html\',\\n  styleUrls: [\'./calendar-navbar.component.scss\'],\\n})\\nexport class CalendarNavbarComponent {\\n  @Input() public date!: dayjs.Dayjs;\\n\\n  @Output() public nextMonth = new EventEmitter<void>();\\n  @Output() public previousMonth = new EventEmitter<void>();\\n\\n  @Output() public today = new EventEmitter<void>();\\n\\n  /** @ignore */\\n  faChevronLeft = faChevronLeft;\\n\\n  /** @ignore */\\n  faChevronRight = faChevronRight;\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".navbar {\\n  display: flex;\\n  width: 100%;\\n  justify-content: space-between;\\n  padding: 1rem;\\n  border-bottom: 1px solid var(--color-secondary-400);\\n\\n  .group {\\n    display: flex;\\n    align-items: center;\\n\\n    &>*:not(:last-child) {\\n      margin-right: 1rem;\\n    }\\n  }\\n}\\n","styleUrl":"./calendar-navbar.component.scss"}],"stylesData":"","templateData":"<nav class=\\"navbar\\">\\n  <div class=\\"group\\">\\n    <app-button (click)=\\"today.emit()\\" i18n>Today</app-button>\\n    <app-button variant=\\"transparent\\" [icon]=\\"faChevronLeft\\" matTooltip=\\"Previous month\\" i18n-matTooltip\\n      (click)=\\"previousMonth.emit()\\"></app-button>\\n    <app-button variant=\\"transparent\\" [icon]=\\"faChevronRight\\" matTooltip=\\"Next month\\" i18n-matTooltip\\n      (click)=\\"nextMonth.emit()\\"></app-button>\\n    <span class=\\"text-lg\\">{{ date | dayjsFormat:\'MMMM YYYY\' }}</span>\\n  </div>\\n  <div class=\\"group\\"></div>\\n</nav>\\n"},{"name":"CalendarPage","id":"component-CalendarPage-034fd5e8561c840b1a51c1c78a9ee5c32b8abd89763f16be487c4667ed5ac9ecdb21678b838b7f15fa1f5b9476bffedaee312fa1a671238f1051826a60261c90","file":"src/app/calendar/pages/calendar/calendar.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"calendar-page","styleUrls":["./calendar.page.scss"],"styles":[],"templateUrl":["./calendar.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"date","defaultValue":"dayjs()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"projectId","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"number | null","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"tasks$","defaultValue":"of([])","deprecated":false,"deprecationMessage":"","type":"Observable<Task[]>","optional":false,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\nimport dayjs from \'dayjs\';\\nimport { Observable, of } from \'rxjs\';\\n\\n@Component({\\n  selector: \'calendar-page\',\\n  templateUrl: \'./calendar.page.html\',\\n  styleUrls: [\'./calendar.page.scss\'],\\n})\\nexport class CalendarPage implements OnInit {\\n  public projectId: number | null = null;\\n  public date = dayjs();\\n  public tasks$: Observable<Task[]> = of([]);\\n\\n  constructor(private activatedRoute: ActivatedRoute, private taskService: TaskService) {}\\n\\n  ngOnInit() {\\n    const projectId = this.activatedRoute.snapshot.paramMap.get(\'projectId\');\\n\\n    if (projectId) {\\n      this.projectId = parseInt(projectId);\\n      this.tasks$ = this.taskService.list(this.projectId);\\n    }\\n\\n    this.activatedRoute.data.subscribe((data) => {\\n      const { projectId } = data;\\n\\n      if (projectId) {\\n        this.projectId = parseInt(projectId);\\n        this.tasks$ = this.taskService.list(this.projectId);\\n      }\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./calendar.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<calendar [(date)]=\\"date\\" [tasks]=\\"(tasks$ | async) || []\\"></calendar>\\n"},{"name":"CalendarPickerComponent","id":"component-CalendarPickerComponent-b0710198c858e000ce76456616d2cc1d4fce208f985023543e9028a84c67592412d1c28a431977f964b2ac3d09df9be0ace26303b7c693a8c93605b585d27ba0","file":"src/app/calendar/components/calendar-picker/calendar-picker.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"calendar-picker","styleUrls":["./calendar-picker.component.scss"],"styles":[],"templateUrl":["./calendar-picker.component.html"],"viewProviders":[],"inputsClass":[{"name":"date","deprecated":false,"deprecationMessage":"","line":10,"type":"dayjs.Dayjs","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"cursor","deprecated":false,"deprecationMessage":"","type":"dayjs.Dayjs","optional":false,"description":"","line":12,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport * as dayjs from \'dayjs\';\\n\\n@Component({\\n  selector: \'calendar-picker\',\\n  templateUrl: \'./calendar-picker.component.html\',\\n  styleUrls: [\'./calendar-picker.component.scss\'],\\n})\\nexport class CalendarPickerComponent implements OnInit {\\n  @Input() date!: dayjs.Dayjs;\\n\\n  public cursor!: dayjs.Dayjs;\\n\\n  constructor() {}\\n\\n  ngOnInit() {\\n    this.cursor = this.date;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./calendar-picker.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":12},"implements":["OnInit"],"templateData":""},{"name":"CalendarSidebarComponent","id":"component-CalendarSidebarComponent-ffb7526e8a53c09dda19f0ac1fc95ce96ab513115aec18ed35b5c604773e0a33a3a776e9bc2a882635f8001687f4946d21b23eb201d32fc72a1e8d8c3eb0ce34","file":"src/app/calendar/components/calendar-sidebar/calendar-sidebar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"calendar-sidebar","styleUrls":["./calendar-sidebar.component.scss"],"styles":[],"templateUrl":["./calendar-sidebar.component.html"],"viewProviders":[],"inputsClass":[{"name":"date","deprecated":false,"deprecationMessage":"","line":13,"type":"dayjs.Dayjs","decorators":[]}],"outputsClass":[{"name":"selectDate","defaultValue":"new EventEmitter<dayjs.Dayjs>()","deprecated":false,"deprecationMessage":"","line":17,"type":"EventEmitter"}],"propertiesClass":[{"name":"cursor","defaultValue":"new FormControl<dayjs.Dayjs>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit, Output, EventEmitter } from \'@angular/core\';\\nimport { FormControl } from \'@ngneat/reactive-forms\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\nimport * as dayjs from \'dayjs\';\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'calendar-sidebar\',\\n  templateUrl: \'./calendar-sidebar.component.html\',\\n  styleUrls: [\'./calendar-sidebar.component.scss\'],\\n})\\nexport class CalendarSidebarComponent implements OnInit {\\n  @Input() set date(date: dayjs.Dayjs) {\\n    this.cursor.setValue(date);\\n  }\\n\\n  @Output() selectDate = new EventEmitter<dayjs.Dayjs>();\\n\\n  public cursor = new FormControl<dayjs.Dayjs>();\\n\\n  constructor() {}\\n\\n  ngOnInit() {\\n    this.cursor.valueChanges.pipe(untilDestroyed(this)).subscribe((value) => {\\n      this.selectDate.emit(dayjs(value));\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  height: 100%;\\n  border-right: 1px solid var(--color-secondary-400);\\n}\\n","styleUrl":"./calendar-sidebar.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":19},"implements":["OnInit"],"accessors":{"date":{"name":"date","setSignature":{"name":"date","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"date","type":"dayjs.Dayjs","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":13,"jsdoctags":[{"name":"date","type":"dayjs.Dayjs","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<nav class=\\"sidebar\\">\\n  <date-picker [formControl]=\\"cursor\\" [hideTodayButton]=\\"true\\"></date-picker>\\n</nav>\\n"},{"name":"CardComponent","id":"component-CardComponent-4016ff42c023c7996c8214736fc308c595bb25f92a80d34900d58e476c36c92e3da01bc154fe0509f1c2336c9e47912dbeff70ed9f48b4f184d3cd48a876cae2","file":"src/app/_main/components/card/card.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-card","styleUrls":["./card.component.scss"],"styles":[],"templateUrl":["./card.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-card\',\\n  templateUrl: \'./card.component.html\',\\n  styleUrls: [\'./card.component.scss\'],\\n})\\nexport class CardComponent {\\n  constructor() {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../styles/typography\';\\n\\n:host {\\n  width: 100%;\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n\\n  &.important {\\n    .card {\\n      border: 1px solid var(--color-red-700);\\n    }\\n\\n    .card-header-wrapper {\\n      color: var(--color-red-700);\\n    }\\n  }\\n}\\n\\n.card {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 25px;\\n  border: 1px solid var(--color-secondary-500);\\n  border-radius: var(--border-radius);\\n}\\n\\n.card-header-wrapper {\\n  @include text-title;\\n\\n  margin-bottom: 7px;\\n  color: var(--color-text);\\n}\\n\\n.card-content-wrapper {\\n  @include text-base;\\n\\n  margin-bottom: 15px;\\n  color: var(--color-text);\\n  opacity: 0.7;\\n}\\n\\n.card-actions-wrapper {\\n  @include text-base;\\n\\n  color: var(--color-text);\\n}\\n","styleUrl":"./card.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"templateData":"<div class=\\"card\\">\\n  <div class=\\"card-header-wrapper\\">\\n    <ng-content select=\\".card-title\\"></ng-content>\\n  </div>\\n  <div class=\\"card-content-wrapper\\">\\n    <ng-content select=\\".card-content\\"></ng-content>\\n  </div>\\n  <div class=\\"card-actions-wrapper\\">\\n    <ng-content select=\\".card-actions\\"></ng-content>\\n  </div>\\n</div>\\n"},{"name":"ChangePasswordPage","id":"component-ChangePasswordPage-020e21a06b8e37f6f933221be7e114e8bc230a50dc3d8ea732b2c55dcdf48e6daa0d3869be0866346e79d909ec67d148d8e6185a677b4d4e6fe2d20e76abe4b4","file":"src/app/auth/pages/change-password/change-password.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-change-password","styleUrls":["./change-password.page.scss"],"styles":[],"templateUrl":["./change-password.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"form","defaultValue":"new FormGroup({\\n    password: new FormControl(\'\', [requiredValidator(), passwordValidator()], []),\\n    repeatPassword: new FormControl(\\n      \'\',\\n      [\\n        requiredValidator(),\\n        passwordValidator(),\\n        sameAsValidator(\'password\', $localize`Given passwords are not the same `),\\n      ],\\n      [],\\n    ),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Form group for setting new password.</p>\\n","line":34,"rawdescription":"\\n\\nForm group for setting new password.\\n","modifierKind":[123]},{"name":"resetSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":true,"description":"","line":29,"modifierKind":[121]},{"name":"token","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16,"modifierKind":[121]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":""},{"name":"setNewPassword","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { passwordValidator } from \'@main/validators/password.validator\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\nimport { sameAsValidator } from \'@main/validators/same-as.validator\';\\nimport { Subscription } from \'rxjs\';\\nimport { AuthService } from \'@auth/services/auth/auth.service\';\\n\\n@Component({\\n  selector: \'app-change-password\',\\n  templateUrl: \'./change-password.page.html\',\\n  styleUrls: [\'./change-password.page.scss\'],\\n})\\nexport class ChangePasswordPage implements OnInit {\\n  private token?: string;\\n\\n  constructor(\\n    private authService: AuthService,\\n    private router: Router,\\n    private activatedRoute: ActivatedRoute,\\n  ) {}\\n\\n  ngOnInit() {\\n    const { token } = this.activatedRoute.snapshot.queryParams;\\n    this.token = token;\\n  }\\n\\n  private resetSubscription?: Subscription;\\n\\n  /**\\n   * Form group for setting new password.\\n   */\\n  public form = new FormGroup({\\n    password: new FormControl(\'\', [requiredValidator(), passwordValidator()], []),\\n    repeatPassword: new FormControl(\\n      \'\',\\n      [\\n        requiredValidator(),\\n        passwordValidator(),\\n        sameAsValidator(\'password\', $localize`Given passwords are not the same `),\\n      ],\\n      [],\\n    ),\\n  });\\n\\n  setNewPassword() {\\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\\n\\n    this.form.markAllAsTouched();\\n    this.form.updateValueAndValidity();\\n\\n    if (this.form.valid && this.token) {\\n      this.resetSubscription = this.authService\\n        .setNewPassword(this.token, this.form.value.password)\\n        .subscribe(() => {\\n          this.router.navigate([\'/auth/login\']);\\n        });\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".logo {\\n  width: calc(100% - 80px);\\n  height: 64px;\\n  margin-top: 20px;\\n  background-image: url(\'/assets/metadata/logo_with_name.svg\');\\n  background-position: 0 50%;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n  cursor: pointer;\\n}\\n\\n.main {\\n  display: flex;\\n  width: 100%;\\n  min-height: 100vh;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: var(--color-neutral-800);\\n\\n  .box {\\n    display: flex;\\n    width: 100%;\\n    height: 100%;\\n\\n    .form-side {\\n      display: flex;\\n      width: 100%;\\n      height: 100%;\\n      flex-direction: column;\\n      align-items: center;\\n      justify-content: space-between;\\n      background-color: var(--color-gray-800);\\n\\n      form {\\n        display: flex;\\n        width: 100%;\\n        height: 100%;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        justify-content: center;\\n        padding: 4rem;\\n\\n        h2 {\\n          margin-bottom: 0.5rem;\\n        }\\n\\n        &>*:not(:last-child) {\\n          margin-bottom: 1.5rem;\\n        }\\n\\n        app-input {\\n          width: 100%;\\n        }\\n\\n        app-button {\\n          align-self: flex-end;\\n        }\\n      }\\n    }\\n\\n    .image-side {\\n      background-color: var(--color-gray-700);\\n    }\\n  }\\n}\\n\\n@screen sm {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen md {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen lg {\\n  .main {\\n    .box {\\n      width: 950px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 450px;\\n      }\\n    }\\n  }\\n}\\n\\n@screen xl {\\n  .main {\\n    .box {\\n      width: 1240px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 520px;\\n      }\\n\\n      .image-side {\\n        width: 720px;\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./change-password.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<section class=\\"main\\">\\n  <section class=\\"box\\">\\n    <section class=\\"form-side\\">\\n      <div class=\\"logo\\" routerLink=\\"/\\"></div>\\n      <form [formGroup]=\\"form\\" (submit)=\\"setNewPassword()\\">\\n        <div>\\n          <h2 class=\\"text-xl font-bold\\" i18n>Reset password</h2>\\n          <p class=\\"text-base\\" i18n>Enter your new password.</p>\\n        </div>\\n\\n        <app-input formControlName=\\"password\\" type=\\"password\\" placeholder=\\"●●●●●●●\\" floatingLabel=\\"Password\\"\\n          i18n-floatingLabel i18n-placeholder></app-input>\\n\\n        <app-input formControlName=\\"repeatPassword\\" type=\\"password\\" placeholder=\\"●●●●●●●\\"\\n          floatingLabel=\\"Repeat password\\" i18n-floatingLabel i18n-placeholder></app-input>\\n\\n        <app-button variant=\\"primary\\" i18n>Set new password</app-button>\\n\\n      </form>\\n    </section>\\n    <section class=\\"image-side\\">\\n\\n    </section>\\n  </section>\\n</section>\\n"},{"name":"CheckboxComponent","id":"component-CheckboxComponent-afb7aa225028f682bdbd19d84d404032e08a02876c547f3054128902bfef5b4c4a0fb073e55d1c7db376110c21f112b058b4a0d0e1e0e1b3b42c8dec5c64107c","file":"src/app/_main/components/checkbox/checkbox.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-checkbox","styleUrls":["./checkbox.component.scss"],"styles":[],"templateUrl":["./checkbox.component.html"],"viewProviders":[],"inputsClass":[{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\n\\n@Component({\\n  selector: \'app-checkbox\',\\n  templateUrl: \'./checkbox.component.html\',\\n  styleUrls: [\'./checkbox.component.scss\'],\\n})\\nexport class CheckboxComponent extends ControlAccessor {}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  position: relative;\\n}\\n\\nmat-checkbox.ng-invalid.ng-touched ~ mat-error {\\n  // Set this to \'block\' if you want to see mat-error label\\n  display: none;\\n}\\n\\nmat-error {\\n  position: absolute;\\n  bottom: -5px;\\n  left: 28px;\\n  display: none;\\n  font-size: 12px;\\n}\\n","styleUrl":"./checkbox.component.scss"}],"stylesData":"","extends":"ControlAccessor","templateData":"<mat-checkbox [formControl]=\\"control\\" [class.required]=\\"required\\" [name]=\\"name\\">\\n  <ng-content></ng-content>\\n</mat-checkbox>\\n<mat-error>{{ control.errors | validationError }}</mat-error>\\n"},{"name":"ColorComponent","id":"component-ColorComponent-dda87f5338dd370313c31ef3060128099d24916a8ce67293a530fdb48e33cb6f065eb0525956f4a6502ea689338a1338dc310c11af1818b1b4ff931c49d9e714","file":"src/app/_main/components/color/color.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"color","styleUrls":["./color.component.scss"],"styles":[],"templateUrl":["./color.component.html"],"viewProviders":[],"inputsClass":[{"name":"color","deprecated":false,"deprecationMessage":"","line":11,"type":"color","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_color","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"color","optional":false,"description":"","line":18,"modifierKind":[121]},{"name":"rgbColor","defaultValue":"\'rgb(0, 0, 0)\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20,"modifierKind":[123]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { color } from \'@main/interfaces/color.interface\';\\nimport * as Color from \'color\';\\n\\n@Component({\\n  selector: \'color\',\\n  templateUrl: \'./color.component.html\',\\n  styleUrls: [\'./color.component.scss\'],\\n})\\nexport class ColorComponent {\\n  @Input() set color(color: color) {\\n    this._color = color;\\n    this.rgbColor = Color(color).rgb().string();\\n  }\\n  get color(): color {\\n    return this._color;\\n  }\\n  private _color: color = 0;\\n\\n  public rgbColor = \'rgb(0, 0, 0)\';\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.color-square {\\n  width: 1rem;\\n  height: 1rem;\\n  border-radius: 0.25rem;\\n  margin-right: 0.5rem;\\n}\\n","styleUrl":"./color.component.scss"}],"stylesData":"","accessors":{"color":{"name":"color","setSignature":{"name":"color","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"color","type":"color","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":11,"jsdoctags":[{"name":"color","type":"color","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"color","type":"","returnType":"color","line":15}}},"templateData":"<div class=\\"color-square\\" [style.backgroundColor]=\\"rgbColor\\"></div>\\n<span class=\\"text-base\\">{{ rgbColor }}</span>\\n"},{"name":"ControlAccessor","id":"component-ControlAccessor-7b002d078829450f3c509edd3f9b4b2d7339201f220cf4c2ec13e53167ecc335e3867d50cd2416ffdb5dd2b95868fd9db9a6283d21cd8f1e727bbff4c8fb0ade","file":"src/app/_main/classes/control-accessor.class.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"template":"","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121]},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121]},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123]}],"methodsClass":[{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":""},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}]},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}]},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}]},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"<p>A base class for creating custom control accessors like inputs, checkboxes, etc.</p>\\n","rawdescription":"\\n\\nA base class for creating custom control accessors like inputs, checkboxes, etc.\\n","type":"component","sourceCode":"import { ChangeDetectorRef, Component, Input, OnDestroy, OnInit, Optional } from \'@angular/core\';\\nimport { AbstractControl, NgControl, Validator } from \'@angular/forms\';\\nimport { ControlValueAccessor } from \'@ngneat/reactive-forms\';\\nimport { ValidationError } from \'@main/interfaces/validation-error.interface\';\\nimport { FormControl } from \'@ngneat/reactive-forms\';\\nimport { Subject } from \'rxjs\';\\n\\n/**\\n * A base class for creating custom control accessors like inputs, checkboxes, etc.\\n */\\n@Component({\\n  template: \'\',\\n})\\n// eslint-disable-next-line @angular-eslint/component-class-suffix\\nexport class ControlAccessor<T = any>\\n  implements OnInit, OnDestroy, ControlValueAccessor, Validator\\n{\\n  /**\\n   * Property that defines if field should prompt user how to fill it. For example\\n   * in a form, if a field is email, it will give the user last used emails\\n   */\\n  @Input() autocomplete: \'on\' | \'off\' = \'off\';\\n\\n  /**\\n   * Property to describe if the control is required.\\n   * @returns true if the control is required to fill in form.\\n   */\\n  public get required() {\\n    return this._required;\\n  }\\n\\n  public get name() {\\n    return this.ngControl?.name?.toString() || \'\';\\n  }\\n\\n  public get isControlInitialized() {\\n    return Boolean(this.ngControl?.control);\\n  }\\n\\n  /**\\n   * Private property to set field as required\\n   *\\n   * @ignore\\n   */\\n  private _required: boolean = false;\\n\\n  /**\\n   * Control that is used by the form.\\n   */\\n  public get control(): FormControl<T> {\\n    return ((this.ngControl as any)?.control as FormControl<T>) || new FormControl<T>();\\n  }\\n\\n  /**\\n   * Observable that emits when the control is destroyed.\\n   *\\n   * @ignore\\n   */\\n  private destroy$: Subject<null> = new Subject();\\n\\n  /**\\n   * Observable that emits when the control is touched.\\n   *\\n   * @ignore\\n   */\\n  private touched$: Subject<boolean> = new Subject();\\n\\n  /**\\n   * Get the value of the control.\\n   */\\n  public get value(): T {\\n    return this.control.value;\\n  }\\n\\n  public get previousValue(): T | undefined {\\n    return this._previousValue;\\n  }\\n\\n  public get errors() {\\n    return this.control.errors;\\n  }\\n\\n  private _previousValue: T | undefined = undefined;\\n  private _previousValueBuffer: T | undefined = undefined;\\n\\n  /**\\n   * Accessor constructor to initialize component. Extended by child classes.\\n   * @param ngControl control to be used by the accessor\\n   */\\n  constructor(\\n    /**\\n     * Control passed from DOM to the component, contains all the information about form control\\n     */\\n    @Optional() public ngControl: NgControl,\\n    protected cdRef: ChangeDetectorRef,\\n  ) {\\n    this.ngControl.valueAccessor = this;\\n  }\\n\\n  ngOnInit() {\\n    this._watchForInit();\\n  }\\n\\n  /**\\n   * @ignore\\n   */\\n  private _watchForInit() {\\n    const afterSetup = () => {\\n      this._checkIfIsRequired();\\n      this._initValidation();\\n\\n      this.ngAfterControlInit();\\n    };\\n\\n    if (this.ngControl.control) {\\n      return afterSetup();\\n    }\\n\\n    const _setUpControl = (this.ngControl as any)._setUpControl;\\n    (this.ngControl as any)._setUpControl = (...args: any[]) => {\\n      const tmp = _setUpControl.apply(this.ngControl, ...args);\\n\\n      afterSetup();\\n      return tmp;\\n    };\\n  }\\n\\n  /**\\n   * Check if the control is required by provided validators.\\n   *\\n   * @ignore\\n   */\\n  private _checkIfIsRequired(): void {\\n    if (!(this.control as any)._rawValidators) return;\\n\\n    for (const validator of (this.ngControl as any).control._rawValidators) {\\n      if (validator.name === \'required\') {\\n        this._required = true;\\n        break;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @ignore\\n   */\\n  private _initValidation(): void {\\n    this.control.addValidators((control: AbstractControl) => this.validate(control));\\n  }\\n\\n  validate(control: AbstractControl): null | ValidationError {\\n    return null;\\n  }\\n\\n  /**\\n   * Writes a new value to the element.\\n   *\\n   * This method is called by the forms API to write to the view when programmatic\\n   * changes from model to view are requested.\\n   *\\n   * @param value The new value for the element\\n   */\\n  writeValue(value: T): void {\\n    this._previousValue = this._previousValueBuffer;\\n    this._previousValueBuffer = value;\\n  }\\n\\n  /**\\n   * Registers a callback function that is called when the control\'s value changes in the UI.\\n   *\\n   * This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n   * @param fn Callback to be called when the control value changes.\\n   */\\n  registerOnChange(fn: any): void {}\\n\\n  /**\\n   * Registers a callback function that is called by the forms API on initialization to update the form model on blur.\\n   *\\n   * @param fn Callback to be called when the control is touched.\\n   */\\n  registerOnTouched(fn: any): void {}\\n\\n  /**\\n   * Set disabled state on the control. If set to true, the control will be disabled.\\n   * @param isDisabled State to set to the control\\n   */\\n  setDisabledState(isDisabled: boolean) {\\n    this.control.setDisable(isDisabled);\\n  }\\n\\n  /** @ignore */\\n  ngOnDestroy(): void {\\n    this.destroy$.next(null);\\n    this.destroy$.complete();\\n    this.touched$.complete();\\n  }\\n\\n  ngAfterControlInit(): void {}\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"<p>Accessor constructor to initialize component. Extended by child classes.</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":84,"rawdescription":"\\n\\nAccessor constructor to initialize component. Extended by child classes.\\n","jsdoctags":[{"name":{"pos":2311,"end":2320,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"ngControl"},"type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"pos":2305,"end":2310,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>control to be used by the accessor</p>\\n"},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","ControlValueAccessor","Validator"],"accessors":{"required":{"name":"required","getSignature":{"name":"required","type":"","returnType":"","line":28,"rawdescription":"\\n\\nProperty to describe if the control is required.\\n","description":"<p>Property to describe if the control is required.</p>\\n","jsdoctags":[{"pos":978,"end":1039,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":979,"end":986,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>true if the control is required to fill in form.</p>\\n"}]}},"name":{"name":"name","getSignature":{"name":"name","type":"","returnType":"","line":32}},"isControlInitialized":{"name":"isControlInitialized","getSignature":{"name":"isControlInitialized","type":"","returnType":"","line":36}},"control":{"name":"control","getSignature":{"name":"control","type":"","returnType":"FormControl<T>","line":50,"rawdescription":"\\n\\nControl that is used by the form.\\n","description":"<p>Control that is used by the form.</p>\\n"}},"value":{"name":"value","getSignature":{"name":"value","type":"","returnType":"T","line":71,"rawdescription":"\\n\\nGet the value of the control.\\n","description":"<p>Get the value of the control.</p>\\n"}},"previousValue":{"name":"previousValue","getSignature":{"name":"previousValue","type":"","returnType":"T | undefined","line":75}},"errors":{"name":"errors","getSignature":{"name":"errors","type":"","returnType":"","line":79}}}},{"name":"CreateProjectMembersPage","id":"component-CreateProjectMembersPage-f452bbf62ddfd7767bcd31eba9d8d086a91a64587dae4c89d6e31c1e6a7d16df3c06faf525b8a73cf2fac682dfcb169f019515be85fa2c533b5f73d8bbbd5334","file":"src/app/dashboard/pages/create-project-members/create-project-members.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-create-project-members","styleUrls":["./create-project-members.page.scss"],"styles":[],"templateUrl":["./create-project-members.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"createSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":true,"description":"<p>Subscription to the workspace creation.</p>\\n","line":34,"rawdescription":"\\n\\nSubscription to the workspace creation.\\n","modifierKind":[123]},{"name":"faPlus","defaultValue":"faPlus","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21},{"name":"form","defaultValue":"new FormGroup({\\n    name: new FormControl(\'\', [requiredValidator(), maxLengthValidator(50)], []),\\n    workspaceId: new FormControl(0, [requiredValidator()]),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Form group for the project creation.</p>\\n","line":26,"rawdescription":"\\n\\nForm group for the project creation.\\n","modifierKind":[123]},{"name":"memberList","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"","line":40,"modifierKind":[121]},{"name":"workspace$","deprecated":false,"deprecationMessage":"","type":"Observable<Workspace>","optional":false,"description":"","line":36,"modifierKind":[123]},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":38,"modifierKind":[121]}],"methodsClass":[{"name":"openAddMembersDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\\nOtherwise, displays an error message.\\n","description":"<p>Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\\nOtherwise, displays an error message.</p>\\n"},{"name":"submitCreate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { AddMemberDialog } from \'@dashboard/dialogs/add-member/add-member.dialog\';\\nimport { Workspace } from \'@dashboard/interfaces/workspace.interface\';\\nimport { MemberService } from \'@dashboard/services/member/member.service\';\\nimport { faPlus } from \'@fortawesome/free-solid-svg-icons\';\\nimport { DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { maxLengthValidator } from \'@main/validators/max-length.validator\';\\nimport { Observable, Subscription } from \'rxjs\';\\nimport { ProjectService } from \'../../services/project/project.service\';\\nimport { WorkspaceService } from \'../../services/workspace/workspace.service\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\n\\n@Component({\\n  selector: \'app-create-project-members\',\\n  templateUrl: \'./create-project-members.page.html\',\\n  styleUrls: [\'./create-project-members.page.scss\'],\\n})\\nexport class CreateProjectMembersPage {\\n  faPlus = faPlus;\\n\\n  /**\\n   * Form group for the project creation.\\n   */\\n  public form = new FormGroup({\\n    name: new FormControl(\'\', [requiredValidator(), maxLengthValidator(50)], []),\\n    workspaceId: new FormControl(0, [requiredValidator()]),\\n  });\\n\\n  /**\\n   * Subscription to the workspace creation.\\n   */\\n  public createSubscription?: Subscription;\\n\\n  public workspace$!: Observable<Workspace>;\\n\\n  private workspaceId!: number;\\n\\n  private memberList?: string[];\\n\\n  /**\\n   * Default constructor. Injects the Workspace and Router service.\\n   * @param workspaceService Workspace service\\n   * @param router Router service\\n   */\\n  constructor(\\n    private workspaceService: WorkspaceService,\\n    private projectService: ProjectService,\\n    private router: Router,\\n    private activatedRoute: ActivatedRoute,\\n    private dialogService: DialogService,\\n    private memberService: MemberService,\\n  ) {\\n    const { workspaceId } = this.activatedRoute.snapshot.params;\\n    this.workspaceId = workspaceId;\\n    this.workspace$ = this.workspaceService.get(workspaceId);\\n    this.form.get(\'workspaceId\').setValue(workspaceId);\\n  }\\n\\n  /**\\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\\n   * Otherwise, displays an error message.\\n   */\\n\\n  openAddMembersDialog() {\\n    this.dialogService\\n      .open(AddMemberDialog, {})\\n      .afterClosed()\\n      .subscribe((result) => {\\n        this.memberList = result;\\n      });\\n  }\\n\\n  public submitCreate(): void {\\n    if (!this.createSubscription?.closed && this.createSubscription) return;\\n    this.form.markAllAsTouched();\\n    this.form.updateValueAndValidity();\\n    if (this.form.invalid) return;\\n\\n    this.createSubscription = this.projectService.create(this.form.value).subscribe((response) => {\\n      if (this.memberList) {\\n        this.memberService.add(this.memberList, [response.id]).subscribe(() => {\\n          this.router.navigate([this.workspaceId]).then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        this.router.navigate([this.workspaceId]).then(() => {\\n          window.location.reload();\\n        });\\n      }\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  padding: 2rem;\\n}\\n\\nform {\\n  padding-left: 10px;\\n}\\n\\n.button {\\n  display: flex;\\n  width: 100%;\\n  justify-content: flex-end;\\n  margin-top: -60px;\\n  margin-bottom: 20px;\\n}\\n\\n.app-member-list {\\n  padding-left: 10px;\\n}\\n\\n.app-button {\\n  display: flex;\\n  margin-top: 2rem;\\n}\\n","styleUrl":"./create-project-members.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"<p>Default constructor. Injects the Workspace and Router service.</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""},{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":""}],"line":40,"rawdescription":"\\n\\nDefault constructor. Injects the Workspace and Router service.\\n","jsdoctags":[{"name":{"pos":1636,"end":1652,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"workspaceService"},"type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"pos":1630,"end":1635,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Workspace service</p>\\n"},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":{"pos":1683,"end":1689,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"router"},"type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"pos":1677,"end":1682,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Router service</p>\\n"},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<div class=\\"button\\">\\n  <app-button [icon]=\\"faPlus\\" variant=\\"primary\\" (click)=\\"openAddMembersDialog()\\">Add member</app-button>\\n</div>\\n\\n<app-member-list></app-member-list>\\n"},{"name":"CreateProjectPage","id":"component-CreateProjectPage-080d2071ffb541b165988f5c1e78877152ffbade8da8dbfba66b56600c74548c78cffcc8944a23448736808a6822314ea014590d113f6f25d49a4d96d3951f18","file":"src/app/dashboard/pages/create-project/create-project.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"templateUrl":["./create-project.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"loader","defaultValue":"new Loader()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"project","deprecated":false,"deprecationMessage":"","type":"Project","optional":true,"description":"","line":41,"modifierKind":[123]},{"name":"projectFormGeneral","deprecated":false,"deprecationMessage":"","type":"ProjectFormGeneralComponent","optional":false,"description":"","line":21,"decorators":[{"name":"ViewChild","stringifiedArguments":"ProjectFormGeneralComponent"}]},{"name":"projectFormIntegrations","deprecated":false,"deprecationMessage":"","type":"ProjectFormIntegrationsComponent","optional":false,"description":"","line":25,"decorators":[{"name":"ViewChild","stringifiedArguments":"ProjectFormIntegrationsComponent"}]},{"name":"projectFormMembers","deprecated":false,"deprecationMessage":"","type":"ProjectFormMembersComponent","optional":false,"description":"","line":22,"decorators":[{"name":"ViewChild","stringifiedArguments":"ProjectFormMembersComponent"}]},{"name":"projectFormStatuses","deprecated":false,"deprecationMessage":"","type":"ProjectFormStatusesComponent","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"ProjectFormStatusesComponent"}]},{"name":"stage","defaultValue":"ProjectFormStage.GENERAL","deprecated":false,"deprecationMessage":"","type":"ProjectFormStage","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"stages","defaultValue":"[\\n    ProjectFormStage.GENERAL,\\n    ProjectFormStage.MEMBERS,\\n    ProjectFormStage.STATUSES,\\n    ProjectFormStage.INTEGRATIONS,\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":34,"modifierKind":[123]},{"name":"workspace$","defaultValue":"of({} as Workspace)","deprecated":false,"deprecationMessage":"","type":"Observable<Workspace>","optional":false,"description":"","line":44},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":43}],"methodsClass":[{"name":"nextStage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"previousStage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setStage","args":[{"name":"stage","type":"ProjectFormStage","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"stage","type":"ProjectFormStage","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"submitCreate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates a new project by saving the form data, saving dependent stages and then navigating to the project page.\\nOtherwise, displays an error message.\\n","description":"<p>Creates a new project by saving the form data, saving dependent stages and then navigating to the project page.\\nOtherwise, displays an error message.</p>\\n","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ViewChild } from \'@angular/core\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { ProjectFormGeneralComponent } from \'@dashboard/components/project-form-general/project-form-general.component\';\\nimport { ProjectFormIntegrationsComponent } from \'@dashboard/components/project-form-integrations/project-form-integrations.component\';\\nimport { ProjectFormMembersComponent } from \'@dashboard/components/project-form-members/project-form-members.component\';\\nimport { ProjectFormStatusesComponent } from \'@dashboard/components/project-form-statuses/project-form-statuses.component\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { Workspace } from \'@dashboard/interfaces/workspace.interface\';\\nimport { ProjectFormStage } from \'@dashboard/models/project-form-stage.enum\';\\nimport { WorkspaceService } from \'@dashboard/services/workspace/workspace.service\';\\nimport { Loader } from \'@main/classes/loader/loader.class\';\\nimport { setLoaderMessage, startLoader, stopLoader } from \'@main/operators/loader.operator\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\nimport { Observable, of, switchMap, tap } from \'rxjs\';\\n\\n@UntilDestroy()\\n@Component({\\n  templateUrl: \'./create-project.page.html\',\\n})\\nexport class CreateProjectPage {\\n  @ViewChild(ProjectFormGeneralComponent) projectFormGeneral!: ProjectFormGeneralComponent;\\n  @ViewChild(ProjectFormMembersComponent) projectFormMembers!: ProjectFormMembersComponent;\\n  @ViewChild(ProjectFormStatusesComponent) projectFormStatuses!: ProjectFormStatusesComponent;\\n  @ViewChild(ProjectFormIntegrationsComponent)\\n  projectFormIntegrations!: ProjectFormIntegrationsComponent;\\n\\n  public loader = new Loader();\\n\\n  /** @ignore */\\n  ProjectFormStage = ProjectFormStage;\\n\\n  public stage: ProjectFormStage = ProjectFormStage.GENERAL;\\n\\n  public stages = [\\n    ProjectFormStage.GENERAL,\\n    ProjectFormStage.MEMBERS,\\n    ProjectFormStage.STATUSES,\\n    ProjectFormStage.INTEGRATIONS,\\n  ];\\n\\n  public project?: Project;\\n\\n  workspaceId?: number;\\n  workspace$: Observable<Workspace> = of({} as Workspace);\\n\\n  constructor(\\n    private activatedRoute: ActivatedRoute,\\n    private router: Router,\\n    private workspaceService: WorkspaceService,\\n  ) {\\n    this.activatedRoute.params.pipe(untilDestroyed(this)).subscribe((params) => {\\n      this.workspaceId = params[\'workspaceId\'] ? Number(params[\'workspaceId\']) : undefined;\\n\\n      if (this.workspaceId) {\\n        this.workspace$ = this.workspaceService.get(this.workspaceId);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * Creates a new project by saving the form data, saving dependent stages and then navigating to the project page.\\n   * Otherwise, displays an error message.\\n   */\\n  public submitCreate(): void {\\n    (\\n      of(null).pipe(\\n        startLoader(this.loader, $localize`Saving project...`),\\n        switchMap(() => this.projectFormGeneral.save()),\\n        tap((project) => {\\n          this.project = project;\\n          this.projectFormMembers.project = project;\\n          this.projectFormStatuses.project = project;\\n          this.projectFormIntegrations.project = project;\\n        }),\\n        setLoaderMessage(this.loader, $localize`Saving project members...`),\\n        switchMap(() => this.projectFormMembers.save()),\\n        setLoaderMessage(this.loader, $localize`Saving project statuses...`),\\n        switchMap(() => this.projectFormStatuses.save()),\\n        setLoaderMessage(this.loader, $localize`Saving integrations...`),\\n        switchMap(() => this.projectFormIntegrations.save()),\\n        stopLoader(this.loader),\\n      ) as Observable<Project>\\n    ).subscribe((project) => {\\n      this.router.navigate([\'/\', this.workspaceId, project.id]);\\n    });\\n  }\\n\\n  public setStage(stage: ProjectFormStage) {\\n    this.stage = stage;\\n  }\\n\\n  public nextStage() {\\n    const index = this.stages.findIndex((s) => s === this.stage);\\n    if (index >= 0 && index < this.stages.length - 1) {\\n      this.setStage(this.stages[index + 1]);\\n    }\\n  }\\n\\n  public previousStage() {\\n    const index = this.stages.findIndex((s) => s === this.stage);\\n    if (index > 0 && index < this.stages.length) {\\n      this.setStage(this.stages[index - 1]);\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":44,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<tabs>\\n  <div class=\\"prefix\\" i18n>\\n    Create new project\\n  </div>\\n  <tab (click)=\\"setStage(ProjectFormStage.GENERAL)\\" [class.active]=\\"stage === ProjectFormStage.GENERAL\\" i18n>\\n    General\\n  </tab>\\n  <tab (click)=\\"setStage(ProjectFormStage.MEMBERS)\\" [class.active]=\\"stage === ProjectFormStage.MEMBERS\\" i18n>\\n    Members\\n  </tab>\\n  <tab (click)=\\"setStage(ProjectFormStage.STATUSES)\\" [class.active]=\\"stage === ProjectFormStage.STATUSES\\" i18n>\\n    Statuses\\n  </tab>\\n  <tab (click)=\\"setStage(ProjectFormStage.INTEGRATIONS)\\" [class.active]=\\"stage === ProjectFormStage.INTEGRATIONS\\" i18n>\\n    Integrations\\n  </tab>\\n</tabs>\\n\\n<ng-container *ngIf=\\"workspace$ | async as workspace\\">\\n\\n  \x3c!-- General stage --\x3e\\n  <section [class.hidden]=\\"stage !== ProjectFormStage.GENERAL\\" class=\\"p-5\\">\\n    <project-form-general [workspace]=\\"workspace\\" [project]=\\"project\\"></project-form-general>\\n  </section>\\n\\n  \x3c!-- Members stage --\x3e\\n  <section [class.hidden]=\\"stage !== ProjectFormStage.MEMBERS\\" class=\\"p-5\\">\\n    <project-form-members [project]=\\"project\\"></project-form-members>\\n  </section>\\n\\n  \x3c!-- Statuses stage --\x3e\\n  <section [class.hidden]=\\"stage !== ProjectFormStage.STATUSES\\" class=\\"p-5\\">\\n    <project-form-statuses [project]=\\"project\\"></project-form-statuses>\\n  </section>\\n\\n  \x3c!-- Integrations stage --\x3e\\n  <section [class.hidden]=\\"stage !== ProjectFormStage.INTEGRATIONS\\" class=\\"p-5\\">\\n    <project-form-integrations [project]=\\"project\\"></project-form-integrations>\\n  </section>\\n</ng-container>\\n\\n<div class=\\"flex justify-end pr-5\\">\\n  \x3c!-- <app-button type=\\"button\\" variant=\\"secondary\\" (click)=\\"close()\\" i18n>Cancel</app-button> --\x3e\\n  <app-button type=\\"button\\" variant=\\"primary\\" (click)=\\"submitCreate()\\" i18n>Create project</app-button>\\n</div>\\n"},{"name":"CreateWorkspacePage","id":"component-CreateWorkspacePage-40cfe0ea977ec2783070969bc95e9a3f840279d2fe08f19ccc60add85f96fb598662f3d0ba7f9737a3a1604cdd2a68b12b9b70a3fe4fa277c416dd7e203fce68","file":"src/app/dashboard/pages/create-workspace/create-workspace.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-create-workspace-page","styleUrls":["./create-workspace.page.scss"],"styles":[],"templateUrl":["./create-workspace.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"createSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":true,"description":"<p>Subscription to the workspace creation.</p>\\n","line":30,"rawdescription":"\\n\\nSubscription to the workspace creation.\\n","modifierKind":[123]},{"name":"form","defaultValue":"new FormGroup({\\n    name: new FormControl(\'\', [requiredValidator(), maxLengthValidator(50)], []),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Form group for the workspace creation.</p>\\n","line":23,"rawdescription":"\\n\\nForm group for the workspace creation.\\n","modifierKind":[123]}],"methodsClass":[{"name":"submitCreate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\\nOtherwise, displays an error message.\\n","description":"<p>Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\\nOtherwise, displays an error message.</p>\\n","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"<p>Create workspace page component.</p>\\n","rawdescription":"\\n\\nCreate workspace page component.\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { Router } from \'@angular/router\';\\nimport { maxLengthValidator } from \'@main/validators/max-length.validator\';\\nimport { Subscription } from \'rxjs\';\\nimport { Page } from \'@main/decorators/page/page.decorator\';\\nimport { requiredValidator } from \'src/app/_main/validators/required.validator\';\\nimport { WorkspaceService } from \'../../services/workspace/workspace.service\';\\n\\n/**\\n * Create workspace page component.\\n */\\n@Page()\\n@Component({\\n  selector: \'app-create-workspace-page\',\\n  templateUrl: \'./create-workspace.page.html\',\\n  styleUrls: [\'./create-workspace.page.scss\'],\\n})\\nexport class CreateWorkspacePage {\\n  /**\\n   * Form group for the workspace creation.\\n   */\\n  public form = new FormGroup({\\n    name: new FormControl(\'\', [requiredValidator(), maxLengthValidator(50)], []),\\n  });\\n\\n  /**\\n   * Subscription to the workspace creation.\\n   */\\n  public createSubscription?: Subscription;\\n\\n  /**\\n   * Default constructor. Injects the Workspace and Router service.\\n   * @param workspaceService Workspace service\\n   * @param router Router service\\n   */\\n  constructor(private workspaceService: WorkspaceService, private router: Router) {}\\n\\n  /**\\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\\n   * Otherwise, displays an error message.\\n   */\\n  public submitCreate(): void {\\n    if (!this.createSubscription?.closed && this.createSubscription) return;\\n    this.form.markAllAsTouched();\\n    this.form.updateValueAndValidity();\\n    if (this.form.invalid) return;\\n\\n    this.createSubscription = this.workspaceService.create(this.form.value).subscribe(() => {\\n      this.router.navigate([\'/\']).then(() => {\\n        window.location.reload();\\n      });\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"form {\\n  padding: 4rem;\\n}\\n\\n.buttons {\\n  display: flex;\\n  margin-top: 1rem;\\n\\n  &>* {\\n    display: block;\\n    margin-right: 1rem;\\n  }\\n}\\n","styleUrl":"./create-workspace.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"<p>Default constructor. Injects the Workspace and Router service.</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":30,"rawdescription":"\\n\\nDefault constructor. Injects the Workspace and Router service.\\n","jsdoctags":[{"name":{"pos":1088,"end":1104,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"workspaceService"},"type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"pos":1082,"end":1087,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Workspace service</p>\\n"},{"name":{"pos":1135,"end":1141,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"router"},"type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"pos":1129,"end":1134,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Router service</p>\\n"}]},"templateData":"<form [formGroup]=\\"form\\" (submit)=\\"submitCreate()\\">\\n  <h2 class=\\"text-xl font-bold mb-5\\" i18n>Create new workspace</h2>\\n  <app-input formControlName=\\"name\\" type=\\"text\\" placeholder=\\"New workspace\\" floatingLabel=\\"Workspace name\\"\\n    i18n-floatingLabel i18n-placeholder></app-input>\\n\\n  <div class=\\"buttons\\">\\n    <app-button variant=\\"primary\\" [pending]=\\"createSubscription && !createSubscription.closed\\" i18n>Save</app-button>\\n    <app-button variant=\\"secondary\\" type=\\"button\\" routerLink=\\"/\\" i18n>Cancel</app-button>\\n  </div>\\n\\n</form>\\n"},{"name":"DatePickerComponent","id":"component-DatePickerComponent-26b3bc465349154a3d2e82b0912f8751bd8e76df84855b14526d0b1446a08f3b5a2e75bb0815fc1d1e4b7a7aeeddf56dbd2a8a1be2819fb030e1b7ab9580a5e8","file":"src/app/_main/components/input-date-time/date-picker/date-picker.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"date-picker","styleUrls":["./date-picker.component.scss"],"styles":[],"templateUrl":["./date-picker.component.html"],"viewProviders":[],"inputsClass":[{"name":"firstDayOfWeek","defaultValue":"1","deprecated":false,"deprecationMessage":"","line":14,"type":"number","decorators":[]},{"name":"hideTodayButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"currentDate","defaultValue":"dayjs()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"cursor","defaultValue":"this.control.value ? dayjs(this.control.value) : dayjs()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"daysGrid","defaultValue":"this.calculateDaysGrid()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"faChevronLeft","defaultValue":"faChevronLeft","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26},{"name":"faChevronRight","defaultValue":"faChevronRight","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27},{"name":"monthNames","defaultValue":"dayjs.months()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20},{"name":"weekdaysShort","defaultValue":"[\\n    ...dayjs.weekdaysShort().slice(this.firstDayOfWeek),\\n    ...dayjs.weekdaysShort().slice(0, this.firstDayOfWeek),\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":21},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"calculateDaysGrid","args":[],"optional":false,"returnType":"DaysGrid","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"nextMonth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"ControlAccessor"}},{"name":"previousMonth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""},{"name":"selectDay","args":[{"name":"day","type":"CalendarDay","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"day","type":"CalendarDay","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setControlProperties","args":[{"name":"propertyNames","type":"UnitType[]","deprecated":false,"deprecationMessage":""},{"name":"values","type":"number[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"propertyNames","type":"UnitType[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"values","type":"number[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"today","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":""},{"name":"writeValue","args":[{"name":"value","type":"unixTimestamp | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"value","type":"unixTimestamp | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport dayjs, { UnitType } from \'dayjs\';\\nimport { DaysGrid, CalendarDay } from \'../date-picker.model\';\\nimport { faChevronLeft, faChevronRight } from \'@fortawesome/free-solid-svg-icons\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { unixTimestamp } from \'../../../interfaces/date.interface\';\\n\\n@Component({\\n  selector: \'date-picker\',\\n  templateUrl: \'./date-picker.component.html\',\\n  styleUrls: [\'./date-picker.component.scss\'],\\n})\\nexport class DatePickerComponent extends ControlAccessor<unixTimestamp | null> implements OnInit {\\n  @Input() firstDayOfWeek = 1;\\n  @Input() hideTodayButton = false;\\n\\n  cursor = this.control.value ? dayjs(this.control.value) : dayjs();\\n  currentDate = dayjs();\\n\\n  monthNames = dayjs.months();\\n  weekdaysShort = [\\n    ...dayjs.weekdaysShort().slice(this.firstDayOfWeek),\\n    ...dayjs.weekdaysShort().slice(0, this.firstDayOfWeek),\\n  ];\\n\\n  faChevronLeft = faChevronLeft;\\n  faChevronRight = faChevronRight;\\n\\n  daysGrid = this.calculateDaysGrid();\\n\\n  private calculateDaysGrid() {\\n    let pointer = (() => {\\n      const date = this.cursor.startOf(\'month\');\\n      const day = date.day();\\n\\n      return date.subtract(day + 7 - this.firstDayOfWeek, \'day\');\\n    })();\\n\\n    const daysGrid: DaysGrid = [];\\n\\n    for (let i = 0; i < 6; i++) {\\n      daysGrid.push([]);\\n      for (let j = 0; j < 7; j++) {\\n        const day: CalendarDay = {\\n          id: pointer.valueOf(),\\n          name: pointer.date(),\\n          isWeekend: pointer.day() === 0 || pointer.day() === 6,\\n          isFromPreviousMonth: pointer.month() < this.cursor.month(),\\n          isFromNextMonth: pointer.month() > this.cursor.month(),\\n          today: pointer.isSame(this.currentDate, \'day\'),\\n          selected: pointer.isSame(dayjs(this.control.value || 0), \'day\'),\\n        };\\n\\n        daysGrid[i].push(day);\\n\\n        pointer = pointer.add(1, \'day\');\\n      }\\n    }\\n\\n    return daysGrid;\\n  }\\n\\n  previousMonth() {\\n    console.log(this.cursor.format(\'YYYY-MM-DD\'));\\n    this.cursor = this.cursor.subtract(1, \'month\');\\n    console.log(this.cursor.format(\'YYYY-MM-DD\'));\\n    this.daysGrid = this.calculateDaysGrid();\\n  }\\n\\n  nextMonth() {\\n    this.cursor = this.cursor.add(1, \'month\');\\n    this.daysGrid = this.calculateDaysGrid();\\n  }\\n\\n  today() {\\n    this.cursor = dayjs();\\n    this.daysGrid = this.calculateDaysGrid();\\n\\n    this.control.setValue(this.cursor.valueOf());\\n  }\\n\\n  setControlProperties(propertyNames: UnitType[], values: number[]) {\\n    let value = dayjs(this.control.value || 0);\\n    for (let i = 0; i < Math.min(propertyNames.length, values.length); i++) {\\n      value = value.set(propertyNames[i], values[i]);\\n    }\\n    this.control.setValue(value.valueOf());\\n  }\\n\\n  selectDay(day: CalendarDay) {\\n    if (day.isFromPreviousMonth) {\\n      this.cursor = this.cursor.subtract(1, \'month\');\\n    } else if (day.isFromNextMonth) {\\n      this.cursor = this.cursor.add(1, \'month\');\\n    }\\n\\n    this.cursor = this.cursor.date(day.name);\\n    this.control.setValue(this.cursor.valueOf());\\n\\n    this.daysGrid = this.calculateDaysGrid();\\n  }\\n\\n  override ngAfterControlInit(): void {\\n    if (this.control.value) {\\n      this.cursor = dayjs(this.control.value);\\n      this.daysGrid = this.calculateDaysGrid();\\n    }\\n  }\\n\\n  override writeValue(value: unixTimestamp | null) {\\n    super.writeValue(value);\\n\\n    if (value && !dayjs(this.value).isSame(dayjs(this.previousValue))) {\\n      console.log(\'new value\', value);\\n      this.cursor = dayjs(value);\\n    }\\n    this.daysGrid = this.calculateDaysGrid();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  color: var(--color-text);\\n}\\n\\n.date {\\n  .year-header {\\n    padding: 0.5rem;\\n    opacity: 0.5;\\n    text-align: center;\\n  }\\n\\n  .header {\\n    display: flex;\\n    justify-content: space-between;\\n    padding: 0.5rem 1rem 1rem 1rem;\\n\\n    .previous-month,\\n    .next-month {\\n      padding: 0.25rem;\\n      background-color: transparent;\\n      border-radius: 3px;\\n      color: var(--color-text);\\n      cursor: pointer;\\n      font-weight: bold;\\n      transition: background-color .1s ease;\\n\\n      &:hover {\\n        background-color: var(--color-secondary-800);\\n      }\\n    }\\n  }\\n\\n  .calendar {\\n    width: 300px;\\n    padding: 0 1rem;\\n\\n    .weekdays {\\n      display: flex;\\n      width: 100%;\\n      justify-content: space-between;\\n      margin-bottom: 0.25rem;\\n      font-size: 0.75rem;\\n      opacity: 0.5;\\n\\n      &>* {\\n        width: 100%;\\n        text-align: center;\\n      }\\n    }\\n\\n    .calendar-grid {\\n      display: flex;\\n      width: 100%;\\n      flex-direction: column;\\n      justify-content: space-between;\\n\\n      .row {\\n        display: flex;\\n        width: 100%;\\n        justify-content: stretch;\\n\\n        .cell {\\n          display: flex;\\n          width: 100%;\\n          align-items: center;\\n          justify-content: center;\\n          padding: 0.1rem;\\n          border-radius: 3px;\\n          cursor: pointer;\\n          transition: background-color .1s ease;\\n\\n          &.today {\\n            background-color: var(--color-secondary-800);\\n          }\\n\\n          &.selected {\\n            background-color: var(--color-primary-500);\\n          }\\n\\n          &:not(.selected):hover {\\n            background-color: var(--color-secondary-800);\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  .date-actions {\\n    display: flex;\\n    justify-content: flex-end;\\n    padding: 1rem;\\n\\n    button {\\n      padding: 0.25rem 0.5rem;\\n      background-color: transparent;\\n      border-radius: 3px;\\n      color: var(--color-text);\\n      cursor: pointer;\\n      font-weight: bold;\\n      transition: background-color .1s ease;\\n\\n      &:hover {\\n        background-color: var(--color-secondary-800);\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./date-picker.component.scss"}],"stylesData":"","extends":"ControlAccessor","implements":["OnInit"],"templateData":"<div class=\\"date\\">\\n  <div class=\\"year-header\\">\\n    {{ cursor | dayjsFormat:\'YYYY\' }}\\n  </div>\\n  <div class=\\"header\\">\\n    <button class=\\"previous-month\\" (click)=\\"previousMonth()\\">\\n      <app-icon [icon]=\\"faChevronLeft\\" size=\\"1rem\\"></app-icon>\\n    </button>\\n    <h4 class=\\"month-name\\">\\n      {{ cursor | month }}\\n    </h4>\\n    <button class=\\"next-month\\" (click)=\\"nextMonth()\\">\\n      <app-icon [icon]=\\"faChevronRight\\" size=\\"1rem\\"></app-icon>\\n    </button>\\n  </div>\\n  <div class=\\"calendar\\">\\n    <div class=\\"weekdays\\">\\n      <span *ngFor=\\"let weekday of weekdaysShort\\" class=\\"weekday\\">{{ weekday }}</span>\\n    </div>\\n    <div class=\\"calendar-grid\\">\\n      <div class=\\"row\\" *ngFor=\\"let row of daysGrid\\">\\n        <div class=\\"cell\\" *ngFor=\\"let day of row\\" (click)=\\"selectDay(day)\\" [class.today]=\\"day.today\\"\\n          [class.selected]=\\"day.selected\\">\\n          <span class=\\"day\\" [class.opacity-50]=\\"day.isFromPreviousMonth || day.isFromNextMonth\\">{{ day.name }}</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div *ngIf=\\"!hideTodayButton\\" class=\\"date-actions\\">\\n    <button (click)=\\"today()\\" i18n>Today</button>\\n  </div>\\n</div>\\n"},{"name":"DateTimePickerComponent","id":"component-DateTimePickerComponent-e086696676334cbf87e90eb660d1f966fb3fd7fabc0c6056cc37a25804bd4392dd239b30f880fabef7aaebc2b8bac8321f8a8e8f703a6428d79891a28db534c2","file":"src/app/_main/components/input-date-time/date-time-picker/date-time-picker.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"date-time-picker","styleUrls":["./date-time-picker.component.scss"],"styles":[],"templateUrl":["./date-time-picker.component.html"],"viewProviders":[],"inputsClass":[{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { unixTimestamp } from \'../../../interfaces/date.interface\';\\n\\n@Component({\\n  selector: \'date-time-picker\',\\n  templateUrl: \'./date-time-picker.component.html\',\\n  styleUrls: [\'./date-time-picker.component.scss\'],\\n})\\nexport class DateTimePickerComponent\\n  extends ControlAccessor<unixTimestamp | null>\\n  implements OnInit {}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  color: var(--color-text);\\n}\\n\\n.general {\\n  display: flex;\\n  width: 180px;\\n  flex-direction: column;\\n  padding: 1rem;\\n  background-color: var(--color-secondary-500);\\n  border-radius: var(--border-radius) 0 0 var(--border-radius);\\n\\n  .header {\\n    height: 78px;\\n\\n    .year {\\n      opacity: 0.75;\\n    }\\n\\n    .date {\\n      font-size: 1.2rem;\\n    }\\n  }\\n}\\n","styleUrl":"./date-time-picker.component.scss"}],"stylesData":"","extends":"ControlAccessor","implements":["OnInit"],"templateData":"<div class=\\"general\\">\\n  <div class=\\"header\\">\\n    <ng-container *ngIf=\\"control.value | dayjs as date\\">\\n      <div class=\\"year\\">{{ date | year }}</div>\\n      <div class=\\"date\\">{{ date | dayjsFormat:\'MMMM D\' }}</div>\\n      <div class=\\"opacity-50\\">{{ date | dayOfWeek }}</div>\\n    </ng-container>\\n  </div>\\n  <time-picker [formControl]=\\"control\\"></time-picker>\\n</div>\\n<date-picker [formControl]=\\"control\\"></date-picker>\\n"},{"name":"DeleteAccountPage","id":"component-DeleteAccountPage-8e03fcd240c52af0bb13a1de67ea4c49f1f8d72598f7140fc949fb42a7e53632c58819bb0ca42a0bf41667374058eee4640fbd7f92d83ce4f8909328aff7c187","file":"src/app/auth/pages/delete-account/delete-account.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-delete-account.page","styleUrls":["./delete-account.page.scss"],"styles":[],"templateUrl":["./delete-account.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"deleteAccount","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { AuthService } from \'@auth/services/auth/auth.service\';\\n\\n@Component({\\n  selector: \'app-delete-account.page\',\\n  templateUrl: \'./delete-account.page.html\',\\n  styleUrls: [\'./delete-account.page.scss\'],\\n})\\nexport class DeleteAccountPage implements OnInit {\\n  constructor(\\n    private authService: AuthService,\\n    private router: Router,\\n    private activatedRoute: ActivatedRoute,\\n  ) {}\\n\\n  ngOnInit() {\\n    const { token } = this.activatedRoute.snapshot.queryParams;\\n    this.deleteAccount(token);\\n  }\\n\\n  deleteAccount(token: string) {\\n    if (token) {\\n      this.authService.deleteAccountConfirmation(token).subscribe(() => {});\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".logo {\\n  width: calc(100% - 80px);\\n  height: 64px;\\n  margin-top: 20px;\\n  background-image: url(\'/assets/metadata/logo_with_name.svg\');\\n  background-position: 0 50%;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n  cursor: pointer;\\n}\\n\\n.main {\\n  display: flex;\\n  width: 100%;\\n  min-height: 100vh;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: var(--color-neutral-800);\\n\\n  .box {\\n    display: flex;\\n    width: 100%;\\n    height: 100%;\\n\\n    .form-side {\\n      display: flex;\\n      width: 100%;\\n      height: 100%;\\n      flex-direction: column;\\n      align-items: center;\\n      padding: 4rem;\\n      background-color: var(--color-gray-800);\\n\\n      h2 {\\n        margin-bottom: 0.5rem;\\n      }\\n\\n      &>*:not(:last-child) {\\n        margin-bottom: 1.5rem;\\n      }\\n\\n      app-input {\\n        width: 100%;\\n      }\\n\\n      app-button {\\n        align-self: flex-end;\\n      }\\n\\n      a {\\n        color: var(--color-link);\\n        cursor: pointer;\\n        transition: color 0.2s ease;\\n\\n        &:hover {\\n          color: var(--color-link-hover);\\n        }\\n      }\\n    }\\n\\n    .image-side {\\n      background-color: var(--color-gray-700);\\n    }\\n  }\\n}\\n\\n@screen sm {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen md {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen lg {\\n  .main {\\n    .box {\\n      width: 950px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 450px;\\n      }\\n    }\\n  }\\n}\\n\\n@screen xl {\\n  .main {\\n    .box {\\n      width: 1240px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 520px;\\n      }\\n\\n      .image-side {\\n        width: 720px;\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./delete-account.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<section class=\\"main\\">\\n  <section class=\\"box\\">\\n    <section class=\\"form-side\\">\\n      <div class=\\"logo\\" routerLink=\\"/\\"></div>\\n      <div>\\n        <h2 class=\\"text-xl font-bold\\" i18n>Your account has been deleted.</h2>\\n        <p class=\\"text-base\\" i18n>If you are going to revive your account, you can log in to your account <a\\n            routerLink=\\"/auth/login\\">click here to log in</a> </p>\\n      </div>\\n    </section>\\n    <section class=\\"image-side\\">\\n\\n    </section>\\n  </section>\\n</section>\\n"},{"name":"DialogOutletComponent","id":"component-DialogOutletComponent-2e00605e43057ad43c7aebab3076a4513ed8167d9212945f4ac9cc5cccb1b18e359c2d34513e5c3db0c6cb959111bdd28a9e107f7e5759e18c074935e9e7a672","file":"src/app/_main/components/dialog-outlet/dialog-outlet.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dialog-outlet","styleUrls":["./dialog-outlet.component.scss"],"styles":[],"templateUrl":["./dialog-outlet.component.html"],"viewProviders":[],"inputsClass":[{"name":"outlet","deprecated":false,"deprecationMessage":"","line":15,"type":"DialogOutlet","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"host","deprecated":false,"deprecationMessage":"","type":"ViewContainerDirective","optional":false,"description":"","line":14,"decorators":[{"name":"ViewChild","stringifiedArguments":"ViewContainerDirective, {static: true}"}]},{"name":"width","defaultValue":"\'0px\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'style.width\'"}]}],"methodsClass":[{"name":"clearComponent","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"createInjector","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":""},{"name":"dialogRef","type":"DialogRef","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogRef","type":"DialogRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"hide","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"loadComponent","args":[{"name":"component","type":"any","deprecated":false,"deprecationMessage":""},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"component","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"renderDialog","args":[{"name":"component","type":"any","deprecated":false,"deprecationMessage":""},{"name":"data","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DialogRef","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"component","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"show","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[121]}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"style.width","defaultValue":"\'0px\'","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]}],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, HostBinding, Injector, Input, ViewChild } from \'@angular/core\';\\nimport { MatDialogRef, MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { DialogRef } from \'@main/classes/dialog-ref.class\';\\nimport { ViewContainerDirective } from \'@main/directives/view-container/view-container.directive\';\\nimport { DialogOutlet, DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { take } from \'rxjs\';\\n\\n@Component({\\n  selector: \'app-dialog-outlet\',\\n  templateUrl: \'./dialog-outlet.component.html\',\\n  styleUrls: [\'./dialog-outlet.component.scss\'],\\n})\\nexport class DialogOutletComponent {\\n  @ViewChild(ViewContainerDirective, { static: true }) host!: ViewContainerDirective;\\n  @Input() set outlet(outlet: DialogOutlet) {\\n    this.dialogService.registerOutlet(outlet, this);\\n  }\\n  @HostBinding(\'style.width\') width = \'0px\';\\n\\n  constructor(private dialogService: DialogService, private injector: Injector) {}\\n\\n  renderDialog(component: any, data: any): DialogRef {\\n    const dialogRef = new DialogRef();\\n    const injector = this.createInjector(data, dialogRef);\\n\\n    dialogRef\\n      .beforeClosed()\\n      .pipe(take(1))\\n      .subscribe(() => {\\n        this.clearComponent();\\n      });\\n\\n    this.loadComponent(component, injector);\\n    return dialogRef;\\n  }\\n\\n  private loadComponent(component: any, injector: Injector) {\\n    const viewContainerRef = this.host.viewContainerRef;\\n    viewContainerRef.clear();\\n\\n    const _componentRef = viewContainerRef.createComponent(component, { injector });\\n    this.show();\\n  }\\n\\n  private clearComponent() {\\n    this.hide();\\n    setTimeout(() => {\\n      const viewContainerRef = this.host.viewContainerRef;\\n      viewContainerRef.clear();\\n    }, 500);\\n  }\\n\\n  private createInjector(data: any, dialogRef: DialogRef) {\\n    return Injector.create({\\n      providers: [\\n        { provide: MAT_DIALOG_DATA, useValue: data },\\n        { provide: MatDialogRef, useValue: dialogRef },\\n      ],\\n      parent: this.injector,\\n    });\\n  }\\n\\n  private show() {\\n    this.width = \'450px\';\\n  }\\n\\n  private hide() {\\n    this.width = \'0px\';\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  overflow: hidden;\\n  width: 0;\\n  flex-shrink: 0;\\n  transition: width .4s ease;\\n}\\n\\n.dialog-outlet {\\n  width: 450px;\\n  height: 100%;\\n  border-radius: 0;\\n  overflow-y: auto;\\n}\\n","styleUrl":"./dialog-outlet.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"outlet":{"name":"outlet","setSignature":{"name":"outlet","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"outlet","type":"DialogOutlet","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":15,"jsdoctags":[{"name":"outlet","type":"DialogOutlet","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<div class=\\"dialog-outlet\\" cdk-scrollable>\\n  <ng-template view-container></ng-template>\\n</div>\\n"},{"name":"EditProjectPage","id":"component-EditProjectPage-95663cc11fefcdcfaf345f9db9000653cc2caeb21995db7e77c5cab3c32bd2733428c80385e498b911f98c8c03e742aec66e57f8854f3956ae3b5eec83b9b4ae","file":"src/app/dashboard/pages/edit-project/edit-project.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-edit-project","styleUrls":[],"styles":[],"templateUrl":["./edit-project.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"loader","defaultValue":"new Loader()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"project$","deprecated":false,"deprecationMessage":"","type":"Observable<Project>","optional":false,"description":"","line":34,"modifierKind":[123]},{"name":"projectFormGeneral","deprecated":false,"deprecationMessage":"","type":"ProjectFormGeneralComponent","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"ProjectFormGeneralComponent"}]},{"name":"projectFormIntegrations","deprecated":false,"deprecationMessage":"","type":"ProjectFormIntegrationsComponent","optional":false,"description":"","line":27,"decorators":[{"name":"ViewChild","stringifiedArguments":"ProjectFormIntegrationsComponent"}]},{"name":"projectFormMembers","deprecated":false,"deprecationMessage":"","type":"ProjectFormMembersComponent","optional":false,"description":"","line":24,"decorators":[{"name":"ViewChild","stringifiedArguments":"ProjectFormMembersComponent"}]},{"name":"projectFormStatuses","deprecated":false,"deprecationMessage":"","type":"ProjectFormStatusesComponent","optional":false,"description":"","line":25,"decorators":[{"name":"ViewChild","stringifiedArguments":"ProjectFormStatusesComponent"}]},{"name":"projectId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"stage","defaultValue":"ProjectFormStage.GENERAL","deprecated":false,"deprecationMessage":"","type":"ProjectFormStage","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"workspace$","deprecated":false,"deprecationMessage":"","type":"Observable<Workspace>","optional":false,"description":"","line":35,"modifierKind":[123]},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":37,"modifierKind":[123]}],"methodsClass":[{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":""},{"name":"setStage","args":[{"name":"stage","type":"ProjectFormStage","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"stage","type":"ProjectFormStage","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"submitUpdate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates a new project by saving the form data, saving dependent stages and then navigating to the project page.\\nOtherwise, displays an error message.\\n","description":"<p>Creates a new project by saving the form data, saving dependent stages and then navigating to the project page.\\nOtherwise, displays an error message.</p>\\n","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, ViewChild } from \'@angular/core\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { Workspace } from \'@dashboard/interfaces/workspace.interface\';\\nimport { UntilDestroy } from \'@ngneat/until-destroy\';\\nimport { Observable, of, switchMap } from \'rxjs\';\\nimport { ProjectService } from \'../../services/project/project.service\';\\nimport { WorkspaceService } from \'../../services/workspace/workspace.service\';\\nimport { Loader } from \'@main/classes/loader/loader.class\';\\nimport { setLoaderMessage, startLoader, stopLoader } from \'@main/operators/loader.operator\';\\nimport { ProjectFormGeneralComponent } from \'@dashboard/components/project-form-general/project-form-general.component\';\\nimport { ProjectFormMembersComponent } from \'@dashboard/components/project-form-members/project-form-members.component\';\\nimport { ProjectFormStatusesComponent } from \'@dashboard/components/project-form-statuses/project-form-statuses.component\';\\nimport { ProjectFormIntegrationsComponent } from \'@dashboard/components/project-form-integrations/project-form-integrations.component\';\\nimport { ProjectFormStage } from \'@dashboard/models/project-form-stage.enum\';\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'app-edit-project\',\\n  templateUrl: \'./edit-project.page.html\',\\n})\\nexport class EditProjectPage implements OnInit {\\n  @ViewChild(ProjectFormGeneralComponent) projectFormGeneral!: ProjectFormGeneralComponent;\\n  @ViewChild(ProjectFormMembersComponent) projectFormMembers!: ProjectFormMembersComponent;\\n  @ViewChild(ProjectFormStatusesComponent) projectFormStatuses!: ProjectFormStatusesComponent;\\n  @ViewChild(ProjectFormIntegrationsComponent)\\n  projectFormIntegrations!: ProjectFormIntegrationsComponent;\\n\\n  /** @ignore */\\n  ProjectFormStage = ProjectFormStage;\\n\\n  public stage: ProjectFormStage = ProjectFormStage.GENERAL;\\n\\n  public project$!: Observable<Project>;\\n  public workspace$!: Observable<Workspace>;\\n\\n  public workspaceId!: number;\\n  public projectId!: number;\\n\\n  public loader = new Loader();\\n\\n  constructor(\\n    private workspaceService: WorkspaceService,\\n    private projectService: ProjectService,\\n    private router: Router,\\n    private activatedRoute: ActivatedRoute,\\n  ) {\\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\\n\\n    this.workspaceId = Number(workspaceId);\\n    this.projectId = Number(projectId);\\n  }\\n\\n  ngOnInit() {\\n    this.workspace$ = this.workspaceService.get(this.workspaceId);\\n    this.project$ = this.projectService.get(this.projectId);\\n  }\\n\\n  /**\\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\\n   * Otherwise, displays an error message.\\n   */\\n  /**\\n   * Creates a new project by saving the form data, saving dependent stages and then navigating to the project page.\\n   * Otherwise, displays an error message.\\n   */\\n  public submitUpdate(): void {\\n    (\\n      of(null).pipe(\\n        startLoader(this.loader, $localize`Saving project...`),\\n        switchMap(() => this.projectFormGeneral.save()),\\n        setLoaderMessage(this.loader, $localize`Saving project members...`),\\n        switchMap(() => this.projectFormMembers.save()),\\n        setLoaderMessage(this.loader, $localize`Saving project statuses...`),\\n        switchMap(() => this.projectFormStatuses.save()),\\n        setLoaderMessage(this.loader, $localize`Saving integrations...`),\\n        switchMap(() => this.projectFormIntegrations.save()),\\n        stopLoader(this.loader),\\n      ) as Observable<Project>\\n    ).subscribe((project) => {\\n      this.router.navigate([\'/\', this.workspaceId, project.id]);\\n    });\\n  }\\n\\n  public setStage(stage: ProjectFormStage) {\\n    this.stage = stage;\\n  }\\n\\n  public close() {\\n    this.router.navigate([\'/\', this.workspaceId, this.projectId]);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<tabs>\\n  <div class=\\"prefix\\" i18n>\\n    Edit project\\n  </div>\\n  <tab (click)=\\"setStage(ProjectFormStage.GENERAL)\\" [class.active]=\\"stage === ProjectFormStage.GENERAL\\" i18n>\\n    General\\n  </tab>\\n  <tab (click)=\\"setStage(ProjectFormStage.MEMBERS)\\" [class.active]=\\"stage === ProjectFormStage.MEMBERS\\" i18n>\\n    Members\\n  </tab>\\n  <tab (click)=\\"setStage(ProjectFormStage.STATUSES)\\" [class.active]=\\"stage === ProjectFormStage.STATUSES\\" i18n>\\n    Statuses\\n  </tab>\\n  <tab (click)=\\"setStage(ProjectFormStage.INTEGRATIONS)\\" [class.active]=\\"stage === ProjectFormStage.INTEGRATIONS\\" i18n>\\n    Integrations\\n  </tab>\\n</tabs>\\n\\n<ng-container *ngIf=\\"workspace$ | async as workspace\\">\\n  <ng-container *ngIf=\\"project$ | async as project\\">\\n\\n    \x3c!-- General stage --\x3e\\n    <section [class.hidden]=\\"stage !== ProjectFormStage.GENERAL\\" class=\\"p-5\\">\\n      <project-form-general [workspace]=\\"workspace\\" [project]=\\"project\\"></project-form-general>\\n    </section>\\n\\n    \x3c!-- Members stage --\x3e\\n    <section [class.hidden]=\\"stage !== ProjectFormStage.MEMBERS\\" class=\\"p-5\\">\\n      <project-form-members [project]=\\"project\\"></project-form-members>\\n    </section>\\n\\n    \x3c!-- Statuses stage --\x3e\\n    <section [class.hidden]=\\"stage !== ProjectFormStage.STATUSES\\" class=\\"p-5\\">\\n      <project-form-statuses [project]=\\"project\\"></project-form-statuses>\\n    </section>\\n\\n    \x3c!-- Integrations stage --\x3e\\n    <section [class.hidden]=\\"stage !== ProjectFormStage.INTEGRATIONS\\" class=\\"p-5\\">\\n      <project-form-integrations [project]=\\"project\\"></project-form-integrations>\\n    </section>\\n\\n  </ng-container>\\n</ng-container>\\n\\n<div class=\\"flex justify-end pr-5\\">\\n  <app-button type=\\"button\\" variant=\\"secondary\\" (click)=\\"close()\\" class=\\"mr-5\\" i18n>Cancel</app-button>\\n  <app-button type=\\"button\\" variant=\\"primary\\" (click)=\\"submitUpdate()\\" i18n>Save changes</app-button>\\n</div>\\n"},{"name":"EditWorkspacePage","id":"component-EditWorkspacePage-b77b4c782aaa602c049e53f40ba57a65f3b6e282de04c5fdd349cd34f9a5c83170b960e7752b4db3f76e34302e4e3256bc64571bcf91cdca3beb9355e16e885d","file":"src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-edit-workspace-page","styleUrls":["./edit-workspace.page.scss"],"styles":[],"templateUrl":["./edit-workspace.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"form","defaultValue":"new FormGroup({\\n    name: new FormControl(\'\', [requiredValidator(), maxLengthValidator(50)], []),\\n    id: new FormControl(-1),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Form group for the workspace editing.</p>\\n","line":22,"rawdescription":"\\n\\nForm group for the workspace editing.\\n","modifierKind":[123]},{"name":"getSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":true,"description":"<p>Subscription to the workspace getting.</p>\\n","line":36,"rawdescription":"\\n\\nSubscription to the workspace getting.\\n","modifierKind":[121]},{"name":"updateSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":true,"description":"<p>Subscription to the workspace updating.</p>\\n","line":32,"rawdescription":"\\n\\nSubscription to the workspace updating.\\n","modifierKind":[123]},{"name":"workspace$","deprecated":false,"deprecationMessage":"","type":"Observable<Workspace>","optional":false,"description":"","line":27,"modifierKind":[123]}],"methodsClass":[{"name":"loadWorkspace","args":[{"name":"id","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLoads workspace data from the workspace service.\\n","description":"<p>Loads workspace data from the workspace service.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1750,"end":1752,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1744,"end":1749,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Workspace id</p>\\n"}]},{"name":"submitUpdate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\\nOtherwise, displays an error message.\\n","description":"<p>Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\\nOtherwise, displays an error message.</p>\\n","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"<p>Edit workspace page component.</p>\\n","rawdescription":"\\n\\nEdit workspace page component.\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { Workspace } from \'@dashboard/interfaces/workspace.interface\';\\nimport { maxLengthValidator } from \'@main/validators/max-length.validator\';\\nimport { Observable, Subscription } from \'rxjs\';\\nimport { requiredValidator } from \'src/app/_main/validators/required.validator\';\\nimport { WorkspaceService } from \'../../services/workspace/workspace.service\';\\n\\n/**\\n * Edit workspace page component.\\n */\\n@Component({\\n  selector: \'app-edit-workspace-page\',\\n  templateUrl: \'./edit-workspace.page.html\',\\n  styleUrls: [\'./edit-workspace.page.scss\'],\\n})\\nexport class EditWorkspacePage {\\n  /**\\n   * Form group for the workspace editing.\\n   */\\n  public form = new FormGroup({\\n    name: new FormControl(\'\', [requiredValidator(), maxLengthValidator(50)], []),\\n    id: new FormControl(-1),\\n  });\\n\\n  public workspace$!: Observable<Workspace>;\\n\\n  /**\\n   * Subscription to the workspace updating.\\n   */\\n  public updateSubscription?: Subscription;\\n  /**\\n   * Subscription to the workspace getting.\\n   */\\n  private getSubscription?: Subscription;\\n\\n  /**\\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\\n   * @param workspaceService Workspace service\\n   * @param router Router service\\n   * @param activatedRoute ActivatedRoute service\\n   */\\n  constructor(\\n    private workspaceService: WorkspaceService,\\n    private router: Router,\\n    private activatedRoute: ActivatedRoute,\\n  ) {\\n    const { workspaceId } = this.activatedRoute.snapshot.params;\\n\\n    this.loadWorkspace(workspaceId);\\n  }\\n\\n  /**\\n   * Loads workspace data from the workspace service.\\n   * @param id Workspace id\\n   */\\n  public loadWorkspace(id: number) {\\n    this.workspace$ = this.workspaceService.get(id);\\n    this.getSubscription = this.workspace$.subscribe((workspace) => {\\n      this.form.patchValue(workspace);\\n    });\\n  }\\n\\n  /**\\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\\n   * Otherwise, displays an error message.\\n   */\\n  public submitUpdate() {\\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\\n    this.form.markAllAsTouched();\\n    this.form.updateValueAndValidity();\\n    if (this.form.invalid) return;\\n\\n    this.updateSubscription = this.workspaceService.update(this.form.value).subscribe(() => {\\n      this.router.navigate([\'/\']).then(() => {\\n        window.location.reload();\\n      });\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"form {\\n  padding: 4rem;\\n}\\n\\n.buttons {\\n  display: flex;\\n  margin-top: 1rem;\\n\\n  &>* {\\n    display: block;\\n    margin-right: 1rem;\\n  }\\n}\\n","styleUrl":"./edit-workspace.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"<p>Default constructor. Injects the Workspace, Router service and ActivatedRoute service.</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""}],"line":36,"rawdescription":"\\n\\nDefault constructor. Injects the Workspace, Router service and ActivatedRoute service.\\n","jsdoctags":[{"name":{"pos":1304,"end":1320,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"workspaceService"},"type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"pos":1298,"end":1303,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Workspace service</p>\\n"},{"name":{"pos":1351,"end":1357,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"router"},"type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"pos":1345,"end":1350,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Router service</p>\\n"},{"name":{"pos":1385,"end":1399,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"activatedRoute"},"type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"pos":1379,"end":1384,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>ActivatedRoute service</p>\\n"}]},"templateData":"<form [formGroup]=\\"form\\" (submit)=\\"submitUpdate()\\">\\n  <h2 class=\\"text-xl font-bold mb-5\\" i18n>Edit workspace: {{ (workspace$ | async)?.name }}</h2>\\n  <app-input formControlName=\\"name\\" type=\\"text\\" placeholder=\\"New workspace\\" floatingLabel=\\"Workspace name\\"\\n    i18n-floatingLabel i18n-placeholder></app-input>\\n\\n  <div class=\\"buttons\\">\\n    <app-button variant=\\"primary\\" [pending]=\\"updateSubscription && !updateSubscription.closed\\" i18n>Save</app-button>\\n    <app-button variant=\\"secondary\\" type=\\"button\\" routerLink=\\"/\\" i18n>Cancel</app-button>\\n  </div>\\n</form>\\n"},{"name":"EmptyOptionsComponent","id":"component-EmptyOptionsComponent-fa8044c6bed2cb8f444dcda3189eebe66b37bd64867b49891d50be97241869a0c4550de3247b06de1a2f1c35798de1df4e9cd6405c04d65d1c646c0f4d65bfa1","file":"src/app/_main/components/select/empty-options/empty-options.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-empty-options","styleUrls":["./empty-options.component.scss"],"styles":[],"templateUrl":["./empty-options.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"display","defaultValue":"\'inline\'","deprecated":false,"deprecationMessage":"","type":"\\"inline\\" | \\"none\\"","optional":false,"description":"","line":9,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'style.display\'"}]}],"methodsClass":[{"name":"hide","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"show","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"style.display","defaultValue":"\'inline\'","deprecated":false,"deprecationMessage":"","line":9,"type":"\\"inline\\" | \\"none\\"","decorators":[]}],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, HostBinding } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-empty-options\',\\n  templateUrl: \'./empty-options.component.html\',\\n  styleUrls: [\'./empty-options.component.scss\'],\\n})\\nexport class EmptyOptionsComponent {\\n  @HostBinding(\'style.display\') display: \'inline\' | \'none\' = \'inline\';\\n\\n  public hide() {\\n    this.display = \'none\';\\n  }\\n\\n  public show() {\\n    this.display = \'inline\';\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".empty-options {\\n  padding: 0 1rem;\\n  color: var(--color-text);\\n  font-size: 0.9rem;\\n  opacity: 0.5;\\n}\\n","styleUrl":"./empty-options.component.scss"}],"stylesData":"","templateData":"<div class=\\"empty-options\\">\\n  <ng-content></ng-content>\\n</div>\\n"},{"name":"FiltersComponent","id":"component-FiltersComponent-b6f930978c373e42357e6a67f3bd39fb8f977e7ce2ebaa99cd09b9e6cda6dc29d67a4ebecbfa165022e434f2268b28a9c640d33c0392f86e5acd24d055beeaf4","file":"src/app/_main/components/filters/filters.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-filters","styleUrls":["./filters.component.scss"],"styles":[],"templateUrl":["./filters.component.html"],"viewProviders":[],"inputsClass":[{"name":"filters","deprecated":false,"deprecationMessage":"","line":13,"type":"Filter[]","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"_filters","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Filter[]","optional":false,"description":"","line":26,"modifierKind":[121]},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormArray<any>","optional":true,"description":"","line":27,"modifierKind":[123]},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"","line":29,"modifierKind":[123,158],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"getControl","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormControl<any>","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"saveFilters","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectorRef, Component, Input } from \'@angular/core\';\\nimport { NgControl } from \'@angular/forms\';\\nimport { FormArray, FormControl } from \'@ngneat/reactive-forms\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { Filter } from \'@main/interfaces/filters.interface\';\\n\\n@Component({\\n  selector: \'app-filters\',\\n  templateUrl: \'./filters.component.html\',\\n  styleUrls: [\'./filters.component.scss\'],\\n})\\nexport class FiltersComponent extends ControlAccessor {\\n  @Input() set filters(filters: Filter[]) {\\n    this.form = new FormArray(\\n      filters.map((filter) => {\\n        return new FormControl(filter.value);\\n      }),\\n    );\\n    this._filters = filters;\\n  }\\n\\n  public get filters() {\\n    return this._filters;\\n  }\\n\\n  private _filters: Filter[] = [];\\n  public form?: FormArray<any>;\\n\\n  constructor(public override ngControl: NgControl, cdRef: ChangeDetectorRef) {\\n    super(ngControl, cdRef);\\n  }\\n\\n  public getControl(index: number) {\\n    const control = (this.form?.controls[index] || new FormControl()) as FormControl<any>;\\n    return control;\\n  }\\n\\n  public saveFilters() {\\n    if (!this.form) return;\\n\\n    let formValue: Filter[] = [];\\n\\n    for (const [index, filter] of this.filters.entries()) {\\n      const filterValue = Number(this.form?.controls[index].value) as 0 | 1;\\n      filter.value = filterValue;\\n      formValue.push(filter);\\n    }\\n\\n    this.control.setValue(formValue);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".filters {\\n  width: 100%;\\n\\n  app-button {\\n    width: 100%;\\n\\n    ::ng-deep button {\\n      width: 100%;\\n    }\\n  }\\n}\\n","styleUrl":"./filters.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":27,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"ControlAccessor","accessors":{"filters":{"name":"filters","setSignature":{"name":"filters","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"filters","type":"Filter[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":13,"jsdoctags":[{"name":"filters","type":"Filter[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"filters","type":"","returnType":"","line":22}}},"templateData":"<div class=\\"filters\\">\\n  <ng-container *ngFor=\\"let filter of filters; index as i\\">\\n    <ng-container [ngSwitch]=\\"filter.type\\">\\n      <div class=\\"filter\\" *ngSwitchCase=\\"\'checkbox\'\\">\\n        <app-checkbox [formControl]=\\"getControl(i)\\">{{ filter.label }}</app-checkbox>\\n      </div>\\n      <p *ngSwitchDefault>Unknown filter type: {{ filter.type }}</p>\\n    </ng-container>\\n  </ng-container>\\n\\n  \x3c!-- TODO: Add reset filters button --\x3e\\n  \x3c!-- TODO: Make filters auto reload and remove \\"Save filters\\" button --\x3e\\n  <app-button variant=\\"primary\\" (click)=\\"saveFilters()\\" i18n>Save filters</app-button>\\n</div>\\n"},{"name":"ForgotPasswordPage","id":"component-ForgotPasswordPage-c047add194e53a0453a4e27e294af3596fb3d2ff26f3bf6ee1dac43826ab12bb6d843784df3f40892a99e3260417def40460752b03f852790bc7ec499a9ba92a","file":"src/app/auth/pages/forgot-password/forgot-password.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-forgot-page","styleUrls":["./forgot-password.page.scss"],"styles":[],"templateUrl":["./forgot-password.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"faAngleDown","defaultValue":"faAngleDown","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"form","defaultValue":"new FormGroup({\\n    email: new FormControl(\'\', [requiredValidator()], []),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Form group for reset password.</p>\\n","line":24,"rawdescription":"\\n\\nForm group for reset password.\\n","modifierKind":[123]},{"name":"resetSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":true,"description":"","line":19,"modifierKind":[121]}],"methodsClass":[{"name":"resetPassword","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { Router } from \'@angular/router\';\\nimport { faAngleDown } from \'@fortawesome/free-solid-svg-icons\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\nimport { Subscription } from \'rxjs\';\\nimport { AuthService } from \'@auth/services/auth/auth.service\';\\n\\n@Component({\\n  selector: \'app-forgot-page\',\\n  templateUrl: \'./forgot-password.page.html\',\\n  styleUrls: [\'./forgot-password.page.scss\'],\\n})\\nexport class ForgotPasswordPage {\\n  constructor(private authService: AuthService, private router: Router) {}\\n\\n  faAngleDown = faAngleDown;\\n\\n  private resetSubscription?: Subscription;\\n\\n  /**\\n   * Form group for reset password.\\n   */\\n  public form = new FormGroup({\\n    email: new FormControl(\'\', [requiredValidator()], []),\\n  });\\n\\n  resetPassword() {\\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\\n\\n    this.form.markAllAsTouched();\\n    this.form.updateValueAndValidity();\\n\\n    if (this.form.valid) {\\n      this.resetSubscription = this.authService.resetPassword(this.form.value).subscribe();\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".logo {\\n  width: calc(100% - 80px);\\n  height: 64px;\\n  margin-top: 20px;\\n  background-image: url(\'/assets/metadata/logo_with_name.svg\');\\n  background-position: 0 50%;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n  cursor: pointer;\\n}\\n\\n.main {\\n  display: flex;\\n  width: 100%;\\n  min-height: 100vh;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: var(--color-neutral-800);\\n\\n  .box {\\n    display: flex;\\n    width: 100%;\\n    height: 100%;\\n\\n    .return-button {\\n      position: relative;\\n      display: flex;\\n      align-items: center;\\n      align-self: flex-start;\\n      margin: 0 0 0 40px;\\n\\n      &:hover {\\n        a {\\n          color: var(--color-link-hover);\\n        }\\n\\n        app-icon {\\n          color: var(--color-link-hover);\\n        }\\n      }\\n\\n      app-icon {\\n        display: inline-block;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        margin-right: 5px;\\n        color: var(--color-link);\\n        transform: rotate(90deg);\\n      }\\n\\n      a {\\n        color: var(--color-link);\\n        cursor: pointer;\\n        transition: color 0.2s ease;\\n      }\\n    }\\n\\n    .form-side {\\n      display: flex;\\n      width: 100%;\\n      height: 100%;\\n      flex-direction: column;\\n      align-items: center;\\n      justify-content: space-between;\\n      background-color: var(--color-gray-800);\\n\\n      form {\\n        display: flex;\\n        width: 100%;\\n        height: 100%;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        justify-content: center;\\n        padding: 4rem;\\n\\n        h2 {\\n          margin-bottom: 0.5rem;\\n        }\\n\\n        &>*:not(:last-child) {\\n          margin-bottom: 1.5rem;\\n        }\\n\\n        app-input {\\n          width: 100%;\\n        }\\n\\n        app-button {\\n          align-self: flex-end;\\n        }\\n      }\\n    }\\n\\n    .image-side {\\n      background-color: var(--color-gray-700);\\n    }\\n  }\\n}\\n\\n@screen sm {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen md {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen lg {\\n  .main {\\n    .box {\\n      width: 950px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 450px;\\n      }\\n    }\\n  }\\n}\\n\\n@screen xl {\\n  .main {\\n    .box {\\n      width: 1240px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 520px;\\n      }\\n\\n      .image-side {\\n        width: 720px;\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./forgot-password.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<section class=\\"main\\">\\n  <section class=\\"box\\">\\n    <section class=\\"form-side\\">\\n      <div class=\\"logo\\" routerLink=\\"/\\"></div>\\n      <div class=\\"return-button\\" routerLink=\\"/auth/login\\">\\n        <app-icon [icon]=\\"faAngleDown\\" size=\\"16px\\"></app-icon>\\n        <a>Back to login page</a>\\n      </div>\\n      <form [formGroup]=\\"form\\" (submit)=\\"resetPassword()\\">\\n        <div>\\n          <h2 class=\\"text-xl font-bold\\" i18n>Reset password</h2>\\n          <p class=\\"text-base\\" i18n>When you enter your email address, you will receive an email with a link to reset\\n            your password.</p>\\n        </div>\\n\\n        <app-input formControlName=\\"email\\" type=\\"email\\" placeholder=\\"name@example.com\\" floatingLabel=\\"Email\\"\\n          i18n-floatingLabel i18n-placeholder></app-input>\\n\\n        <app-button variant=\\"primary\\" i18n>Reset password</app-button>\\n\\n      </form>\\n    </section>\\n    <section class=\\"image-side\\">\\n\\n    </section>\\n  </section>\\n</section>\\n"},{"name":"GithubIntegrationPage","id":"component-GithubIntegrationPage-7f6a314c24eff9367a69d68f3d7ac06d510407575736296ccee2ff0854b7c38c82604a2506a6d469065ca921f00a55e61baba6b42ca5a9f50e12d68078eb5d7c","file":"src/app/dashboard/pages/github-integration/github-integration.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-github-integration-page","styleUrls":["./github-integration.page.scss"],"styles":[],"templateUrl":["./github-integration.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { GitIntegrationService } from \'@dashboard/services/git-integration/git-integration.service\';\\n\\n@Component({\\n  selector: \'app-github-integration-page\',\\n  templateUrl: \'./github-integration.page.html\',\\n  styleUrls: [\'./github-integration.page.scss\'],\\n})\\nexport class GithubIntegrationPage implements OnInit {\\n  constructor(\\n    private activatedRoute: ActivatedRoute,\\n    private gitIntegrationService: GitIntegrationService,\\n  ) {}\\n\\n  ngOnInit() {\\n    const { installation_id, setup_action } = this.activatedRoute.snapshot.queryParams;\\n\\n    console.log(installation_id, setup_action, setup_action !== \'update\');\\n\\n    if (installation_id && setup_action && setup_action !== \'update\') {\\n      this.gitIntegrationService.postGitHubIntegration(installation_id).subscribe();\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\nh2 {\\n  color: var(--color-text);\\n  font-size: 1.5rem;\\n}\\n\\np {\\n  color: var(--color-text);\\n  opacity: 0.75;\\n}\\n","styleUrl":"./github-integration.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 i18n>\\n  GitHub connection success\\n</h2>\\n<p i18n>\\n  Now you can close this page\\n</p>\\n"},{"name":"IconComponent","id":"component-IconComponent-427dc7474bf9ea8a2d5278ebf56074f76c1f3ed309ab324a0852c8e52d23e710711797b63501516e37eb9ea26a37349e7d0307722c3d7b8c15e755bac3f3a0ef","file":"src/app/_main/components/icon/icon.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-icon","styleUrls":["./icon.component.scss"],"styles":[],"templateUrl":["./icon.component.html"],"viewProviders":[],"inputsClass":[{"name":"icon","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIcon to display. Can be a string or an icon definition.\\nFor example:\\n\\nFor the icon \\"fa fa-question\\" you can use:\\n```html\\n<app-icon [icon]=\\"faQuestion\\"></app-icon>\\n```\\n\\nFor the icon \\"mat search\\" you can use:\\n```html\\n<app-icon icon=\\"matSearch\\"></app-icon>\\n```\\n","description":"<p>Icon to display. Can be a string or an icon definition.\\nFor example:</p>\\n<p>For the icon &quot;fa fa-question&quot; you can use:</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">&lt;app-icon [icon]=&quot;faQuestion&quot;&gt;&lt;/app-icon&gt;</code></pre></div><p>For the icon &quot;mat search&quot; you can use:</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">&lt;app-icon icon=&quot;matSearch&quot;&gt;&lt;/app-icon&gt;</code></pre></div>","line":35,"type":"string | IconDefinition","decorators":[]},{"name":"size","defaultValue":"\'24px\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIcon size. Defaults to 1.5em. Supports all CSS units.\\nFor example: 24px, 1.5em, etc.\\n","description":"<p>Icon size. Defaults to 1.5em. Supports all CSS units.\\nFor example: 24px, 1.5em, etc.</p>\\n","line":19,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_icon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string | IconDefinition","optional":false,"description":"<p>Private icon variable to use getter and setter for props.</p>\\n","line":95,"rawdescription":"\\n\\nPrivate icon variable to use getter and setter for props.\\n","modifierKind":[121]},{"name":"name","defaultValue":"\'question\'","deprecated":false,"deprecationMessage":"","type":"IconName","optional":false,"description":"<p>Name getter</p>\\n","line":105,"rawdescription":"\\n\\nName getter\\n","modifierKind":[123]},{"name":"prefix","defaultValue":"\'fas\'","deprecated":false,"deprecationMessage":"","type":"IconPrefix","optional":false,"description":"<p>Prefix getter</p>\\n","line":100,"rawdescription":"\\n\\nPrefix getter\\n","modifierKind":[123]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"style.height","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nBinding to the hosts height attribute to use the size input.\\n","description":"<p>Binding to the hosts height attribute to use the size input.</p>\\n","line":66,"type":"string","decorators":[]},{"name":"style.width","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nBinding to hosts width attribute to use the size input.\\n","description":"<p>Binding to hosts width attribute to use the size input.</p>\\n","line":59,"type":"string","decorators":[]}],"hostListeners":[],"description":"<p>Icon component. Supports material icons and font-awesome icons.</p>\\n","rawdescription":"\\n\\nIcon component. Supports material icons and font-awesome icons.\\n","type":"component","sourceCode":"import { Component, HostBinding, Input } from \'@angular/core\';\\nimport { IconName, IconPrefix } from \'@fortawesome/fontawesome-svg-core\';\\nimport { faQuestion, IconDefinition } from \'@fortawesome/free-solid-svg-icons\';\\nimport { Utils } from \'@main/classes/util/utils.class\';\\n\\n/**\\n * Icon component. Supports material icons and font-awesome icons.\\n */\\n@Component({\\n  selector: \'app-icon\',\\n  templateUrl: \'./icon.component.html\',\\n  styleUrls: [\'./icon.component.scss\'],\\n})\\nexport class IconComponent {\\n  /**\\n   * Icon size. Defaults to 1.5em. Supports all CSS units.\\n   * For example: 24px, 1.5em, etc.\\n   */\\n  @Input() size: string = \'24px\';\\n\\n  /**\\n   * Icon to display. Can be a string or an icon definition.\\n   * For example:\\n   *\\n   * For the icon \\"fa fa-question\\" you can use:\\n   * ```html\\n   * <app-icon [icon]=\\"faQuestion\\"></app-icon>\\n   * ```\\n   *\\n   * For the icon \\"mat search\\" you can use:\\n   * ```html\\n   * <app-icon icon=\\"matSearch\\"></app-icon>\\n   * ```\\n   */\\n  @Input() set icon(value: string | IconDefinition) {\\n    this._icon = value;\\n\\n    if (typeof value === \'string\') {\\n      const splitIndex = Utils.regexIndexOf(value, /[A-Z]/);\\n\\n      this.prefix = value.substring(0, splitIndex) as IconPrefix;\\n      this.name = value.substring(splitIndex) as IconName;\\n    } else {\\n      this.prefix = value.prefix as IconPrefix;\\n      this.name = value.iconName as IconName;\\n    }\\n  }\\n\\n  /**\\n   * Icon getter\\n   */\\n  public get icon(): string | IconDefinition {\\n    return this._icon;\\n  }\\n\\n  /**\\n   * Binding to hosts width attribute to use the size input.\\n   */\\n  @HostBinding(\'style.width\') get width() {\\n    return this.size;\\n  }\\n\\n  /**\\n   * Binding to the hosts height attribute to use the size input.\\n   */\\n  @HostBinding(\'style.height\') get height() {\\n    return this.size;\\n  }\\n\\n  /**\\n   * Getter to the icon definition. If no icon is found it returns the question icon.\\n   */\\n  public get iconDefinition(): IconDefinition {\\n    if (typeof this._icon === \'string\') {\\n      return faQuestion;\\n    }\\n    return this._icon as IconDefinition;\\n  }\\n\\n  /**\\n   * Style host binding to set the icon size.\\n   */\\n  public get style() {\\n    return {\\n      \'font-size\': this.size,\\n      width: this.size,\\n      height: this.size,\\n      \'line-height\': this.size,\\n    };\\n  }\\n\\n  /**\\n   * Private icon variable to use getter and setter for props.\\n   */\\n  private _icon: string | IconDefinition = \'\';\\n\\n  /**\\n   * Prefix getter\\n   */\\n  public prefix: IconPrefix = \'fas\';\\n\\n  /**\\n   * Name getter\\n   */\\n  public name: IconName = \'question\';\\n\\n  /**\\n   * Getter to get the icon name in snake case.\\n   * For example:\\n   *\\n   * for `ShoppingCart` this function will return `shopping_cart`\\n   */\\n  public get snakeCaseName(): IconName {\\n    return Utils.snakeCase(this.name) as IconName;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  width: 24px;\\n  height: 24px;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 0;\\n\\n  fa-icon {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    font-size: 24px;\\n  }\\n}\\n","styleUrl":"./icon.component.scss"}],"stylesData":"","accessors":{"icon":{"name":"icon","setSignature":{"name":"icon","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string | IconDefinition","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":35,"rawdescription":"\\n\\nIcon to display. Can be a string or an icon definition.\\nFor example:\\n\\nFor the icon \\"fa fa-question\\" you can use:\\n```html\\n<app-icon [icon]=\\"faQuestion\\"></app-icon>\\n```\\n\\nFor the icon \\"mat search\\" you can use:\\n```html\\n<app-icon icon=\\"matSearch\\"></app-icon>\\n```\\n","description":"<p>Icon to display. Can be a string or an icon definition.\\nFor example:</p>\\n<p>For the icon &quot;fa fa-question&quot; you can use:</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">&lt;app-icon [icon]=&quot;faQuestion&quot;&gt;&lt;/app-icon&gt;</code></pre></div><p>For the icon &quot;mat search&quot; you can use:</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">&lt;app-icon icon=&quot;matSearch&quot;&gt;&lt;/app-icon&gt;</code></pre></div>","jsdoctags":[{"name":"value","type":"string | IconDefinition","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"icon","type":"","returnType":"string | IconDefinition","line":52,"rawdescription":"\\n\\nIcon getter\\n","description":"<p>Icon getter</p>\\n"}},"width":{"name":"width","getSignature":{"name":"width","type":"","returnType":"","line":59,"rawdescription":"\\n\\nBinding to hosts width attribute to use the size input.\\n","description":"<p>Binding to hosts width attribute to use the size input.</p>\\n"}},"height":{"name":"height","getSignature":{"name":"height","type":"","returnType":"","line":66,"rawdescription":"\\n\\nBinding to the hosts height attribute to use the size input.\\n","description":"<p>Binding to the hosts height attribute to use the size input.</p>\\n"}},"iconDefinition":{"name":"iconDefinition","getSignature":{"name":"iconDefinition","type":"","returnType":"IconDefinition","line":73,"rawdescription":"\\n\\nGetter to the icon definition. If no icon is found it returns the question icon.\\n","description":"<p>Getter to the icon definition. If no icon is found it returns the question icon.</p>\\n"}},"style":{"name":"style","getSignature":{"name":"style","type":"","returnType":"","line":83,"rawdescription":"\\n\\nStyle host binding to set the icon size.\\n","description":"<p>Style host binding to set the icon size.</p>\\n"}},"snakeCaseName":{"name":"snakeCaseName","getSignature":{"name":"snakeCaseName","type":"","returnType":"IconName","line":113,"rawdescription":"\\n\\nGetter to get the icon name in snake case.\\nFor example:\\n\\nfor `ShoppingCart` this function will return `shopping_cart`\\n","description":"<p>Getter to get the icon name in snake case.\\nFor example:</p>\\n<p>for <code>ShoppingCart</code> this function will return <code>shopping_cart</code></p>\\n"}}},"templateData":"<ng-container [ngSwitch]=\\"prefix\\">\\n  <ng-container *ngSwitchCase=\\"\'fas\'\\">\\n    <fa-icon [icon]=\\"iconDefinition\\" [ngStyle]=\\"style\\"></fa-icon>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\"\'far\'\\">\\n    <fa-icon [icon]=\\"iconDefinition\\" [ngStyle]=\\"style\\"></fa-icon>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\"\'fab\'\\">\\n    <fa-icon [icon]=\\"iconDefinition\\" [ngStyle]=\\"style\\"></fa-icon>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\"\'mat\'\\">\\n    <mat-icon [ngStyle]=\\"style\\">{{ snakeCaseName }}</mat-icon>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\"\'cu\'\\">\\n    <img [ngStyle]=\\"style\\" [src]=\\"\'assets/icons/\' + snakeCaseName + \'.svg\'\\" />\\n  </ng-container>\\n  <ng-container *ngSwitchDefault>\\n    <mat-icon [ngStyle]=\\"style\\">question_mark</mat-icon>\\n  </ng-container>\\n</ng-container>\\n"},{"name":"InputAssigneeComponent","id":"component-InputAssigneeComponent-78302e2d5e404b30df1cd7479aef8feac56df236e4fdbc9f0e1223f5fade1840e246b49cac675310a72a307b0e6698806ca3b4ad9e0dd55117aa56c5189afab9","file":"src/app/tasks/components/input-assignee/input-assignee.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"{ provide: NgControl, useClass: TestNgControl }"}],"selector":"app-input-assignee","styleUrls":["./input-assignee.component.scss"],"styles":[],"templateUrl":["./input-assignee.component.html"],"viewProviders":[],"inputsClass":[{"name":"assignee","deprecated":false,"deprecationMessage":"","line":20,"type":"ProjectMember | null","decorators":[]},{"name":"members","deprecated":false,"deprecationMessage":"","line":33,"type":"Map | []","decorators":[]},{"name":"projectId","deprecated":false,"deprecationMessage":"","line":48,"type":"number","decorators":[]},{"name":"taskId","deprecated":false,"deprecationMessage":"","line":47,"type":"number","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"_assignee","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"ProjectMember | null","optional":false,"description":"","line":52,"modifierKind":[121]},{"name":"assigneeColor","deprecated":false,"deprecationMessage":"","type":"Color","optional":true,"description":"","line":56,"modifierKind":[123]},{"name":"isOpen$","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":55,"modifierKind":[123,144]},{"name":"members$","defaultValue":"new BehaviorSubject<(ProjectMember & { color: Color })[]>([] as any)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"","line":67,"modifierKind":[123,158],"inheritance":{"file":"ControlAccessor"}},{"name":"overlay","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLElement>","optional":false,"description":"","line":50,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'overlay\'"}]},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"open","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"select","args":[{"name":"member","type":"ProjectMember | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"member","type":"ProjectMember | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectorRef, Component, ElementRef, Input, ViewChild } from \'@angular/core\';\\nimport { NgControl } from \'@angular/forms\';\\nimport { UserUtils } from \'@dashboard/classes/user.class\';\\nimport { ProjectMember } from \'@dashboard/interfaces/project-member.interface\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\nimport { TestNgControl } from \'@tests/helpers/ng-control-testing-provider.helper\';\\nimport * as Color from \'color\';\\nimport { BehaviorSubject, filter, fromEvent, take } from \'rxjs\';\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'app-input-assignee\',\\n  templateUrl: \'./input-assignee.component.html\',\\n  styleUrls: [\'./input-assignee.component.scss\'],\\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\\n})\\nexport class InputAssigneeComponent extends ControlAccessor {\\n  @Input() set assignee(assignee: ProjectMember | null) {\\n    this._assignee = assignee;\\n\\n    if (assignee) {\\n      this.assigneeColor = UserUtils.getColorById(assignee?.user.id);\\n    } else {\\n      this.assigneeColor = undefined;\\n    }\\n  }\\n  public get assignee(): ProjectMember | null {\\n    return this._assignee;\\n  }\\n\\n  @Input() set members(members: Map<number, ProjectMember> | ProjectMember[]) {\\n    if (Array.isArray(members)) {\\n      for (const member of members) {\\n        (member as any).color = UserUtils.getColorById(member.user.id);\\n      }\\n      this.members$.next(members as any);\\n    } else if (members) {\\n      const membersArray = [...members.values()];\\n      for (const member of membersArray) {\\n        (member as any).color = UserUtils.getColorById(member.user.id);\\n      }\\n      this.members$.next(membersArray as any);\\n    }\\n  }\\n  @Input() taskId?: number;\\n  @Input() projectId?: number;\\n\\n  @ViewChild(\'overlay\') overlay!: ElementRef<HTMLElement>;\\n\\n  private _assignee: ProjectMember | null = null;\\n\\n  public members$ = new BehaviorSubject<(ProjectMember & { color: Color })[]>([] as any);\\n  public readonly isOpen$ = new BehaviorSubject<boolean>(false);\\n  public assigneeColor?: Color;\\n\\n  public set isOpen(val: boolean) {\\n    this.isOpen$.next(val);\\n  }\\n\\n  public get isOpen() {\\n    return this.isOpen$.value;\\n  }\\n\\n  constructor(\\n    public override ngControl: NgControl,\\n    private taskService: TaskService,\\n    cdRef: ChangeDetectorRef,\\n  ) {\\n    super(ngControl, cdRef);\\n  }\\n\\n  public open() {\\n    setTimeout(() => {\\n      fromEvent(document, \'click\')\\n        .pipe(\\n          take(1),\\n          untilDestroyed(this),\\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\\n        )\\n        .subscribe(() => this.close());\\n      this.isOpen$.next(true);\\n    });\\n  }\\n\\n  public close() {\\n    this.isOpen$.next(false);\\n  }\\n\\n  public toggle() {\\n    if (this.isOpen) {\\n      return this.close();\\n    }\\n    return this.open();\\n  }\\n\\n  public select(member: ProjectMember | null) {\\n    if (this.taskId && this.projectId)\\n      this.taskService\\n        .assign(member?.user.id || null, this.taskId, this.projectId)\\n        .subscribe(() => {\\n          this.close();\\n          location.reload();\\n        });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../styles/typography\';\\n\\n.assignee {\\n  display: flex;\\n  width: 40px;\\n  height: 40px;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: var(--color-secondary-400);\\n  border-radius: 50%;\\n  color: var(--color-text);\\n  cursor: pointer;\\n  transition: background-color 0.4s ease;\\n\\n  &:not(.add) {\\n    @include text-title;\\n\\n    background-color: var(--color-primary-500);\\n  }\\n\\n  &:not(.add):hover {\\n    background-color: var(--color-secondary-300);\\n  }\\n}\\n\\n.members-overlay {\\n  padding: 1rem;\\n  padding: 0.5rem 0;\\n  background-color: var(--color-secondary-600);\\n  border-radius: var(--border-radius);\\n  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.1);\\n\\n  li {\\n    display: flex;\\n    align-items: center;\\n    padding: 0.5rem 2rem;\\n    color: var(--color-text);\\n\\n    &:not(.line) {\\n      cursor: pointer;\\n      transition: background-color 0.4s ease;\\n\\n      &:hover {\\n        background-color: var(--color-secondary-500);\\n      }\\n    }\\n\\n    &.line {\\n      position: relative;\\n\\n      &::before {\\n        position: absolute;\\n        top: calc(50% - 1px);\\n        left: 10%;\\n        width: 80%;\\n        height: 1px;\\n        background-color: var(--color-secondary-500);\\n        content: \'\';\\n      }\\n    }\\n\\n    &.entry-remove {\\n      span {\\n        opacity: 0.75;\\n      }\\n    }\\n\\n    .avatar {\\n      @include text-title;\\n\\n      display: flex;\\n      width: 36px;\\n      height: 36px;\\n      align-items: center;\\n      justify-content: center;\\n      margin-right: 1rem;\\n      border-radius: 50%;\\n      color: var(--color-text);\\n    }\\n\\n    .avatar-remove {\\n      display: flex;\\n      width: 36px;\\n      height: 36px;\\n      align-items: center;\\n      justify-content: center;\\n      margin-right: 1rem;\\n      background-color: var(--color-secondary-400);\\n      border-radius: 50%;\\n      color: var(--color-text);\\n      opacity: 0.5;\\n    }\\n\\n    .details {\\n      display: flex;\\n      flex-direction: column;\\n\\n      .username {\\n        margin-top: -3px;\\n        opacity: 0.5;\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./input-assignee.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":64,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"ControlAccessor","accessors":{"assignee":{"name":"assignee","setSignature":{"name":"assignee","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"assignee","type":"ProjectMember | null","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":20,"jsdoctags":[{"name":"assignee","type":"ProjectMember | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"assignee","type":"","returnType":"ProjectMember | null","line":29}},"members":{"name":"members","setSignature":{"name":"members","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"members","type":"Map<number | ProjectMember> | ProjectMember[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":33,"jsdoctags":[{"name":"members","type":"Map<number | ProjectMember> | ProjectMember[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"isOpen":{"name":"isOpen","setSignature":{"name":"isOpen","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":58,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"isOpen","type":"","returnType":"","line":62}}},"templateData":"\x3c!-- This button triggers the overlay and is it\'s origin --\x3e\\n<button (click)=\\"toggle()\\" type=\\"button\\" class=\\"assignee\\" [class.add]=\\"!assignee\\" cdkOverlayOrigin\\n  #trigger=\\"cdkOverlayOrigin\\" [style.background-color]=\\"assigneeColor?.rgb()?.string()\\"\\n  matTooltip=\\"{{ assignee?.user?.name }} {{ assignee?.user?.surname }}\\">\\n  {{ assignee ? assignee.user.name[0] : \'+\' }}\\n</button>\\n\\n<ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\\"trigger\\"\\n  [cdkConnectedOverlayOpen]=\\"(isOpen$ | async) || false\\"\\n  [cdkConnectedOverlayBackdropClass]=\\"\'cdk-overlay-transparent-backdrop\'\\" [cdkConnectedOverlayHasBackdrop]=\\"true\\">\\n  <ul #overlay class=\\"members-overlay\\">\\n    <li *ngFor=\\"let member of members$ | async\\" (click)=\\"select(member)\\">\\n      <div class=\\"avatar\\" [style.background-color]=\\"member.color?.rgb()?.string()\\">{{ member.user.name[0] }}</div>\\n      <div class=\\"details\\">\\n        <span class=\\"full-name\\">{{ member.user.name }} {{ member.user.surname }}</span>\\n        <span class=\\"username\\">@{{ member.user.username }}</span>\\n      </div>\\n    </li>\\n    <li class=\\"line\\"></li>\\n    <li class=\\"entry-remove\\" (click)=\\"select(null)\\">\\n      <div class=\\"avatar-remove\\">-</div>\\n      <span i18n>Remove assignee</span>\\n    </li>\\n  </ul>\\n</ng-template>\\n"},{"name":"InputColorComponent","id":"component-InputColorComponent-73861b7bb1fb86375619a6990dd93bb01fd70c4a7ee2318240821c45aa357b27ddc6667cdddda268914efeb0039e8846e10348ed79e7a4f517ea33c72f33c5df","file":"src/app/_main/components/input-color/input-color.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"input-color","styleUrls":["./input-color.component.scss"],"styles":[],"templateUrl":["./input-color.component.html"],"viewProviders":[],"inputsClass":[{"name":"floatingLabel","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]},{"name":"staticLabel","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"colorObject","deprecated":false,"deprecationMessage":"","type":"Color","optional":false,"description":"","line":22,"modifierKind":[121]},{"name":"colorRGB","defaultValue":"\'rgb(0, 0, 0)\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"userControl","defaultValue":"new FormControl<string>(\'\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { color } from \'@main/interfaces/color.interface\';\\nimport { FormControl } from \'@ngneat/reactive-forms\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\nimport * as Color from \'color\';\\nimport { filter } from \'rxjs\';\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'input-color\',\\n  templateUrl: \'./input-color.component.html\',\\n  styleUrls: [\'./input-color.component.scss\'],\\n})\\nexport class InputColorComponent extends ControlAccessor<color> {\\n  @Input() floatingLabel?: string;\\n  @Input() staticLabel?: string;\\n\\n  public userControl = new FormControl<string>(\'\');\\n  public colorRGB = \'rgb(0, 0, 0)\';\\n\\n  private colorObject!: Color;\\n\\n  override ngAfterControlInit(): void {\\n    if (this.control.value) {\\n      this.colorObject = Color(this.control.value);\\n      this.userControl.patchValue(this.colorObject.rgb().string());\\n    } else {\\n      this.colorObject = Color(\'#000000\');\\n      this.userControl.patchValue(this.colorObject.rgb().string());\\n    }\\n\\n    let changesFromInside = false;\\n    this.control.valueChanges.pipe(untilDestroyed(this)).subscribe((value) => {\\n      console.log(\'parsing from:\', value);\\n      const color = Color(value);\\n      this.colorRGB = color.rgb().string();\\n    });\\n    this.control.valueChanges\\n      .pipe(\\n        untilDestroyed(this),\\n        filter(() => !changesFromInside),\\n      )\\n      .subscribe((value) => {\\n        console.log(\'parsing from:\', value);\\n        const color = Color(value);\\n        this.colorRGB = color.rgb().string();\\n        this.userControl.setValue(color.toString(), { emitEvent: false });\\n      });\\n    this.userControl.valueChanges.pipe(untilDestroyed(this)).subscribe((value) => {\\n      console.log(\'parsing from userInput:\', value);\\n      if (value) {\\n        try {\\n          const color = Color(value);\\n          console.log(color);\\n          changesFromInside = true;\\n          this.control.setValue(color.rgbNumber());\\n          changesFromInside = false;\\n        } catch (e) {\\n          // Unable to convert to color - give user an error\\n        }\\n      }\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".color-square {\\n  width: 1rem;\\n  height: 1rem;\\n  border-radius: 4px;\\n  margin-right: 4px;\\n}\\n","styleUrl":"./input-color.component.scss"}],"stylesData":"","extends":"ControlAccessor","templateData":"<app-input [formControl]=\\"userControl\\" [staticLabel]=\\"staticLabel\\" [floatingLabel]=\\"floatingLabel\\">\\n  <div class=\\"prefix color-square\\" [style.backgroundColor]=\\"colorRGB\\"></div>\\n</app-input>\\n"},{"name":"InputComponent","id":"component-InputComponent-282b0d11c8137317f8a5c9f677a685899d936d5b73aa5a965105916d4ebc4d6550b61c2f3c1aa081ae261ab215bbeb56171e8d4a9d83ecf6ea39da32436590c5","file":"src/app/_main/components/input/input.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-input","styleUrls":["./input.component.scss"],"styles":[],"templateUrl":["./input.component.html"],"viewProviders":[],"inputsClass":[{"name":"allowResizeByError","deprecated":false,"deprecationMessage":"","line":55,"type":"boolean","decorators":[]},{"name":"floatingLabel","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFloating label text to display\\n","description":"<p>Floating label text to display</p>\\n","line":33,"type":"string","decorators":[]},{"name":"hint","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHint to display beneath the input to provide additional information of how to use the input\\n","description":"<p>Hint to display beneath the input to provide additional information of how to use the input</p>\\n","line":48,"type":"string","decorators":[]},{"name":"pending","deprecated":false,"deprecationMessage":"","line":57,"type":"boolean","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInput placeholder text\\n","description":"<p>Input placeholder text</p>\\n","line":43,"type":"string","decorators":[]},{"name":"readonly","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAttribute to disable value edition without any visual changes\\n","description":"<p>Attribute to disable value edition without any visual changes</p>\\n","line":53,"type":"boolean","decorators":[]},{"name":"staticLabel","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nStatic label text to display\\n","description":"<p>Static label text to display</p>\\n","line":38,"type":"string","decorators":[]},{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nType of the input\\n","description":"<p>Type of the input</p>\\n","line":28,"type":"\\"text\\" | \\"number\\" | \\"email\\" | \\"password\\"","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[{"name":"focus","defaultValue":"new EventEmitter<boolean>()","deprecated":false,"deprecationMessage":"","line":60,"type":"EventEmitter<boolean>"}],"propertiesClass":[{"name":"autofilledByBrowser","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":68,"modifierKind":[123]},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"","line":71,"modifierKind":[123,158],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"<p>Default text input component</p>\\n","rawdescription":"\\n\\nDefault text input component\\n","type":"component","sourceCode":"import { AutofillMonitor } from \'@angular/cdk/text-field\';\\nimport {\\n  ChangeDetectorRef,\\n  Component,\\n  ElementRef,\\n  HostBinding,\\n  Input,\\n  Output,\\n  ViewChild,\\n  EventEmitter,\\n  AfterViewInit,\\n} from \'@angular/core\';\\nimport { NgControl } from \'@angular/forms\';\\nimport { ControlAccessor } from \'../../classes/control-accessor.class\';\\n\\n/**\\n * Default text input component\\n */\\n@Component({\\n  selector: \'app-input\',\\n  templateUrl: \'./input.component.html\',\\n  styleUrls: [\'./input.component.scss\'],\\n})\\nexport class InputComponent extends ControlAccessor implements AfterViewInit {\\n  /**\\n   * Type of the input\\n   */\\n  @Input() type: \'text\' | \'number\' | \'email\' | \'password\' = \'text\';\\n\\n  /**\\n   * Floating label text to display\\n   */\\n  @Input() floatingLabel?: string;\\n\\n  /**\\n   * Static label text to display\\n   */\\n  @Input() staticLabel?: string;\\n\\n  /**\\n   * Input placeholder text\\n   */\\n  @Input() placeholder: string = \'\';\\n\\n  /**\\n   * Hint to display beneath the input to provide additional information of how to use the input\\n   */\\n  @Input() hint?: string;\\n\\n  /**\\n   * Attribute to disable value edition without any visual changes\\n   */\\n  @Input() readonly?: boolean;\\n\\n  @Input() allowResizeByError?: boolean;\\n\\n  @Input() pending?: boolean;\\n\\n  // eslint-disable-next-line @angular-eslint/no-output-native\\n  @Output() focus: EventEmitter<boolean> = new EventEmitter<boolean>();\\n\\n  /** @ignore */\\n  @HostBinding(\'class.focused\') focused: boolean = false;\\n\\n  /** @ignore */\\n  @ViewChild(\'input\') input!: ElementRef<HTMLInputElement>;\\n\\n  public autofilledByBrowser: boolean = false;\\n\\n  constructor(\\n    public override ngControl: NgControl,\\n    private autofillMonitor: AutofillMonitor,\\n    cdRef: ChangeDetectorRef,\\n  ) {\\n    super(ngControl, cdRef);\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.autofillMonitor.monitor(this.input.nativeElement).subscribe(() => {\\n      this.autofilledByBrowser = true;\\n    });\\n  }\\n\\n  /** @ignore */\\n  onFocus() {\\n    this.focused = true;\\n    this.focus.emit(true);\\n  }\\n\\n  /** @ignore */\\n  onBlur() {\\n    this.focused = false;\\n    this.focus.emit(false);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../styles/typography\';\\n\\n:host {\\n  display: inline-block;\\n  width: 100%;\\n}\\n\\n.form-field {\\n  display: flex;\\n  max-width: 400px;\\n  flex-direction: column;\\n  margin-bottom: 0.5rem;\\n\\n  >label {\\n    @include text-title;\\n\\n    margin-bottom: 0.4rem;\\n    color: var(--color-input-text);\\n\\n    &.required::after {\\n      margin-left: 0.2rem;\\n      color: var(--color-input-text);\\n      content: \'*\';\\n    }\\n  }\\n}\\n\\n$padding-left: 0.5rem;\\n$height: 44px;\\n\\n// New input\\n.input-form-field {\\n  position: relative;\\n\\n  // Static label for input\\n  .static-label {\\n    @include text-title;\\n\\n    margin-bottom: 0.4rem;\\n    color: var(--color-input-text);\\n\\n    &.required::after {\\n      margin-left: 0.2rem;\\n      color: var(--color-input-text);\\n      content: \'*\';\\n    }\\n  }\\n\\n  // Floating label for input\\n  .floating-label {\\n    @include text-base;\\n\\n    padding: 0 0.4rem;\\n    color: var(--color-text);\\n    transition: transform 0.2s ease, font-size 0.2s ease;\\n  }\\n\\n  // Fragments\\n  .fragment-left,\\n  .fragment-middle,\\n  .fragment-right {\\n    z-index: 1;\\n    height: 100%;\\n    border: 2px solid var(--color-input-border);\\n    pointer-events: none;\\n  }\\n\\n  .fragment-left {\\n    display: flex;\\n    width: $padding-left;\\n    align-items: center;\\n    padding-left: $padding-left;\\n    border-right-width: 0;\\n    border-bottom-left-radius: var(--border-radius);\\n    border-top-left-radius: var(--border-radius);\\n\\n    .fragment-left-wrapper {\\n      flex-shrink: 0;\\n    }\\n  }\\n\\n  .fragment-middle {\\n    display: flex;\\n    align-items: center;\\n    border-right-width: 0;\\n    border-left-width: 0;\\n  }\\n\\n  .fragment-right {\\n    display: flex;\\n    flex-grow: 1;\\n    align-items: center;\\n    justify-content: flex-end;\\n    padding-right: 0.75rem;\\n    border-left-width: 0;\\n    border-bottom-right-radius: var(--border-radius);\\n    border-top-right-radius: var(--border-radius);\\n  }\\n\\n  .input-wrapper {\\n    position: relative;\\n    display: flex;\\n    width: 100%;\\n    height: $height;\\n    background-color: var(--color-input-background);\\n    border-radius: var(--border-radius);\\n    transition: background-color 0.2s ease-in-out;\\n\\n    &:hover {\\n      background-color: var(--color-input-background-hover);\\n    }\\n  }\\n\\n  input {\\n    @include text-base;\\n\\n    position: absolute;\\n    top: 0;\\n    width: 100%;\\n    height: 100%;\\n    padding-left: calc($padding-left + 0.4rem);\\n    background-color: var(--color-input-background);\\n    background-color: transparent;\\n    border-radius: var(--border-radius);\\n    color: var(--color-text);\\n  }\\n}\\n\\n.has-value,\\n:host.focused {\\n  .floating-label {\\n    font-size: 0.75em;\\n    transform: translateY(calc($height / -2));\\n  }\\n\\n  .fragment-middle {\\n    border-top-width: 0;\\n  }\\n}\\n\\n:host:not(.focused) {\\n  input::placeholder {\\n    opacity: 0;\\n  }\\n}\\n\\n:host.ng-touched.ng-invalid {\\n\\n  .fragment-left,\\n  .fragment-middle,\\n  .fragment-right {\\n    border-color: var(--color-red-500);\\n  }\\n}\\n\\n:host.focused .input-form-field {\\n\\n  .fragment-left,\\n  .fragment-middle,\\n  .fragment-right {\\n    border-color: var(--color-primary-500);\\n  }\\n}\\n\\n.required {\\n\\n  .static-label::after,\\n  .floating-label::after {\\n    margin-left: 0.2rem;\\n    color: var(--color-red-500);\\n    content: \'*\';\\n  }\\n}\\n\\n.error {\\n  position: absolute;\\n  margin-top: 0.2rem;\\n  color: var(--color-red-500);\\n  font-size: 12px;\\n  line-height: 0.8rem;\\n}\\n","styleUrl":"./input.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""},{"name":"autofillMonitor","type":"AutofillMonitor","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":68,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"autofillMonitor","type":"AutofillMonitor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"ControlAccessor","implements":["AfterViewInit"],"templateData":"<div class=\\"input-form-field\\" [class.required]=\\"required\\" [class.has-value]=\\"!!control.value || autofilledByBrowser\\">\\n  <label *ngIf=\\"staticLabel\\" class=\\"static-label\\">{{ staticLabel }}</label>\\n  <div class=\\"input-wrapper\\">\\n    <div class=\\"fragment-left\\">\\n      <div #fragmentLeft class=\\"fragment-left-wrapper\\">\\n        <ng-content select=\\".prefix\\"></ng-content>\\n      </div>\\n    </div>\\n    <div class=\\"fragment-middle\\">\\n      <label *ngIf=\\"floatingLabel\\" class=\\"floating-label\\">{{ floatingLabel }}</label>\\n    </div>\\n    <div class=\\"fragment-right\\">\\n      <ng-container *ngIf=\\"pending; else suffix\\">\\n        <loader></loader>\\n      </ng-container>\\n      <ng-template #suffix>\\n        <ng-content select=\\".suffix\\"></ng-content>\\n      </ng-template>\\n    </div>\\n    <input #input [name]=\\"name\\" [type]=\\"type\\" [placeholder]=\\"placeholder\\" [formControl]=\\"control\\" [readonly]=\\"readonly\\"\\n      [autocomplete]=\\"autocomplete\\" (focus)=\\"onFocus()\\" (blur)=\\"onBlur()\\"\\n      [style.padding-left]=\\"(fragmentLeft.clientWidth + 16) + \'px\'\\">\\n  </div>\\n  <div *ngIf=\\"control.touched && control.invalid\\" class=\\"error\\" [class.relative]=\\"allowResizeByError\\">\\n    {{ control.errors | validationError }}\\n  </div>\\n</div>\\n"},{"name":"InputDateTimeComponent","id":"component-InputDateTimeComponent-c3d3174af331929e8783cb0f4f56750cdfaf356aa9a031e8399ea9f9b74820d22f07494c7264bfba305400f6df94705c07d720ecf3c2c8cd8aab6343df191408","file":"src/app/_main/components/input-date-time/input-date-time.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-input-date-time","styleUrls":["./input-date-time.component.scss"],"styles":[],"templateUrl":["./input-date-time.component.html"],"viewProviders":[],"inputsClass":[{"name":"floatingLabel","deprecated":false,"deprecationMessage":"","line":25,"type":"string","decorators":[]},{"name":"pending","deprecated":false,"deprecationMessage":"","line":29,"type":"boolean","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"staticLabel","deprecated":false,"deprecationMessage":"","line":27,"type":"string","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"datePicker","deprecated":false,"deprecationMessage":"","type":"DatePickerComponent","optional":true,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"DatePickerComponent"}]},{"name":"displayControl","defaultValue":"new FormControl<string>(this.format(this.control?.value))","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":42},{"name":"displayFormat","defaultValue":"\'DD.MM.YYYY HH:mm\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40},{"name":"focused","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":44},{"name":"isPickerOpen$","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37},{"name":"overlay","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLElement>","optional":false,"description":"","line":31,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'overlay\'"}]},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"closePicker","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":""},{"name":"format","args":[{"name":"value","type":"unixTimestamp | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"value","type":"unixTimestamp | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"ControlAccessor"}},{"name":"onFocusStateChanged","args":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openPicker","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":""},{"name":"waitForClickOutside","args":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[]}],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[],"tagName":{"text":"param"}}]},{"name":"writeValue","args":[{"name":"value","type":"unixTimestamp | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"value","type":"unixTimestamp | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, ElementRef, ViewChild, ChangeDetectorRef, OnInit } from \'@angular/core\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { faCalendar } from \'@fortawesome/free-solid-svg-icons\';\\nimport { BehaviorSubject, fromEvent, take, filter } from \'rxjs\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\nimport { NgControl } from \'@angular/forms\';\\nimport { FormControl } from \'@ngneat/reactive-forms\';\\nimport { unixTimestamp } from \'../../interfaces/date.interface\';\\nimport dayjs from \'dayjs\';\\nimport { KeyboardKey } from \'@main/interfaces/keyboard-key.interface\';\\nimport { DatePickerComponent } from \'./date-picker/date-picker.component\';\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'app-input-date-time\',\\n  templateUrl: \'./input-date-time.component.html\',\\n  styleUrls: [\'./input-date-time.component.scss\'],\\n})\\nexport class InputDateTimeComponent\\n  extends ControlAccessor<unixTimestamp | null>\\n  implements OnInit\\n{\\n  @Input() placeholder: string = \'\';\\n\\n  @Input() floatingLabel?: string;\\n\\n  @Input() staticLabel?: string;\\n\\n  @Input() pending?: boolean;\\n\\n  @ViewChild(\'overlay\') overlay!: ElementRef<HTMLElement>;\\n  @ViewChild(DatePickerComponent) datePicker?: DatePickerComponent;\\n\\n  /** @ignore */\\n  faCalendar = faCalendar;\\n\\n  isPickerOpen$ = new BehaviorSubject<boolean>(false);\\n\\n  // TODO: Load this from user settings\\n  displayFormat = \'DD.MM.YYYY HH:mm\';\\n\\n  displayControl = new FormControl<string>(this.format(this.control?.value));\\n\\n  focused: boolean = false;\\n\\n  constructor(private elementRef: ElementRef, cdRef: ChangeDetectorRef, ngControl: NgControl) {\\n    super(ngControl, cdRef);\\n  }\\n\\n  override ngOnInit() {\\n    super.ngOnInit();\\n\\n    fromEvent<KeyboardEvent>(document, \'keydown\')\\n      .pipe(\\n        filter((event) => (event.key as KeyboardKey) === \'Backspace\'),\\n        filter(() => this.focused),\\n        untilDestroyed(this),\\n      )\\n      .subscribe(() => {\\n        this.control.setValue(null);\\n      });\\n  }\\n\\n  waitForClickOutside(fn: () => void) {\\n    fromEvent(document, \'mousedown\')\\n      .pipe(\\n        untilDestroyed(this),\\n        filter((e) => {\\n          return (\\n            (!this.overlay || !this.overlay.nativeElement.contains(e.target as Node)) &&\\n            (!this.elementRef || !this.elementRef.nativeElement.contains(e.target as Node))\\n          );\\n        }),\\n        take(1),\\n      )\\n      .subscribe(() => fn());\\n  }\\n\\n  openPicker() {\\n    this.isPickerOpen$.next(true);\\n    setTimeout(() => {\\n      this.waitForClickOutside(() => this.closePicker());\\n    }, 100);\\n  }\\n\\n  closePicker() {\\n    this.isPickerOpen$.next(false);\\n  }\\n\\n  onFocusStateChanged(state: boolean) {\\n    if (state) {\\n      this.focused = state;\\n      this.openPicker();\\n    }\\n  }\\n\\n  private format(value: unixTimestamp | null) {\\n    if (!value) return \'\';\\n    return dayjs(value).format(this.displayFormat);\\n  }\\n\\n  override writeValue(value: unixTimestamp | null): void {\\n    super.writeValue(value);\\n    this.displayControl.setValue(this.format(value));\\n    if (this.datePicker) {\\n      this.datePicker.writeValue(value);\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".overlay {\\n  background-color: var(--color-secondary-600);\\n  border-radius: var(--border-radius);\\n}\\n","styleUrl":"./input-date-time.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""},{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""}],"line":44,"jsdoctags":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"ControlAccessor","implements":["OnInit"],"templateData":"<app-input #trigger=\\"cdkOverlayOrigin\\" [formControl]=\\"displayControl\\" [floatingLabel]=\\"floatingLabel\\"\\n  [staticLabel]=\\"staticLabel\\" [placeholder]=\\"placeholder\\" [readonly]=\\"true\\" [pending]=\\"pending\\"\\n  (focus)=\\"onFocusStateChanged($event)\\" cdkOverlayOrigin>\\n  <span class=\\"suffix\\">\\n    <app-icon [icon]=\\"faCalendar\\" size=\\"16px\\"></app-icon>\\n  </span>\\n</app-input>\\n\\n<ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\\"trigger\\"\\n  [cdkConnectedOverlayOpen]=\\"(isPickerOpen$ | async) || false\\"\\n  [cdkConnectedOverlayBackdropClass]=\\"\'cdk-overlay-transparent-backdrop\'\\" [cdkConnectedOverlayHasBackdrop]=\\"true\\">\\n  <div #overlay class=\\"overlay\\">\\n    <date-time-picker [formControl]=\\"control\\"></date-time-picker>\\n  </div>\\n</ng-template>\\n"},{"name":"InputEpicComponent","id":"component-InputEpicComponent-6dada4601bc6b8793c68244e1957d39e2c12271842e0e1ccf7f51f75e33c451e0dc9f510c84656e2eede3928e7385cbe27b8d63a034404fe4bdfa8450aa24fa1","file":"src/app/tasks/components/input-epic/input-epic.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"input-epic","styleUrls":[],"styles":[],"templateUrl":["./input-epic.component.html"],"viewProviders":[],"inputsClass":[{"name":"projectId","deprecated":false,"deprecationMessage":"","line":18,"type":"number","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"_projectId","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":38,"modifierKind":[121]},{"name":"epics$","defaultValue":"of([])","deprecated":false,"deprecationMessage":"","type":"Observable<Task[]>","optional":false,"description":"","line":40},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"loadEpics","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"ControlAccessor"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[158]},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationError | null","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { ChangeDetectorRef, Component, Input, OnDestroy } from \'@angular/core\';\\nimport { AbstractControl, NgControl } from \'@angular/forms\';\\nimport { Observable, of } from \'rxjs\';\\nimport { ValidationError } from \'@main/interfaces/validation-error.interface\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\n\\n@Component({\\n  selector: \'input-epic\',\\n  templateUrl: \'./input-epic.component.html\',\\n})\\nexport class InputEpicComponent\\n  extends ControlAccessor<Task[\'id\'] | null | \'\'>\\n  implements OnDestroy\\n{\\n  @Input() set projectId(value: number) {\\n    this._projectId = value;\\n    if (value) {\\n      this.loadEpics();\\n    }\\n  }\\n\\n  get projectId() {\\n    return this._projectId;\\n  }\\n\\n  set isOpen(value: boolean) {\\n    if (value) this.control.setValue(\'\');\\n    else this.control.setValue(null);\\n  }\\n\\n  get isOpen() {\\n    return this.control.value != null;\\n  }\\n\\n  private _projectId: number = 0;\\n\\n  epics$: Observable<Task[]> = of([]);\\n\\n  constructor(ngControl: NgControl, cdRef: ChangeDetectorRef, private taskService: TaskService) {\\n    super(ngControl, cdRef);\\n  }\\n\\n  loadEpics() {\\n    this.epics$ = this.taskService.listEpics(this.projectId);\\n  }\\n\\n  override validate(control: AbstractControl): ValidationError | null {\\n    if (this.isOpen && !this.control.value) return requiredValidator()(control) as ValidationError;\\n    return null;\\n  }\\n\\n  override ngAfterControlInit(): void {\\n    this.cdRef.detectChanges();\\n  }\\n\\n  override ngOnDestroy() {\\n    super.ngOnDestroy();\\n    this.control.setValue(null);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"ControlAccessor","implements":["OnDestroy"],"accessors":{"projectId":{"name":"projectId","setSignature":{"name":"projectId","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":18,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"projectId","type":"","returnType":"","line":25}},"isOpen":{"name":"isOpen","setSignature":{"name":"isOpen","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":29,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"isOpen","type":"","returnType":"","line":34}}},"templateData":"<input-task-property i18n-label label=\\"Epic\\" [(isOpen)]=\\"isOpen\\">\\n  <app-select [formControl]=\\"control\\" [allowResizeByError]=\\"true\\" floatingLabel=\\"Epic\\" i18n-floatingLabel comparer=\\"id\\">\\n    <app-option *ngFor=\\"let task of epics$ | async\\" [value]=\\"task.id\\">{{ task.name }}</app-option>\\n    <app-empty-options i18n>Epics not found in this project</app-empty-options>\\n  </app-select>\\n</input-task-property>\\n"},{"name":"InputIssueComponent","id":"component-InputIssueComponent-4ca9b1e2bf4dcd9686c195a426f97f2be41641f88ebd121d529c51e04a8981e8a40f6049e63a27b6f2ca01ca941a8bfe641348117d9b75659b445ace9d8a2a82","file":"src/app/tasks/components/input-issue/input-issue.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"input-issue","styleUrls":[],"styles":[],"templateUrl":["./input-issue.component.html"],"viewProviders":[],"inputsClass":[{"name":"projectId","deprecated":false,"deprecationMessage":"","line":13,"type":"number","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"_projectId","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":33,"modifierKind":[121]},{"name":"issues$","defaultValue":"of([])","deprecated":false,"deprecationMessage":"","type":"Observable<GitIssue[]>","optional":false,"description":"","line":35},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"loadIssues","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectorRef, Component, Input } from \'@angular/core\';\\nimport { GitIssue } from \'@dashboard/interfaces/git-integration.interface\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { GitIntegrationService } from \'@dashboard/services/git-integration/git-integration.service\';\\nimport { NgControl } from \'@angular/forms\';\\nimport { Observable, of } from \'rxjs\';\\n\\n@Component({\\n  selector: \'input-issue\',\\n  templateUrl: \'./input-issue.component.html\',\\n})\\nexport class InputIssueComponent extends ControlAccessor<GitIssue | \'DETACH\' | \'CREATE\' | null> {\\n  @Input() set projectId(value: number) {\\n    this._projectId = value;\\n    if (value) {\\n      this.loadIssues();\\n    }\\n  }\\n\\n  get projectId() {\\n    return this._projectId;\\n  }\\n\\n  set isOpen(value: boolean) {\\n    if (value) this.control.setValue(\'CREATE\');\\n    else this.control.setValue(\'DETACH\');\\n  }\\n\\n  get isOpen() {\\n    return ![\'DETACH\', null].includes(this.control.value as string);\\n  }\\n\\n  private _projectId: number = 0;\\n\\n  issues$: Observable<GitIssue[]> = of([]);\\n\\n  constructor(\\n    ngControl: NgControl,\\n    private gitIntegrationService: GitIntegrationService,\\n    cdRef: ChangeDetectorRef,\\n  ) {\\n    super(ngControl, cdRef);\\n  }\\n\\n  loadIssues() {\\n    const { projectId } = this;\\n    this.issues$ = this.gitIntegrationService.gitHubIssueList(projectId);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""},{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":35,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"ControlAccessor","accessors":{"projectId":{"name":"projectId","setSignature":{"name":"projectId","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":13,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"projectId","type":"","returnType":"","line":20}},"isOpen":{"name":"isOpen","setSignature":{"name":"isOpen","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":24,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"isOpen","type":"","returnType":"","line":29}}},"templateData":"<input-task-property i18n-label label=\\"GitHub issue\\" [(isOpen)]=\\"isOpen\\">\\n  <app-select [formControl]=\\"control\\" [allowResizeByError]=\\"true\\" floatingLabel=\\"Issue\\" i18n-floatingLabel\\n    comparer=\\"id\\">\\n    <app-option [value]=\\"\'CREATE\'\\" i18n>Create new issue</app-option>\\n    <app-option *ngFor=\\"let issue of issues$ | async\\" [value]=\\"issue\\">{{ issue.title }}</app-option>\\n  </app-select>\\n</input-task-property>\\n"},{"name":"InputPullRequestComponent","id":"component-InputPullRequestComponent-275801e0948ae91b5447d7eeaa3f9ebaa491d1b175c00b1d29062755fa047025b5d055b81fb8b0ded1c4247d5731d85fe6059f9a70ae169d513b806442143601","file":"src/app/tasks/components/input-pull-request/input-pull-request.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"input-pull-request","styleUrls":[],"styles":[],"templateUrl":["./input-pull-request.component.html"],"viewProviders":[],"inputsClass":[{"name":"projectId","deprecated":false,"deprecationMessage":"","line":18,"type":"number","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"_projectId","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":38,"modifierKind":[121]},{"name":"pulls$","defaultValue":"of([])","deprecated":false,"deprecationMessage":"","type":"Observable<GitPull[]>","optional":false,"description":"","line":40},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"loadPullRequests","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"ControlAccessor"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","modifierKind":[158]},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationError | null","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { GitPull } from \'@dashboard/interfaces/git-integration.interface\';\\nimport { ChangeDetectorRef, Component, Input, OnDestroy } from \'@angular/core\';\\nimport { AbstractControl, NgControl } from \'@angular/forms\';\\nimport { Observable, of } from \'rxjs\';\\nimport { GitIntegrationService } from \'@dashboard/services/git-integration/git-integration.service\';\\nimport { ValidationError } from \'@main/interfaces/validation-error.interface\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\n\\n@Component({\\n  selector: \'input-pull-request\',\\n  templateUrl: \'./input-pull-request.component.html\',\\n})\\nexport class InputPullRequestComponent\\n  extends ControlAccessor<GitPull | \'DETACH\' | \'CREATE\' | null | \'\'>\\n  implements OnDestroy\\n{\\n  @Input() set projectId(value: number) {\\n    this._projectId = value;\\n    if (value) {\\n      this.loadPullRequests();\\n    }\\n  }\\n\\n  get projectId() {\\n    return this._projectId;\\n  }\\n\\n  set isOpen(value: boolean) {\\n    if (value) this.control.setValue(\'\');\\n    else this.control.setValue(\'DETACH\');\\n  }\\n\\n  get isOpen() {\\n    return ![\'DETACH\', null].includes(this.control.value as string);\\n  }\\n\\n  private _projectId: number = 0;\\n\\n  pulls$: Observable<GitPull[]> = of([]);\\n\\n  constructor(\\n    ngControl: NgControl,\\n    private gitIntegrationService: GitIntegrationService,\\n    cdRef: ChangeDetectorRef,\\n  ) {\\n    super(ngControl, cdRef);\\n  }\\n\\n  loadPullRequests() {\\n    const { projectId } = this;\\n    this.pulls$ = this.gitIntegrationService.gitHubPullList(projectId);\\n  }\\n\\n  override validate(control: AbstractControl): ValidationError | null {\\n    if (this.isOpen && !this.control.value) return requiredValidator()(control) as ValidationError;\\n    return null;\\n  }\\n\\n  override ngAfterControlInit(): void {\\n    this.cdRef.detectChanges();\\n  }\\n\\n  override ngOnDestroy() {\\n    super.ngOnDestroy();\\n    this.control.setValue(null);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""},{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"ControlAccessor","implements":["OnDestroy"],"accessors":{"projectId":{"name":"projectId","setSignature":{"name":"projectId","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":18,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"projectId","type":"","returnType":"","line":25}},"isOpen":{"name":"isOpen","setSignature":{"name":"isOpen","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":29,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"isOpen","type":"","returnType":"","line":34}}},"templateData":"<input-task-property i18n-label label=\\"GitHub pull request\\" [(isOpen)]=\\"isOpen\\">\\n  <app-select [formControl]=\\"control\\" [allowResizeByError]=\\"true\\" floatingLabel=\\"Pull request\\" i18n-floatingLabel\\n    comparer=\\"id\\">\\n    <app-option *ngFor=\\"let pull of pulls$ | async\\" [value]=\\"pull\\">{{ pull.title }}</app-option>\\n    <app-empty-options i18n>Pull requests not found in this repository</app-empty-options>\\n  </app-select>\\n</input-task-property>\\n"},{"name":"InputTaskParentComponent","id":"component-InputTaskParentComponent-1131d06d65928954cb64adf5b5d3f0f0688ed08a679aa8a7f194cd3bc591784e53c6ec20112db52100d25b59ebfe243b09bc8de8c31d9d5cb91a0fd4d67e5a35","file":"src/app/tasks/components/input-task-parent/input-task-parent.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"input-task-parent","styleUrls":[],"styles":[],"templateUrl":["./input-task-parent.component.html"],"viewProviders":[],"inputsClass":[{"name":"projectId","deprecated":false,"deprecationMessage":"","line":22,"type":"number","decorators":[]},{"name":"type","deprecated":false,"deprecationMessage":"","line":29,"type":"TaskType | undefined","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"_projectId","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":49,"modifierKind":[121]},{"name":"_type","deprecated":false,"deprecationMessage":"","type":"TaskType","optional":true,"description":"","line":50,"modifierKind":[121]},{"name":"tasks$","defaultValue":"of([])","deprecated":false,"deprecationMessage":"","type":"Observable<Task[]>","optional":false,"description":"","line":52},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"getAvailableTypes","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""},{"name":"loadTasks","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"ControlAccessor"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","modifierKind":[158]},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationError | null","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { ChangeDetectorRef, Component, Input, OnDestroy } from \'@angular/core\';\\nimport { AbstractControl, NgControl } from \'@angular/forms\';\\nimport { Observable, of } from \'rxjs\';\\nimport { ValidationError } from \'@main/interfaces/validation-error.interface\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\nimport { TaskType } from \'@tasks/enums/task-type.enum\';\\nimport { TaskService } from \'../../services/task/task.service\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport { TaskTypeHierarchy } from \'../../enums/task-type.enum\';\\nimport { TaskFilters } from \'@tasks/filters/task.filters\';\\nimport { isNil } from \'lodash-es\';\\n\\n@Component({\\n  selector: \'input-task-parent\',\\n  templateUrl: \'./input-task-parent.component.html\',\\n})\\nexport class InputTaskParentComponent\\n  extends ControlAccessor<number | null | \'\'>\\n  implements OnDestroy\\n{\\n  @Input() set projectId(value: number) {\\n    this._projectId = value;\\n    if (!isNil(value)) {\\n      this.loadTasks();\\n    }\\n  }\\n\\n  @Input() set type(value: TaskType | undefined) {\\n    this._type = value;\\n    if (!isNil(value)) {\\n      this.loadTasks();\\n    }\\n  }\\n\\n  get projectId() {\\n    return this._projectId;\\n  }\\n\\n  set isOpen(value: boolean) {\\n    if (value) this.control.setValue(\'\');\\n    else this.control.setValue(null);\\n  }\\n\\n  get isOpen() {\\n    return this.control.value !== null;\\n  }\\n\\n  private _projectId: number = 0;\\n  private _type?: TaskType;\\n\\n  tasks$: Observable<Task[]> = of([]);\\n\\n  constructor(ngControl: NgControl, cdRef: ChangeDetectorRef, private taskService: TaskService) {\\n    super(ngControl, cdRef);\\n  }\\n\\n  loadTasks() {\\n    const { projectId } = this;\\n    this.tasks$ = this.taskService.list(projectId, TaskFilters.TYPES(this.getAvailableTypes()));\\n  }\\n\\n  getAvailableTypes() {\\n    if (isNil(this._type)) return [];\\n\\n    return Object.entries(TaskTypeHierarchy)\\n      .filter(\\n        ([key, value]) => value.includes(this._type!) && (key as any as TaskType) != TaskType.EPIC,\\n      )\\n      .map(([key]) => key as any as TaskType);\\n  }\\n\\n  override validate(control: AbstractControl): ValidationError | null {\\n    if (this.isOpen && !this.control.value) return requiredValidator()(control) as ValidationError;\\n    return null;\\n  }\\n\\n  override ngAfterControlInit(): void {\\n    this.cdRef.detectChanges();\\n  }\\n\\n  override ngOnDestroy() {\\n    super.ngOnDestroy();\\n    this.control.setValue(null);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""}],"line":52,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"ControlAccessor","implements":["OnDestroy"],"accessors":{"projectId":{"name":"projectId","setSignature":{"name":"projectId","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":22,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"projectId","type":"","returnType":"","line":36}},"type":{"name":"type","setSignature":{"name":"type","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"TaskType | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":29,"jsdoctags":[{"name":"value","type":"TaskType | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"isOpen":{"name":"isOpen","setSignature":{"name":"isOpen","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":40,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"isOpen","type":"","returnType":"","line":45}}},"templateData":"<input-task-property i18n-label label=\\"Parent task\\" [(isOpen)]=\\"isOpen\\">\\n  <app-select [formControl]=\\"control\\" [allowResizeByError]=\\"true\\" floatingLabel=\\"Parent task\\" i18n-floatingLabel\\n    comparer=\\"id\\">\\n    <app-option *ngFor=\\"let task of tasks$ | async\\" [value]=\\"task.id\\">\\n      \x3c!-- TODO: Task type icon --\x3e\\n      <span>{{ task.name }}</span>\\n    </app-option>\\n    <app-empty-options i18n>There are no matching tasks</app-empty-options>\\n  </app-select>\\n</input-task-property>\\n"},{"name":"InputTaskPropertyComponent","id":"component-InputTaskPropertyComponent-a1cb82cffb4586d600ba437300886d7284ad1e7b58bd5af5a1e756e4d7771644628b1d3da4fc0e4a12a9aa5babef09ed6d563b4da50e82b22d40952043fcd2f7","file":"src/app/tasks/components/input-task-property/input-task-property.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"input-task-property","styleUrls":["./input-task.property.component.scss"],"styles":[],"templateUrl":["./input-task-property.component.html"],"viewProviders":[],"inputsClass":[{"name":"isOpen","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]}],"outputsClass":[{"name":"isOpenChange","defaultValue":"new EventEmitter<boolean>()","deprecated":false,"deprecationMessage":"","line":26,"type":"EventEmitter"}],"propertiesClass":[{"name":"_isOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27,"modifierKind":[121]},{"name":"content","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLElement>","optional":false,"description":"","line":29,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'content\'"}]},{"name":"currentHeight","defaultValue":"\'0\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32},{"name":"targetHeight","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":31}],"methodsClass":[{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":""},{"name":"open","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from \'@angular/core\';\\nimport { faMinus, faPlus } from \'@fortawesome/free-solid-svg-icons\';\\n\\n@Component({\\n  selector: \'input-task-property\',\\n  templateUrl: \'./input-task-property.component.html\',\\n  styleUrls: [\'./input-task.property.component.scss\'],\\n})\\nexport class InputTaskPropertyComponent {\\n  @Input() label: string = \'\';\\n\\n  @Input() set isOpen(value: boolean) {\\n    this._isOpen = value;\\n    if (value) {\\n      this.currentHeight = `${this.targetHeight}px`;\\n      setTimeout(() => {\\n        this.currentHeight = \'none\';\\n      }, 200);\\n    } else {\\n      this.currentHeight = \'0\';\\n    }\\n  }\\n  get isOpen() {\\n    return this._isOpen;\\n  }\\n  @Output() isOpenChange = new EventEmitter<boolean>();\\n  private _isOpen: boolean = false;\\n\\n  @ViewChild(\'content\') content!: ElementRef<HTMLElement>;\\n\\n  targetHeight: number = 0;\\n  currentHeight: string = \'0\';\\n\\n  /** @ignore */\\n  faPlus = faPlus;\\n\\n  /** @ignore */\\n  faMinus = faMinus;\\n\\n  open() {\\n    this.isOpen = true;\\n  }\\n\\n  close() {\\n    this.isOpen = false;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  padding: 1rem;\\n  border: 1px solid var(--color-secondary-500);\\n  border-radius: var(--border-radius);\\n\\n  .header {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n\\n    app-icon {\\n      position: relative;\\n      cursor: pointer;\\n\\n      &:hover {\\n        &::before {\\n          background-color: var(--color-secondary-500);\\n        }\\n      }\\n\\n      &::before {\\n        position: absolute;\\n        z-index: 1;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n\\n        border-radius: 1.8px;\\n        content: \'\';\\n        transform: scale(2);\\n        transition: background-color .2s ease;\\n      }\\n\\n      &::ng-deep>* {\\n        z-index: 2;\\n      }\\n    }\\n  }\\n\\n  .content {\\n    overflow: hidden;\\n    max-height: 0;\\n    transition: max-height .2s ease;\\n\\n    .content-wrapper {\\n      padding-top: 1rem;\\n    }\\n  }\\n}\\n","styleUrl":"./input-task.property.component.scss"}],"stylesData":"","accessors":{"isOpen":{"name":"isOpen","setSignature":{"name":"isOpen","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":12,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"isOpen","type":"","returnType":"","line":23}}},"templateData":"<div class=\\"header\\">\\n  <span class=\\"label\\">{{ label }}</span>\\n  <span class=\\"icon\\" (click)=\\"isOpenChange.emit(!isOpen)\\">\\n    <app-icon [icon]=\\"isOpen ? faMinus : faPlus\\" size=\\"16px\\"></app-icon>\\n  </span>\\n</div>\\n<div #content class=\\"content\\" [style.max-height]=\\"currentHeight\\">\\n  <div class=\\"content-wrapper\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n"},{"name":"IntegrationEntryComponent","id":"component-IntegrationEntryComponent-c5cf56a08cb6615bdb6f95ebec1366a21c008a3072b25148cc9f45841c70de50484520d3fc2d09b1e6e15c0333262b9df4b90f91eda8bf646fe9e3c643988e43","file":"src/app/settings/components/integration-entry/integration-entry.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-integration-entry","styleUrls":["./integration-entry.component.scss"],"styles":[],"templateUrl":["./integration-entry.component.html"],"viewProviders":[],"inputsClass":[{"name":"description","deprecated":false,"deprecationMessage":"","line":11,"type":"string | null","decorators":[]},{"name":"integration","deprecated":false,"deprecationMessage":"","line":9,"type":"any","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"suspended","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"disconnect","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":14,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-integration-entry\',\\n  templateUrl: \'./integration-entry.component.html\',\\n  styleUrls: [\'./integration-entry.component.scss\'],\\n})\\nexport class IntegrationEntryComponent implements OnInit {\\n  @Input() integration?: any;\\n  @Input() label!: string;\\n  @Input() description?: string | null;\\n  @Input() suspended: boolean = false;\\n\\n  @Output() disconnect = new EventEmitter<any>();\\n\\n  constructor() {}\\n\\n  ngOnInit() {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".integration-entry {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 15px;\\n  border: 1px solid var(--color-secondary-300);\\n  border-radius: var(--border-radius);\\n\\n  &.suspended {\\n    opacity: 0.5;\\n  }\\n\\n  .labels {\\n    display: flex;\\n    width: 100%;\\n    align-items: center;\\n    margin-bottom: 0;\\n\\n    .description {\\n      display: block;\\n      padding-left: 0.5rem;\\n      opacity: 0.5;\\n    }\\n  }\\n}\\n","styleUrl":"./integration-entry.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":14},"implements":["OnInit"],"templateData":"<div class=\\"integration-entry\\" [class.suspended]=\\"suspended\\">\\n  <div class=\\"labels\\">\\n    <p class=\\"text-base label\\">\\n      {{ label }}\\n    </p>\\n    <p class=\\"text-base description\\">\\n      {{ description }}\\n    </p>\\n  </div>\\n  <div class=\\"actions\\">\\n    <app-button variant=\\"secondary\\" (click)=\\"disconnect.emit(integration)\\" i18n>Disconnect</app-button>\\n  </div>\\n</div>\\n"},{"name":"IntegrationGitHubComponent","id":"component-IntegrationGitHubComponent-4d5aca291ccd4523914b9eef52017af81498dffbca1988dd23ed3afe505da3fed35805b8e40a75a5e1856bb2c51bdea05a7615f4d99aaa8a1efccdd63b573185","file":"src/app/dashboard/modules/integration-modules/components/integration-github/integration-github.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-integration-github","styleUrls":["./integration-github.component.scss"],"styles":[],"templateUrl":["./integration-github.component.html"],"viewProviders":[],"inputsClass":[{"name":"project","deprecated":false,"deprecationMessage":"","line":34,"type":"Project","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"faGlobe","defaultValue":"faGlobe","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"faLock","defaultValue":"faLock","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"form","defaultValue":"new FormGroup({\\n    repository: new FormControl<string>(undefined, [requiredValidator()]),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"loader","defaultValue":"new Loader()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"repositories","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"GitRepository[]","optional":false,"description":"","line":36}],"methodsClass":[{"name":"connectToGithub","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""},{"name":"loadRepositories","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Injector, Input, OnInit } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { GitRepository } from \'@dashboard/interfaces/git-integration.interface\';\\nimport { GitIntegrationService } from \'@dashboard/services/git-integration/git-integration.service\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\nimport { IntegrationModule } from \'../../decorators/integration-module/integration-module.decorator\';\\nimport { IntegrationComponent } from \'../../interfaces/integration-component.interface\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { faGithub } from \'@fortawesome/free-brands-svg-icons\';\\nimport { faGlobe, faLock } from \'@fortawesome/free-solid-svg-icons\';\\nimport { map, of, switchMap } from \'rxjs\';\\nimport { Loader } from \'@main/classes/loader/loader.class\';\\nimport { startLoader, stopLoader } from \'./../../../../../_main/operators/loader.operator\';\\n\\n@IntegrationModule({\\n  title: \'GitHub\',\\n  description: \'Create GitHub issues simultaneously, connect pull requests with tasks.\',\\n  icon: faGithub,\\n  isAttached(project: Project): boolean {\\n    return Boolean(project.gitHubIntegration);\\n  },\\n  detach(project: Project, injector: Injector) {\\n    const gitIntegrationService = injector.get(GitIntegrationService);\\n\\n    return gitIntegrationService.deleteGitHubIntegration(project.id).pipe(map(() => true));\\n  },\\n})\\n@Component({\\n  selector: \'app-integration-github\',\\n  templateUrl: \'./integration-github.component.html\',\\n  styleUrls: [\'./integration-github.component.scss\'],\\n})\\nexport class IntegrationGitHubComponent implements OnInit, IntegrationComponent {\\n  @Input() project?: Project;\\n\\n  repositories: GitRepository[] = [];\\n\\n  public faGlobe = faGlobe;\\n  public faLock = faLock;\\n\\n  public loader = new Loader();\\n\\n  constructor(private gitIntegrationService: GitIntegrationService) {}\\n\\n  public form = new FormGroup({\\n    repository: new FormControl<string>(undefined, [requiredValidator()]),\\n  });\\n\\n  connectToGithub() {\\n    this.gitIntegrationService.startGitHubIntegration().subscribe(() => {\\n      this.loadRepositories();\\n    });\\n  }\\n\\n  loadRepositories() {\\n    of(null)\\n      .pipe(\\n        startLoader(this.loader),\\n        switchMap(() => this.gitIntegrationService.getGitHubIntegration()),\\n        stopLoader(this.loader),\\n      )\\n      .subscribe((integration) => {\\n        this.repositories = integration.gitRepositories;\\n      });\\n  }\\n\\n  save() {\\n    // Check if the form is valid and project was passed to the component\\n    if (!this.form.value.repository || !this.project) return of(null);\\n\\n    // Check if something was changed\\n    if (this.project.gitHubIntegration === this.form.value.repository) return of(null);\\n\\n    if (this.project.gitHubIntegration) {\\n      // Detach integration if project already has an integration and add new one\\n      return this.gitIntegrationService.deleteGitHubIntegration(this.project.id).pipe(\\n        switchMap(() => {\\n          return this.gitIntegrationService.attachGitHubIntegration(\\n            this.project!.id,\\n            this.form.value.repository,\\n          );\\n        }),\\n      );\\n    } else {\\n      // Attach integration if project doesn\'t have an integration\\n      return this.gitIntegrationService.attachGitHubIntegration(\\n        this.project.id,\\n        this.form.value.repository,\\n      );\\n    }\\n  }\\n\\n  ngOnInit() {\\n    this.loadRepositories();\\n\\n    if (this.project) {\\n      this.form.get(\'repository\').setValue(this.project.gitHubIntegration);\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"main {\\n  padding: 20px;\\n  background-color: var(--color-secondary-600);\\n  border-radius: var(--border-radius);\\n  color: var(--color-text);\\n\\n  section {\\n    display: flex;\\n    width: 100%;\\n    flex-direction: column;\\n    justify-content: space-between;\\n    color: var(--color-text);\\n\\n    .github {\\n      width: 100%;\\n    }\\n\\n    app-button {\\n      align-items: center;\\n      justify-content: center;\\n      margin-bottom: 20px;\\n    }\\n  }\\n}\\n\\n.repository-option ::ng-deep app-icon {\\n  opacity: 0.5;\\n}\\n","styleUrl":"./integration-github.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":""}],"line":41,"jsdoctags":[{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","IntegrationComponent"],"templateData":"<main>\\n  <h2 class=\\"text-xl font-bold mb-5\\">Github</h2>\\n\\n  <app-card>\\n    <div class=\\"card-content\\">\\n      <ng-container *ngIf=\\"repositories.length\\">\\n        <p i18n>You are already connected to at least one GitHub account, so you can choose repository to connect to the\\n          project or configure GitHub accounts and repositories.</p>\\n      </ng-container>\\n      <ng-container *ngIf=\\"!repositories.length\\">\\n        <p i18n>You don\'t have any connected GitHub accounts or any authorized repositories. You need to configure\\n          GitHub first.</p>\\n      </ng-container>\\n    </div>\\n    <div class=\\"card-actions flex justify-end\\">\\n      <app-button (click)=\'connectToGithub()\' type=\'button\' variant=\\"secondary\\" i18n>Configure Github</app-button>\\n    </div>\\n  </app-card>\\n\\n  <form [formGroup]=\\"form\\" autocomplete=\\"off\\" class=\\"mt-4\\">\\n\\n    \x3c!-- Repository select --\x3e\\n    <ng-container *ngIf=\\"!loader.pending\\">\\n      <app-select formControlName=\\"repository\\" floatingLabel=\\"Repository\\" i18n-floatingLabel>\\n        <app-option *ngFor=\\"let repository of repositories\\" [value]=\\"repository.fullName\\"\\n          [icon]=\\"repository.private ? faLock : faGlobe\\" class=\\"repository-option\\">\\n          <span class=\\"opacity-50\\">@</span>\\n          {{repository.fullName.split(\'/\')[0]}}\\n          <span class=\\"opacity-50\\">/</span>\\n          {{repository.fullName.split(\'/\')[1]}}\\n        </app-option>\\n      </app-select>\\n    </ng-container>\\n\\n  </form>\\n</main>\\n"},{"name":"IntegrationModuleSelectDialog","id":"component-IntegrationModuleSelectDialog-62516db20a49bbfb966abdc8cf0dc2f4a6117b9533b664395e169bf41609ee72690ac358c908032df09638c76ad4f43fcdcca435a759c7f37ffb903b822853e4","file":"src/app/dashboard/modules/integration-modules/dialogs/integration-module-select/integration-module-select.dialog.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"templateUrl":["./integration-module-select.dialog.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"IntegrationModuleSelectDialogData","optional":false,"description":"","line":25,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123]},{"name":"form","defaultValue":"new FormGroup(\\n    Object.fromEntries(\\n      this.modules$.value.map((module) => [module.id, new FormControl<boolean>()]),\\n    ),\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"modules$","defaultValue":"this.integrationModuleService.registry$","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]}],"methodsClass":[{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Inject, OnInit } from \'@angular/core\';\\nimport { MatDialogRef, MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { IntegrationModuleService } from \'@dashboard/modules/integration-modules/services/integration-module/integration-module.service\';\\nimport { IntegrationModuleEntry } from \'@main/interfaces/integration-module.interface\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\n\\nexport interface IntegrationModuleSelectDialogData {\\n  modules: IntegrationModuleEntry[];\\n}\\n\\n@Component({\\n  templateUrl: \'./integration-module-select.dialog.html\',\\n})\\nexport class IntegrationModuleSelectDialog implements OnInit {\\n  public modules$ = this.integrationModuleService.registry$;\\n  public form = new FormGroup(\\n    Object.fromEntries(\\n      this.modules$.value.map((module) => [module.id, new FormControl<boolean>()]),\\n    ),\\n  );\\n\\n  constructor(\\n    private integrationModuleService: IntegrationModuleService,\\n    private dialogRef: MatDialogRef<IntegrationModuleSelectDialog>,\\n    @Inject(MAT_DIALOG_DATA) public data: IntegrationModuleSelectDialogData,\\n  ) {}\\n\\n  ngOnInit() {\\n    this.form.patchValue(Object.fromEntries(this.data.modules.map((module) => [module.id, true])));\\n  }\\n\\n  close() {\\n    const modulesMap = new Map(this.modules$.value.map((m) => [m.id, m]));\\n\\n    this.dialogRef.close(\\n      Object.entries(this.form.value)\\n        .filter(([_, state]) => state)\\n        .map(([moduleId]) => modulesMap.get(moduleId)),\\n    );\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"integrationModuleService","type":"IntegrationModuleService","deprecated":false,"deprecationMessage":""},{"name":"dialogRef","type":"MatDialogRef<IntegrationModuleSelectDialog>","deprecated":false,"deprecationMessage":""},{"name":"data","type":"IntegrationModuleSelectDialogData","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"integrationModuleService","type":"IntegrationModuleService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogRef","type":"MatDialogRef<IntegrationModuleSelectDialog>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"IntegrationModuleSelectDialogData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h1 mat-dialog-title i18n>Integration modules selection</h1>\\n<div mat-dialog-content>\\n  <p class=\\"text-base mb-5\\" i18n>\\n    Select one or more integration modules to integration your project with external services.\\n  </p>\\n  <div class=\\"flex flex-wrap\\">\\n    <selectable-integration *ngFor=\\"let module of modules$ | async; index as i\\" [title]=\\"module.title\\"\\n      [description]=\\"module.description\\" [icon]=\\"module.icon\\" [formControl]=\\"form.get(module.id)\\" class=\\"mb-2\\">\\n    </selectable-integration>\\n  </div>\\n</div>\\n<div mat-dialog-actions>\\n  <app-button type=\\"button\\" variant=\\"primary\\" (click)=\\"close()\\" i18n>Save</app-button>\\n</div>\\n"},{"name":"IntegrationModulesGridComponent","id":"component-IntegrationModulesGridComponent-281cd5f7eee4929525eda39771b24b26aa25f35a1d53b41c1bf7df89b39927d1ba2dc980755a38b0633d1e6a7db698f234d319e40b8f6567f145a9aac746dfc2","file":"src/app/dashboard/components/integration-modules-grid/integration-modules-grid.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"integration-modules-grid","styleUrls":["./integration-modules-grid.component.scss"],"styles":[],"templateUrl":["./integration-modules-grid.component.html"],"viewProviders":[],"inputsClass":[{"name":"project","deprecated":false,"deprecationMessage":"","line":24,"type":"Project | undefined","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_project","deprecated":false,"deprecationMessage":"","type":"Project","optional":true,"description":"","line":33,"modifierKind":[121]},{"name":"grid","deprecated":false,"deprecationMessage":"","type":"ViewContainerRef","optional":false,"description":"","line":35,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'grid\', {read: ViewContainerRef}"}]},{"name":"integratedModules","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IntegrationModuleEntry[]","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"modulesToIntegrate","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IntegrationModuleEntry[]","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"selectedModules","defaultValue":"new Map<string, ComponentRef<IntegrationComponent>>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37,"modifierKind":[123]}],"methodsClass":[{"name":"createModuleComponents","args":[{"name":"modules","type":"IntegrationModuleEntry[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"modules","type":"IntegrationModuleEntry[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""},{"name":"openIntegrationModuleSelectDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":""},{"name":"saveAll","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":101,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  Component,\\n  ComponentRef,\\n  Input,\\n  ViewChild,\\n  ViewContainerRef,\\n  OnInit,\\n  AfterViewInit,\\n  Injector,\\n} from \'@angular/core\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { faPlus } from \'@fortawesome/free-solid-svg-icons\';\\nimport { IntegrationModuleService } from \'@dashboard/modules/integration-modules/services/integration-module/integration-module.service\';\\nimport { IntegrationModuleEntry } from \'@main/interfaces/integration-module.interface\';\\nimport { IntegrationComponent } from \'@dashboard/modules/integration-modules/interfaces/integration-component.interface\';\\nimport { defaultIfEmpty, forkJoin, of, switchMap } from \'rxjs\';\\n\\n@Component({\\n  selector: \'integration-modules-grid\',\\n  templateUrl: \'./integration-modules-grid.component.html\',\\n  styleUrls: [\'./integration-modules-grid.component.scss\'],\\n})\\nexport class IntegrationModulesGridComponent implements OnInit, AfterViewInit {\\n  @Input() set project(project: Project | undefined) {\\n    this._project = project;\\n    for (const module of this.selectedModules.values()) {\\n      module.instance.project = project;\\n    }\\n  }\\n  get project(): Project | undefined {\\n    return this._project;\\n  }\\n  private _project?: Project;\\n\\n  @ViewChild(\'grid\', { read: ViewContainerRef }) grid!: ViewContainerRef;\\n\\n  public selectedModules = new Map<string, ComponentRef<IntegrationComponent>>();\\n  public integratedModules: IntegrationModuleEntry[] = [];\\n  public modulesToIntegrate: IntegrationModuleEntry[] = [];\\n\\n  /** @ignore */\\n  faPlus = faPlus;\\n\\n  constructor(\\n    private integrationModuleService: IntegrationModuleService,\\n    private injector: Injector,\\n  ) {}\\n\\n  ngOnInit() {\\n    const modules = this.integrationModuleService.registry$.value;\\n    const integratedModules = [];\\n\\n    for (const module of modules) {\\n      if (this.project && module.isAttached(this.project, this.injector)) {\\n        integratedModules.push(module);\\n      }\\n    }\\n\\n    this.integratedModules = integratedModules;\\n    this.modulesToIntegrate = [...integratedModules];\\n  }\\n\\n  ngAfterViewInit() {\\n    this.createModuleComponents(this.integratedModules);\\n  }\\n\\n  openIntegrationModuleSelectDialog() {\\n    this.integrationModuleService\\n      .openIntegrationModuleSelectDialog({\\n        modules: this.modulesToIntegrate,\\n      })\\n      .afterClosed()\\n      .subscribe((res) => {\\n        if (!res) return;\\n\\n        this.modulesToIntegrate = res;\\n        this.createModuleComponents(res);\\n      });\\n  }\\n\\n  createModuleComponents(modules: IntegrationModuleEntry[]) {\\n    // Add all new selected integration modules\\n    for (const module of modules) {\\n      if (!this.selectedModules.has(module.id)) {\\n        const componentRef = this.grid.createComponent<IntegrationComponent>(module.component);\\n        componentRef.instance.project = this.project;\\n        this.selectedModules.set(module.id, componentRef);\\n      }\\n    }\\n\\n    // Remove deselected integration modules from view\\n    const selectedIds = modules.map((m) => m.id);\\n    for (const [moduleId, componentRef] of this.selectedModules.entries()) {\\n      if (!selectedIds.includes(moduleId)) {\\n        componentRef.destroy();\\n        this.selectedModules.delete(moduleId);\\n      }\\n    }\\n  }\\n\\n  saveAll() {\\n    const modules = [...this.selectedModules.values()];\\n    const modulesToDetach = this.integratedModules.filter((m) => !this.selectedModules.has(m.id));\\n\\n    return forkJoin([\\n      ...modules.map((module: ComponentRef<IntegrationComponent>) => module.instance.save()),\\n      ...modulesToDetach.map((module: IntegrationModuleEntry) =>\\n        module.detach(this.project as Project, this.injector),\\n      ),\\n    ]).pipe(\\n      defaultIfEmpty([]),\\n      switchMap(() => of(this.project as Project)),\\n    );\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n}\\n\\n.empty-list {\\n  border-radius: var(--border-radius);\\n  background-color: var(--color-secondary-800);\\n  padding: 1rem;\\n  margin-top: 1rem;\\n\\n  span {\\n    opacity: 0.5;\\n    color: var(--color-text);\\n  }\\n}\\n\\n.grid {\\n  display: flex !important;\\n  flex-wrap: wrap;\\n  margin-right: -1rem;\\n  margin-top: 1rem;\\n\\n  &::ng-deep>* {\\n    flex-grow: 1;\\n    margin-bottom: 1rem;\\n    margin-right: 1rem;\\n    min-width: 300px;\\n    max-width: 600px;\\n  }\\n}\\n","styleUrl":"./integration-modules-grid.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"integrationModuleService","type":"IntegrationModuleService","deprecated":false,"deprecationMessage":""},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""}],"line":42,"jsdoctags":[{"name":"integrationModuleService","type":"IntegrationModuleService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","AfterViewInit"],"accessors":{"project":{"name":"project","setSignature":{"name":"project","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"project","type":"Project | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":24,"jsdoctags":[{"name":"project","type":"Project | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"project","type":"","returnType":"Project | undefined","line":30}}},"templateData":"<div class=\\"flex justify-between\\">\\n  <h4 class=\\"text-xl flex items-center\\" i18n>Integration modules</h4>\\n  <app-button type=\\"button\\" class=\\"ml-2\\" [icon]=\\"faPlus\\" (click)=\\"openIntegrationModuleSelectDialog()\\" i18n>\\n    Add modules\\n  </app-button>\\n</div>\\n<div>\\n  <div [class.hidden]=\\"selectedModules.size === 0\\" class=\\"grid\\">\\n    <template #grid></template>\\n  </div>\\n  <div class=\\"empty-list\\" *ngIf=\\"selectedModules.size === 0\\">\\n    <span class=\\"text-base\\">\\n      There is no integration modules added to this list. Use \\"Add modules\\" to add one.\\n    </span>\\n  </div>\\n</div>\\n"},{"name":"LandingPageComponent","id":"component-LandingPageComponent-a0b8a9d921554afea98ce97c9f6f12e511f5ce16492256d97e52e4d534b9a58e6b6dcd12317ebdef61e6afeaebc148a51a0c09ba375032475043f63b867bce24","file":"src/app/landing-page/landing-page/landing-page.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-landing-page","styleUrls":["./landing-page.component.scss"],"styles":[],"templateUrl":["./landing-page.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-landing-page\',\\n  templateUrl: \'./landing-page.component.html\',\\n  styleUrls: [\'./landing-page.component.scss\'],\\n})\\nexport class LandingPageComponent {\\n  constructor() {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./landing-page.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"templateData":"<img [src]=\\"\'assets/landing-page/Landing-page.svg\'\\" />\\n"},{"name":"ListGroupComponent","id":"component-ListGroupComponent-cdced3d92be5704b0d50b4728ab563538677f6710a454ab1c0e2d91584be52816138ac147ddb4c804f39e845ce9fdbe15e2cb8eba4c883eebdd4aee2abcae5bf","file":"src/app/settings/components/list-group/list-group.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-list-group","styleUrls":["./list-group.component.scss"],"styles":[],"templateUrl":["./list-group.component.html"],"viewProviders":[],"inputsClass":[{"name":"label","deprecated":false,"deprecationMessage":"","line":9,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-list-group\',\\n  templateUrl: \'./list-group.component.html\',\\n  styleUrls: [\'./list-group.component.scss\'],\\n})\\nexport class ListGroupComponent implements OnInit {\\n  @Input() label!: string;\\n\\n  constructor() {}\\n\\n  ngOnInit() {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  border-bottom: 1px solid var(--color-secondary-300);\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\nh4 {\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  padding: 5px 0;\\n  color: var(--color-secondary-300);\\n  font-weight: bold;\\n}\\n","styleUrl":"./list-group.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":9},"implements":["OnInit"],"templateData":"<h4 class=\\"text-label\\">\\n  {{ label }}\\n</h4>\\n<ng-content select=\\".suffix\\"></ng-content>\\n"},{"name":"LoaderComponent","id":"component-LoaderComponent-10362619c8fd0a7418d7b108272821d4f911522c20fb8449f321a734c842bdf38b9ea46d9cf23e3289ab6a76af4dff23979cf4e0c65c7b8fd90790bde93d76f5","file":"src/app/_main/components/loader/loader.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"loader","styleUrls":["./loader.component.scss"],"styles":[],"templateUrl":["./loader.component.html"],"viewProviders":[],"inputsClass":[{"name":"size","defaultValue":"\'1rem\'","deprecated":false,"deprecationMessage":"","line":9,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, HostBinding, Input } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'loader\',\\n  templateUrl: \'./loader.component.html\',\\n  styleUrls: [\'./loader.component.scss\'],\\n})\\nexport class LoaderComponent {\\n  @HostBinding(\'style.width\') @HostBinding(\'style.height\') @Input() size = \'1rem\';\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n}\\n\\n@-webkit-keyframes spin {\\n  to {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes spin {\\n  to {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n.loader {\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  position: relative;\\n}\\n\\n/** @author jh3y */\\n.loader:before {\\n  -webkit-animation: spin .5s infinite linear;\\n  animation: spin .5s infinite linear;\\n  border-radius: 100%;\\n  -webkit-box-shadow: inset -2px 0 0 0px var(--color-text);\\n  box-shadow: inset -2px 0 0 0px var(--color-text);\\n  content: \'\';\\n  height: 100%;\\n  position: absolute;\\n  width: 100%;\\n  display: block;\\n}\\n","styleUrl":"./loader.component.scss"}],"stylesData":"","templateData":"<span class=\\"loader\\"></span>\\n"},{"name":"LoginPage","id":"component-LoginPage-90497a812898c0fa25a5a78b09890369aa848767be9a6f76bea1a6321c1a964e459b7ecc4035444f975fbf6a14815178c373b18b7a90255ea69929cbaa63d033","file":"src/app/auth/pages/login/login.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-login","styleUrls":["./login.page.scss"],"styles":[],"templateUrl":["./login.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"error","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":22,"modifierKind":[123]},{"name":"form","defaultValue":"new FormGroup({\\n    email: new FormControl(\'\', [requiredValidator()], []),\\n    password: new FormControl(\'\', [requiredValidator()], []),\\n    remember: new FormControl<boolean>(false, [], []),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Form group for login.</p>\\n","line":27,"rawdescription":"\\n\\nForm group for login.\\n","modifierKind":[123]},{"name":"loginSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":true,"description":"","line":21,"modifierKind":[121]}],"methodsClass":[{"name":"handleError","args":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"login","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { Router } from \'@angular/router\';\\nimport { UserService } from \'@auth/services/user/user.service\';\\nimport { catchError, EMPTY, Subscription } from \'rxjs\';\\nimport { requiredValidator } from \'src/app/_main/validators/required.validator\';\\nimport { AuthService } from \'@auth/services/auth/auth.service\';\\n\\n@Component({\\n  selector: \'app-login\',\\n  templateUrl: \'./login.page.html\',\\n  styleUrls: [\'./login.page.scss\'],\\n})\\nexport class LoginPage implements OnInit {\\n  constructor(\\n    private authService: AuthService,\\n    private userService: UserService,\\n    private router: Router,\\n  ) {}\\n\\n  private loginSubscription?: Subscription;\\n  public error?: string;\\n\\n  /**\\n   * Form group for login.\\n   */\\n  public form = new FormGroup({\\n    email: new FormControl(\'\', [requiredValidator()], []),\\n    password: new FormControl(\'\', [requiredValidator()], []),\\n    remember: new FormControl<boolean>(false, [], []),\\n  });\\n\\n  ngOnInit() {\\n    this.userService.getMyself().subscribe(() => {\\n      localStorage.setItem(\'logged\', \'true\');\\n      this.router.navigate([\'/\']);\\n    });\\n  }\\n\\n  login() {\\n    if (this.loginSubscription && !this.loginSubscription.closed) return;\\n\\n    this.form.markAllAsTouched();\\n    this.form.updateValueAndValidity();\\n\\n    if (this.form.valid) {\\n      this.loginSubscription = this.authService\\n        .login(this.form.value)\\n        .pipe(\\n          catchError((e) => {\\n            this.handleError(e);\\n            return EMPTY;\\n          }),\\n        )\\n        .subscribe((response) => {\\n          if (response.deleted) {\\n            this.router.navigate([\'/auth/restore-account\']);\\n          } else {\\n            localStorage.setItem(\'logged\', \'true\');\\n            this.router.navigate([\'/\']);\\n          }\\n        });\\n    }\\n  }\\n\\n  handleError(error: any) {\\n    switch (error.status) {\\n      case 403:\\n        this.error = $localize`User is already logged`;\\n        break;\\n      case 404:\\n        this.error = $localize`Wrong username or password`;\\n        break;\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".logo {\\n  width: calc(100% - 80px);\\n  height: 64px;\\n  margin-top: 20px;\\n  background-image: url(\'/assets/metadata/logo_with_name.svg\');\\n  background-position: 0 50%;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n  cursor: pointer;\\n}\\n\\n.main {\\n  display: flex;\\n  width: 100%;\\n  min-height: 100vh;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: var(--color-neutral-800);\\n\\n  .box {\\n    display: flex;\\n    width: 100%;\\n    height: 100%;\\n\\n    .form-side {\\n      display: flex;\\n      width: 100%;\\n      height: 100%;\\n      flex-direction: column;\\n      align-items: center;\\n      justify-content: space-between;\\n      background-color: var(--color-gray-800);\\n\\n      form {\\n        display: flex;\\n        width: 100%;\\n        height: 100%;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        justify-content: center;\\n        padding: 4rem;\\n\\n        &>*:not(:last-child) {\\n          margin-bottom: 1.5rem;\\n        }\\n\\n        h2 {\\n          margin-bottom: 0.5rem;\\n        }\\n\\n        .remember-me {\\n          margin-bottom: 1.5rem;\\n        }\\n\\n        app-input {\\n          width: 100%;\\n        }\\n\\n        app-button {\\n          align-self: flex-end;\\n        }\\n\\n        a {\\n          color: var(--color-link);\\n          cursor: pointer;\\n          transition: color 0.2s ease;\\n\\n          &:hover {\\n            color: var(--color-link-hover);\\n          }\\n        }\\n      }\\n    }\\n\\n    .image-side {\\n      background-color: var(--color-gray-700);\\n    }\\n  }\\n}\\n\\n@screen sm {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen md {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen lg {\\n  .main {\\n    .box {\\n      width: 950px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 450px;\\n      }\\n    }\\n  }\\n}\\n\\n@screen xl {\\n  .main {\\n    .box {\\n      width: 1240px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 520px;\\n      }\\n\\n      .image-side {\\n        width: 720px;\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./login.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<section class=\\"main\\">\\n  <section class=\\"box\\">\\n    <section class=\\"form-side\\">\\n      <div class=\\"logo\\" routerLink=\\"/\\"></div>\\n      <form [formGroup]=\\"form\\" (submit)=\\"login()\\">\\n        <div>\\n          <h2 class=\\"text-xl font-bold\\" i18n>Login to system</h2>\\n          <p class=\\"text-base\\" i18n>This is a secure site. Please enter your login information to enter or <a\\n              routerLink=\\"/auth/register\\">click here</a> to register.</p>\\n        </div>\\n\\n        <div *ngIf=\\"error\\" class=\\"error-box\\">\\n          {{ error }}\\n        </div>\\n\\n        <app-input formControlName=\\"email\\" type=\\"email\\" placeholder=\\"name@example.com\\" floatingLabel=\\"Email or Username\\"\\n          i18n-floatingLabel i18n-placeholder></app-input>\\n\\n        <app-input formControlName=\\"password\\" type=\\"password\\" placeholder=\\"●●●●●●●\\" floatingLabel=\\"Password\\"\\n          i18n-floatingLabel i18n-placeholder></app-input>\\n\\n        <p class=\\"text-base\\" i18n>Forgot your password? <a routerLink=\\"/auth/password-reset\\">Reset password</a>.</p>\\n\\n        <div class=\\"remember-me\\">\\n          <app-checkbox formControlName=\\"remember\\" i18n>Remember me</app-checkbox>\\n        </div>\\n\\n        <app-button variant=\\"primary\\" i18n>Log in</app-button>\\n\\n      </form>\\n    </section>\\n    <section class=\\"image-side\\">\\n\\n    </section>\\n  </section>\\n</section>\\n"},{"name":"MainViewComponent","id":"component-MainViewComponent-b17866ff668562fcb7108dbecf8dcf429d04eb89fd8b736d4b2f620df920cbd95c7b1ac5cbbf767717424240265ee314b171090cce12838cc2041a085a03f47a","file":"src/app/_main/components/main-view/main-view.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-main-view","styleUrls":["./main-view.component.scss"],"styles":[],"templateUrl":["./main-view.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"DialogOutlet","defaultValue":"DialogOutlet","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"hideNavigation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"version","defaultValue":"environment.version","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { DialogOutlet } from \'@main/services/dialog/dialog.service\';\\nimport { environment } from \'src/environments/environment\';\\nimport { ActivatedRoute, Router, RoutesRecognized } from \'@angular/router\';\\nimport { RouterExtensionsService } from \'@main/services/router-extensions/router-extensions.service\';\\n\\n@Component({\\n  selector: \'app-main-view\',\\n  templateUrl: \'./main-view.component.html\',\\n  styleUrls: [\'./main-view.component.scss\'],\\n})\\nexport class MainViewComponent implements OnInit {\\n  public version = environment.version;\\n\\n  public DialogOutlet = DialogOutlet;\\n\\n  public hideNavigation = false;\\n\\n  constructor(private routerExtensions: RouterExtensionsService) {}\\n\\n  ngOnInit() {\\n    const data = this.routerExtensions.snapshot.data;\\n    this.hideNavigation = data.hideNavigation;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  background-color: var(--color-secondary-700);\\n}\\n\\nsection {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column;\\n  flex-grow: 1;\\n  overflow-x: hidden;\\n\\n  .content {\\n    display: flex;\\n    width: 100%;\\n    height: 100%;\\n    flex-direction: row;\\n\\n    main {\\n      width: 100%;\\n      height: 100%;\\n      overflow-x: hidden;\\n      overflow-y: auto;\\n    }\\n  }\\n}\\n\\n.version {\\n  position: absolute;\\n  bottom: 1rem;\\n  left: 1em;\\n  color: var(--color-text);\\n  opacity: 0.5;\\n}","styleUrl":"./main-view.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"routerExtensions","type":"RouterExtensionsService","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"routerExtensions","type":"RouterExtensionsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<app-sidebar-navigation *ngIf=\\"!hideNavigation\\"></app-sidebar-navigation>\\n\\n<section>\\n  <app-upper-navigation *ngIf=\\"!hideNavigation\\"></app-upper-navigation>\\n\\n  <app-snackbar-outlet></app-snackbar-outlet>\\n\\n  <section class=\\"content\\">\\n    <main>\\n      <router-outlet></router-outlet>\\n    </main>\\n\\n    <app-dialog-outlet [outlet]=\\"DialogOutlet.CONTENT_RIGHT\\"></app-dialog-outlet>\\n  </section>\\n</section>\\n\\n<span class=\\"version\\">{{ version }}</span>\\n"},{"name":"MemberListComponent","id":"component-MemberListComponent-b1b4ef1eccbebf4141d1c6dfe5b0053111b1aff3a3a02b5e3b2974303bd593a05fc6916f37bc009f314f289ba2817ff691a47393e0406bd48f29a612c6a0ab7b","file":"src/app/dashboard/components/member-list/member-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"member-list","styleUrls":["./member-list.component.scss"],"styles":[],"templateUrl":["./member-list.component.html"],"viewProviders":[],"inputsClass":[{"name":"members","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":13,"type":"(ProjectMember | string)[]","decorators":[]},{"name":"projectId","deprecated":false,"deprecationMessage":"","line":12,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"deleteMember","args":[{"name":"id","type":"number[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"number[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { ProjectMember } from \'@dashboard/interfaces/project-member.interface\';\\nimport { MemberService } from \'@dashboard/services/member/member.service\';\\nimport { isString } from \'lodash-es\';\\n\\n@Component({\\n  selector: \'member-list\',\\n  templateUrl: \'./member-list.component.html\',\\n  styleUrls: [\'./member-list.component.scss\'],\\n})\\nexport class MemberListComponent {\\n  @Input() projectId?: number;\\n  @Input() members: (ProjectMember | string)[] = [];\\n\\n  public get oldMembers(): ProjectMember[] {\\n    return this.members.filter((m) => !isString(m)) as ProjectMember[];\\n  }\\n\\n  public get newMembers(): string[] {\\n    return this.members.filter((m) => isString(m)) as string[];\\n  }\\n\\n  constructor(private memberService: MemberService) {}\\n\\n  deleteMember(id: number[]) {\\n    if (!this.projectId) return;\\n\\n    this.memberService.remove(this.projectId, id).subscribe(() => {\\n      location.reload();\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./member-list.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"oldMembers":{"name":"oldMembers","getSignature":{"name":"oldMembers","type":"[]","returnType":"ProjectMember[]","line":15}},"newMembers":{"name":"newMembers","getSignature":{"name":"newMembers","type":"[]","returnType":"string[]","line":19}}},"templateData":"\x3c!-- Table --\x3e\\n<table *ngIf=\\"oldMembers.length\\" mat-table [dataSource]=\\"oldMembers\\">\\n\\n  \x3c!-- Name column --\x3e\\n  <ng-container matColumnDef=\\"username\\">\\n    <th mat-header-cell *matHeaderCellDef i18n>Username</th>\\n    <td mat-cell *matCellDef=\\"let row\\"> {{ row.user.username }} </td>\\n  </ng-container>\\n\\n  \x3c!-- Statistics column --\x3e\\n  <ng-container matColumnDef=\\"email\\">\\n    <th mat-header-cell *matHeaderCellDef i18n>Email</th>\\n    <td mat-cell *matCellDef=\\"let row\\"> {{ row.user.email }} </td>\\n  </ng-container>\\n\\n  \x3c!-- Name column --\x3e\\n  <ng-container matColumnDef=\\"name\\">\\n    <th mat-header-cell *matHeaderCellDef i18n>Name</th>\\n    <td mat-cell *matCellDef=\\"let row\\"> {{ row.user.name }} </td>\\n  </ng-container>\\n\\n  \x3c!-- Surname column --\x3e\\n  <ng-container matColumnDef=\\"surname\\">\\n    <th mat-header-cell *matHeaderCellDef i18n>Surname</th>\\n    <td mat-cell *matCellDef=\\"let row\\"> {{ row.user.surname }} </td>\\n  </ng-container>\\n\\n  \x3c!-- Actions column --\x3e\\n  <ng-container matColumnDef=\\"actions\\">\\n    <th mat-header-cell *matHeaderCellDef i18n></th>\\n    <td mat-cell *matCellDef=\\"let row\\" class=\\"action-cell\\">\\n      <button mat-icon-button [matMenuTriggerFor]=\\"menu\\" class=\\"flex items-center\\">\\n        <app-icon icon=\\"matMoreVert\\"></app-icon>\\n      </button>\\n      <mat-menu #menu=\\"matMenu\\">\\n        <button mat-menu-item class=\\"important\\" (click)=\\"deleteMember([row.user.id])\\">\\n          <span i18n>Delete member</span>\\n        </button>\\n      </mat-menu>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\"[\'username\', \'email\', \'name\', \'surname\', \'actions\']\\"></tr>\\n  <tr mat-row *matRowDef=\\"let row; columns: [\'username\', \'email\', \'name\', \'surname\', \'actions\'];\\"></tr>\\n</table>\\n\\n<table *ngIf=\\"newMembers.length\\" mat-table [dataSource]=\\"newMembers\\">\\n\\n  \x3c!-- Username or email column --\x3e\\n  <ng-container matColumnDef=\\"username\\">\\n    <th mat-header-cell *matHeaderCellDef i18n>Username or Email</th>\\n    <td mat-cell *matCellDef=\\"let row\\"> {{ row }} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\"[\'username\']\\"></tr>\\n  <tr mat-row *matRowDef=\\"let row; columns: [\'username\'];\\"></tr>\\n</table>\\n"},{"name":"MockPage","id":"component-MockPage-865f6eb0c96c63b17b6e46014552756a890e80d900961cd9d0b3d287fed05ecc624545d2b4de51e82a09880279684e6e6f72b653e81e8560ef760b744a1591b9","file":"src/app/_main/pages/mock/mock.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-mock","styleUrls":["./mock.page.scss"],"styles":[],"templateUrl":["./mock.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"image","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-mock\',\\n  templateUrl: \'./mock.page.html\',\\n  styleUrls: [\'./mock.page.scss\'],\\n})\\nexport class MockPage implements OnInit {\\n  constructor(private activatedRoute: ActivatedRoute) {}\\n\\n  public image: string = \'\';\\n\\n  ngOnInit() {\\n    this.activatedRoute.data.subscribe(({ image }) => {\\n      this.image = image;\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"img {\\n  width: 100%;\\n  border: 4px solid #f39c12;\\n}\\n\\n:host {\\n  position: relative;\\n  display: block;\\n  text-align: center;\\n\\n  &::after {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    display: block;\\n    padding: 1rem 4rem;\\n    background-color: #f39c12;\\n    border-radius: var(--border-radius);\\n    color: #222;\\n    content: \'Work in progress\';\\n    font-weight: bold;\\n    text-align: center;\\n    transform: translate(-50%, -50%);\\n  }\\n}\\n","styleUrl":"./mock.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<img [src]=\\"image\\" />\\n"},{"name":"NavElementComponent","id":"component-NavElementComponent-a569d8f03df1a64a5b8090450ca7273a6083fbd365543f0524790532e11ea52a8fb2dd8540f975e11a0810664458d8cf49908ce283618c5e1a7d25e0592240c2","file":"src/app/_main/components/nav-element/nav-element.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-nav-element","styleUrls":["./nav-element.component.scss"],"styles":[],"templateUrl":["./nav-element.component.html"],"viewProviders":[],"inputsClass":[{"name":"routerLink","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"showOptions","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"active","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"faAngleDown","defaultValue":"faAngleDown","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24},{"name":"listElement","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":true,"description":"","line":22,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'elementList\'"}]},{"name":"showArrow$","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":19,"modifierKind":[123]}],"methodsClass":[{"name":"closeNavElement","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":""},{"name":"openNavElement","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleNavElement","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, ElementRef, ViewChild, AfterViewInit } from \'@angular/core\';\\nimport { faAngleDown } from \'@fortawesome/free-solid-svg-icons\';\\nimport { BehaviorSubject } from \'rxjs\';\\n\\n@Component({\\n  selector: \'app-nav-element\',\\n  templateUrl: \'./nav-element.component.html\',\\n  styleUrls: [\'./nav-element.component.scss\'],\\n})\\nexport class NavElementComponent implements AfterViewInit {\\n  @Input()\\n  public routerLink?: string;\\n\\n  @Input()\\n  public showOptions?: boolean;\\n\\n  public active: boolean = false;\\n\\n  public showArrow$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\\n\\n  @ViewChild(\'elementList\')\\n  listElement?: ElementRef;\\n\\n  faAngleDown = faAngleDown;\\n\\n  constructor() {}\\n\\n  public openNavElement() {\\n    this.active = true;\\n  }\\n  public closeNavElement() {\\n    this.active = false;\\n  }\\n  public toggleNavElement() {\\n    if (!this.active) {\\n      this.openNavElement();\\n    } else {\\n      this.closeNavElement();\\n    }\\n  }\\n\\n  ngAfterViewInit(): void {\\n    setTimeout(() => {\\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../styles/typography\';\\n\\n:host {\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: auto;\\n}\\n\\nsection {\\n  @include text-title;\\n\\n  display: flex;\\n  width: 100%;\\n  height: 46px;\\n  align-items: center;\\n  justify-content: space-between;\\n  color: var(--color-neutral-300);\\n  cursor: pointer;\\n  transition: color 0.2s ease-in-out;\\n\\n  .element {\\n    display: flex;\\n    width: 100%;\\n    height: 100%;\\n    align-items: center;\\n    padding: 0 0 0 20px;\\n  }\\n\\n  .icons {\\n    display: flex;\\n    height: 100%;\\n    align-items: center;\\n\\n    .options {\\n      display: flex;\\n      height: 100%;\\n      align-items: center;\\n      padding: 0 5px 0 0;\\n    }\\n\\n    .open-below {\\n      display: flex;\\n      height: 100%;\\n      align-items: center;\\n      justify-content: center;\\n      padding: 0 5px;\\n\\n      // padding: 0 5px;\\n\\n      app-icon {\\n        display: flex;\\n        justify-content: center;\\n\\n        &.active {\\n          transform: scaleY(-1);\\n        }\\n      }\\n    }\\n\\n    .options button {\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n  }\\n\\n  &:hover {\\n    color: var(--color-text);\\n  }\\n}\\n\\n.list {\\n  display: none;\\n  width: 100%;\\n  cursor: pointer;\\n\\n  &.active {\\n    display: block;\\n    justify-content: center;\\n    background-color: var(--color-secondary-600);\\n  }\\n}\\n\\n.hidden {\\n  visibility: hidden;\\n}\\n","styleUrl":"./nav-element.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":24},"implements":["AfterViewInit"],"templateData":"<section>\\n  <div class=\\"element\\" (click)=\\"toggleNavElement()\\">\\n    <fa-icon></fa-icon>\\n    <ng-content></ng-content>\\n  </div>\\n  <div class=\\"icons\\">\\n    <div class=\\"open-below\\" [class.hidden]=\\"(showArrow$ | async) === false\\" (click)=\\"toggleNavElement()\\">\\n      <app-icon [icon]=\\"faAngleDown\\" size=\\"16px\\" [class.active]=\\"active\\"></app-icon>\\n    </div>\\n    <div class=\\"options\\" [class.hidden]=\\"!showOptions\\" [matMenuTriggerFor]=\\"menu\\">\\n      <button mat-icon-button aria-label=\\"Menu\\">\\n        <mat-icon>more_vert</mat-icon>\\n      </button>\\n      <mat-menu #menu=\\"matMenu\\">\\n        <ng-content select=\\".options\\"></ng-content>\\n      </mat-menu>\\n    </div>\\n  </div>\\n</section>\\n<div class=\\"list\\" #elementList [class.active]=\\"active\\">\\n  <ng-content select=\\".open-below\\"></ng-content>\\n</div>\\n"},{"name":"NavElementWorkspaceComponent","id":"component-NavElementWorkspaceComponent-460abf24826f858e4694b2a933043ebfeb42541b1b34748f0c8bb9f2774e21ff652e50404485844fe088ebb6c5544525571771ec6fa7d1906ab788f33814abcf","file":"src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-nav-element-workspace","styleUrls":["./nav-element-workspace.component.scss"],"styles":[],"templateUrl":["./nav-element-workspace.component.html"],"viewProviders":[],"inputsClass":[{"name":"routerLink","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"workspace","defaultValue":"{ id: -1 } as unknown as Workspace","deprecated":false,"deprecationMessage":"","line":21,"type":"Workspace","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"activeWorkspace","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"faAngleDown","defaultValue":"faAngleDown","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23},{"name":"listElement","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":true,"description":"","line":29,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'elementList\'"}]},{"name":"showArrow$","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":26,"modifierKind":[123]}],"methodsClass":[{"name":"closeWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createProject","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":""},{"name":"deleteProject","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"deleteWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":""},{"name":"editProject","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"editWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":""},{"name":"openWithLocalVSCode","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openWithLocalVSCodeInsiders","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openWithVSCode","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"routeToProject","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"routeToWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":""},{"name":"toggleWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { faAngleDown } from \'@fortawesome/free-solid-svg-icons\';\\nimport { BehaviorSubject } from \'rxjs\';\\nimport { Project } from \'src/app/dashboard/interfaces/project.interface\';\\nimport { Workspace } from \'src/app/dashboard/interfaces/workspace.interface\';\\nimport { ProjectService } from \'@dashboard/services/project/project.service\';\\nimport { WorkspaceService } from \'@dashboard/services/workspace/workspace.service\';\\nimport { DialogService } from \'../../services/dialog/dialog.service\';\\n\\n@Component({\\n  selector: \'app-nav-element-workspace\',\\n  templateUrl: \'./nav-element-workspace.component.html\',\\n  styleUrls: [\'./nav-element-workspace.component.scss\'],\\n})\\nexport class NavElementWorkspaceComponent implements AfterViewInit {\\n  @Input()\\n  public routerLink?: string;\\n\\n  @Input()\\n  public workspace: Workspace = { id: -1 } as unknown as Workspace;\\n\\n  faAngleDown = faAngleDown;\\n  public activeWorkspace: boolean = false;\\n\\n  public showArrow$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\\n\\n  @ViewChild(\'elementList\')\\n  listElement?: ElementRef;\\n\\n  constructor(\\n    private workspaceService: WorkspaceService,\\n    private dialogService: DialogService,\\n    private projectService: ProjectService,\\n    private router: Router,\\n  ) {}\\n\\n  public openWorkspace() {\\n    this.activeWorkspace = true;\\n  }\\n  public closeWorkspace() {\\n    this.activeWorkspace = false;\\n  }\\n  public toggleWorkspace() {\\n    if (!this.activeWorkspace) {\\n      this.openWorkspace();\\n    } else {\\n      this.closeWorkspace();\\n    }\\n  }\\n\\n  ngAfterViewInit(): void {\\n    setTimeout(() => {\\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\\n    });\\n  }\\n\\n  routeToWorkspace() {\\n    this.router\\n      .navigateByUrl(\'/\', { skipLocationChange: true })\\n      .then(() => this.router.navigate([\'/\', this.workspace.id]));\\n  }\\n\\n  routeToProject(project: Project) {\\n    this.router\\n      .navigateByUrl(\'/\', { skipLocationChange: true })\\n      .then(() => this.router.navigate([\'/\', this.workspace.id, project.id]));\\n  }\\n\\n  createProject() {\\n    this.router\\n      .navigateByUrl(\'/\', { skipLocationChange: true })\\n      .then(() => this.router.navigate([\'/\', this.workspace.id, \'create\']));\\n  }\\n\\n  editProject(project: Project) {\\n    this.router\\n      .navigateByUrl(\'/\', { skipLocationChange: true })\\n      .then(() => this.router.navigate([\'/\', this.workspace.id, project.id, \'edit\']));\\n  }\\n\\n  deleteProject(project: Project) {\\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\\n      this.projectService.delete(project.id).subscribe(() => {\\n        window.location.reload();\\n      });\\n    });\\n  }\\n\\n  editWorkspace() {\\n    this.router\\n      .navigateByUrl(\'/\', { skipLocationChange: true })\\n      .then(() => this.router.navigate([\'/\', this.workspace.id, \'edit\']));\\n  }\\n\\n  deleteWorkspace() {\\n    this.dialogService.confirmWorkspaceDelete(this.workspace).subscribe(() => {\\n      this.workspaceService.delete(this.workspace.id).subscribe(() => {\\n        window.location.reload();\\n      });\\n    });\\n  }\\n\\n  openWithVSCode(project: Project) {\\n    window.open(`https://github.dev/${project.gitHubIntegration}`, \'_blank\');\\n  }\\n\\n  openWithLocalVSCode(project: Project) {\\n    window.open(\\n      `vscode://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\\n      \'_blank\',\\n    );\\n  }\\n\\n  openWithLocalVSCodeInsiders(project: Project) {\\n    window.open(\\n      `vscode-insiders://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\\n      \'_blank\',\\n    );\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../styles/typography\';\\n\\n:host {\\n  @include text-title;\\n\\n  background-color: var(--color-secondary-600);\\n}\\n\\nli {\\n  background-color: var(--color-secondary-700);\\n}\\n\\n.workspace {\\n  display: flex;\\n  width: 100%;\\n  height: 46px;\\n  justify-content: space-between;\\n  border-radius: var(--border-radius);\\n  color: var(--color-neutral-300);\\n  cursor: pointer;\\n  transition: background-color 0.2s ease-in-out;\\n\\n  .element {\\n    display: flex;\\n    width: 100%;\\n    height: 100%;\\n    align-items: center;\\n    padding: 0 0 0 30px;\\n  }\\n\\n  .icons {\\n    display: flex;\\n    height: 100%;\\n    align-items: center;\\n\\n    .options {\\n      display: flex;\\n      height: 100%;\\n      align-items: center;\\n      padding: 0 5px 0 0;\\n    }\\n\\n    .open-below {\\n      display: flex;\\n      height: 100%;\\n      align-items: center;\\n      justify-content: center;\\n      padding: 0 5px;\\n\\n      app-icon {\\n        display: flex;\\n        justify-content: center;\\n\\n        &.active {\\n          transform: scaleY(-1);\\n        }\\n      }\\n    }\\n\\n    .options button {\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n  }\\n\\n  &:hover {\\n    background-color: var(--color-secondary-500);\\n  }\\n}\\n\\n.project {\\n  display: none;\\n  width: 100%;\\n  cursor: pointer;\\n\\n  &.active {\\n    display: block;\\n    justify-content: center;\\n    background-color: var(--color-secondary-600);\\n    color: var(--color-neutral-300);\\n    transition: background-color 0.2s ease-in-out;\\n\\n    li {\\n      display: flex;\\n      width: 100%;\\n      height: 46px;\\n      align-items: center;\\n      justify-content: space-between;\\n      border-radius: var(--border-radius);\\n\\n      .sub-element {\\n        display: flex;\\n        width: 100%;\\n        height: 100%;\\n        align-items: center;\\n        padding: 0 0 0 40px;\\n      }\\n\\n      .icons {\\n        display: flex;\\n        height: 100%;\\n        align-items: center;\\n        padding: 0 5px 0 0;\\n      }\\n\\n      &:hover {\\n        background-color: var(--color-secondary-500);\\n      }\\n    }\\n  }\\n}\\n\\nbutton {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.hidden {\\n  visibility: hidden;\\n}\\n","styleUrl":"./nav-element-workspace.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":29,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["AfterViewInit"],"templateData":"<section>\\n  <div class=\\"workspace\\">\\n    <div class=\\"element\\" (click)=\\"toggleWorkspace()\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <div class=\\"icons\\">\\n      <div class=\\"open-below\\" [class.hidden]=\\"(showArrow$ | async) === false\\" (click)=\\"toggleWorkspace()\\">\\n        <app-icon [icon]=\\"faAngleDown\\" size=\\"16px\\" [class.active]=\\"activeWorkspace\\"></app-icon>\\n      </div>\\n      <div class=\\"options\\">\\n        <button mat-icon-button [matMenuTriggerFor]=\\"menu\\" aria-label=\\"Menu\\">\\n          <mat-icon>more_vert</mat-icon>\\n        </button>\\n        <mat-menu #menu=\\"matMenu\\">\\n          <button mat-menu-item (click)=\\"createProject()\\">\\n            <span i18n>Create project</span>\\n          </button>\\n          <button mat-menu-item (click)=\\"routeToWorkspace()\\">\\n            <span i18n>Manage projects</span>\\n          </button>\\n          <button mat-menu-item (click)=\\"editWorkspace()\\">\\n            <span i18n>Edit workspace</span>\\n          </button>\\n          <button mat-menu-item class=\\"important\\" (click)=\\"deleteWorkspace()\\">\\n            <span i18n>Delete workspace</span>\\n          </button>\\n        </mat-menu>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\"project\\" [class.active]=\\"activeWorkspace\\">\\n    <ul #elementList>\\n      <li *ngFor=\\"let projectWithPriv of workspace.projectsWithPrivileges\\">\\n        <div class=\\"sub-element\\" (click)=\\"routeToProject(projectWithPriv.project)\\">{{projectWithPriv.project.name}}</div>\\n        <div class=\\"icons\\" [matMenuTriggerFor]=\\"menu\\">\\n          <div class=\\"options\\">\\n            <button mat-icon-button aria-label=\\"Menu\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\"matMenu\\">\\n              <button mat-menu-item *ngIf=\\"projectWithPriv.project.gitHubIntegration\\"\\n                (click)=\\"openWithVSCode(projectWithPriv.project)\\">\\n                <span i18n>Open in github.dev</span>\\n              </button>\\n              <button mat-menu-item *ngIf=\\"projectWithPriv.project.gitHubIntegration\\"\\n                (click)=\\"openWithLocalVSCode(projectWithPriv.project)\\">\\n                <span i18n>Open in Visual Studio Code</span>\\n              </button>\\n              <button mat-menu-item *ngIf=\\"projectWithPriv.project.gitHubIntegration\\"\\n                (click)=\\"openWithLocalVSCodeInsiders(projectWithPriv.project)\\">\\n                <span i18n>Open in Visual Studio Code Insiders</span>\\n              </button>\\n              <button mat-menu-item (click)=\\"editProject(projectWithPriv.project)\\">\\n                <span i18n>Edit project</span>\\n              </button>\\n              <button mat-menu-item class=\\"important\\" (click)=\\"deleteProject(projectWithPriv.project)\\">\\n                <span i18n>Delete project</span>\\n              </button>\\n            </mat-menu>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n  <ng-content select=\\".options\\"></ng-content>\\n</section>\\n"},{"name":"OptionComponent","id":"component-OptionComponent-44a765f9a063a404685a83ca58845225e991d6c43fddd37d400082fd9c09fb122b7f57cabec41cb030b001459380a13259417abb35dbdf8161cd9df695359332","file":"src/app/_main/components/select/option/option.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-option","styleUrls":["./option.component.scss"],"styles":[],"templateUrl":["./option.component.html"],"viewProviders":[],"inputsClass":[{"name":"icon","deprecated":false,"deprecationMessage":"","line":11,"type":"string | IconDefinition","decorators":[]},{"name":"value","deprecated":false,"deprecationMessage":"","line":10,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"ref","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"selected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, HostBinding, Input } from \'@angular/core\';\\nimport { IconDefinition } from \'@fortawesome/free-solid-svg-icons\';\\n\\n@Component({\\n  selector: \'app-option\',\\n  templateUrl: \'./option.component.html\',\\n  styleUrls: [\'./option.component.scss\'],\\n})\\nexport class OptionComponent {\\n  @Input() @HostBinding(\'value\') value!: any;\\n  @Input() icon?: string | IconDefinition;\\n\\n  selected = false;\\n\\n  public get viewValue(): string {\\n    return this.ref.nativeElement.innerText;\\n  }\\n\\n  constructor(public ref: ElementRef) {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  align-items: center;\\n  padding: 0.25rem 0.75rem;\\n  color: var(--color-text);\\n  cursor: pointer;\\n  transition: background-color .2s ease;\\n\\n  &:hover {\\n    background-color: var(--color-secondary-500);\\n  }\\n\\n  app-icon {\\n    margin-right: 1rem;\\n  }\\n}\\n","styleUrl":"./option.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ref","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"ref","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"viewValue":{"name":"viewValue","getSignature":{"name":"viewValue","type":"string","returnType":"string","line":15}}},"templateData":"<app-icon *ngIf=\\"icon\\" [icon]=\\"icon\\" size=\\"1rem\\"></app-icon>\\n<ng-content></ng-content>\\n"},{"name":"ProjectFormGeneralComponent","id":"component-ProjectFormGeneralComponent-33b7b70063029deb41afc4ca9fec4f8a9226ff3f8c5d5065038f773eadc7e88aaab318173d96b4364fb3f033cf5895b6d9ab8ffb6b7bc8e820b1ea29b3f8d58d","file":"src/app/dashboard/components/project-form-general/project-form-general.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"project-form-general","styleUrls":["./project-form-general.component.scss"],"styles":[],"templateUrl":["./project-form-general.component.html"],"viewProviders":[],"inputsClass":[{"name":"project","deprecated":false,"deprecationMessage":"","line":20,"type":"Project","decorators":[]},{"name":"workspace","deprecated":false,"deprecationMessage":"","line":21,"type":"Workspace","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"form","defaultValue":"new FormGroup({\\n    workspaceId: new FormControl<number>(0, [requiredValidator()]),\\n    name: new FormControl<string>(\'\', [\\n      requiredValidator(),\\n      notEmptyValidator(),\\n      maxLengthValidator(50),\\n    ]),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"workspace$","deprecated":false,"deprecationMessage":"","type":"Observable<Workspace>","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"workspaces$","defaultValue":"this.workspaceService.list()","deprecated":false,"deprecationMessage":"","type":"Observable<Workspace[]>","optional":false,"description":"","line":23,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, Input } from \'@angular/core\';\\nimport { FormGroup, FormControl } from \'@ngneat/reactive-forms\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\nimport { notEmptyValidator } from \'@main/validators/not-empty.validator\';\\nimport { maxLengthValidator } from \'@main/validators/max-length.validator\';\\nimport { UntilDestroy } from \'@ngneat/until-destroy\';\\nimport { Observable } from \'rxjs\';\\nimport { Workspace } from \'@dashboard/interfaces/workspace.interface\';\\nimport { WorkspaceService } from \'@dashboard/services/workspace/workspace.service\';\\nimport { Project } from \'./../../interfaces/project.interface\';\\nimport { ProjectService } from \'@dashboard/services/project/project.service\';\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'project-form-general\',\\n  templateUrl: \'./project-form-general.component.html\',\\n  styleUrls: [\'./project-form-general.component.scss\'],\\n})\\nexport class ProjectFormGeneralComponent implements OnInit {\\n  @Input() project?: Project;\\n  @Input() workspace?: Workspace;\\n\\n  public workspaces$: Observable<Workspace[]> = this.workspaceService.list();\\n  public workspace$!: Observable<Workspace>;\\n\\n  public form = new FormGroup({\\n    workspaceId: new FormControl<number>(0, [requiredValidator()]),\\n    name: new FormControl<string>(\'\', [\\n      requiredValidator(),\\n      notEmptyValidator(),\\n      maxLengthValidator(50),\\n    ]),\\n  });\\n\\n  constructor(private workspaceService: WorkspaceService, private projectService: ProjectService) {}\\n\\n  ngOnInit() {\\n    this.form.patchValue({ ...this.project, workspaceId: this.workspace?.id });\\n  }\\n\\n  save() {\\n    if (this.project) {\\n      return this.projectService.update({\\n        id: this.project.id,\\n        ...this.form.value,\\n      });\\n    } else {\\n      return this.projectService.create(this.form.value);\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"form {\\n  &>*:not(:last-child) {\\n    margin-bottom: 1rem;\\n  }\\n}\\n","styleUrl":"./project-form-general.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":""}],"line":33,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<form [formGroup]=\\"form\\">\\n\\n  \x3c!-- Workspace input --\x3e\\n  <app-select formControlName=\\"workspaceId\\" floatingLabel=\\"Workspace\\" i18n-floatingLabel>\\n    <app-option *ngFor=\\"let workspace of workspaces$ | async\\" [value]=\\"workspace.id\\">\\n      {{ workspace.name }}\\n    </app-option>\\n  </app-select>\\n\\n  \x3c!-- Name input --\x3e\\n  <app-input formControlName=\\"name\\" type=\\"text\\" placeholder=\\"New project\\" floatingLabel=\\"Project name\\"\\n    i18n-floatingLabel i18n-placeholder></app-input>\\n\\n</form>\\n"},{"name":"ProjectFormIntegrationsComponent","id":"component-ProjectFormIntegrationsComponent-49610388bf60e9c8fa46209f53af0f1d70ce56e139d5cc73f4255563e357c96fd2be80162d1e2adbb4d90e800d7b36c7f015a55f3446eac3d8ba8cad6f68a4bf","file":"src/app/dashboard/components/project-form-integrations/project-form-integrations.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"project-form-integrations","styleUrls":[],"styles":[],"templateUrl":["./project-form-integrations.component.html"],"viewProviders":[],"inputsClass":[{"name":"project","deprecated":false,"deprecationMessage":"","line":14,"type":"Project","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"integrationModulesGrid","deprecated":false,"deprecationMessage":"","type":"IntegrationModulesGridComponent","optional":false,"description":"","line":12,"decorators":[{"name":"ViewChild","stringifiedArguments":"IntegrationModulesGridComponent"}]}],"methodsClass":[{"name":"save","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, ViewChild } from \'@angular/core\';\\nimport { ProjectForm } from \'@dashboard/interfaces/project-form.interface\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { IntegrationModulesGridComponent } from \'../integration-modules-grid/integration-modules-grid.component\';\\n\\n@Component({\\n  selector: \'project-form-integrations\',\\n  templateUrl: \'./project-form-integrations.component.html\',\\n})\\nexport class ProjectFormIntegrationsComponent implements ProjectForm {\\n  @ViewChild(IntegrationModulesGridComponent)\\n  integrationModulesGrid!: IntegrationModulesGridComponent;\\n\\n  @Input() project?: Project;\\n\\n  public save() {\\n    return this.integrationModulesGrid.saveAll();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","implements":["ProjectForm"],"templateData":"<integration-modules-grid [project]=\\"project\\"></integration-modules-grid>\\n"},{"name":"ProjectFormMembersComponent","id":"component-ProjectFormMembersComponent-99459c160ccff29744388f198c159d2f0a651d7de50a8e4addd6853643fddfe78101e6d4344e453c84962084febe6fcb8ef4ff0c86c835a59b016e406bbebbd8","file":"src/app/dashboard/components/project-form-members/project-form-members.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"project-form-members","styleUrls":[],"styles":[],"templateUrl":["./project-form-members.component.html"],"viewProviders":[],"inputsClass":[{"name":"project","deprecated":false,"deprecationMessage":"","line":16,"type":"Project | undefined","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_project","deprecated":false,"deprecationMessage":"","type":"Project | undefined","optional":false,"description":"","line":23,"modifierKind":[121]},{"name":"existingMembers$","defaultValue":"of([])","deprecated":false,"deprecationMessage":"","type":"Observable<ProjectMember[]>","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"members","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"(ProjectMember | string)[]","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"newMembers","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":29,"modifierKind":[123]}],"methodsClass":[{"name":"openAddMembersDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { AddMemberDialog } from \'@dashboard/dialogs/add-member/add-member.dialog\';\\nimport { DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { faPlus } from \'@fortawesome/free-solid-svg-icons\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { MemberService } from \'@dashboard/services/member/member.service\';\\nimport { of, Observable, map } from \'rxjs\';\\nimport { ProjectMember } from \'@dashboard/interfaces/project-member.interface\';\\nimport { ProjectForm } from \'@dashboard/interfaces/project-form.interface\';\\n\\n@Component({\\n  selector: \'project-form-members\',\\n  templateUrl: \'./project-form-members.component.html\',\\n})\\nexport class ProjectFormMembersComponent implements ProjectForm {\\n  @Input() set project(project: Project | undefined) {\\n    this._project = project;\\n    this.existingMembers$ = project ? this.memberService.list(project.id) : of([]);\\n  }\\n  get project() {\\n    return this._project;\\n  }\\n  private _project: Project | undefined;\\n\\n  /** @ignore */\\n  faPlus = faPlus;\\n\\n  public members: (ProjectMember | string)[] = [];\\n  public newMembers: string[] = [];\\n\\n  public existingMembers$: Observable<ProjectMember[]> = of([]);\\n\\n  constructor(private dialogService: DialogService, private memberService: MemberService) {}\\n\\n  openAddMembersDialog() {\\n    this.dialogService\\n      .open(AddMemberDialog, {})\\n      .afterClosed()\\n      .subscribe((result: string[]) => {\\n        this.newMembers = [...this.newMembers, ...result];\\n      });\\n  }\\n\\n  save() {\\n    console.log(this.project);\\n    if (!this.project) return of(this.project!);\\n\\n    return this.memberService\\n      .add(this.newMembers, [this.project.id])\\n      .pipe(map(() => this.project!));\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""},{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":""}],"line":31,"jsdoctags":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["ProjectForm"],"accessors":{"project":{"name":"project","setSignature":{"name":"project","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"project","type":"Project | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":16,"jsdoctags":[{"name":"project","type":"Project | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"project","type":"","returnType":"","line":20}}},"templateData":"<div class=\\"button\\">\\n  <app-button type=\\"button\\" [icon]=\\"faPlus\\" variant=\\"primary\\" (click)=\\"openAddMembersDialog()\\" i18n>Add member\\n  </app-button>\\n</div>\\n\\n<member-list [members]=\\"members.concat((existingMembers$ | async) || [], newMembers)\\"></member-list>\\n"},{"name":"ProjectFormStatusesComponent","id":"component-ProjectFormStatusesComponent-6f1e610c0e0ef00168bf076eeb2c0cdd014f1e754380c1e018fd00ea95261c5960e62c3499dca26fce8c7fa903f0e8888df1242e6a7bcaf1a9385abd55913d9d","file":"src/app/dashboard/components/project-form-statuses/project-form-statuses.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"project-form-statuses","styleUrls":["./project-form-statuses.component.scss"],"styles":[],"templateUrl":["./project-form-statuses.component.html"],"viewProviders":[],"inputsClass":[{"name":"project","deprecated":false,"deprecationMessage":"","line":19,"type":"Project","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"currentStatusList","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Status[]","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"displayedColumns","defaultValue":"[\'name\', \'begin\', \'final\', \'color\', \'grip\', \'action\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"statusList","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Status[]","optional":false,"description":"","line":23,"modifierKind":[123]}],"methodsClass":[{"name":"createNewStatus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"drop","args":[{"name":"event","type":"CdkDragDrop<string[]>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"CdkDragDrop<string[]>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"editStatus","args":[{"name":"status","type":"Status","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"status","type":"Status","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"updateOrdinals","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CdkDragDrop, moveItemInArray } from \'@angular/cdk/drag-drop\';\\nimport { Component, Input, OnInit } from \'@angular/core\';\\nimport { ProjectForm } from \'@dashboard/interfaces/project-form.interface\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { faGripLines, faPlus, faCheck, faXmark } from \'@fortawesome/free-solid-svg-icons\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport { StatusService } from \'@tasks/services/status/status.service\';\\nimport { isEqual } from \'lodash-es\';\\nimport { map, of, switchMap, tap, Observable, forkJoin, defaultIfEmpty } from \'rxjs\';\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'project-form-statuses\',\\n  templateUrl: \'./project-form-statuses.component.html\',\\n  styleUrls: [\'./project-form-statuses.component.scss\'],\\n})\\nexport class ProjectFormStatusesComponent implements ProjectForm, OnInit {\\n  @Input() project?: Project;\\n\\n  public displayedColumns = [\'name\', \'begin\', \'final\', \'color\', \'grip\', \'action\'];\\n\\n  public statusList: Status[] = [];\\n  public currentStatusList: Status[] = [];\\n\\n  /** @ignore */\\n  faGripLines = faGripLines;\\n\\n  /** @ignore */\\n  faPlus = faPlus;\\n\\n  /** @ignore */\\n  faCheck = faCheck;\\n\\n  /** @ignore */\\n  faXmark = faXmark;\\n\\n  constructor(private statusService: StatusService) {}\\n\\n  ngOnInit() {\\n    if (this.project) {\\n      this.statusService\\n        .list(this.project.id)\\n        .pipe(untilDestroyed(this))\\n        .subscribe((statusList) => {\\n          if (!statusList || statusList.length === 0) {\\n            this.statusList = this.statusService.getDefaultStatusList();\\n          }\\n\\n          this.statusList = statusList;\\n          this.currentStatusList = JSON.parse(JSON.stringify(statusList));\\n        });\\n    } else {\\n      this.statusList = this.statusService.getDefaultStatusList();\\n    }\\n  }\\n\\n  public save() {\\n    console.log(this.project);\\n    if (!this.project) return of();\\n\\n    return of(null).pipe(\\n      tap(() => {\\n        console.log(\'test\');\\n        console.log(this.statusList.filter((status) => !status.id));\\n      }),\\n\\n      // Save all new statuses\\n      switchMap(() =>\\n        forkJoin(\\n          this.statusList\\n            .filter((status) => !status.id)\\n            .map((status) => this.statusService.create(this.project!.id, status)),\\n        ).pipe(defaultIfEmpty([])),\\n      ),\\n\\n      tap(() => {\\n        console.log(\'test\');\\n        console.log(\\n          this.statusList.filter(\\n            (status) =>\\n              status.id &&\\n              !isEqual(\\n                status,\\n                this.currentStatusList.find((s) => s.id === status.id),\\n              ),\\n          ),\\n        );\\n      }),\\n\\n      // Update all existing statuses\\n      switchMap(() =>\\n        forkJoin(\\n          this.statusList\\n            .filter(\\n              (status) =>\\n                status.id &&\\n                !isEqual(\\n                  status,\\n                  this.currentStatusList.find((s) => s.id === status.id),\\n                ),\\n            )\\n            .map((status) => this.statusService.update(this.project!.id, status)),\\n        ).pipe(defaultIfEmpty([])),\\n      ),\\n\\n      map(() => this.project!),\\n    ) as Observable<Project>;\\n  }\\n\\n  public drop(event: CdkDragDrop<string[]>) {\\n    moveItemInArray(this.statusList, event.previousIndex, event.currentIndex);\\n    this.statusList = [...this.statusList];\\n    this.updateOrdinals();\\n  }\\n\\n  public updateOrdinals() {\\n    for (const [index, status] of this.statusList.entries()) {\\n      status.ordinal = index;\\n    }\\n  }\\n\\n  public createNewStatus() {\\n    this.statusService\\n      .openCreateNewStatusDialog()\\n      .pipe(\\n        untilDestroyed(this),\\n        tap((status) => (this.statusList = [...this.statusList, status])),\\n      )\\n      .subscribe();\\n  }\\n\\n  public editStatus(status: Status) {\\n    this.statusService\\n      .openEditStatusDialog(status)\\n      .pipe(\\n        untilDestroyed(this),\\n        tap((status) => {\\n          this.statusList = this.statusList.map((s) => (s.ordinal === status.ordinal ? status : s));\\n        }),\\n      )\\n      .subscribe();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".mat-column-grip,\\n.mat-column-action {\\n  min-width: 50px;\\n  flex-grow: 0;\\n\\n  app-icon {\\n    opacity: 0.2;\\n  }\\n}\\n","styleUrl":"./project-form-statuses.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"statusService","type":"StatusService","deprecated":false,"deprecationMessage":""}],"line":36,"jsdoctags":[{"name":"statusService","type":"StatusService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["ProjectForm","OnInit"],"templateData":"<div class=\\"w-100 flex justify-end mb-3\\">\\n  <app-button [icon]=\\"faPlus\\" (click)=\\"createNewStatus()\\">Add new status</app-button>\\n</div>\\n\\n<ng-container *ngIf=\\"statusList.length\\">\\n  <mat-table [dataSource]=\\"statusList\\" cdkDropList (cdkDropListDropped)=\\"drop($event)\\">\\n\\n    \x3c!-- Name column --\x3e\\n    <ng-container matColumnDef=\\"name\\">\\n      <mat-header-cell *matHeaderCellDef i18n> Name </mat-header-cell>\\n      <mat-cell *matCellDef=\\"let element\\"> {{element.name}} </mat-cell>\\n    </ng-container>\\n\\n    \x3c!-- Begin column --\x3e\\n    <ng-container matColumnDef=\\"begin\\">\\n      <mat-header-cell *matHeaderCellDef i18n> Begin </mat-header-cell>\\n      <mat-cell *matCellDef=\\"let element\\">\\n        <ng-container *ngTemplateOutlet=\\"mark; context: { value: element.begin }\\"></ng-container>\\n      </mat-cell>\\n    </ng-container>\\n\\n    \x3c!-- Final column --\x3e\\n    <ng-container matColumnDef=\\"final\\">\\n      <mat-header-cell *matHeaderCellDef i18n> Final </mat-header-cell>\\n      <mat-cell *matCellDef=\\"let element\\">\\n        <ng-container *ngTemplateOutlet=\\"mark; context: { value: element.final }\\"></ng-container>\\n      </mat-cell>\\n    </ng-container>\\n\\n    \x3c!-- Color column --\x3e\\n    <ng-container matColumnDef=\\"color\\">\\n      <mat-header-cell *matHeaderCellDef i18n> Color </mat-header-cell>\\n      <mat-cell *matCellDef=\\"let element\\">\\n        <color [color]=\\"element.color\\"></color>\\n      </mat-cell>\\n    </ng-container>\\n\\n    \x3c!-- Drag icon column --\x3e\\n    <ng-container matColumnDef=\\"grip\\">\\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n      <mat-cell *matCellDef=\\"let element\\">\\n        <app-icon [icon]=\\"faGripLines\\"></app-icon>\\n      </mat-cell>\\n    </ng-container>\\n\\n    \x3c!-- Actions cell --\x3e\\n    <ng-container matColumnDef=\\"action\\">\\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n      <mat-cell *matCellDef=\\"let element\\">\\n        <button mat-icon-button click-stop-propagation [matMenuTriggerFor]=\\"menu\\" class=\\"flex items-center\\">\\n          <app-icon icon=\\"matMoreVert\\"></app-icon>\\n        </button>\\n        <mat-menu #menu=\\"matMenu\\">\\n          <button mat-menu-item (click)=\\"editStatus(element)\\">\\n            <span i18n>Edit status</span>\\n          </button>\\n          <button mat-menu-item class=\\"important\\">\\n            <span i18n>Remove status</span>\\n          </button>\\n        </mat-menu>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\"displayedColumns\\"></mat-header-row>\\n    <mat-row *matRowDef=\\"let row; columns: displayedColumns;\\" class=\\"mt-3\\" cdkDrag></mat-row>\\n  </mat-table>\\n</ng-container>\\n\\n<ng-template #mark let-value=\\"value\\">\\n  <ng-container *ngIf=\\"value\\">\\n    <app-icon [icon]=\\"faCheck\\" size=\\"1rem\\"></app-icon>\\n  </ng-container>\\n  <ng-container *ngIf=\\"!value\\">\\n    <app-icon [icon]=\\"faXmark\\" size=\\"1rem\\"></app-icon>\\n  </ng-container>\\n</ng-template>\\n"},{"name":"ProjectsListPage","id":"component-ProjectsListPage-fe538fb53e415a943e5649f428ca0332c4a7da429d3466b81f22f91046ab848e036dc12b96c8b0c8d0e3d3f393df4b6e2cd31ae4423211e5732e0269e03f2740","file":"src/app/dashboard/pages/projects-list/projects-list.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-projects-list","styleUrls":["./projects-list.page.scss"],"styles":[],"templateUrl":["./projects-list.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"faPlus","defaultValue":"faPlus","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20},{"name":"projects$","deprecated":false,"deprecationMessage":"","type":"Observable<Project[]>","optional":false,"description":"","line":18},{"name":"workspace$","deprecated":false,"deprecationMessage":"","type":"Observable<Workspace>","optional":false,"description":"","line":17},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":22,"modifierKind":[121]}],"methodsClass":[{"name":"deleteProject","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"editProject","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openProject","args":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"project","type":"Project","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { WorkspaceService } from \'../../services/workspace/workspace.service\';\\nimport { map, Observable } from \'rxjs\';\\nimport { Project } from \'../../interfaces/project.interface\';\\nimport { Workspace } from \'../../interfaces/workspace.interface\';\\nimport { faPlus } from \'@fortawesome/free-solid-svg-icons\';\\nimport { DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { ProjectService } from \'../../services/project/project.service\';\\n\\n@Component({\\n  selector: \'app-projects-list\',\\n  templateUrl: \'./projects-list.page.html\',\\n  styleUrls: [\'./projects-list.page.scss\'],\\n})\\nexport class ProjectsListPage {\\n  workspace$: Observable<Workspace>;\\n  projects$: Observable<Project[]>;\\n\\n  faPlus = faPlus;\\n\\n  private workspaceId!: number;\\n\\n  constructor(\\n    private activatedRoute: ActivatedRoute,\\n    private workspaceService: WorkspaceService,\\n    private projectService: ProjectService,\\n    private dialogService: DialogService,\\n    private router: Router,\\n  ) {\\n    const { workspaceId } = this.activatedRoute.snapshot.params;\\n\\n    this.workspaceId = workspaceId;\\n\\n    this.workspace$ = this.workspaceService.get(workspaceId);\\n    this.projects$ = this.workspace$.pipe(\\n      map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)),\\n    );\\n  }\\n\\n  public editProject(project: Project) {\\n    this.router.navigate([\'/\', this.workspaceId, project.id, \'edit\']);\\n  }\\n\\n  public openProject(project: Project) {\\n    this.router.navigate([\'/\', this.workspaceId, project.id]);\\n  }\\n\\n  deleteProject(project: Project) {\\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\\n      this.projectService.delete(project.id).subscribe(() => {\\n        window.location.reload();\\n      });\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  padding: 2rem;\\n}\\n","styleUrl":"./projects-list.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":""},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":22,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"\x3c!-- Page header --\x3e\\n<section class=\\"flex justify-between items-center\\">\\n  <h2 class=\\"text-xl font-bold\\">{{ (workspace$ | async)?.name }}</h2>\\n  <app-button variant=\\"primary\\" routerLink=\\"create\\" [icon]=\\"faPlus\\" i18n>New project</app-button>\\n</section>\\n\\n\x3c!-- Table --\x3e\\n<table mat-table [dataSource]=\\"(projects$ | async) || []\\">\\n\\n  \x3c!-- Name column --\x3e\\n  <ng-container matColumnDef=\\"name\\">\\n    <th mat-header-cell *matHeaderCellDef i18n>Name</th>\\n    <td mat-cell *matCellDef=\\"let row\\" class=\\"clickable-cell\\" (click)=\\"openProject(row)\\"> {{ row.name }} </td>\\n  </ng-container>\\n\\n  \x3c!-- Statistics column --\x3e\\n  <ng-container matColumnDef=\\"statistics\\">\\n    <th mat-header-cell *matHeaderCellDef i18n>Statistics</th>\\n    <td mat-cell *matCellDef=\\"let row\\"> - </td>\\n  </ng-container>\\n\\n  \x3c!-- Last update column --\x3e\\n  <ng-container matColumnDef=\\"lastUpdate\\">\\n    <th mat-header-cell *matHeaderCellDef i18n>Last update</th>\\n    <td mat-cell *matCellDef=\\"let row\\"> - </td>\\n  </ng-container>\\n\\n  \x3c!-- Actions column --\x3e\\n  <ng-container matColumnDef=\\"actions\\">\\n    <th mat-header-cell *matHeaderCellDef i18n></th>\\n    <td mat-cell *matCellDef=\\"let row\\" class=\\"action-cell\\">\\n      <button mat-icon-button [matMenuTriggerFor]=\\"menu\\" class=\\"flex items-center\\">\\n        <app-icon icon=\\"matMoreVert\\"></app-icon>\\n      </button>\\n      <mat-menu #menu=\\"matMenu\\">\\n        <button mat-menu-item (click)=\\"editProject(row)\\">\\n          <span i18n>Edit project</span>\\n        </button>\\n        <button mat-menu-item class=\\"important\\" (click)=\\"deleteProject(row)\\">\\n          <span i18n>Delete project</span>\\n        </button>\\n      </mat-menu>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\"[\'name\', \'statistics\', \'lastUpdate\', \'actions\']\\"></tr>\\n  <tr mat-row *matRowDef=\\"let row; columns: [\'name\', \'statistics\', \'lastUpdate\', \'actions\'];\\"></tr>\\n</table>\\n"},{"name":"RegisterPage","id":"component-RegisterPage-2305c85e518249529469f4e33256a1e233c50b699a5ff399089ef496412b3e73f35cd74edf35cd0d56280be9dba8c4ac0025c22b23975b14a2aa03021aaf5250","file":"src/app/auth/pages/register/register.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-register","styleUrls":["./register.page.scss"],"styles":[],"templateUrl":["./register.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"error","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":28,"modifierKind":[123]},{"name":"form","defaultValue":"new FormGroup({\\n    email: new FormControl(\'\', [requiredValidator(), emailValidator()]),\\n    password: new FormControl(\'\', [requiredValidator(), passwordValidator()]),\\n    repeatPassword: new FormControl(\'\', [\\n      requiredValidator(),\\n      passwordValidator(),\\n      sameAsValidator(\'password\', $localize`Given passwords are not the same `),\\n    ]),\\n    name: new FormControl(\'\', [requiredValidator()]),\\n    surname: new FormControl(\'\', [requiredValidator()]),\\n    username: new FormControl(\'\', [requiredValidator()]),\\n    agreements: new FormControl(\'\', [requiredValidator()]),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Form group for register.</p>\\n","line":33,"rawdescription":"\\n\\nForm group for register.\\n","modifierKind":[123]},{"name":"RegisterStage","defaultValue":"RegisterStage","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26},{"name":"registerSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":true,"description":"","line":24,"modifierKind":[121]},{"name":"stage","defaultValue":"RegisterStage.IMPORTANT_DATA","deprecated":false,"deprecationMessage":"","type":"RegisterStage","optional":true,"description":"","line":25,"modifierKind":[123]}],"methodsClass":[{"name":"handleError","args":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"nextStage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"previousStage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":""},{"name":"register","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { Router } from \'@angular/router\';\\nimport { emailValidator } from \'@main/validators/email.validator\';\\nimport { passwordValidator } from \'@main/validators/password.validator\';\\nimport { sameAsValidator } from \'@main/validators/same-as.validator\';\\nimport { catchError, EMPTY, Subscription } from \'rxjs\';\\nimport { requiredValidator } from \'src/app/_main/validators/required.validator\';\\nimport { AuthService } from \'@auth/services/auth/auth.service\';\\n\\nenum RegisterStage {\\n  IMPORTANT_DATA,\\n  PERSONAL_DATA,\\n}\\n\\n@Component({\\n  selector: \'app-register\',\\n  templateUrl: \'./register.page.html\',\\n  styleUrls: [\'./register.page.scss\'],\\n})\\nexport class RegisterPage {\\n  constructor(private authService: AuthService, private router: Router) {}\\n\\n  private registerSubscription?: Subscription;\\n  public stage?: RegisterStage = RegisterStage.IMPORTANT_DATA;\\n  RegisterStage = RegisterStage;\\n\\n  public error?: string;\\n\\n  /**\\n   * Form group for register.\\n   */\\n  public form = new FormGroup({\\n    email: new FormControl(\'\', [requiredValidator(), emailValidator()]),\\n    password: new FormControl(\'\', [requiredValidator(), passwordValidator()]),\\n    repeatPassword: new FormControl(\'\', [\\n      requiredValidator(),\\n      passwordValidator(),\\n      sameAsValidator(\'password\', $localize`Given passwords are not the same `),\\n    ]),\\n    name: new FormControl(\'\', [requiredValidator()]),\\n    surname: new FormControl(\'\', [requiredValidator()]),\\n    username: new FormControl(\'\', [requiredValidator()]),\\n    agreements: new FormControl(\'\', [requiredValidator()]),\\n  });\\n\\n  nextStage() {\\n    // TODO: Think something about this stages and validation\\n    let formFields: [\'email\', \'password\', \'repeatPassword\', \'agreements\'] = [\\n      \'email\',\\n      \'password\',\\n      \'repeatPassword\',\\n      \'agreements\',\\n    ];\\n    let correctData: boolean = true;\\n    for (let field of formFields) {\\n      this.form.get(field)?.markAsTouched();\\n      this.form.get(field)?.updateValueAndValidity();\\n      if (this.form.get(field)?.invalid) {\\n        correctData = false;\\n      }\\n    }\\n    if (correctData) {\\n      this.stage = RegisterStage.PERSONAL_DATA;\\n    }\\n  }\\n\\n  previousStage() {\\n    this.stage = RegisterStage.IMPORTANT_DATA;\\n  }\\n\\n  register() {\\n    if (this.registerSubscription && !this.registerSubscription.closed) return;\\n\\n    this.form.markAllAsTouched();\\n    this.form.updateValueAndValidity();\\n\\n    if (this.form.valid) {\\n      this.registerSubscription = this.authService\\n        .register(this.form.value)\\n        .pipe(\\n          catchError((e) => {\\n            this.handleError(e);\\n            return EMPTY;\\n          }),\\n        )\\n        .subscribe(() => {\\n          this.router.navigate([\'/\']);\\n        });\\n    }\\n  }\\n\\n  handleError(error: any) {\\n    switch (error.status) {\\n      case 422:\\n        switch (error.error.message) {\\n          case \'this email is already taken\':\\n            this.error = $localize`Email is already taken`;\\n            break;\\n          case \'this username is already taken\':\\n            this.error = $localize`Username is already taken`;\\n        }\\n        break;\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".logo {\\n  width: calc(100% - 80px);\\n  height: 64px;\\n  margin-top: 20px;\\n  background-image: url(\'/assets/metadata/logo_with_name.svg\');\\n  background-position: 0 50%;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n  cursor: pointer;\\n}\\n\\n.main {\\n  display: flex;\\n  width: 100%;\\n  min-height: 100vh;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: var(--color-neutral-800);\\n\\n  .box {\\n    display: flex;\\n    width: 100%;\\n    height: 100%;\\n\\n    .form-side {\\n      display: flex;\\n      width: 100%;\\n      height: 100%;\\n      flex-direction: column;\\n      align-items: center;\\n      justify-content: space-between;\\n      background-color: var(--color-gray-800);\\n\\n      form {\\n        display: flex;\\n        width: 100%;\\n        height: 100%;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        justify-content: center;\\n        padding: 4rem;\\n\\n        h2 {\\n          margin-bottom: 0.5rem;\\n        }\\n\\n        &>*:not(:last-child) {\\n          margin-bottom: 1.5rem;\\n        }\\n\\n        .agreements {\\n          display: flex;\\n        }\\n\\n        app-input {\\n          width: 100%;\\n        }\\n\\n        app-button {\\n          align-self: flex-end;\\n        }\\n\\n        a {\\n          color: var(--color-link);\\n          cursor: pointer;\\n          transition: color 0.2s ease;\\n\\n          &:hover {\\n            color: var(--color-link-hover);\\n          }\\n        }\\n\\n        .buttons {\\n          display: flex;\\n          width: 100%;\\n          justify-content: space-between;\\n        }\\n      }\\n    }\\n\\n    .image-side {\\n      background-color: var(--color-gray-700);\\n    }\\n  }\\n}\\n\\n@screen sm {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen md {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen lg {\\n  .main {\\n    .box {\\n      width: 950px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 450px;\\n      }\\n    }\\n  }\\n}\\n\\n@screen xl {\\n  .main {\\n    .box {\\n      width: 1240px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 520px;\\n      }\\n\\n      .image-side {\\n        width: 720px;\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./register.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<section class=\\"main\\">\\n  <section class=\\"box\\">\\n    <section class=\\"form-side\\">\\n      <div class=\\"logo\\" routerLink=\\"/\\"></div>\\n      <form [formGroup]=\\"form\\" (submit)=\\"register()\\">\\n        <div>\\n          <h2 class=\\"text-xl font-bold\\" i18n>Register</h2>\\n          <p class=\\"text-base\\" i18n>This is a secure site. Please enter your register information or if you have an\\n            account already, <a routerLink=\\"/auth/login\\">click here</a> to login.</p>\\n        </div>\\n\\n        <div *ngIf=\\"error\\" class=\\"error-box\\">\\n          {{ error }}\\n        </div>\\n\\n        <ng-container *ngIf=\\"stage===RegisterStage.IMPORTANT_DATA\\">\\n          <app-input formControlName=\\"email\\" type=\\"email\\" placeholder=\\"name@example.com\\" floatingLabel=\\"Email\\"\\n            i18n-floatingLabel i18n-placeholder></app-input>\\n\\n          <app-input formControlName=\\"password\\" type=\\"password\\" placeholder=\\"●●●●●●●\\" floatingLabel=\\"Password\\"\\n            i18n-floatingLabel i18n-placeholder></app-input>\\n\\n          <app-input formControlName=\\"repeatPassword\\" type=\\"password\\" placeholder=\\"●●●●●●●\\"\\n            floatingLabel=\\"Repeat password\\" i18n-floatingLabel i18n-placeholder></app-input>\\n\\n          <div class=\\"agreements\\">\\n            <app-checkbox formControlName=\\"agreements\\" i18n>\\n              I agree to the <a>End User License Agreement</a> and <a>Privacy Statement</a>.\\n            </app-checkbox>\\n          </div>\\n\\n          <app-button variant=\\"primary\\" type=\\"button\\" (click)=\\"nextStage()\\" i18n>Next</app-button>\\n        </ng-container>\\n        <ng-container *ngIf=\\"stage===RegisterStage.PERSONAL_DATA\\">\\n          <app-input formControlName=\\"name\\" type=\\"text\\" placeholder=\\"John\\" floatingLabel=\\"Name\\"\\n            i18n-floatingLabel=\\"first name of a person\\" i18n-placeholder></app-input>\\n\\n          <app-input formControlName=\\"surname\\" type=\\"text\\" placeholder=\\"Bayer\\" floatingLabel=\\"Surname\\"\\n            i18n-floatingLabel i18n-placeholder></app-input>\\n\\n          <app-input formControlName=\\"username\\" type=\\"text\\" placeholder=\\"John98\\" floatingLabel=\\"Username\\"\\n            i18n-floatingLabel i18n-placeholder></app-input>\\n          <div class=\\"buttons\\">\\n            <app-button variant=\\"primary\\" type=\\"button\\" (click)=\\"previousStage()\\" i18n>Back</app-button>\\n            <app-button variant=\\"primary\\" i18n>Register</app-button>\\n          </div>\\n        </ng-container>\\n      </form>\\n    </section>\\n    <section class=\\"image-side\\">\\n\\n    </section>\\n  </section>\\n</section>\\n"},{"name":"RestoreAccountPage","id":"component-RestoreAccountPage-e282e3f3f9c3afb445bc8a3a69d76ce1255776c7427e862acddc378f91c76850488476c769cfef493bbed461f7a142601bc5ce952acbf91a96d8f0a3cc2c3ff3","file":"src/app/auth/pages/restore-account/restore-account.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-restore-account-page","styleUrls":["./restore-account.page.scss"],"styles":[],"templateUrl":["./restore-account.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"logOut","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":""},{"name":"restore","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { AuthService } from \'@auth/services/auth/auth.service\';\\n\\n@Component({\\n  selector: \'app-restore-account-page\',\\n  templateUrl: \'./restore-account.page.html\',\\n  styleUrls: [\'./restore-account.page.scss\'],\\n})\\nexport class RestoreAccountPage {\\n  constructor(private authService: AuthService, private router: Router) {}\\n\\n  logOut() {\\n    this.authService.logout().subscribe();\\n  }\\n\\n  restore() {\\n    this.authService.recoverAccount().subscribe();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".logo {\\n  width: calc(100% - 80px);\\n  height: 64px;\\n  margin-top: 20px;\\n  background-image: url(\'/assets/metadata/logo_with_name.svg\');\\n  background-position: 0 50%;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n  cursor: pointer;\\n}\\n\\n.main {\\n  display: flex;\\n  width: 100%;\\n  min-height: 100vh;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: var(--color-neutral-800);\\n\\n  .box {\\n    display: flex;\\n    width: 100%;\\n    height: 100%;\\n\\n    .form-side {\\n      display: flex;\\n      width: 100%;\\n      height: 100%;\\n      flex-direction: column;\\n      align-items: center;\\n      justify-content: space-between;\\n      background-color: var(--color-gray-800);\\n\\n      form {\\n        display: flex;\\n        width: 100%;\\n        height: 100%;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        justify-content: center;\\n        padding: 4rem;\\n\\n        h2 {\\n          margin-bottom: 0.5rem;\\n        }\\n\\n        &>*:not(:last-child) {\\n          margin-bottom: 1.5rem;\\n        }\\n\\n        .actions {\\n          display: flex;\\n          width: 100%;\\n          justify-content: flex-end;\\n          margin-bottom: 1rem;\\n\\n          >*:not(:last-child) {\\n            margin-right: 1rem;\\n          }\\n        }\\n      }\\n    }\\n\\n    .image-side {\\n      background-color: var(--color-gray-700);\\n    }\\n  }\\n}\\n\\n@screen sm {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen md {\\n  .main {\\n    .box {\\n      width: 500px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 0;\\n      }\\n    }\\n  }\\n}\\n\\n@screen lg {\\n  .main {\\n    .box {\\n      width: 950px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 500px;\\n      }\\n\\n      .image-side {\\n        width: 450px;\\n      }\\n    }\\n  }\\n}\\n\\n@screen xl {\\n  .main {\\n    .box {\\n      width: 1240px;\\n      height: 770px;\\n\\n      .form-side {\\n        width: 520px;\\n      }\\n\\n      .image-side {\\n        width: 720px;\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./restore-account.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<section class=\\"main\\">\\n  <section class=\\"box\\">\\n    <section class=\\"form-side\\">\\n      <div class=\\"logo\\" routerLink=\\"/\\"></div>\\n      <form>\\n        <div>\\n          <h2 class=\\"text-xl font-bold\\" i18n>Restore account</h2>\\n          <p class=\\"text-base\\" i18n>Your account has been deleted. You can restore your account within 7 days of\\n            deletion.</p>\\n        </div>\\n\\n        <div class=\\"actions\\">\\n          <app-button variant=\\"secondary\\" (click)=\\"logOut()\\" i18n>Log out</app-button>\\n          <app-button variant=\\"primary\\" (click)=\\"restore()\\" i18n>Restore</app-button>\\n        </div>\\n      </form>\\n    </section>\\n    <section class=\\"image-side\\">\\n\\n    </section>\\n  </section>\\n</section>\\n"},{"name":"SchedulePage","id":"component-SchedulePage-86ed5324414215614b2461ac340a7c2d1c7541d523a040028d7abbee049b800a7cc258c8673d273cac45f894b8514f1a9dc2b81141cb1b8bdc022067aec28c71","file":"src/app/tasks/pages/schedule/schedule.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-schedule-page","styleUrls":["./schedule.page.scss"],"styles":[],"templateUrl":["./schedule.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"cursor","defaultValue":"dayjs().toDate()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"limitAfter","defaultValue":"20","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"limitBefore","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"project$","deprecated":false,"deprecationMessage":"","type":"Observable<Project>","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"schedule$","deprecated":false,"deprecationMessage":"","type":"Observable<Schedule>","optional":false,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { ProjectService } from \'@dashboard/services/project/project.service\';\\nimport { Schedule } from \'@tasks/interfaces/schedule.interface\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\nimport * as dayjs from \'dayjs\';\\nimport { Observable } from \'rxjs\';\\n\\n@Component({\\n  selector: \'app-schedule-page\',\\n  templateUrl: \'./schedule.page.html\',\\n  styleUrls: [\'./schedule.page.scss\'],\\n})\\nexport class SchedulePage implements OnInit {\\n  public schedule$: Observable<Schedule>;\\n  public project$: Observable<Project>;\\n\\n  public cursor = dayjs().toDate();\\n  public limitAfter = 20;\\n  public limitBefore = 0;\\n\\n  public get dates() {\\n    const { cursor, limitBefore, limitAfter } = this;\\n\\n    const dates = [];\\n\\n    for (let i = 0; i < limitBefore + limitAfter + 1; i++) {\\n      dates.push(\\n        dayjs(cursor)\\n          .subtract(limitBefore - i, \'day\')\\n          .toDate(),\\n      );\\n    }\\n\\n    return dates;\\n  }\\n\\n  constructor(\\n    private taskService: TaskService,\\n    private activatedRoute: ActivatedRoute,\\n    private projectService: ProjectService,\\n  ) {\\n    const { projectId } = this.activatedRoute.snapshot.params;\\n\\n    this.schedule$ = this.taskService.schedule(projectId);\\n    this.project$ = this.projectService.get(projectId);\\n  }\\n\\n  ngOnInit() {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../styles/typography\';\\n\\n:host {\\n  display: block;\\n  padding: 2rem;\\n}\\n\\n.schedule {\\n  display: flex;\\n  width: 100%;\\n  padding-left: 10px;\\n\\n  // Sections\\n\\n  .people-header {\\n    width: 80px;\\n    height: 100%;\\n    flex-shrink: 0;\\n    margin-right: 1rem;\\n    background-color: var(--color-secondary-800);\\n    border-radius: var(--border-radius);\\n  }\\n\\n  .timeline {\\n    width: 100%;\\n    height: 100%;\\n    flex-grow: 1;\\n    background-color: var(--color-secondary-800);\\n    border-radius: var(--border-radius);\\n    overflow-x: auto;\\n\\n    .cell {\\n      width: 130px;\\n      border-right: 1px solid var(--color-secondary-600);\\n    }\\n\\n    .group-event-row {\\n      .cell {\\n        border-top: 1px solid var(--color-secondary-600);\\n      }\\n    }\\n\\n    .single-person-row {\\n      .cell {\\n        border-top: 1px solid var(--color-secondary-600);\\n      }\\n    }\\n  }\\n\\n  // Rows\\n  .header-event-row,\\n  .group-event-row,\\n  .single-person-row {\\n    display: flex;\\n  }\\n\\n  .header-row {\\n    @include text-title;\\n\\n    display: flex;\\n    height: 64px;\\n    color: var(--color-text);\\n  }\\n\\n  .group-event-row {\\n    display: flex;\\n    height: 30px;\\n  }\\n\\n  .single-person-row {\\n    display: flex;\\n    width: 100%;\\n    height: 100px;\\n  }\\n\\n  .cell {\\n    display: flex;\\n    width: 100%;\\n    height: 100%;\\n    flex-direction: column;\\n    flex-shrink: 0;\\n    align-items: center;\\n    justify-content: center;\\n\\n    .number {\\n      @include text-title;\\n    }\\n\\n    .day-of-week {\\n      @include text-base;\\n    }\\n\\n    .task {\\n      width: 100%;\\n      height: 100%;\\n      padding: 10px;\\n      background-color: var(--color-primary-500);\\n      border-radius: var(--border-radius);\\n      color: var(--color-text);\\n    }\\n  }\\n}\\n\\n.avatar {\\n  @include text-xl;\\n\\n  display: flex;\\n  width: 40px;\\n  height: 40px;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: var(--color-primary-500);\\n  border-radius: 50%;\\n  color: var(--color-text);\\n  font-weight: 700;\\n  text-transform: uppercase;\\n}\\n","styleUrl":"./schedule.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":""}],"line":37,"jsdoctags":[{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"dates":{"name":"dates","getSignature":{"name":"dates","type":"","returnType":"","line":23}}},"templateData":"<app-view-options [project]=\\"(project$ | async)!\\"></app-view-options>\\n\\n<div class=\\"schedule\\" *ngLet=\\"schedule$ | async as schedule\\">\\n  <div class=\\"people-header\\">\\n    <div class=\\"header-row\\">\\n      <div class=\\"cell\\">\\n        {{ cursor | date:\'MMMM\' }}\\n      </div>\\n    </div>\\n    <div class=\\"group-event-row\\">\\n      \x3c!-- Nothing here, only spacing --\x3e\\n    </div>\\n    <div *ngFor=\\"let singleSchedule of schedule\\" class=\\"single-person-row\\">\\n      \x3c!-- Person avatar here --\x3e\\n      <div class=\\"cell\\">\\n        <div class=\\"avatar\\">\\n          {{ singleSchedule.user.name.substring(0, 1) }}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\"timeline\\">\\n    <div class=\\"header-row\\">\\n      \x3c!-- Day names here --\x3e\\n      <div class=\\"cell\\" *ngFor=\\"let date of dates\\">\\n        <span class=\\"number\\">{{ date | date:\'d\' }}</span>\\n        <span class=\\"day-of-week\\">{{ date | date:\'EEE\' }}</span>\\n      </div>\\n    </div>\\n    <div class=\\"group-event-row\\">\\n      \x3c!-- Group event goes here --\x3e\\n      <div class=\\"cell\\" *ngFor=\\"let date of dates\\"></div>\\n    </div>\\n    <div class=\\"single-person-row\\" *ngFor=\\"let singleSchedule of schedule\\">\\n      \x3c!-- Personal events here --\x3e\\n      <div class=\\"cell\\" *ngFor=\\"let date of dates\\">\\n        <ng-container *ngLet=\\"singleSchedule.tasks.get(date | date:\'YYYY-MM-dd\') as task\\">\\n          <div class=\\"task\\" *ngIf=\\"task\\">\\n            <span class=\\"name\\">\\n              {{ task.name }}\\n            </span>\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"SelectableIntegrationComponent","id":"component-SelectableIntegrationComponent-138fe6045fca0553fd41b33e5f73d89c1b0534ef7901131d61c8da442a9555492fcf054b5a162645b9a99347e5c63372bc40560985a217b62989e7574c09edf8","file":"src/app/dashboard/modules/integration-modules/components/selectable-integration/selectable-integration.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"selectable-integration","styleUrls":["./selectable-integration.component.scss"],"styles":[],"templateUrl":["./selectable-integration.component.html"],"viewProviders":[],"inputsClass":[{"name":"description","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"icon","deprecated":false,"deprecationMessage":"","line":15,"type":"string | IconDefinition","decorators":[]},{"name":"title","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { IconDefinition } from \'@fortawesome/fontawesome-svg-core\';\\nimport { faCircle } from \'@fortawesome/free-regular-svg-icons\';\\nimport { faCircleCheck } from \'@fortawesome/free-solid-svg-icons\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\n\\n@Component({\\n  selector: \'selectable-integration\',\\n  templateUrl: \'./selectable-integration.component.html\',\\n  styleUrls: [\'./selectable-integration.component.scss\'],\\n})\\nexport class SelectableIntegrationComponent extends ControlAccessor<boolean> {\\n  @Input() title!: string;\\n  @Input() description!: string;\\n  @Input() icon!: string | IconDefinition;\\n\\n  /** @ignore */\\n  faCircle = faCircle;\\n\\n  /** @ignore */\\n  faCircleCheck = faCircleCheck;\\n\\n  toggle() {\\n    this.control.setValue(!this.control.value);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".box {\\n  padding: 1rem;\\n  border-radius: var(--border-radius);\\n  border: 1px solid var(--color-secondary-500);\\n  position: relative;\\n  cursor: pointer;\\n  transition: background-color .1s ease;\\n\\n  &:hover {\\n    background-color: var(--color-secondary-700);\\n  }\\n}\\n\\n.checkbox {\\n  position: absolute;\\n  right: 1rem;\\n  top: 1rem;\\n}\\n","styleUrl":"./selectable-integration.component.scss"}],"stylesData":"","extends":"ControlAccessor","templateData":"<div class=\\"box\\" (click)=\\"toggle()\\">\\n  <div class=\\"checkbox\\">\\n    <app-icon [icon]=\\"control.value ? faCircleCheck : faCircle\\" size=\\"1rem\\" [class.text-green-500]=\\"control.value\\">\\n    </app-icon>\\n  </div>\\n  <div class=\\"flex mb-3\\">\\n    <app-icon [icon]=\\"icon\\" class=\\"mr-3\\"></app-icon>\\n    <h5 class=\\"text-title\\">{{ title }}</h5>\\n  </div>\\n  <p class=\\"text-base\\">{{ description }}</p>\\n</div>\\n"},{"name":"SelectComponent","id":"component-SelectComponent-010592e85766d35dc5b65559927f6345f05a803c05be4d3c02068020f47c0fa626efde946d6a53cd611ce31a996b1fd812fe70b9ea9e38cc951a4f423e7d61f0","file":"src/app/_main/components/select/select.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-select","styleUrls":["./select.component.scss"],"styles":[],"templateUrl":["./select.component.html"],"viewProviders":[],"inputsClass":[{"name":"allowResizeByError","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1566,"end":1594,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1567,"end":1571,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"TODO"},"comment":"<p>: Add documentation</p>\\n"}],"line":50,"type":"boolean","decorators":[]},{"name":"comparer","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1493,"end":1521,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1494,"end":1498,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"TODO"},"comment":"<p>: Add documentation</p>\\n"}],"line":45,"type":"string","decorators":[]},{"name":"floatingLabel","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFloating label text to display\\n","description":"<p>Floating label text to display</p>\\n","line":40,"type":"string","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"emptyOptions","deprecated":false,"deprecationMessage":"","type":"QueryList<EmptyOptionsComponent>","optional":true,"description":"","line":35,"decorators":[{"name":"ContentChildren","stringifiedArguments":"EmptyOptionsComponent"}]},{"name":"input","deprecated":false,"deprecationMessage":"","type":"InputComponent","optional":false,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'input\'"}]},{"name":"isOpen$","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52},{"name":"overlay","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLElement>","optional":false,"description":"","line":33,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'overlay\'"}]},{"name":"queryOptions","deprecated":false,"deprecationMessage":"","type":"QueryList<OptionComponent>","optional":true,"description":"","line":34,"decorators":[{"name":"ContentChildren","stringifiedArguments":"OptionComponent"}]},{"name":"selected$","defaultValue":"new BehaviorSubject<SelectLabel>({\\n    control: new FormControl(\'\'),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"compare","args":[{"name":"a","type":"any","deprecated":false,"deprecationMessage":""},{"name":"b","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"a","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"b","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"hideEmptyOptions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"loadOptions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":175,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"ControlAccessor"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"open","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"sameAsSelected","args":[{"name":"option","type":"OptionComponent | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"option","type":"OptionComponent | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"select","args":[{"name":"option","type":"OptionComponent | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":144,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"option","type":"OptionComponent | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setActiveOption","args":[{"name":"option","type":"OptionComponent | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"option","type":"OptionComponent | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showEmptyOptions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  AfterViewInit,\\n  ChangeDetectionStrategy,\\n  ChangeDetectorRef,\\n  Component,\\n  ContentChildren,\\n  ElementRef,\\n  Input,\\n  QueryList,\\n  ViewChild,\\n} from \'@angular/core\';\\nimport { NgControl } from \'@angular/forms\';\\nimport { faChevronDown } from \'@fortawesome/free-solid-svg-icons\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { FormControl } from \'@ngneat/reactive-forms\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\nimport { isEqual, isNil } from \'lodash-es\';\\nimport { BehaviorSubject, filter, fromEvent, take } from \'rxjs\';\\nimport { InputComponent } from \'../input/input.component\';\\nimport { EmptyOptionsComponent } from \'./empty-options/empty-options.component\';\\nimport { OptionComponent } from \'./option/option.component\';\\nimport { SelectLabel } from \'./select-label.model\';\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'app-select\',\\n  templateUrl: \'./select.component.html\',\\n  styleUrls: [\'./select.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SelectComponent extends ControlAccessor implements AfterViewInit {\\n  @ViewChild(\'input\') input!: InputComponent;\\n  @ViewChild(\'overlay\') overlay!: ElementRef<HTMLElement>;\\n  @ContentChildren(OptionComponent) queryOptions?: QueryList<OptionComponent>;\\n  @ContentChildren(EmptyOptionsComponent) emptyOptions?: QueryList<EmptyOptionsComponent>;\\n\\n  /**\\n   * Floating label text to display\\n   */\\n  @Input() floatingLabel?: string;\\n\\n  /**\\n   * @TODO: Add documentation\\n   */\\n  @Input() comparer?: string;\\n\\n  /**\\n   * @TODO: Add documentation\\n   */\\n  @Input() allowResizeByError?: boolean;\\n\\n  isOpen$ = new BehaviorSubject<boolean>(false);\\n  selected$ = new BehaviorSubject<SelectLabel>({\\n    control: new FormControl(\'\'),\\n  });\\n\\n  /** @ignore */\\n  overlayMinWidth = 0;\\n\\n  /** @ignore */\\n  faChevronDown = faChevronDown;\\n\\n  constructor(ngControl: NgControl, cdRef: ChangeDetectorRef) {\\n    super(ngControl, cdRef);\\n  }\\n\\n  public open() {\\n    this.overlayMinWidth = this.input.input.nativeElement.clientWidth;\\n    setTimeout(() => {\\n      fromEvent(document, \'click\')\\n        .pipe(\\n          untilDestroyed(this),\\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\\n          take(1),\\n        )\\n        .subscribe(() => this.close());\\n      this.isOpen$.next(true);\\n    });\\n  }\\n\\n  public ngAfterViewInit(): void {\\n    this.loadOptions();\\n\\n    this.control.valueChanges.subscribe(() => {\\n      this.loadOptions();\\n    });\\n\\n    this.queryOptions?.changes.subscribe(() => {\\n      this.loadOptions();\\n    });\\n  }\\n\\n  public close() {\\n    this.isOpen$.next(false);\\n  }\\n\\n  public toggle() {\\n    if (this.isOpen$.value) {\\n      return this.close();\\n    }\\n    return this.open();\\n  }\\n\\n  private loadOptions() {\\n    let activeOption = null;\\n\\n    if (!this.queryOptions || this.queryOptions.length === 0) {\\n      this.showEmptyOptions();\\n      return;\\n    } else {\\n      this.hideEmptyOptions();\\n    }\\n\\n    this.queryOptions.forEach((option, index) => {\\n      option.ref.nativeElement.addEventListener(\'click\', () => {\\n        this.select(this.queryOptions?.get(index)!);\\n      });\\n\\n      if (this.compare(option.value, this.control.value)) {\\n        activeOption = option;\\n      }\\n    });\\n\\n    this.setActiveOption(activeOption);\\n\\n    this.cdRef.detectChanges();\\n  }\\n\\n  private setActiveOption(option: OptionComponent | null) {\\n    const currentLabel = this.selected$.getValue();\\n    currentLabel.control.setValue(option?.viewValue || \'\');\\n    currentLabel.icon = option?.icon;\\n    currentLabel.optionComponent = option || undefined;\\n    this.selected$.next(currentLabel);\\n  }\\n\\n  private sameAsSelected(option: OptionComponent | null) {\\n    return (\\n      this.selected$.value.optionComponent === option ||\\n      this.selected$.value.optionComponent?.value === option?.value\\n    );\\n  }\\n\\n  public select(option: OptionComponent | null) {\\n    this.close();\\n    if (this.sameAsSelected(option)) return;\\n\\n    this.setActiveOption(option);\\n    this.control.setValue(isNil(option?.value) ? null : option!.value);\\n    if (option) option.selected = true;\\n  }\\n\\n  private compare(a: any, b: any) {\\n    const { comparer } = this;\\n\\n    if (comparer && a && b && (a[comparer] !== undefined || b[comparer] !== undefined)) {\\n      return a[comparer] === b[comparer];\\n    } else {\\n      return a == b || isEqual(a, b);\\n    }\\n  }\\n\\n  private showEmptyOptions() {\\n    this.emptyOptions?.forEach((emptyOption) => {\\n      emptyOption.show();\\n    });\\n  }\\n\\n  private hideEmptyOptions() {\\n    this.emptyOptions?.forEach((emptyOption) => {\\n      emptyOption.hide();\\n    });\\n  }\\n\\n  override ngAfterControlInit(): void {\\n    if (!this.control) return;\\n\\n    this.control.touch$.pipe(untilDestroyed(this)).subscribe(() => {\\n      this.selected$.value.control.markAsTouched();\\n    });\\n\\n    this.control.errors$.pipe(untilDestroyed(this)).subscribe((errors) => {\\n      this.selected$.value.control.setErrors(errors);\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: inline-block;\\n  position: relative;\\n  width: 100%;\\n}\\n\\n.overlay {\\n  overflow: auto;\\n  width: 100%;\\n  max-height: 300px;\\n  padding: 1rem;\\n  padding: 0.5rem 0;\\n  background-color: var(--color-secondary-600);\\n  border-radius: var(--border-radius);\\n  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.1);\\n}\\n\\n.trigger {\\n  position: absolute;\\n  height: 44px;\\n}\\n\\n:host ::ng-deep {\\n\\n  app-input,\\n  &>*,\\n  input {\\n    color: var(--color-text);\\n    cursor: pointer !important;\\n  }\\n}\\n","styleUrl":"./select.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":61,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"ControlAccessor","implements":["AfterViewInit"],"templateData":"<ng-container *ngIf=\\"isControlInitialized\\">\\n  <ng-container *ngLet=\\"selected$ | async as selected\\">\\n    <div class=\\"trigger\\" #trigger=\\"cdkOverlayOrigin\\" cdkOverlayOrigin></div>\\n    <app-input #input (click)=\\"toggle()\\" type=\\"text\\" [formControl]=\\"selected.control\\" [readonly]=\\"true\\"\\n      [floatingLabel]=\\"floatingLabel\\" [allowResizeByError]=\\"allowResizeByError\\">\\n      <app-icon class=\\"prefix\\" *ngIf=\\"selected.icon\\" size=\\"1rem\\" [icon]=\\"selected.icon\\"></app-icon>\\n      <app-icon class=\\"suffix\\" [icon]=\\"faChevronDown\\" size=\\"0.75rem\\"></app-icon>\\n    </app-input>\\n\\n    <ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\\"trigger\\"\\n      [cdkConnectedOverlayOpen]=\\"(isOpen$ | async) || false\\"\\n      [cdkConnectedOverlayBackdropClass]=\\"\'cdk-overlay-transparent-backdrop\'\\" [cdkConnectedOverlayHasBackdrop]=\\"true\\"\\n      [cdkConnectedOverlayMinWidth]=\\"overlayMinWidth + \'px\'\\" [cdkConnectedOverlayWidth]=\\"overlayMinWidth + \'px\'\\">\\n      <div #overlay class=\\"overlay\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </ng-template>\\n  </ng-container>\\n</ng-container>\\n"},{"name":"SettingsAccountPage","id":"component-SettingsAccountPage-7e73c96632114e11f5a040ffca4b4707d52d85a076ca548a4833017f196d1185943a3d59ae141346a15e7c4d65c87e0e3d68b7d535dd9c95d5f5c65f43be9b5a","file":"src/app/settings/pages/settings-account/settings-account.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-settings-account-page","styleUrls":["./settings-account.page.scss"],"styles":[],"templateUrl":["./settings-account.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"form","defaultValue":"new FormGroup({\\n    email: new FormControl(\'\', requiredValidator()),\\n    name: new FormControl(\'\', requiredValidator()),\\n    surname: new FormControl(\'\', requiredValidator()),\\n    username: new FormControl(\'\', requiredValidator()),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]}],"methodsClass":[{"name":"deleteAccountMailCheck","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":""},{"name":"resetPassword","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":""},{"name":"submit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { AuthService } from \'@auth/services/auth/auth.service\';\\nimport { UserService } from \'@auth/services/user/user.service\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\nimport { SnackbarService } from \'@main/services/snackbar/snackbar.service\';\\n\\n@Component({\\n  selector: \'app-settings-account-page\',\\n  templateUrl: \'./settings-account.page.html\',\\n  styleUrls: [\'./settings-account.page.scss\'],\\n})\\nexport class SettingsAccountPage implements OnInit {\\n  constructor(\\n    private userService: UserService,\\n    private authService: AuthService,\\n    private snackbarService: SnackbarService,\\n  ) {}\\n\\n  public form = new FormGroup({\\n    email: new FormControl(\'\', requiredValidator()),\\n    name: new FormControl(\'\', requiredValidator()),\\n    surname: new FormControl(\'\', requiredValidator()),\\n    username: new FormControl(\'\', requiredValidator()),\\n  });\\n\\n  ngOnInit() {\\n    this.userService.getMyself().subscribe((response) => {\\n      this.form.patchValue(response);\\n    });\\n  }\\n\\n  submit() {\\n    this.form.markAllAsTouched();\\n    this.form.updateValueAndValidity();\\n    if (this.form.invalid) return;\\n\\n    this.userService.update(this.form.value).subscribe(() => {\\n      this.snackbarService.show($localize`Account updated successfully`);\\n    });\\n  }\\n\\n  resetPassword() {\\n    const email = this.form.get(\'email\').value;\\n\\n    this.authService.resetPassword({ email }).subscribe(() => {\\n      this.authService.logout().subscribe();\\n    });\\n  }\\n\\n  deleteAccountMailCheck() {\\n    this.authService.deleteAccount().subscribe(() => {\\n      // TODO: dodac popup czy na pewno zgadzamy sie na usuniecie konta, jesli tak to infomracja ze zostal wyslany link na maila dezaktywujacy konto i ze ma mozliwosc jego przywrocenia do 7 dni\\n      this.authService.logout().subscribe();\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  width: 100%;\\n}\\n\\n.actions {\\n  display: flex;\\n  width: 100%;\\n  justify-content: flex-end;\\n  margin-bottom: 2rem;\\n}\\n\\nform>*:not(:last-child) {\\n  margin-bottom: 1.5rem;\\n}\\n","styleUrl":"./settings-account.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"snackbarService","type":"SnackbarService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"snackbarService","type":"SnackbarService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 class=\\"text-xl font-bold mb-5\\" i18n>Account</h2>\\n<form [formGroup]=\\"form\\" (submit)=\\"submit()\\">\\n\\n  \x3c!-- Email --\x3e\\n  <app-input formControlName=\\"email\\" type=\\"email\\" staticLabel=\\"Email\\" placeholder=\\"test@example.com\\" class=\\"full-width\\"\\n    i18n-staticLabel i18n-placeholder [readonly]=\\"true\\">\\n  </app-input>\\n\\n  \x3c!-- Username --\x3e\\n  <app-input formControlName=\\"username\\" type=\\"text\\" staticLabel=\\"Username\\" placeholder=\\"John98\\" class=\\"full-width\\"\\n    i18n-staticLabel i18n-placeholder [readonly]=\\"true\\">\\n  </app-input>\\n\\n  \x3c!-- Name --\x3e\\n  <app-input formControlName=\\"name\\" type=\\"text\\" staticLabel=\\"Name\\" placeholder=\\"John\\" class=\\"full-width\\"\\n    i18n-staticLabel=\\"first name of a person\\" i18n-placeholder>\\n  </app-input>\\n\\n  \x3c!-- Surname --\x3e\\n  <app-input formControlName=\\"surname\\" type=\\"text\\" staticLabel=\\"Surname\\" placeholder=\\"Smith\\" class=\\"full-width\\"\\n    i18n-staticLabel i18n-placeholder>\\n  </app-input>\\n\\n  \x3c!-- Actions section --\x3e\\n  <div class=\\"actions\\">\\n    <app-button variant=\\"primary\\" i18n>Update profile</app-button>\\n  </div>\\n\\n  \x3c!-- Change password card --\x3e\\n  <app-card class=\\"block mb-10\\">\\n    <div class=\\"card-title\\" i18n>Change password</div>\\n    <div class=\\"card-content\\" i18n>It\'s highly recommended to change the password every 30 days. It will increase your\\n      account security.</div>\\n    <div class=\\"card-actions\\">\\n      <app-button type=\\"button\\" (click)=\\"resetPassword()\\" variant=\\"secondary\\" i18n>Change password</app-button>\\n    </div>\\n  </app-card>\\n\\n  \x3c!-- Delete account card --\x3e\\n  <app-card class=\\"important\\">\\n    <div class=\\"card-title\\" i18n>Delete account</div>\\n    <div class=\\"card-content\\" i18n>Delete your account permanently. All not shared owned projects will also be deleted.\\n      This action is reversible in period of 7 days - you need to log in to your account in this time to revert your\\n      account deletion.</div>\\n    <div class=\\"card-actions\\">\\n      <app-button type=\\"button\\" (click)=\\"deleteAccountMailCheck()\\" variant=\\"important\\" i18n>Delete account</app-button>\\n    </div>\\n  </app-card>\\n\\n</form>\\n"},{"name":"SettingsIntegrationsPage","id":"component-SettingsIntegrationsPage-d65bb50747c154151ba81a46a4404f66924e19f3327bf4e3b694ae55628a6766f787bb8435a98955cf2cb4d066901efb87b82a0629f4af4e9617d4abb6ebca27","file":"src/app/settings/pages/settings-integrations/settings-integrations.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-settings-integrations","styleUrls":["./settings-integrations.page.scss"],"styles":[],"templateUrl":["./settings-integrations.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"gitHubAccounts$","deprecated":false,"deprecationMessage":"","type":"Observable<GitAccountWithUsage[]>","optional":false,"description":"","line":20,"modifierKind":[123]}],"methodsClass":[{"name":"disconnect","args":[{"name":"account","type":"GitAccount","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"account","type":"GitAccount","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getConnectedProjects","args":[{"name":"account","type":"GitAccount","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<string>","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"account","type":"GitAccount","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"loadGitHubIntegration","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":""},{"name":"openGitHubIntegration","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { GitAccount } from \'@dashboard/interfaces/git-integration.interface\';\\nimport { GitIntegrationService } from \'@dashboard/services/git-integration/git-integration.service\';\\nimport { map, Observable, take } from \'rxjs\';\\nimport { faPlus } from \'@fortawesome/free-solid-svg-icons\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\n\\ninterface GitAccountWithUsage {\\n  account: GitAccount;\\n  usage: Observable<string>;\\n}\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'app-settings-integrations\',\\n  templateUrl: \'./settings-integrations.page.html\',\\n  styleUrls: [\'./settings-integrations.page.scss\'],\\n})\\nexport class SettingsIntegrationsPage implements OnInit {\\n  public gitHubAccounts$!: Observable<GitAccountWithUsage[]>;\\n\\n  /** @ignore */\\n  faPlus = faPlus;\\n\\n  constructor(private gitIntegrationService: GitIntegrationService) {}\\n\\n  ngOnInit() {\\n    this.loadGitHubIntegration();\\n  }\\n\\n  public openGitHubIntegration() {\\n    this.gitIntegrationService.startGitHubIntegration().pipe(untilDestroyed(this)).subscribe();\\n  }\\n\\n  public loadGitHubIntegration(): void {\\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\\n      map((accounts) => {\\n        return accounts.map((account) => {\\n          return {\\n            account,\\n            usage: this.getConnectedProjects(account).pipe(take(1)),\\n          };\\n        });\\n      }),\\n    );\\n  }\\n\\n  public disconnect(account: GitAccount): void {\\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\\n      window.open(link, \'_blank\');\\n    });\\n  }\\n\\n  public getConnectedProjects(account: GitAccount): Observable<string> {\\n    return this.gitIntegrationService\\n      .getGitHubAccountConnectedProjects(account)\\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(\', \')));\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".list {\\n  >* {\\n    display: block;\\n    margin-top: 1rem;\\n  }\\n}\\n\\nform>*:not(:last-child) {\\n  margin-bottom: 1.5rem;\\n}\\n","styleUrl":"./settings-integrations.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":""}],"line":23,"jsdoctags":[{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 class=\\"text-xl font-bold mb-5\\" i18n>Integrations</h2>\\n\\n\x3c!-- GitHub integrations list --\x3e\\n<ng-container>\\n  <app-list-group label=\\"GitHub\\" i18n-label>\\n    <app-button [icon]=\\"faPlus\\" class=\\"suffix\\" variant=\\"transparent\\" (click)=\\"openGitHubIntegration()\\"></app-button>\\n  </app-list-group>\\n  <div class=\\"list\\">\\n    <app-integration-entry *ngFor=\\"let o of gitHubAccounts$ | async\\" [label]=\\"o.account.gitHubUsername\\"\\n      [integration]=\\"o.account\\" (disconnect)=\\"disconnect($event)\\" [suspended]=\\"o.account.suspended\\"\\n      [description]=\\"o.usage | async\\" i18n-label>\\n    </app-integration-entry>\\n  </div>\\n</ng-container>\\n"},{"name":"SettingsLocalizationPage","id":"component-SettingsLocalizationPage-4c62238b3173a432e6bbba4c9e902b42731f96a646f0c7a3a76a6a7605da5060cd528c9ae99ecb8cdbb5e6ced61b74f6c6b6a01ee904c4b3cccbeb4949ead90f","file":"src/app/settings/pages/settings-localization/settings-localization.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-settings-localization-page","styleUrls":["./settings-localization.page.scss"],"styles":[],"templateUrl":["./settings-localization.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"dateFormats","defaultValue":"[\'YYYY-MM-DD\', \'DD-MM-YYYY\', \'MM/DD/YYYY\', \'DD.MM.YYYY\'].map((format) => ({\\n    format,\\n    example: dayjs().format(format),\\n  }))","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53},{"name":"form","defaultValue":"new FormGroup({\\n    language: new FormControl(\'\', requiredValidator()),\\n    dateFormat: new FormControl(\'\'),\\n    timeFormat: new FormControl(\'\'),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"languages","defaultValue":"[\\n    {\\n      code: \'de-DE\',\\n      name: \'Deutsch\',\\n    },\\n    {\\n      code: \'en-GB\',\\n      name: \'English (British)\',\\n    },\\n    {\\n      code: \'es-ES\',\\n      name: \'Español\',\\n    },\\n    {\\n      code: \'it-IT\',\\n      name: \'Italiano\',\\n    },\\n    {\\n      code: \'pl-PL\',\\n      name: \'Polski\',\\n    },\\n    {\\n      code: \'en-US\',\\n      name: \'English (American)\',\\n    },\\n    {\\n      code: \'uk-UA\',\\n      name: \'Українська\',\\n    },\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":22},{"name":"timeFormats","defaultValue":"[\'HH:mm\', \'hh:mm A\', \'hh:mm a\'].map((format) => ({\\n    format,\\n    example: dayjs().format(format),\\n  }))","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":58}],"methodsClass":[{"name":"changeLanguage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":""},{"name":"submit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\nimport * as dayjs from \'dayjs\';\\nimport { UserService } from \'../../../auth/services/user/user.service\';\\nimport { environment } from \'src/environments/environment\';\\nimport { SnackbarService } from \'@main/services/snackbar/snackbar.service\';\\n\\n@Component({\\n  selector: \'app-settings-localization-page\',\\n  templateUrl: \'./settings-localization.page.html\',\\n  styleUrls: [\'./settings-localization.page.scss\'],\\n})\\nexport class SettingsLocalizationPage implements OnInit {\\n  public form = new FormGroup({\\n    language: new FormControl(\'\', requiredValidator()),\\n    dateFormat: new FormControl(\'\'),\\n    timeFormat: new FormControl(\'\'),\\n  });\\n\\n  // TODO: Move this section to a service\\n  languages = [\\n    {\\n      code: \'de-DE\',\\n      name: \'Deutsch\',\\n    },\\n    {\\n      code: \'en-GB\',\\n      name: \'English (British)\',\\n    },\\n    {\\n      code: \'es-ES\',\\n      name: \'Español\',\\n    },\\n    {\\n      code: \'it-IT\',\\n      name: \'Italiano\',\\n    },\\n    {\\n      code: \'pl-PL\',\\n      name: \'Polski\',\\n    },\\n    {\\n      code: \'en-US\',\\n      name: \'English (American)\',\\n    },\\n    {\\n      code: \'uk-UA\',\\n      name: \'Українська\',\\n    },\\n  ];\\n\\n  dateFormats = [\'YYYY-MM-DD\', \'DD-MM-YYYY\', \'MM/DD/YYYY\', \'DD.MM.YYYY\'].map((format) => ({\\n    format,\\n    example: dayjs().format(format),\\n  }));\\n\\n  timeFormats = [\'HH:mm\', \'hh:mm A\', \'hh:mm a\'].map((format) => ({\\n    format,\\n    example: dayjs().format(format),\\n  }));\\n\\n  constructor(private userService: UserService, private snackbarService: SnackbarService) {}\\n\\n  ngOnInit() {\\n    this.userService.getMyself().subscribe((user) => {\\n      this.form.patchValue(user);\\n    });\\n  }\\n\\n  changeLanguage() {\\n    this.userService.update(this.form.value).subscribe(() => {\\n      localStorage.setItem(\'language\', this.form.value.language);\\n\\n      if (environment.production) {\\n        location.href = `https://vernite.dev/${this.form.value.language}/settings/localization`;\\n      } else {\\n        this.snackbarService.show(\'Language changed (But nothing changes in dev mode)\');\\n      }\\n    });\\n  }\\n\\n  submit() {\\n    this.changeLanguage();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  width: 100%;\\n}\\n\\n.actions {\\n  display: flex;\\n  width: 100%;\\n  justify-content: flex-end;\\n  margin-bottom: 1rem;\\n}\\n\\nform>*:not(:last-child) {\\n  margin-bottom: 1.5rem;\\n}\\n","styleUrl":"./settings-localization.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"snackbarService","type":"SnackbarService","deprecated":false,"deprecationMessage":""}],"line":61,"jsdoctags":[{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"snackbarService","type":"SnackbarService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 class=\\"text-xl font-bold mb-5\\" i18n>Localization</h2>\\n<form [formGroup]=\\"form\\" (submit)=\\"submit()\\">\\n\\n  \x3c!-- Language --\x3e\\n  <app-select formControlName=\\"language\\" floatingLabel=\\"Language\\" class=\\"full-width\\" i18n-floatingLabel>\\n    <app-option *ngFor=\\"let language of languages\\" [value]=\\"language.code\\">{{ language.name }}</app-option>\\n  </app-select>\\n\\n  \x3c!-- Date format --\x3e\\n  <app-select formControlName=\\"dateFormat\\" floatingLabel=\\"Date format\\" class=\\"full-width\\" i18n-floatingLabel>\\n    <app-option *ngFor=\\"let dateFormat of dateFormats\\" [value]=\\"dateFormat.format\\">{{ dateFormat.example }}</app-option>\\n  </app-select>\\n\\n  \x3c!-- Time format --\x3e\\n  <app-select formControlName=\\"timeFormat\\" floatingLabel=\\"Time format\\" class=\\"full-width\\" i18n-floatingLabel>\\n    <app-option *ngFor=\\"let timeFormat of timeFormats\\" [value]=\\"timeFormat.format\\">{{ timeFormat.example }}</app-option>\\n  </app-select>\\n\\n  \x3c!-- Actions section --\x3e\\n  <div class=\\"actions\\">\\n    <app-button variant=\\"primary\\" i18n>Save settings</app-button>\\n  </div>\\n\\n</form>\\n"},{"name":"SettingsPage","id":"component-SettingsPage-73c8a2e740f1a8d81a79a922243e6f0e0e1acf8b87af9ef7f1451c28fc6cd1ad57f4b78c8f85053b6c825ebc4668d02789f2e2d87c9af0efab677eac578952ae","file":"src/app/settings/pages/settings/settings.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-settings-page","styleUrls":["./settings.page.scss"],"styles":[],"templateUrl":["./settings.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"faAddressCard","defaultValue":"faAddressCard","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"faCircleNodes","defaultValue":"faCircleNodes","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":12},{"name":"faGlobe","defaultValue":"faGlobe","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":11},{"name":"faUser","defaultValue":"faUser","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { faAddressCard, faCircleNodes, faGlobe, faUser } from \'@fortawesome/free-solid-svg-icons\';\\n\\n@Component({\\n  selector: \'app-settings-page\',\\n  templateUrl: \'./settings.page.html\',\\n  styleUrls: [\'./settings.page.scss\'],\\n})\\nexport class SettingsPage implements OnInit {\\n  faUser = faUser;\\n  faGlobe = faGlobe;\\n  faCircleNodes = faCircleNodes;\\n  faAddressCard = faAddressCard;\\n\\n  constructor() {}\\n\\n  ngOnInit() {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../styles/typography\';\\n\\nsection {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.sidebar {\\n  width: 315px;\\n  height: 100%;\\n  padding: 40px;\\n\\n  a {\\n    @include text-base;\\n\\n    position: relative;\\n    display: flex;\\n    align-items: center;\\n    padding: 8px 10px;\\n    margin-bottom: 0.35rem;\\n    border-radius: var(--border-radius);\\n    color: var(--color-text);\\n    transition: background-color 0.2s ease-in-out;\\n\\n    app-icon {\\n      margin-right: 1rem;\\n    }\\n\\n    &:hover {\\n      background-color: var(--color-secondary-500);\\n    }\\n\\n    &.active {\\n      background-color: var(--color-secondary-500);\\n\\n      &::before {\\n        position: absolute;\\n        top: 10%;\\n        left: -10px;\\n        width: 4px;\\n        height: 80%;\\n        background-color: var(--color-primary-700);\\n        border-radius: var(--border-radius);\\n        content: \'\';\\n      }\\n    }\\n  }\\n}\\n\\n.content {\\n  width: 100%;\\n  max-width: 800px;\\n  padding: 40px;\\n}\\n","styleUrl":"./settings.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":13},"implements":["OnInit"],"templateData":"<section>\\n\\n  \x3c!-- Sidebar navigation --\x3e\\n  <nav class=\\"sidebar\\">\\n    <ul>\\n\\n      \x3c!-- Account settings --\x3e\\n      <li>\\n        <a routerLink=\\"/settings/account\\" routerLinkActive=\\"active\\">\\n          <app-icon [icon]=\\"faUser\\" size=\\"16px\\"></app-icon>\\n          <span>Account</span>\\n        </a>\\n      </li>\\n\\n      \x3c!-- Localization settings --\x3e\\n      <li>\\n        <a routerLink=\\"/settings/localization\\" routerLinkActive=\\"active\\">\\n          <app-icon [icon]=\\"faGlobe\\" size=\\"16px\\"></app-icon>\\n          <span>Localization</span>\\n        </a>\\n      </li>\\n\\n      \x3c!-- Integrations settings --\x3e\\n      <li>\\n        <a routerLink=\\"/settings/integrations\\" routerLinkActive=\\"active\\">\\n          <app-icon [icon]=\\"faCircleNodes\\" size=\\"16px\\"></app-icon>\\n          <span>Integrations</span>\\n        </a>\\n      </li>\\n\\n      \x3c!-- Sessions settings --\x3e\\n      <li>\\n        <a routerLink=\\"/settings/sessions\\" routerLinkActive=\\"active\\">\\n          <app-icon [icon]=\\"faAddressCard\\" size=\\"16px\\"></app-icon>\\n          <span>Sessions</span>\\n        </a>\\n      </li>\\n\\n    </ul>\\n  </nav>\\n\\n  \x3c!-- Content of the settings page --\x3e\\n  <div class=\\"content\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n\\n</section>\\n"},{"name":"SettingsSessionsPage","id":"component-SettingsSessionsPage-0fd80a089101fe8130b1445e56aefca3489b0cfce4ce4e35b672e064f27dcabab42fd08293501023dde64a3b93862ee7eedb25cdb145621ab6d86763889ac87b","file":"src/app/settings/pages/settings-sessions/settings-sessions.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-settings-sessions","styleUrls":["./settings-sessions.page.scss"],"styles":[],"templateUrl":["./settings-sessions.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"sessionsList$","deprecated":false,"deprecationMessage":"","type":"Observable<UserSession[]>","optional":false,"description":"","line":14,"modifierKind":[123]}],"methodsClass":[{"name":"agentType","args":[{"name":"type","type":"string","deprecated":false,"deprecationMessage":""},{"name":"agent","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"type","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"agent","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"changeDate","args":[{"name":"date","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"date","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"deleteSession","args":[{"name":"id","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"location","args":[{"name":"geoip","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"geoip","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport * as dayjs from \'dayjs\';\\nimport { Observable } from \'rxjs\';\\nimport * as UAParser from \'ua-parser-js\';\\nimport { UserSession } from \'../../interfaces/session.interface\';\\nimport { SessionsService } from \'../../services/sessions.service\';\\n\\n@Component({\\n  selector: \'app-settings-sessions\',\\n  templateUrl: \'./settings-sessions.page.html\',\\n  styleUrls: [\'./settings-sessions.page.scss\'],\\n})\\nexport class SettingsSessionsPage implements OnInit {\\n  public sessionsList$!: Observable<UserSession[]>;\\n\\n  constructor(private sessionService: SessionsService) {}\\n  ngOnInit() {\\n    this.sessionsList$ = this.sessionService.list();\\n  }\\n\\n  changeDate(date: number) {\\n    let currentDate = dayjs();\\n    let sessionDate = dayjs(date);\\n\\n    if (currentDate.year() != sessionDate.year()) {\\n      if (currentDate.diff(sessionDate, \'month\') > 0) {\\n        return sessionDate.format(\'LL\');\\n      } else {\\n        return sessionDate.format(\'LLL\');\\n      }\\n    } else {\\n      return sessionDate.format(\'MMMM D, h:mm A\');\\n    }\\n  }\\n\\n  agentType(type: string, agent: string) {\\n    let uaParser = new UAParser(agent);\\n    let osName = uaParser.getOS().name || \'Unknown system\';\\n    let browser = uaParser.getBrowser().name || \'Unknown browser\';\\n    if (type == \'os\') {\\n      return osName;\\n    }\\n    if (type == \'browser\') {\\n      return browser;\\n    }\\n    return osName + \', \' + browser;\\n  }\\n\\n  location(geoip: UserSession[\'geoip\']) {\\n    let location = \'\';\\n    if (geoip.city) {\\n      location += geoip.city;\\n    }\\n    if (geoip.country) {\\n      if (location) location += \', \';\\n      location += geoip.country;\\n    }\\n    return location;\\n  }\\n\\n  deleteSession(id: number) {\\n    this.sessionService.delete(id).subscribe();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".list {\\n  >* {\\n    display: block;\\n    margin-top: 1rem;\\n  }\\n}\\n\\n.sessions-entry {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 15px;\\n  border: 1px solid var(--color-secondary-300);\\n  border-radius: var(--border-radius);\\n\\n  .labels {\\n    display: flex;\\n    width: 100%;\\n    flex-direction: column;\\n    margin-bottom: 0;\\n\\n    .agent,\\n    .local {\\n      display: flex;\\n    }\\n\\n    mark {\\n      display: block;\\n      margin-left: 0.5rem;\\n      background-color: transparent;\\n      color: var(--color-primary-400);\\n    }\\n\\n    .description {\\n      display: block;\\n      padding-left: 0.5rem;\\n      opacity: 0.5;\\n    }\\n  }\\n}\\n\\n.actions {\\n  flex-grow: 1;\\n  flex-shrink: 0;\\n}\\n\\nform>*:not(:last-child) {\\n  margin-bottom: 1.5rem;\\n}\\n","styleUrl":"./settings-sessions.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"sessionService","type":"SessionsService","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"sessionService","type":"SessionsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 class=\\"text-xl font-bold mb-5\\" i18n>Sessions</h2>\\n\\n\x3c!-- Sessions list --\x3e\\n<ng-container>\\n  <app-list-group label=\\"Where You are logged in\\" i18n-label></app-list-group>\\n  <div class=\\"list\\">\\n    <ul *ngFor=\\"let session of sessionsList$ | async\\">\\n      <li>\\n        <div class=\\"sessions-entry\\">\\n          <div class=\\"labels\\">\\n            <div class=\\"agent\\">\\n              <p class=\\"text-base label\\">\\n                {{ agentType(\\"os\\", session.userAgent) }},\\n              </p>\\n              <p class=\\"text-base description\\">\\n                {{ agentType(\\"browser\\", session.userAgent) }}\\n              </p>\\n            </div>\\n            <div class=\\"local\\">\\n              <p *ngIf=\\"session.geoip\\" class=\\"text-base\\">\\n                {{ location(session.geoip) }}\\n              </p>\\n              <p *ngIf=\\"!session.current\\" class=\\"text-base description\\">\\n                {{ changeDate(session.lastUsed) }}\\n              </p>\\n              <p *ngIf=\\"session.current\\" class=\\"text-base\\">\\n                <mark i18n>Active now</mark>\\n              </p>\\n            </div>\\n          </div>\\n          <div *ngIf=\\"!session.current\\" class=\\"actions\\">\\n            <app-button variant=\\"secondary\\" (click)=\\"deleteSession(session.id)\\" i18n>Log out</app-button>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</ng-container>\\n"},{"name":"SidebarNavigationComponent","id":"component-SidebarNavigationComponent-f29cd0025f404bac199a25af5451fb32966e3e5d1bc41211f2c5459e0b5aa653adbbe84211353ec7496a1007aa3a4f808adb80055bea7438c9f3a02819049f3c","file":"src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sidebar-navigation","styleUrls":["./sidebar-navigation.component.scss"],"styles":[],"templateUrl":["./sidebar-navigation.component.html"],"viewProviders":[],"inputsClass":[{"name":"icon","deprecated":false,"deprecationMessage":"","line":14,"type":"String","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"workspaceList","deprecated":false,"deprecationMessage":"","type":"Observable<Workspace[]>","optional":true,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"createWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { Observable } from \'rxjs/internal/Observable\';\\nimport { Workspace } from \'src/app/dashboard/interfaces/workspace.interface\';\\nimport { WorkspaceService } from \'@dashboard/services/workspace/workspace.service\';\\n\\n@Component({\\n  selector: \'app-sidebar-navigation\',\\n  templateUrl: \'./sidebar-navigation.component.html\',\\n  styleUrls: [\'./sidebar-navigation.component.scss\'],\\n})\\nexport class SidebarNavigationComponent {\\n  @Input()\\n  public icon!: String;\\n\\n  public workspaceList?: Observable<Workspace[]>;\\n\\n  createWorkspace() {\\n    this.router.navigate([\'/\', \'create\']);\\n  }\\n\\n  constructor(private workspaceService: WorkspaceService, private router: Router) {\\n    this.workspaceList = this.workspaceService.list();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  width: 250px;\\n  height: 100%;\\n  flex-direction: column;\\n  flex-shrink: 0;\\n  background-color: var(--color-secondary-800);\\n}\\n\\n.logo {\\n  width: calc(100% - 80px);\\n  height: 64px;\\n  margin: 10px 20px 0;\\n  background-image: url(\'../../../../assets/metadata/logo_with_name.svg\');\\n  background-position: 0 50%;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n  cursor: pointer;\\n  transform-origin: 50% 25%;\\n  transition: transform 0.2s ease;\\n\\n  &:hover {\\n    transform: scale(1.02);\\n  }\\n}\\n","styleUrl":"./sidebar-navigation.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<section>\\n  <div class=\\"logo\\" routerLink=\\"/\\"></div>\\n  <div class=\\"switch-navigation-width\\"></div>\\n</section>\\n<app-nav-element [showOptions]=\\"false\\" routerLink=\\"/dashboard\\" i18n>Dashboard</app-nav-element>\\n<app-nav-element [showOptions]=\\"true\\">\\n  <div i18n>Workspaces</div>\\n  <div class=\\"open-below\\">\\n    <ul>\\n      <app-nav-element-workspace *ngFor=\\"let workspace of workspaceList|async\\" [workspace]=\\"workspace\\">\\n        {{workspace.name}}\\n      </app-nav-element-workspace>\\n    </ul>\\n  </div>\\n  <div class=\\"options\\">\\n    <button mat-menu-item (click)=\\"createWorkspace()\\">\\n      <span i18n>Create workspace</span>\\n    </button>\\n    <button mat-menu-item routerLink=\\"/\\">\\n      <span i18n>Manage workspaces</span>\\n    </button>\\n  </div>\\n</app-nav-element>\\n<app-nav-element [showOptions]=\\"false\\" routerLink=\\"/email\\" i18n>Emails</app-nav-element>\\n<app-nav-element [showOptions]=\\"false\\" routerLink=\\"/messages\\" i18n>Messages</app-nav-element>\\n<app-nav-element [showOptions]=\\"false\\" routerLink=\\"/calendar\\" i18n>Calendar</app-nav-element>\\n"},{"name":"SnackbarComponent","id":"component-SnackbarComponent-593b1c43ad4a08c585fe249a3747729c42dc6d080ad0ee9119e4e1155acb9f877cf97e071f7c9c91ed2e422ed82c9bb1e6493bb7eb401c7d5759ccafbbf7003d","file":"src/app/_main/components/snackbar/snackbar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-snackbar","styleUrls":["./snackbar.component.scss"],"styles":[],"templateUrl":["./snackbar.component.html"],"viewProviders":[],"inputsClass":[{"name":"color","defaultValue":"\'gray\'","deprecated":false,"deprecationMessage":"","line":25,"type":"","decorators":[]},{"name":"duration","defaultValue":"4000","deprecated":false,"deprecationMessage":"","line":22,"type":"","decorators":[]},{"name":"message","deprecated":false,"deprecationMessage":"","line":19,"type":"","decorators":[]},{"name":"uid","defaultValue":"uniqueId()","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"animationName","defaultValue":"\'open\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":28,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'style.animation-name\'"}],"modifierKind":[123]},{"name":"faClose","defaultValue":"faClose","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13}],"methodsClass":[{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"setAnimationName","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"style.animation-name","defaultValue":"\'open\'","deprecated":false,"deprecationMessage":"","line":28,"type":"string","decorators":[]}],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, HostBinding, Input, OnInit } from \'@angular/core\';\\nimport { faClose } from \'@fortawesome/free-solid-svg-icons\';\\nimport { SnackbarService } from \'@main/services/snackbar/snackbar.service\';\\nimport { uniqueId } from \'lodash-es\';\\nimport { SnackbarData } from \'./snackbar.interface\';\\n\\n@Component({\\n  selector: \'app-snackbar\',\\n  templateUrl: \'./snackbar.component.html\',\\n  styleUrls: [\'./snackbar.component.scss\'],\\n})\\nexport class SnackbarComponent implements OnInit {\\n  faClose = faClose;\\n\\n  @Input()\\n  public uid: string = uniqueId();\\n\\n  @Input()\\n  public message!: SnackbarData[\'message\'];\\n\\n  @Input()\\n  public duration: SnackbarData[\'duration\'] = 4000;\\n\\n  @Input()\\n  public color: SnackbarData[\'color\'] = \'gray\';\\n\\n  @HostBinding(\'style.animation-name\')\\n  public animationName: string = \'open\';\\n\\n  public get colorStyle(): string {\\n    switch (this.color) {\\n      case \'gray\':\\n        return \'var(--color-gray-500)\';\\n      case \'green\':\\n        return \'#00b300\';\\n      case \'red\':\\n        return \'#ff0000\';\\n      case \'yellow\':\\n        return \'#ffff00\';\\n      default:\\n        return \'var(--color-gray-500)\';\\n    }\\n  }\\n\\n  constructor(private snackbarService: SnackbarService) {}\\n\\n  ngOnInit() {\\n    setTimeout(() => {\\n      this.close();\\n    }, this.duration);\\n  }\\n\\n  close() {\\n    this.setAnimationName(\'close\');\\n    setTimeout(() => {\\n      this.snackbarService.close(this.uid);\\n    }, 1000);\\n  }\\n\\n  setAnimationName(name: string) {\\n    this.animationName = name;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  overflow: visible;\\n  animation: open 1s ease-in-out forwards;\\n}\\n\\n.content {\\n  display: flex;\\n  padding: 1rem;\\n  border-radius: var(--border-radius);\\n\\n  .message {\\n    margin-right: 0.75rem;\\n    color: var(--color-text);\\n  }\\n\\n  .close-button {\\n    position: relative;\\n    width: 24px;\\n    height: 24px;\\n    color: var(--color-text);\\n    cursor: pointer;\\n\\n    &::before,\\n    &::after {\\n      position: absolute;\\n      top: 0;\\n      left: 50%;\\n      display: block;\\n      width: 1px;\\n      height: 1rem;\\n      margin-top: 0.25rem;\\n      background-color: var(--color-text);\\n      border-radius: 50%;\\n      content: \'\';\\n      transition: background-color 0.4s ease;\\n    }\\n\\n    &::before {\\n      transform: rotate(45deg);\\n    }\\n\\n    &::after {\\n      transform: rotate(-45deg);\\n    }\\n  }\\n}\\n\\n@keyframes open {\\n  from {\\n    opacity: 0;\\n    transform: translateX(100%);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: translateX(0%);\\n  }\\n}\\n\\n@keyframes close {\\n  from {\\n    opacity: 1;\\n    transform: translateX(0%);\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translateX(100%);\\n  }\\n}\\n","styleUrl":"./snackbar.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"snackbarService","type":"SnackbarService","deprecated":false,"deprecationMessage":""}],"line":43,"jsdoctags":[{"name":"snackbarService","type":"SnackbarService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"colorStyle":{"name":"colorStyle","getSignature":{"name":"colorStyle","type":"string","returnType":"string","line":30}}},"templateData":"<div class=\\"content\\" [style.background-color]=\\"colorStyle\\">\\n  <p class=\\"message\\">\\n    {{ message }}\\n  </p>\\n  <div class=\\"close-button\\" (click)=\\"close()\\"></div>\\n</div>\\n"},{"name":"SnackbarOutletComponent","id":"component-SnackbarOutletComponent-710e222a5bef1eca6a0cef0bb6724e02cb8c0621548751c6601c415ec32566a97e24ac5de94d09eb7795364a70d58682ad61e4dc750e989df998dd302b2e9d38","file":"src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-snackbar-outlet","styleUrls":["./snackbar-outlet.component.scss"],"styles":[],"templateUrl":["./snackbar-outlet.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"snackbars$","defaultValue":"this.snackbarService.snackbars$","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":11,"modifierKind":[123]}],"methodsClass":[{"name":"trackSnackbarTuple","args":[{"name":"_index","type":"number","deprecated":false,"deprecationMessage":""},{"type":"[string, SnackbarData]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"_index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"type":"[string, SnackbarData]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { SnackbarService } from \'@main/services/snackbar/snackbar.service\';\\nimport { SnackbarData } from \'../snackbar/snackbar.interface\';\\n\\n@Component({\\n  selector: \'app-snackbar-outlet\',\\n  templateUrl: \'./snackbar-outlet.component.html\',\\n  styleUrls: [\'./snackbar-outlet.component.scss\'],\\n})\\nexport class SnackbarOutletComponent {\\n  public snackbars$ = this.snackbarService.snackbars$;\\n\\n  constructor(private snackbarService: SnackbarService) {}\\n\\n  trackSnackbarTuple(_index: number, [uid, _]: [string, SnackbarData]) {\\n    return uid;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  position: absolute;\\n  z-index: 50;\\n  top: 74px;\\n  right: 0;\\n  display: flex;\\n  overflow: hidden;\\n  flex-direction: column;\\n  align-items: flex-end;\\n  padding-right: 10px;\\n}\\n\\napp-snackbar:not(:last-child) {\\n  margin-bottom: 0.5rem;\\n}\\n","styleUrl":"./snackbar-outlet.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"snackbarService","type":"SnackbarService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"snackbarService","type":"SnackbarService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<app-snackbar *ngFor=\\"let entry of (snackbars$ | async)?.entries(); trackBy: trackSnackbarTuple\\" [uid]=\\"entry[0]\\"\\n  [message]=\\"entry[1].message\\" [color]=\\"entry[1].color\\"></app-snackbar>\\n"},{"name":"StatusDialog","id":"component-StatusDialog-feec3dc4c2f2b7b4d1531f9124dfae0f5191bceea5b0b3d81dba9c3b7b2a7cb3a6bce3b3960570883a037371574b71ba16765753d06cb9080e790d53b23f2206","file":"src/app/dashboard/dialogs/status/status.dialog.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"status-dialog","styleUrls":["./status.dialog.scss"],"styles":[],"templateUrl":["./status.dialog.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"StatusDialogData","optional":false,"description":"","line":29,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123]},{"name":"form","defaultValue":"new FormGroup({\\n    name: new FormControl(\'\', [requiredValidator()]),\\n    begin: new FormControl(false),\\n    final: new FormControl(false),\\n    color: new FormControl<color>(0, [requiredValidator()]),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[123]}],"methodsClass":[{"name":"cancel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":""},{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Inject, OnInit } from \'@angular/core\';\\nimport { MatDialogRef, MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { color } from \'@main/interfaces/color.interface\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport { validateForm } from \'@main/classes/form.class\';\\n\\nexport interface StatusDialogData {\\n  status?: Partial<Status>;\\n  title: string;\\n  confirmButtonText: string;\\n}\\n\\n@Component({\\n  selector: \'status-dialog\',\\n  templateUrl: \'./status.dialog.html\',\\n  styleUrls: [\'./status.dialog.scss\'],\\n})\\nexport class StatusDialog implements OnInit {\\n  public form = new FormGroup({\\n    name: new FormControl(\'\', [requiredValidator()]),\\n    begin: new FormControl(false),\\n    final: new FormControl(false),\\n    color: new FormControl<color>(0, [requiredValidator()]),\\n  });\\n\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public data: StatusDialogData,\\n    private dialogRef: MatDialogRef<StatusDialogData>,\\n  ) {}\\n\\n  ngOnInit() {\\n    const { status } = this.data;\\n\\n    if (status) {\\n      this.form.patchValue(status as any);\\n    }\\n  }\\n\\n  cancel() {\\n    this.dialogRef.close();\\n  }\\n\\n  close() {\\n    if (validateForm(this.form)) {\\n      console.log({ ...this.data.status });\\n      this.dialogRef.close({ ...this.data.status, ...this.form.value });\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"form {\\n  display: flex;\\n  flex-direction: column;\\n  padding-top: 1rem;\\n\\n  &>*:not(:last-child):not(app-checkbox) {\\n    margin-bottom: 1.5rem;\\n  }\\n}\\n","styleUrl":"./status.dialog.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"data","type":"StatusDialogData","deprecated":false,"deprecationMessage":""},{"name":"dialogRef","type":"MatDialogRef<StatusDialogData>","deprecated":false,"deprecationMessage":""}],"line":26,"jsdoctags":[{"name":"data","type":"StatusDialogData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogRef","type":"MatDialogRef<StatusDialogData>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h1 mat-dialog-title>{{ data.title }}</h1>\\n<div mat-dialog-content>\\n  <form [formGroup]=\\"form\\" autocomplete=\\"off\\">\\n\\n    \x3c!-- Name field --\x3e\\n    <app-input floatingLabel=\\"Name\\" formControlName=\\"name\\" i18n-floatingLabel>\\n    </app-input>\\n\\n    \x3c!-- Color field --\x3e\\n    <input-color formControlName=\\"color\\" i18n-floatingLabel floatingLabel=\\"Color\\"></input-color>\\n\\n    \x3c!-- Begin field --\x3e\\n    <app-checkbox formControlName=\\"begin\\" i18n>Begin</app-checkbox>\\n\\n    \x3c!-- Final field --\x3e\\n    <app-checkbox formControlName=\\"final\\" i18n>Final</app-checkbox>\\n\\n  </form>\\n</div>\\n<div mat-dialog-actions>\\n  <app-button mat-button (click)=\\"cancel()\\" i18n>Cancel</app-button>\\n  <app-button (click)=\\"close()\\" variant=\\"primary\\">{{ data.confirmButtonText }}</app-button>\\n</div>\\n"},{"name":"StatusLabelComponent","id":"component-StatusLabelComponent-052034488396c0a7d37a6caf084c053be8934abdbf4d412cbceffcc017d54d8eb2d11eae688141a4291760c974e44c5d36ae8a783318c6bab1c7a6066623de68","file":"src/app/tasks/components/status-label/status-label.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"{ provide: NgControl, useClass: TestNgControl }"}],"selector":"app-status-label","styleUrls":["./status-label.component.scss"],"styles":[],"templateUrl":["./status-label.component.html"],"viewProviders":[],"inputsClass":[{"name":"projectId","deprecated":false,"deprecationMessage":"","line":17,"type":"number","decorators":[]},{"name":"statuses","deprecated":false,"deprecationMessage":"","line":20,"type":"Status[]","decorators":[]},{"name":"statusId","deprecated":false,"deprecationMessage":"","line":18,"type":"number","decorators":[]},{"name":"taskId","deprecated":false,"deprecationMessage":"","line":19,"type":"number","decorators":[]},{"name":"variant","defaultValue":"\'default\'","deprecated":false,"deprecationMessage":"","line":16,"type":"\\"default\\" | \\"small\\"","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"isOpen$","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":41,"modifierKind":[123,144]},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"","line":31,"modifierKind":[123,158],"inheritance":{"file":"ControlAccessor"}},{"name":"overlay","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLElement>","optional":false,"description":"","line":38,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'overlay\'"}]},{"name":"statuses$","defaultValue":"new BehaviorSubject<Status[]>([])","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"statusMap","defaultValue":"new Map<number, Status>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"open","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"select","args":[{"name":"status","type":"Status","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"status","type":"Status","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectorRef, Component, ElementRef, Input, ViewChild } from \'@angular/core\';\\nimport { NgControl } from \'@angular/forms\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\nimport { TestNgControl } from \'@tests/helpers/ng-control-testing-provider.helper\';\\nimport { BehaviorSubject, filter, fromEvent, take } from \'rxjs\';\\n\\n@Component({\\n  selector: \'app-status-label\',\\n  templateUrl: \'./status-label.component.html\',\\n  styleUrls: [\'./status-label.component.scss\'],\\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\\n})\\nexport class StatusLabelComponent extends ControlAccessor {\\n  @Input() variant: \'default\' | \'small\' = \'default\';\\n  @Input() projectId!: number;\\n  @Input() statusId!: number;\\n  @Input() taskId?: number;\\n  @Input() set statuses(statuses: Status[]) {\\n    this.statuses$.next(statuses);\\n    this.statusMap = statuses.reduce((acc, status) => {\\n      acc.set(status.id!, status);\\n      return acc;\\n    }, new Map<number, Status>());\\n  }\\n\\n  statusMap = new Map<number, Status>();\\n\\n  constructor(\\n    public override ngControl: NgControl,\\n    private taskService: TaskService,\\n    cdRef: ChangeDetectorRef,\\n  ) {\\n    super(ngControl, cdRef);\\n  }\\n\\n  @ViewChild(\'overlay\') overlay!: ElementRef<HTMLElement>;\\n\\n  public statuses$ = new BehaviorSubject<Status[]>([]);\\n  public readonly isOpen$ = new BehaviorSubject<boolean>(false);\\n\\n  public set isOpen(val: boolean) {\\n    this.isOpen$.next(val);\\n  }\\n\\n  public get isOpen() {\\n    return this.isOpen$.value;\\n  }\\n\\n  public open() {\\n    setTimeout(() => {\\n      fromEvent(document, \'click\')\\n        .pipe(\\n          take(1),\\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\\n        )\\n        .subscribe(() => this.close());\\n      this.isOpen$.next(true);\\n    });\\n  }\\n\\n  public close() {\\n    this.isOpen$.next(false);\\n  }\\n\\n  public toggle() {\\n    if (this.isOpen) {\\n      return this.close();\\n    }\\n    return this.open();\\n  }\\n\\n  public select(status: Status) {\\n    if (this.taskId && this.projectId)\\n      this.taskService.changeStatus(status.id!, this.taskId, this.projectId).subscribe(() => {\\n        this.close();\\n        location.reload();\\n      });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../styles/typography\';\\n\\n:host {\\n  display: block;\\n  width: 100%;\\n  padding: 0 1rem;\\n  margin: 0 1rem;\\n}\\n\\n.status-label {\\n  display: flex;\\n  width: 100%;\\n  max-width: 250px;\\n  align-items: baseline;\\n  justify-content: center;\\n  padding: 0.5rem 1rem 0.5rem 1rem;\\n  background-color: var(--color-secondary-400);\\n  border-radius: 100px;\\n\\n  &.text-light {\\n    span {\\n      color: #222;\\n    }\\n  }\\n\\n  &.bulb-light {\\n    &::before {\\n      background-color: black;\\n    }\\n  }\\n\\n  &.text-dark {\\n    span {\\n      color: #eee;\\n    }\\n  }\\n\\n  &.bulb-dark {\\n    &::before {\\n      background-color: white;\\n    }\\n  }\\n\\n  span {\\n    @include text-label;\\n    font-weight: 600;\\n    text-transform: uppercase;\\n  }\\n\\n  &::before {\\n    display: block;\\n    width: 10px;\\n    height: 10px;\\n    align-self: center;\\n    margin-right: 0.7rem;\\n    border-radius: 100%;\\n    content: \'\';\\n    opacity: 0.4;\\n  }\\n}\\n\\n.statuses-overlay {\\n  padding: 1rem;\\n  padding: 0.5rem;\\n  background-color: var(--color-secondary-800);\\n  border-radius: var(--border-radius);\\n\\n  li {\\n    padding: 0.5rem;\\n    border-radius: var(--border-radius);\\n    color: var(--color-text);\\n    cursor: pointer;\\n    transition: background-color .1s ease;\\n\\n    &:hover {\\n      background-color: var(--color-secondary-700);\\n    }\\n  }\\n}\\n","styleUrl":"./status-label.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":28,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"ControlAccessor","accessors":{"statuses":{"name":"statuses","setSignature":{"name":"statuses","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"statuses","type":"Status[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":20,"jsdoctags":[{"name":"statuses","type":"Status[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"isOpen":{"name":"isOpen","setSignature":{"name":"isOpen","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":43,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"isOpen","type":"","returnType":"","line":47}}},"templateData":"\x3c!-- This button triggers the overlay and is it\'s origin --\x3e\\n<button (click)=\\"toggle()\\" class=\\"button\\" cdkOverlayOrigin #trigger=\\"cdkOverlayOrigin\\">\\n  <div [style.background-color]=\\"statusMap.get(statusId)?.color | statusColor\\"\\n    [ngClass]=\\"[\'status-label\', \'text-\' + (statusMap.get(statusId)?.color | contrastColor), \'bulb-\' + (statusMap.get(statusId)?.color | contrastColor:0.01)]\\">\\n    <span>{{ statusMap.get(statusId)?.name }}</span>\\n  </div>\\n</button>\\n\\n<ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\\"trigger\\"\\n  [cdkConnectedOverlayOpen]=\\"(isOpen$ | async) || false\\"\\n  [cdkConnectedOverlayBackdropClass]=\\"\'cdk-overlay-transparent-backdrop\'\\" [cdkConnectedOverlayHasBackdrop]=\\"true\\">\\n  <ul #overlay class=\\"statuses-overlay\\">\\n    <li *ngFor=\\"let status of statuses$ | async\\" (click)=\\"select(status)\\">\\n      <div [style.background-color]=\\"status.color | statusColor\\"\\n        [ngClass]=\\"[\'status-label\', \'text-\' + (status.color | contrastColor), \'bulb-\' + (status.color | contrastColor:0.01)]\\">\\n        <span>{{ status.name }}</span>\\n      </div>\\n    </li>\\n  </ul>\\n</ng-template>\\n"},{"name":"TabComponent","id":"component-TabComponent-6808ca9dde6e8e3e3c42ca4440c2fb93b69433d8e179602ba3109eb66b6de74947c17b16bbe041335cdf25a0ae3cb854dd264f766a5b590e8d5b03d2f7845e96","file":"src/app/_main/components/tabs/tab/tab.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"tab","styleUrls":["./tab.component.scss"],"styles":[],"templateUrl":["./tab.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'tab\',\\n  templateUrl: \'./tab.component.html\',\\n  styleUrls: [\'./tab.component.scss\'],\\n})\\nexport class TabComponent {}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  &.active .tab {\\n    border-bottom: 1px solid var(--color-primary-700);\\n  }\\n}\\n\\n.tab {\\n  padding: 1rem 1.5rem;\\n  transition: background-color .1s ease;\\n\\n  &:hover {\\n    background-color: var(--color-secondary-800);\\n  }\\n}\\n","styleUrl":"./tab.component.scss"}],"stylesData":"","templateData":"<button class=\\"tab\\">\\n  <ng-content></ng-content>\\n</button>\\n"},{"name":"TabsComponent","id":"component-TabsComponent-89973ec2d4e5bf257c3c6119a213a07efdc40d191081e3d0c04347d87d0701a6f9ae2e1118df587a251b6c213bfc0191e69d08d9eab6dc3414be7164208d097f","file":"src/app/_main/components/tabs/tabs.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"tabs","styleUrls":["./tabs.component.scss"],"styles":[],"templateUrl":["./tabs.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'tabs\',\\n  templateUrl: \'./tabs.component.html\',\\n  styleUrls: [\'./tabs.component.scss\'],\\n})\\nexport class TabsComponent {}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  justify-content: space-between;\\n  color: var(--color-text);\\n}\\n\\n:host ::ng-deep {\\n\\n  .prefix,\\n  .suffix {\\n    padding: 1rem 1.5rem;\\n    font-weight: bold;\\n    display: flex;\\n    align-items: center;\\n    height: 100%;\\n  }\\n}\\n","styleUrl":"./tabs.component.scss"}],"stylesData":"","templateData":"<div class=\\"flex\\">\\n  <ng-content select=\\".prefix\\"></ng-content>\\n  <ng-content select=\\"tab\\"></ng-content>\\n</div>\\n<div class=\\"flex\\">\\n  <ng-content select=\\".suffix\\"></ng-content>\\n</div>\\n"},{"name":"TaskDialog","id":"component-TaskDialog-0355244cece7cc1110568db264cec02f3140ab6bdc246520c8f3006e88b9a052856015f9576ca70161e3eae4c4ef28480036a87fc51c468dde8e36a4d9b4b2fc","file":"src/app/tasks/dialogs/task/task.dialog.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-task-dialog","styleUrls":["./task.dialog.scss"],"styles":[],"templateUrl":["./task.dialog.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"TaskDialogData","optional":false,"description":"","line":79,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123]},{"name":"form","defaultValue":"new FormGroup({\\n    id: new FormControl<number | null>(null),\\n    parentTaskId: new FormControl<number | null>(null),\\n    type: new FormControl<TaskType>(this.taskTypes$.value[0][1], [requiredValidator()]),\\n    name: new FormControl<string>(\'\', [requiredValidator()]),\\n    statusId: new FormControl<number | null>(null, [requiredValidator()]),\\n    projectId: new FormControl<number | null>(null, [requiredValidator()]),\\n    workspaceId: new FormControl<number | null>(null, [requiredValidator()]),\\n    description: new FormControl<string>(\'\'),\\n    priority: new FormControl<TaskPriority>(TaskPriority.MEDIUM, [requiredValidator()]),\\n    deadline: new FormControl<unixTimestamp | null>(null),\\n    estimatedDate: new FormControl<unixTimestamp | null>(null),\\n    issue: new FormControl<GitIssue | \'CREATE\' | \'DETACH\' | null>(null),\\n    pull: new FormControl<GitPull | \'DETACH\' | null>(null),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"interactive$","defaultValue":"timeToInteraction()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":73,"modifierKind":[123]},{"name":"isGitHubIntegrationAvailable","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"issueList$","deprecated":false,"deprecationMessage":"","type":"Observable<GitIssue[]>","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"projectList$","deprecated":false,"deprecationMessage":"","type":"Observable<Project[]>","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"pullList$","deprecated":false,"deprecationMessage":"","type":"Observable<GitPull[]>","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"statusList$","deprecated":false,"deprecationMessage":"","type":"Observable<Status[]>","optional":false,"description":"","line":49,"modifierKind":[123]},{"name":"TaskDialogVariant","defaultValue":"TaskDialogVariant","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":44},{"name":"taskPriorities","defaultValue":"Object.values(TaskPriority)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":47,"modifierKind":[123]},{"name":"taskTypes$","defaultValue":"this.taskService.listTaskTypes(this.data.parentTask?.type)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"workspaceList$","deprecated":false,"deprecationMessage":"","type":"Observable<Workspace[]>","optional":false,"description":"","line":50,"modifierKind":[123]}],"methodsClass":[{"name":"cancel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":167,"deprecated":false,"deprecationMessage":""},{"name":"confirm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":161,"deprecated":false,"deprecationMessage":""},{"name":"loadParamsFromUrl","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":""},{"name":"onProjectIdChange","args":[{"name":"projectId","type":"number | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"projectId","type":"number | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onWorkspaceIdChange","args":[{"name":"workspaceId","type":"number | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"workspaceId","type":"number | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Inject, OnInit } from \'@angular/core\';\\nimport { MatDialogRef, MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { GitIssue, GitPull } from \'@dashboard/interfaces/git-integration.interface\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { Workspace } from \'@dashboard/interfaces/workspace.interface\';\\nimport { GitIntegrationService } from \'@dashboard/services/git-integration/git-integration.service\';\\nimport { WorkspaceService } from \'@dashboard/services/workspace/workspace.service\';\\nimport { validateForm } from \'@main/classes/form.class\';\\nimport { timeToInteraction } from \'@main/classes/time-to-interaction.class\';\\nimport { RouterExtensionsService } from \'@main/services/router-extensions/router-extensions.service\';\\nimport { FormControl, FormGroup } from \'@ngneat/reactive-forms\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\nimport { TaskPriority } from \'@tasks/enums/task-priority.enum\';\\nimport { TaskType } from \'@tasks/enums/task-type.enum\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport { isNil } from \'lodash-es\';\\nimport { distinctUntilChanged, map, Observable, pairwise } from \'rxjs\';\\nimport { requiredValidator } from \'../../../_main/validators/required.validator\';\\nimport { Task } from \'../../interfaces/task.interface\';\\nimport { unixTimestamp } from \'../../../_main/interfaces/date.interface\';\\nimport { StatusService } from \'@tasks/services/status/status.service\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\n\\nexport enum TaskDialogVariant {\\n  CREATE = \'create\',\\n  EDIT = \'edit\',\\n}\\n\\nexport interface TaskDialogData {\\n  workspaceId: number;\\n  projectId?: number;\\n  variant: TaskDialogVariant;\\n  task?: Partial<Task>;\\n  parentTask?: Task;\\n}\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'app-task-dialog\',\\n  templateUrl: \'./task.dialog.html\',\\n  styleUrls: [\'./task.dialog.scss\'],\\n})\\nexport class TaskDialog implements OnInit {\\n  TaskDialogVariant = TaskDialogVariant;\\n\\n  public taskTypes$ = this.taskService.listTaskTypes(this.data.parentTask?.type);\\n  public taskPriorities = Object.values(TaskPriority);\\n\\n  public statusList$!: Observable<Status[]>;\\n  public workspaceList$!: Observable<Workspace[]>;\\n  public projectList$!: Observable<Project[]>;\\n  public issueList$!: Observable<GitIssue[]>;\\n  public pullList$!: Observable<GitPull[]>;\\n\\n  public isGitHubIntegrationAvailable: boolean = false;\\n\\n  public form = new FormGroup({\\n    id: new FormControl<number | null>(null),\\n    parentTaskId: new FormControl<number | null>(null),\\n    type: new FormControl<TaskType>(this.taskTypes$.value[0][1], [requiredValidator()]),\\n    name: new FormControl<string>(\'\', [requiredValidator()]),\\n    statusId: new FormControl<number | null>(null, [requiredValidator()]),\\n    projectId: new FormControl<number | null>(null, [requiredValidator()]),\\n    workspaceId: new FormControl<number | null>(null, [requiredValidator()]),\\n    description: new FormControl<string>(\'\'),\\n    priority: new FormControl<TaskPriority>(TaskPriority.MEDIUM, [requiredValidator()]),\\n    deadline: new FormControl<unixTimestamp | null>(null),\\n    estimatedDate: new FormControl<unixTimestamp | null>(null),\\n    issue: new FormControl<GitIssue | \'CREATE\' | \'DETACH\' | null>(null),\\n    pull: new FormControl<GitPull | \'DETACH\' | null>(null),\\n  });\\n\\n  public interactive$ = timeToInteraction();\\n\\n  /** @ignore */\\n  TaskType = TaskType;\\n\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\\n    private dialogRef: MatDialogRef<TaskDialog>,\\n    private statusService: StatusService,\\n    private workspaceService: WorkspaceService,\\n    private gitIntegrationService: GitIntegrationService,\\n    private routerExtensions: RouterExtensionsService,\\n    private taskService: TaskService,\\n  ) {}\\n\\n  ngOnInit() {\\n    this.loadParamsFromUrl();\\n\\n    const { workspaceId, projectId, task } = this.data;\\n    this.form.patchValue({ workspaceId, projectId });\\n    if (task) {\\n      this.form.patchValue(task);\\n    }\\n\\n    this.workspaceList$ = this.workspaceService.list();\\n\\n    this.form\\n      .get(\'workspaceId\')\\n      .valueChanges.pipe(pairwise(), untilDestroyed(this))\\n      .subscribe(([oldWorkspaceId, newWorkspaceId]) => {\\n        if (oldWorkspaceId !== newWorkspaceId) {\\n          console.log(\'fromSubscription\');\\n          this.onWorkspaceIdChange.bind(this)(newWorkspaceId);\\n        }\\n      });\\n    this.form\\n      .get(\'projectId\')\\n      .valueChanges.pipe(distinctUntilChanged(), untilDestroyed(this))\\n      .subscribe(this.onProjectIdChange.bind(this));\\n\\n    if (workspaceId) {\\n      console.log(\'fromInit\');\\n      this.onWorkspaceIdChange(workspaceId);\\n    }\\n\\n    if (projectId) {\\n      this.onProjectIdChange(projectId);\\n    }\\n  }\\n\\n  onWorkspaceIdChange(workspaceId: number | null) {\\n    console.log(\'onWorkspaceIdChange\', workspaceId);\\n    if (this.interactive$.value) {\\n      this.form.get(\'projectId\').setValue(null);\\n    }\\n\\n    if (!workspaceId) return;\\n\\n    this.projectList$ = this.workspaceService\\n      .get(workspaceId)\\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\\n  }\\n\\n  onProjectIdChange(projectId: number | null) {\\n    if (!projectId) return;\\n\\n    this.statusList$ = this.statusService.list(projectId);\\n\\n    this.statusList$.pipe(untilDestroyed(this)).subscribe((statuses) => {\\n      const statusId = statuses.find((status) => status.begin)?.id;\\n\\n      if (!statusId) return;\\n\\n      this.form.patchValue({ statusId });\\n    });\\n\\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\\n      this.isGitHubIntegrationAvailable = value;\\n    });\\n  }\\n\\n  loadParamsFromUrl() {\\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\\n\\n    if (!isNil(workspaceId) && !this.data.workspaceId) this.data.workspaceId = Number(workspaceId);\\n    if (!isNil(projectId) && !this.data.projectId) this.data.projectId = Number(projectId);\\n  }\\n\\n  confirm() {\\n    if (validateForm(this.form)) {\\n      this.dialogRef.close(this.form.value);\\n    }\\n  }\\n\\n  cancel() {\\n    this.dialogRef.close(false);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"form {\\n  >* {\\n    display: block;\\n    width: 100%;\\n    margin-bottom: 1.5rem;\\n  }\\n}\\n","styleUrl":"./task.dialog.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"data","type":"TaskDialogData","deprecated":false,"deprecationMessage":""},{"name":"dialogRef","type":"MatDialogRef<TaskDialog>","deprecated":false,"deprecationMessage":""},{"name":"statusService","type":"StatusService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":""},{"name":"routerExtensions","type":"RouterExtensionsService","deprecated":false,"deprecationMessage":""},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""}],"line":76,"jsdoctags":[{"name":"data","type":"TaskDialogData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogRef","type":"MatDialogRef<TaskDialog>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"statusService","type":"StatusService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"gitIntegrationService","type":"GitIntegrationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"routerExtensions","type":"RouterExtensionsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h1 mat-dialog-title *ngIf=\\"data.variant === TaskDialogVariant.EDIT\\" i18n>Edit task: {{ data.task?.name }}</h1>\\n<h1 mat-dialog-title *ngIf=\\"data.variant === TaskDialogVariant.CREATE && !data.parentTask\\" i18n>Create new task</h1>\\n<h1 mat-dialog-title *ngIf=\\"data.parentTask\\" i18n>Create new subtask</h1>\\n<div mat-dialog-content>\\n  <form (submit)=\\"confirm()\\" [formGroup]=\\"form\\" autocomplete=\\"off\\">\\n\\n    \x3c!-- Workspace --\x3e\\n    <app-select *ngIf=\\"!data.parentTask\\" formControlName=\\"workspaceId\\" floatingLabel=\\"Workspace\\" i18n-floatingLabel>\\n      <app-option *ngFor=\\"let workspace of workspaceList$ | async\\" [value]=\\"workspace.id\\">{{ workspace.name }}\\n      </app-option>\\n      <app-empty-options i18n>There is no workspaces</app-empty-options>\\n    </app-select>\\n\\n    \x3c!-- Project --\x3e\\n    <ng-container *ngIf=\\"!data.parentTask && form.get(\'workspaceId\')?.value\\">\\n      <app-select formControlName=\\"projectId\\" floatingLabel=\\"Project\\" i18n-floatingLabel>\\n        <app-option *ngFor=\\"let project of projectList$ | async\\" [value]=\\"project.id\\">{{project.name}}\\n        </app-option>\\n        <app-empty-options i18n>Selected workspace is empty</app-empty-options>\\n      </app-select>\\n    </ng-container>\\n\\n    \x3c!-- Type field --\x3e\\n    <app-select formControlName=\\"type\\" floatingLabel=\\"Type\\" i18n-floatingLabel>\\n      <app-option *ngFor=\\"let type of taskTypes$ | async\\" [value]=\\"type[1]\\" [icon]=\\"type[0] | taskTypeIcon\\">\\n        {{ type[1] | taskType }}\\n      </app-option>\\n    </app-select>\\n\\n    \x3c!-- Name field --\x3e\\n    <app-input floatingLabel=\\"Name\\" placeholder=\\"New task\\" formControlName=\\"name\\" i18n-floatingLabel i18n-placeholder>\\n    </app-input>\\n\\n    \x3c!-- Description field --\x3e\\n    <app-textarea floatingLabel=\\"Description\\" placeholder=\\"Sample description...\\" formControlName=\\"description\\"\\n      i18n-floatingLabel i18n-placeholder [rows]=\\"10\\"></app-textarea>\\n\\n    \x3c!-- Status --\x3e\\n    <app-select formControlName=\\"statusId\\" floatingLabel=\\"Status\\" i18n-floatingLabel>\\n      <app-option *ngFor=\\"let status of statusList$ | async\\" [value]=\\"status.id\\">\\n        {{ status.name }}\\n      </app-option>\\n      <app-empty-options i18n>This project doesn\'t have any status.</app-empty-options>\\n    </app-select>\\n\\n    \x3c!-- Priorities --\x3e\\n    <app-select formControlName=\\"priority\\" floatingLabel=\\"Priority\\" i18n-floatingLabel>\\n      <app-option *ngFor=\\"let priority of taskPriorities\\" [value]=\\"priority\\" [icon]=\\"priority | taskPriorityIcon\\">{{\\n        priority | taskPriority }}</app-option>\\n    </app-select>\\n\\n    \x3c!-- Deadline --\x3e\\n    <app-input-date-time formControlName=\\"deadline\\" floatingLabel=\\"Deadline\\" placeholder=\\"Choose a date\\"\\n      i18n-floatingLabel i18n-placeholder>\\n    </app-input-date-time>\\n\\n    \x3c!-- Estimate time --\x3e\\n    <app-input-date-time formControlName=\\"estimatedDate\\" floatingLabel=\\"Estimated date\\" placeholder=\\"Choose a date\\"\\n      i18n-floatingLabel i18n-placeholder>\\n    </app-input-date-time>\\n\\n    \x3c!-- Parent --\x3e\\n    <input-task-parent *ngIf=\\"![TaskType.EPIC, TaskType.USER_STORY, undefined].includes(form.get(\'type\')?.value)\\"\\n      [projectId]=\\"form.get(\'projectId\').value || -1\\" formControlName=\\"parentTaskId\\" [type]=\\"form.get(\'type\')?.value\\">\\n    </input-task-parent>\\n\\n    \x3c!-- Epic --\x3e\\n    \x3c!-- <input-epic *ngIf=\\"form.get(\'type\').value !== TaskType.EPIC\\" formControlName=\\"parentTaskId\\"\\n      [projectId]=\\"form.get(\'projectId\').value || -1\\"></input-epic> --\x3e\\n\\n    \x3c!-- GitHub issue integration --\x3e\\n    <input-issue *ngIf=\\"isGitHubIntegrationAvailable && form.get(\'projectId\')?.value\\" formControlName=\\"issue\\"\\n      [projectId]=\\"form.get(\'projectId\').value || -1\\"></input-issue>\\n\\n    \x3c!-- Github pull request integration --\x3e\\n    <input-pull-request *ngIf=\\"isGitHubIntegrationAvailable && form.get(\'projectId\')?.value\\" formControlName=\\"pull\\"\\n      [projectId]=\\"form.get(\'projectId\').value || -1\\"></input-pull-request>\\n\\n  </form>\\n</div>\\n<div mat-dialog-actions>\\n  <app-button mat-button (click)=\\"cancel()\\" i18n>Cancel</app-button>\\n  <app-button *ngIf=\\"data.variant === TaskDialogVariant.CREATE\\" (click)=\\"confirm()\\" variant=\\"primary\\" i18n>Create\\n  </app-button>\\n  <app-button *ngIf=\\"data.variant === TaskDialogVariant.EDIT\\" (click)=\\"confirm()\\" variant=\\"primary\\" i18n>Save changes\\n  </app-button>\\n</div>\\n"},{"name":"TaskListComponent","id":"component-TaskListComponent-aea4d8b55c45155a91072ea141cbb5fd979da5e257d2d073e9c3f67cbd11419335e0ad8de5a676356f60620058909e30f08cdc239b23ecdb96f10df59de4842a","file":"src/app/tasks/components/task-list/task-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"task-list","styleUrls":[],"styles":[],"templateUrl":["./task-list.component.html"],"viewProviders":[],"inputsClass":[{"name":"members","deprecated":false,"deprecationMessage":"","line":13,"type":"Map<number | ProjectMember>","decorators":[]},{"name":"projectId","deprecated":false,"deprecationMessage":"","line":14,"type":"number","decorators":[]},{"name":"statusList","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":15,"type":"Status[]","decorators":[]},{"name":"tasks","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":12,"type":"Task[]","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"expandedSubtasks","defaultValue":"new ESet()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17}],"methodsClass":[{"name":"trackByTask","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"task","type":"Task","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"task","type":"Task","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport { ProjectMember } from \'../../../dashboard/interfaces/project-member.interface\';\\nimport { ESet } from \'../../../_main/classes/e-set.class\';\\n\\n@Component({\\n  selector: \'task-list\',\\n  templateUrl: \'./task-list.component.html\',\\n})\\nexport class TaskListComponent {\\n  @Input() tasks: Task[] = [];\\n  @Input() members!: Map<number, ProjectMember>;\\n  @Input() projectId!: number;\\n  @Input() statusList: Status[] = [];\\n\\n  expandedSubtasks = new ESet();\\n\\n  constructor() {}\\n\\n  trackByTask(index: number, task: Task) {\\n    return task.id;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":17},"templateData":"<div class=\\"table w-full\\">\\n\\n  \x3c!-- Header --\x3e\\n  <div class=\\"header-row\\">\\n    <div class=\\"header-cell w-full\\">Title</div>\\n    <div class=\\"header-cell w-52\\">Status</div>\\n    <div class=\\"header-cell w-52\\">Assignee</div>\\n    <div class=\\"header-cell w-52\\">Time tracking</div>\\n    <div class=\\"header-cell w-52\\">Deadline</div>\\n    <div class=\\"header-cell action\\">\\n      \x3c!-- Actions --\x3e\\n    </div>\\n  </div>\\n\\n  \x3c!-- Body --\x3e\\n  <ng-container *ngFor=\\"let task of tasks; trackBy: trackByTask\\">\\n    <task-row [task]=\\"task\\" [projectId]=\\"projectId\\" [members]=\\"members\\" [statusList]=\\"statusList\\"></task-row>\\n  </ng-container>\\n</div>\\n"},{"name":"TaskListPage","id":"component-TaskListPage-f5aa3cf6a607aac0694366ada3b926ba7f3ba3cec1871a0d3da830299c766dad7a08dc11e0208abe60b080fce76770b57dfa5176b7543bf6d0a9c276b8bec713","file":"src/app/tasks/pages/task-list/task-list.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-task-list","styleUrls":["./task-list.page.scss"],"styles":[],"templateUrl":["./task-list.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"emptyMap","defaultValue":"new Map()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"filters","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Filter[]","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"filtersControl","defaultValue":"new FormControl<Filter[]>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"members$","deprecated":false,"deprecationMessage":"","type":"Observable<Map<number, ProjectMember>>","optional":false,"description":"","line":50,"modifierKind":[123]},{"name":"project$","deprecated":false,"deprecationMessage":"","type":"Observable<Project>","optional":false,"description":"","line":49,"modifierKind":[123]},{"name":"projectId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"statusList$","deprecated":false,"deprecationMessage":"","type":"Observable<Status[]>","optional":false,"description":"","line":48,"modifierKind":[123]},{"name":"taskList$","deprecated":false,"deprecationMessage":"","type":"Observable<Task[]>","optional":false,"description":"","line":47,"modifierKind":[123]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { FormControl } from \'@ngneat/reactive-forms\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { UserService } from \'@auth/services/user/user.service\';\\nimport { ProjectMember } from \'@dashboard/interfaces/project-member.interface\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { MemberService } from \'@dashboard/services/member/member.service\';\\nimport { ProjectService } from \'@dashboard/services/project/project.service\';\\nimport {\\n  faCheck,\\n  faChevronRight,\\n  faCodeCommit,\\n  faCodePullRequest,\\n  faPlus,\\n} from \'@fortawesome/free-solid-svg-icons\';\\nimport { Filters } from \'@main/classes/filters.class\';\\nimport { Filter } from \'@main/interfaces/filters.interface\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport { Observable } from \'rxjs\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\nimport { StatusService } from \'@tasks/services/status/status.service\';\\n\\n@Component({\\n  selector: \'app-task-list\',\\n  templateUrl: \'./task-list.page.html\',\\n  styleUrls: [\'./task-list.page.scss\'],\\n})\\nexport class TaskListPage {\\n  /** @ignore */\\n  faPlus = faPlus;\\n\\n  /** @ignore  */\\n  faChevronRight = faChevronRight;\\n\\n  /** @ignore */\\n  faCodeCommit = faCodeCommit;\\n\\n  /** @ignore */\\n  faCodePullRequest = faCodePullRequest;\\n\\n  /** @ignore */\\n  faCheck = faCheck;\\n\\n  public projectId!: number;\\n\\n  public taskList$!: Observable<Task[]>;\\n  public statusList$!: Observable<Status[]>;\\n  public project$!: Observable<Project>;\\n  public members$: Observable<Map<number, ProjectMember>>;\\n\\n  public emptyMap = new Map();\\n\\n  public filters: Filter[] = [];\\n  public filtersControl = new FormControl<Filter[]>();\\n\\n  constructor(\\n    private activatedRoute: ActivatedRoute,\\n    private taskService: TaskService,\\n    private statusService: StatusService,\\n    private projectService: ProjectService,\\n    private memberService: MemberService,\\n    private userService: UserService,\\n  ) {\\n    const { projectId } = this.activatedRoute.snapshot.params;\\n\\n    this.projectId = projectId;\\n\\n    this.project$ = this.projectService.get(projectId);\\n    this.members$ = this.memberService.map(projectId);\\n    this.taskList$ = this.taskService.list(projectId);\\n    this.statusList$ = this.statusService.list(projectId);\\n\\n    this.userService.getMyself().subscribe((user) => {\\n      this.filters.push(Filters.ONLY_MY_TASKS(user.id));\\n    });\\n\\n    this.filtersControl.valueChanges.subscribe((filters) => {\\n      this.taskList$ = this.taskService.list(projectId);\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  padding: 2rem;\\n}\\n","styleUrl":"./task-list.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""},{"name":"statusService","type":"StatusService","deprecated":false,"deprecationMessage":""},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":""},{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""}],"line":55,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"statusService","type":"StatusService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"memberService","type":"MemberService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<app-view-options [project]=\\"(project$ | async)!\\" [filters]=\\"filters\\" [filtersControl]=\\"filtersControl\\">\\n</app-view-options>\\n\\n<task-list [tasks]=\\"(taskList$ | async) || []\\" [members]=\\"(members$ | async) || emptyMap\\" [projectId]=\\"projectId\\"\\n  [statusList]=\\"(statusList$ | async) || []\\"></task-list>\\n"},{"name":"TaskRowComponent","id":"component-TaskRowComponent-12e29329ad008b4e4d72bdeeaea6a3d02f326b00eb9abc9f5599d1012ee3024ebb5d425fd5a9c6db8ea0eb87ebdaad0579eb29bb701d4b018590c891ea3469f4","file":"src/app/tasks/components/task-row/task-row.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"task-row","styleUrls":["./task-row.component.scss"],"styles":[],"templateUrl":["./task-row.component.html"],"viewProviders":[],"inputsClass":[{"name":"members","deprecated":false,"deprecationMessage":"","line":22,"type":"Map<number | ProjectMember>","decorators":[]},{"name":"projectId","deprecated":false,"deprecationMessage":"","line":20,"type":"number","decorators":[]},{"name":"statusList","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":23,"type":"Status[]","decorators":[]},{"name":"subtask","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":21,"type":"boolean","decorators":[]},{"name":"task","deprecated":false,"deprecationMessage":"","line":19,"type":"Task","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"isExpanded","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27},{"name":"subtasks","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLElement>","optional":true,"description":"","line":25,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'subtasks\'"}]},{"name":"subtasksMaxHeight","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":28}],"methodsClass":[{"name":"collapse","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":""},{"name":"createSubtask","args":[{"name":"task","type":"Task","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"task","type":"Task","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"deleteTask","args":[{"name":"task","type":"Task","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"task","type":"Task","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"editTask","args":[{"name":"task","type":"Task","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"task","type":"Task","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"expand","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":""},{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":""},{"name":"trackByTask","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"task","type":"Task","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"task","type":"Task","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, AfterViewInit, ViewChild, ElementRef } from \'@angular/core\';\\nimport { ProjectMember } from \'@dashboard/interfaces/project-member.interface\';\\nimport {\\n  faChevronRight,\\n  faCodeCommit,\\n  faCodePullRequest,\\n  faCheck,\\n} from \'@fortawesome/free-solid-svg-icons\';\\nimport { Status } from \'@tasks/interfaces/status.interface\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\n\\n@Component({\\n  selector: \'task-row\',\\n  templateUrl: \'./task-row.component.html\',\\n  styleUrls: [\'./task-row.component.scss\'],\\n})\\nexport class TaskRowComponent implements AfterViewInit {\\n  @Input() task!: Task;\\n  @Input() projectId!: number;\\n  @Input() subtask: boolean = false;\\n  @Input() members!: Map<number, ProjectMember>;\\n  @Input() statusList: Status[] = [];\\n\\n  @ViewChild(\'subtasks\') subtasks?: ElementRef<HTMLElement>;\\n\\n  isExpanded = false;\\n  subtasksMaxHeight = 0;\\n\\n  /** @ignore */\\n  faChevronRight = faChevronRight;\\n\\n  /** @ignore */\\n  faCodeCommit = faCodeCommit;\\n\\n  /** @ignore */\\n  faCodePullRequest = faCodePullRequest;\\n\\n  /** @ignore */\\n  faCheck = faCheck;\\n\\n  constructor(private taskService: TaskService) {}\\n\\n  ngAfterViewInit() {\\n    this.subtasksMaxHeight = this.subtasks?.nativeElement.scrollHeight || 0;\\n  }\\n\\n  expand() {\\n    this.isExpanded = true;\\n  }\\n\\n  collapse() {\\n    this.isExpanded = false;\\n  }\\n\\n  toggle() {\\n    if (this.isExpanded) {\\n      this.collapse();\\n    } else {\\n      this.expand();\\n    }\\n  }\\n\\n  trackByTask(index: number, task: Task) {\\n    return task.id;\\n  }\\n\\n  editTask(task: Task) {\\n    this.taskService.openEditTaskDialog(this.projectId, task).subscribe();\\n  }\\n\\n  createSubtask(task: Task) {\\n    this.taskService.openCreateSubtaskDialog(this.projectId, task).subscribe();\\n  }\\n\\n  deleteTask(task: Task) {\\n    this.taskService.deleteWithConfirmation(this.projectId, task).subscribe();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".row {\\n  cursor: pointer;\\n\\n  &.expanded {\\n    .title>app-icon {\\n      transform: rotate(90deg);\\n    }\\n  }\\n}\\n\\n.type {\\n  min-width: 16px;\\n  min-height: 16px;\\n  margin-right: 1rem;\\n  border-radius: 4px;\\n}\\n\\n.title {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  align-items: center;\\n  padding-left: 0.5rem;\\n\\n  .id {\\n    display: block;\\n    margin-right: 1rem;\\n    opacity: 0.5;\\n  }\\n\\n  .property {\\n    display: flex;\\n    margin-left: 1rem;\\n    cursor: pointer;\\n    opacity: 0.5;\\n    transition: opacity 0.2s ease;\\n\\n    &:hover {\\n      opacity: 1;\\n    }\\n\\n    .check {\\n      margin-left: 5px;\\n      color: #2ecc71;\\n    }\\n  }\\n\\n  &>app-icon {\\n    margin-right: 1rem;\\n    opacity: 0.5;\\n    transition: transform .2s ease;\\n  }\\n}\\n\\n.subtasks {\\n  position: relative;\\n  overflow: hidden;\\n  max-height: 0;\\n  padding-left: 4rem;\\n  transition: max-height 0.4s ease;\\n\\n  ::ng-deep {\\n    task-row {\\n      position: relative;\\n\\n      &::before,\\n      &::after {\\n        position: absolute;\\n        top: 1rem;\\n        left: -2.5rem;\\n        display: block;\\n        content: \'\';\\n        pointer-events: none;\\n      }\\n\\n      &:last-child {\\n        margin-bottom: 1rem;\\n      }\\n\\n      &:not(:last-child)::before {\\n        width: 2px;\\n        height: calc(100% + 1rem);\\n        background-color: var(--color-secondary-400);\\n      }\\n\\n      &::after {\\n        width: 29px;\\n        height: 29px;\\n        border: 2px solid var(--color-secondary-400);\\n        border-top-width: 0;\\n        border-right-width: 0;\\n        border-bottom-left-radius: 50%;\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./task-row.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["AfterViewInit"],"templateData":"<div class=\\"row\\" [class.expanded]=\\"isExpanded\\" (click)=\\"toggle()\\">\\n\\n  \x3c!-- Title cell --\x3e\\n  <div class=\\"cell w-full\\">\\n    <div class=\\"title\\">\\n      <app-icon [icon]=\\"faChevronRight\\" size=\\"16px\\" [class.invisible]=\\"!task.subTasks?.length\\"></app-icon>\\n      <span class=\\"type\\" [style.background-color]=\\"task.type | taskType:\'color\'\\"></span>\\n      <span class=\\"id\\">#{{ task.id }}</span>\\n      <span>{{ task.name }}</span>\\n      <a *ngIf=\\"task.issue\\" [href]=\\"task.issue.url\\" class=\\"property\\" target=\\"_blank\\" matTooltip=\\"GitHub issue\\"\\n        i18n-matTooltip>\\n        <app-icon [icon]=\\"faCodeCommit\\" size=\\"14px\\"></app-icon>\\n      </a>\\n      <a *ngIf=\\"task.pull\\" [href]=\\"task.pull.url\\" class=\\"property\\" target=\\"_blank\\" matTooltip=\\"GitHub pull request\\"\\n        i18n-matTooltip>\\n        <app-icon [icon]=\\"faCodePullRequest\\" size=\\"14px\\"></app-icon>\\n      </a>\\n      <a *ngIf=\\"task.mergedPullList\\" [href]=\\"task.mergedPullList[0].url\\" class=\\"property\\" target=\\"_blank\\"\\n        matTooltip=\\"GitHub pull request\\" i18n-matTooltip>\\n        <app-icon [icon]=\\"faCodePullRequest\\" size=\\"14px\\"></app-icon>\\n        <app-icon class=\\"check\\" [icon]=\\"faCheck\\" size=\\"14px\\"></app-icon>\\n      </a>\\n    </div>\\n  </div>\\n\\n  \x3c!-- Status cell --\x3e\\n  <div class=\\"cell w-52 p-0\\">\\n    <app-status-label [projectId]=\\"projectId\\" [taskId]=\\"task.id\\" [statuses]=\\"statusList\\" [statusId]=\\"task.statusId!\\"\\n      click-stop-propagation>\\n    </app-status-label>\\n  </div>\\n\\n  \x3c!-- Assignee cell --\x3e\\n  <div class=\\"cell w-52\\">\\n    <app-input-assignee [assignee]=\\"task.assigneeId && members && members.get(task.assigneeId) || null\\"\\n      [members]=\\"members\\" [projectId]=\\"projectId\\" [taskId]=\\"task.id\\" click-stop-propagation>\\n    </app-input-assignee>\\n  </div>\\n\\n  \x3c!-- Time tracking cell --\x3e\\n  <div class=\\"cell w-52\\">\\n    <tracker [projectId]=\\"projectId\\" [task]=\\"task\\"></tracker>\\n  </div>\\n\\n  \x3c!-- Deadline cell --\x3e\\n  <div class=\\"cell w-52\\">{{ task.deadline | dateByPreferences | async }}</div>\\n\\n  \x3c!-- Actions cell --\x3e\\n  <div class=\\"cell action justify-center\\">\\n    <button mat-icon-button click-stop-propagation [matMenuTriggerFor]=\\"menu\\" class=\\"flex items-center\\">\\n      <app-icon icon=\\"matMoreVert\\"></app-icon>\\n    </button>\\n    <mat-menu #menu=\\"matMenu\\">\\n      <button mat-menu-item (click)=\\"editTask(task)\\">\\n        <span i18n>Edit task</span>\\n      </button>\\n      <button mat-menu-item (click)=\\"createSubtask(task)\\">\\n        <span i18n>Create subtask</span>\\n      </button>\\n      <button mat-menu-item (click)=\\"deleteTask(task)\\" class=\\"important\\">\\n        <span i18n>Delete task</span>\\n      </button>\\n    </mat-menu>\\n  </div>\\n</div>\\n<div #subtasks *ngIf=\\"task.subTasks?.length\\" class=\\"subtasks\\"\\n  [style.max-height]=\\"isExpanded ? subtasksMaxHeight + \'px\' : 0\\">\\n  <ng-container *ngFor=\\"let subTask of task.subTasks || []; trackBy: trackByTask\\">\\n    <task-row [task]=\\"subTask\\" [projectId]=\\"projectId\\" [members]=\\"members\\" [statusList]=\\"statusList\\"></task-row>\\n  </ng-container>\\n</div>\\n"},{"name":"TextareaComponent","id":"component-TextareaComponent-d53269b48e63da8d4246a2fafbe1289a6df1bdfbc66e1570b7974d121ba16cf7ac1b9e2bccd3b86de14cd3f461770d1509e2e06126ba2600102c8477a15000b7","file":"src/app/_main/components/textarea/textarea.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-textarea","styleUrls":["./textarea.component.scss"],"styles":[],"templateUrl":["./textarea.component.html"],"viewProviders":[],"inputsClass":[{"name":"cols","defaultValue":"50","deprecated":false,"deprecationMessage":"","line":50,"type":"number","decorators":[]},{"name":"floatingLabel","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFloating label text to display\\n","description":"<p>Floating label text to display</p>\\n","line":31,"type":"string","decorators":[]},{"name":"hint","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHint to display beneath the input to provide additional information of how to use the input\\n","description":"<p>Hint to display beneath the input to provide additional information of how to use the input</p>\\n","line":46,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInput placeholder text\\n","description":"<p>Input placeholder text</p>\\n","line":41,"type":"string","decorators":[]},{"name":"rows","defaultValue":"4","deprecated":false,"deprecationMessage":"","line":48,"type":"number","decorators":[]},{"name":"staticLabel","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nStatic label text to display\\n","description":"<p>Static label text to display</p>\\n","line":36,"type":"string","decorators":[]},{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"input","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLElement>","optional":false,"description":"","line":52,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'input\'"}]},{"name":"mode","defaultValue":"\'editor\'","deprecated":false,"deprecationMessage":"","type":"\\"editor\\" | \\"preview\\"","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"output","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLElement>","optional":false,"description":"","line":53,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'output\'"}]},{"name":"renderer","defaultValue":"Marked.getRenderer()","deprecated":false,"deprecationMessage":"","type":"Renderer","optional":false,"description":"","line":55,"modifierKind":[121]},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"applyBold","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":""},{"name":"applyCode","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":208,"deprecated":false,"deprecationMessage":""},{"name":"applyCodeBlock","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":216,"deprecated":false,"deprecationMessage":""},{"name":"applyItalic","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":""},{"name":"applyLink","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":173,"deprecated":false,"deprecationMessage":""},{"name":"applyList","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":""},{"name":"applyListNumeric","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":191,"deprecated":false,"deprecationMessage":""},{"name":"applyQuote","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":201,"deprecated":false,"deprecationMessage":""},{"name":"applyUnderline","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"ControlAccessor"}},{"name":"openEditor","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":""},{"name":"openPreview","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrites a new value to the element.\\n\\nThis method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.\\n\\n","description":"<p>Writes a new value to the element.</p>\\n<p>This method is called by the forms API to write to the view when programmatic\\nchanges from model to view are requested.</p>\\n","jsdoctags":[{"name":{"pos":3984,"end":3989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":3978,"end":3983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The new value for the element</p>\\n"}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Monaco } from \'./../../libs/monaco/monaco.lib\';\\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from \'@angular/core\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport { editor } from \'monaco-editor\';\\n// eslint-disable-next-line unused-imports/no-unused-imports\\nimport { marked, Renderer } from \'marked\';\\nimport hljs from \'highlight.js\';\\nimport {\\n  faBold,\\n  faCode,\\n  faFileCode,\\n  faItalic,\\n  faLink,\\n  faList,\\n  faListNumeric,\\n  faQuoteLeft,\\n  faUnderline,\\n} from \'@fortawesome/free-solid-svg-icons\';\\nimport { Marked } from \'@main/libs/marked/marked.lib\';\\nimport \'./textarea.theme\';\\n\\n@Component({\\n  selector: \'app-textarea\',\\n  templateUrl: \'./textarea.component.html\',\\n  styleUrls: [\'./textarea.component.scss\'],\\n})\\nexport class TextareaComponent extends ControlAccessor implements OnInit, AfterViewInit {\\n  /**\\n   * Floating label text to display\\n   */\\n  @Input() floatingLabel?: string;\\n\\n  /**\\n   * Static label text to display\\n   */\\n  @Input() staticLabel?: string;\\n\\n  /**\\n   * Input placeholder text\\n   */\\n  @Input() placeholder: string = \'\';\\n\\n  /**\\n   * Hint to display beneath the input to provide additional information of how to use the input\\n   */\\n  @Input() hint?: string;\\n\\n  @Input() rows?: number = 4;\\n\\n  @Input() cols?: number = 50;\\n\\n  @ViewChild(\'input\') input!: ElementRef<HTMLElement>;\\n  @ViewChild(\'output\') output!: ElementRef<HTMLElement>;\\n\\n  private renderer: Renderer = Marked.getRenderer();\\n\\n  public mode: \'editor\' | \'preview\' = \'editor\';\\n\\n  /** @ignore */\\n  private editor: editor.IStandaloneCodeEditor | null = null;\\n\\n  /** @ignore */\\n  faCode = faCode;\\n\\n  /** @ignore */\\n  faUnderline = faUnderline;\\n\\n  /** @ignore */\\n  faBold = faBold;\\n\\n  /** @ignore */\\n  faItalic = faItalic;\\n\\n  /** @ignore */\\n  faQuoteLeft = faQuoteLeft;\\n\\n  /** @ignore */\\n  faList = faList;\\n\\n  /** @ignore */\\n  faListNumeric = faListNumeric;\\n\\n  /** @ignore */\\n  faLink = faLink;\\n\\n  /** @ignore */\\n  faFileCode = faFileCode;\\n\\n  override ngOnInit(): void {\\n    super.ngOnInit();\\n    Marked.init();\\n    Monaco.init();\\n    hljs.configure({ languages: [] });\\n  }\\n\\n  ngAfterViewInit(): void {\\n    const container = this.input.nativeElement;\\n    const _editor = editor.create(container, {\\n      value: this.control.value || \'\',\\n      language: \'markdown\',\\n      scrollBeyondLastLine: false,\\n      wordWrap: \'on\',\\n      wrappingStrategy: \'advanced\',\\n      minimap: {\\n        enabled: false,\\n      },\\n      overviewRulerLanes: 0,\\n      theme: \'dark\',\\n      wordBasedSuggestions: false,\\n    });\\n    let ignoreEvent = false;\\n    const updateHeight = () => {\\n      const contentHeight = Math.min(500, _editor.getContentHeight());\\n      const containerWidth = Math.min(1000, container.scrollWidth);\\n      container.style.width = `${containerWidth}px`;\\n      container.style.height = `${contentHeight}px`;\\n      try {\\n        ignoreEvent = true;\\n        _editor.layout({ width: containerWidth, height: contentHeight });\\n      } finally {\\n        ignoreEvent = false;\\n      }\\n    };\\n    _editor.onDidContentSizeChange(updateHeight);\\n    _editor.getModel()?.onDidChangeContent(() => {\\n      this.control.setValue(_editor.getValue());\\n    });\\n    updateHeight();\\n    this.editor = _editor;\\n  }\\n\\n  openEditor() {\\n    this.mode = \'editor\';\\n  }\\n\\n  openPreview() {\\n    const { renderer } = this;\\n\\n    this.output.nativeElement.innerHTML = marked.parse(this.editor?.getValue() || \'\', { renderer });\\n    this.output.nativeElement\\n      .querySelectorAll<HTMLElement>(\'pre code\')\\n      .forEach((c: HTMLElement) => {\\n        hljs.highlightElement(c);\\n      });\\n\\n    this.mode = \'preview\';\\n  }\\n\\n  applyUnderline() {\\n    this.editor?.executeSelectionEdits({\\n      before: \'<u>\',\\n      after: \'</u>\',\\n    });\\n    this.editor?.focus();\\n  }\\n\\n  applyBold() {\\n    this.editor?.executeSelectionEdits({\\n      before: \'**\',\\n      after: \'**\',\\n    });\\n    this.editor?.focus();\\n  }\\n\\n  applyItalic() {\\n    this.editor?.executeSelectionEdits({\\n      before: \'*\',\\n      after: \'*\',\\n    });\\n    this.editor?.focus();\\n  }\\n\\n  applyLink() {\\n    this.editor?.executeSelectionEdits({\\n      before: \'[\',\\n      after: \'](https://google.com)\',\\n    });\\n    this.editor?.focus();\\n  }\\n\\n  applyList() {\\n    this.editor?.executeSelectionEdits({\\n      before: \'<ul>\\\\n\',\\n      after: \'\\\\n</ul>\',\\n      beforeEachLine: \'  <li>\',\\n      afterEachLine: \'</li>\',\\n    });\\n    this.editor?.focus();\\n  }\\n\\n  applyListNumeric() {\\n    this.editor?.executeSelectionEdits({\\n      before: \'<ol>\\\\n\',\\n      after: \'\\\\n</ol>\',\\n      beforeEachLine: \'  <li>\',\\n      afterEachLine: \'</li>\',\\n    });\\n    this.editor?.focus();\\n  }\\n\\n  applyQuote() {\\n    this.editor?.executeSelectionEdits({\\n      beforeEachLine: \'>\',\\n    });\\n    this.editor?.focus();\\n  }\\n\\n  applyCode() {\\n    this.editor?.executeSelectionEdits({\\n      before: \'`\',\\n      after: \'`\',\\n    });\\n    this.editor?.focus();\\n  }\\n\\n  applyCodeBlock() {\\n    this.editor?.executeSelectionEdits({\\n      before: \'```javascript\\\\n\',\\n      after: \'\\\\n```\',\\n    });\\n    this.editor?.focus();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"// ::ng-deep {\\n//   .line-numbers {\\n//     width: 25px !important;\\n//   }\\n// }\\n\\n:host {\\n  display: block;\\n  color: var(--color-text);\\n}\\n\\n.form-field {\\n  padding: 1rem 0 0 0;\\n  border: 1px solid var(--color-input-border);\\n  background-color: var(--color-input-background);\\n  border-radius: var(--border-radius);\\n\\n  .switch {\\n    margin-bottom: 1em;\\n    margin-left: 1em;\\n\\n    &>* {\\n      opacity: 0.5;\\n\\n      &:not(:last-child) {\\n        margin-right: 1em;\\n      }\\n\\n      &.active {\\n        opacity: 1;\\n      }\\n    }\\n  }\\n\\n  .preview {\\n    overflow: auto;\\n    max-height: 500px;\\n    padding: 0 1em;\\n  }\\n}\\n\\n.preview ::ng-deep {\\n  h1 {\\n    font-size: 2em;\\n  }\\n\\n  h2 {\\n    font-size: 1.8em;\\n  }\\n\\n  h3 {\\n    font-size: 1.6em;\\n  }\\n\\n  h4 {\\n    font-size: 1.4em;\\n  }\\n\\n  h5 {\\n    font-size: 1.2em;\\n  }\\n\\n  h6 {\\n    font-size: 1em;\\n  }\\n\\n  hr {\\n    margin: 1rem 0;\\n    opacity: 0.5;\\n  }\\n\\n  blockquote {\\n    display: inline-block;\\n    padding-left: 1rem;\\n    border-left: 2px solid var(--color-secondary-200);\\n  }\\n\\n  ul,\\n  ol,\\n  menu {\\n    padding-left: 40px;\\n    margin: 10px 0;\\n    list-style: initial;\\n  }\\n\\n  ol {\\n    list-style: decimal;\\n  }\\n\\n  a {\\n    color: var(--color-purple-300);\\n    text-decoration: underline;\\n  }\\n\\n  code {\\n    display: inline-block;\\n    padding: 0.2rem 0.5rem;\\n    background-color: var(--color-secondary-600);\\n    border-radius: 2px;\\n  }\\n\\n  table {\\n    td, th {\\n      padding: 0.5rem;\\n      border: 0.1rem solid var(--color-secondary-600);\\n    }\\n  }\\n\\n  .emoji {\\n    display: inline-block;\\n  }\\n}\\n\\n.tools {\\n  display: flex;\\n  padding: 1rem;\\n\\n  .tool {\\n    display: block;\\n    padding: 0.5rem;\\n    border-radius: 3px;\\n    cursor: pointer;\\n    transition: background-color .2s ease;\\n\\n    &:hover {\\n      background-color: var(--color-secondary-700);\\n    }\\n\\n    &:not(:last-child) {\\n      margin-right: 0.1rem;\\n    }\\n  }\\n}\\n","styleUrl":"./textarea.component.scss"}],"stylesData":"","extends":"ControlAccessor","implements":["OnInit","AfterViewInit"],"templateData":"<div class=\\"form-field\\">\\n  \x3c!-- <label *ngIf=\\"staticLabel\\" [class.required]=\\"required\\">{{ staticLabel }}</label>\\n  <mat-form-field appearance=\\"outline\\" [class.without-floating-label]=\\"!floatingLabel\\">\\n    <mat-label *ngIf=\\"floatingLabel\\">{{ floatingLabel }}</mat-label>\\n    <textarea #input matInput [placeholder]=\\"placeholder\\" [required]=\\"required\\" [formControl]=\\"control\\"\\n      [autocomplete]=\\"autocomplete\\" [rows]=\\"rows\\" [cols]=\\"cols\\" name=\\"test\\"></textarea>\\n    <mat-error>{{ ngControl.control?.errors | validationError }}</mat-error>\\n    <mat-hint *ngIf=\\"hint\\">{{ hint }}</mat-hint>\\n  </mat-form-field> --\x3e\\n  <section class=\\"switch\\">\\n    <button (click)=\\"openEditor()\\" [class.active]=\\"mode === \'editor\'\\" type=\\"button\\">Editor</button>\\n    <button (click)=\\"openPreview()\\" [class.active]=\\"mode === \'preview\'\\" type=\\"button\\">Preview</button>\\n  </section>\\n  <div #input [class.hidden]=\\"mode !== \'editor\'\\"></div>\\n  <div #output class=\\"preview\\" [class.hidden]=\\"mode !== \'preview\'\\"></div>\\n  <section class=\\"tools\\">\\n\\n    \x3c!-- Bold --\x3e\\n    <div class=\\"tool\\" matTooltip=\\"Bold\\" i18n-matTooltip (click)=\\"applyBold()\\">\\n      <div class=\\"icon\\">\\n        <app-icon size=\\"16px\\" [icon]=\\"faBold\\"></app-icon>\\n      </div>\\n    </div>\\n\\n    \x3c!-- Italic --\x3e\\n    <div class=\\"tool\\" matTooltip=\\"Italic\\" i18n-matTooltip (click)=\\"applyItalic()\\">\\n      <div class=\\"icon\\">\\n        <app-icon size=\\"16px\\" [icon]=\\"faItalic\\"></app-icon>\\n      </div>\\n    </div>\\n\\n    \x3c!-- Underline --\x3e\\n    <div class=\\"tool\\" matTooltip=\\"Underline\\" i18n-matTooltip (click)=\\"applyUnderline()\\">\\n      <div class=\\"icon\\">\\n        <app-icon size=\\"16px\\" [icon]=\\"faUnderline\\"></app-icon>\\n      </div>\\n    </div>\\n\\n    \x3c!-- Link --\x3e\\n    <div class=\\"tool\\" matTooltip=\\"Link\\" i18n-matTooltip (click)=\\"applyLink()\\">\\n      <div class=\\"icon\\">\\n        <app-icon size=\\"16px\\" [icon]=\\"faLink\\"></app-icon>\\n      </div>\\n    </div>\\n\\n    \x3c!-- List --\x3e\\n    <div class=\\"tool\\" matTooltip=\\"Dotted list\\" i18n-matTooltip (click)=\\"applyList()\\">\\n      <div class=\\"icon\\">\\n        <app-icon size=\\"16px\\" [icon]=\\"faList\\"></app-icon>\\n      </div>\\n    </div>\\n\\n    \x3c!-- List numeric --\x3e\\n    <div class=\\"tool\\" matTooltip=\\"Numeric list\\" i18n-matTooltip (click)=\\"applyListNumeric()\\">\\n      <div class=\\"icon\\">\\n        <app-icon size=\\"16px\\" [icon]=\\"faListNumeric\\"></app-icon>\\n      </div>\\n    </div>\\n\\n    \x3c!-- Quote --\x3e\\n    <div class=\\"tool\\" matTooltip=\\"Quote\\" i18n-matTooltip (click)=\\"applyQuote()\\">\\n      <div class=\\"icon\\">\\n        <app-icon size=\\"16px\\" [icon]=\\"faQuoteLeft\\"></app-icon>\\n      </div>\\n    </div>\\n\\n    \x3c!-- Code --\x3e\\n    <div class=\\"tool\\" matTooltip=\\"Code\\" i18n-matTooltip (click)=\\"applyCode()\\">\\n      <div class=\\"icon\\">\\n        <app-icon size=\\"16px\\" [icon]=\\"faCode\\"></app-icon>\\n      </div>\\n    </div>\\n\\n    \x3c!-- Code block --\x3e\\n    <div class=\\"tool\\" matTooltip=\\"Block of code\\" i18n-matTooltip (click)=\\"applyCodeBlock()\\">\\n      <div class=\\"icon\\">\\n        <app-icon size=\\"16px\\" [icon]=\\"faFileCode\\"></app-icon>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n"},{"name":"TimePickerComponent","id":"component-TimePickerComponent-b97de51fbacff886b020941e2c17f0ad963ef79357a5f9ad49421bdddfa3fcf81499b38db2e7f8429cbb4649a039736e8ca09375f2dbd32da58940b83b85a7c2","file":"src/app/_main/components/input-date-time/time-picker/time-picker.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"time-picker","styleUrls":["./time-picker.component.scss"],"styles":[],"templateUrl":["./time-picker.component.html"],"viewProviders":[],"inputsClass":[{"name":"autocomplete","defaultValue":"\'off\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nProperty that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails\\n","description":"<p>Property that defines if field should prompt user how to fill it. For example\\nin a form, if a field is email, it will give the user last used emails</p>\\n","line":22,"type":"\\"on\\" | \\"off\\"","decorators":[],"inheritance":{"file":"ControlAccessor"}}],"outputsClass":[],"propertiesClass":[{"name":"cursor","defaultValue":"this.control.value ? dayjs(this.control.value) : dayjs()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"faChevronDown","defaultValue":"faChevronDown","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"faChevronUp","defaultValue":"faChevronUp","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"_previousValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":83,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"_previousValueBuffer","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"T | undefined","optional":false,"description":"","line":84,"modifierKind":[121],"inheritance":{"file":"ControlAccessor"}},{"name":"ngControl","deprecated":false,"deprecationMessage":"","type":"NgControl","optional":false,"description":"control to be used by the accessor","line":94,"rawdescription":"\\n\\nControl passed from DOM to the component, contains all the information about form control\\n","decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[123],"inheritance":{"file":"ControlAccessor"}}],"methodsClass":[{"name":"decreaseHours","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":""},{"name":"decreaseMinutes","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""},{"name":"increaseHours","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":""},{"name":"increaseMinutes","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterControlInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"ControlAccessor"}},{"name":"now","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":""},{"name":"onHourChange","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onMinuteChange","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setControlProperties","args":[{"name":"propertyNames","type":"UnitType[]","deprecated":false,"deprecationMessage":""},{"name":"values","type":"number[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"propertyNames","type":"UnitType[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"values","type":"number[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"writeValue","args":[{"name":"value","type":"unixTimestamp | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"value","type":"unixTimestamp | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ControlAccessor"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called when the control\'s value changes in the UI.\\n\\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\\n","description":"<p>Registers a callback function that is called when the control&#39;s value changes in the UI.</p>\\n<p>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</p>\\n","jsdoctags":[{"name":{"pos":4408,"end":4410,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4402,"end":4407,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control value changes.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegisters a callback function that is called by the forms API on initialization to update the form model on blur.\\n\\n","description":"<p>Registers a callback function that is called by the forms API on initialization to update the form model on blur.</p>\\n","jsdoctags":[{"name":{"pos":4651,"end":4653,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4645,"end":4650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Callback to be called when the control is touched.</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet disabled state on the control. If set to true, the control will be disabled.\\n","description":"<p>Set disabled state on the control. If set to true, the control will be disabled.</p>\\n","jsdoctags":[{"name":{"pos":4854,"end":4864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4848,"end":4853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>State to set to the control</p>\\n"}],"inheritance":{"file":"ControlAccessor"}},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | ValidationError","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ControlAccessor"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { faChevronUp, faChevronDown } from \'@fortawesome/free-solid-svg-icons\';\\nimport { ControlAccessor } from \'@main/classes/control-accessor.class\';\\nimport dayjs, { UnitType } from \'dayjs\';\\nimport { unixTimestamp } from \'../../../interfaces/date.interface\';\\n\\n@Component({\\n  selector: \'time-picker\',\\n  templateUrl: \'./time-picker.component.html\',\\n  styleUrls: [\'./time-picker.component.scss\'],\\n})\\nexport class TimePickerComponent extends ControlAccessor<unixTimestamp | null> {\\n  cursor = this.control.value ? dayjs(this.control.value) : dayjs();\\n\\n  faChevronUp = faChevronUp;\\n  faChevronDown = faChevronDown;\\n\\n  now() {\\n    const today = dayjs();\\n\\n    this.cursor = this.cursor.set(\'hour\', today.hour());\\n    this.cursor = this.cursor.set(\'minute\', today.minute());\\n\\n    this.control.setValue(this.cursor.valueOf());\\n  }\\n\\n  increaseMinutes() {\\n    this.cursor = this.cursor.add(1, \'minute\');\\n    this.setControlProperties([\'hour\', \'minute\'], [this.cursor.hour(), this.cursor.minute()]);\\n  }\\n\\n  decreaseMinutes() {\\n    this.cursor = this.cursor.subtract(1, \'minute\');\\n    this.setControlProperties([\'hour\', \'minute\'], [this.cursor.hour(), this.cursor.minute()]);\\n  }\\n\\n  increaseHours() {\\n    this.cursor = this.cursor.add(1, \'hour\');\\n    this.setControlProperties([\'hour\', \'minute\'], [this.cursor.hour(), this.cursor.minute()]);\\n  }\\n\\n  decreaseHours() {\\n    this.cursor = this.cursor.subtract(1, \'hour\');\\n    this.setControlProperties([\'hour\', \'minute\'], [this.cursor.hour(), this.cursor.minute()]);\\n  }\\n\\n  setControlProperties(propertyNames: UnitType[], values: number[]) {\\n    let value = dayjs(this.control.value || 0);\\n    for (let i = 0; i < Math.min(propertyNames.length, values.length); i++) {\\n      value = value.set(propertyNames[i], values[i]);\\n    }\\n    this.control.setValue(value.valueOf());\\n  }\\n\\n  onHourChange(event: Event) {\\n    const value = (event.target as HTMLInputElement)?.valueAsNumber;\\n    this.cursor = this.cursor.set(\'hour\', value);\\n  }\\n\\n  onMinuteChange(event: Event) {\\n    const value = (event.target as HTMLInputElement)?.valueAsNumber;\\n    this.cursor = this.cursor.set(\'minute\', value);\\n  }\\n\\n  override ngAfterControlInit(): void {\\n    if (this.control.value) {\\n      this.cursor = dayjs(this.control.value);\\n    }\\n  }\\n\\n  override writeValue(value: unixTimestamp | null) {\\n    super.writeValue(value);\\n    if (value) {\\n      this.cursor = dayjs(value);\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".time-selector {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n\\n  .arrow-up,\\n  .arrow-down {\\n    padding: 0.25rem;\\n    border: none;\\n    background-color: transparent;\\n    border-radius: 3px;\\n    cursor: pointer;\\n    transition: background-color .1s ease;\\n\\n    &:hover {\\n      background-color: var(--color-secondary-600);\\n    }\\n  }\\n}\\n\\n.time {\\n  display: flex;\\n  flex-grow: 1;\\n  align-items: center;\\n  justify-content: center;\\n  margin: 1rem;\\n\\n  .colon {\\n    display: inline-block;\\n    margin: 0 0.5rem;\\n  }\\n\\n  input {\\n    width: 2rem;\\n    background-color: transparent;\\n    text-align: center;\\n  }\\n}\\n\\n.time-actions {\\n  display: flex;\\n  align-items: flex-end;\\n  justify-content: flex-end;\\n\\n  button {\\n    padding: 0.25rem 0.5rem;\\n    background-color: transparent;\\n    border-radius: 3px;\\n    color: var(--color-text);\\n    cursor: pointer;\\n    font-weight: bold;\\n    transition: background-color .1s ease;\\n\\n    &:hover {\\n      background-color: var(--color-secondary-600);\\n    }\\n  }\\n}\\n\\n/* --- DISABLE ARROW BUTTONS IN INPUT TYPE NUMBER ---  */\\n\\n/* Chrome, Safari, Edge, Opera */\\ninput::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  margin: 0;\\n  -webkit-appearance: none;\\n}\\n\\n/* Firefox */\\ninput[type=number] {\\n  -moz-appearance: textfield;\\n}\\n","styleUrl":"./time-picker.component.scss"}],"stylesData":"","extends":"ControlAccessor","templateData":"<div class=\\"time\\">\\n  <div class=\\"time-selector\\">\\n    <button class=\\"arrow-up\\" (click)=\\"increaseHours()\\">\\n      <app-icon [icon]=\\"faChevronUp\\" size=\\"1rem\\"></app-icon>\\n    </button>\\n    <input type=\\"number\\" [value]=\\"cursor | dayjsFormat:\'HH\'\\" (change)=\\"onHourChange($event)\\" readonly>\\n    <button class=\\"arrow-down\\" (click)=\\"decreaseHours()\\">\\n      <app-icon [icon]=\\"faChevronDown\\" size=\\"1rem\\"></app-icon>\\n    </button>\\n  </div>\\n  <span class=\\"colon\\">:</span>\\n  <div class=\\"time-selector\\">\\n    <button class=\\"arrow-up\\" (click)=\\"increaseMinutes()\\">\\n      <app-icon [icon]=\\"faChevronUp\\" size=\\"1rem\\"></app-icon>\\n    </button>\\n    <input type=\\"number\\" [value]=\\"cursor | dayjsFormat:\'mm\'\\" (change)=\\"onMinuteChange($event)\\" readonly>\\n    <button class=\\"arrow-down\\" (click)=\\"decreaseMinutes()\\">\\n      <app-icon [icon]=\\"faChevronDown\\" size=\\"1rem\\"></app-icon>\\n    </button>\\n  </div>\\n</div>\\n"},{"name":"TrackerComponent","id":"component-TrackerComponent-5aa5e136bfda3e7c80b40f540f07703bd070ac4b5885ffae3bd999c8f9528cb0f4c34e6031ff76464374c9c95896097adfe68d7c2ce44528ac6066e5b67f0a33","file":"src/app/tasks/components/tracker/tracker.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"TimeTracksTotalPipe","type":"pipe"}],"selector":"tracker","styleUrls":["./tracker.component.scss"],"styles":[],"templateUrl":["./tracker.component.html"],"viewProviders":[],"inputsClass":[{"name":"projectId","deprecated":false,"deprecationMessage":"","line":22,"type":"number","decorators":[]},{"name":"task","deprecated":false,"deprecationMessage":"","line":23,"type":"Task","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_task","deprecated":false,"deprecationMessage":"","type":"Task","optional":false,"description":"","line":37,"modifierKind":[121]},{"name":"enabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"isOpen$","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":55,"modifierKind":[123,144]},{"name":"overlay","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLElement>","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"CdkConnectedOverlay"}]},{"name":"timer$","defaultValue":"new BehaviorSubject<number>(0)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123,144]},{"name":"timeTracks","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"()[]","optional":false,"description":"","line":39,"modifierKind":[123]}],"methodsClass":[{"name":"closeDetails","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"disable","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"enable","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"insertTimeTrack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"openDetails","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"start","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"stop","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleDetails","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, Input, ViewChild } from \'@angular/core\';\\nimport { faCirclePlay, faCircleStop, faTrash, faPlus } from \'@fortawesome/free-solid-svg-icons\';\\nimport { Task } from \'@tasks/interfaces/task.interface\';\\nimport { BehaviorSubject, filter, fromEvent, interval, take, takeWhile } from \'rxjs\';\\nimport { TrackerService } from \'../../services/tracker/tracker.service\';\\nimport { TimeTracksTotalPipe } from \'../../pipes/time-tracks-total/time-tracks-total.pipe\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\nimport { TimeTrack } from \'./../../interfaces/time-track.interface\';\\nimport { UserService } from \'@auth/services/user/user.service\';\\nimport { CdkConnectedOverlay } from \'@angular/cdk/overlay\';\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'tracker\',\\n  templateUrl: \'./tracker.component.html\',\\n  styleUrls: [\'./tracker.component.scss\'],\\n  providers: [TimeTracksTotalPipe],\\n})\\nexport class TrackerComponent {\\n  @ViewChild(CdkConnectedOverlay) overlay!: ElementRef<HTMLElement>;\\n\\n  @Input() projectId!: number;\\n  @Input() set task(task: Task) {\\n    this._task = task;\\n    this.timeTracks = [\\n      ...task.timeTracks.map((track) => ({ ...track, new: false })),\\n      ...this.timeTracks.filter((track) => !track.id),\\n    ];\\n    this.timer$.next(this.timeTracksTotal.transform(task.timeTracks, \'milliseconds\'));\\n    if ((task.timeTracks && task.timeTracks?.some((track) => !track.endDate)) || false) {\\n      this.enable();\\n    }\\n  }\\n  get task() {\\n    return this._task;\\n  }\\n  private _task!: Task;\\n\\n  public timeTracks: ({ new: boolean } & TimeTrack)[] = [];\\n\\n  /** @ignore */\\n  faCircleStop = faCircleStop;\\n\\n  /** @ignore */\\n  faCirclePlay = faCirclePlay;\\n\\n  /** @ignore */\\n  faTrash = faTrash;\\n\\n  /** @ignore */\\n  faPlus = faPlus;\\n\\n  public enabled = false;\\n\\n  public readonly isOpen$ = new BehaviorSubject<boolean>(false);\\n\\n  public readonly timer$ = new BehaviorSubject<number>(0);\\n\\n  public set isOpen(val: boolean) {\\n    this.isOpen$.next(val);\\n  }\\n\\n  public get isOpen() {\\n    return this.isOpen$.value;\\n  }\\n\\n  constructor(\\n    private trackerService: TrackerService,\\n    private timeTracksTotal: TimeTracksTotalPipe,\\n    private userService: UserService,\\n  ) {}\\n\\n  public openDetails() {\\n    console.log(this.overlay);\\n    this.isOpen$.next(true);\\n    return;\\n\\n    setTimeout(() => {\\n      fromEvent(document, \'click\')\\n        .pipe(\\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\\n          take(1),\\n        )\\n        .subscribe(() => this.closeDetails());\\n    });\\n  }\\n\\n  public closeDetails() {\\n    this.isOpen$.next(false);\\n  }\\n\\n  public toggleDetails() {\\n    if (this.isOpen) {\\n      return this.closeDetails();\\n    }\\n    return this.openDetails();\\n  }\\n\\n  public stop() {\\n    this.trackerService.stop(this.projectId, this._task.id).subscribe();\\n    this.disable();\\n  }\\n\\n  public start() {\\n    this.trackerService.start(this.projectId, this._task.id).subscribe();\\n    this.enable();\\n  }\\n\\n  public toggle() {\\n    if (this.enabled) {\\n      return this.stop();\\n    }\\n    return this.start();\\n  }\\n\\n  private enable() {\\n    this.enabled = true;\\n    interval(1000)\\n      .pipe(\\n        untilDestroyed(this),\\n        takeWhile(() => this.enabled),\\n      )\\n      .subscribe(() => {\\n        const currentTimer = this.timer$.value;\\n        this.timer$.next(currentTimer + 1000);\\n      });\\n  }\\n\\n  private disable() {\\n    this.enabled = false;\\n  }\\n\\n  public insertTimeTrack() {\\n    this.userService.getMyself().subscribe((user) => {\\n      this.timeTracks = [\\n        ...this.timeTracks,\\n        {\\n          startDate: new Date().getTime(),\\n          projectId: this.projectId,\\n          taskId: this._task.id,\\n          new: true,\\n          userId: user.id,\\n          edited: true,\\n        },\\n      ];\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".wrapper {\\n  display: flex;\\n  align-items: center;\\n\\n  .total span {\\n    display: inline-block;\\n    width: 100px;\\n    margin-right: 1rem;\\n    color: var(--color-text);\\n    white-space: nowrap;\\n  }\\n\\n  .toggle {}\\n}\\n\\n.tracker-overlay {\\n  position: relative;\\n  padding: 0.5rem 1.5rem;\\n  margin-top: 1rem;\\n  background-color: var(--color-secondary-700);\\n  border-radius: var(--border-radius);\\n\\n  &::before {\\n    position: absolute;\\n    top: 0;\\n    left: 2rem;\\n    background-color: red;\\n    content: \'\';\\n    transform: rotate(45deg);\\n  }\\n\\n  ul {\\n    max-height: 300px;\\n    overflow-y: auto;\\n  }\\n}\\n","styleUrl":"./tracker.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"trackerService","type":"TrackerService","deprecated":false,"deprecationMessage":""},{"name":"timeTracksTotal","type":"TimeTracksTotalPipe","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""}],"line":65,"jsdoctags":[{"name":"trackerService","type":"TrackerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"timeTracksTotal","type":"TimeTracksTotalPipe","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"task":{"name":"task","setSignature":{"name":"task","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"task","type":"Task","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":23,"jsdoctags":[{"name":"task","type":"Task","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"task","type":"","returnType":"","line":34}},"isOpen":{"name":"isOpen","setSignature":{"name":"isOpen","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":59,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"isOpen","type":"","returnType":"","line":63}}},"templateData":"<div class=\\"wrapper\\">\\n  <button type=\\"button\\" (click)=\\"toggleDetails()\\" class=\\"total\\" cdkOverlayOrigin #trigger=\\"cdkOverlayOrigin\\">\\n    <span>{{ (timer$ | async) || 0 | timeTrackTimer }}</span>\\n  </button>\\n\\n  <button type=\\"button\\" class=\\"toggle\\" (click)=\\"toggle()\\">\\n    <app-icon [icon]=\\"enabled ? faCircleStop : faCirclePlay\\"\\n      [style.color]=\\"enabled ? \'var(--color-red-500)\' : \'var(--color-green-500)\'\\"></app-icon>\\n  </button>\\n</div>\\n\\n<ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\\"trigger\\"\\n  [cdkConnectedOverlayOpen]=\\"(isOpen$ | async) || false\\" (backdropClick)=\\"closeDetails()\\"\\n  [cdkConnectedOverlayBackdropClass]=\\"\'cdk-overlay-transparent-backdrop\'\\" [cdkConnectedOverlayHasBackdrop]=\\"true\\">\\n  <div #overlay class=\\"tracker-overlay\\">\\n    <ul>\\n      <li *ngFor=\\"let timeTrack of timeTracks\\">\\n        <tracker-entry [timeTrack]=\\"timeTrack\\"></tracker-entry>\\n      </li>\\n      <li *ngIf=\\"!timeTracks?.length\\" class=\\"no-tracks\\">\\n        <span i18n>Time in this task hasn\'t been tracked yet</span>\\n      </li>\\n    </ul>\\n    <app-button [icon]=\\"faPlus\\" class=\\"w-full\\" (click)=\\"insertTimeTrack()\\" i18n>Add new time track</app-button>\\n  </div>\\n</ng-template>\\n"},{"name":"TrackerEntryComponent","id":"component-TrackerEntryComponent-9a42269a2f9e0928f5eec2b2307a826e02ea521afda0ed612e10f80c359d3c4a87b17098257a3c50946bab3c666bf2251b833e05ebd33ec1b81fcb14d9fd1c03","file":"src/app/tasks/components/tracker/tracker-entry/tracker-entry.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"tracker-entry","styleUrls":["./tracker-entry.component.scss"],"styles":[],"templateUrl":["./tracker-entry.component.html"],"viewProviders":[],"inputsClass":[{"name":"timeTrack","deprecated":false,"deprecationMessage":"","line":21,"type":"","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_timeTrack","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[121]},{"name":"deleteLoader","defaultValue":"new Loader()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[123,144]},{"name":"display","defaultValue":"\'block\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'style.display\'"}]},{"name":"form","defaultValue":"new FormGroup({\\n    startDate: new FormControl<unixTimestamp>(undefined, [requiredValidator()]),\\n    endDate: new FormControl<unixTimestamp>(undefined, [requiredValidator()]),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31,"modifierKind":[123,144]},{"name":"saveLoader","defaultValue":"new Loader()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37,"modifierKind":[123,144]}],"methodsClass":[{"name":"delete","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"style.display","defaultValue":"\'block\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[]}],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, HostBinding, Input, OnInit } from \'@angular/core\';\\nimport { FormGroup, FormControl } from \'@ngneat/reactive-forms\';\\nimport { TimeTrack } from \'@tasks/interfaces/time-track.interface\';\\nimport { TrackerService } from \'@tasks/services/tracker/tracker.service\';\\nimport { requiredValidator } from \'@main/validators/required.validator\';\\nimport { UntilDestroy, untilDestroyed } from \'@ngneat/until-destroy\';\\nimport { faTrash } from \'@fortawesome/free-solid-svg-icons\';\\nimport { Loader } from \'@main/classes/loader/loader.class\';\\nimport { withLoader } from \'@main/operators/loader.operator\';\\nimport { unixTimestamp } from \'@main/interfaces/date.interface\';\\nimport { pairwise } from \'rxjs\';\\nimport { debounce } from \'lodash-es\';\\n\\n@UntilDestroy()\\n@Component({\\n  selector: \'tracker-entry\',\\n  templateUrl: \'./tracker-entry.component.html\',\\n  styleUrls: [\'./tracker-entry.component.scss\'],\\n})\\nexport class TrackerEntryComponent implements OnInit {\\n  @Input() set timeTrack(timeTrack: { new: boolean } & TimeTrack) {\\n    this._timeTrack = timeTrack;\\n    this.form.patchValue(timeTrack);\\n  }\\n  get timeTrack() {\\n    return this._timeTrack;\\n  }\\n\\n  @HostBinding(\'style.display\') display = \'block\';\\n\\n  public readonly form = new FormGroup({\\n    startDate: new FormControl<unixTimestamp>(undefined, [requiredValidator()]),\\n    endDate: new FormControl<unixTimestamp>(undefined, [requiredValidator()]),\\n  });\\n\\n  public readonly deleteLoader = new Loader();\\n  public readonly saveLoader = new Loader();\\n\\n  private _timeTrack!: { new: boolean } & TimeTrack;\\n\\n  /** @ignore */\\n  faTrash = faTrash;\\n\\n  constructor(private trackerService: TrackerService) {\\n    this.save = debounce(this.save, 1000);\\n  }\\n\\n  ngOnInit() {\\n    this.form.valueChanges.pipe(untilDestroyed(this), pairwise()).subscribe(([oldValue, value]) => {\\n      if (oldValue.startDate === value.startDate && oldValue.endDate === value.endDate) return;\\n\\n      this._timeTrack = { ...this.timeTrack, ...value };\\n      if (this.form.valid) {\\n        console.log(\'value saved\');\\n        this.save();\\n      }\\n    });\\n  }\\n\\n  delete() {\\n    if (!this.timeTrack.id) {\\n      this.display = \'none\';\\n      return;\\n    }\\n\\n    this.trackerService\\n      .deleteWithConfirmation(this.timeTrack.projectId, this.timeTrack.taskId, this.timeTrack.id)\\n      .pipe(withLoader(this.deleteLoader))\\n      .subscribe(() => {\\n        this.display = \'none\';\\n      });\\n  }\\n\\n  save() {\\n    if (this.timeTrack.new) {\\n      this.trackerService\\n        .create(this.timeTrack.projectId, this.timeTrack.taskId, this.timeTrack)\\n        .pipe(withLoader(this.saveLoader))\\n        .subscribe((track) => {\\n          this.timeTrack = { ...track, new: false };\\n        });\\n    } else {\\n      this.trackerService\\n        .update(this.timeTrack.projectId, this.timeTrack.taskId, this.timeTrack)\\n        .pipe(withLoader(this.saveLoader))\\n        .subscribe((track) => {\\n          this.timeTrack = { ...track, new: false };\\n        });\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host>div {\\n  display: flex;\\n  align-items: center;\\n  padding: 0.5rem 0;\\n  color: var(--color-text);\\n\\n  &>*:not(:last-child) {\\n    margin-right: 1rem;\\n  }\\n\\n  app-input-date-time {\\n    width: 200px;\\n  }\\n}\\n","styleUrl":"./tracker-entry.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"trackerService","type":"TrackerService","deprecated":false,"deprecationMessage":""}],"line":42,"jsdoctags":[{"name":"trackerService","type":"TrackerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"timeTrack":{"name":"timeTrack","setSignature":{"name":"timeTrack","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"timeTrack","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":21,"jsdoctags":[{"name":"timeTrack","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"timeTrack","type":"","returnType":"","line":25}}},"templateData":"<div [formGroup]=\\"form\\">\\n  <app-button variant=\\"secondary\\" [icon]=\\"faTrash\\" [pending]=\\"deleteLoader.pending\\" (click)=\\"delete()\\" class=\\"mr-4\\">\\n  </app-button>\\n  <app-input-date-time formControlName=\\"startDate\\" floatingLabel=\\"Start date\\" [pending]=\\"saveLoader.pending\\"\\n    i18n-floatingLabel>\\n  </app-input-date-time>\\n  <app-input-date-time formControlName=\\"endDate\\" floatingLabel=\\"End date\\" [pending]=\\"saveLoader.pending\\"\\n    i18n-floatingLabel>\\n  </app-input-date-time>\\n  <ng-container *ngIf=\\"timeTrack.endDate\\">\\n    <span>{{ timeTrack | timeTrackDuration }}</span>\\n  </ng-container>\\n  <ng-container *ngIf=\\"!timeTrack.endDate\\">\\n    <span i18n>In progress</span>\\n  </ng-container>\\n</div>\\n"},{"name":"UpperNavigationComponent","id":"component-UpperNavigationComponent-7b38a739a1f649fdea3437022c79f1e2d60a5c77a5fa280aede7c490bb0a4c6f079b8bbb389e610b6339f92b363c2473403753757b0235bac07f0f80d5baa57c","file":"src/app/_main/components/upper-navigation/upper-navigation.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-upper-navigation","styleUrls":["./upper-navigation.component.scss"],"styles":[],"templateUrl":["./upper-navigation.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_isButtonDisabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":48,"modifierKind":[123]},{"name":"active","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":47,"modifierKind":[123]},{"name":"faAngleDown","defaultValue":"faAngleDown","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":42},{"name":"faCog","defaultValue":"faCog","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":44},{"name":"faSignOut","defaultValue":"faSignOut","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":45},{"name":"faUser","defaultValue":"faUser","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":43},{"name":"openBelow","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLElement>","optional":false,"description":"","line":40,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'openBelow\'"}]}],"methodsClass":[{"name":"closeProfile","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createNewTask","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":""},{"name":"isButtonDisabled","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"logout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":""},{"name":"openProfile","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleProfile","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, OnInit, ViewChild } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { AuthService } from \'@auth/services/auth/auth.service\';\\nimport { WorkspaceService } from \'@dashboard/services/workspace/workspace.service\';\\nimport { faAngleDown, faCog, faSignOut, faUser } from \'@fortawesome/free-solid-svg-icons\';\\nimport { DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { TaskService } from \'@tasks/services/task/task.service\';\\nimport { fromEvent, map, skip, take } from \'rxjs\';\\n\\n@Component({\\n  selector: \'app-upper-navigation\',\\n  templateUrl: \'./upper-navigation.component.html\',\\n  styleUrls: [\'./upper-navigation.component.scss\'],\\n})\\nexport class UpperNavigationComponent implements OnInit {\\n  constructor(\\n    private dialogService: DialogService,\\n    private taskService: TaskService,\\n    private workspaceService: WorkspaceService,\\n    private authService: AuthService,\\n    private router: Router,\\n  ) {}\\n\\n  ngOnInit() {\\n    this.workspaceService.list().pipe(\\n      map((workspaces) => {\\n        if (workspaces.length === 0) {\\n          this._isButtonDisabled = false;\\n        } else if (\\n          workspaces.filter((workspace) => workspace.projectsWithPrivileges.length).length === 0\\n        ) {\\n          this._isButtonDisabled = false;\\n        } else {\\n          this._isButtonDisabled = true;\\n        }\\n      }),\\n    );\\n  }\\n\\n  @ViewChild(\'openBelow\') openBelow!: ElementRef<HTMLElement>;\\n\\n  faAngleDown = faAngleDown;\\n  faUser = faUser;\\n  faCog = faCog;\\n  faSignOut = faSignOut;\\n\\n  public active: boolean = false;\\n  public _isButtonDisabled = true;\\n\\n  createNewTask() {\\n    this.taskService.openCreateNewTaskDialog().subscribe(() => {\\n      location.reload();\\n    });\\n  }\\n\\n  logout() {\\n    this.authService.logout().subscribe(() => {\\n      this.router.navigate([\'/\', \'auth\', \'login\']);\\n    });\\n  }\\n\\n  public isButtonDisabled() {\\n    return this._isButtonDisabled;\\n  }\\n  public openProfile() {\\n    this.active = true;\\n    fromEvent(document, \'click\')\\n      .pipe(skip(1), take(1))\\n      .subscribe(() => {\\n        this.closeProfile();\\n      });\\n  }\\n\\n  public closeProfile() {\\n    this.active = false;\\n  }\\n  public toggleProfile() {\\n    if (!this.active) {\\n      this.openProfile();\\n    } else {\\n      this.closeProfile();\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: flex;\\n  width: 100%;\\n  height: 62px;\\n\\n  // flex-shrink: 0;\\n  align-items: center;\\n  background-color: var(--color-secondary-800);\\n  color: var(--color-text);\\n}\\n\\napp-button {\\n  align-items: center;\\n  justify-content: center;\\n  padding: 10px 20px;\\n  margin: 0;\\n}\\n\\n.flex-end-position {\\n  position: absolute;\\n  right: 0;\\n  display: flex;\\n  height: 62px;\\n\\n  .profile {\\n    width: 200px;\\n\\n    .open-below {\\n      position: absolute;\\n      right: 0;\\n      display: flex;\\n      height: 100%;\\n      align-items: center;\\n      padding: 10px;\\n      cursor: pointer;\\n\\n      app-icon {\\n        display: flex;\\n        align-items: center;\\n\\n        &.active {\\n          transform: scaleY(-1);\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n.options {\\n  position: absolute;\\n  z-index: 2;\\n  top: 62px;\\n  right: 0;\\n  display: none;\\n  width: 200px;\\n  cursor: pointer;\\n\\n  &.active {\\n    display: block;\\n    background-color: var(--color-secondary-600);\\n    color: var(--color-text);\\n\\n    a {\\n      position: relative;\\n      display: flex;\\n      align-items: center;\\n      padding: 12px 10px;\\n      border-radius: var(--border-radius);\\n      color: var(--color-text);\\n      transition: background-color 0.2s ease-in-out;\\n\\n      app-icon {\\n        margin-right: 1rem;\\n        margin-left: 2rem;\\n      }\\n\\n      &:hover {\\n        background-color: var(--color-secondary-500);\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./upper-navigation.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskService","type":"TaskService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<app-button *ngIf=\\"isButtonDisabled()\\" variant=\\"primary\\" (click)=\\"createNewTask()\\" type=\\"button\\" i18n>New task\\n</app-button>\\n<div class=\\"search\\"></div>\\n<section class=\\"flex-end-position\\">\\n  <fa-icon></fa-icon>\\n  <div class=\\"profile\\">\\n    <div class=\\"avatar\\"></div>\\n    <div class=\\"name\\"></div>\\n    <div #openBelow class=\\"open-below\\" (click)=\\"toggleProfile()\\" [class.active]=\\"active\\">\\n      <app-icon [icon]=\\"faAngleDown\\" size=\\"16px\\"></app-icon>\\n    </div>\\n  </div>\\n</section>\\n<div class=\\"options\\" [class.active]=\\"active\\">\\n  <ul>\\n    <li>\\n      <a routerLink=\\"/settings/account\\" routerLinkActive=\\"active\\">\\n        <app-icon [icon]=\\"faUser\\" size=\\"16px\\"></app-icon>\\n        <h2 i18n>Profile</h2>\\n      </a>\\n    </li>\\n    <li>\\n      <a routerLink=\\"/settings/localization\\" routerLinkActive=\\"active\\">\\n        <app-icon [icon]=\\"faCog\\" size=\\"16px\\"></app-icon>\\n        <h2 i18n>Settings</h2>\\n      </a>\\n    </li>\\n    <li>\\n      <a (click)=\\"logout()\\">\\n        <app-icon [icon]=\\"faSignOut\\" size=\\"16px\\"></app-icon>\\n        <h2 i18n>Log out</h2>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\\n"},{"name":"ViewOptionsComponent","id":"component-ViewOptionsComponent-0ee3f6c0b635f6e1a7291b3b6fdc53d82377340c4ba2527769e71faaae698a5f4c562902e87c7dcfd6f29140069e780951946165d4a94e44069917455b700122","file":"src/app/dashboard/components/view-options/view-options.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-view-options","styleUrls":["./view-options.component.scss"],"styles":[],"templateUrl":["./view-options.component.html"],"viewProviders":[],"inputsClass":[{"name":"project","deprecated":false,"deprecationMessage":"","line":19,"type":"Project","decorators":[]},{"name":"title","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"filter","defaultValue":"faFilter","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"penToSquare","defaultValue":"faPenToSquare","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":12},{"name":"projectId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":15,"modifierKind":[123]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { faFilter, faPenToSquare } from \'@fortawesome/free-solid-svg-icons\';\\n\\n@Component({\\n  selector: \'app-view-options\',\\n  templateUrl: \'./view-options.component.html\',\\n  styleUrls: [\'./view-options.component.scss\'],\\n})\\nexport class ViewOptionsComponent {\\n  penToSquare = faPenToSquare;\\n  filter = faFilter;\\n\\n  public workspaceId: number;\\n  public projectId: number;\\n\\n  @Input()\\n  project!: Project;\\n\\n  @Input()\\n  title!: string;\\n\\n  constructor(private activatedRoute: ActivatedRoute) {\\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\\n\\n    this.workspaceId = workspaceId;\\n    this.projectId = projectId;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  width: 100%;\\n  align-items: center;\\n  color: var(--color-text);\\n}\\n\\nsection {\\n  position: relative;\\n  display: flex;\\n  margin-bottom: 1rem;\\n\\n  .tabs {\\n    display: flex;\\n\\n    .project-name {\\n      display: flex;\\n      align-items: center;\\n      padding: 10px;\\n      margin-right: 10px;\\n    }\\n\\n    a {\\n      position: relative;\\n      display: block;\\n      padding: 10px;\\n      margin-right: 10px;\\n      color: var(--color-neutral-300);\\n      cursor: pointer;\\n\\n      &:hover {\\n        color: var(--color-text);\\n      }\\n\\n      &.active {\\n        color: var(--color-text);\\n\\n        &::before {\\n          position: absolute;\\n          bottom: 10px;\\n          left: 5px;\\n          width: calc(100% - 10px);\\n          height: 2px;\\n          background-color: var(--color-primary-700);\\n          border-radius: var(--border-radius);\\n          content: \'\';\\n        }\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./view-options.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""}],"line":22,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<section>\\n  <div class=\\"tabs\\">\\n    <div class=\\"project-name\\">\\n      <h2 *ngIf=\\"!project\\" class=\\"text-xl font-bold\\">{{title}}</h2>\\n      <h2 *ngIf=\\"project\\" class=\\"text-xl font-bold\\">{{title}} {{project.name}}</h2>\\n    </div>\\n    <ng-container *ngIf=\\"project\\">\\n      <a [routerLink]=\\"[\'/\', workspaceId, project.id, \'edit\', \'general\']\\" routerLinkActive=\\"active\\">\\n        <h2 i18n>General</h2>\\n      </a>\\n      <a [routerLink]=\\"[\'/\', workspaceId, project.id, \'edit\', \'members\' ]\\" routerLinkActive=\\"active\\">\\n        <h2 i18n>Members</h2>\\n      </a>\\n      <a [routerLink]=\\"[\'/\', workspaceId, project.id, \'edit\', \'statuses\' ]\\" routerLinkActive=\\"active\\">\\n        <h2 i18n>Statuses</h2>\\n      </a>\\n    </ng-container>\\n    <ng-container *ngIf=\\"!project\\">\\n      <a [routerLink]=\\"[\'/\', workspaceId, \'create\', \'general\' ]\\" routerLinkActive=\\"active\\">\\n        <h2 i18n>General</h2>\\n      </a>\\n      <a [routerLink]=\\"[\'/\', workspaceId, \'create\', \'members\' ]\\" routerLinkActive=\\"active\\">\\n        <h2 i18n>Members</h2>\\n      </a>\\n      <a [routerLink]=\\"[\'/\', workspaceId, \'create\', \'statuses\' ]\\" routerLinkActive=\\"active\\">\\n        <h2 i18n>Statuses</h2>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n"},{"name":"ViewOptionsComponent","id":"component-ViewOptionsComponent-3153b50a906a488cd35e0efcda0ff3e393d6319f5bb3d9a8da3cac468f96bbab8e21c6f5a486a0464790bafed80ccfc48e9e821184ad49161399d73e844a2024-1","file":"src/app/tasks/components/view-options/view-options.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-view-options","styleUrls":["./view-options.component.scss"],"styles":[],"templateUrl":["./view-options.component.html"],"viewProviders":[],"inputsClass":[{"name":"filters","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":26,"type":"Filter[]","decorators":[]},{"name":"filtersControl","defaultValue":"new FormControl()","deprecated":false,"deprecationMessage":"","line":29,"type":"any","decorators":[]},{"name":"project","deprecated":false,"deprecationMessage":"","line":23,"type":"Project","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"faGithub","defaultValue":"faGithub","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"filter","defaultValue":"faFilter","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"isFiltersOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"penToSquare","defaultValue":"faPenToSquare","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"projectId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":19,"modifierKind":[123]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { FormControl } from \'@ngneat/reactive-forms\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { Project } from \'@dashboard/interfaces/project.interface\';\\nimport { faGithub } from \'@fortawesome/free-brands-svg-icons\';\\nimport { faFilter, faPenToSquare } from \'@fortawesome/free-solid-svg-icons\';\\nimport { Filter } from \'@main/interfaces/filters.interface\';\\n\\n@Component({\\n  selector: \'app-view-options\',\\n  templateUrl: \'./view-options.component.html\',\\n  styleUrls: [\'./view-options.component.scss\'],\\n})\\nexport class ViewOptionsComponent {\\n  penToSquare = faPenToSquare;\\n  faGithub = faGithub;\\n  filter = faFilter;\\n\\n  public workspaceId: number;\\n  public projectId: number;\\n\\n  @Input()\\n  project!: Project;\\n\\n  @Input()\\n  filters: Filter[] = [];\\n\\n  @Input()\\n  public filtersControl = new FormControl();\\n\\n  public isFiltersOpen = false;\\n\\n  constructor(private activatedRoute: ActivatedRoute) {\\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\\n\\n    this.workspaceId = workspaceId;\\n    this.projectId = projectId;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  width: 100%;\\n  align-items: center;\\n  color: var(--color-text);\\n}\\n\\nsection {\\n  position: relative;\\n  display: flex;\\n  justify-content: space-between;\\n  margin-bottom: 1rem;\\n\\n  .tabs {\\n    display: flex;\\n\\n    .project-name {\\n      display: flex;\\n      align-items: center;\\n      padding: 10px;\\n      margin-right: 10px;\\n\\n      a {\\n        padding: 0;\\n        margin-left: 1rem;\\n      }\\n    }\\n\\n    a {\\n      position: relative;\\n      display: block;\\n      padding: 10px 10px 15px 10px;\\n      margin-right: 10px;\\n      color: var(--color-neutral-300);\\n      cursor: pointer;\\n\\n      &:hover {\\n        color: var(--color-text);\\n      }\\n\\n      &.active {\\n        color: var(--color-text);\\n\\n        &::before {\\n          position: absolute;\\n          bottom: 10px;\\n          left: 5px;\\n          width: calc(100% - 10px);\\n          height: 2px;\\n          background-color: var(--color-primary-700);\\n          border-radius: var(--border-radius);\\n          content: \'\';\\n        }\\n      }\\n    }\\n  }\\n\\n  .options {\\n    display: flex;\\n    height: 100%;\\n    align-items: center;\\n\\n    .options-element {\\n      position: relative;\\n      display: flex;\\n      align-items: center;\\n      padding: 10px;\\n      color: var(--color-neutral-300);\\n      cursor: pointer;\\n\\n      app-icon {\\n        display: flex;\\n        align-items: center;\\n        padding-right: 10px;\\n      }\\n\\n      &:hover {\\n        color: var(--color-text);\\n      }\\n\\n      .overlay {\\n        position: absolute;\\n        z-index: 150;\\n        right: 0;\\n        bottom: 0;\\n        width: 200px;\\n        padding: 1rem;\\n        background-color: var(--color-secondary-600);\\n        border-radius: var(--border-radius);\\n        transform: translateY(100%);\\n      }\\n    }\\n  }\\n}","styleUrl":"./view-options.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""}],"line":31,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"isDuplicate":true,"duplicateId":1,"duplicateName":"ViewOptionsComponent-1","templateData":"<section *ngIf=\\"project\\">\\n  <div class=\\"tabs\\">\\n    <div class=\\"project-name\\">\\n      <h2 class=\\"text-xl font-bold\\">{{project.name}}</h2>\\n      <a *ngIf=\\"project.gitHubIntegration\\" href=\\"https://github.com/{{ project.gitHubIntegration }}\\" target=\\"blank\\">\\n        <app-icon [icon]=\\"faGithub\\"></app-icon>\\n      </a>\\n    </div>\\n    <a [routerLink]=\\"[\'/\', workspaceId, project.id, \'board\']\\" routerLinkActive=\\"active\\">\\n      <h2 i18n>Board</h2>\\n    </a>\\n    <a [routerLink]=\\"[\'/\', workspaceId, project.id, \'list\']\\" routerLinkActive=\\"active\\">\\n      <h2 i18n>List</h2>\\n    </a>\\n    <a [routerLink]=\\"[\'/\', workspaceId, project.id, \'schedule\']\\" routerLinkActive=\\"active\\">\\n      <h2 i18n>Schedule</h2>\\n    </a>\\n    <a [routerLink]=\\"[\'/\', workspaceId, project.id, \'calendar\']\\" routerLinkActive=\\"active\\">\\n      <h2 i18n>Calendar</h2>\\n    </a>\\n    <a routerLinkActive=\\"active\\">\\n      <h2 i18n>Backlog</h2>\\n    </a>\\n  </div>\\n  <div class=\\"options\\">\\n    <div class=\\"options-element\\" [routerLink]=\\"[\'/\', workspaceId, projectId, \'edit\']\\">\\n      <app-icon [icon]=\\"penToSquare\\" size=\\"16px\\"></app-icon>\\n      <h2 i18n>Edit</h2>\\n    </div>\\n    <div class=\\"options-element\\">\\n      <app-icon (click)=\\"isFiltersOpen = !isFiltersOpen\\" [icon]=\\"filter\\" size=\\"16px\\"></app-icon>\\n      <h2 (click)=\\"isFiltersOpen = !isFiltersOpen\\" i18n>Filters</h2>\\n      <div [class.hidden]=\\"!isFiltersOpen\\" class=\\"overlay\\">\\n        <app-filters [formControl]=\\"filtersControl\\" [filters]=\\"filters\\"></app-filters>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n"},{"name":"WorkspacesListPage","id":"component-WorkspacesListPage-f463fac4d4409e9865efe9cf3605c9c64ab2cfd8197ead9c648784dbe837ec8b3345c0fab669458c6d8a3090f1b18d76f782032894b6be7ebc4b614c6b4cab26","file":"src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-workspaces-list-page","styleUrls":["./workspaces-list.page.scss"],"styles":[],"templateUrl":["./workspaces-list.page.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"faPlus","defaultValue":"faPlus","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Plus icon to display on the add button</p>\\n","line":37,"rawdescription":"\\n\\nPlus icon to display on the add button\\n","modifierKind":[123]},{"name":"workspaces$","deprecated":false,"deprecationMessage":"","type":"Observable<Workspace[]>","optional":true,"description":"<p>Workspaces list observable to use in the template.</p>\\n","line":42,"rawdescription":"\\n\\nWorkspaces list observable to use in the template.\\n","modifierKind":[123]}],"methodsClass":[{"name":"deleteWorkspace","args":[{"name":"workspace","type":"Workspace","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\\n","description":"<p>Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.</p>\\n","jsdoctags":[{"name":{"pos":1753,"end":1762,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"workspace"},"type":"Workspace","deprecated":false,"deprecationMessage":"","tagName":{"pos":1747,"end":1752,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Workspace to delete</p>\\n"}]},{"name":"editWorkspace","args":[{"name":"workspace","type":"Workspace","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nNavigates to the workspace edit page.\\n","description":"<p>Navigates to the workspace edit page.</p>\\n","jsdoctags":[{"name":{"pos":2125,"end":2134,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"workspace"},"type":"Workspace","deprecated":false,"deprecationMessage":"","tagName":{"pos":2119,"end":2124,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Workspace to edit</p>\\n"}]},{"name":"loadWorkspaces","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLoads the workspaces list from the workspace service.\\n","description":"<p>Loads the workspaces list from the workspace service.</p>\\n"},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLifecycle hook to load workspaces at the start of the page.\\n","description":"<p>Lifecycle hook to load workspaces at the start of the page.</p>\\n"},{"name":"openWorkspace","args":[{"name":"workspace","type":"Workspace","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"workspace","type":"Workspace","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"<p>Workspaces list page component.</p>\\n","rawdescription":"\\n\\nWorkspaces list page component.\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { faPlus } from \'@fortawesome/free-solid-svg-icons\';\\nimport { Observable } from \'rxjs\';\\nimport { Page } from \'@main/decorators/page/page.decorator\';\\nimport { DialogService } from \'@main/services/dialog/dialog.service\';\\nimport { Workspace } from \'../../interfaces/workspace.interface\';\\nimport { ProjectService } from \'../../services/project/project.service\';\\nimport { WorkspaceService } from \'../../services/workspace/workspace.service\';\\n\\n/**\\n * Workspaces list page component.\\n */\\n@Page()\\n@Component({\\n  selector: \'app-workspaces-list-page\',\\n  templateUrl: \'./workspaces-list.page.html\',\\n  styleUrls: [\'./workspaces-list.page.scss\'],\\n})\\nexport class WorkspacesListPage implements OnInit {\\n  /**\\n   * Default constructor with dependency injection.\\n   * @param workspaceService Workspace service\\n   * @param dialogService Dialog service\\n   * @param router Router service\\n   */\\n  constructor(\\n    private workspaceService: WorkspaceService,\\n    private projectService: ProjectService,\\n    private dialogService: DialogService,\\n    private router: Router,\\n  ) {}\\n\\n  /**\\n   * Plus icon to display on the add button\\n   */\\n  public faPlus = faPlus;\\n\\n  /**\\n   * Workspaces list observable to use in the template.\\n   */\\n  public workspaces$?: Observable<Workspace[]>;\\n\\n  /**\\n   * Lifecycle hook to load workspaces at the start of the page.\\n   */\\n  ngOnInit() {\\n    this.loadWorkspaces();\\n  }\\n\\n  /**\\n   * Loads the workspaces list from the workspace service.\\n   */\\n  loadWorkspaces() {\\n    this.workspaces$ = this.workspaceService.list();\\n  }\\n\\n  /**\\n   * Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\\n   * @param workspace Workspace to delete\\n   */\\n  deleteWorkspace(workspace: Workspace) {\\n    this.dialogService.confirmWorkspaceDelete(workspace).subscribe(() => {\\n      this.workspaceService.delete(workspace.id).subscribe(() => {\\n        // this.loadWorkspaces();\\n        window.location.reload();\\n      });\\n    });\\n  }\\n\\n  /**\\n   * Navigates to the workspace edit page.\\n   * @param workspace Workspace to edit\\n   */\\n  editWorkspace(workspace: Workspace) {\\n    this.router.navigate([\'/\', workspace.id, \'edit\']);\\n  }\\n\\n  openWorkspace(workspace: Workspace) {\\n    this.router.navigate([\'/\', workspace.id]);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  padding: 2rem;\\n}\\n","styleUrl":"./workspaces-list.page.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"<p>Default constructor with dependency injection.</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":""},{"name":"dialogService","type":"DialogService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":20,"rawdescription":"\\n\\nDefault constructor with dependency injection.\\n","jsdoctags":[{"name":{"pos":859,"end":875,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"workspaceService"},"type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"pos":853,"end":858,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Workspace service</p>\\n"},{"name":"projectService","type":"ProjectService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":{"pos":906,"end":919,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"dialogService"},"type":"DialogService","deprecated":false,"deprecationMessage":"","tagName":{"pos":900,"end":905,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Dialog service</p>\\n"},{"name":{"pos":947,"end":953,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"router"},"type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"pos":941,"end":946,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Router service</p>\\n"}]},"implements":["OnInit"],"templateData":"\x3c!-- Page header --\x3e\\n<section class=\\"flex justify-between items-center\\">\\n  <h2 class=\\"text-xl font-bold\\" i18n>Workspaces</h2>\\n  <app-button variant=\\"primary\\" routerLink=\\"/create\\" [icon]=\\"faPlus\\" i18n>New workspace</app-button>\\n</section>\\n\\n\x3c!-- Table --\x3e\\n<table mat-table [dataSource]=\\"(workspaces$ | async) || []\\">\\n\\n  \x3c!-- Name column --\x3e\\n  <ng-container matColumnDef=\\"name\\">\\n    <th mat-header-cell *matHeaderCellDef i18n>Name</th>\\n    <td mat-cell *matCellDef=\\"let row\\" (click)=\\"openWorkspace(row)\\" class=\\"clickable-cell\\"> {{ row.name }} </td>\\n  </ng-container>\\n\\n  \x3c!-- Statistics column --\x3e\\n  <ng-container matColumnDef=\\"statistics\\">\\n    <th mat-header-cell *matHeaderCellDef i18n>Statistics</th>\\n    <td mat-cell *matCellDef=\\"let row\\"> - </td>\\n  </ng-container>\\n\\n  \x3c!-- Last update column --\x3e\\n  <ng-container matColumnDef=\\"lastUpdate\\">\\n    <th mat-header-cell *matHeaderCellDef i18n>Last update</th>\\n    <td mat-cell *matCellDef=\\"let row\\"> - </td>\\n  </ng-container>\\n\\n  \x3c!-- Actions column --\x3e\\n  <ng-container matColumnDef=\\"actions\\">\\n    <th mat-header-cell *matHeaderCellDef i18n></th>\\n    <td mat-cell *matCellDef=\\"let row\\" class=\\"action-cell\\">\\n      <button mat-icon-button [matMenuTriggerFor]=\\"menu\\" class=\\"flex items-center\\">\\n        <app-icon icon=\\"matMoreVert\\"></app-icon>\\n      </button>\\n      <mat-menu #menu=\\"matMenu\\">\\n        <button mat-menu-item (click)=\\"editWorkspace(row)\\">\\n          <span i18n>Edit workspace</span>\\n        </button>\\n        <button mat-menu-item class=\\"important\\" (click)=\\"deleteWorkspace(row)\\">\\n          <span i18n>Delete workspace</span>\\n        </button>\\n      </mat-menu>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\"[\'name\', \'statistics\', \'lastUpdate\', \'actions\']\\"></tr>\\n  <tr mat-row *matRowDef=\\"let row; columns: [\'name\', \'statistics\', \'lastUpdate\', \'actions\'];\\"></tr>\\n</table>\\n"}],"modules":[{"name":"AppModule","id":"module-AppModule-5b7afa15ab904833811d4d1614b9d8615c0922f76ba9eaaa1af026e20a3959f0cc29f64c303b7f4497338aa51069579b717b48baabb320c022494afc15cce099","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\n\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { AppComponent } from \'./app.component\';\\nimport { AppRoutingModule } from \'./app.routing\';\\nimport { LandingPageComponent } from \'./landing-page/landing-page/landing-page.component\';\\nimport { MainModule } from \'./_main/_main.module\';\\n\\n@NgModule({\\n  declarations: [AppComponent, LandingPageComponent],\\n  imports: [AppRoutingModule, BrowserAnimationsModule, MainModule],\\n  providers: [],\\n  bootstrap: [AppComponent],\\n})\\nexport class AppModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AppComponent"},{"name":"LandingPageComponent"}]},{"type":"imports","elements":[{"name":"AppRoutingModule"},{"name":"MainModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[{"name":"AppComponent"}]},{"type":"classes","elements":[]}]},{"name":"AppRoutingModule","id":"module-AppRoutingModule-5cd0384494b6072cfc28f9eb828971c55daed18ddab7e570295bf30eead03825527f6c47cdc445eb4a1b5d45f1e43731dee42b58bc8f3f263829e1b6dfdd0ba6","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app.routing.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { LoggedInUsersGuard } from \'./auth/guard/logged-in-users.guard\';\\nimport { LandingPageComponent } from \'./landing-page/landing-page/landing-page.component\';\\nimport { MainViewComponent } from \'./_main/components/main-view/main-view.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'auth\',\\n    loadChildren: () => \\"import(\'./auth/auth.module\').then((m) => m.AuthModule)\\",\\n  },\\n  {\\n    path: \'landing-page\',\\n    component: LandingPageComponent,\\n  },\\n  {\\n    path: \'\',\\n    component: MainViewComponent,\\n    canActivate: [LoggedInUsersGuard],\\n    children: [\\n      {\\n        path: \'email\',\\n        loadChildren: () => \\"import(\'./emails/emails.module\').then((m) => m.EmailsModule)\\",\\n      },\\n      {\\n        path: \'calendar\',\\n        loadChildren: () => \\"import(\'./calendar/calendar.module\').then((m) => m.CalendarModule)\\",\\n      },\\n      {\\n        path: \'messages\',\\n        loadChildren: () => \\"import(\'./messages/messages.module\').then((m) => m.MessagesModule)\\",\\n      },\\n      {\\n        path: \'\',\\n        loadChildren: () => \\"import(\'./dashboard/dashboard.module\').then((m) => m.DashboardModule)\\",\\n      },\\n    ],\\n  },\\n];\\n\\n@NgModule({\\n  imports: [\\n    RouterModule.forRoot(routes, {\\n      onSameUrlNavigation: \'reload\',\\n      paramsInheritanceStrategy: \'always\',\\n    }),\\n  ],\\n  exports: [RouterModule],\\n})\\nexport class AppRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"AuthModule","id":"module-AuthModule-484eb7b64ccab9a5180a658e49d4cd026f8494cd608bba5ba1f611366ce2ad68695237348b06ccf41e346b3a22507be39d567dadb6dd80db0057621a2e391c2b","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/auth/auth.module.ts","methods":[],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { NgModule } from \'@angular/core\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\nimport { MainModule } from \'../_main/_main.module\';\\nimport { AuthRoutingModule } from \'./auth.routing\';\\nimport { ChangePasswordPage } from \'./pages/change-password/change-password.page\';\\nimport { DeleteAccountPage } from \'./pages/delete-account/delete-account.page\';\\nimport { ForgotPasswordPage } from \'./pages/forgot-password/forgot-password.page\';\\nimport { LoginPage } from \'./pages/login/login.page\';\\nimport { RegisterPage } from \'./pages/register/register.page\';\\nimport { RestoreAccountPage } from \'./pages/restore-account/restore-account.page\';\\n\\n@NgModule({\\n  imports: [CommonModule, AuthRoutingModule, MainModule, ReactiveFormsModule],\\n  declarations: [\\n    LoginPage,\\n    RegisterPage,\\n    ForgotPasswordPage,\\n    ChangePasswordPage,\\n    RestoreAccountPage,\\n    DeleteAccountPage,\\n  ],\\n})\\nexport class AuthModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"ChangePasswordPage"},{"name":"DeleteAccountPage"},{"name":"ForgotPasswordPage"},{"name":"LoginPage"},{"name":"RegisterPage"},{"name":"RestoreAccountPage"}]},{"type":"imports","elements":[{"name":"AuthRoutingModule"},{"name":"MainModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"AuthRoutingModule","id":"module-AuthRoutingModule-48dd060447eb13fd3551c8641f69703a4b5cca2efcf69b842da7b232a462efec589199409bda5b869352eee1635ee82359183a701f83e4018a7a2aca696a7e2d","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/auth/auth.routing.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { ChangePasswordPage } from \'./pages/change-password/change-password.page\';\\nimport { DeleteAccountPage } from \'./pages/delete-account/delete-account.page\';\\nimport { ForgotPasswordPage } from \'./pages/forgot-password/forgot-password.page\';\\nimport { LoginPage } from \'./pages/login/login.page\';\\nimport { RegisterPage } from \'./pages/register/register.page\';\\nimport { RestoreAccountPage } from \'./pages/restore-account/restore-account.page\';\\n\\n/**\\n * Auth routes list\\n */\\nconst routes: Routes = [\\n  {\\n    path: \'login\',\\n    component: LoginPage,\\n  },\\n  {\\n    path: \'logout\',\\n    component: LoginPage,\\n  },\\n  {\\n    path: \'register\',\\n    component: RegisterPage,\\n  },\\n  {\\n    path: \'password-reset\',\\n    component: ForgotPasswordPage,\\n  },\\n  {\\n    path: \'set-new-password\',\\n    component: ChangePasswordPage,\\n  },\\n  {\\n    path: \'restore-account\',\\n    component: RestoreAccountPage,\\n  },\\n  {\\n    path: \'delete-account\',\\n    component: DeleteAccountPage,\\n  },\\n];\\n\\n/**\\n * Auth routes module\\n */\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule],\\n})\\nexport class AuthRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"CalendarModule","id":"module-CalendarModule-bc0f79563c9947c8dff540d5f7ce3d69712906e4fd46c896b5cdd85d7cefe69e00d135896e3ce73412a734b06a8847b1d50df5891cc664e8485422fc79433e3f","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/calendar/calendar.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { CalendarGridComponent } from \'./components/calendar-grid/calendar-grid.component\';\\nimport { CalendarPage } from \'./pages/calendar/calendar.page\';\\nimport { CalendarNavbarComponent } from \'./components/calendar-navbar/calendar-navbar.component\';\\nimport { MainModule } from \'@main/_main.module\';\\nimport { CalendarComponent } from \'./components/calendar/calendar.component\';\\nimport { CalendarRoutingModule } from \'./calendar.routing\';\\nimport { CalendarSidebarComponent } from \'./components/calendar-sidebar/calendar-sidebar.component\';\\nimport { TasksModule } from \'../tasks/tasks.module\';\\n\\n@NgModule({\\n  imports: [CommonModule, MainModule, CalendarRoutingModule, TasksModule],\\n  declarations: [\\n    CalendarPage,\\n    CalendarGridComponent,\\n    CalendarNavbarComponent,\\n    CalendarSidebarComponent,\\n    CalendarComponent,\\n  ],\\n})\\nexport class CalendarModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"CalendarComponent"},{"name":"CalendarGridComponent"},{"name":"CalendarNavbarComponent"},{"name":"CalendarPage"},{"name":"CalendarSidebarComponent"}]},{"type":"imports","elements":[{"name":"CalendarRoutingModule"},{"name":"MainModule"},{"name":"TasksModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"CalendarRoutingModule","id":"module-CalendarRoutingModule-0844e7367b9a6a6466c9fddaea4259668bbc8ff5af54bb45e7be66316abf5d69d4fc7aa835775bd82dd189277ccaf05af7741d004b60169175f17bb4cc862944","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/calendar/calendar.routing.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { CalendarPage } from \'./pages/calendar/calendar.page\';\\n/**\\n * Calendar routes list\\n */\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: CalendarPage,\\n  },\\n];\\n\\n/**\\n * Calendar routes module\\n */\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule],\\n})\\nexport class CalendarRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DashboardModule","id":"module-DashboardModule-1d125e7f5542511a7d736ef8f274fbc0947194ba9bf5e6d1af7932257e30cacc4efb3760814511f15a58a3fba97569b09b21d6318253cb2be10654610cfae889","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/dashboard/dashboard.module.ts","methods":[],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { NgModule } from \'@angular/core\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\nimport { MainModule } from \'../_main/_main.module\';\\nimport { IntegrationModulesGridComponent } from \'./components/integration-modules-grid/integration-modules-grid.component\';\\nimport { MemberListComponent } from \'./components/member-list/member-list.component\';\\nimport { ProjectFormGeneralComponent } from \'./components/project-form-general/project-form-general.component\';\\nimport { ProjectFormIntegrationsComponent } from \'./components/project-form-integrations/project-form-integrations.component\';\\nimport { ProjectFormMembersComponent } from \'./components/project-form-members/project-form-members.component\';\\nimport { ProjectFormStatusesComponent } from \'./components/project-form-statuses/project-form-statuses.component\';\\nimport { ViewOptionsComponent } from \'./components/view-options/view-options.component\';\\nimport { DashboardRoutingModule } from \'./dashboard.routing\';\\nimport { AddMemberDialog } from \'./dialogs/add-member/add-member.dialog\';\\nimport { StatusDialog } from \'./dialogs/status/status.dialog\';\\nimport { IntegrationModulesModule } from \'./modules/integration-modules/integration-modules.module\';\\nimport { CreateProjectPage } from \'./pages/create-project/create-project.page\';\\nimport { CreateWorkspacePage } from \'./pages/create-workspace/create-workspace.page\';\\nimport { EditProjectPage } from \'./pages/edit-project/edit-project.page\';\\nimport { EditWorkspacePage } from \'./pages/edit-workspace/edit-workspace.page\';\\nimport { ProjectsListPage } from \'./pages/projects-list/projects-list.page\';\\nimport { WorkspacesListPage } from \'./pages/workspaces-list/workspaces-list.page\';\\nimport { GitIntegrationService } from \'./services/git-integration/git-integration.service\';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    MainModule,\\n    ReactiveFormsModule,\\n    DashboardRoutingModule,\\n    IntegrationModulesModule,\\n  ],\\n  declarations: [\\n    CreateWorkspacePage,\\n    WorkspacesListPage,\\n    EditWorkspacePage,\\n    ProjectsListPage,\\n\\n    CreateProjectPage,\\n    ProjectFormGeneralComponent,\\n    ProjectFormIntegrationsComponent,\\n    ProjectFormMembersComponent,\\n    ProjectFormStatusesComponent,\\n\\n    EditProjectPage,\\n    ViewOptionsComponent,\\n    MemberListComponent,\\n    AddMemberDialog,\\n    IntegrationModulesGridComponent,\\n    StatusDialog,\\n  ],\\n  providers: [GitIntegrationService],\\n})\\nexport class DashboardModule {}\\n","children":[{"type":"providers","elements":[{"name":"GitIntegrationService"}]},{"type":"declarations","elements":[{"name":"AddMemberDialog"},{"name":"CreateProjectPage"},{"name":"CreateWorkspacePage"},{"name":"EditProjectPage"},{"name":"EditWorkspacePage"},{"name":"IntegrationModulesGridComponent"},{"name":"MemberListComponent"},{"name":"ProjectFormGeneralComponent"},{"name":"ProjectFormIntegrationsComponent"},{"name":"ProjectFormMembersComponent"},{"name":"ProjectFormStatusesComponent"},{"name":"ProjectsListPage"},{"name":"StatusDialog"},{"name":"ViewOptionsComponent"},{"name":"WorkspacesListPage"}]},{"type":"imports","elements":[{"name":"DashboardRoutingModule"},{"name":"IntegrationModulesModule"},{"name":"MainModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DashboardRoutingModule","id":"module-DashboardRoutingModule-9aa746e65b295afa2ba2a1955c529e5cbd6376e2966a8bdbde219dd8b2e9f6e9892b07ccf7ddada258b70f9693987c3acb813001a71801900342696a60db02e8","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/dashboard/dashboard.routing.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { MockPage } from \'@main/pages/mock/mock.page\';\\nimport { CreateWorkspacePage } from \'./pages/create-workspace/create-workspace.page\';\\nimport { EditProjectPage } from \'./pages/edit-project/edit-project.page\';\\nimport { EditWorkspacePage } from \'./pages/edit-workspace/edit-workspace.page\';\\nimport { GithubIntegrationPage } from \'./pages/github-integration/github-integration.page\';\\nimport { ProjectsListPage } from \'./pages/projects-list/projects-list.page\';\\nimport { WorkspacesListPage } from \'./pages/workspaces-list/workspaces-list.page\';\\nimport { CreateProjectPage } from \'./pages/create-project/create-project.page\';\\n\\n/**\\n * Dashboard routes list\\n */\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    pathMatch: \'full\',\\n    component: WorkspacesListPage,\\n  },\\n  {\\n    path: \'settings\',\\n    loadChildren: () => \\"import(\'../settings/settings.module\').then((m) => m.SettingsModule)\\",\\n  },\\n  {\\n    path: \'github\',\\n    component: GithubIntegrationPage,\\n    data: {\\n      hideNavigation: true,\\n    },\\n  },\\n  {\\n    path: \'dashboard\',\\n    component: MockPage,\\n    data: {\\n      image: \'assets/mocks/dashboard.svg\',\\n    },\\n  },\\n  {\\n    path: \'create\',\\n    component: CreateWorkspacePage,\\n  },\\n  {\\n    path: \':workspaceId\',\\n    children: [\\n      {\\n        path: \'edit\',\\n        component: EditWorkspacePage,\\n      },\\n      {\\n        path: \'\',\\n        pathMatch: \'full\',\\n        component: ProjectsListPage,\\n      },\\n      {\\n        path: \'create\',\\n        component: CreateProjectPage,\\n      },\\n      {\\n        path: \':projectId/edit\',\\n        component: EditProjectPage,\\n      },\\n      {\\n        path: \':projectId\',\\n        loadChildren: () => \\"import(\'../tasks/tasks.module\').then((m) => m.TasksModule)\\",\\n      },\\n    ],\\n  },\\n];\\n\\n/**\\n * Dashboard routes module\\n */\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule],\\n})\\nexport class DashboardRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"EmailsModule","id":"module-EmailsModule-061c96c0c5b5b4fa8b3b181441814767a43131dece2991771f993cc8ad7f733fed78df98aa984a36028eb51e31f1cfe22196878b93bdb77876d91fdcf2716178","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/emails/emails.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { EmailsRoutingModule } from \'./emails.routing\';\\n\\n@NgModule({\\n  imports: [CommonModule, EmailsRoutingModule],\\n  declarations: [],\\n})\\nexport class EmailsModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"EmailsRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"EmailsRoutingModule","id":"module-EmailsRoutingModule-1b437317d7d861ba31d6bbbee38c33dc0411c1240e3a2c679a05c5be6b5d0246704096c1beeaeb86b336779343b985028641f36d1cc8e422219f2a595e6d5724","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/emails/emails.routing.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { MockPage } from \'@main/pages/mock/mock.page\';\\n\\n/**\\n * Emails routes list\\n */\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    pathMatch: \'full\',\\n    component: MockPage,\\n    data: {\\n      image: \'assets/mocks/inbox.svg\',\\n    },\\n  },\\n];\\n\\n/**\\n * Emails routes module\\n */\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule],\\n})\\nexport class EmailsRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"IntegrationModulesModule","id":"module-IntegrationModulesModule-bc5435890e20360760cac8af7569d0eff66e07df7b571f57a7113347f79b3287e9aaa47d59ab4f74ad246a1aed15536cad740ddfd31bed4b0a2c007c0e4c006b","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/dashboard/modules/integration-modules/integration-modules.module.ts","methods":[],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { NgModule } from \'@angular/core\';\\nimport { MainModule } from \'@main/_main.module\';\\nimport { IntegrationGitHubComponent } from \'./components/integration-github/integration-github.component\';\\nimport { SelectableIntegrationComponent } from \'./components/selectable-integration/selectable-integration.component\';\\nimport { IntegrationModuleSelectDialog } from \'./dialogs/integration-module-select/integration-module-select.dialog\';\\n\\n@NgModule({\\n  imports: [MainModule, CommonModule],\\n  declarations: [\\n    SelectableIntegrationComponent,\\n    IntegrationGitHubComponent,\\n    IntegrationModuleSelectDialog,\\n  ],\\n})\\nexport class IntegrationModulesModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"IntegrationGitHubComponent"},{"name":"IntegrationModuleSelectDialog"},{"name":"SelectableIntegrationComponent"}]},{"type":"imports","elements":[{"name":"MainModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MainModule","id":"module-MainModule-dcb136e3bdc7a6eac77460ee28c8545f08a8627858cfe38bb8b9e4663d650aa98a28996652c0931196679d3c647b1678a548db2cbc5bfe07055012fd4b3d409d","description":"<p>Main dependency module with all universal components and modules declarations\\nThis module is required for application to run properly</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">```js\\nimport { MainModule } from &#39;&#64;app/main/main.module&#39;;\\nimport { TimePickerComponent } from &#39;./components/input-date-time/time-picker/time-picker.component&#39;;</code></pre></div><p>(@)NgModule({\\n  imports: [ ..., MainModule ],\\n  ...\\n})\\nexport class ExampleModule {}</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-none\\"></code></pre></div>","deprecationMessage":"","deprecated":false,"file":"src/app/_main/_main.module.ts","methods":[],"sourceCode":"import { DragDropModule } from \'@angular/cdk/drag-drop\';\\nimport { ObserversModule } from \'@angular/cdk/observers\';\\nimport { OverlayModule } from \'@angular/cdk/overlay\';\\nimport { PlatformModule } from \'@angular/cdk/platform\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \'@angular/common/http\';\\nimport { Injector, NgModule } from \'@angular/core\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { MatAutocompleteModule } from \'@angular/material/autocomplete\';\\nimport { MatBadgeModule } from \'@angular/material/badge\';\\nimport { MatCheckboxModule } from \'@angular/material/checkbox\';\\nimport { MatNativeDateModule } from \'@angular/material/core\';\\nimport { MatDatepickerModule } from \'@angular/material/datepicker\';\\nimport { MatDialogModule } from \'@angular/material/dialog\';\\nimport { MatFormFieldModule } from \'@angular/material/form-field\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatInputModule } from \'@angular/material/input\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatProgressSpinnerModule } from \'@angular/material/progress-spinner\';\\nimport { MatSelectModule } from \'@angular/material/select\';\\nimport { MatTableModule } from \'@angular/material/table\';\\nimport { MatTabsModule } from \'@angular/material/tabs\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { RouterModule } from \'@angular/router\';\\nimport { FontAwesomeModule } from \'@fortawesome/angular-fontawesome\';\\nimport { ButtonComponent } from \'./components/button/button.component\';\\nimport { CardComponent } from \'./components/card/card.component\';\\nimport { CheckboxComponent } from \'./components/checkbox/checkbox.component\';\\nimport { DialogOutletComponent } from \'./components/dialog-outlet/dialog-outlet.component\';\\nimport { FiltersComponent } from \'./components/filters/filters.component\';\\nimport { IconComponent } from \'./components/icon/icon.component\';\\nimport { DatePickerComponent } from \'./components/input-date-time/date-picker/date-picker.component\';\\nimport { InputDateTimeComponent } from \'./components/input-date-time/input-date-time.component\';\\nimport { InputComponent } from \'./components/input/input.component\';\\nimport { MainViewComponent } from \'./components/main-view/main-view.component\';\\nimport { NavElementWorkspaceComponent } from \'./components/nav-element-workspace/nav-element-workspace.component\';\\nimport { NavElementComponent } from \'./components/nav-element/nav-element.component\';\\nimport { EmptyOptionsComponent } from \'./components/select/empty-options/empty-options.component\';\\nimport { OptionComponent } from \'./components/select/option/option.component\';\\nimport { SelectComponent } from \'./components/select/select.component\';\\nimport { SidebarNavigationComponent } from \'./components/sidebar-navigation/sidebar-navigation.component\';\\nimport { SnackbarOutletComponent } from \'./components/snackbar-outlet/snackbar-outlet.component\';\\nimport { SnackbarComponent } from \'./components/snackbar/snackbar.component\';\\nimport { TextareaComponent } from \'./components/textarea/textarea.component\';\\nimport { UpperNavigationComponent } from \'./components/upper-navigation/upper-navigation.component\';\\nimport { AlertDialog } from \'./dialogs/alert/alert.dialog\';\\nimport { ClickStopPropagationDirective } from \'./directives/click-stop-propagation/click-stop-propagation.directive\';\\nimport { ErrorInterceptor } from \'./interceptors/error.interceptor\';\\nimport { MockPage } from \'./pages/mock/mock.page\';\\nimport { DayjsPipe } from \'./pipes/dayjs/dayjs.pipe\';\\nimport { DateByPreferencesPipe } from \'./pipes/date-by-preferences/date-by-preferences.pipe\';\\nimport { DayOfWeekPipe } from \'./pipes/day-of-week/day-of-week.pipe\';\\nimport { DayjsFormatPipe } from \'./pipes/dayjs-format/dayjs-format.pipe\';\\nimport { MonthPipe } from \'./pipes/month/month.pipe\';\\nimport { ValidationErrorPipe } from \'./pipes/validation-error/validation-error.pipe\';\\nimport { YearPipe } from \'./pipes/year/year.pipe\';\\nimport { ApiService } from \'./services/api/api.service\';\\nimport { DialogService } from \'./services/dialog/dialog.service\';\\nimport { LetDirective } from \'./directives/let/let.directive\';\\nimport { ViewContainerDirective } from \'./directives/view-container/view-container.directive\';\\nimport { FocusInitialDirective } from \'./directives/focus-initial/focus-initial.directive\';\\nimport { TabsComponent } from \'./components/tabs/tabs.component\';\\nimport { TabComponent } from \'./components/tabs/tab/tab.component\';\\nimport { InputColorComponent } from \'./components/input-color/input-color.component\';\\nimport { ColorComponent } from \'./components/color/color.component\';\\nimport { LoaderComponent } from \'./components/loader/loader.component\';\\nimport { ContrastColorPipe } from \'./pipes/contrast-color/contrast-color.pipe\';\\nimport { DateTimePickerComponent } from \'./components/input-date-time/date-time-picker/date-time-picker.component\';\\nimport { TimePickerComponent } from \'./components/input-date-time/time-picker/time-picker.component\';\\n\\n/**\\n * Main module configuration object\\n */\\nconst ngModuleConfig = {\\n  imports: [\\n    /*=============================================\\n    =             Local dependencies              =\\n    =============================================*/\\n    CommonModule,\\n    RouterModule,\\n    ObserversModule,\\n  ],\\n  importExports: [\\n    /*=============================================\\n      =                Dependencies                 =\\n      =============================================*/\\n    FormsModule,\\n    ReactiveFormsModule,\\n    HttpClientModule,\\n    DragDropModule,\\n    PlatformModule,\\n    OverlayModule,\\n\\n    /*=============================================\\n      =              Material modules               =\\n      =============================================*/\\n    MatDialogModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTableModule,\\n    MatAutocompleteModule,\\n    MatBadgeModule,\\n    MatCheckboxModule,\\n    MatDatepickerModule,\\n    MatNativeDateModule,\\n    MatFormFieldModule,\\n    MatInputModule,\\n    MatTooltipModule,\\n    MatTabsModule,\\n    MatProgressSpinnerModule,\\n    MatSelectModule,\\n\\n    /*=============================================\\n      =              External modules               =\\n      =============================================*/\\n    FontAwesomeModule,\\n  ],\\n  declarations: [\\n    /*=============================================\\n    =         Local custom components             =\\n    =============================================*/\\n  ],\\n  exportDeclarations: [\\n    /*=============================================\\n    =         Exported custom components          =\\n    =============================================*/\\n    InputComponent,\\n    ButtonComponent,\\n    ValidationErrorPipe,\\n    AlertDialog,\\n    IconComponent,\\n    FocusInitialDirective,\\n    SidebarNavigationComponent,\\n    NavElementComponent,\\n    NavElementWorkspaceComponent,\\n    UpperNavigationComponent,\\n    SelectComponent,\\n    OptionComponent,\\n    MainViewComponent,\\n    TextareaComponent,\\n    CheckboxComponent,\\n    CardComponent,\\n    ClickStopPropagationDirective,\\n    InputDateTimeComponent,\\n    LetDirective,\\n    FiltersComponent,\\n    SnackbarComponent,\\n    SnackbarOutletComponent,\\n    MockPage,\\n    DialogOutletComponent,\\n    ViewContainerDirective,\\n    EmptyOptionsComponent,\\n    DatePickerComponent,\\n    DateTimePickerComponent,\\n    MonthPipe,\\n    DayjsPipe,\\n    YearPipe,\\n    DayjsFormatPipe,\\n    DayOfWeekPipe,\\n    DayjsPipe,\\n    DateByPreferencesPipe,\\n    TabsComponent,\\n    TabComponent,\\n    InputColorComponent,\\n    ColorComponent,\\n    LoaderComponent,\\n    ContrastColorPipe,\\n    TimePickerComponent,\\n  ],\\n  providers: [\\n    /*=============================================\\n    =              Local providers                =\\n    =============================================*/\\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\\n    MatCheckboxModule,\\n    MatDatepickerModule,\\n    /*=============================================\\n    =              Exported providers             =\\n    =============================================*/\\n    DialogService,\\n    ApiService,\\n  ],\\n};\\n\\n/**\\n * Main dependency module with all universal components and modules declarations\\n * This module is required for application to run properly\\n * @example\\n * ```js\\n * import { MainModule } from \'@app/main/main.module\';\\nimport { TimePickerComponent } from \'./components/input-date-time/time-picker/time-picker.component\';\\n *\\n * (@)NgModule({\\n *   imports: [ ..., MainModule ],\\n *   ...\\n * })\\n * export class ExampleModule {}\\n * ```\\n */\\n@NgModule({\\n  imports: [...ngModuleConfig.imports, ...ngModuleConfig.importExports],\\n  declarations: [...ngModuleConfig.declarations, ...ngModuleConfig.exportDeclarations],\\n  exports: [...ngModuleConfig.importExports, ...ngModuleConfig.exportDeclarations],\\n  providers: [...ngModuleConfig.providers],\\n})\\nexport class MainModule {\\n  static injector: Injector;\\n\\n  constructor(injector: Injector) {\\n    MainModule.injector = injector;\\n    (window as any).injector = injector;\\n  }\\n}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":""},{"name":""}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MessagesModule","id":"module-MessagesModule-bb0f3cb282dd9e55b5076935efcecf3730cac769e0dc7568aad38f6e24775104517995a28d20bfdce69294bc3154c2941c3b7a378068ebf87bf9da7136149426","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/messages/messages.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { MessagesRoutingModule } from \'./messages.routing\';\\n\\n@NgModule({\\n  imports: [CommonModule, MessagesRoutingModule],\\n  declarations: [],\\n})\\nexport class MessagesModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"MessagesRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MessagesRoutingModule","id":"module-MessagesRoutingModule-d11520d015a2852c4b3d1bc7cb4c3125c63e556a8aad1e16bd271ed553ca156b5f5485a987a8ef7484734b56047a077da822d2227bc5a2111a527dbaabdc63e7","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/messages/messages.routing.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { MockPage } from \'@main/pages/mock/mock.page\';\\n\\n/**\\n * Messages routes list\\n */\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    pathMatch: \'full\',\\n    component: MockPage,\\n    data: {\\n      image: \'assets/mocks/messages.svg\',\\n    },\\n  },\\n];\\n\\n/**\\n * Messages routes module\\n */\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule],\\n})\\nexport class MessagesRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SettingsModule","id":"module-SettingsModule-af979deb5e9f78b21aafb6c7bcaa0c569bae0abb94fc950fedb7fdfda889efcbc0d376243b732e352b60abe23f36bd9e29477e6ef7268ee68aee3db8c89263bc","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/settings/settings.module.ts","methods":[],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { NgModule } from \'@angular/core\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\nimport { MainModule } from \'@main/_main.module\';\\nimport { SettingsPage } from \'src/app/settings/pages/settings/settings.page\';\\nimport { IntegrationEntryComponent } from \'./components/integration-entry/integration-entry.component\';\\nimport { ListGroupComponent } from \'./components/list-group/list-group.component\';\\nimport { SettingsAccountPage } from \'./pages/settings-account/settings-account.page\';\\nimport { SettingsIntegrationsPage } from \'./pages/settings-integrations/settings-integrations.page\';\\nimport { SettingsLocalizationPage } from \'./pages/settings-localization/settings-localization.page\';\\nimport { SettingsSessionsPage } from \'./pages/settings-sessions/settings-sessions.page\';\\nimport { SettingsRoutingModule } from \'./settings.routing\';\\n\\n@NgModule({\\n  imports: [CommonModule, MainModule, ReactiveFormsModule, SettingsRoutingModule],\\n  declarations: [\\n    SettingsPage,\\n    SettingsLocalizationPage,\\n    SettingsAccountPage,\\n    SettingsIntegrationsPage,\\n    SettingsSessionsPage,\\n    ListGroupComponent,\\n    IntegrationEntryComponent,\\n  ],\\n})\\nexport class SettingsModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"IntegrationEntryComponent"},{"name":"ListGroupComponent"},{"name":"SettingsAccountPage"},{"name":"SettingsIntegrationsPage"},{"name":"SettingsLocalizationPage"},{"name":"SettingsPage"},{"name":"SettingsSessionsPage"}]},{"type":"imports","elements":[{"name":"MainModule"},{"name":"SettingsRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SettingsRoutingModule","id":"module-SettingsRoutingModule-203e8a60bec0e07a2e6a822032909f8e3d15b6a605156bc0794d90309c47996f20c51901aefc3644cc427f1dd2ed45698da97d0aa095495299bbd8d9de5f33ec","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/settings/settings.routing.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { SettingsAccountPage } from \'./pages/settings-account/settings-account.page\';\\nimport { SettingsIntegrationsPage } from \'./pages/settings-integrations/settings-integrations.page\';\\nimport { SettingsLocalizationPage } from \'./pages/settings-localization/settings-localization.page\';\\nimport { SettingsSessionsPage } from \'./pages/settings-sessions/settings-sessions.page\';\\nimport { SettingsPage } from \'./pages/settings/settings.page\';\\n\\n/**\\n * Messages routes list\\n */\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: SettingsPage,\\n    children: [\\n      {\\n        path: \'account\',\\n        component: SettingsAccountPage,\\n      },\\n      {\\n        path: \'localization\',\\n        component: SettingsLocalizationPage,\\n      },\\n      {\\n        path: \'integrations\',\\n        component: SettingsIntegrationsPage,\\n      },\\n      {\\n        path: \'sessions\',\\n        component: SettingsSessionsPage,\\n      },\\n    ],\\n  },\\n];\\n\\n/**\\n * Messages routes module\\n */\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule],\\n})\\nexport class SettingsRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"TasksModule","id":"module-TasksModule-f914dfda03617cd76aa9b892cc09aaf123aed79d29a5cb8219b9b7596b71e749185f480b3335cac0b51576652adf9e112505e7fcdfa400a5e41f9ec27b9f6def","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/tasks/tasks.module.ts","methods":[],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { NgModule } from \'@angular/core\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\nimport { MainModule } from \'../_main/_main.module\';\\nimport { BoardTaskComponent } from \'./components/board-task/board-task.component\';\\nimport { InputAssigneeComponent } from \'./components/input-assignee/input-assignee.component\';\\nimport { InputIssueComponent } from \'./components/input-issue/input-issue.component\';\\nimport { InputPullRequestComponent } from \'./components/input-pull-request/input-pull-request.component\';\\nimport { InputTaskPropertyComponent } from \'./components/input-task-property/input-task-property.component\';\\nimport { StatusLabelComponent } from \'./components/status-label/status-label.component\';\\nimport { ViewOptionsComponent } from \'./components/view-options/view-options.component\';\\nimport { TaskDialog } from \'./dialogs/task/task.dialog\';\\nimport { BoardPage } from \'./pages/board/board.page\';\\nimport { SchedulePage } from \'./pages/schedule/schedule.page\';\\nimport { TaskListPage } from \'./pages/task-list/task-list.page\';\\nimport { StatusColorPipe } from \'./pipes/status-color.pipe\';\\nimport { TaskPriorityIconPipe } from \'./pipes/task-priority-icon.pipe\';\\nimport { TaskPriorityPipe } from \'./pipes/task-priority.pipe\';\\nimport { TaskTypeIconPipe } from \'./pipes/task-type-icon.pipe\';\\nimport { TaskTypePipe } from \'./pipes/task-type.pipe\';\\nimport { TasksRoutingModule } from \'./tasks.routing\';\\nimport { TrackerComponent } from \'./components/tracker/tracker.component\';\\nimport { TimeTracksTotalPipe } from \'./pipes/time-tracks-total/time-tracks-total.pipe\';\\nimport { TimeTrackTimerPipe } from \'./pipes/time-track-timer/time-track-timer.pipe\';\\nimport { TimeTrackDurationPipe } from \'./pipes/time-track-duration/time-track-duration.pipe\';\\nimport { TrackerEntryComponent } from \'./components/tracker/tracker-entry/tracker-entry.component\';\\nimport { InputEpicComponent } from \'./components/input-epic/input-epic.component\';\\nimport { TaskListComponent } from \'./components/task-list/task-list.component\';\\nimport { TaskRowComponent } from \'./components/task-row/task-row.component\';\\nimport { InputTaskParentComponent } from \'./components/input-task-parent/input-task-parent.component\';\\n\\n@NgModule({\\n  imports: [CommonModule, ReactiveFormsModule, MainModule, TasksRoutingModule],\\n  declarations: [\\n    BoardPage,\\n    BoardTaskComponent,\\n    TaskListPage,\\n    TaskDialog,\\n    TaskTypePipe,\\n    TaskPriorityPipe,\\n    TaskPriorityIconPipe,\\n    TaskTypeIconPipe,\\n    ViewOptionsComponent,\\n    SchedulePage,\\n    InputAssigneeComponent,\\n    StatusLabelComponent,\\n    StatusColorPipe,\\n    InputTaskPropertyComponent,\\n    InputIssueComponent,\\n    InputPullRequestComponent,\\n    InputTaskParentComponent,\\n    TrackerComponent,\\n    TrackerEntryComponent,\\n    TimeTracksTotalPipe,\\n    TimeTrackTimerPipe,\\n    TimeTrackDurationPipe,\\n    InputEpicComponent,\\n    TaskListComponent,\\n    TaskRowComponent,\\n  ],\\n  exports: [TaskTypePipe],\\n})\\nexport class TasksModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BoardPage"},{"name":"BoardTaskComponent"},{"name":"InputAssigneeComponent"},{"name":"InputEpicComponent"},{"name":"InputIssueComponent"},{"name":"InputPullRequestComponent"},{"name":"InputTaskParentComponent"},{"name":"InputTaskPropertyComponent"},{"name":"SchedulePage"},{"name":"StatusColorPipe"},{"name":"StatusLabelComponent"},{"name":"TaskDialog"},{"name":"TaskListComponent"},{"name":"TaskListPage"},{"name":"TaskPriorityIconPipe"},{"name":"TaskPriorityPipe"},{"name":"TaskRowComponent"},{"name":"TaskTypeIconPipe"},{"name":"TaskTypePipe"},{"name":"TimeTrackDurationPipe"},{"name":"TimeTrackTimerPipe"},{"name":"TimeTracksTotalPipe"},{"name":"TrackerComponent"},{"name":"TrackerEntryComponent"}]},{"type":"imports","elements":[{"name":"MainModule"},{"name":"TasksRoutingModule"}]},{"type":"exports","elements":[{"name":"TaskTypePipe"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"TasksRoutingModule","id":"module-TasksRoutingModule-24f9de83867cde38be620e77f135a4df0fba6db6a1fb8e942eeb6155e64a24e718274cc7ceb30ef9a626b1ef66dae5faf89674b6a5d78ced98f9048c47b51976","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/tasks/tasks.routing.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { BoardPage } from \'./pages/board/board.page\';\\nimport { SchedulePage } from \'./pages/schedule/schedule.page\';\\nimport { TaskListPage } from \'./pages/task-list/task-list.page\';\\n\\n/**\\n * Tasks routes list\\n */\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    pathMatch: \'full\',\\n    redirectTo: \'board\',\\n  },\\n  {\\n    path: \'board\',\\n    component: BoardPage,\\n  },\\n  {\\n    path: \'list\',\\n    component: TaskListPage,\\n  },\\n  {\\n    path: \'schedule\',\\n    component: SchedulePage,\\n  },\\n  {\\n    path: \'calendar\',\\n    loadChildren: () => \\"import(\'../calendar/calendar.module\').then((m) => m.CalendarModule)\\",\\n  },\\n];\\n\\n/**\\n * Tasks routes module\\n */\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule],\\n})\\nexport class TasksRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ template, config }).story()"},{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/card/card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ template, config }).story()"},{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/checkbox/checkbox.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ template, config }).story()"},{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ template, config }).story()"},{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ template, config }).story()"},{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/textarea/textarea.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ config, template }).story()"},{"name":"componentContentDecorator","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/component-content-decorator.helper.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(content: string) => {\\n  return componentWrapperDecorator((story) => {\\n    return setContent(story, content);\\n  });\\n}"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryPageConfig({\\n  title: \'Components/Button\',\\n  component: ButtonComponent,\\n  selector: \'app-button\',\\n  argTypes: {\\n    variant: DOCS_SELECT,\\n    type: DOCS_SELECT,\\n    icon: DOCS_ICON_SELECT,\\n    elementRef: DOCS_READONLY,\\n  },\\n})"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/card/card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryPageConfig({\\n  title: \'Components/Card\',\\n  component: CardComponent,\\n  selector: \'app-card\',\\n})"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/checkbox/checkbox.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControlStoryPageConfig({\\n  title: \'Components/Checkbox\',\\n  component: CheckboxComponent,\\n  selector: \'app-checkbox\',\\n  argTypes: {\\n    autocomplete: DOCS_SELECT,\\n  },\\n})"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControlStoryPageConfig({\\n  title: \'Components/Input\',\\n  component: InputComponent,\\n  selector: \'app-input\',\\n  argTypes: {\\n    autocomplete: DOCS_SELECT,\\n    type: DOCS_SELECT,\\n  },\\n})"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControlStoryPageConfig({\\n  title: \'Components/InputDateTime\',\\n  component: InputDateTimeComponent,\\n  selector: \'app-input-date-time\',\\n  argTypes: {\\n    autocomplete: DOCS_SELECT,\\n    type: DOCS_SELECT,\\n  },\\n})"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/textarea/textarea.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControlStoryPageConfig({\\n  title: \'Components/Textarea\',\\n  component: TextareaComponent,\\n  selector: \'app-textarea\',\\n  argTypes: {\\n    autocomplete: DOCS_SELECT,\\n    input: DOCS_READONLY,\\n    output: DOCS_READONLY,\\n  },\\n})"},{"name":"content","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/card/card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"`\\n  <div class=\\"card-title\\">Sample card</div>\\n  <div class=\\"card-content\\">Little bit of content</div>\\n  <div class=\\"card-content\\">\\n    <app-button>Action</app-button>\\n  </div>\\n`"},{"name":"content","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/checkbox/checkbox.stories.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'Sample checkbox\'"},{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"src/tests/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'../\', true, /\\\\.spec\\\\.ts$/)","rawdescription":"Context for searching for tests","description":"<p>Context for searching for tests</p>\\n"},{"name":"DEFAULT_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/classes/form-control-story-page-config.class.ts","deprecated":false,"deprecationMessage":"","type":"Partial<ExtendedMeta>","defaultValue":"{\\n  argTypes: {\\n    ...DOCS_PRESET_CONTROL_ACCESSOR,\\n  },\\n} as Meta"},{"name":"DEFAULT_METADATA","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/classes/story-page-config.class.ts","deprecated":false,"deprecationMessage":"","type":"Partial<NgModuleMetadata>","defaultValue":"{\\n  imports: [MainModule, BrowserAnimationsModule],\\n  providers: [\\n    {\\n      provide: NgControl,\\n      useClass: TestNgControl,\\n    },\\n  ],\\n}"},{"name":"DOCS_CONTROL","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(controlType: ControlType) => ({\\n  control: {\\n    type: controlType,\\n  },\\n})"},{"name":"DOCS_GETTER","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(description: string) => ({\\n  control: {\\n    type: false,\\n  },\\n  table: {\\n    category: \'getters\',\\n  },\\n  description,\\n})"},{"name":"DOCS_ICON_SELECT","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  control: {\\n    type: \'select\',\\n  },\\n  options: Object.keys(icons),\\n  mapping: icons,\\n}"},{"name":"DOCS_PRESET_CONTROL_ACCESSOR","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  ngControl: DOCS_READONLY,\\n  required: {\\n    control: { type: false },\\n    table: { category: \'getters\', type: { summary: \'boolean\' } },\\n    description: `Property to describe if the control is required in a form (contains \\\\`requiredValidator()\\\\`)`,\\n    type: { name: \'boolean\' },\\n  },\\n  control: {\\n    control: { type: false },\\n    table: { category: \'getters\', type: { summary: \'FormControl\' } },\\n    description: `Control attached to this control accessor`,\\n    type: { name: \'FormControl\' },\\n  },\\n  formControl: {\\n    control: { type: false },\\n    table: { category: \'inputs\', type: { summary: \'FormControl\' } },\\n    description: `Control to attach to this control accessor (\\\\`formControlName\\\\` can also be used instead)`,\\n    type: { name: \'FormControl\' },\\n  },\\n  formControlName: {\\n    control: { type: false },\\n    table: { category: \'inputs\', type: { summary: \'string\' } },\\n    description: `Control to attach to this control accessor - require to be nested in \\\\`formGroup\\\\` (\\\\`formControl\\\\` can also be used instead)`,\\n    type: { name: \'string\' },\\n  },\\n}"},{"name":"DOCS_READONLY","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  control: false,\\n}"},{"name":"DOCS_REMOVE","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  table: {\\n    disable: true,\\n  },\\n}"},{"name":"DOCS_SELECT","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  control: {\\n    type: \'select\',\\n  },\\n}"},{"name":"emoji","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/marked/extensions/marked-emoji-extension.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\\n  name: \'emoji\',\\n  level: \'inline\', // This is an inline-level tokenizer\\n  start(src: string) {\\n    return src.indexOf(\':\');\\n  }, // Hint to Marked.js to stop and check for a match\\n  tokenizer(src: string, _tokens: any) {\\n    const rule = /^:(\\\\w+):/; // Regex for the complete token, anchor to string start\\n    const match = rule.exec(src);\\n\\n    const matchSequence = EMOJI_SEQUENCE_REGEX.exec(src);\\n\\n    if (matchSequence) {\\n      return {\\n        type: \'emoji\',\\n        raw: matchSequence[0],\\n        emoji: matchSequence[1],\\n        emojiType: \'sequence\',\\n      };\\n    }\\n\\n    if (match) {\\n      return {\\n        // Token to generate\\n        type: \'emoji\', // Should match \\"name\\" above\\n        raw: match[0], // Text to consume from the source\\n        emoji: match[1], // Additional custom properties\\n        emojiType: \'colon\',\\n      };\\n    }\\n\\n    return undefined;\\n  },\\n  renderer(token: EmojiToken): string {\\n    const convertFunction =\\n      token.emojiType === \'colon\' ? Emoji.emojiNameToUnicode : Emoji.characterSequenceToUnicode;\\n    const convertedEmoji = convertFunction(token.emoji);\\n\\n    return `<span class=\\"emoji\\">${convertedEmoji}</span>`;\\n  },\\n} as marked.TokenizerExtension & marked.RendererExtension","rawdescription":"Emoji extension to use with `marked` parser\\n\\nReplaces only `:smile:` notation","description":"<p>Emoji extension to use with <code>marked</code> parser</p>\\n<p>Replaces only <code>:smile:</code> notation</p>\\n"},{"name":"EMOJI_ALIASES","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/emoji/emoji.aliases.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  crush: \'1f970\',\\n  tear: \'1f972\',\\n}"},{"name":"EMOJI_SEQUENCE_ALIASES","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/emoji/emoji-sequence.aliases.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \':-)\': \'🙂\',\\n  \':)\': \'🙂\',\\n  \':-|\': \'😐\',\\n  \':|\': \'😐\',\\n  \':-(\': \'☹️\',\\n  \':(\': \'☹️\',\\n  \':-D\': \'😃\',\\n  \':D\': \'😃\',\\n  \':-p\': \'😛\',\\n  \':p\': \'😛\',\\n  \':-o\': \'😲\',\\n  \':o\': \'😲\',\\n  \';-)\': \'😉\',\\n  \';)\': \'😉\',\\n  \'<3\': \'❤️\',\\n  \'</3\': \'💔\',\\n  \'8-)\': \'😎\',\\n}"},{"name":"EMOJI_SEQUENCE_REGEX","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/emoji/emoji-sequence.aliases.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new RegExp(\\n  \'^(\' +\\n    Object.keys(EMOJI_SEQUENCE_ALIASES)\\n      .map((sequence) =>\\n        sequence\\n          .split(\'\')\\n          .map((char) => ([\')\', \'(\', \'|\'].includes(char) ? `\\\\\\\\${char}` : char))\\n          .join(\'\'),\\n      )\\n      .join(\'|\') +\\n    \')\',\\n  \'gi\',\\n)"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: true,\\n  apiURL: \'/api\',\\n  disableConsoleLog: true,\\n  version: app.version,\\n}","rawdescription":"Variant of global environment file for production.","description":"<p>Variant of global environment file for production.</p>\\n"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  /**\\n   * Whether the application is running in production mode.\\n   */\\n  production: false,\\n\\n  /**\\n   * API URL for the backend.\\n   */\\n  apiURL: \'/api\',\\n\\n  /**\\n   * Whether to disable console logging.\\n   */\\n  disableConsoleLog: false,\\n\\n  /**\\n   * App version\\n   */\\n  version: app.version,\\n}","rawdescription":"Global environment configuration object, replaced in configurations other than development. Stores build specific data.","description":"<p>Global environment configuration object, replaced in configurations other than development. Stores build specific data.</p>\\n"},{"name":"exposeAllPossibilities","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/component-content-decorator.helper.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"<C = any>(\\n  story: Story<C>,\\n  selector: string,\\n  input: string,\\n  values: string[],\\n) => {\\n  const inputRegex = new RegExp(`( |)\\\\\\\\[${input}\\\\\\\\]=\\"${input}\\"`, \'g\');\\n\\n  const addInputToTemplate = (template: string, value: string) => {\\n    let valueCapital = value[0].toUpperCase() + value.substring(1);\\n    return template.replace(\'><\', ` ${input}=\\"${value}\\">${valueCapital}<`);\\n  };\\n\\n  story.decorators = [\\n    componentWrapperDecorator((story) => {\\n      const baseTemplate = story.replace(inputRegex, \'\');\\n      const inputsArray = values.map((v) => addInputToTemplate(baseTemplate, v));\\n      const template = inputsArray.join(\'\');\\n\\n      return wrapWithDiv(template);\\n    }),\\n  ];\\n\\n  story.argTypes = {\\n    [input]: {\\n      table: {\\n        disable: true,\\n      },\\n    },\\n  } as any as Partial<ArgTypes<C>>;\\n\\n  const emptyTemplate = `<${selector}></${selector}>`;\\n  const snippet = values.map((v) => addInputToTemplate(emptyTemplate, v)).join(\'\\\\n\');\\n\\n  story.parameters = {\\n    docs: {\\n      source: {\\n        code: snippet,\\n        language: \'html\',\\n        type: \'auto\',\\n      },\\n    },\\n  };\\n\\n  return story;\\n}"},{"name":"FloatingLabel","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    floatingLabel: \'Sample field\',\\n  },\\n  description: `Best way to describe field purpose is to add a \\\\`floatingLabel\\\\`. The floating label will\\n    be shown above the field if field is in focus state or when the input contains some value.`,\\n}).story()"},{"name":"FloatingLabel","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    floatingLabel: \'Sample field\',\\n  },\\n  description: `Best way to describe field purpose is to add a \\\\`floatingLabel\\\\`. The floating label will\\n    be shown above the field if field is in focus state or when the input contains some value.`,\\n}).story()"},{"name":"formControl","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/checkbox/checkbox.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControl()"},{"name":"formControl","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControl()"},{"name":"formControl","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControl()"},{"name":"formControl","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/textarea/textarea.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControl()"},{"name":"Hint","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    hint: \'Sample hint\',\\n  },\\n  description: `...`,\\n}).story()"},{"name":"Icon","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  code: `<app-button [icon]=\\"faAdd\\"></app-button>`,\\n  description: `You can set \\\\`icon\\\\` property to add icon before text in buttons. This option supports prefixes like: \\\\`mat\\\\` |\\n  \\\\`fas\\\\` | \\\\`fab\\\\` | \\\\`cu\\\\`.`,\\n  props: {\\n    icon: faAdd,\\n  },\\n}).story()"},{"name":"icons","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{ none, faQuestion, faPenToSquare, faTrashArrowUp, faAdd }"},{"name":"IGNORED_PROPERTIES","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/classes/story-page-config.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"getAllProperties({})"},{"name":"markdownExample","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/textarea/markdown.example.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"`\\n---\\n__Advertisement :)__\\n\\n- __[pica](https://nodeca.github.io/pica/demo/)__ - high quality and fast image\\n  resize in browser.\\n- __[babelfish](https://github.com/nodeca/babelfish/)__ - developer friendly\\n  i18n with plurals support and easy syntax.\\n\\nYou will like those projects!\\n\\n---\\n\\n# h1 Heading 8-)\\n## h2 Heading\\n### h3 Heading\\n#### h4 Heading\\n##### h5 Heading\\n###### h6 Heading\\n\\n\\n## Horizontal Rules\\n\\n___\\n\\n---\\n\\n***\\n\\n\\n## Typographic replacements\\n\\nEnable typographer option to see result.\\n\\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\\n\\ntest.. test... test..... test?..... test!....\\n\\n!!!!!! ???? ,,  -- ---\\n\\n\\"Smartypants, double quotes\\" and \'single quotes\'\\n\\n\\n## Emphasis\\n\\n**This is bold text**\\n\\n__This is bold text__\\n\\n*This is italic text*\\n\\n_This is italic text_\\n\\n~~Strikethrough~~\\n\\n\\n## Blockquotes\\n\\n\\n> Blockquotes can also be nested...\\n>> ...by using additional greater-than signs right next to each other...\\n> > > ...or with spaces between arrows.\\n\\n\\n## Lists\\n\\nUnordered\\n\\n+ Create a list by starting a line with \\\\`+\\\\`, \\\\`-\\\\`, or \\\\`*\\\\`\\n+ Sub-lists are made by indenting 2 spaces:\\n  - Marker character change forces new list start:\\n    * Ac tristique libero volutpat at\\n    + Facilisis in pretium nisl aliquet\\n    - Nulla volutpat aliquam velit\\n+ Very easy!\\n\\nOrdered\\n\\n1. Lorem ipsum dolor sit amet\\n2. Consectetur adipiscing elit\\n3. Integer molestie lorem at massa\\n\\n\\n1. You can use sequential numbers...\\n1. ...or keep all the numbers as \\\\`1.\\\\`\\n\\nStart numbering with offset:\\n\\n57. foo\\n1. bar\\n\\n\\n## Code\\n\\nInline \\\\`code\\\\`\\n\\nIndented code\\n\\n    // Some comments\\n    line 1 of code\\n    line 2 of code\\n    line 3 of code\\n\\n\\nBlock code \\"fences\\"\\n\\n\\\\`\\\\`\\\\`\\nSample text here...\\n\\\\`\\\\`\\\\`\\n\\nSyntax highlighting\\n\\n\\\\`\\\\`\\\\` js\\nvar foo = function (bar) {\\n  return bar++;\\n};\\n\\nconsole.log(foo(5));\\n\\\\`\\\\`\\\\`\\n\\n## Tables\\n\\n| Option | Description |\\n| ------ | ----------- |\\n| data   | path to data files to supply the data that will be passed into templates. |\\n| engine | engine to be used for processing templates. Handlebars is the default. |\\n| ext    | extension to be used for dest files. |\\n\\nRight aligned columns\\n\\n| Option | Description |\\n| ------:| -----------:|\\n| data   | path to data files to supply the data that will be passed into templates. |\\n| engine | engine to be used for processing templates. Handlebars is the default. |\\n| ext    | extension to be used for dest files. |\\n\\n\\n## Links\\n\\n[link text](http://dev.nodeca.com)\\n\\n[link with title](http://nodeca.github.io/pica/demo/ \\"title text!\\")\\n\\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\\n\\n\\n## Images\\n\\n![Minion](https://octodex.github.com/images/minion.png)\\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \\"The Stormtroopocat\\")\\n\\nLike links, Images also have a footnote style syntax\\n\\n![Alt text][id]\\n\\nWith a reference later in the document defining the URL location:\\n\\n[id]: https://octodex.github.com/images/dojocat.jpg  \\"The Dojocat\\"\\n\\n\\n## Plugins\\n\\nThe killer feature of \\\\`markdown-it\\\\` is very effective support of\\n[syntax plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin).\\n\\n\\n### [Emojies](https://github.com/markdown-it/markdown-it-emoji)\\n\\n> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\\n>\\n> Shortcuts (emoticons): :-) :-( 8-) ;)\\n\\nsee [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.\\n\\n\\n### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)\\n\\n- 19^th^\\n- H~2~O\\n\\n\\n### [\\\\<ins>](https://github.com/markdown-it/markdown-it-ins)\\n\\n++Inserted text++\\n\\n\\n### [\\\\<mark>](https://github.com/markdown-it/markdown-it-mark)\\n\\n==Marked text==\\n\\n\\n### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)\\n\\nFootnote 1 link[^first].\\n\\nFootnote 2 link[^second].\\n\\nInline footnote^[Text of inline footnote] definition.\\n\\nDuplicated footnote reference[^second].\\n\\n[^first]: Footnote **can have markup**\\n\\n    and multiple paragraphs.\\n\\n[^second]: Footnote text.\\n\\n\\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\\n\\nTerm 1\\n\\n:   Definition 1\\nwith lazy continuation.\\n\\nTerm 2 with *inline markup*\\n\\n:   Definition 2\\n\\n        { some code, part of Definition 2 }\\n\\n    Third paragraph of definition 2.\\n\\n_Compact style:_\\n\\nTerm 1\\n  ~ Definition 1\\n\\nTerm 2\\n  ~ Definition 2a\\n  ~ Definition 2b\\n\\n\\n### [Abbreviations](https://github.com/markdown-it/markdown-it-abbr)\\n\\nThis is HTML abbreviation example.\\n\\nIt converts \\"HTML\\", but keep intact partial entries like \\"xxxHTMLyyy\\" and so on.\\n\\n*[HTML]: Hyper Text Markup Language\\n\\n### [Custom containers](https://github.com/markdown-it/markdown-it-container)\\n\\n::: warning\\n*here be dragons*\\n:::\\n\\n`"},{"name":"MatDialogTestingProvider","ctype":"miscellaneous","subtype":"variable","file":"src/tests/helpers/mat-dialog-testing-provider.helper.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatDialogModule,\\n  { provide: MAT_DIALOG_DATA, useValue: {} },\\n  { provide: MatDialogRef, useValue: {} },\\n]"},{"name":"ngModuleConfig","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/_main.module.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  imports: [\\n    /*=============================================\\n    =             Local dependencies              =\\n    =============================================*/\\n    CommonModule,\\n    RouterModule,\\n    ObserversModule,\\n  ],\\n  importExports: [\\n    /*=============================================\\n      =                Dependencies                 =\\n      =============================================*/\\n    FormsModule,\\n    ReactiveFormsModule,\\n    HttpClientModule,\\n    DragDropModule,\\n    PlatformModule,\\n    OverlayModule,\\n\\n    /*=============================================\\n      =              Material modules               =\\n      =============================================*/\\n    MatDialogModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTableModule,\\n    MatAutocompleteModule,\\n    MatBadgeModule,\\n    MatCheckboxModule,\\n    MatDatepickerModule,\\n    MatNativeDateModule,\\n    MatFormFieldModule,\\n    MatInputModule,\\n    MatTooltipModule,\\n    MatTabsModule,\\n    MatProgressSpinnerModule,\\n    MatSelectModule,\\n\\n    /*=============================================\\n      =              External modules               =\\n      =============================================*/\\n    FontAwesomeModule,\\n  ],\\n  declarations: [\\n    /*=============================================\\n    =         Local custom components             =\\n    =============================================*/\\n  ],\\n  exportDeclarations: [\\n    /*=============================================\\n    =         Exported custom components          =\\n    =============================================*/\\n    InputComponent,\\n    ButtonComponent,\\n    ValidationErrorPipe,\\n    AlertDialog,\\n    IconComponent,\\n    FocusInitialDirective,\\n    SidebarNavigationComponent,\\n    NavElementComponent,\\n    NavElementWorkspaceComponent,\\n    UpperNavigationComponent,\\n    SelectComponent,\\n    OptionComponent,\\n    MainViewComponent,\\n    TextareaComponent,\\n    CheckboxComponent,\\n    CardComponent,\\n    ClickStopPropagationDirective,\\n    InputDateTimeComponent,\\n    LetDirective,\\n    FiltersComponent,\\n    SnackbarComponent,\\n    SnackbarOutletComponent,\\n    MockPage,\\n    DialogOutletComponent,\\n    ViewContainerDirective,\\n    EmptyOptionsComponent,\\n    DatePickerComponent,\\n    DateTimePickerComponent,\\n    MonthPipe,\\n    DayjsPipe,\\n    YearPipe,\\n    DayjsFormatPipe,\\n    DayOfWeekPipe,\\n    DayjsPipe,\\n    DateByPreferencesPipe,\\n    TabsComponent,\\n    TabComponent,\\n    InputColorComponent,\\n    ColorComponent,\\n    LoaderComponent,\\n    ContrastColorPipe,\\n    TimePickerComponent,\\n  ],\\n  providers: [\\n    /*=============================================\\n    =              Local providers                =\\n    =============================================*/\\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\\n    MatCheckboxModule,\\n    MatDatepickerModule,\\n    /*=============================================\\n    =              Exported providers             =\\n    =============================================*/\\n    DialogService,\\n    ApiService,\\n  ],\\n}","rawdescription":"Main module configuration object","description":"<p>Main module configuration object</p>\\n"},{"name":"none","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"null","defaultValue":"null"},{"name":"Pending","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  description: `To make the button show with loader you need to pass \\\\`pending\\\\` property with value: \\\\`true\\\\`.`,\\n  code: `<app-button [pending]=\\"true\\">Button</app-button>`,\\n  props: {\\n    pending: true,\\n  },\\n}).story()"},{"name":"Placeholder","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    placeholder: \'Sample placeholder\',\\n  },\\n  description: `...`,\\n}).story()"},{"name":"Placeholder","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    placeholder: \'Sample placeholder\',\\n  },\\n  description: `...`,\\n}).story()"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"src/tests/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type","rawdescription":"Context builder form karma tests","description":"<p>Context builder form karma tests</p>\\n"},{"name":"SelectionEditOperationConverter","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts","deprecated":false,"deprecationMessage":"","type":"function","defaultValue":"{\\n  [SelectionEditOperationType.before]: (editor: Editor, selection: Selection, value: string) => {\\n    return [\\n      {\\n        range: {\\n          startColumn: 1,\\n          startLineNumber: selection.startLineNumber,\\n          endColumn: 1,\\n          endLineNumber: selection.startLineNumber,\\n        },\\n        text: value,\\n      },\\n    ] as EditOperation[];\\n  },\\n  [SelectionEditOperationType.after]: (editor: Editor, selection: Selection, value: string) => {\\n    const column = (editor.getModel()?.getLineLength(selection.endLineNumber) || 0) + 1;\\n\\n    return [\\n      {\\n        range: {\\n          startColumn: column,\\n          startLineNumber: selection.endLineNumber,\\n          endColumn: column,\\n          endLineNumber: selection.endLineNumber,\\n        },\\n        text: value,\\n      },\\n    ] as EditOperation[];\\n  },\\n  [SelectionEditOperationType.beforeEachLine]: (\\n    editor: Editor,\\n    selection: Selection,\\n    value: string,\\n  ) => {\\n    const startLine = selection.startLineNumber;\\n    const endLine = selection.endLineNumber;\\n\\n    const difference = Math.abs(startLine - endLine) + 1;\\n    const offset = Math.min(startLine, endLine);\\n    const indexes = [...new Array(difference).keys()].map((k) => k + offset);\\n\\n    return indexes.map((line) => ({\\n      range: {\\n        startLineNumber: line,\\n        startColumn: 1,\\n        endLineNumber: line,\\n        endColumn: 1,\\n      },\\n      text: value,\\n    })) as EditOperation[];\\n  },\\n  [SelectionEditOperationType.afterEachLine]: (\\n    editor: Editor,\\n    selection: Selection,\\n    value: string,\\n  ) => {\\n    const model = editor.getModel();\\n    if (!model) return [];\\n\\n    const startLine = selection.startLineNumber;\\n    const endLine = selection.endLineNumber;\\n\\n    const difference = Math.abs(startLine - endLine) + 1;\\n    const offset = Math.min(startLine, endLine);\\n    const indexes = [...new Array(difference).keys()].map((k) => k + offset);\\n\\n    return indexes.map((line) => {\\n      const column = model.getLineLength(line) + 1;\\n\\n      return {\\n        range: {\\n          startLineNumber: line,\\n          startColumn: column,\\n          endLineNumber: line,\\n          endColumn: column,\\n        },\\n        text: value,\\n      } as EditOperation;\\n    });\\n  },\\n}"},{"name":"SelectionEditOperationOrder","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  before: 1,\\n  after: 4,\\n  beforeEachLine: 2,\\n  afterEachLine: 3,\\n}"},{"name":"setContent","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/component-content-decorator.helper.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(template: string, content: string) => {\\n  return template.replace(/(?<=(<[^/]*))>.?<(?=\\\\/)/g, `>${content}<`);\\n}"},{"name":"StaticLabel","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    staticLabel: \'Sample field\',\\n  },\\n  description: `This is the other way to show the user purpose of this field. Static label will be always displayed\\n    above the input field regardless of state and content`,\\n}).story()"},{"name":"StaticLabel","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    staticLabel: \'Sample field\',\\n  },\\n  description: `This is the other way to show the user purpose of this field. Static label will be always displayed\\n    above the input field regardless of state and content`,\\n}).story()"},{"name":"TaskTypeHierarchy","ctype":"miscellaneous","subtype":"variable","file":"src/app/tasks/enums/task-type.enum.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\\n  [TaskType.NONE]: [TaskType.TASK, TaskType.EPIC, TaskType.USER_STORY, TaskType.ISSUE],\\n  [TaskType.TASK]: [TaskType.SUBTASK, TaskType.ISSUE],\\n  [TaskType.EPIC]: [TaskType.USER_STORY, TaskType.ISSUE, TaskType.TASK],\\n  [TaskType.USER_STORY]: [TaskType.SUBTASK],\\n  [TaskType.ISSUE]: [TaskType.SUBTASK],\\n  [TaskType.SUBTASK]: [],\\n} as { [key in TaskType]: TaskType[] }"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate<ButtonComponent>({ content: \'Button\' })"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/card/card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate({ content })"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/checkbox/checkbox.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate({ formControl, content })"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate<InputComponent>({ formControl })"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate<InputDateTimeComponent>({ formControl })"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/textarea/textarea.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate({ formControl })"},{"name":"Type","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  code: `<app-button type=\\"button\\"></app-button>`,\\n  description: `If button is nested in a form, the default behavior is making this button a \\\\`submit\\\\` button. To\\n  omit this it is needed to set \\\\`type\\\\` to \\\\`button\\\\`.`,\\n  props: {\\n    type: \'button\',\\n  },\\n}).story()"},{"name":"Variant","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  multiple: {\\n    prop: \'variant\',\\n    options: [\'primary\', \'secondary\', \'important\'],\\n  },\\n  description: `To customize the general appearance you need to use the \\\\`variant\\\\` property with one of the specified values.\\n    If you will not specify variant, the button will appear with \\\\`secondary\\\\` styling.`,\\n}).story()"}],"functions":[{"name":"applyFilters","file":"src/app/_main/operators/apply-filters.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"filters","deprecated":false,"deprecationMessage":"","optional":true}],"jsdoctags":[{"name":"filters","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"buildPropsString","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"props","type":"Props","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"props","type":"Props","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"buildTemplate","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"selector","type":"string","deprecated":false,"deprecationMessage":""},{"name":"content","type":"string","deprecated":false,"deprecationMessage":""},{"name":"propsString","type":"string","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"selector","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"content","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"propsString","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"Cache","file":"src/app/_main/decorators/cache/cache.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Decorator to cache API responses as observables.</p>\\n","args":[{"name":"options","type":"CacheOptions","deprecated":false,"deprecationMessage":"","optional":true}],"returnType":"MethodDecorator","jsdoctags":[{"name":"options","type":"CacheOptions","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"catchResponse","file":"src/app/_main/operators/catch-response.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":true,"deprecationMessage":"","description":"","args":[{"name":"message","type":"string","deprecated":false,"deprecationMessage":""},{"name":"action","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"action","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"combinePropsString","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"propsStrings","deprecated":false,"deprecationMessage":"","dotDotDotToken":true}],"jsdoctags":[{"name":"propsStrings","deprecated":false,"deprecationMessage":"","dotDotDotToken":true,"tagName":{"text":"param"}}]},{"name":"componentTemplateDecorator","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"props","type":"Props","deprecated":false,"deprecationMessage":""},{"name":"config","type":"TemplateDecoratorConfig","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"props","type":"Props","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"config","type":"TemplateDecoratorConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"connectFormToControl","file":"src/app/_main/classes/form.class.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"component","type":"any","deprecated":false,"deprecationMessage":""},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"component","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"Debug","file":"src/app/_main/decorators/debug/debug.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":true,"deprecationMessage":"","description":"","args":[]},{"name":"emailValidator","file":"src/app/_main/validators/email.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if email is valid</p>\\n","args":[],"returnType":"ValidatorFn","jsdoctags":[{"tagName":{"pos":188,"end":195,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]},{"name":"expectToFail","file":"src/tests/helpers/validator-testing.helper.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"val","type":"any","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"val","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"expectToPass","file":"src/tests/helpers/validator-testing.helper.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"val","type":"any","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"val","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"extractPropsString","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"template","type":"string","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"template","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAllProperties","file":"src/stories/helpers/functions/get-all-properties.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"obj","type":"any","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"obj","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"IntegrationModule","file":"src/app/dashboard/modules/integration-modules/decorators/integration-module/integration-module.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"config","type":"IntegrationModuleEntryConfig","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"config","type":"IntegrationModuleEntryConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"linkOverride","file":"src/app/_main/libs/marked/overrides/link.override.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"renderer","type":"Renderer","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"renderer","type":"Renderer","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"maxLengthValidator","file":"src/app/_main/validators/max-length.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if the length is not greater than specyfic number</p>\\n","args":[{"name":"length","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"ValidatorFn","jsdoctags":[{"name":"length","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":220,"end":227,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]},{"name":"notEmptyValidator","file":"src/app/_main/validators/not-empty.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if value was provided</p>\\n","args":[],"returnType":"ValidatorFn","jsdoctags":[{"tagName":{"pos":192,"end":199,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]},{"name":"Page","file":"src/app/_main/decorators/page/page.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Decorator to mark component or directive as a page.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-typescript\\">(&#64;)Page()\\n(&#64;)Component({\\n  selector: &#39;app-example-page&#39;,\\n  templateUrl: &#39;./example.page.html&#39;,\\n  styleUrls: [&#39;./example.page.scss&#39;],\\n})\\nexport class CreateWorkspacePage { ... }</code></pre></div>","args":[]},{"name":"passwordValidator","file":"src/app/_main/validators/password.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if password is valid</p>\\n","args":[],"returnType":"ValidatorFn","jsdoctags":[{"tagName":{"pos":191,"end":198,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]},{"name":"requiredValidator","file":"src/app/_main/validators/required.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if value was provided</p>\\n","args":[],"returnType":"ValidatorFn","jsdoctags":[{"tagName":{"pos":192,"end":199,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]},{"name":"sameAsValidator","file":"src/app/_main/validators/same-as.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if password is valid</p>\\n","args":[{"name":"compareWith","type":"string","deprecated":false,"deprecationMessage":""},{"name":"message","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"ValidatorFn","jsdoctags":[{"name":"compareWith","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":191,"end":198,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]},{"name":"Service","file":"src/app/_main/decorators/service/service.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Decorator to mark class as a service and store theirs instances in global variable.</p>\\n","args":[]},{"name":"ServiceValidator","file":"src/app/_main/decorators/service-validator.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"errorValidationTree","type":"ErrorValidationTree","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"errorValidationTree","type":"ErrorValidationTree","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setLoaderMessage","file":"src/app/_main/operators/loader.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":""},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"jsdoctags":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"startLoader","file":"src/app/_main/operators/loader.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":""},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"jsdoctags":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"stopLoader","file":"src/app/_main/operators/loader.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"timeToInteraction","file":"src/app/_main/classes/time-to-interaction.class.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"time","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"100"}],"jsdoctags":[{"name":"time","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"100","tagName":{"text":"param"}}]},{"name":"validateControl","file":"src/app/_main/classes/form.class.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"validateForm","file":"src/app/_main/classes/form.class.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"withLoader","file":"src/app/_main/operators/loader.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"wrapWithDiv","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"template","type":"string","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"template","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"typealiases":[{"name":"ApplicationSelectorKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"LaunchCalculator\\" | \\"LaunchCalendar\\" | \\"LaunchContacts\\" | \\"LaunchMail\\" | \\"LaunchMediaPlayer\\" | \\"LaunchMusicPlayer\\" | \\"LaunchMyComputer\\" | \\"LaunchPhone\\" | \\"LaunchScreenSaver\\" | \\"LaunchSpreadsheet\\" | \\"LaunchWebBrowser\\" | \\"LaunchWebCam\\" | \\"LaunchWordProcessor\\" | \\"LaunchApplication1\\" | \\"LaunchApplication2\\" | \\"LaunchApplication3\\" | \\"LaunchApplication4\\" | \\"LaunchApplication5\\" | \\"LaunchApplication6\\" | \\"LaunchApplication7\\" | \\"LaunchApplication8\\" | \\"LaunchApplication9\\" | \\"LaunchApplication10\\" | \\"LaunchApplication11\\" | \\"LaunchApplication12\\" | \\"LaunchApplication13\\" | \\"LaunchApplication14\\" | \\"LaunchApplication15\\" | \\"LaunchApplication16\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"BrowserControlKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"BrowserBack\\" | \\"BrowserFavorites\\" | \\"BrowserForward\\" | \\"BrowserHome\\" | \\"BrowserRefresh\\" | \\"BrowserSearch\\" | \\"BrowserStop\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"color","ctype":"miscellaneous","subtype":"typealias","rawtype":"number","file":"src/app/_main/interfaces/color.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":146},{"name":"CursorStateComputer","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.editor.ICursorStateComputer","file":"src/app/_main/libs/monaco/typings.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"dateISOString","ctype":"miscellaneous","subtype":"typealias","rawtype":"string","file":"src/app/_main/interfaces/date.interface.ts","deprecated":false,"deprecationMessage":"","description":"<p>date format like: YYYY-MM-DDTHH:mm:ss.sssZ</p>\\n<p>For example: <code>2011-10-05T14:48:00.000Z</code></p>\\n","kind":149},{"name":"DaysGrid","ctype":"miscellaneous","subtype":"typealias","rawtype":"CalendarDay[][]","file":"src/app/_main/components/input-date-time/date-picker.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":182},{"name":"DeviceKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"BrightnessDown\\" | \\"BrightnessUp\\" | \\"Eject\\" | \\"LogOff\\" | \\"Power\\" | \\"PowerOff\\" | \\"PrintScreen\\" | \\"Hibernate\\" | \\"Standby\\" | \\"WakeUp\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"DocumentKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Close\\" | \\"New\\" | \\"Open\\" | \\"Print\\" | \\"Save\\" | \\"SpellCheck\\" | \\"MailForward\\" | \\"MailReply\\" | \\"MailSend\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"EditingKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Backspace\\" | \\"Clear\\" | \\"Copy\\" | \\"CrSel\\" | \\"Cut\\" | \\"Delete\\" | \\"EraseEof\\" | \\"ExSel\\" | \\"Insert\\" | \\"Paste\\" | \\"Redo\\" | \\"Undo\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"EditOperation","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.editor.IIdentifiedSingleEditOperation","file":"src/app/_main/classes/monaco-extended.class.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"EditOperation","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.editor.IIdentifiedSingleEditOperation","file":"src/app/_main/libs/monaco/typings.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"Editor","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.editor.IStandaloneCodeEditor","file":"src/app/_main/libs/monaco/typings.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"ErrorCodes","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/app/_main/interfaces/http-error.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":194},{"name":"Errors","ctype":"miscellaneous","subtype":"typealias","rawtype":"T","file":"src/app/_main/interfaces/http-error.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"Filter","ctype":"miscellaneous","subtype":"typealias","rawtype":"FilterCheckbox<any> | FilterText | FilterNumber | FilterSelect<any>","file":"src/app/_main/interfaces/filters.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"FilterType","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/app/_main/interfaces/filters.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":193},{"name":"FunctionKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"F1\\" | \\"F2\\" | \\"F3\\" | \\"F4\\" | \\"F5\\" | \\"F6\\" | \\"F7\\" | \\"F8\\" | \\"F9\\" | \\"F10\\" | \\"F11\\" | \\"F12\\" | \\"F13\\" | \\"F14\\" | \\"F15\\" | \\"F16\\" | \\"F17\\" | \\"F18\\" | \\"F19\\" | \\"F20\\" | \\"Soft1\\" | \\"Soft2\\" | \\"Soft3\\" | \\"Soft4\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"IMECompositionKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"AllCandidates\\" | \\"Alphanumeric\\" | \\"CodeInput\\" | \\"Compose\\" | \\"Convert\\" | \\"Dead\\" | \\"FinalMode\\" | \\"GroupFirst\\" | \\"GroupLast\\" | \\"GroupNext\\" | \\"GroupPrevious\\" | \\"ModeChange\\" | \\"NextCandidate\\" | \\"NonConvert\\" | \\"PreviousCandidate\\" | \\"Process\\" | \\"SingleCandidate\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"JSONPrimitive","ctype":"miscellaneous","subtype":"typealias","rawtype":"string | number | boolean | undefined | null","file":"src/app/_main/interfaces/json-parsable.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"KeyboardKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"SpecialValueKey | ModifierKeys | WhitespaceKeys | NavigationKeys | EditingKeys | UIKeys | DeviceKeys | IMECompositionKeys | LinuxDeadKeys | FunctionKeys | PhoneKeys | MultimediaKeys | TVControlKeys | MediaControllerKeys | SpeechRecognitionKeys | DocumentKeys | ApplicationSelectorKeys | BrowserControlKeys | NumericKeypadKeys | UpperAlpha | LowerAlpha | KoreanKeyboardsOnly","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"KoreanKeyboardsOnly","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"HangulMode\\" | \\"HanjaMode\\" | \\"JunjaMode\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"LinuxDeadKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"GDK_KEY_dead_grave\\" | \\"GDK_KEY_dead_acute\\" | \\"GDK_KEY_dead_circumflex\\" | \\"GDK_KEY_dead_tilde\\" | \\"GDK_KEY_dead_perispomeni\\" | \\"GDK_KEY_dead_macron\\" | \\"GDK_KEY_dead_breve\\" | \\"GDK_KEY_dead_abovedot\\" | \\"GDK_KEY_dead_diaeresis\\" | \\"GDK_KEY_dead_abovering\\" | \\"GDK_KEY_dead_doubleacute\\" | \\"GDK_KEY_dead_caron\\" | \\"GDK_KEY_dead_cedilla\\" | \\"GDK_KEY_dead_ogonek\\" | \\"GDK_KEY_dead_iota\\" | \\"GDK_KEY_dead_voiced_sound\\" | \\"GDK_KEY_dead_semivoiced_sound\\" | \\"GDK_KEY_dead_belowdot\\" | \\"GDK_KEY_dead_hook\\" | \\"GDK_KEY_dead_horn\\" | \\"GDK_KEY_dead_stroke\\" | \\"GDK_KEY_dead_abovecomma\\" | \\"GDK_KEY_dead_psili\\" | \\"GDK_KEY_dead_abovereversedcomma\\" | \\"GDK_KEY_dead_dasia\\" | \\"GDK_KEY_dead_doublegrave\\" | \\"GDK_KEY_dead_belowring\\" | \\"GDK_KEY_dead_belowmacron\\" | \\"GDK_KEY_dead_belowcircumflex\\" | \\"GDK_KEY_dead_belowtilde\\" | \\"GDK_KEY_dead_belowbreve\\" | \\"GDK_KEY_dead_belowdiaeresis\\" | \\"GDK_KEY_dead_invertedbreve\\" | \\"GDK_KEY_dead_belowcomma\\" | \\"GDK_KEY_dead_currency\\" | \\"GDK_KEY_dead_a\\" | \\"GDK_KEY_dead_A\\" | \\"GDK_KEY_dead_e\\" | \\"GDK_KEY_dead_E\\" | \\"GDK_KEY_dead_i\\" | \\"GDK_KEY_dead_I\\" | \\"GDK_KEY_dead_o\\" | \\"GDK_KEY_dead_O\\" | \\"GDK_KEY_dead_u\\" | \\"GDK_KEY_dead_U\\" | \\"GDK_KEY_dead_small_schwa\\" | \\"GDK_KEY_dead_capital_schwa\\" | \\"GDK_KEY_dead_greek\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"LowerAlpha","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"a\\" | \\"b\\" | \\"c\\" | \\"d\\" | \\"e\\" | \\"f\\" | \\"g\\" | \\"h\\" | \\"i\\" | \\"j\\" | \\"k\\" | \\"l\\" | \\"m\\" | \\"n\\" | \\"o\\" | \\"p\\" | \\"q\\" | \\"r\\" | \\"s\\" | \\"t\\" | \\"u\\" | \\"v\\" | \\"w\\" | \\"x\\" | \\"y\\" | \\"z\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"MediaControllerKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"AVRInput\\" | \\"AVRPower\\" | \\"ColorF0Red\\" | \\"ColorF1Green\\" | \\"ColorF2Yellow\\" | \\"ColorF3Blue\\" | \\"ColorF4Grey\\" | \\"ColorF5Brown\\" | \\"ClosedCaptionToggle\\" | \\"Dimmer\\" | \\"DisplaySwap\\" | \\"DVR\\" | \\"Exit\\" | \\"FavoriteClear0\\" | \\"FavoriteClear1\\" | \\"FavoriteClear2\\" | \\"FavoriteClear3\\" | \\"FavoriteRecall0\\" | \\"FavoriteRecall1\\" | \\"FavoriteRecall2\\" | \\"FavoriteRecall3\\" | \\"FavoriteStore0\\" | \\"FavoriteStore1\\" | \\"FavoriteStore2\\" | \\"FavoriteStore3\\" | \\"Guide\\" | \\"GuideNextDay\\" | \\"GuidePreviousDay\\" | \\"Info\\" | \\"InstantReplay\\" | \\"Link\\" | \\"ListProgram\\" | \\"LiveContent\\" | \\"Lock\\" | \\"MediaApps\\" | \\"MediaAudioTrack\\" | \\"MediaLast\\" | \\"MediaSkipBackward\\" | \\"MediaSkipForward\\" | \\"MediaStepBackward\\" | \\"MediaStepForward\\" | \\"MediaTopMenu\\" | \\"NavigateIn\\" | \\"NavigateNext\\" | \\"NavigateOut\\" | \\"NavigatePrevious\\" | \\"NextFavoriteChannel\\" | \\"NextUserProfile\\" | \\"OnDemand\\" | \\"Pairing\\" | \\"PinPDown\\" | \\"PinPMove\\" | \\"PinPToggle\\" | \\"PinPUp\\" | \\"PlaySpeedDown\\" | \\"PlaySpeedReset\\" | \\"PlaySpeedUp\\" | \\"RandomToggle\\" | \\"RcLowBattery\\" | \\"RecordSpeedNext\\" | \\"RfBypass\\" | \\"ScanChannelsToggle\\" | \\"ScreenModeNext\\" | \\"Settings\\" | \\"SplitScreenToggle\\" | \\"STBInput\\" | \\"STBPower\\" | \\"Subtitle\\" | \\"Teletext\\" | \\"VideoModeNext\\" | \\"Wink\\" | \\"ZoomToggle\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"ModifierKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Alt\\" | \\"AltGraph\\" | \\"CapsLock\\" | \\"Control\\" | \\"Fn\\" | \\"FnLock\\" | \\"Hyper\\" | \\"Meta\\" | \\"NumLock\\" | \\"ScrollLock\\" | \\"Shift\\" | \\"Super\\" | \\"Symbol\\" | \\"SymbolLock\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"MonacoEditor","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.editor.IStandaloneCodeEditor","file":"src/app/_main/classes/monaco-extended.class.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"MultimediaKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"ChannelDown\\" | \\"ChannelUp\\" | \\"MediaFastForward\\" | \\"MediaPause\\" | \\"MediaPlay\\" | \\"MediaPlayPause\\" | \\"MediaRecord\\" | \\"MediaRewind\\" | \\"MediaStop\\" | \\"MediaTrackNext\\" | \\"MediaTrackPrevious\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"NavigationKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"ArrowDown\\" | \\"ArrowLeft\\" | \\"ArrowRight\\" | \\"ArrowUp\\" | \\"End\\" | \\"Home\\" | \\"PageDown\\" | \\"PageUp\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"NumericKeypadKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Decimal\\" | \\"Key11\\" | \\"Key12\\" | \\"Multiply\\" | \\"Add\\" | \\"Clear\\" | \\"Divide\\" | \\"Subtract\\" | \\"Separator\\" | \\"0\\" | \\"1\\" | \\"2\\" | \\"3\\" | \\"4\\" | \\"5\\" | \\"6\\" | \\"7\\" | \\"8\\" | \\"9\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"PhoneKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"AppSwitch\\" | \\"Call\\" | \\"Camera\\" | \\"CameraFocus\\" | \\"EndCall\\" | \\"GoBack\\" | \\"GoHome\\" | \\"HeadsetHook\\" | \\"LastNumberRedial\\" | \\"Notification\\" | \\"MannerMode\\" | \\"VoiceDial\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"Props","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/stories/helpers/classes/story.class.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Schedule","ctype":"miscellaneous","subtype":"typealias","rawtype":"SinglePersonSchedule[]","file":"src/app/tasks/interfaces/schedule.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":182},{"name":"Selection","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.Selection","file":"src/app/_main/classes/monaco-extended.class.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"Selection","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.Selection","file":"src/app/_main/libs/monaco/typings.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"SelectionEditOperation","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts","deprecated":false,"deprecationMessage":"","description":"","kind":194},{"name":"SpecialValueKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":195},{"name":"SpeechRecognitionKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"SpeechCorrectionList\\" | \\"SpeechInputToggle\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"TVControlKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"TV\\" | \\"TV3DMode\\" | \\"TVAntennaCable\\" | \\"TVAudioDescription\\" | \\"TVAudioDescriptionMixDown\\" | \\"TVAudioDescriptionMixUp\\" | \\"TVContentsMenu\\" | \\"TVDataService\\" | \\"TVInput\\" | \\"TVInputComponent1\\" | \\"TVInputComponent2\\" | \\"TVInputComposite1\\" | \\"TVInputComposite2\\" | \\"TVInputHDMI1\\" | \\"TVInputHDMI2\\" | \\"TVInputHDMI3\\" | \\"TVInputHDMI4\\" | \\"TVInputVGA1\\" | \\"TVMediaContext\\" | \\"TVNetwork\\" | \\"TVNumberEntry\\" | \\"TVPower\\" | \\"TVRadioService\\" | \\"TVSatellite\\" | \\"TVSatelliteBS\\" | \\"TVSatelliteCS\\" | \\"TVSatelliteToggle\\" | \\"TVTerrestrialAnalog\\" | \\"TVTerrestrialDigital\\" | \\"TVTimer\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"UIKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Accept\\" | \\"Again\\" | \\"Attn\\" | \\"Cancel\\" | \\"ContextMenu\\" | \\"Escape\\" | \\"Execute\\" | \\"Find\\" | \\"Finish\\" | \\"Help\\" | \\"Pause\\" | \\"Play\\" | \\"Props\\" | \\"Select\\" | \\"ZoomIn\\" | \\"ZoomOut\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"unixTimestamp","ctype":"miscellaneous","subtype":"typealias","rawtype":"number","file":"src/app/_main/interfaces/date.interface.ts","deprecated":false,"deprecationMessage":"","description":"<p>It is the number of milliseconds that have elapsed since the Unix epoch, excluding leap seconds. The Unix epoch is 00:00:00 UTC on 1 January 1970.</p>\\n<p>For example: <code>1662158033</code></p>\\n","kind":146},{"name":"UpperAlpha","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"A\\" | \\"B\\" | \\"C\\" | \\"D\\" | \\"E\\" | \\"F\\" | \\"G\\" | \\"H\\" | \\"I\\" | \\"J\\" | \\"K\\" | \\"L\\" | \\"M\\" | \\"N\\" | \\"O\\" | \\"P\\" | \\"Q\\" | \\"R\\" | \\"S\\" | \\"T\\" | \\"U\\" | \\"V\\" | \\"W\\" | \\"X\\" | \\"Y\\" | \\"Z\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"WhitespaceKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Enter\\" | \\"Tab\\" | \\" \\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}],"enumerations":[{"name":"AlertDialogVariant","childs":[{"name":"DEFAULT","deprecated":false,"deprecationMessage":"","value":"default"},{"name":"IMPORTANT","deprecated":false,"deprecationMessage":"","value":"important"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"<p>Type of the dialog variant. Used to specify what dialog styling should be used.</p>\\n","file":"src/app/_main/dialogs/alert/alert.dialog.ts"},{"name":"ControlType","childs":[{"name":"SELECT","deprecated":false,"deprecationMessage":"","value":"select"},{"name":"TEXT","deprecated":false,"deprecationMessage":"","value":"text"},{"name":"BOOLEAN","deprecated":false,"deprecationMessage":"","value":"boolean"},{"name":"OBJECT","deprecated":false,"deprecationMessage":"","value":"object"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/stories/helpers/control-type.helper.ts"},{"name":"DataFilterControlType","childs":[{"name":"CHECKBOX","deprecated":false,"deprecationMessage":"","value":"checkbox"},{"name":"TEXT","deprecated":false,"deprecationMessage":"","value":"text"},{"name":"NUMBER","deprecated":false,"deprecationMessage":"","value":"number"},{"name":"SELECT","deprecated":false,"deprecationMessage":"","value":"select"},{"name":"DATE","deprecated":false,"deprecationMessage":"","value":"date"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/_main/interfaces/filters.interface.ts"},{"name":"DataFilterType","childs":[{"name":"FRONTEND","deprecated":false,"deprecationMessage":"","value":"frontend"},{"name":"BACKEND","deprecated":false,"deprecationMessage":"","value":"backend"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/_main/interfaces/filters.interface.ts"},{"name":"DialogOutlet","childs":[{"name":"CONTENT_RIGHT","deprecated":false,"deprecationMessage":"","value":"CONTENT_RIGHT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/_main/services/dialog/dialog.service.ts"},{"name":"ProjectFormStage","childs":[{"name":"GENERAL","deprecated":false,"deprecationMessage":"","value":"GENERAL"},{"name":"MEMBERS","deprecated":false,"deprecationMessage":"","value":"MEMBERS"},{"name":"INTEGRATIONS","deprecated":false,"deprecationMessage":"","value":"INTEGRATIONS"},{"name":"STATUSES","deprecated":false,"deprecationMessage":"","value":"STATUSES"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/dashboard/models/project-form-stage.enum.ts"},{"name":"RegisterStage","childs":[{"name":"IMPORTANT_DATA","deprecated":false,"deprecationMessage":""},{"name":"PERSONAL_DATA","deprecated":false,"deprecationMessage":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/auth/pages/register/register.page.ts"},{"name":"SelectionEditOperationType","childs":[{"name":"before","deprecated":false,"deprecationMessage":"","value":"BEFORE"},{"name":"after","deprecated":false,"deprecationMessage":"","value":"AFTER"},{"name":"beforeEachLine","deprecated":false,"deprecationMessage":"","value":"BEFORE_EACH_LINE"},{"name":"afterEachLine","deprecated":false,"deprecationMessage":"","value":"AFTER_EACH_LINE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts"},{"name":"TaskDialogVariant","childs":[{"name":"CREATE","deprecated":false,"deprecationMessage":"","value":"create"},{"name":"EDIT","deprecated":false,"deprecationMessage":"","value":"edit"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/tasks/dialogs/task/task.dialog.ts"},{"name":"TaskPriority","childs":[{"name":"HIGHEST","deprecated":false,"deprecationMessage":"","value":"highest"},{"name":"HIGH","deprecated":false,"deprecationMessage":"","value":"high"},{"name":"MEDIUM","deprecated":false,"deprecationMessage":"","value":"medium"},{"name":"LOW","deprecated":false,"deprecationMessage":"","value":"low"},{"name":"LOWEST","deprecated":false,"deprecationMessage":"","value":"lowest"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/tasks/enums/task-priority.enum.ts"},{"name":"TaskType","childs":[{"name":"NONE","deprecated":false,"deprecationMessage":""},{"name":"TASK","deprecated":false,"deprecationMessage":"","value":0},{"name":"USER_STORY","deprecated":false,"deprecationMessage":"","value":1},{"name":"ISSUE","deprecated":false,"deprecationMessage":"","value":2},{"name":"EPIC","deprecated":false,"deprecationMessage":"","value":3},{"name":"SUBTASK","deprecated":false,"deprecationMessage":"","value":4}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/tasks/enums/task-type.enum.ts"}],"groupedVariables":{"src/app/_main/components/button/button.stories.ts":[{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ template, config }).story()"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryPageConfig({\\n  title: \'Components/Button\',\\n  component: ButtonComponent,\\n  selector: \'app-button\',\\n  argTypes: {\\n    variant: DOCS_SELECT,\\n    type: DOCS_SELECT,\\n    icon: DOCS_ICON_SELECT,\\n    elementRef: DOCS_READONLY,\\n  },\\n})"},{"name":"Icon","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  code: `<app-button [icon]=\\"faAdd\\"></app-button>`,\\n  description: `You can set \\\\`icon\\\\` property to add icon before text in buttons. This option supports prefixes like: \\\\`mat\\\\` |\\n  \\\\`fas\\\\` | \\\\`fab\\\\` | \\\\`cu\\\\`.`,\\n  props: {\\n    icon: faAdd,\\n  },\\n}).story()"},{"name":"Pending","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  description: `To make the button show with loader you need to pass \\\\`pending\\\\` property with value: \\\\`true\\\\`.`,\\n  code: `<app-button [pending]=\\"true\\">Button</app-button>`,\\n  props: {\\n    pending: true,\\n  },\\n}).story()"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate<ButtonComponent>({ content: \'Button\' })"},{"name":"Type","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  code: `<app-button type=\\"button\\"></app-button>`,\\n  description: `If button is nested in a form, the default behavior is making this button a \\\\`submit\\\\` button. To\\n  omit this it is needed to set \\\\`type\\\\` to \\\\`button\\\\`.`,\\n  props: {\\n    type: \'button\',\\n  },\\n}).story()"},{"name":"Variant","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/button/button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  multiple: {\\n    prop: \'variant\',\\n    options: [\'primary\', \'secondary\', \'important\'],\\n  },\\n  description: `To customize the general appearance you need to use the \\\\`variant\\\\` property with one of the specified values.\\n    If you will not specify variant, the button will appear with \\\\`secondary\\\\` styling.`,\\n}).story()"}],"src/app/_main/components/card/card.stories.ts":[{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/card/card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ template, config }).story()"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/card/card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryPageConfig({\\n  title: \'Components/Card\',\\n  component: CardComponent,\\n  selector: \'app-card\',\\n})"},{"name":"content","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/card/card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"`\\n  <div class=\\"card-title\\">Sample card</div>\\n  <div class=\\"card-content\\">Little bit of content</div>\\n  <div class=\\"card-content\\">\\n    <app-button>Action</app-button>\\n  </div>\\n`"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/card/card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate({ content })"}],"src/app/_main/components/checkbox/checkbox.stories.ts":[{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/checkbox/checkbox.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ template, config }).story()"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/checkbox/checkbox.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControlStoryPageConfig({\\n  title: \'Components/Checkbox\',\\n  component: CheckboxComponent,\\n  selector: \'app-checkbox\',\\n  argTypes: {\\n    autocomplete: DOCS_SELECT,\\n  },\\n})"},{"name":"content","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/checkbox/checkbox.stories.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'Sample checkbox\'"},{"name":"formControl","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/checkbox/checkbox.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControl()"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/checkbox/checkbox.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate({ formControl, content })"}],"src/app/_main/components/input/input.stories.ts":[{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ template, config }).story()"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControlStoryPageConfig({\\n  title: \'Components/Input\',\\n  component: InputComponent,\\n  selector: \'app-input\',\\n  argTypes: {\\n    autocomplete: DOCS_SELECT,\\n    type: DOCS_SELECT,\\n  },\\n})"},{"name":"FloatingLabel","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    floatingLabel: \'Sample field\',\\n  },\\n  description: `Best way to describe field purpose is to add a \\\\`floatingLabel\\\\`. The floating label will\\n    be shown above the field if field is in focus state or when the input contains some value.`,\\n}).story()"},{"name":"formControl","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControl()"},{"name":"Hint","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    hint: \'Sample hint\',\\n  },\\n  description: `...`,\\n}).story()"},{"name":"Placeholder","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    placeholder: \'Sample placeholder\',\\n  },\\n  description: `...`,\\n}).story()"},{"name":"StaticLabel","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    staticLabel: \'Sample field\',\\n  },\\n  description: `This is the other way to show the user purpose of this field. Static label will be always displayed\\n    above the input field regardless of state and content`,\\n}).story()"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input/input.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate<InputComponent>({ formControl })"}],"src/app/_main/components/input-date-time/input-date-time.stories.ts":[{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ template, config }).story()"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControlStoryPageConfig({\\n  title: \'Components/InputDateTime\',\\n  component: InputDateTimeComponent,\\n  selector: \'app-input-date-time\',\\n  argTypes: {\\n    autocomplete: DOCS_SELECT,\\n    type: DOCS_SELECT,\\n  },\\n})"},{"name":"FloatingLabel","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    floatingLabel: \'Sample field\',\\n  },\\n  description: `Best way to describe field purpose is to add a \\\\`floatingLabel\\\\`. The floating label will\\n    be shown above the field if field is in focus state or when the input contains some value.`,\\n}).story()"},{"name":"formControl","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControl()"},{"name":"Placeholder","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    placeholder: \'Sample placeholder\',\\n  },\\n  description: `...`,\\n}).story()"},{"name":"StaticLabel","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({\\n  template,\\n  config,\\n  props: {\\n    staticLabel: \'Sample field\',\\n  },\\n  description: `This is the other way to show the user purpose of this field. Static label will be always displayed\\n    above the input field regardless of state and content`,\\n}).story()"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/input-date-time/input-date-time.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate<InputDateTimeComponent>({ formControl })"}],"src/app/_main/components/textarea/textarea.stories.ts":[{"name":"$Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/textarea/textarea.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Story({ config, template }).story()"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/textarea/textarea.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControlStoryPageConfig({\\n  title: \'Components/Textarea\',\\n  component: TextareaComponent,\\n  selector: \'app-textarea\',\\n  argTypes: {\\n    autocomplete: DOCS_SELECT,\\n    input: DOCS_READONLY,\\n    output: DOCS_READONLY,\\n  },\\n})"},{"name":"formControl","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/textarea/textarea.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new FormControl()"},{"name":"template","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/textarea/textarea.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new StoryTemplate({ formControl })"}],"src/stories/helpers/component-content-decorator.helper.ts":[{"name":"componentContentDecorator","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/component-content-decorator.helper.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(content: string) => {\\n  return componentWrapperDecorator((story) => {\\n    return setContent(story, content);\\n  });\\n}"},{"name":"exposeAllPossibilities","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/component-content-decorator.helper.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"<C = any>(\\n  story: Story<C>,\\n  selector: string,\\n  input: string,\\n  values: string[],\\n) => {\\n  const inputRegex = new RegExp(`( |)\\\\\\\\[${input}\\\\\\\\]=\\"${input}\\"`, \'g\');\\n\\n  const addInputToTemplate = (template: string, value: string) => {\\n    let valueCapital = value[0].toUpperCase() + value.substring(1);\\n    return template.replace(\'><\', ` ${input}=\\"${value}\\">${valueCapital}<`);\\n  };\\n\\n  story.decorators = [\\n    componentWrapperDecorator((story) => {\\n      const baseTemplate = story.replace(inputRegex, \'\');\\n      const inputsArray = values.map((v) => addInputToTemplate(baseTemplate, v));\\n      const template = inputsArray.join(\'\');\\n\\n      return wrapWithDiv(template);\\n    }),\\n  ];\\n\\n  story.argTypes = {\\n    [input]: {\\n      table: {\\n        disable: true,\\n      },\\n    },\\n  } as any as Partial<ArgTypes<C>>;\\n\\n  const emptyTemplate = `<${selector}></${selector}>`;\\n  const snippet = values.map((v) => addInputToTemplate(emptyTemplate, v)).join(\'\\\\n\');\\n\\n  story.parameters = {\\n    docs: {\\n      source: {\\n        code: snippet,\\n        language: \'html\',\\n        type: \'auto\',\\n      },\\n    },\\n  };\\n\\n  return story;\\n}"},{"name":"setContent","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/component-content-decorator.helper.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(template: string, content: string) => {\\n  return template.replace(/(?<=(<[^/]*))>.?<(?=\\\\/)/g, `>${content}<`);\\n}"}],"src/tests/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"src/tests/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'../\', true, /\\\\.spec\\\\.ts$/)","rawdescription":"Context for searching for tests","description":"<p>Context for searching for tests</p>\\n"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"src/tests/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type","rawdescription":"Context builder form karma tests","description":"<p>Context builder form karma tests</p>\\n"}],"src/stories/helpers/classes/form-control-story-page-config.class.ts":[{"name":"DEFAULT_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/classes/form-control-story-page-config.class.ts","deprecated":false,"deprecationMessage":"","type":"Partial<ExtendedMeta>","defaultValue":"{\\n  argTypes: {\\n    ...DOCS_PRESET_CONTROL_ACCESSOR,\\n  },\\n} as Meta"}],"src/stories/helpers/classes/story-page-config.class.ts":[{"name":"DEFAULT_METADATA","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/classes/story-page-config.class.ts","deprecated":false,"deprecationMessage":"","type":"Partial<NgModuleMetadata>","defaultValue":"{\\n  imports: [MainModule, BrowserAnimationsModule],\\n  providers: [\\n    {\\n      provide: NgControl,\\n      useClass: TestNgControl,\\n    },\\n  ],\\n}"},{"name":"IGNORED_PROPERTIES","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/classes/story-page-config.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"getAllProperties({})"}],"src/stories/helpers/arg-type.helper.ts":[{"name":"DOCS_CONTROL","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(controlType: ControlType) => ({\\n  control: {\\n    type: controlType,\\n  },\\n})"},{"name":"DOCS_GETTER","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(description: string) => ({\\n  control: {\\n    type: false,\\n  },\\n  table: {\\n    category: \'getters\',\\n  },\\n  description,\\n})"},{"name":"DOCS_ICON_SELECT","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  control: {\\n    type: \'select\',\\n  },\\n  options: Object.keys(icons),\\n  mapping: icons,\\n}"},{"name":"DOCS_PRESET_CONTROL_ACCESSOR","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  ngControl: DOCS_READONLY,\\n  required: {\\n    control: { type: false },\\n    table: { category: \'getters\', type: { summary: \'boolean\' } },\\n    description: `Property to describe if the control is required in a form (contains \\\\`requiredValidator()\\\\`)`,\\n    type: { name: \'boolean\' },\\n  },\\n  control: {\\n    control: { type: false },\\n    table: { category: \'getters\', type: { summary: \'FormControl\' } },\\n    description: `Control attached to this control accessor`,\\n    type: { name: \'FormControl\' },\\n  },\\n  formControl: {\\n    control: { type: false },\\n    table: { category: \'inputs\', type: { summary: \'FormControl\' } },\\n    description: `Control to attach to this control accessor (\\\\`formControlName\\\\` can also be used instead)`,\\n    type: { name: \'FormControl\' },\\n  },\\n  formControlName: {\\n    control: { type: false },\\n    table: { category: \'inputs\', type: { summary: \'string\' } },\\n    description: `Control to attach to this control accessor - require to be nested in \\\\`formGroup\\\\` (\\\\`formControl\\\\` can also be used instead)`,\\n    type: { name: \'string\' },\\n  },\\n}"},{"name":"DOCS_READONLY","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  control: false,\\n}"},{"name":"DOCS_REMOVE","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  table: {\\n    disable: true,\\n  },\\n}"},{"name":"DOCS_SELECT","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  control: {\\n    type: \'select\',\\n  },\\n}"},{"name":"icons","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{ none, faQuestion, faPenToSquare, faTrashArrowUp, faAdd }"},{"name":"none","ctype":"miscellaneous","subtype":"variable","file":"src/stories/helpers/arg-type.helper.ts","deprecated":false,"deprecationMessage":"","type":"null","defaultValue":"null"}],"src/app/_main/libs/marked/extensions/marked-emoji-extension.ts":[{"name":"emoji","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/marked/extensions/marked-emoji-extension.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\\n  name: \'emoji\',\\n  level: \'inline\', // This is an inline-level tokenizer\\n  start(src: string) {\\n    return src.indexOf(\':\');\\n  }, // Hint to Marked.js to stop and check for a match\\n  tokenizer(src: string, _tokens: any) {\\n    const rule = /^:(\\\\w+):/; // Regex for the complete token, anchor to string start\\n    const match = rule.exec(src);\\n\\n    const matchSequence = EMOJI_SEQUENCE_REGEX.exec(src);\\n\\n    if (matchSequence) {\\n      return {\\n        type: \'emoji\',\\n        raw: matchSequence[0],\\n        emoji: matchSequence[1],\\n        emojiType: \'sequence\',\\n      };\\n    }\\n\\n    if (match) {\\n      return {\\n        // Token to generate\\n        type: \'emoji\', // Should match \\"name\\" above\\n        raw: match[0], // Text to consume from the source\\n        emoji: match[1], // Additional custom properties\\n        emojiType: \'colon\',\\n      };\\n    }\\n\\n    return undefined;\\n  },\\n  renderer(token: EmojiToken): string {\\n    const convertFunction =\\n      token.emojiType === \'colon\' ? Emoji.emojiNameToUnicode : Emoji.characterSequenceToUnicode;\\n    const convertedEmoji = convertFunction(token.emoji);\\n\\n    return `<span class=\\"emoji\\">${convertedEmoji}</span>`;\\n  },\\n} as marked.TokenizerExtension & marked.RendererExtension","rawdescription":"Emoji extension to use with `marked` parser\\n\\nReplaces only `:smile:` notation","description":"<p>Emoji extension to use with <code>marked</code> parser</p>\\n<p>Replaces only <code>:smile:</code> notation</p>\\n"}],"src/app/_main/libs/emoji/emoji.aliases.ts":[{"name":"EMOJI_ALIASES","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/emoji/emoji.aliases.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  crush: \'1f970\',\\n  tear: \'1f972\',\\n}"}],"src/app/_main/libs/emoji/emoji-sequence.aliases.ts":[{"name":"EMOJI_SEQUENCE_ALIASES","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/emoji/emoji-sequence.aliases.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \':-)\': \'🙂\',\\n  \':)\': \'🙂\',\\n  \':-|\': \'😐\',\\n  \':|\': \'😐\',\\n  \':-(\': \'☹️\',\\n  \':(\': \'☹️\',\\n  \':-D\': \'😃\',\\n  \':D\': \'😃\',\\n  \':-p\': \'😛\',\\n  \':p\': \'😛\',\\n  \':-o\': \'😲\',\\n  \':o\': \'😲\',\\n  \';-)\': \'😉\',\\n  \';)\': \'😉\',\\n  \'<3\': \'❤️\',\\n  \'</3\': \'💔\',\\n  \'8-)\': \'😎\',\\n}"},{"name":"EMOJI_SEQUENCE_REGEX","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/emoji/emoji-sequence.aliases.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new RegExp(\\n  \'^(\' +\\n    Object.keys(EMOJI_SEQUENCE_ALIASES)\\n      .map((sequence) =>\\n        sequence\\n          .split(\'\')\\n          .map((char) => ([\')\', \'(\', \'|\'].includes(char) ? `\\\\\\\\${char}` : char))\\n          .join(\'\'),\\n      )\\n      .join(\'|\') +\\n    \')\',\\n  \'gi\',\\n)"}],"src/environments/environment.prod.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  production: true,\\n  apiURL: \'/api\',\\n  disableConsoleLog: true,\\n  version: app.version,\\n}","rawdescription":"Variant of global environment file for production.","description":"<p>Variant of global environment file for production.</p>\\n"}],"src/environments/environment.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  /**\\n   * Whether the application is running in production mode.\\n   */\\n  production: false,\\n\\n  /**\\n   * API URL for the backend.\\n   */\\n  apiURL: \'/api\',\\n\\n  /**\\n   * Whether to disable console logging.\\n   */\\n  disableConsoleLog: false,\\n\\n  /**\\n   * App version\\n   */\\n  version: app.version,\\n}","rawdescription":"Global environment configuration object, replaced in configurations other than development. Stores build specific data.","description":"<p>Global environment configuration object, replaced in configurations other than development. Stores build specific data.</p>\\n"}],"src/app/_main/components/textarea/markdown.example.ts":[{"name":"markdownExample","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/components/textarea/markdown.example.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"`\\n---\\n__Advertisement :)__\\n\\n- __[pica](https://nodeca.github.io/pica/demo/)__ - high quality and fast image\\n  resize in browser.\\n- __[babelfish](https://github.com/nodeca/babelfish/)__ - developer friendly\\n  i18n with plurals support and easy syntax.\\n\\nYou will like those projects!\\n\\n---\\n\\n# h1 Heading 8-)\\n## h2 Heading\\n### h3 Heading\\n#### h4 Heading\\n##### h5 Heading\\n###### h6 Heading\\n\\n\\n## Horizontal Rules\\n\\n___\\n\\n---\\n\\n***\\n\\n\\n## Typographic replacements\\n\\nEnable typographer option to see result.\\n\\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\\n\\ntest.. test... test..... test?..... test!....\\n\\n!!!!!! ???? ,,  -- ---\\n\\n\\"Smartypants, double quotes\\" and \'single quotes\'\\n\\n\\n## Emphasis\\n\\n**This is bold text**\\n\\n__This is bold text__\\n\\n*This is italic text*\\n\\n_This is italic text_\\n\\n~~Strikethrough~~\\n\\n\\n## Blockquotes\\n\\n\\n> Blockquotes can also be nested...\\n>> ...by using additional greater-than signs right next to each other...\\n> > > ...or with spaces between arrows.\\n\\n\\n## Lists\\n\\nUnordered\\n\\n+ Create a list by starting a line with \\\\`+\\\\`, \\\\`-\\\\`, or \\\\`*\\\\`\\n+ Sub-lists are made by indenting 2 spaces:\\n  - Marker character change forces new list start:\\n    * Ac tristique libero volutpat at\\n    + Facilisis in pretium nisl aliquet\\n    - Nulla volutpat aliquam velit\\n+ Very easy!\\n\\nOrdered\\n\\n1. Lorem ipsum dolor sit amet\\n2. Consectetur adipiscing elit\\n3. Integer molestie lorem at massa\\n\\n\\n1. You can use sequential numbers...\\n1. ...or keep all the numbers as \\\\`1.\\\\`\\n\\nStart numbering with offset:\\n\\n57. foo\\n1. bar\\n\\n\\n## Code\\n\\nInline \\\\`code\\\\`\\n\\nIndented code\\n\\n    // Some comments\\n    line 1 of code\\n    line 2 of code\\n    line 3 of code\\n\\n\\nBlock code \\"fences\\"\\n\\n\\\\`\\\\`\\\\`\\nSample text here...\\n\\\\`\\\\`\\\\`\\n\\nSyntax highlighting\\n\\n\\\\`\\\\`\\\\` js\\nvar foo = function (bar) {\\n  return bar++;\\n};\\n\\nconsole.log(foo(5));\\n\\\\`\\\\`\\\\`\\n\\n## Tables\\n\\n| Option | Description |\\n| ------ | ----------- |\\n| data   | path to data files to supply the data that will be passed into templates. |\\n| engine | engine to be used for processing templates. Handlebars is the default. |\\n| ext    | extension to be used for dest files. |\\n\\nRight aligned columns\\n\\n| Option | Description |\\n| ------:| -----------:|\\n| data   | path to data files to supply the data that will be passed into templates. |\\n| engine | engine to be used for processing templates. Handlebars is the default. |\\n| ext    | extension to be used for dest files. |\\n\\n\\n## Links\\n\\n[link text](http://dev.nodeca.com)\\n\\n[link with title](http://nodeca.github.io/pica/demo/ \\"title text!\\")\\n\\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\\n\\n\\n## Images\\n\\n![Minion](https://octodex.github.com/images/minion.png)\\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \\"The Stormtroopocat\\")\\n\\nLike links, Images also have a footnote style syntax\\n\\n![Alt text][id]\\n\\nWith a reference later in the document defining the URL location:\\n\\n[id]: https://octodex.github.com/images/dojocat.jpg  \\"The Dojocat\\"\\n\\n\\n## Plugins\\n\\nThe killer feature of \\\\`markdown-it\\\\` is very effective support of\\n[syntax plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin).\\n\\n\\n### [Emojies](https://github.com/markdown-it/markdown-it-emoji)\\n\\n> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\\n>\\n> Shortcuts (emoticons): :-) :-( 8-) ;)\\n\\nsee [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.\\n\\n\\n### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)\\n\\n- 19^th^\\n- H~2~O\\n\\n\\n### [\\\\<ins>](https://github.com/markdown-it/markdown-it-ins)\\n\\n++Inserted text++\\n\\n\\n### [\\\\<mark>](https://github.com/markdown-it/markdown-it-mark)\\n\\n==Marked text==\\n\\n\\n### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)\\n\\nFootnote 1 link[^first].\\n\\nFootnote 2 link[^second].\\n\\nInline footnote^[Text of inline footnote] definition.\\n\\nDuplicated footnote reference[^second].\\n\\n[^first]: Footnote **can have markup**\\n\\n    and multiple paragraphs.\\n\\n[^second]: Footnote text.\\n\\n\\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\\n\\nTerm 1\\n\\n:   Definition 1\\nwith lazy continuation.\\n\\nTerm 2 with *inline markup*\\n\\n:   Definition 2\\n\\n        { some code, part of Definition 2 }\\n\\n    Third paragraph of definition 2.\\n\\n_Compact style:_\\n\\nTerm 1\\n  ~ Definition 1\\n\\nTerm 2\\n  ~ Definition 2a\\n  ~ Definition 2b\\n\\n\\n### [Abbreviations](https://github.com/markdown-it/markdown-it-abbr)\\n\\nThis is HTML abbreviation example.\\n\\nIt converts \\"HTML\\", but keep intact partial entries like \\"xxxHTMLyyy\\" and so on.\\n\\n*[HTML]: Hyper Text Markup Language\\n\\n### [Custom containers](https://github.com/markdown-it/markdown-it-container)\\n\\n::: warning\\n*here be dragons*\\n:::\\n\\n`"}],"src/tests/helpers/mat-dialog-testing-provider.helper.ts":[{"name":"MatDialogTestingProvider","ctype":"miscellaneous","subtype":"variable","file":"src/tests/helpers/mat-dialog-testing-provider.helper.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatDialogModule,\\n  { provide: MAT_DIALOG_DATA, useValue: {} },\\n  { provide: MatDialogRef, useValue: {} },\\n]"}],"src/app/_main/_main.module.ts":[{"name":"ngModuleConfig","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/_main.module.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  imports: [\\n    /*=============================================\\n    =             Local dependencies              =\\n    =============================================*/\\n    CommonModule,\\n    RouterModule,\\n    ObserversModule,\\n  ],\\n  importExports: [\\n    /*=============================================\\n      =                Dependencies                 =\\n      =============================================*/\\n    FormsModule,\\n    ReactiveFormsModule,\\n    HttpClientModule,\\n    DragDropModule,\\n    PlatformModule,\\n    OverlayModule,\\n\\n    /*=============================================\\n      =              Material modules               =\\n      =============================================*/\\n    MatDialogModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTableModule,\\n    MatAutocompleteModule,\\n    MatBadgeModule,\\n    MatCheckboxModule,\\n    MatDatepickerModule,\\n    MatNativeDateModule,\\n    MatFormFieldModule,\\n    MatInputModule,\\n    MatTooltipModule,\\n    MatTabsModule,\\n    MatProgressSpinnerModule,\\n    MatSelectModule,\\n\\n    /*=============================================\\n      =              External modules               =\\n      =============================================*/\\n    FontAwesomeModule,\\n  ],\\n  declarations: [\\n    /*=============================================\\n    =         Local custom components             =\\n    =============================================*/\\n  ],\\n  exportDeclarations: [\\n    /*=============================================\\n    =         Exported custom components          =\\n    =============================================*/\\n    InputComponent,\\n    ButtonComponent,\\n    ValidationErrorPipe,\\n    AlertDialog,\\n    IconComponent,\\n    FocusInitialDirective,\\n    SidebarNavigationComponent,\\n    NavElementComponent,\\n    NavElementWorkspaceComponent,\\n    UpperNavigationComponent,\\n    SelectComponent,\\n    OptionComponent,\\n    MainViewComponent,\\n    TextareaComponent,\\n    CheckboxComponent,\\n    CardComponent,\\n    ClickStopPropagationDirective,\\n    InputDateTimeComponent,\\n    LetDirective,\\n    FiltersComponent,\\n    SnackbarComponent,\\n    SnackbarOutletComponent,\\n    MockPage,\\n    DialogOutletComponent,\\n    ViewContainerDirective,\\n    EmptyOptionsComponent,\\n    DatePickerComponent,\\n    DateTimePickerComponent,\\n    MonthPipe,\\n    DayjsPipe,\\n    YearPipe,\\n    DayjsFormatPipe,\\n    DayOfWeekPipe,\\n    DayjsPipe,\\n    DateByPreferencesPipe,\\n    TabsComponent,\\n    TabComponent,\\n    InputColorComponent,\\n    ColorComponent,\\n    LoaderComponent,\\n    ContrastColorPipe,\\n    TimePickerComponent,\\n  ],\\n  providers: [\\n    /*=============================================\\n    =              Local providers                =\\n    =============================================*/\\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\\n    MatCheckboxModule,\\n    MatDatepickerModule,\\n    /*=============================================\\n    =              Exported providers             =\\n    =============================================*/\\n    DialogService,\\n    ApiService,\\n  ],\\n}","rawdescription":"Main module configuration object","description":"<p>Main module configuration object</p>\\n"}],"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts":[{"name":"SelectionEditOperationConverter","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts","deprecated":false,"deprecationMessage":"","type":"function","defaultValue":"{\\n  [SelectionEditOperationType.before]: (editor: Editor, selection: Selection, value: string) => {\\n    return [\\n      {\\n        range: {\\n          startColumn: 1,\\n          startLineNumber: selection.startLineNumber,\\n          endColumn: 1,\\n          endLineNumber: selection.startLineNumber,\\n        },\\n        text: value,\\n      },\\n    ] as EditOperation[];\\n  },\\n  [SelectionEditOperationType.after]: (editor: Editor, selection: Selection, value: string) => {\\n    const column = (editor.getModel()?.getLineLength(selection.endLineNumber) || 0) + 1;\\n\\n    return [\\n      {\\n        range: {\\n          startColumn: column,\\n          startLineNumber: selection.endLineNumber,\\n          endColumn: column,\\n          endLineNumber: selection.endLineNumber,\\n        },\\n        text: value,\\n      },\\n    ] as EditOperation[];\\n  },\\n  [SelectionEditOperationType.beforeEachLine]: (\\n    editor: Editor,\\n    selection: Selection,\\n    value: string,\\n  ) => {\\n    const startLine = selection.startLineNumber;\\n    const endLine = selection.endLineNumber;\\n\\n    const difference = Math.abs(startLine - endLine) + 1;\\n    const offset = Math.min(startLine, endLine);\\n    const indexes = [...new Array(difference).keys()].map((k) => k + offset);\\n\\n    return indexes.map((line) => ({\\n      range: {\\n        startLineNumber: line,\\n        startColumn: 1,\\n        endLineNumber: line,\\n        endColumn: 1,\\n      },\\n      text: value,\\n    })) as EditOperation[];\\n  },\\n  [SelectionEditOperationType.afterEachLine]: (\\n    editor: Editor,\\n    selection: Selection,\\n    value: string,\\n  ) => {\\n    const model = editor.getModel();\\n    if (!model) return [];\\n\\n    const startLine = selection.startLineNumber;\\n    const endLine = selection.endLineNumber;\\n\\n    const difference = Math.abs(startLine - endLine) + 1;\\n    const offset = Math.min(startLine, endLine);\\n    const indexes = [...new Array(difference).keys()].map((k) => k + offset);\\n\\n    return indexes.map((line) => {\\n      const column = model.getLineLength(line) + 1;\\n\\n      return {\\n        range: {\\n          startLineNumber: line,\\n          startColumn: column,\\n          endLineNumber: line,\\n          endColumn: column,\\n        },\\n        text: value,\\n      } as EditOperation;\\n    });\\n  },\\n}"},{"name":"SelectionEditOperationOrder","ctype":"miscellaneous","subtype":"variable","file":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  before: 1,\\n  after: 4,\\n  beforeEachLine: 2,\\n  afterEachLine: 3,\\n}"}],"src/app/tasks/enums/task-type.enum.ts":[{"name":"TaskTypeHierarchy","ctype":"miscellaneous","subtype":"variable","file":"src/app/tasks/enums/task-type.enum.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\\n  [TaskType.NONE]: [TaskType.TASK, TaskType.EPIC, TaskType.USER_STORY, TaskType.ISSUE],\\n  [TaskType.TASK]: [TaskType.SUBTASK, TaskType.ISSUE],\\n  [TaskType.EPIC]: [TaskType.USER_STORY, TaskType.ISSUE, TaskType.TASK],\\n  [TaskType.USER_STORY]: [TaskType.SUBTASK],\\n  [TaskType.ISSUE]: [TaskType.SUBTASK],\\n  [TaskType.SUBTASK]: [],\\n} as { [key in TaskType]: TaskType[] }"}]},"groupedFunctions":{"src/app/_main/operators/apply-filters.operator.ts":[{"name":"applyFilters","file":"src/app/_main/operators/apply-filters.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"filters","deprecated":false,"deprecationMessage":"","optional":true}],"jsdoctags":[{"name":"filters","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"src/stories/helpers/functions/component-template-decorator.function.ts":[{"name":"buildPropsString","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"props","type":"Props","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"props","type":"Props","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"buildTemplate","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"selector","type":"string","deprecated":false,"deprecationMessage":""},{"name":"content","type":"string","deprecated":false,"deprecationMessage":""},{"name":"propsString","type":"string","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"selector","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"content","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"propsString","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"combinePropsString","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"propsStrings","deprecated":false,"deprecationMessage":"","dotDotDotToken":true}],"jsdoctags":[{"name":"propsStrings","deprecated":false,"deprecationMessage":"","dotDotDotToken":true,"tagName":{"text":"param"}}]},{"name":"componentTemplateDecorator","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"props","type":"Props","deprecated":false,"deprecationMessage":""},{"name":"config","type":"TemplateDecoratorConfig","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"props","type":"Props","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"config","type":"TemplateDecoratorConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"extractPropsString","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"template","type":"string","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"template","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"wrapWithDiv","file":"src/stories/helpers/functions/component-template-decorator.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"template","type":"string","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"template","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/app/_main/decorators/cache/cache.decorator.ts":[{"name":"Cache","file":"src/app/_main/decorators/cache/cache.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Decorator to cache API responses as observables.</p>\\n","args":[{"name":"options","type":"CacheOptions","deprecated":false,"deprecationMessage":"","optional":true}],"returnType":"MethodDecorator","jsdoctags":[{"name":"options","type":"CacheOptions","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"src/app/_main/operators/catch-response.operator.ts":[{"name":"catchResponse","file":"src/app/_main/operators/catch-response.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":true,"deprecationMessage":"","description":"","args":[{"name":"message","type":"string","deprecated":false,"deprecationMessage":""},{"name":"action","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"action","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/app/_main/classes/form.class.ts":[{"name":"connectFormToControl","file":"src/app/_main/classes/form.class.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"component","type":"any","deprecated":false,"deprecationMessage":""},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"component","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"validateControl","file":"src/app/_main/classes/form.class.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"validateForm","file":"src/app/_main/classes/form.class.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/app/_main/decorators/debug/debug.decorator.ts":[{"name":"Debug","file":"src/app/_main/decorators/debug/debug.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":true,"deprecationMessage":"","description":"","args":[]}],"src/app/_main/validators/email.validator.ts":[{"name":"emailValidator","file":"src/app/_main/validators/email.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if email is valid</p>\\n","args":[],"returnType":"ValidatorFn","jsdoctags":[{"tagName":{"pos":188,"end":195,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]}],"src/tests/helpers/validator-testing.helper.ts":[{"name":"expectToFail","file":"src/tests/helpers/validator-testing.helper.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"val","type":"any","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"val","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"expectToPass","file":"src/tests/helpers/validator-testing.helper.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"val","type":"any","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"val","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/stories/helpers/functions/get-all-properties.function.ts":[{"name":"getAllProperties","file":"src/stories/helpers/functions/get-all-properties.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"obj","type":"any","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"obj","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/app/dashboard/modules/integration-modules/decorators/integration-module/integration-module.decorator.ts":[{"name":"IntegrationModule","file":"src/app/dashboard/modules/integration-modules/decorators/integration-module/integration-module.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"config","type":"IntegrationModuleEntryConfig","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"config","type":"IntegrationModuleEntryConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/app/_main/libs/marked/overrides/link.override.ts":[{"name":"linkOverride","file":"src/app/_main/libs/marked/overrides/link.override.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"renderer","type":"Renderer","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"renderer","type":"Renderer","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/app/_main/validators/max-length.validator.ts":[{"name":"maxLengthValidator","file":"src/app/_main/validators/max-length.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if the length is not greater than specyfic number</p>\\n","args":[{"name":"length","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"ValidatorFn","jsdoctags":[{"name":"length","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":220,"end":227,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]}],"src/app/_main/validators/not-empty.validator.ts":[{"name":"notEmptyValidator","file":"src/app/_main/validators/not-empty.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if value was provided</p>\\n","args":[],"returnType":"ValidatorFn","jsdoctags":[{"tagName":{"pos":192,"end":199,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]}],"src/app/_main/decorators/page/page.decorator.ts":[{"name":"Page","file":"src/app/_main/decorators/page/page.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Decorator to mark component or directive as a page.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-typescript\\">(&#64;)Page()\\n(&#64;)Component({\\n  selector: &#39;app-example-page&#39;,\\n  templateUrl: &#39;./example.page.html&#39;,\\n  styleUrls: [&#39;./example.page.scss&#39;],\\n})\\nexport class CreateWorkspacePage { ... }</code></pre></div>","args":[]}],"src/app/_main/validators/password.validator.ts":[{"name":"passwordValidator","file":"src/app/_main/validators/password.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if password is valid</p>\\n","args":[],"returnType":"ValidatorFn","jsdoctags":[{"tagName":{"pos":191,"end":198,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]}],"src/app/_main/validators/required.validator.ts":[{"name":"requiredValidator","file":"src/app/_main/validators/required.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if value was provided</p>\\n","args":[],"returnType":"ValidatorFn","jsdoctags":[{"tagName":{"pos":192,"end":199,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]}],"src/app/_main/validators/same-as.validator.ts":[{"name":"sameAsValidator","file":"src/app/_main/validators/same-as.validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Validator to check if password is valid</p>\\n","args":[{"name":"compareWith","type":"string","deprecated":false,"deprecationMessage":""},{"name":"message","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"ValidatorFn","jsdoctags":[{"name":"compareWith","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":191,"end":198,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"","returnType":""}]}],"src/app/_main/decorators/service/service.decorator.ts":[{"name":"Service","file":"src/app/_main/decorators/service/service.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Decorator to mark class as a service and store theirs instances in global variable.</p>\\n","args":[]}],"src/app/_main/decorators/service-validator.decorator.ts":[{"name":"ServiceValidator","file":"src/app/_main/decorators/service-validator.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"errorValidationTree","type":"ErrorValidationTree","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"errorValidationTree","type":"ErrorValidationTree","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/app/_main/operators/loader.operator.ts":[{"name":"setLoaderMessage","file":"src/app/_main/operators/loader.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":""},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"jsdoctags":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"startLoader","file":"src/app/_main/operators/loader.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":""},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"jsdoctags":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"stopLoader","file":"src/app/_main/operators/loader.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"withLoader","file":"src/app/_main/operators/loader.operator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"loader","type":"Loader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/app/_main/classes/time-to-interaction.class.ts":[{"name":"timeToInteraction","file":"src/app/_main/classes/time-to-interaction.class.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"time","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"100"}],"jsdoctags":[{"name":"time","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"100","tagName":{"text":"param"}}]}]},"groupedEnumerations":{"src/app/_main/dialogs/alert/alert.dialog.ts":[{"name":"AlertDialogVariant","childs":[{"name":"DEFAULT","deprecated":false,"deprecationMessage":"","value":"default"},{"name":"IMPORTANT","deprecated":false,"deprecationMessage":"","value":"important"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"<p>Type of the dialog variant. Used to specify what dialog styling should be used.</p>\\n","file":"src/app/_main/dialogs/alert/alert.dialog.ts"}],"src/stories/helpers/control-type.helper.ts":[{"name":"ControlType","childs":[{"name":"SELECT","deprecated":false,"deprecationMessage":"","value":"select"},{"name":"TEXT","deprecated":false,"deprecationMessage":"","value":"text"},{"name":"BOOLEAN","deprecated":false,"deprecationMessage":"","value":"boolean"},{"name":"OBJECT","deprecated":false,"deprecationMessage":"","value":"object"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/stories/helpers/control-type.helper.ts"}],"src/app/_main/interfaces/filters.interface.ts":[{"name":"DataFilterControlType","childs":[{"name":"CHECKBOX","deprecated":false,"deprecationMessage":"","value":"checkbox"},{"name":"TEXT","deprecated":false,"deprecationMessage":"","value":"text"},{"name":"NUMBER","deprecated":false,"deprecationMessage":"","value":"number"},{"name":"SELECT","deprecated":false,"deprecationMessage":"","value":"select"},{"name":"DATE","deprecated":false,"deprecationMessage":"","value":"date"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/_main/interfaces/filters.interface.ts"},{"name":"DataFilterType","childs":[{"name":"FRONTEND","deprecated":false,"deprecationMessage":"","value":"frontend"},{"name":"BACKEND","deprecated":false,"deprecationMessage":"","value":"backend"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/_main/interfaces/filters.interface.ts"}],"src/app/_main/services/dialog/dialog.service.ts":[{"name":"DialogOutlet","childs":[{"name":"CONTENT_RIGHT","deprecated":false,"deprecationMessage":"","value":"CONTENT_RIGHT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/_main/services/dialog/dialog.service.ts"}],"src/app/dashboard/models/project-form-stage.enum.ts":[{"name":"ProjectFormStage","childs":[{"name":"GENERAL","deprecated":false,"deprecationMessage":"","value":"GENERAL"},{"name":"MEMBERS","deprecated":false,"deprecationMessage":"","value":"MEMBERS"},{"name":"INTEGRATIONS","deprecated":false,"deprecationMessage":"","value":"INTEGRATIONS"},{"name":"STATUSES","deprecated":false,"deprecationMessage":"","value":"STATUSES"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/dashboard/models/project-form-stage.enum.ts"}],"src/app/auth/pages/register/register.page.ts":[{"name":"RegisterStage","childs":[{"name":"IMPORTANT_DATA","deprecated":false,"deprecationMessage":""},{"name":"PERSONAL_DATA","deprecated":false,"deprecationMessage":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/auth/pages/register/register.page.ts"}],"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts":[{"name":"SelectionEditOperationType","childs":[{"name":"before","deprecated":false,"deprecationMessage":"","value":"BEFORE"},{"name":"after","deprecated":false,"deprecationMessage":"","value":"AFTER"},{"name":"beforeEachLine","deprecated":false,"deprecationMessage":"","value":"BEFORE_EACH_LINE"},{"name":"afterEachLine","deprecated":false,"deprecationMessage":"","value":"AFTER_EACH_LINE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts"}],"src/app/tasks/dialogs/task/task.dialog.ts":[{"name":"TaskDialogVariant","childs":[{"name":"CREATE","deprecated":false,"deprecationMessage":"","value":"create"},{"name":"EDIT","deprecated":false,"deprecationMessage":"","value":"edit"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/tasks/dialogs/task/task.dialog.ts"}],"src/app/tasks/enums/task-priority.enum.ts":[{"name":"TaskPriority","childs":[{"name":"HIGHEST","deprecated":false,"deprecationMessage":"","value":"highest"},{"name":"HIGH","deprecated":false,"deprecationMessage":"","value":"high"},{"name":"MEDIUM","deprecated":false,"deprecationMessage":"","value":"medium"},{"name":"LOW","deprecated":false,"deprecationMessage":"","value":"low"},{"name":"LOWEST","deprecated":false,"deprecationMessage":"","value":"lowest"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/tasks/enums/task-priority.enum.ts"}],"src/app/tasks/enums/task-type.enum.ts":[{"name":"TaskType","childs":[{"name":"NONE","deprecated":false,"deprecationMessage":""},{"name":"TASK","deprecated":false,"deprecationMessage":"","value":0},{"name":"USER_STORY","deprecated":false,"deprecationMessage":"","value":1},{"name":"ISSUE","deprecated":false,"deprecationMessage":"","value":2},{"name":"EPIC","deprecated":false,"deprecationMessage":"","value":3},{"name":"SUBTASK","deprecated":false,"deprecationMessage":"","value":4}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/tasks/enums/task-type.enum.ts"}]},"groupedTypeAliases":{"src/app/_main/interfaces/keyboard-key.interface.ts":[{"name":"ApplicationSelectorKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"LaunchCalculator\\" | \\"LaunchCalendar\\" | \\"LaunchContacts\\" | \\"LaunchMail\\" | \\"LaunchMediaPlayer\\" | \\"LaunchMusicPlayer\\" | \\"LaunchMyComputer\\" | \\"LaunchPhone\\" | \\"LaunchScreenSaver\\" | \\"LaunchSpreadsheet\\" | \\"LaunchWebBrowser\\" | \\"LaunchWebCam\\" | \\"LaunchWordProcessor\\" | \\"LaunchApplication1\\" | \\"LaunchApplication2\\" | \\"LaunchApplication3\\" | \\"LaunchApplication4\\" | \\"LaunchApplication5\\" | \\"LaunchApplication6\\" | \\"LaunchApplication7\\" | \\"LaunchApplication8\\" | \\"LaunchApplication9\\" | \\"LaunchApplication10\\" | \\"LaunchApplication11\\" | \\"LaunchApplication12\\" | \\"LaunchApplication13\\" | \\"LaunchApplication14\\" | \\"LaunchApplication15\\" | \\"LaunchApplication16\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"BrowserControlKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"BrowserBack\\" | \\"BrowserFavorites\\" | \\"BrowserForward\\" | \\"BrowserHome\\" | \\"BrowserRefresh\\" | \\"BrowserSearch\\" | \\"BrowserStop\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"DeviceKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"BrightnessDown\\" | \\"BrightnessUp\\" | \\"Eject\\" | \\"LogOff\\" | \\"Power\\" | \\"PowerOff\\" | \\"PrintScreen\\" | \\"Hibernate\\" | \\"Standby\\" | \\"WakeUp\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"DocumentKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Close\\" | \\"New\\" | \\"Open\\" | \\"Print\\" | \\"Save\\" | \\"SpellCheck\\" | \\"MailForward\\" | \\"MailReply\\" | \\"MailSend\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"EditingKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Backspace\\" | \\"Clear\\" | \\"Copy\\" | \\"CrSel\\" | \\"Cut\\" | \\"Delete\\" | \\"EraseEof\\" | \\"ExSel\\" | \\"Insert\\" | \\"Paste\\" | \\"Redo\\" | \\"Undo\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"FunctionKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"F1\\" | \\"F2\\" | \\"F3\\" | \\"F4\\" | \\"F5\\" | \\"F6\\" | \\"F7\\" | \\"F8\\" | \\"F9\\" | \\"F10\\" | \\"F11\\" | \\"F12\\" | \\"F13\\" | \\"F14\\" | \\"F15\\" | \\"F16\\" | \\"F17\\" | \\"F18\\" | \\"F19\\" | \\"F20\\" | \\"Soft1\\" | \\"Soft2\\" | \\"Soft3\\" | \\"Soft4\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"IMECompositionKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"AllCandidates\\" | \\"Alphanumeric\\" | \\"CodeInput\\" | \\"Compose\\" | \\"Convert\\" | \\"Dead\\" | \\"FinalMode\\" | \\"GroupFirst\\" | \\"GroupLast\\" | \\"GroupNext\\" | \\"GroupPrevious\\" | \\"ModeChange\\" | \\"NextCandidate\\" | \\"NonConvert\\" | \\"PreviousCandidate\\" | \\"Process\\" | \\"SingleCandidate\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"KeyboardKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"SpecialValueKey | ModifierKeys | WhitespaceKeys | NavigationKeys | EditingKeys | UIKeys | DeviceKeys | IMECompositionKeys | LinuxDeadKeys | FunctionKeys | PhoneKeys | MultimediaKeys | TVControlKeys | MediaControllerKeys | SpeechRecognitionKeys | DocumentKeys | ApplicationSelectorKeys | BrowserControlKeys | NumericKeypadKeys | UpperAlpha | LowerAlpha | KoreanKeyboardsOnly","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"KoreanKeyboardsOnly","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"HangulMode\\" | \\"HanjaMode\\" | \\"JunjaMode\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"LinuxDeadKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"GDK_KEY_dead_grave\\" | \\"GDK_KEY_dead_acute\\" | \\"GDK_KEY_dead_circumflex\\" | \\"GDK_KEY_dead_tilde\\" | \\"GDK_KEY_dead_perispomeni\\" | \\"GDK_KEY_dead_macron\\" | \\"GDK_KEY_dead_breve\\" | \\"GDK_KEY_dead_abovedot\\" | \\"GDK_KEY_dead_diaeresis\\" | \\"GDK_KEY_dead_abovering\\" | \\"GDK_KEY_dead_doubleacute\\" | \\"GDK_KEY_dead_caron\\" | \\"GDK_KEY_dead_cedilla\\" | \\"GDK_KEY_dead_ogonek\\" | \\"GDK_KEY_dead_iota\\" | \\"GDK_KEY_dead_voiced_sound\\" | \\"GDK_KEY_dead_semivoiced_sound\\" | \\"GDK_KEY_dead_belowdot\\" | \\"GDK_KEY_dead_hook\\" | \\"GDK_KEY_dead_horn\\" | \\"GDK_KEY_dead_stroke\\" | \\"GDK_KEY_dead_abovecomma\\" | \\"GDK_KEY_dead_psili\\" | \\"GDK_KEY_dead_abovereversedcomma\\" | \\"GDK_KEY_dead_dasia\\" | \\"GDK_KEY_dead_doublegrave\\" | \\"GDK_KEY_dead_belowring\\" | \\"GDK_KEY_dead_belowmacron\\" | \\"GDK_KEY_dead_belowcircumflex\\" | \\"GDK_KEY_dead_belowtilde\\" | \\"GDK_KEY_dead_belowbreve\\" | \\"GDK_KEY_dead_belowdiaeresis\\" | \\"GDK_KEY_dead_invertedbreve\\" | \\"GDK_KEY_dead_belowcomma\\" | \\"GDK_KEY_dead_currency\\" | \\"GDK_KEY_dead_a\\" | \\"GDK_KEY_dead_A\\" | \\"GDK_KEY_dead_e\\" | \\"GDK_KEY_dead_E\\" | \\"GDK_KEY_dead_i\\" | \\"GDK_KEY_dead_I\\" | \\"GDK_KEY_dead_o\\" | \\"GDK_KEY_dead_O\\" | \\"GDK_KEY_dead_u\\" | \\"GDK_KEY_dead_U\\" | \\"GDK_KEY_dead_small_schwa\\" | \\"GDK_KEY_dead_capital_schwa\\" | \\"GDK_KEY_dead_greek\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"LowerAlpha","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"a\\" | \\"b\\" | \\"c\\" | \\"d\\" | \\"e\\" | \\"f\\" | \\"g\\" | \\"h\\" | \\"i\\" | \\"j\\" | \\"k\\" | \\"l\\" | \\"m\\" | \\"n\\" | \\"o\\" | \\"p\\" | \\"q\\" | \\"r\\" | \\"s\\" | \\"t\\" | \\"u\\" | \\"v\\" | \\"w\\" | \\"x\\" | \\"y\\" | \\"z\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"MediaControllerKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"AVRInput\\" | \\"AVRPower\\" | \\"ColorF0Red\\" | \\"ColorF1Green\\" | \\"ColorF2Yellow\\" | \\"ColorF3Blue\\" | \\"ColorF4Grey\\" | \\"ColorF5Brown\\" | \\"ClosedCaptionToggle\\" | \\"Dimmer\\" | \\"DisplaySwap\\" | \\"DVR\\" | \\"Exit\\" | \\"FavoriteClear0\\" | \\"FavoriteClear1\\" | \\"FavoriteClear2\\" | \\"FavoriteClear3\\" | \\"FavoriteRecall0\\" | \\"FavoriteRecall1\\" | \\"FavoriteRecall2\\" | \\"FavoriteRecall3\\" | \\"FavoriteStore0\\" | \\"FavoriteStore1\\" | \\"FavoriteStore2\\" | \\"FavoriteStore3\\" | \\"Guide\\" | \\"GuideNextDay\\" | \\"GuidePreviousDay\\" | \\"Info\\" | \\"InstantReplay\\" | \\"Link\\" | \\"ListProgram\\" | \\"LiveContent\\" | \\"Lock\\" | \\"MediaApps\\" | \\"MediaAudioTrack\\" | \\"MediaLast\\" | \\"MediaSkipBackward\\" | \\"MediaSkipForward\\" | \\"MediaStepBackward\\" | \\"MediaStepForward\\" | \\"MediaTopMenu\\" | \\"NavigateIn\\" | \\"NavigateNext\\" | \\"NavigateOut\\" | \\"NavigatePrevious\\" | \\"NextFavoriteChannel\\" | \\"NextUserProfile\\" | \\"OnDemand\\" | \\"Pairing\\" | \\"PinPDown\\" | \\"PinPMove\\" | \\"PinPToggle\\" | \\"PinPUp\\" | \\"PlaySpeedDown\\" | \\"PlaySpeedReset\\" | \\"PlaySpeedUp\\" | \\"RandomToggle\\" | \\"RcLowBattery\\" | \\"RecordSpeedNext\\" | \\"RfBypass\\" | \\"ScanChannelsToggle\\" | \\"ScreenModeNext\\" | \\"Settings\\" | \\"SplitScreenToggle\\" | \\"STBInput\\" | \\"STBPower\\" | \\"Subtitle\\" | \\"Teletext\\" | \\"VideoModeNext\\" | \\"Wink\\" | \\"ZoomToggle\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"ModifierKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Alt\\" | \\"AltGraph\\" | \\"CapsLock\\" | \\"Control\\" | \\"Fn\\" | \\"FnLock\\" | \\"Hyper\\" | \\"Meta\\" | \\"NumLock\\" | \\"ScrollLock\\" | \\"Shift\\" | \\"Super\\" | \\"Symbol\\" | \\"SymbolLock\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"MultimediaKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"ChannelDown\\" | \\"ChannelUp\\" | \\"MediaFastForward\\" | \\"MediaPause\\" | \\"MediaPlay\\" | \\"MediaPlayPause\\" | \\"MediaRecord\\" | \\"MediaRewind\\" | \\"MediaStop\\" | \\"MediaTrackNext\\" | \\"MediaTrackPrevious\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"NavigationKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"ArrowDown\\" | \\"ArrowLeft\\" | \\"ArrowRight\\" | \\"ArrowUp\\" | \\"End\\" | \\"Home\\" | \\"PageDown\\" | \\"PageUp\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"NumericKeypadKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Decimal\\" | \\"Key11\\" | \\"Key12\\" | \\"Multiply\\" | \\"Add\\" | \\"Clear\\" | \\"Divide\\" | \\"Subtract\\" | \\"Separator\\" | \\"0\\" | \\"1\\" | \\"2\\" | \\"3\\" | \\"4\\" | \\"5\\" | \\"6\\" | \\"7\\" | \\"8\\" | \\"9\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"PhoneKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"AppSwitch\\" | \\"Call\\" | \\"Camera\\" | \\"CameraFocus\\" | \\"EndCall\\" | \\"GoBack\\" | \\"GoHome\\" | \\"HeadsetHook\\" | \\"LastNumberRedial\\" | \\"Notification\\" | \\"MannerMode\\" | \\"VoiceDial\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"SpecialValueKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":195},{"name":"SpeechRecognitionKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"SpeechCorrectionList\\" | \\"SpeechInputToggle\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"TVControlKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"TV\\" | \\"TV3DMode\\" | \\"TVAntennaCable\\" | \\"TVAudioDescription\\" | \\"TVAudioDescriptionMixDown\\" | \\"TVAudioDescriptionMixUp\\" | \\"TVContentsMenu\\" | \\"TVDataService\\" | \\"TVInput\\" | \\"TVInputComponent1\\" | \\"TVInputComponent2\\" | \\"TVInputComposite1\\" | \\"TVInputComposite2\\" | \\"TVInputHDMI1\\" | \\"TVInputHDMI2\\" | \\"TVInputHDMI3\\" | \\"TVInputHDMI4\\" | \\"TVInputVGA1\\" | \\"TVMediaContext\\" | \\"TVNetwork\\" | \\"TVNumberEntry\\" | \\"TVPower\\" | \\"TVRadioService\\" | \\"TVSatellite\\" | \\"TVSatelliteBS\\" | \\"TVSatelliteCS\\" | \\"TVSatelliteToggle\\" | \\"TVTerrestrialAnalog\\" | \\"TVTerrestrialDigital\\" | \\"TVTimer\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"UIKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Accept\\" | \\"Again\\" | \\"Attn\\" | \\"Cancel\\" | \\"ContextMenu\\" | \\"Escape\\" | \\"Execute\\" | \\"Find\\" | \\"Finish\\" | \\"Help\\" | \\"Pause\\" | \\"Play\\" | \\"Props\\" | \\"Select\\" | \\"ZoomIn\\" | \\"ZoomOut\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"UpperAlpha","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"A\\" | \\"B\\" | \\"C\\" | \\"D\\" | \\"E\\" | \\"F\\" | \\"G\\" | \\"H\\" | \\"I\\" | \\"J\\" | \\"K\\" | \\"L\\" | \\"M\\" | \\"N\\" | \\"O\\" | \\"P\\" | \\"Q\\" | \\"R\\" | \\"S\\" | \\"T\\" | \\"U\\" | \\"V\\" | \\"W\\" | \\"X\\" | \\"Y\\" | \\"Z\\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"WhitespaceKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"Enter\\" | \\"Tab\\" | \\" \\"","file":"src/app/_main/interfaces/keyboard-key.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}],"src/app/_main/interfaces/color.interface.ts":[{"name":"color","ctype":"miscellaneous","subtype":"typealias","rawtype":"number","file":"src/app/_main/interfaces/color.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":146}],"src/app/_main/libs/monaco/typings.ts":[{"name":"CursorStateComputer","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.editor.ICursorStateComputer","file":"src/app/_main/libs/monaco/typings.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"EditOperation","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.editor.IIdentifiedSingleEditOperation","file":"src/app/_main/libs/monaco/typings.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"Editor","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.editor.IStandaloneCodeEditor","file":"src/app/_main/libs/monaco/typings.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"Selection","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.Selection","file":"src/app/_main/libs/monaco/typings.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177}],"src/app/_main/interfaces/date.interface.ts":[{"name":"dateISOString","ctype":"miscellaneous","subtype":"typealias","rawtype":"string","file":"src/app/_main/interfaces/date.interface.ts","deprecated":false,"deprecationMessage":"","description":"<p>date format like: YYYY-MM-DDTHH:mm:ss.sssZ</p>\\n<p>For example: <code>2011-10-05T14:48:00.000Z</code></p>\\n","kind":149},{"name":"unixTimestamp","ctype":"miscellaneous","subtype":"typealias","rawtype":"number","file":"src/app/_main/interfaces/date.interface.ts","deprecated":false,"deprecationMessage":"","description":"<p>It is the number of milliseconds that have elapsed since the Unix epoch, excluding leap seconds. The Unix epoch is 00:00:00 UTC on 1 January 1970.</p>\\n<p>For example: <code>1662158033</code></p>\\n","kind":146}],"src/app/_main/components/input-date-time/date-picker.model.ts":[{"name":"DaysGrid","ctype":"miscellaneous","subtype":"typealias","rawtype":"CalendarDay[][]","file":"src/app/_main/components/input-date-time/date-picker.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":182}],"src/app/_main/classes/monaco-extended.class.ts":[{"name":"EditOperation","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.editor.IIdentifiedSingleEditOperation","file":"src/app/_main/classes/monaco-extended.class.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"MonacoEditor","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.editor.IStandaloneCodeEditor","file":"src/app/_main/classes/monaco-extended.class.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"Selection","ctype":"miscellaneous","subtype":"typealias","rawtype":"monaco.Selection","file":"src/app/_main/classes/monaco-extended.class.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177}],"src/app/_main/interfaces/http-error.interface.ts":[{"name":"ErrorCodes","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/app/_main/interfaces/http-error.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":194},{"name":"Errors","ctype":"miscellaneous","subtype":"typealias","rawtype":"T","file":"src/app/_main/interfaces/http-error.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177}],"src/app/_main/interfaces/filters.interface.ts":[{"name":"Filter","ctype":"miscellaneous","subtype":"typealias","rawtype":"FilterCheckbox<any> | FilterText | FilterNumber | FilterSelect<any>","file":"src/app/_main/interfaces/filters.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"FilterType","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/app/_main/interfaces/filters.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":193}],"src/app/_main/interfaces/json-parsable.interface.ts":[{"name":"JSONPrimitive","ctype":"miscellaneous","subtype":"typealias","rawtype":"string | number | boolean | undefined | null","file":"src/app/_main/interfaces/json-parsable.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}],"src/stories/helpers/classes/story.class.ts":[{"name":"Props","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/stories/helpers/classes/story.class.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/tasks/interfaces/schedule.interface.ts":[{"name":"Schedule","ctype":"miscellaneous","subtype":"typealias","rawtype":"SinglePersonSchedule[]","file":"src/app/tasks/interfaces/schedule.interface.ts","deprecated":false,"deprecationMessage":"","description":"","kind":182}],"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts":[{"name":"SelectionEditOperation","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts","deprecated":false,"deprecationMessage":"","description":"","kind":194}]}},"routes":{"name":"<root>","kind":"module","className":"AppModule","children":[{"name":"routes","filename":"src/app/app.routing.ts","module":"AppRoutingModule","children":[{"path":"auth","loadChildren":"./auth/auth.module#AuthModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/auth/auth.routing.ts","module":"AuthRoutingModule","children":[{"path":"login","component":"LoginPage"},{"path":"logout","component":"LoginPage"},{"path":"register","component":"RegisterPage"},{"path":"password-reset","component":"ForgotPasswordPage"},{"path":"set-new-password","component":"ChangePasswordPage"},{"path":"restore-account","component":"RestoreAccountPage"},{"path":"delete-account","component":"DeleteAccountPage"}],"kind":"module"}],"module":"AuthModule"}]},{"path":"landing-page","component":"LandingPageComponent"},{"path":"","component":"MainViewComponent","canActivate":["LoggedInUsersGuard"],"children":[{"path":"email","loadChildren":"./emails/emails.module#EmailsModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/emails/emails.routing.ts","module":"EmailsRoutingModule","children":[{"path":"","pathMatch":"full","component":"MockPage","data":{"image":"assets/mocks/inbox.svg"}}],"kind":"module"}],"module":"EmailsModule"}]},{"path":"calendar","loadChildren":"./calendar/calendar.module#CalendarModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/calendar/calendar.routing.ts","module":"CalendarRoutingModule","children":[{"path":"","component":"CalendarPage"}],"kind":"module"}],"module":"CalendarModule"}]},{"path":"messages","loadChildren":"./messages/messages.module#MessagesModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/messages/messages.routing.ts","module":"MessagesRoutingModule","children":[{"path":"","pathMatch":"full","component":"MockPage","data":{"image":"assets/mocks/messages.svg"}}],"kind":"module"}],"module":"MessagesModule"}]},{"path":"","loadChildren":"./dashboard/dashboard.module#DashboardModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/dashboard/dashboard.routing.ts","module":"DashboardRoutingModule","children":[{"path":"","pathMatch":"full","component":"WorkspacesListPage"},{"path":"settings","loadChildren":"../settings/settings.module#SettingsModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/settings/settings.routing.ts","module":"SettingsRoutingModule","children":[{"path":"","component":"SettingsPage","children":[{"path":"account","component":"SettingsAccountPage"},{"path":"localization","component":"SettingsLocalizationPage"},{"path":"integrations","component":"SettingsIntegrationsPage"},{"path":"sessions","component":"SettingsSessionsPage"}]}],"kind":"module"}],"module":"SettingsModule"}]},{"path":"github","component":"GithubIntegrationPage","data":{"hideNavigation":true}},{"path":"dashboard","component":"MockPage","data":{"image":"assets/mocks/dashboard.svg"}},{"path":"create","component":"CreateWorkspacePage"},{"path":":workspaceId","children":[{"path":"edit","component":"EditWorkspacePage"},{"path":"","pathMatch":"full","component":"ProjectsListPage"},{"path":"create","component":"CreateProjectPage"},{"path":":projectId/edit","component":"EditProjectPage"},{"path":":projectId","loadChildren":"../tasks/tasks.module#TasksModule"}]}],"kind":"module"}],"module":"DashboardModule"}]}]}],"kind":"module"}]},"coverage":{"count":15,"status":"low","files":[{"filePath":"src/app/_main/_main.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ngModuleConfig","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/_main/classes/color/color.utils.ts","type":"class","linktype":"classe","name":"ColorUtils","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/_main/classes/control-accessor.class.ts","type":"component","linktype":"component","name":"ControlAccessor","coveragePercent":61,"coverageCount":"8/13","status":"good"},{"filePath":"src/app/_main/classes/dialog-ref.class.ts","type":"class","linktype":"classe","name":"DialogRef","coveragePercent":62,"coverageCount":"10/16","status":"good"},{"filePath":"src/app/_main/classes/e-set.class.ts","type":"class","linktype":"classe","name":"ESet","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/_main/classes/enum.class.ts","type":"class","linktype":"classe","name":"Enum","coveragePercent":100,"coverageCount":"5/5","status":"very-good"},{"filePath":"src/app/_main/classes/filters.class.ts","type":"class","linktype":"classe","name":"Filters","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/_main/classes/form.class.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"connectFormToControl","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/classes/form.class.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"validateControl","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/classes/form.class.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"validateForm","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/classes/loader/loader-options.interface.ts","type":"interface","linktype":"interface","name":"LoaderOptions","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/_main/classes/loader/loader.class.ts","type":"class","linktype":"classe","name":"Loader","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/_main/classes/monaco-extended.class.ts","type":"class","linktype":"classe","name":"MonacoExtended","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/_main/classes/monaco-extended.class.ts","type":"interface","linktype":"interface","name":"SelectionEditOperation","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/_main/classes/persistent-map.class.ts","type":"class","linktype":"classe","name":"PersistentMap","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/_main/classes/persistent-map.class.ts","type":"interface","linktype":"interface","name":"PersistentMapOptions","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/_main/classes/random.class.ts","type":"class","linktype":"classe","name":"Random","coveragePercent":50,"coverageCount":"4/8","status":"medium"},{"filePath":"src/app/_main/classes/time-to-interaction.class.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"timeToInteraction","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/classes/util/utils.class.ts","type":"class","linktype":"classe","name":"Utils","coveragePercent":100,"coverageCount":"6/6","status":"very-good"},{"filePath":"src/app/_main/components/button/button.component.ts","type":"component","linktype":"component","name":"ButtonComponent","coveragePercent":100,"coverageCount":"7/7","status":"very-good"},{"filePath":"src/app/_main/components/button/button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"$Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/button/button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"config","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/button/button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Icon","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/button/button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Pending","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/button/button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/button/button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Type","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/button/button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Variant","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/card/card.component.ts","type":"component","linktype":"component","name":"CardComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/_main/components/card/card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"$Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/card/card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"config","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/card/card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"content","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/card/card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/checkbox/checkbox.component.ts","type":"component","linktype":"component","name":"CheckboxComponent","coveragePercent":50,"coverageCount":"6/12","status":"medium"},{"filePath":"src/app/_main/components/checkbox/checkbox.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"$Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/checkbox/checkbox.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"config","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/checkbox/checkbox.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"content","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/checkbox/checkbox.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"formControl","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/checkbox/checkbox.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/color/color.component.ts","type":"component","linktype":"component","name":"ColorComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/components/dialog-outlet/dialog-outlet.component.ts","type":"component","linktype":"component","name":"DialogOutletComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/_main/components/filters/filters.component.ts","type":"component","linktype":"component","name":"FiltersComponent","coveragePercent":27,"coverageCount":"5/18","status":"medium"},{"filePath":"src/app/_main/components/icon/icon.component.ts","type":"component","linktype":"component","name":"IconComponent","coveragePercent":100,"coverageCount":"8/8","status":"very-good"},{"filePath":"src/app/_main/components/input-color/input-color.component.ts","type":"component","linktype":"component","name":"InputColorComponent","coveragePercent":35,"coverageCount":"6/17","status":"medium"},{"filePath":"src/app/_main/components/input-date-time/date-picker.model.ts","type":"interface","linktype":"interface","name":"CalendarDay","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/_main/components/input-date-time/date-picker/date-picker.component.ts","type":"component","linktype":"component","name":"DatePickerComponent","coveragePercent":18,"coverageCount":"5/27","status":"low"},{"filePath":"src/app/_main/components/input-date-time/date-time-picker/date-time-picker.component.ts","type":"component","linktype":"component","name":"DateTimePickerComponent","coveragePercent":50,"coverageCount":"6/12","status":"medium"},{"filePath":"src/app/_main/components/input-date-time/input-date-time.component.ts","type":"component","linktype":"component","name":"InputDateTimeComponent","coveragePercent":17,"coverageCount":"5/28","status":"low"},{"filePath":"src/app/_main/components/input-date-time/input-date-time.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"$Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input-date-time/input-date-time.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"config","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input-date-time/input-date-time.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"FloatingLabel","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input-date-time/input-date-time.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"formControl","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input-date-time/input-date-time.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Placeholder","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input-date-time/input-date-time.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"StaticLabel","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input-date-time/input-date-time.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input-date-time/time-picker/time-picker.component.ts","type":"component","linktype":"component","name":"TimePickerComponent","coveragePercent":21,"coverageCount":"5/23","status":"low"},{"filePath":"src/app/_main/components/input/input.component.ts","type":"component","linktype":"component","name":"InputComponent","coveragePercent":50,"coverageCount":"12/24","status":"medium"},{"filePath":"src/app/_main/components/input/input.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"$Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input/input.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"config","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input/input.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"FloatingLabel","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input/input.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"formControl","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input/input.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Hint","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input/input.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Placeholder","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input/input.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"StaticLabel","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/input/input.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/loader/loader.component.ts","type":"component","linktype":"component","name":"LoaderComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/_main/components/main-view/main-view.component.ts","type":"component","linktype":"component","name":"MainViewComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts","type":"component","linktype":"component","name":"NavElementWorkspaceComponent","coveragePercent":0,"coverageCount":"0/22","status":"low"},{"filePath":"src/app/_main/components/nav-element/nav-element.component.ts","type":"component","linktype":"component","name":"NavElementComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/_main/components/select/empty-options/empty-options.component.ts","type":"component","linktype":"component","name":"EmptyOptionsComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/_main/components/select/option/option.component.ts","type":"component","linktype":"component","name":"OptionComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/_main/components/select/select-label.model.ts","type":"interface","linktype":"interface","name":"SelectLabel","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/components/select/select.component.ts","type":"component","linktype":"component","name":"SelectComponent","coveragePercent":21,"coverageCount":"7/33","status":"low"},{"filePath":"src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts","type":"component","linktype":"component","name":"SidebarNavigationComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts","type":"component","linktype":"component","name":"SnackbarOutletComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/components/snackbar/snackbar.component.ts","type":"component","linktype":"component","name":"SnackbarComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/_main/components/snackbar/snackbar.interface.ts","type":"interface","linktype":"interface","name":"SnackbarData","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/components/tabs/tab/tab.component.ts","type":"component","linktype":"component","name":"TabComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/tabs/tabs.component.ts","type":"component","linktype":"component","name":"TabsComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/textarea/markdown.example.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"markdownExample","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/textarea/textarea.component.ts","type":"component","linktype":"component","name":"TextareaComponent","coveragePercent":29,"coverageCount":"10/34","status":"medium"},{"filePath":"src/app/_main/components/textarea/textarea.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"$Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/textarea/textarea.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"config","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/textarea/textarea.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"formControl","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/textarea/textarea.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/components/upper-navigation/upper-navigation.component.ts","type":"component","linktype":"component","name":"UpperNavigationComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"src/app/_main/decorators/cache/cache.decorator.ts","type":"interface","linktype":"interface","name":"CacheOptions","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/_main/decorators/cache/cache.decorator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"Cache","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/_main/decorators/debug/debug.decorator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"Debug","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/decorators/page/page.decorator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"Page","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/_main/decorators/service-validator.decorator.ts","type":"interface","linktype":"interface","name":"ErrorValidationTree","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/decorators/service-validator.decorator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"ServiceValidator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/decorators/service/service.decorator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"Service","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/_main/dialogs/alert/alert.dialog.ts","type":"component","linktype":"component","name":"AlertDialog","coveragePercent":100,"coverageCount":"8/8","status":"very-good"},{"filePath":"src/app/_main/dialogs/alert/alert.dialog.ts","type":"interface","linktype":"interface","name":"AlertDialogData","coveragePercent":100,"coverageCount":"6/6","status":"very-good"},{"filePath":"src/app/_main/directives/click-stop-propagation/click-stop-propagation.directive.ts","type":"directive","linktype":"directive","name":"ClickStopPropagationDirective","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/_main/directives/focus-initial/focus-initial.directive.ts","type":"directive","linktype":"directive","name":"FocusInitialDirective","coveragePercent":100,"coverageCount":"3/3","status":"very-good"},{"filePath":"src/app/_main/directives/let/let.directive.ts","type":"directive","linktype":"directive","name":"LetDirective","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/directives/let/let.directive.ts","type":"interface","linktype":"interface","name":"LetContext","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/_main/directives/view-container/view-container.directive.ts","type":"directive","linktype":"directive","name":"ViewContainerDirective","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/_main/interceptors/error.interceptor.ts","type":"interceptor","linktype":"interceptor","name":"ErrorInterceptor","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/_main/interfaces/filters.interface.ts","type":"interface","linktype":"interface","name":"DataFilter","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/_main/interfaces/filters.interface.ts","type":"interface","linktype":"interface","name":"DataFilterDisplay","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/interfaces/filters.interface.ts","type":"interface","linktype":"interface","name":"FilterBase","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/interfaces/filters.interface.ts","type":"interface","linktype":"interface","name":"FilterCheckbox","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/_main/interfaces/filters.interface.ts","type":"interface","linktype":"interface","name":"FilterNumber","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/_main/interfaces/filters.interface.ts","type":"interface","linktype":"interface","name":"FilterSelect","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/interfaces/filters.interface.ts","type":"interface","linktype":"interface","name":"FilterText","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/_main/interfaces/http-error.interface.ts","type":"interface","linktype":"interface","name":"ErrorCodesMap","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/interfaces/http-error.interface.ts","type":"interface","linktype":"interface","name":"HTTPError","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/_main/interfaces/integration-module.interface.ts","type":"interface","linktype":"interface","name":"IntegrationModuleEntry","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/_main/interfaces/integration-module.interface.ts","type":"interface","linktype":"interface","name":"IntegrationModuleEntryConfig","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/_main/interfaces/json-parsable.interface.ts","type":"interface","linktype":"interface","name":"JSONParsable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/interfaces/json-parsable.interface.ts","type":"interface","linktype":"interface","name":"JSONParsed","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/interfaces/request-options.interface.ts","type":"interface","linktype":"interface","name":"RequestOptions","coveragePercent":90,"coverageCount":"9/10","status":"very-good"},{"filePath":"src/app/_main/interfaces/validation-error.interface.ts","type":"interface","linktype":"interface","name":"ValidationError","coveragePercent":100,"coverageCount":"3/3","status":"very-good"},{"filePath":"src/app/_main/libs/emoji/emoji-sequence.aliases.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"EMOJI_SEQUENCE_ALIASES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/libs/emoji/emoji-sequence.aliases.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"EMOJI_SEQUENCE_REGEX","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/libs/emoji/emoji.aliases.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"EMOJI_ALIASES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/libs/emoji/emoji.lib.ts","type":"class","linktype":"classe","name":"Emoji","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/_main/libs/marked/extensions/marked-emoji-extension.ts","type":"interface","linktype":"interface","name":"EmojiToken","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/_main/libs/marked/extensions/marked-emoji-extension.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"emoji","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/_main/libs/marked/marked.lib.ts","type":"class","linktype":"classe","name":"Marked","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/libs/marked/overrides/link.override.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"linkOverride","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/libs/monaco/monaco.lib.ts","type":"class","linktype":"classe","name":"Monaco","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts","type":"class","linktype":"classe","name":"SelectionEditPlugin","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectionEditOperationConverter","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectionEditOperationOrder","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/operators/apply-filters.operator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"applyFilters","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/operators/catch-response.operator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"catchResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/operators/loader.operator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"setLoaderMessage","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/operators/loader.operator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"startLoader","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/operators/loader.operator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"stopLoader","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/operators/loader.operator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"withLoader","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/pages/mock/mock.page.ts","type":"component","linktype":"component","name":"MockPage","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/_main/pipes/contrast-color/contrast-color.pipe.ts","type":"pipe","linktype":"pipe","name":"ContrastColorPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/pipes/date-by-preferences/date-by-preferences.pipe.ts","type":"pipe","linktype":"pipe","name":"DateByPreferencesPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/pipes/day-of-week/day-of-week.pipe.ts","type":"pipe","linktype":"pipe","name":"DayOfWeekPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/pipes/dayjs-format/dayjs-format.pipe.ts","type":"pipe","linktype":"pipe","name":"DayjsFormatPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/pipes/dayjs/dayjs.pipe.ts","type":"pipe","linktype":"pipe","name":"DayjsPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/pipes/month/month.pipe.ts","type":"pipe","linktype":"pipe","name":"MonthPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/pipes/validation-error/validation-error.pipe.ts","type":"pipe","linktype":"pipe","name":"ValidationErrorPipe","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/_main/pipes/year/year.pipe.ts","type":"pipe","linktype":"pipe","name":"YearPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/_main/services/api/api.service.ts","type":"injectable","linktype":"injectable","name":"ApiService","coveragePercent":90,"coverageCount":"9/10","status":"very-good"},{"filePath":"src/app/_main/services/base/base.service.ts","type":"class","linktype":"classe","name":"BaseService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/_main/services/dialog/dialog.service.ts","type":"injectable","linktype":"injectable","name":"DialogService","coveragePercent":38,"coverageCount":"5/13","status":"medium"},{"filePath":"src/app/_main/services/router-extensions/router-extensions.service.ts","type":"injectable","linktype":"injectable","name":"RouterExtensionsService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/_main/services/snackbar/snackbar.service.ts","type":"injectable","linktype":"injectable","name":"SnackbarService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/_main/validators/email.validator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"emailValidator","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/_main/validators/max-length.validator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"maxLengthValidator","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/_main/validators/not-empty.validator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"notEmptyValidator","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/_main/validators/password.validator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"passwordValidator","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/_main/validators/required.validator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"requiredValidator","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/_main/validators/same-as.validator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"sameAsValidator","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":66,"coverageCount":"2/3","status":"good"},{"filePath":"src/app/auth/guard/logged-in-users.guard.ts","type":"guard","linktype":"guard","name":"LoggedInUsersGuard","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/auth/interfaces/user.interface.ts","type":"interface","linktype":"interface","name":"ModifyUser","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/auth/interfaces/user.interface.ts","type":"interface","linktype":"interface","name":"User","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/auth/interfaces/user.interface.ts","type":"interface","linktype":"interface","name":"UserData","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/auth/interfaces/user.interface.ts","type":"interface","linktype":"interface","name":"UserWithPrivileges","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/auth/pages/change-password/change-password.page.ts","type":"component","linktype":"component","name":"ChangePasswordPage","coveragePercent":14,"coverageCount":"1/7","status":"low"},{"filePath":"src/app/auth/pages/delete-account/delete-account.page.ts","type":"component","linktype":"component","name":"DeleteAccountPage","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/auth/pages/forgot-password/forgot-password.page.ts","type":"component","linktype":"component","name":"ForgotPasswordPage","coveragePercent":16,"coverageCount":"1/6","status":"low"},{"filePath":"src/app/auth/pages/login/login.page.ts","type":"component","linktype":"component","name":"LoginPage","coveragePercent":12,"coverageCount":"1/8","status":"low"},{"filePath":"src/app/auth/pages/register/register.page.ts","type":"component","linktype":"component","name":"RegisterPage","coveragePercent":9,"coverageCount":"1/11","status":"low"},{"filePath":"src/app/auth/pages/restore-account/restore-account.page.ts","type":"component","linktype":"component","name":"RestoreAccountPage","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/auth/services/auth/auth.service.ts","type":"injectable","linktype":"injectable","name":"AuthService","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"src/app/auth/services/user/user.service.ts","type":"injectable","linktype":"injectable","name":"UserService","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/calendar/components/calendar-grid/calendar-grid.component.ts","type":"component","linktype":"component","name":"CalendarGridComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/calendar/components/calendar-navbar/calendar-navbar.component.ts","type":"component","linktype":"component","name":"CalendarNavbarComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/calendar/components/calendar-picker/calendar-picker.component.ts","type":"component","linktype":"component","name":"CalendarPickerComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/calendar/components/calendar-sidebar/calendar-sidebar.component.ts","type":"component","linktype":"component","name":"CalendarSidebarComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/calendar/components/calendar/calendar.component.ts","type":"component","linktype":"component","name":"CalendarComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/calendar/pages/calendar/calendar.page.ts","type":"component","linktype":"component","name":"CalendarPage","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/dashboard/classes/user.class.ts","type":"class","linktype":"classe","name":"UserUtils","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/dashboard/components/integration-modules-grid/integration-modules-grid.component.ts","type":"component","linktype":"component","name":"IntegrationModulesGridComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"src/app/dashboard/components/member-list/member-list.component.ts","type":"component","linktype":"component","name":"MemberListComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/dashboard/components/project-form-general/project-form-general.component.ts","type":"component","linktype":"component","name":"ProjectFormGeneralComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/dashboard/components/project-form-integrations/project-form-integrations.component.ts","type":"component","linktype":"component","name":"ProjectFormIntegrationsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/dashboard/components/project-form-members/project-form-members.component.ts","type":"component","linktype":"component","name":"ProjectFormMembersComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/dashboard/components/project-form-statuses/project-form-statuses.component.ts","type":"component","linktype":"component","name":"ProjectFormStatusesComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/dashboard/components/view-options/view-options.component.ts","type":"component","linktype":"component","name":"ViewOptionsComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/dashboard/dialogs/add-member/add-member.dialog.ts","type":"component","linktype":"component","name":"AddMemberDialog","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/dashboard/dialogs/add-member/add-member.dialog.ts","type":"interface","linktype":"interface","name":"AddMemberDialogData","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/dashboard/dialogs/status/status.dialog.ts","type":"component","linktype":"component","name":"StatusDialog","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/dashboard/dialogs/status/status.dialog.ts","type":"interface","linktype":"interface","name":"StatusDialogData","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/dashboard/interfaces/git-integration.interface.ts","type":"interface","linktype":"interface","name":"GitAccount","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/dashboard/interfaces/git-integration.interface.ts","type":"interface","linktype":"interface","name":"GitIntegration","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/dashboard/interfaces/git-integration.interface.ts","type":"interface","linktype":"interface","name":"GitIssue","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/dashboard/interfaces/git-integration.interface.ts","type":"interface","linktype":"interface","name":"GitPull","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/dashboard/interfaces/git-integration.interface.ts","type":"interface","linktype":"interface","name":"GitRepository","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/dashboard/interfaces/project-form.interface.ts","type":"interface","linktype":"interface","name":"ProjectForm","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/dashboard/interfaces/project-member.interface.ts","type":"interface","linktype":"interface","name":"ProjectMember","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"src/app/dashboard/interfaces/project.interface.ts","type":"interface","linktype":"interface","name":"Project","coveragePercent":80,"coverageCount":"4/5","status":"very-good"},{"filePath":"src/app/dashboard/interfaces/saveable.interface.ts","type":"interface","linktype":"interface","name":"Saveable","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/dashboard/interfaces/workspace.interface.ts","type":"interface","linktype":"interface","name":"Workspace","coveragePercent":75,"coverageCount":"3/4","status":"good"},{"filePath":"src/app/dashboard/modules/integration-modules/components/integration-github/integration-github.component.ts","type":"component","linktype":"component","name":"IntegrationGitHubComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/dashboard/modules/integration-modules/components/selectable-integration/selectable-integration.component.ts","type":"component","linktype":"component","name":"SelectableIntegrationComponent","coveragePercent":37,"coverageCount":"6/16","status":"medium"},{"filePath":"src/app/dashboard/modules/integration-modules/decorators/integration-module/integration-module.decorator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"IntegrationModule","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/dashboard/modules/integration-modules/dialogs/integration-module-select/integration-module-select.dialog.ts","type":"component","linktype":"component","name":"IntegrationModuleSelectDialog","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/dashboard/modules/integration-modules/dialogs/integration-module-select/integration-module-select.dialog.ts","type":"interface","linktype":"interface","name":"IntegrationModuleSelectDialogData","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/dashboard/modules/integration-modules/interfaces/integration-component.interface.ts","type":"interface","linktype":"interface","name":"IntegrationComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/dashboard/modules/integration-modules/services/integration-module/integration-module.service.ts","type":"injectable","linktype":"injectable","name":"IntegrationModuleService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/dashboard/pages/create-project-members/create-project-members.page.ts","type":"component","linktype":"component","name":"CreateProjectMembersPage","coveragePercent":40,"coverageCount":"4/10","status":"medium"},{"filePath":"src/app/dashboard/pages/create-project/create-project.page.ts","type":"component","linktype":"component","name":"CreateProjectPage","coveragePercent":6,"coverageCount":"1/16","status":"low"},{"filePath":"src/app/dashboard/pages/create-workspace/create-workspace.page.ts","type":"component","linktype":"component","name":"CreateWorkspacePage","coveragePercent":100,"coverageCount":"5/5","status":"very-good"},{"filePath":"src/app/dashboard/pages/edit-project/edit-project.page.ts","type":"component","linktype":"component","name":"EditProjectPage","coveragePercent":6,"coverageCount":"1/16","status":"low"},{"filePath":"src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts","type":"component","linktype":"component","name":"EditWorkspacePage","coveragePercent":87,"coverageCount":"7/8","status":"very-good"},{"filePath":"src/app/dashboard/pages/github-integration/github-integration.page.ts","type":"component","linktype":"component","name":"GithubIntegrationPage","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/dashboard/pages/projects-list/projects-list.page.ts","type":"component","linktype":"component","name":"ProjectsListPage","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts","type":"component","linktype":"component","name":"WorkspacesListPage","coveragePercent":88,"coverageCount":"8/9","status":"very-good"},{"filePath":"src/app/dashboard/services/git-integration/git-integration.service.ts","type":"injectable","linktype":"injectable","name":"GitIntegrationService","coveragePercent":72,"coverageCount":"13/18","status":"good"},{"filePath":"src/app/dashboard/services/member/member.service.ts","type":"injectable","linktype":"injectable","name":"MemberService","coveragePercent":45,"coverageCount":"5/11","status":"medium"},{"filePath":"src/app/dashboard/services/project/project.service.ts","type":"injectable","linktype":"injectable","name":"ProjectService","coveragePercent":45,"coverageCount":"5/11","status":"medium"},{"filePath":"src/app/dashboard/services/workspace/workspace.service.ts","type":"injectable","linktype":"injectable","name":"WorkspaceService","coveragePercent":54,"coverageCount":"6/11","status":"good"},{"filePath":"src/app/landing-page/landing-page/landing-page.component.ts","type":"component","linktype":"component","name":"LandingPageComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/settings/components/integration-entry/integration-entry.component.ts","type":"component","linktype":"component","name":"IntegrationEntryComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/settings/components/list-group/list-group.component.ts","type":"component","linktype":"component","name":"ListGroupComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/settings/interfaces/session.interface.ts","type":"interface","linktype":"interface","name":"UserSession","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/settings/pages/settings-account/settings-account.page.ts","type":"component","linktype":"component","name":"SettingsAccountPage","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/settings/pages/settings-integrations/settings-integrations.page.ts","type":"component","linktype":"component","name":"SettingsIntegrationsPage","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/settings/pages/settings-integrations/settings-integrations.page.ts","type":"interface","linktype":"interface","name":"GitAccountWithUsage","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/settings/pages/settings-localization/settings-localization.page.ts","type":"component","linktype":"component","name":"SettingsLocalizationPage","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/settings/pages/settings-sessions/settings-sessions.page.ts","type":"component","linktype":"component","name":"SettingsSessionsPage","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/settings/pages/settings/settings.page.ts","type":"component","linktype":"component","name":"SettingsPage","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/settings/services/sessions.service.ts","type":"injectable","linktype":"injectable","name":"SessionsService","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/tasks/components/board-task/board-task.component.ts","type":"component","linktype":"component","name":"BoardTaskComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/tasks/components/input-assignee/input-assignee.component.ts","type":"component","linktype":"component","name":"InputAssigneeComponent","coveragePercent":19,"coverageCount":"5/26","status":"low"},{"filePath":"src/app/tasks/components/input-epic/input-epic.component.ts","type":"component","linktype":"component","name":"InputEpicComponent","coveragePercent":33,"coverageCount":"6/18","status":"medium"},{"filePath":"src/app/tasks/components/input-issue/input-issue.component.ts","type":"component","linktype":"component","name":"InputIssueComponent","coveragePercent":35,"coverageCount":"6/17","status":"medium"},{"filePath":"src/app/tasks/components/input-pull-request/input-pull-request.component.ts","type":"component","linktype":"component","name":"InputPullRequestComponent","coveragePercent":33,"coverageCount":"6/18","status":"medium"},{"filePath":"src/app/tasks/components/input-task-parent/input-task-parent.component.ts","type":"component","linktype":"component","name":"InputTaskParentComponent","coveragePercent":28,"coverageCount":"6/21","status":"medium"},{"filePath":"src/app/tasks/components/input-task-property/input-task-property.component.ts","type":"component","linktype":"component","name":"InputTaskPropertyComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/tasks/components/status-label/status-label.component.ts","type":"component","linktype":"component","name":"StatusLabelComponent","coveragePercent":19,"coverageCount":"5/26","status":"low"},{"filePath":"src/app/tasks/components/task-list/task-list.component.ts","type":"component","linktype":"component","name":"TaskListComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/tasks/components/task-row/task-row.component.ts","type":"component","linktype":"component","name":"TaskRowComponent","coveragePercent":0,"coverageCount":"0/18","status":"low"},{"filePath":"src/app/tasks/components/tracker/tracker-entry/tracker-entry.component.ts","type":"component","linktype":"component","name":"TrackerEntryComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/tasks/components/tracker/tracker.component.ts","type":"component","linktype":"component","name":"TrackerComponent","coveragePercent":0,"coverageCount":"0/19","status":"low"},{"filePath":"src/app/tasks/components/view-options/view-options.component.ts","type":"component","linktype":"component","name":"ViewOptionsComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/tasks/dialogs/task/task.dialog.ts","type":"component","linktype":"component","name":"TaskDialog","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"src/app/tasks/dialogs/task/task.dialog.ts","type":"interface","linktype":"interface","name":"TaskDialogData","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/tasks/enums/task-type.enum.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TaskTypeHierarchy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/tasks/filters/task.filters.ts","type":"class","linktype":"classe","name":"TaskFilters","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/tasks/interfaces/schedule.interface.ts","type":"interface","linktype":"interface","name":"SinglePersonSchedule","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/tasks/interfaces/status.interface.ts","type":"interface","linktype":"interface","name":"Status","coveragePercent":85,"coverageCount":"6/7","status":"very-good"},{"filePath":"src/app/tasks/interfaces/status.interface.ts","type":"interface","linktype":"interface","name":"StatusWithTasks","coveragePercent":50,"coverageCount":"1/2","status":"medium"},{"filePath":"src/app/tasks/interfaces/task.interface.ts","type":"interface","linktype":"interface","name":"Task","coveragePercent":100,"coverageCount":"18/18","status":"very-good"},{"filePath":"src/app/tasks/interfaces/time-track.interface.ts","type":"interface","linktype":"interface","name":"TimeTrack","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/tasks/pages/board/board.page.ts","type":"component","linktype":"component","name":"BoardPage","coveragePercent":0,"coverageCount":"0/23","status":"low"},{"filePath":"src/app/tasks/pages/schedule/schedule.page.ts","type":"component","linktype":"component","name":"SchedulePage","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/tasks/pages/task-list/task-list.page.ts","type":"component","linktype":"component","name":"TaskListPage","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/tasks/pipes/status-color.pipe.ts","type":"pipe","linktype":"pipe","name":"StatusColorPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/tasks/pipes/task-priority-icon.pipe.ts","type":"pipe","linktype":"pipe","name":"TaskPriorityIconPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/tasks/pipes/task-priority.pipe.ts","type":"pipe","linktype":"pipe","name":"TaskPriorityPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/tasks/pipes/task-type-icon.pipe.ts","type":"pipe","linktype":"pipe","name":"TaskTypeIconPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/tasks/pipes/task-type.pipe.ts","type":"pipe","linktype":"pipe","name":"TaskTypePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/tasks/pipes/time-track-duration/time-track-duration.pipe.ts","type":"pipe","linktype":"pipe","name":"TimeTrackDurationPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/tasks/pipes/time-track-timer/time-track-timer.pipe.ts","type":"pipe","linktype":"pipe","name":"TimeTrackTimerPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/tasks/pipes/time-tracks-total/time-tracks-total.pipe.ts","type":"pipe","linktype":"pipe","name":"TimeTracksTotalPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/tasks/services/status/status.service.ts","type":"injectable","linktype":"injectable","name":"StatusService","coveragePercent":43,"coverageCount":"7/16","status":"medium"},{"filePath":"src/app/tasks/services/task/task.service.ts","type":"injectable","linktype":"injectable","name":"TaskService","coveragePercent":65,"coverageCount":"13/20","status":"good"},{"filePath":"src/app/tasks/services/tracker/tracker.service.ts","type":"injectable","linktype":"injectable","name":"TrackerService","coveragePercent":62,"coverageCount":"5/8","status":"good"},{"filePath":"src/environments/environment.prod.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/environments/environment.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/stories/helpers/arg-type.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DOCS_CONTROL","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/arg-type.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DOCS_GETTER","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/arg-type.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DOCS_ICON_SELECT","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/arg-type.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DOCS_PRESET_CONTROL_ACCESSOR","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/arg-type.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DOCS_READONLY","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/arg-type.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DOCS_REMOVE","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/arg-type.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DOCS_SELECT","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/arg-type.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"icons","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/arg-type.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"none","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/classes/form-control-story-page-config.class.ts","type":"class","linktype":"classe","name":"FormControlStoryPageConfig","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/stories/helpers/classes/form-control-story-page-config.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DEFAULT_CONFIG","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/classes/story-page-config.class.ts","type":"class","linktype":"classe","name":"StoryPageConfig","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/stories/helpers/classes/story-page-config.class.ts","type":"interface","linktype":"interface","name":"ExtendedMeta","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/stories/helpers/classes/story-page-config.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DEFAULT_METADATA","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/classes/story-page-config.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"IGNORED_PROPERTIES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/classes/story-template.class.ts","type":"class","linktype":"classe","name":"StoryTemplate","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/stories/helpers/classes/story.class.ts","type":"class","linktype":"classe","name":"Story","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/stories/helpers/classes/story.class.ts","type":"interface","linktype":"interface","name":"StoryConfig","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/stories/helpers/component-content-decorator.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"componentContentDecorator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/component-content-decorator.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"exposeAllPossibilities","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/component-content-decorator.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"setContent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/functions/component-template-decorator.function.ts","type":"interface","linktype":"interface","name":"TemplateDecoratorConfig","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/stories/helpers/functions/component-template-decorator.function.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"buildPropsString","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/functions/component-template-decorator.function.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"buildTemplate","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/functions/component-template-decorator.function.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"combinePropsString","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/functions/component-template-decorator.function.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"componentTemplateDecorator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/functions/component-template-decorator.function.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"extractPropsString","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/functions/component-template-decorator.function.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"wrapWithDiv","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/helpers/functions/get-all-properties.function.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"getAllProperties","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/tests/helpers/mat-dialog-testing-provider.helper.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MatDialogTestingProvider","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/tests/helpers/ng-control-testing-provider.helper.ts","type":"class","linktype":"classe","name":"TestNgControl","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/tests/helpers/validator-testing.helper.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"expectToFail","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/tests/helpers/validator-testing.helper.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"expectToPass","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/tests/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/tests/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":100,"coverageCount":"1/1","status":"very-good"}]}}');__webpack_require__("./node_modules/@angular/localize/fesm2020/init.mjs");(0,angular.P)(documentation_namespaceObject),document.body.setAttribute("theme","dark");var parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{expanded:!0,matchers:{color:/(background|color)$/i,date:/Date$/}},docs:{inlineStories:!0},darkMode:{dark:Object.assign({},esm.np.dark),light:Object.assign({},esm.np.normal)}},globalTypes={theme:{name:"Theme",description:"Global theme for components",toolbar:{icon:"circlehollow",items:["light","dark"],showName:!0,dynamicTitle:!0}}},__namedExportsOrder=["parameters","globalTypes"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return(0,ClientApi.uc)(value);case"argTypes":return(0,ClientApi.v9)(value);case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},"./src/app/_main/pipes/validation-error/validation-error.pipe.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Pipes/ValidationError",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"ValidationError pipe"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Displays the message of validation error."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h2",null,"Example usage"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-ts"},"const control = new FormControl(null, [requiredValidator()]);\ncontrol.markAsTouched();\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-html"},"<div>\n  {{ control.errors | validationError }}\n</div>\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Will produce output like: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"This field is required"),"."))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Pipes/ValidationError",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./src/stories/Introduction.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Core/Introduction",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Welcome to Vernite documentation"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"This is paged made especially for keeping the integrity of design system and provide some help data to get started with improving this application."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre"},"// TODO: Place here some cards to link to other pages\n")))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Core/Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./src/stories/analysis.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FullscreenIframe:()=>FullscreenIframe,__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var FullscreenIframe=function(_ref){var src=_ref.src;return setTimeout((function(){console.log(document.querySelectorAll(".sbdocs")),document.querySelectorAll(".sbdocs").forEach((function(elem){elem.style.margin=0,elem.style.padding=0,elem.style.maxWidth="100%"}))}),200),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("iframe",{src,style:{width:"100%",height:"100%"}})},layoutProps={FullscreenIframe};function MDXContent(_ref2){var components=_ref2.components,props=_objectWithoutProperties(_ref2,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Core/Bundle analysis",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(FullscreenIframe,{src:"https://alexxiia.github.io/vernite-frontend/report",mdxType:"FullscreenIframe"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Core/Bundle analysis",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["FullscreenIframe","__page"]},"./src/stories/api/documentation.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FullscreenIframe:()=>FullscreenIframe,__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var FullscreenIframe=function(_ref){var src=_ref.src;return setTimeout((function(){console.log(document.querySelectorAll(".sbdocs")),document.querySelectorAll(".sbdocs").forEach((function(elem){elem.style.margin=0,elem.style.padding=0,elem.style.maxWidth="100%"}))}),200),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("iframe",{src,style:{width:"100%",height:"100%"}})},layoutProps={FullscreenIframe};function MDXContent(_ref2){var components=_ref2.components,props=_objectWithoutProperties(_ref2,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"API/Documentation",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(FullscreenIframe,{src:"https://vernite.dev/api/swagger-ui/index.html#/",mdxType:"FullscreenIframe"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"API/Documentation",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["FullscreenIframe","__page"]},"./src/stories/architecture.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Core/Architecture",mdxType:"Meta"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Core/Architecture",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./src/stories/creating-stories.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Core/Creating stories",mdxType:"Meta"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Core/Creating stories",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./src/stories/integration.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Core/CI\\CD pipeline",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"CI/CD pipeline"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Continuos integration was resolved using tool named ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{parentName:"p",href:"https://github.com/features/actions"},"GitHub Actions"),".\nActions are located in ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},".github/vernites/")," directory. At this moment there is one pipeline to deploy application named ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"deploy.yml"),".\nThis action after every push to the master branch rebuild the application and deploy it to the production environment using ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"rsync protocol"),".\nThis action also build documentation page, publishes it and runs tests. There is also included a small script to create badges to use them in ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"Readme.md")," and documentation files.\nThis file is named ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"badge-generator.js")," and is located in the root directory."))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Core/CI\\CD pipeline",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./src/stories/localization.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Core/Localization",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",null,"Localization"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"App is localized using ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{parentName:"p",href:"https://angular.io/api/localize"},"angular/localize"),". At the current stage of the project app is translated in:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-lua"},"de-DE -> German (Germany)\nen-GB -> English (United Kingdom)\nen-US -> English (United States, Default app language)\nes-ES -> Spanish (Spain)\nit-IT -> Italian (Italy)\npl-PL -> Polish (Poland)\nuk-UA -> Ukrainian (Ukraine)\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h2",null,"Configuration"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Each language is listed in ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"angular.json")," file in ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"i18n")," section.\nFor ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"polish")," language for example:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-json"},'"i18n": {\n  ...\n  "locales": {\n    "pl-PL": {\n      "translation": "src/locales/messages.pl-PL.xlf"\n    },\n    ...\n  }\n}\n')),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Languages also requires separated file in ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"src/locales")," folder to be created before build."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"It is also required to add language locale codes in ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},".ngI18nconfig"),". This config is used by Visual Studio Code extension to make translating this app easier.\nThe config looks like:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "locales": ["pl-PL", "en-GB", "it-IT", "es-ES", "de-DE", "uk-UA"],\n  "editor": {\n    "messageLocations": ["src/locales/messages.xlf"],\n    "translationFileNamePattern": "${name}.${lang}-${region}",\n    "taskConfig": {\n      "intervalSeconds": 5,\n      "itemEachPack": 10\n    }\n  }\n}\n')),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"After adding new language you need to add it to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"redirect.html")," file. In other case user will not be redirected to the new language when open the app (with this specific language in browser preferences).\nThis file has a variable named ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"availableLanguages")," with stored all available languages.:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-js"},"const availableLanguages = ['de-DE', 'en-GB', 'en-US', 'es-ES', 'it-IT', 'pl-PL', 'uk-UA'];\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"In the future adding new language will need some more work to do. For example adding new element in language selection list."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h2",null,"Making translations"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Before translating strings first what you need to do is to extract all translatable strings from the app. To do this run the command:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-bash"},"yarn i18n:extract\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Each language translations are located in ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"src/locales")," folder, for example ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"src/locales/messages.pl-PL.xlf")," file. This files can be edited using any text editor, but more convenient is to use external tools."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"In Visual Studio Code there is an extension named ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"Angular I18n Editor"),". This extension is used to make translations in more human readable way. It serves an UI interface to edit translations. To open this extension press ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"F1")," and search for ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"Angular I18n Editor: Open")," command."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h2",null,"Coverage"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"To check the translations coverage you can run command:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-bash"},"yarn i18n:coverage\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"NOTE: For the most accurate results you need to extract all strings from code using: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"i18n:extract")," command."))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Core/Localization",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./src/stories/styles/colors.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Styles/Colors",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.VZ,{mdxType:"ColorPalette"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.c6,{title:"--color-neutral",subtitle:"Neutral colors",colors:{100:"#f5f5f5",200:"#e2e2e2",300:"#bfbfbf",400:"#808080",500:"#737373",600:"#4d4d4d",700:"#262626",800:"#06090f"},mdxType:"ColorItem"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.c6,{title:"--color-gray",subtitle:"Shades of gray",colors:{100:"#c4cad4",200:"#8995a9",300:"#566276",400:"#4a5465",500:"#364053",600:"#212839",700:"#192132",800:"#111827"},mdxType:"ColorItem"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.c6,{title:"--color-blue",subtitle:"Shades of blue",colors:{500:"#1c64f2",600:"#1a56db",700:"#134fd4"},mdxType:"ColorItem"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.c6,{title:"--color-red",subtitle:"Shades of red",colors:{500:"#ef4444",600:"#dc2626",700:"#b91c1c",800:"#991b1b"},mdxType:"ColorItem"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.c6,{title:"--color-purple",subtitle:"Shades of purple",colors:{100:"#f5d0fe",200:"#f0abfc",300:"#e879f9",400:"#d946ef",500:"#c026d3",600:"#a21caf",700:"#86198f",800:"#701a75"},mdxType:"ColorItem"})))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Styles/Colors",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./src/stories/styles/typography.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Init:()=>Init,SampleText:()=>SampleText,Typeset:()=>Typeset,__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>typography_stories,typography:()=>typography});__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var Init=function(){return document.body.style.setProperty("--color-text","#000"),(0,esm.kt)("div",null)},Typeset=function(_ref){var fontWeight=_ref.fontWeight;return(0,esm.kt)(dist_esm.Xz,{withSource:"none",mdxType:"Canvas"},(0,esm.kt)("div",{style:{width:"100%",height:"100%"}},Object.entries(typography.size).map((function(_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],value=_ref3[1];return(0,esm.kt)("div",{key,style:{display:"flex",width:"100%",alignItems:"baseline",marginBottom:"1rem"}},(0,esm.kt)("div",{style:{width:"100px",flexShrink:0}},(0,esm.kt)("div",{style:{fontSize:"14px",opacity:"0.75"}},key)),(0,esm.kt)("div",null,(0,esm.kt)("div",{className:key,style:{fontSize:`${value}px`,fontWeight}},SampleText)))}))))},typography={type:{primary:"montserrat, roboto, 'Helvetica Neue', sans-serif"},weight:{regular:"400",bold:"700",extrabold:"800",black:"900"},size:{"text-label":12,"text-title":14,"text-base":14,"text-lg":16,"text-xl":18,"text-2xl":20,"text-3xl":24,"text-4xl":28,"text-5xl":32}},SampleText="Lorem ipsum dolor sit amet, consectetur adipiscing elit.",layoutProps={Init,Typeset,typography,SampleText};function MDXContent(_ref4){var components=_ref4.components,props=_objectWithoutProperties(_ref4,_excluded);return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Styles/Typography",mdxType:"Meta"}),(0,esm.kt)(Init,{mdxType:"Init"}),(0,esm.kt)("h1",null,"Typography"),(0,esm.kt)("h2",null,"Font family"),(0,esm.kt)("p",null,"Montserrat"),(0,esm.kt)("h2",null,"Font weights"),(0,esm.kt)("p",null,"400 (",(0,esm.kt)("inlineCode",{parentName:"p"},"font-normal"),"),"),(0,esm.kt)("p",null,"700 (",(0,esm.kt)("inlineCode",{parentName:"p"},"font-bold"),"),"),(0,esm.kt)("p",null,"800 (",(0,esm.kt)("inlineCode",{parentName:"p"},"font-extrabold"),"),"),(0,esm.kt)("p",null,"900 (",(0,esm.kt)("inlineCode",{parentName:"p"},"font-black"),")"),(0,esm.kt)("h2",null,"Classes"),(0,esm.kt)("h3",null,"Regular typeset"),(0,esm.kt)(Typeset,{fontWeight:typography.weight.regular,mdxType:"Typeset"}),(0,esm.kt)("h4",null,"Example usage:"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",withToolbar:!0,mdxSource:"%0A%3Cspan%20className=%22text-label%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-title%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-base%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-lg%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-xl%22%3ESample%20text%3C/span%3E%0A",mdxType:"Canvas"},(0,esm.kt)("span",{className:"text-label"},"Sample text"),(0,esm.kt)("span",{className:"text-title"},"Sample text"),(0,esm.kt)("span",{className:"text-base"},"Sample text"),(0,esm.kt)("span",{className:"text-lg"},"Sample text"),(0,esm.kt)("span",{className:"text-xl"},"Sample text")),(0,esm.kt)(dist_esm.Hw,{language:"html",dark:!0,format:!1,code:'\n<span class="text-label">Sample text</span>\n<span class="text-title">Sample text</span>\n<span class="text-base">Sample text</span>\n<span class="text-lg">Sample text</span>\n<span class="text-xl">Sample text</span>\n  ',mdxType:"Source"}),(0,esm.kt)("p",null,"You can also use it directly in the ",(0,esm.kt)("inlineCode",{parentName:"p"},"scss")," files:"),(0,esm.kt)(dist_esm.Hw,{language:"css",dark:!0,format:!1,code:"\nselector {\n  @include text-label;\n}\n  ",mdxType:"Source"}),(0,esm.kt)("h3",null,"Bold typeset"),(0,esm.kt)(Typeset,{fontWeight:typography.weight.bold,mdxType:"Typeset"}),(0,esm.kt)("h4",null,"Example usage:"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",withToolbar:!0,mdxSource:"%0A%3Cspan%20className=%22text-label%20font-bold%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-title%20font-bold%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-base%20font-bold%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-lg%20font-bold%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-xl%20font-bold%22%3ESample%20text%3C/span%3E%0A",mdxType:"Canvas"},(0,esm.kt)("span",{className:"text-label font-bold"},"Sample text"),(0,esm.kt)("span",{className:"text-title font-bold"},"Sample text"),(0,esm.kt)("span",{className:"text-base font-bold"},"Sample text"),(0,esm.kt)("span",{className:"text-lg font-bold"},"Sample text"),(0,esm.kt)("span",{className:"text-xl font-bold"},"Sample text")),(0,esm.kt)(dist_esm.Hw,{language:"html",dark:!0,format:!1,code:'\n<span class="text-label font-bold">Sample text</span>\n<span class="text-title font-bold">Sample text</span>\n<span class="text-base font-bold">Sample text</span>\n<span class="text-lg font-bold">Sample text</span>\n<span class="text-xl font-bold">Sample text</span>\n  ',mdxType:"Source"}),(0,esm.kt)("h3",null,"Extra bold typeset"),(0,esm.kt)(Typeset,{fontWeight:typography.weight.extrabold,mdxType:"Typeset"}),(0,esm.kt)("h4",null,"Example usage:"),(0,esm.kt)(dist_esm.Xz,{withSource:"open",withToolbar:!0,mdxSource:"%0A%3Cspan%20className=%22text-label%20font-extrabold%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-title%20font-extrabold%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-base%20font-extrabold%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-lg%20font-extrabold%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-xl%20font-extrabold%22%3ESample%20text%3C/span%3E%0A",mdxType:"Canvas"},(0,esm.kt)("span",{className:"text-label font-extrabold"},"Sample text"),(0,esm.kt)("span",{className:"text-title font-extrabold"},"Sample text"),(0,esm.kt)("span",{className:"text-base font-extrabold"},"Sample text"),(0,esm.kt)("span",{className:"text-lg font-extrabold"},"Sample text"),(0,esm.kt)("span",{className:"text-xl font-extrabold"},"Sample text")),(0,esm.kt)(dist_esm.Hw,{language:"html",dark:!0,format:!1,code:'\n<span class="text-label font-extrabold">Sample text</span>\n<span class="text-title font-extrabold">Sample text</span>\n<span class="text-base font-extrabold">Sample text</span>\n<span class="text-lg font-extrabold">Sample text</span>\n<span class="text-xl font-extrabold">Sample text</span>\n  ',mdxType:"Source"}),(0,esm.kt)("h3",null,"Black typeset"),(0,esm.kt)(Typeset,{fontWeight:typography.weight.black,mdxType:"Typeset"}),(0,esm.kt)("h4",null,"Example usage:"),(0,esm.kt)(dist_esm.Xz,{withSource:"none",withToolbar:!0,mdxSource:"%0A%3Cspan%20className=%22text-label%20font-black%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-title%20font-black%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-base%20font-black%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-lg%20font-black%22%3ESample%20text%3C/span%3E%0A%0A%3Cspan%20className=%22text-xl%20font-black%22%3ESample%20text%3C/span%3E%0A",mdxType:"Canvas"},(0,esm.kt)("span",{className:"text-label font-black"},"Sample text"),(0,esm.kt)("span",{className:"text-title font-black"},"Sample text"),(0,esm.kt)("span",{className:"text-base font-black"},"Sample text"),(0,esm.kt)("span",{className:"text-lg font-black"},"Sample text"),(0,esm.kt)("span",{className:"text-xl font-black"},"Sample text")),(0,esm.kt)(dist_esm.Hw,{language:"html",dark:!0,format:!1,code:'\n<span class="text-label font-black">Sample text</span>\n<span class="text-title font-black">Sample text</span>\n<span class="text-base font-black">Sample text</span>\n<span class="text-lg font-black">Sample text</span>\n<span class="text-xl font-black">Sample text</span>\n  ',mdxType:"Source"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Styles/Typography",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(MDXContent,null))}});const typography_stories=componentMeta;var __namedExportsOrder=["Init","Typeset","typography","SampleText","__page"]},"./src/tests/e2e-tests.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Tests/E2E",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"// TODO: Write something about cypress and code coverage"))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Tests/E2E",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./src/tests/unit-tests.coverage.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FullscreenIframe:()=>FullscreenIframe,__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var FullscreenIframe=function(_ref){var src=_ref.src;return setTimeout((function(){console.log(document.querySelectorAll(".sbdocs")),document.querySelectorAll(".sbdocs").forEach((function(elem){elem.style.margin=0,elem.style.padding=0,elem.style.maxWidth="100%"}))}),200),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("iframe",{src,style:{width:"100%",height:"100%"}})},layoutProps={FullscreenIframe};function MDXContent(_ref2){var components=_ref2.components,props=_objectWithoutProperties(_ref2,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Tests/Unit - coverage",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(FullscreenIframe,{src:"https://alexxiia.github.io/vernite-frontend/coverage/",mdxType:"FullscreenIframe"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Tests/Unit - coverage",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["FullscreenIframe","__page"]},"./src/tests/unit-tests.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Tests/Unit",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"// TODO: Write somthing about unit tests in karma and code coverage reports\n// TODO: Write something about karma dark theme"))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Tests/Unit",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./app/_main/components/button/button.stories.ts":"./src/app/_main/components/button/button.stories.ts","./app/_main/components/card/card.stories.ts":"./src/app/_main/components/card/card.stories.ts","./app/_main/components/checkbox/checkbox.stories.ts":"./src/app/_main/components/checkbox/checkbox.stories.ts","./app/_main/components/input-date-time/input-date-time.stories.ts":"./src/app/_main/components/input-date-time/input-date-time.stories.ts","./app/_main/components/input/input.stories.ts":"./src/app/_main/components/input/input.stories.ts","./app/_main/components/textarea/textarea.stories.ts":"./src/app/_main/components/textarea/textarea.stories.ts"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$"},"./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./app/_main/pipes/validation-error/validation-error.pipe.stories.mdx":"./src/app/_main/pipes/validation-error/validation-error.pipe.stories.mdx","./stories/Introduction.stories.mdx":"./src/stories/Introduction.stories.mdx","./stories/analysis.stories.mdx":"./src/stories/analysis.stories.mdx","./stories/api/documentation.stories.mdx":"./src/stories/api/documentation.stories.mdx","./stories/architecture.stories.mdx":"./src/stories/architecture.stories.mdx","./stories/creating-stories.stories.mdx":"./src/stories/creating-stories.stories.mdx","./stories/integration.stories.mdx":"./src/stories/integration.stories.mdx","./stories/localization.stories.mdx":"./src/stories/localization.stories.mdx","./stories/styles/colors.stories.mdx":"./src/stories/styles/colors.stories.mdx","./stories/styles/typography.stories.mdx":"./src/stories/styles/typography.stories.mdx","./tests/e2e-tests.stories.mdx":"./src/tests/e2e-tests.stories.mdx","./tests/unit-tests.coverage.stories.mdx":"./src/tests/unit-tests.coverage.stories.mdx","./tests/unit-tests.stories.mdx":"./src/tests/unit-tests.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"?4f7e":()=>{},"./generated-stories-entry.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[9558],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/docs/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-interactions/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-a11y/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/storybook-tailwind-dark-mode/dist/preset/preview.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs"),__webpack_exec__("./node_modules/@angular/material/prebuilt-themes/deeppurple-amber.css"),__webpack_exec__("./src/styles/styles.scss"),__webpack_exec__("./src/polyfills.ts"),__webpack_exec__("./node_modules/@angular-devkit/build-angular/node_modules/core-js/proposals/reflect-metadata.js"))));__webpack_require__.O()}]);