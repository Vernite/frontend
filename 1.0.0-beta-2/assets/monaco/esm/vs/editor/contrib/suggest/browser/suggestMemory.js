var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};import{RunOnceScheduler}from"../../../../base/common/async.js";import{DisposableStore}from"../../../../base/common/lifecycle.js";import{LRUCache,TernarySearchTree}from"../../../../base/common/map.js";import{CompletionItemKinds}from"../../../common/languages.js";import{IConfigurationService}from"../../../../platform/configuration/common/configuration.js";import{registerSingleton}from"../../../../platform/instantiation/common/extensions.js";import{createDecorator}from"../../../../platform/instantiation/common/instantiation.js";import{IStorageService,WillSaveStateReason}from"../../../../platform/storage/common/storage.js";export class Memory{constructor(name){this.name=name}select(model,pos,items){if(0===items.length)return 0;const topScore=items[0].score[0];for(let i=0;i<items.length;i++){const{score,completion:suggestion}=items[i];if(score[0]!==topScore)break;if(suggestion.preselect)return i}return 0}}export class NoMemory extends Memory{constructor(){super("first")}memorize(model,pos,item){}toJSON(){}fromJSON(){}}export class LRUMemory extends Memory{constructor(){super("recentlyUsed"),this._cache=new LRUCache(300,.66),this._seq=0}memorize(model,pos,item){const key=`${model.getLanguageId()}/${item.textLabel}`;this._cache.set(key,{touch:this._seq++,type:item.completion.kind,insertText:item.completion.insertText})}select(model,pos,items){if(0===items.length)return 0;const lineSuffix=model.getLineContent(pos.lineNumber).substr(pos.column-10,pos.column-1);if(/\s$/.test(lineSuffix))return super.select(model,pos,items);const topScore=items[0].score[0];let indexPreselect=-1,indexRecency=-1,seq=-1;for(let i=0;i<items.length&&items[i].score[0]===topScore;i++){const key=`${model.getLanguageId()}/${items[i].textLabel}`,item=this._cache.peek(key);if(item&&item.touch>seq&&item.type===items[i].completion.kind&&item.insertText===items[i].completion.insertText&&(seq=item.touch,indexRecency=i),items[i].completion.preselect&&-1===indexPreselect)return i}return-1!==indexRecency?indexRecency:-1!==indexPreselect?indexPreselect:0}toJSON(){return this._cache.toJSON()}fromJSON(data){this._cache.clear();for(const[key,value]of data)value.touch=0,value.type="number"==typeof value.type?value.type:CompletionItemKinds.fromString(value.type),this._cache.set(key,value);this._seq=this._cache.size}}export class PrefixMemory extends Memory{constructor(){super("recentlyUsedByPrefix"),this._trie=TernarySearchTree.forStrings(),this._seq=0}memorize(model,pos,item){const{word}=model.getWordUntilPosition(pos),key=`${model.getLanguageId()}/${word}`;this._trie.set(key,{type:item.completion.kind,insertText:item.completion.insertText,touch:this._seq++})}select(model,pos,items){const{word}=model.getWordUntilPosition(pos);if(!word)return super.select(model,pos,items);const key=`${model.getLanguageId()}/${word}`;let item=this._trie.get(key);if(item||(item=this._trie.findSubstr(key)),item)for(let i=0;i<items.length;i++){const{kind,insertText}=items[i].completion;if(kind===item.type&&insertText===item.insertText)return i}return super.select(model,pos,items)}toJSON(){const entries=[];return this._trie.forEach(((value,key)=>entries.push([key,value]))),entries.sort(((a,b)=>-(a[1].touch-b[1].touch))).forEach(((value,i)=>value[1].touch=i)),entries.slice(0,200)}fromJSON(data){if(this._trie.clear(),data.length>0){this._seq=data[0][1].touch+1;for(const[key,value]of data)value.type="number"==typeof value.type?value.type:CompletionItemKinds.fromString(value.type),this._trie.set(key,value)}}}let SuggestMemoryService=class SuggestMemoryService{constructor(_storageService,_configService){this._storageService=_storageService,this._configService=_configService,this._disposables=new DisposableStore,this._persistSoon=new RunOnceScheduler((()=>this._saveState()),500),this._disposables.add(_storageService.onWillSaveState((e=>{e.reason===WillSaveStateReason.SHUTDOWN&&this._saveState()})))}dispose(){this._disposables.dispose(),this._persistSoon.dispose()}memorize(model,pos,item){this._withStrategy(model,pos).memorize(model,pos,item),this._persistSoon.schedule()}select(model,pos,items){return this._withStrategy(model,pos).select(model,pos,items)}_withStrategy(model,pos){var _a;const mode=this._configService.getValue("editor.suggestSelection",{overrideIdentifier:model.getLanguageIdAtPosition(pos.lineNumber,pos.column),resource:model.uri});if((null===(_a=this._strategy)||void 0===_a?void 0:_a.name)!==mode){this._saveState();const ctor=SuggestMemoryService._strategyCtors.get(mode)||NoMemory;this._strategy=new ctor;try{const scope=this._configService.getValue("editor.suggest.shareSuggestSelections")?0:1,raw=this._storageService.get(`${SuggestMemoryService._storagePrefix}/${mode}`,scope);raw&&this._strategy.fromJSON(JSON.parse(raw))}catch(e){}}return this._strategy}_saveState(){if(this._strategy){const scope=this._configService.getValue("editor.suggest.shareSuggestSelections")?0:1,raw=JSON.stringify(this._strategy);this._storageService.store(`${SuggestMemoryService._storagePrefix}/${this._strategy.name}`,raw,scope,1)}}};SuggestMemoryService._strategyCtors=new Map([["recentlyUsedByPrefix",PrefixMemory],["recentlyUsed",LRUMemory],["first",NoMemory]]),SuggestMemoryService._storagePrefix="suggest/memories",SuggestMemoryService=__decorate([__param(0,IStorageService),__param(1,IConfigurationService)],SuggestMemoryService);export{SuggestMemoryService};export const ISuggestMemoryService=createDecorator("ISuggestMemories");registerSingleton(ISuggestMemoryService,SuggestMemoryService,!0);