var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__param=this&&this.__param||function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}},__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import*as dom from"../../../../base/browser/dom.js";import{createCancelablePromise,disposableTimeout,RunOnceScheduler}from"../../../../base/common/async.js";import{onUnexpectedError,onUnexpectedExternalError}from"../../../../base/common/errors.js";import{hash}from"../../../../base/common/hash.js";import{DisposableStore,toDisposable}from"../../../../base/common/lifecycle.js";import{StableEditorScrollState}from"../../../browser/stableEditorScroll.js";import{EditorAction,registerEditorAction,registerEditorContribution}from"../../../browser/editorExtensions.js";import{EDITOR_FONT_DEFAULTS}from"../../../common/config/editorOptions.js";import{EditorContextKeys}from"../../../common/editorContextKeys.js";import{getCodeLensModel}from"./codelens.js";import{ICodeLensCache}from"./codeLensCache.js";import{CodeLensHelper,CodeLensWidget}from"./codelensWidget.js";import{localize}from"../../../../nls.js";import{ICommandService}from"../../../../platform/commands/common/commands.js";import{INotificationService}from"../../../../platform/notification/common/notification.js";import{IQuickInputService}from"../../../../platform/quickinput/common/quickInput.js";import{ILanguageFeatureDebounceService}from"../../../common/services/languageFeatureDebounce.js";import{ILanguageFeaturesService}from"../../../common/services/languageFeatures.js";let CodeLensContribution=class CodeLensContribution{constructor(_editor,_languageFeaturesService,debounceService,_commandService,_notificationService,_codeLensCache){this._editor=_editor,this._languageFeaturesService=_languageFeaturesService,this._commandService=_commandService,this._notificationService=_notificationService,this._codeLensCache=_codeLensCache,this._disposables=new DisposableStore,this._localToDispose=new DisposableStore,this._lenses=[],this._oldCodeLensModels=new DisposableStore,this._provideCodeLensDebounce=debounceService.for(_languageFeaturesService.codeLensProvider,"CodeLensProvide",{min:250}),this._resolveCodeLensesDebounce=debounceService.for(_languageFeaturesService.codeLensProvider,"CodeLensResolve",{min:250,salt:"resolve"}),this._resolveCodeLensesScheduler=new RunOnceScheduler((()=>this._resolveCodeLensesInViewport()),this._resolveCodeLensesDebounce.default()),this._disposables.add(this._editor.onDidChangeModel((()=>this._onModelChange()))),this._disposables.add(this._editor.onDidChangeModelLanguage((()=>this._onModelChange()))),this._disposables.add(this._editor.onDidChangeConfiguration((e=>{(e.hasChanged(46)||e.hasChanged(16)||e.hasChanged(15))&&this._updateLensStyle(),e.hasChanged(14)&&this._onModelChange()}))),this._disposables.add(_languageFeaturesService.codeLensProvider.onDidChange(this._onModelChange,this)),this._onModelChange(),this._styleClassName="_"+hash(this._editor.getId()).toString(16),this._styleElement=dom.createStyleSheet(dom.isInShadowDOM(this._editor.getContainerDomNode())?this._editor.getContainerDomNode():void 0),this._updateLensStyle()}dispose(){var _a;this._localDispose(),this._disposables.dispose(),this._oldCodeLensModels.dispose(),null===(_a=this._currentCodeLensModel)||void 0===_a||_a.dispose(),this._styleElement.remove()}_getLayoutInfo(){const lineHeightFactor=Math.max(1.3,this._editor.getOption(61)/this._editor.getOption(48));let fontSize=this._editor.getOption(16);return(!fontSize||fontSize<5)&&(fontSize=.9*this._editor.getOption(48)|0),{fontSize,codeLensHeight:fontSize*lineHeightFactor|0}}_updateLensStyle(){const{codeLensHeight,fontSize}=this._getLayoutInfo(),fontFamily=this._editor.getOption(15),editorFontInfo=this._editor.getOption(46),fontFamilyVar=`--codelens-font-family${this._styleClassName}`,fontFeaturesVar=`--codelens-font-features${this._styleClassName}`;let newStyle=`\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; padding-right: ${Math.round(.5*fontSize)}px; font-feature-settings: var(${fontFeaturesVar}) }\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; }\n\t\t`;fontFamily&&(newStyle+=`.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}}`),this._styleElement.textContent=newStyle,this._editor.getContainerDomNode().style.setProperty(fontFamilyVar,null!=fontFamily?fontFamily:"inherit"),this._editor.getContainerDomNode().style.setProperty(fontFeaturesVar,editorFontInfo.fontFeatureSettings),this._editor.changeViewZones((accessor=>{for(const lens of this._lenses)lens.updateHeight(codeLensHeight,accessor)}))}_localDispose(){var _a,_b,_c;null===(_a=this._getCodeLensModelPromise)||void 0===_a||_a.cancel(),this._getCodeLensModelPromise=void 0,null===(_b=this._resolveCodeLensesPromise)||void 0===_b||_b.cancel(),this._resolveCodeLensesPromise=void 0,this._localToDispose.clear(),this._oldCodeLensModels.clear(),null===(_c=this._currentCodeLensModel)||void 0===_c||_c.dispose()}_onModelChange(){this._localDispose();const model=this._editor.getModel();if(!model)return;if(!this._editor.getOption(14))return;const cachedLenses=this._codeLensCache.get(model);if(cachedLenses&&this._renderCodeLensSymbols(cachedLenses),!this._languageFeaturesService.codeLensProvider.has(model))return void(cachedLenses&&this._localToDispose.add(disposableTimeout((()=>{const cachedLensesNow=this._codeLensCache.get(model);cachedLenses===cachedLensesNow&&(this._codeLensCache.delete(model),this._onModelChange())}),3e4)));for(const provider of this._languageFeaturesService.codeLensProvider.all(model))if("function"==typeof provider.onDidChange){const registration=provider.onDidChange((()=>scheduler.schedule()));this._localToDispose.add(registration)}const scheduler=new RunOnceScheduler((()=>{var _a;const t1=Date.now();null===(_a=this._getCodeLensModelPromise)||void 0===_a||_a.cancel(),this._getCodeLensModelPromise=createCancelablePromise((token=>getCodeLensModel(this._languageFeaturesService.codeLensProvider,model,token))),this._getCodeLensModelPromise.then((result=>{this._currentCodeLensModel&&this._oldCodeLensModels.add(this._currentCodeLensModel),this._currentCodeLensModel=result,this._codeLensCache.put(model,result);const newDelay=this._provideCodeLensDebounce.update(model,Date.now()-t1);scheduler.delay=newDelay,this._renderCodeLensSymbols(result),this._resolveCodeLensesInViewportSoon()}),onUnexpectedError)}),this._provideCodeLensDebounce.get(model));this._localToDispose.add(scheduler),this._localToDispose.add(toDisposable((()=>this._resolveCodeLensesScheduler.cancel()))),this._localToDispose.add(this._editor.onDidChangeModelContent((()=>{this._editor.changeDecorations((decorationsAccessor=>{this._editor.changeViewZones((viewZonesAccessor=>{const toDispose=[];let lastLensLineNumber=-1;this._lenses.forEach((lens=>{lens.isValid()&&lastLensLineNumber!==lens.getLineNumber()?(lens.update(viewZonesAccessor),lastLensLineNumber=lens.getLineNumber()):toDispose.push(lens)}));const helper=new CodeLensHelper;toDispose.forEach((l=>{l.dispose(helper,viewZonesAccessor),this._lenses.splice(this._lenses.indexOf(l),1)})),helper.commit(decorationsAccessor)}))})),scheduler.schedule()}))),this._localToDispose.add(this._editor.onDidFocusEditorWidget((()=>{scheduler.schedule()}))),this._localToDispose.add(this._editor.onDidScrollChange((e=>{e.scrollTopChanged&&this._lenses.length>0&&this._resolveCodeLensesInViewportSoon()}))),this._localToDispose.add(this._editor.onDidLayoutChange((()=>{this._resolveCodeLensesInViewportSoon()}))),this._localToDispose.add(toDisposable((()=>{if(this._editor.getModel()){const scrollState=StableEditorScrollState.capture(this._editor);this._editor.changeDecorations((decorationsAccessor=>{this._editor.changeViewZones((viewZonesAccessor=>{this._disposeAllLenses(decorationsAccessor,viewZonesAccessor)}))})),scrollState.restore(this._editor)}else this._disposeAllLenses(void 0,void 0)}))),this._localToDispose.add(this._editor.onMouseDown((e=>{if(9!==e.target.type)return;let target=e.target.element;if("SPAN"===(null==target?void 0:target.tagName)&&(target=target.parentElement),"A"===(null==target?void 0:target.tagName))for(const lens of this._lenses){const command=lens.getCommand(target);if(command){this._commandService.executeCommand(command.id,...command.arguments||[]).catch((err=>this._notificationService.error(err)));break}}}))),scheduler.schedule()}_disposeAllLenses(decChangeAccessor,viewZoneChangeAccessor){const helper=new CodeLensHelper;for(const lens of this._lenses)lens.dispose(helper,viewZoneChangeAccessor);decChangeAccessor&&helper.commit(decChangeAccessor),this._lenses.length=0}_renderCodeLensSymbols(symbols){if(!this._editor.hasModel())return;const maxLineNumber=this._editor.getModel().getLineCount(),groups=[];let lastGroup;for(const symbol of symbols.lenses){const line=symbol.symbol.range.startLineNumber;line<1||line>maxLineNumber||(lastGroup&&lastGroup[lastGroup.length-1].symbol.range.startLineNumber===line?lastGroup.push(symbol):(lastGroup=[symbol],groups.push(lastGroup)))}const scrollState=StableEditorScrollState.capture(this._editor),layoutInfo=this._getLayoutInfo();this._editor.changeDecorations((decorationsAccessor=>{this._editor.changeViewZones((viewZoneAccessor=>{const helper=new CodeLensHelper;let codeLensIndex=0,groupsIndex=0;for(;groupsIndex<groups.length&&codeLensIndex<this._lenses.length;){const symbolsLineNumber=groups[groupsIndex][0].symbol.range.startLineNumber,codeLensLineNumber=this._lenses[codeLensIndex].getLineNumber();codeLensLineNumber<symbolsLineNumber?(this._lenses[codeLensIndex].dispose(helper,viewZoneAccessor),this._lenses.splice(codeLensIndex,1)):codeLensLineNumber===symbolsLineNumber?(this._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex],helper),groupsIndex++,codeLensIndex++):(this._lenses.splice(codeLensIndex,0,new CodeLensWidget(groups[groupsIndex],this._editor,this._styleClassName,helper,viewZoneAccessor,layoutInfo.codeLensHeight,(()=>this._resolveCodeLensesInViewportSoon()))),codeLensIndex++,groupsIndex++)}for(;codeLensIndex<this._lenses.length;)this._lenses[codeLensIndex].dispose(helper,viewZoneAccessor),this._lenses.splice(codeLensIndex,1);for(;groupsIndex<groups.length;)this._lenses.push(new CodeLensWidget(groups[groupsIndex],this._editor,this._styleClassName,helper,viewZoneAccessor,layoutInfo.codeLensHeight,(()=>this._resolveCodeLensesInViewportSoon()))),groupsIndex++;helper.commit(decorationsAccessor)}))})),scrollState.restore(this._editor)}_resolveCodeLensesInViewportSoon(){this._editor.getModel()&&this._resolveCodeLensesScheduler.schedule()}_resolveCodeLensesInViewport(){var _a;null===(_a=this._resolveCodeLensesPromise)||void 0===_a||_a.cancel(),this._resolveCodeLensesPromise=void 0;const model=this._editor.getModel();if(!model)return;const toResolve=[],lenses=[];if(this._lenses.forEach((lens=>{const request=lens.computeIfNecessary(model);request&&(toResolve.push(request),lenses.push(lens))})),0===toResolve.length)return;const t1=Date.now(),resolvePromise=createCancelablePromise((token=>{const promises=toResolve.map(((request,i)=>{const resolvedSymbols=new Array(request.length),promises=request.map(((request,i)=>request.symbol.command||"function"!=typeof request.provider.resolveCodeLens?(resolvedSymbols[i]=request.symbol,Promise.resolve(void 0)):Promise.resolve(request.provider.resolveCodeLens(model,request.symbol,token)).then((symbol=>{resolvedSymbols[i]=symbol}),onUnexpectedExternalError)));return Promise.all(promises).then((()=>{token.isCancellationRequested||lenses[i].isDisposed()||lenses[i].updateCommands(resolvedSymbols)}))}));return Promise.all(promises)}));this._resolveCodeLensesPromise=resolvePromise,this._resolveCodeLensesPromise.then((()=>{const newDelay=this._resolveCodeLensesDebounce.update(model,Date.now()-t1);this._resolveCodeLensesScheduler.delay=newDelay,this._currentCodeLensModel&&this._codeLensCache.put(model,this._currentCodeLensModel),this._oldCodeLensModels.clear(),resolvePromise===this._resolveCodeLensesPromise&&(this._resolveCodeLensesPromise=void 0)}),(err=>{onUnexpectedError(err),resolvePromise===this._resolveCodeLensesPromise&&(this._resolveCodeLensesPromise=void 0)}))}getModel(){return this._currentCodeLensModel}};CodeLensContribution.ID="css.editor.codeLens",CodeLensContribution=__decorate([__param(1,ILanguageFeaturesService),__param(2,ILanguageFeatureDebounceService),__param(3,ICommandService),__param(4,INotificationService),__param(5,ICodeLensCache)],CodeLensContribution);export{CodeLensContribution};registerEditorContribution(CodeLensContribution.ID,CodeLensContribution),registerEditorAction(class ShowLensesInCurrentLine extends EditorAction{constructor(){super({id:"codelens.showLensesInCurrentLine",precondition:EditorContextKeys.hasCodeLensProvider,label:localize("showLensOnLine","Show CodeLens Commands For Current Line"),alias:"Show CodeLens Commands For Current Line"})}run(accessor,editor){return __awaiter(this,void 0,void 0,(function*(){if(!editor.hasModel())return;const quickInputService=accessor.get(IQuickInputService),commandService=accessor.get(ICommandService),notificationService=accessor.get(INotificationService),lineNumber=editor.getSelection().positionLineNumber,codelensController=editor.getContribution(CodeLensContribution.ID);if(!codelensController)return;const model=codelensController.getModel();if(!model)return;const items=[];for(const lens of model.lenses)lens.symbol.command&&lens.symbol.range.startLineNumber===lineNumber&&items.push({label:lens.symbol.command.title,command:lens.symbol.command});if(0===items.length)return;const item=yield quickInputService.pick(items,{canPickMany:!1});if(item){if(model.isDisposed)return yield commandService.executeCommand(this.id);try{yield commandService.executeCommand(item.command.id,...item.command.arguments||[])}catch(err){notificationService.error(err)}}}))}});