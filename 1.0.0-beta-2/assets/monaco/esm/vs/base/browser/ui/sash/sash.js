var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r};import{$,append,createStyleSheet,EventHelper,getElementsByTagName}from"../../dom.js";import{DomEmitter}from"../../event.js";import{EventType,Gesture}from"../../touch.js";import{Delayer}from"../../../common/async.js";import{memoize}from"../../../common/decorators.js";import{Emitter,Event}from"../../../common/event.js";import{Disposable,DisposableStore,toDisposable}from"../../../common/lifecycle.js";import{isMacintosh}from"../../../common/platform.js";import"./sash.css";const DEBUG=!1;export var OrthogonalEdge;!function(OrthogonalEdge){OrthogonalEdge.North="north",OrthogonalEdge.South="south",OrthogonalEdge.East="east",OrthogonalEdge.West="west"}(OrthogonalEdge||(OrthogonalEdge={}));let globalSize=4;const onDidChangeGlobalSize=new Emitter;let globalHoverDelay=300;const onDidChangeHoverDelay=new Emitter;class MouseEventFactory{constructor(){this.disposables=new DisposableStore}get onPointerMove(){return this.disposables.add(new DomEmitter(window,"mousemove")).event}get onPointerUp(){return this.disposables.add(new DomEmitter(window,"mouseup")).event}dispose(){this.disposables.dispose()}}__decorate([memoize],MouseEventFactory.prototype,"onPointerMove",null),__decorate([memoize],MouseEventFactory.prototype,"onPointerUp",null);class GestureEventFactory{constructor(el){this.el=el,this.disposables=new DisposableStore}get onPointerMove(){return this.disposables.add(new DomEmitter(this.el,EventType.Change)).event}get onPointerUp(){return this.disposables.add(new DomEmitter(this.el,EventType.End)).event}dispose(){this.disposables.dispose()}}__decorate([memoize],GestureEventFactory.prototype,"onPointerMove",null),__decorate([memoize],GestureEventFactory.prototype,"onPointerUp",null);class OrthogonalPointerEventFactory{constructor(factory){this.factory=factory}get onPointerMove(){return this.factory.onPointerMove}get onPointerUp(){return this.factory.onPointerUp}dispose(){}}__decorate([memoize],OrthogonalPointerEventFactory.prototype,"onPointerMove",null),__decorate([memoize],OrthogonalPointerEventFactory.prototype,"onPointerUp",null);const PointerEventsDisabledCssClass="pointer-events-disabled";export class Sash extends Disposable{constructor(container,layoutProvider,options){super(),this.hoverDelay=globalHoverDelay,this.hoverDelayer=this._register(new Delayer(this.hoverDelay)),this._state=3,this.onDidEnablementChange=this._register(new Emitter),this._onDidStart=this._register(new Emitter),this._onDidChange=this._register(new Emitter),this._onDidReset=this._register(new Emitter),this._onDidEnd=this._register(new Emitter),this.orthogonalStartSashDisposables=this._register(new DisposableStore),this.orthogonalStartDragHandleDisposables=this._register(new DisposableStore),this.orthogonalEndSashDisposables=this._register(new DisposableStore),this.orthogonalEndDragHandleDisposables=this._register(new DisposableStore),this.onDidStart=this._onDidStart.event,this.onDidChange=this._onDidChange.event,this.onDidReset=this._onDidReset.event,this.onDidEnd=this._onDidEnd.event,this.linkedSash=void 0,this.el=append(container,$(".monaco-sash")),options.orthogonalEdge&&this.el.classList.add(`orthogonal-edge-${options.orthogonalEdge}`),isMacintosh&&this.el.classList.add("mac");const onMouseDown=this._register(new DomEmitter(this.el,"mousedown")).event;this._register(onMouseDown((e=>this.onPointerStart(e,new MouseEventFactory)),this));const onMouseDoubleClick=this._register(new DomEmitter(this.el,"dblclick")).event;this._register(onMouseDoubleClick(this.onPointerDoublePress,this));const onMouseEnter=this._register(new DomEmitter(this.el,"mouseenter")).event;this._register(onMouseEnter((()=>Sash.onMouseEnter(this))));const onMouseLeave=this._register(new DomEmitter(this.el,"mouseleave")).event;this._register(onMouseLeave((()=>Sash.onMouseLeave(this)))),this._register(Gesture.addTarget(this.el));const onTouchStart=Event.map(this._register(new DomEmitter(this.el,EventType.Start)).event,(e=>{var _a;return Object.assign(Object.assign({},e),{target:null!==(_a=e.initialTarget)&&void 0!==_a?_a:null})}));this._register(onTouchStart((e=>this.onPointerStart(e,new GestureEventFactory(this.el))),this));const onTap=this._register(new DomEmitter(this.el,EventType.Tap)).event,onDoubleTap=Event.map(Event.filter(Event.debounce(onTap,((res,event)=>{var _a;return{event,count:(null!==(_a=null==res?void 0:res.count)&&void 0!==_a?_a:0)+1}}),250),(({count})=>2===count)),(({event})=>{var _a;return Object.assign(Object.assign({},event),{target:null!==(_a=event.initialTarget)&&void 0!==_a?_a:null})}));this._register(onDoubleTap(this.onPointerDoublePress,this)),"number"==typeof options.size?(this.size=options.size,0===options.orientation?this.el.style.width=`${this.size}px`:this.el.style.height=`${this.size}px`):(this.size=globalSize,this._register(onDidChangeGlobalSize.event((size=>{this.size=size,this.layout()})))),this._register(onDidChangeHoverDelay.event((delay=>this.hoverDelay=delay))),this.layoutProvider=layoutProvider,this.orthogonalStartSash=options.orthogonalStartSash,this.orthogonalEndSash=options.orthogonalEndSash,this.orientation=options.orientation||0,1===this.orientation?(this.el.classList.add("horizontal"),this.el.classList.remove("vertical")):(this.el.classList.remove("horizontal"),this.el.classList.add("vertical")),this.el.classList.toggle("debug",false),this.layout()}get state(){return this._state}get orthogonalStartSash(){return this._orthogonalStartSash}get orthogonalEndSash(){return this._orthogonalEndSash}set state(state){this._state!==state&&(this.el.classList.toggle("disabled",0===state),this.el.classList.toggle("minimum",1===state),this.el.classList.toggle("maximum",2===state),this._state=state,this.onDidEnablementChange.fire(state))}set orthogonalStartSash(sash){if(this.orthogonalStartDragHandleDisposables.clear(),this.orthogonalStartSashDisposables.clear(),sash){const onChange=state=>{this.orthogonalStartDragHandleDisposables.clear(),0!==state&&(this._orthogonalStartDragHandle=append(this.el,$(".orthogonal-drag-handle.start")),this.orthogonalStartDragHandleDisposables.add(toDisposable((()=>this._orthogonalStartDragHandle.remove()))),this.orthogonalStartDragHandleDisposables.add(new DomEmitter(this._orthogonalStartDragHandle,"mouseenter")).event((()=>Sash.onMouseEnter(sash)),void 0,this.orthogonalStartDragHandleDisposables),this.orthogonalStartDragHandleDisposables.add(new DomEmitter(this._orthogonalStartDragHandle,"mouseleave")).event((()=>Sash.onMouseLeave(sash)),void 0,this.orthogonalStartDragHandleDisposables))};this.orthogonalStartSashDisposables.add(sash.onDidEnablementChange.event(onChange,this)),onChange(sash.state)}this._orthogonalStartSash=sash}set orthogonalEndSash(sash){if(this.orthogonalEndDragHandleDisposables.clear(),this.orthogonalEndSashDisposables.clear(),sash){const onChange=state=>{this.orthogonalEndDragHandleDisposables.clear(),0!==state&&(this._orthogonalEndDragHandle=append(this.el,$(".orthogonal-drag-handle.end")),this.orthogonalEndDragHandleDisposables.add(toDisposable((()=>this._orthogonalEndDragHandle.remove()))),this.orthogonalEndDragHandleDisposables.add(new DomEmitter(this._orthogonalEndDragHandle,"mouseenter")).event((()=>Sash.onMouseEnter(sash)),void 0,this.orthogonalEndDragHandleDisposables),this.orthogonalEndDragHandleDisposables.add(new DomEmitter(this._orthogonalEndDragHandle,"mouseleave")).event((()=>Sash.onMouseLeave(sash)),void 0,this.orthogonalEndDragHandleDisposables))};this.orthogonalEndSashDisposables.add(sash.onDidEnablementChange.event(onChange,this)),onChange(sash.state)}this._orthogonalEndSash=sash}onPointerStart(event,pointerEventFactory){EventHelper.stop(event);let isMultisashResize=!1;if(!event.__orthogonalSashEvent){const orthogonalSash=this.getOrthogonalSash(event);orthogonalSash&&(isMultisashResize=!0,event.__orthogonalSashEvent=!0,orthogonalSash.onPointerStart(event,new OrthogonalPointerEventFactory(pointerEventFactory)))}if(this.linkedSash&&!event.__linkedSashEvent&&(event.__linkedSashEvent=!0,this.linkedSash.onPointerStart(event,new OrthogonalPointerEventFactory(pointerEventFactory))),!this.state)return;const iframes=getElementsByTagName("iframe");for(const iframe of iframes)iframe.classList.add("pointer-events-disabled");const startX=event.pageX,startY=event.pageY,altKey=event.altKey,startEvent={startX,currentX:startX,startY,currentY:startY,altKey};this.el.classList.add("active"),this._onDidStart.fire(startEvent);const style=createStyleSheet(this.el),updateStyle=()=>{let cursor="";cursor=isMultisashResize?"all-scroll":1===this.orientation?1===this.state?"s-resize":2===this.state?"n-resize":isMacintosh?"row-resize":"ns-resize":1===this.state?"e-resize":2===this.state?"w-resize":isMacintosh?"col-resize":"ew-resize",style.textContent=`* { cursor: ${cursor} !important; }`},disposables=new DisposableStore;updateStyle(),isMultisashResize||this.onDidEnablementChange.event(updateStyle,null,disposables);pointerEventFactory.onPointerMove((e=>{EventHelper.stop(e,!1);const event={startX,currentX:e.pageX,startY,currentY:e.pageY,altKey};this._onDidChange.fire(event)}),null,disposables),pointerEventFactory.onPointerUp((e=>{EventHelper.stop(e,!1),this.el.removeChild(style),this.el.classList.remove("active"),this._onDidEnd.fire(),disposables.dispose();for(const iframe of iframes)iframe.classList.remove("pointer-events-disabled")}),null,disposables),disposables.add(pointerEventFactory)}onPointerDoublePress(e){const orthogonalSash=this.getOrthogonalSash(e);orthogonalSash&&orthogonalSash._onDidReset.fire(),this.linkedSash&&this.linkedSash._onDidReset.fire(),this._onDidReset.fire()}static onMouseEnter(sash,fromLinkedSash=!1){sash.el.classList.contains("active")?(sash.hoverDelayer.cancel(),sash.el.classList.add("hover")):sash.hoverDelayer.trigger((()=>sash.el.classList.add("hover")),sash.hoverDelay).then(void 0,(()=>{})),!fromLinkedSash&&sash.linkedSash&&Sash.onMouseEnter(sash.linkedSash,!0)}static onMouseLeave(sash,fromLinkedSash=!1){sash.hoverDelayer.cancel(),sash.el.classList.remove("hover"),!fromLinkedSash&&sash.linkedSash&&Sash.onMouseLeave(sash.linkedSash,!0)}clearSashHoverState(){Sash.onMouseLeave(this)}layout(){if(0===this.orientation){const verticalProvider=this.layoutProvider;this.el.style.left=verticalProvider.getVerticalSashLeft(this)-this.size/2+"px",verticalProvider.getVerticalSashTop&&(this.el.style.top=verticalProvider.getVerticalSashTop(this)+"px"),verticalProvider.getVerticalSashHeight&&(this.el.style.height=verticalProvider.getVerticalSashHeight(this)+"px")}else{const horizontalProvider=this.layoutProvider;this.el.style.top=horizontalProvider.getHorizontalSashTop(this)-this.size/2+"px",horizontalProvider.getHorizontalSashLeft&&(this.el.style.left=horizontalProvider.getHorizontalSashLeft(this)+"px"),horizontalProvider.getHorizontalSashWidth&&(this.el.style.width=horizontalProvider.getHorizontalSashWidth(this)+"px")}}getOrthogonalSash(e){if(e.target&&e.target instanceof HTMLElement)return e.target.classList.contains("orthogonal-drag-handle")?e.target.classList.contains("start")?this.orthogonalStartSash:this.orthogonalEndSash:void 0}dispose(){super.dispose(),this.el.remove()}}