let hasDifferentOriginAncestorFlag=!1,sameOriginWindowChainCache=null;function getParentWindowIfSameOrigin(w){if(!w.parent||w.parent===w)return null;try{const location=w.location,parentLocation=w.parent.location;if("null"!==location.origin&&"null"!==parentLocation.origin&&location.origin!==parentLocation.origin)return hasDifferentOriginAncestorFlag=!0,null}catch(e){return hasDifferentOriginAncestorFlag=!0,null}return w.parent}export class IframeUtils{static getSameOriginWindowChain(){if(!sameOriginWindowChainCache){sameOriginWindowChainCache=[];let parent,w=window;do{parent=getParentWindowIfSameOrigin(w),parent?sameOriginWindowChainCache.push({window:w,iframeElement:w.frameElement||null}):sameOriginWindowChainCache.push({window:w,iframeElement:null}),w=parent}while(w)}return sameOriginWindowChainCache.slice(0)}static getPositionOfChildWindowRelativeToAncestorWindow(childWindow,ancestorWindow){if(!ancestorWindow||childWindow===ancestorWindow)return{top:0,left:0};let top=0,left=0;const windowChain=this.getSameOriginWindowChain();for(const windowChainEl of windowChain){if(top+=windowChainEl.window.scrollY,left+=windowChainEl.window.scrollX,windowChainEl.window===ancestorWindow)break;if(!windowChainEl.iframeElement)break;const boundingRect=windowChainEl.iframeElement.getBoundingClientRect();top+=boundingRect.top,left+=boundingRect.left}return{top,left}}}