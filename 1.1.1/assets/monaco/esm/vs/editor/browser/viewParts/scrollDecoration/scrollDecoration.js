import"./scrollDecoration.css";import{createFastDomNode}from"../../../../base/browser/fastDomNode.js";import{ViewPart}from"../../view/viewPart.js";import{scrollbarShadow}from"../../../../platform/theme/common/colorRegistry.js";import{registerThemingParticipant}from"../../../../platform/theme/common/themeService.js";export class ScrollDecorationViewPart extends ViewPart{constructor(context){super(context),this._scrollTop=0,this._width=0,this._updateWidth(),this._shouldShow=!1;const scrollbar=this._context.configuration.options.get(94);this._useShadows=scrollbar.useShadows,this._domNode=createFastDomNode(document.createElement("div")),this._domNode.setAttribute("role","presentation"),this._domNode.setAttribute("aria-hidden","true")}dispose(){super.dispose()}_updateShouldShow(){const newShouldShow=this._useShadows&&this._scrollTop>0;return this._shouldShow!==newShouldShow&&(this._shouldShow=newShouldShow,!0)}getDomNode(){return this._domNode}_updateWidth(){const layoutInfo=this._context.configuration.options.get(133);0===layoutInfo.minimap.renderMinimap||layoutInfo.minimap.minimapWidth>0&&0===layoutInfo.minimap.minimapLeft?this._width=layoutInfo.width:this._width=layoutInfo.width-layoutInfo.verticalScrollbarWidth}onConfigurationChanged(e){const scrollbar=this._context.configuration.options.get(94);return this._useShadows=scrollbar.useShadows,this._updateWidth(),this._updateShouldShow(),!0}onScrollChanged(e){return this._scrollTop=e.scrollTop,this._updateShouldShow()}prepareRender(ctx){}render(ctx){this._domNode.setWidth(this._width),this._domNode.setClassName(this._shouldShow?"scroll-decoration":"")}}registerThemingParticipant(((theme,collector)=>{const shadow=theme.getColor(scrollbarShadow);shadow&&collector.addRule(`.monaco-editor .scroll-decoration { box-shadow: ${shadow} 0 6px 6px -6px inset; }`)}));