import{EditOperation}from"../../../common/core/editOperation.js";import{Position}from"../../../common/core/position.js";import{Range}from"../../../common/core/range.js";import{Selection}from"../../../common/core/selection.js";export class BlockCommentCommand{constructor(selection,insertSpace,languageConfigurationService){this.languageConfigurationService=languageConfigurationService,this._selection=selection,this._insertSpace=insertSpace,this._usedEndToken=null}static _haystackHasNeedleAtOffset(haystack,needle,offset){if(offset<0)return!1;const needleLength=needle.length;if(offset+needleLength>haystack.length)return!1;for(let i=0;i<needleLength;i++){const codeA=haystack.charCodeAt(offset+i),codeB=needle.charCodeAt(i);if(codeA!==codeB&&!(codeA>=65&&codeA<=90&&codeA+32===codeB||codeB>=65&&codeB<=90&&codeB+32===codeA))return!1}return!0}_createOperationsForBlockComment(selection,startToken,endToken,insertSpace,model,builder){const startLineNumber=selection.startLineNumber,startColumn=selection.startColumn,endLineNumber=selection.endLineNumber,endColumn=selection.endColumn,startLineText=model.getLineContent(startLineNumber),endLineText=model.getLineContent(endLineNumber);let ops,startTokenIndex=startLineText.lastIndexOf(startToken,startColumn-1+startToken.length),endTokenIndex=endLineText.indexOf(endToken,endColumn-1-endToken.length);if(-1!==startTokenIndex&&-1!==endTokenIndex)if(startLineNumber===endLineNumber){startLineText.substring(startTokenIndex+startToken.length,endTokenIndex).indexOf(endToken)>=0&&(startTokenIndex=-1,endTokenIndex=-1)}else{const startLineAfterStartToken=startLineText.substring(startTokenIndex+startToken.length),endLineBeforeEndToken=endLineText.substring(0,endTokenIndex);(startLineAfterStartToken.indexOf(endToken)>=0||endLineBeforeEndToken.indexOf(endToken)>=0)&&(startTokenIndex=-1,endTokenIndex=-1)}-1!==startTokenIndex&&-1!==endTokenIndex?(insertSpace&&startTokenIndex+startToken.length<startLineText.length&&32===startLineText.charCodeAt(startTokenIndex+startToken.length)&&(startToken+=" "),insertSpace&&endTokenIndex>0&&32===endLineText.charCodeAt(endTokenIndex-1)&&(endToken=" "+endToken,endTokenIndex-=1),ops=BlockCommentCommand._createRemoveBlockCommentOperations(new Range(startLineNumber,startTokenIndex+startToken.length+1,endLineNumber,endTokenIndex+1),startToken,endToken)):(ops=BlockCommentCommand._createAddBlockCommentOperations(selection,startToken,endToken,this._insertSpace),this._usedEndToken=1===ops.length?endToken:null);for(const op of ops)builder.addTrackedEditOperation(op.range,op.text)}static _createRemoveBlockCommentOperations(r,startToken,endToken){const res=[];return Range.isEmpty(r)?res.push(EditOperation.delete(new Range(r.startLineNumber,r.startColumn-startToken.length,r.endLineNumber,r.endColumn+endToken.length))):(res.push(EditOperation.delete(new Range(r.startLineNumber,r.startColumn-startToken.length,r.startLineNumber,r.startColumn))),res.push(EditOperation.delete(new Range(r.endLineNumber,r.endColumn,r.endLineNumber,r.endColumn+endToken.length)))),res}static _createAddBlockCommentOperations(r,startToken,endToken,insertSpace){const res=[];return Range.isEmpty(r)?res.push(EditOperation.replace(new Range(r.startLineNumber,r.startColumn,r.endLineNumber,r.endColumn),startToken+"  "+endToken)):(res.push(EditOperation.insert(new Position(r.startLineNumber,r.startColumn),startToken+(insertSpace?" ":""))),res.push(EditOperation.insert(new Position(r.endLineNumber,r.endColumn),(insertSpace?" ":"")+endToken))),res}getEditOperations(model,builder){const startLineNumber=this._selection.startLineNumber,startColumn=this._selection.startColumn;model.tokenization.tokenizeIfCheap(startLineNumber);const languageId=model.getLanguageIdAtPosition(startLineNumber,startColumn),config=this.languageConfigurationService.getLanguageConfiguration(languageId).comments;config&&config.blockCommentStartToken&&config.blockCommentEndToken&&this._createOperationsForBlockComment(this._selection,config.blockCommentStartToken,config.blockCommentEndToken,this._insertSpace,model,builder)}computeCursorState(model,helper){const inverseEditOperations=helper.getInverseEditOperations();if(2===inverseEditOperations.length){const startTokenEditOperation=inverseEditOperations[0],endTokenEditOperation=inverseEditOperations[1];return new Selection(startTokenEditOperation.range.endLineNumber,startTokenEditOperation.range.endColumn,endTokenEditOperation.range.startLineNumber,endTokenEditOperation.range.startColumn)}{const srcRange=inverseEditOperations[0].range,deltaColumn=this._usedEndToken?-this._usedEndToken.length-1:0;return new Selection(srcRange.endLineNumber,srcRange.endColumn+deltaColumn,srcRange.endLineNumber,srcRange.endColumn+deltaColumn)}}}