import*as strings from"../../../../base/common/strings.js";import{Range}from"../../../common/core/range.js";import{CancellationTokenSource}from"../../../../base/common/cancellation.js";import{DisposableStore}from"../../../../base/common/lifecycle.js";import{EditorKeybindingCancellationTokenSource}from"./keybindingCancellation.js";export class EditorState{constructor(editor,flags){if(this.flags=flags,0!=(1&this.flags)){const model=editor.getModel();this.modelVersionId=model?strings.format("{0}#{1}",model.uri.toString(),model.getVersionId()):null}else this.modelVersionId=null;0!=(4&this.flags)?this.position=editor.getPosition():this.position=null,0!=(2&this.flags)?this.selection=editor.getSelection():this.selection=null,0!=(8&this.flags)?(this.scrollLeft=editor.getScrollLeft(),this.scrollTop=editor.getScrollTop()):(this.scrollLeft=-1,this.scrollTop=-1)}_equals(other){if(!(other instanceof EditorState))return!1;const state=other;return this.modelVersionId===state.modelVersionId&&(this.scrollLeft===state.scrollLeft&&this.scrollTop===state.scrollTop&&(!(!this.position&&state.position||this.position&&!state.position||this.position&&state.position&&!this.position.equals(state.position))&&!(!this.selection&&state.selection||this.selection&&!state.selection||this.selection&&state.selection&&!this.selection.equalsRange(state.selection))))}validate(editor){return this._equals(new EditorState(editor,this.flags))}}export class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource{constructor(editor,flags,range,parent){super(editor,parent),this._listener=new DisposableStore,4&flags&&this._listener.add(editor.onDidChangeCursorPosition((e=>{range&&Range.containsPosition(range,e.position)||this.cancel()}))),2&flags&&this._listener.add(editor.onDidChangeCursorSelection((e=>{range&&Range.containsRange(range,e.selection)||this.cancel()}))),8&flags&&this._listener.add(editor.onDidScrollChange((_=>this.cancel()))),1&flags&&(this._listener.add(editor.onDidChangeModel((_=>this.cancel()))),this._listener.add(editor.onDidChangeModelContent((_=>this.cancel()))))}dispose(){this._listener.dispose(),super.dispose()}}export class TextModelCancellationTokenSource extends CancellationTokenSource{constructor(model,parent){super(parent),this._listener=model.onDidChangeContent((()=>this.cancel()))}dispose(){this._listener.dispose(),super.dispose()}}