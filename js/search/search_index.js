var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddMemberDialog.html",[0,0.17,1,0.897]],["body/components/AddMemberDialog.html",[0,0.238,1,1.375,2,1.085,3,0.094,4,0.087,5,0.806,6,0.821,7,0.806,8,0.806,9,0.056,10,7.051,11,5.611,12,3.109,13,1.521,14,2.375,15,0.681,16,1.749,17,1.746,18,1.705,19,1.454,20,2.971,21,1.085,22,5.786,23,1.085,24,4.917,25,0.217,26,0.633,27,1.465,28,3.31,29,2.443,30,4.426,31,4.223,32,0.72,33,6.346,34,5.376,35,5.429,36,2.605,37,0.863,38,3.109,39,5.432,40,4.426,41,4.437,42,4.949,43,4.632,44,0.911,45,3.815,46,0.517,47,0.007,48,0.602,49,0.339,50,0.436,51,3.815,52,0.835,53,1.427,54,3.815,55,3.815,56,3.815,57,1.869,58,3.762,59,3.815,60,0.694,61,0.607,62,1.538,63,2.793,64,2.109,65,2.598,66,2.864,67,3.815,68,2.166,69,3.815,70,3.815,71,0.476,72,2.593,73,0.311,74,1.227,75,2.474,76,2.37,77,1.14,78,2.118,79,2.9,80,2.9,81,0.915,82,2.474,83,1.009,84,2.9,85,0.126,86,0.668,87,3.141,88,1.045,89,2.85,90,0.188,91,1.169,92,2.9,93,1.789,94,2.9,95,2.732,96,2.9,97,4.206,98,2.732,99,4.206,100,2.732,101,2.9,102,2.9,103,1.869,104,1.869,105,2.118,106,0.734,107,3.39,108,2.593,109,2.971,110,1.155,111,1.333,112,1.925,113,1.111,114,1.202,115,0.806,116,1.169,117,1.277,118,0.668,119,1.481,120,0.806,121,1.376,122,0.721,123,0.777,124,0.748,125,0.806,126,0.734,127,0.806,128,0.748,129,0.777,130,0.806,131,0.748,132,0.806,133,0.748,134,0.806,135,0.734,136,0.777,137,0.806,138,0.748,139,0.806,140,0.777,141,0.734,142,1.14,143,0.83,144,1.169,145,0.734,146,1.169,147,0.721,148,1.828,149,0.734,150,0.668,151,0.806,152,0.734,153,1.253,154,0.734,155,0.734,156,0.748,157,0.806,158,0.734,159,0.806,160,0.762,161,0.694,162,1.277,163,0.748,164,0.806,165,0.748,166,1.085,167,0.806,168,0.748,169,0.806,170,0.748,171,0.748,172,0.806,173,0.748,174,0.806,175,0.748,176,0.806,177,0.734,178,0.777,179,0.748,180,0.846,181,0.806,182,0.734,183,0.806,184,0.734,185,0.748,186,0.806,187,0.748,188,1.376,189,0.748,190,1.169,191,0.806,192,0.748,193,0.806,194,0.748,195,0.806,196,0.734,197,0.762,198,0.734,199,0.806,200,0.734,201,0.791,202,1.045,203,0.734,204,0.748,205,0.748,206,0.806,207,0.734,208,1.544,209,0.721,210,0.806,211,0.734,212,0.762,213,0.734,214,0.734,215,0.806,216,0.748,217,0.806,218,1.169,219,0.748,220,0.806,221,0.748,222,0.806,223,0.806,224,0.748,225,0.806,226,0.721,227,0.897,228,0.734,229,0.748,230,0.806,231,0.748,232,0.806,233,1.045,234,1.169,235,1.169,236,0.734,237,0.777,238,0.681,239,0.734,240,0.734,241,0.791,242,0.762,243,0.806,244,0.734,245,0.806,246,0.721,247,0.777,248,0.806,249,0.004,250,0.004]],["title/interfaces/AddMemberDialogData.html",[39,3.337,86,0.816]],["body/interfaces/AddMemberDialogData.html",[0,0.273,1,1.143,3,0.146,4,0.136,9,0.087,10,4.842,11,3.853,12,4.842,13,1.632,14,2.725,16,1.06,17,1.06,18,1.573,19,1.209,20,3.19,21,1.165,22,5.278,23,1.165,24,5.278,25,0.338,26,0.855,27,1.418,28,2.753,29,2.032,30,4.038,31,3.853,33,5.278,34,4.038,35,4.516,36,2.167,37,0.926,39,5.856,40,4.038,41,4.642,42,4.516,43,4.846,47,0.007,49,0.355,50,0.855,58,4.038,62,1.609,63,3.205,64,2.265,65,2.982,66,3.287,68,2.335,71,0.528,72,4.038,73,0.485,74,1.91,75,3.853,76,3.69,77,1.04,78,3.298,79,4.516,80,4.516,81,0.982,82,3.853,83,1.571,84,4.516,85,0.171,86,1.04,87,4.029,88,1.705,89,3.655,90,0.293,91,1.579,92,4.516,93,2.247,94,4.516,95,4.255,96,4.516,97,5.68,98,4.255,99,5.68,100,4.255,101,4.516,102,4.516,103,2.911,104,2.911,105,3.298,106,1.143,107,5.278,108,4.038,249,0.006,250,0.006,251,1.99]],["title/components/AlertDialog.html",[0,0.17,122,0.88]],["body/components/AlertDialog.html",[0,0.269,1,0.679,2,1.025,3,0.087,4,0.081,5,0.746,6,0.76,7,0.746,8,0.746,9,0.052,15,0.63,16,1.743,17,1.74,18,0.679,19,1.064,20,5.149,21,1.025,23,1.025,25,0.201,26,0.598,27,1.272,28,4.043,32,0.68,34,4.995,37,1.073,38,2.877,40,4.678,41,4.275,44,0.851,46,0.478,47,0.007,48,0.584,49,0.365,50,0.404,52,0.899,53,1.044,57,2.561,58,3.553,60,1.448,61,0.99,71,0.298,72,2.399,73,0.288,75,2.289,76,2.192,77,0.915,81,0.583,85,0.142,86,0.915,90,0.174,91,0.746,108,2.399,111,1.233,115,0.746,116,1.104,117,1.221,118,0.618,119,1.427,120,0.746,121,1.315,122,1.3,123,1.566,124,0.692,125,0.746,126,0.679,127,0.746,128,0.692,129,0.718,130,0.746,131,0.692,132,0.746,133,0.692,134,0.746,135,0.679,136,0.718,137,0.746,138,0.692,139,0.746,140,0.718,141,0.679,142,1.09,143,0.784,144,1.104,145,0.679,146,1.104,147,0.667,148,1.795,149,0.679,150,0.618,151,0.746,152,0.679,153,1.198,154,0.679,155,0.679,156,0.692,157,0.746,158,0.679,159,0.746,160,0.705,161,0.642,162,1.221,163,0.692,164,0.746,165,0.692,166,1.025,167,0.746,168,0.692,169,0.746,170,0.692,171,0.692,172,0.746,173,0.692,174,0.746,175,0.692,176,0.746,177,0.679,178,0.718,179,0.692,180,0.799,181,0.746,182,0.679,183,0.746,184,0.679,185,0.692,186,0.746,187,0.692,188,1.315,189,0.692,190,1.104,191,0.746,192,0.692,193,0.746,194,0.692,195,0.746,196,0.679,197,0.705,198,0.679,199,0.746,200,0.679,201,0.732,202,0.987,203,0.679,204,0.692,205,0.692,206,0.746,207,0.679,208,1.496,209,0.667,210,0.746,211,0.679,212,0.705,213,0.679,214,0.679,215,0.746,216,0.692,217,0.746,218,1.104,219,0.692,220,0.746,221,0.692,222,0.746,223,0.746,224,0.692,225,0.746,226,0.667,227,0.848,228,0.679,229,0.692,230,0.746,231,0.692,232,0.746,233,0.987,234,1.104,235,1.104,236,0.679,237,0.718,238,0.63,239,0.679,240,0.679,241,0.732,242,0.705,243,0.746,244,0.679,245,0.746,246,0.667,247,0.718,248,0.746,249,0.004,250,0.004,252,2.683,253,1.168,254,4.644,255,2.932,256,3.027,257,4.644,258,4.26,259,5.531,260,4.644,261,5.703,262,5.303,263,4.765,264,3.973,265,5.228,266,5.263,267,5.228,268,3.247,269,4.929,270,3.238,271,5.074,272,2.807,273,1.923,274,5.531,275,4.732,276,5.228,277,2.222,278,5.074,279,2.885,280,3.53,281,6.115,282,1.949,283,6.115,284,5.609,285,4.644,286,6.115,287,3.53,288,1.647,289,4.644,290,4.644,291,3.822,292,4.26,293,3.53,294,4.644,295,2.528,296,3.027,297,3.973,298,4.26,299,2.192,300,3.136,301,2.683,302,3.973,303,1.228,304,2.528,305,2.187,306,2.242,307,2.528,308,2.399,309,2.038,310,3.136,311,3.136,312,3.136,313,5.228,314,5.228,315,5.228,316,6.883]],["title/interfaces/AlertDialogData.html",[86,0.816,266,3.337]],["body/interfaces/AlertDialogData.html",[0,0.279,3,0.126,4,0.117,9,0.075,16,0.915,17,0.915,20,5.227,21,1.006,23,1.006,25,0.292,26,0.777,27,1.124,28,4.165,34,5.182,37,1.06,40,4.62,41,4.222,47,0.007,49,0.426,50,1.05,52,0.794,58,3.486,60,1.386,71,0.387,72,3.486,73,0.418,75,3.326,76,3.186,85,0.174,86,1.335,90,0.253,91,1.084,108,3.486,111,2.374,122,0.969,123,1.652,249,0.005,250,0.005,251,1.718,252,3.898,253,1.146,254,4.557,255,3.63,256,3.893,257,4.557,258,4.18,259,4.557,260,4.557,261,6.215,262,5.263,263,4.943,266,5.46,268,3.186,269,4.868,270,2.668,271,4.18,272,2.754,273,1.584,274,4.557,275,3.898,277,1.83,278,4.18,279,2.377,281,6.039,282,1.912,283,6.039,284,5.539,285,4.557,286,6.039,288,1.616,289,4.557,290,4.557,291,4.675,292,4.18,294,4.557,295,3.674,296,3.816,297,5.794,298,6.212,299,3.186,300,6.039,301,5.166,302,6.169,303,1.664,304,4.868,305,3.396,306,3.481,307,5.813,308,5.517,309,2.65,310,4.557,311,4.557,312,4.557]],["title/injectables/ApiService.html",[317,1.628,318,2.351]],["body/injectables/ApiService.html",[3,0.094,4,0.088,9,0.096,25,0.218,26,0.635,27,1.527,32,0.723,37,1.019,44,0.895,46,1.213,47,0.007,48,0.649,49,0.428,50,0.935,52,1.037,60,1.188,61,0.61,68,2.533,71,0.433,73,0.313,85,0.088,90,0.189,91,1.38,106,1.525,150,1.254,249,0.004,250,0.004,253,1.826,288,1.209,303,1.679,309,3.491,317,1.941,318,2.803,319,1.935,320,3.409,321,2.548,322,4.528,323,4.612,324,5.804,325,6.363,326,6.363,327,7.162,328,5.269,329,3.837,330,7.437,331,5.557,332,3.777,333,5.557,334,5.383,335,7.052,336,3.837,337,6.024,338,7.881,339,6.233,340,7.881,341,5.676,342,8.871,343,7.881,344,6.742,345,6.742,346,5.557,347,3.837,348,5.557,349,3.837,350,5.557,351,3.837,352,5.557,353,3.837,354,5.557,355,3.837,356,3.845,357,5.557,358,2.89,359,5.557,360,2.983,361,4.965,362,4.528,363,2.916,364,3.837,365,3.409,366,3.837,367,3.837,368,1.935,369,1.827,370,1.285,371,3.837,372,3.837,373,3.127,374,3.409,375,3.409,376,3.837,377,3.837,378,3.837,379,3.837,380,3.837]],["title/components/AppComponent.html",[0,0.17,124,0.914]],["body/components/AppComponent.html",[0,0.298,1,0.887,2,1.24,3,0.113,4,0.105,5,0.974,6,0.992,7,0.974,8,0.974,9,0.068,15,0.822,16,1.762,17,1.76,18,0.887,19,1.287,21,1.24,23,1.24,25,0.262,26,0.723,27,1.193,37,1.126,44,0.676,47,0.007,48,0.617,49,0.219,60,0.838,61,0.733,71,0.262,73,0.376,77,1.107,81,0.762,85,0.105,90,0.227,113,1.342,114,1.452,115,0.974,116,1.336,117,1.415,118,0.807,119,1.688,120,0.974,121,1.525,122,0.87,123,0.938,124,1.523,125,0.974,126,0.887,127,0.974,128,0.904,129,0.938,130,0.974,131,0.904,132,0.974,133,0.904,134,0.974,135,0.887,136,0.938,137,0.974,138,0.904,139,0.974,140,0.938,141,0.887,142,1.264,143,0.948,144,1.336,145,0.887,146,1.336,147,0.87,148,1.902,149,0.887,150,0.807,151,0.974,152,0.887,153,1.389,154,0.887,155,0.887,156,0.904,157,0.974,158,0.887,159,0.974,160,0.921,161,0.838,162,1.415,163,0.904,164,0.974,165,0.904,166,1.24,167,0.974,168,0.904,169,0.974,170,0.904,171,0.904,172,0.974,173,0.904,174,0.974,175,0.904,176,0.974,177,0.887,178,0.938,179,0.904,180,0.967,181,0.974,182,0.887,183,0.974,184,0.887,185,1.596,186,0.974,187,0.904,188,1.525,189,0.904,190,1.336,191,0.974,192,0.904,193,0.974,194,0.904,195,0.974,196,0.887,197,0.921,198,0.887,199,0.974,200,0.887,201,0.956,202,1.194,203,0.887,204,0.904,205,0.904,206,0.974,207,0.887,208,1.657,209,0.87,210,0.974,211,0.887,212,0.921,213,0.887,214,0.887,215,0.974,216,0.904,217,0.974,218,1.336,219,0.904,220,0.974,221,0.904,222,0.974,223,0.974,224,0.904,225,0.974,226,0.87,227,1.025,228,0.887,229,0.904,230,0.974,231,0.904,232,0.974,233,1.194,234,1.336,235,1.336,236,0.887,237,0.938,238,1.288,239,0.887,240,0.887,241,0.956,242,0.921,243,0.974,244,0.887,245,0.974,246,0.87,247,0.938,248,0.974,249,0.005,250,0.005,253,1.03,255,3.248,277,1.645,303,0.822,369,3.011,381,4.094,382,5.618,383,6.324,384,2.646,385,5.618,386,7.219,387,6.324,388,6.324,389,5.618,390,4.608,391,4.608,392,1.645,393,1.877,394,2.08,395,2.397]],["title/modules/AppModule.html",[396,1.817,397,3.542]],["body/modules/AppModule.html",[3,0.16,4,0.15,9,0.096,47,0.007,71,0.526,73,0.534,85,0.15,90,0.323,124,1.89,177,1.778,178,1.332,249,0.006,250,0.006,397,7.35,398,2.674,399,4.26,400,5.815,401,5.815,402,5.815,403,5.815,404,6.619,405,5.516,406,4.735,407,3.404,408,3.033,409,6.545,410,4.735,411,3.779,412,7.934,413,3.887,414,7.934,415,5.815,416,6.545,417,6.545,418,6.545,419,6.03,420,5.815,421,4.975,422,4.244]],["title/modules/AppRoutingModule.html",[396,1.817,404,3.337]],["body/modules/AppRoutingModule.html",[0,0.287,3,0.158,4,0.147,9,0.095,47,0.007,64,2.451,71,0.515,73,0.525,85,0.147,90,0.317,93,1.767,177,1.51,178,1.598,184,1.51,238,1.147,249,0.006,250,0.006,398,2.627,404,5.622,411,3.062,413,3.845,419,5.966,420,5.713,423,6.43,424,4.685,425,4.549,426,1.947,427,5.966,428,6.43,429,6.43,430,6.43,431,4.887,432,5.713,433,6.256,434,5.24,435,7.838,436,6.43,437,6.43,438,5.713,439,5.24,440,6.43,441,6.43,442,4.887,443,6.43,444,6.43,445,6.43,446,6.43,447,6.43,448,6.43,449,5.713,450,6.43,451,6.43,452,3.994]],["title/modules/AuthModule.html",[396,1.817,453,3.542]],["body/modules/AuthModule.html",[3,0.15,4,0.14,9,0.09,47,0.007,71,0.542,73,0.499,74,1.967,85,0.14,90,0.302,135,1.75,149,1.75,158,1.75,182,1.75,198,1.75,200,1.75,249,0.006,250,0.006,398,2.499,399,4.086,405,5.426,406,4.543,407,3.181,408,2.834,410,4.543,411,3.625,413,3.729,421,4.649,453,7.415,454,5.434,455,5.434,456,5.434,457,6.512,458,6.117,459,4.727,460,3.799,461,5.173,462,6.117,463,5.434,464,4.649,465,6.762,466,5.434,467,4.649,468,5.451,469,5.434,470,4.649,471,5.434,472,5.434,473,5.434,474,4.649]],["title/modules/AuthRoutingModule.html",[396,1.817,457,3.337]],["body/modules/AuthRoutingModule.html",[0,0.34,3,0.156,4,0.145,9,0.093,47,0.007,62,1.366,71,0.534,73,0.518,85,0.145,90,0.313,93,1.743,135,1.498,149,1.498,150,1.111,158,1.498,180,0.97,182,1.621,198,1.498,200,1.498,201,1.316,202,1.47,249,0.006,250,0.006,279,2.94,396,2.474,398,2.592,407,3.3,411,3.022,413,3.814,424,4.646,425,4.839,426,1.921,433,6.316,434,6.344,452,3.941,457,5.576,463,5.637,464,4.822,465,6.917,466,5.637,467,4.822,468,5.576,469,5.637,470,4.822,471,5.637,472,5.637,473,5.637,474,4.822,475,6.345,476,4.114,477,4.822,478,4.822,479,4.049,480,4.313]],["title/injectables/AuthService.html",[317,1.628,481,2.502]],["body/injectables/AuthService.html",[3,0.123,4,0.114,9,0.074,25,0.285,27,1.605,32,0.87,37,0.781,44,0.978,46,1.168,47,0.007,48,0.719,49,0.441,50,0.986,52,1.058,64,3.451,71,0.429,73,0.409,85,0.114,90,0.247,106,1.76,249,0.005,250,0.005,273,2.067,282,1.868,288,1.579,303,1.696,317,2.338,318,4.349,319,2.528,321,2.152,368,2.528,369,2.386,370,1.679,476,4.886,477,6.112,478,5.727,479,4.757,481,3.593,482,4.452,483,7.144,484,6.692,485,8.041,486,8.041,487,6.14,488,5.945,489,2.99,490,5.011,491,5.011,492,6.692,493,5.011,494,6.112,495,5.011,496,5.011,497,5.145,498,5.011,499,5.011,500,5.011,501,5.011,502,5.011,503,5.011,504,5.011,505,6.692,506,5.011,507,3.589,508,3.406,509,4.497,510,4.045,511,5.011,512,4.381,513,6.694,514,5.011,515,4.452,516,5.011,517,5.011,518,5.011,519,5.011,520,5.011,521,5.011,522,4.452]],["title/components/BoardPage.html",[0,0.17,126,0.897]],["body/components/BoardPage.html",[0,0.201,1,0.553,2,0.877,3,0.071,4,0.066,5,0.608,6,0.619,7,0.608,8,0.608,9,0.042,13,1.229,14,2.003,15,0.513,16,1.725,17,1.723,18,0.553,19,0.911,21,0.877,23,0.877,25,0.164,26,0.512,27,1.462,30,5.215,32,0.582,36,2.259,37,0.698,44,0.931,46,0.744,47,0.007,48,0.589,49,0.382,50,0.768,52,0.785,53,1.238,60,1.127,61,0.985,68,2.25,71,0.491,73,0.235,77,0.783,81,0.475,83,0.761,85,0.066,87,1.265,88,1.342,89,2.836,90,0.142,91,1.665,93,2.108,106,1.057,109,2.948,110,1.663,112,1.451,113,0.837,114,1.73,115,0.608,116,0.945,117,1.077,118,0.504,119,1.392,120,0.608,121,1.16,122,0.543,123,1.118,124,0.564,125,0.608,126,1.192,127,0.608,128,0.564,129,1.562,130,0.608,131,0.564,132,0.608,133,0.564,134,0.608,135,0.553,136,0.585,137,0.608,138,0.564,139,0.608,140,0.585,141,0.553,142,0.961,143,1.066,144,0.945,145,0.553,146,0.945,147,0.543,148,1.702,149,0.553,150,0.504,151,0.608,152,0.553,153,1.057,154,0.553,155,0.553,156,0.564,157,0.608,158,0.553,159,0.608,160,0.575,161,0.523,162,1.077,163,0.564,164,0.608,165,0.564,166,0.877,167,0.608,168,0.564,169,0.608,170,0.564,171,0.564,172,0.608,173,0.564,174,0.608,175,0.564,176,0.608,177,0.553,178,0.585,179,0.564,180,0.84,181,0.608,182,0.553,183,0.608,184,0.553,185,0.564,186,0.608,187,0.564,188,1.16,189,0.564,190,0.945,191,0.608,192,0.564,193,0.608,194,0.564,195,0.608,196,0.553,197,0.575,198,0.553,199,0.608,200,0.553,201,0.596,202,0.845,203,0.553,204,0.564,205,0.564,206,0.608,207,0.553,208,1.366,209,0.543,210,0.608,211,0.553,212,0.575,213,0.553,214,0.553,215,0.608,216,0.564,217,0.608,218,0.945,219,0.564,220,0.608,221,0.564,222,0.608,223,0.608,224,0.564,225,0.608,226,0.845,227,1.244,228,0.553,229,0.564,230,0.608,231,0.564,232,0.608,233,0.845,234,0.945,235,0.945,236,0.553,237,0.585,238,0.513,239,0.553,240,0.553,241,0.596,242,0.575,243,0.608,244,0.553,245,0.608,246,0.543,247,0.585,248,0.608,249,0.003,250,0.003,255,1.785,256,1.968,277,1.026,291,1.496,306,1.233,307,3.204,308,3.041,328,2.948,393,1.328,426,0.871,523,2.555,524,4.475,525,5.492,526,4.474,527,6.315,528,5.792,529,4.609,530,5.492,531,5.505,532,4.474,533,3.326,534,6.196,535,1.955,536,3.482,537,4.119,538,4.811,539,3.348,540,3.635,541,4.266,542,4.474,543,4.474,544,6.196,545,2.876,546,2.344,547,4.474,548,2.876,549,1.716,550,2.876,551,2.876,552,2.876,553,2.876,554,2.876,555,2.876,556,2.876,557,2.876,558,2.876,559,2.876,560,3.733,561,2.876,562,2.876,563,3.048,564,2.876,565,4.474,566,2.555,567,1.596,568,1.865,569,1.786,570,1.544,571,1.865,572,2.186,573,1.233,574,1.072,575,1.203,576,1.233,577,2.876,578,2.901,579,1.786,580,2.555,581,2.555,582,2.06,583,2.876,584,2.876,585,1.596,586,2.573,587,2.186,588,2.555,589,2.876,590,2.876,591,4.174,592,2.876,593,2.876,594,4.474,595,2.555,596,2.876,597,2.555,598,2.344,599,2.876,600,2.876,601,2.876,602,2.876,603,2.876,604,2.876,605,2.876,606,2.876,607,2.876,608,2.876,609,2.876,610,5.492,611,2.876,612,6.196,613,2.555,614,2.876,615,2.876,616,2.876,617,2.876,618,2.876,619,2.876,620,4.474,621,2.876,622,2.876,623,2.876,624,3.733,625,1.096,626,2.876,627,4.174,628,5.492,629,2.69,630,2.555,631,4.474,632,3.411,633,3.646,634,3.646,635,4.474,636,2.186,637,2.344,638,2.06,639,2.876,640,3.646,641,3.933,642,3.411,643,2.876,644,2.876,645,2.876,646,2.06,647,2.06,648,1.716,649,2.344,650,2.555,651,1.716,652,4.474,653,3.646,654,3.401,655,1.548,656,1.096,657,1.496,658,1.84,659,2.779,660,2.141,661,1.968,662,1.73,663,1.968,664,2.879,665,2.876,666,1.298,667,1.955,668,1.072,669,1.072,670,1.096,671,1.026,672,1.439,673,1.496,674,1.451,675,1.096,676,2.876,677,2.876,678,1.876,679,1.451,680,1.265,681,1.233,682,4.474,683,5.492,684,3.401,685,1.654,686,2.876,687,2.073,688,1.919,689,4.474,690,4.474,691,4.474,692,4.474,693,1.744,694,2.876,695,2.876,696,2.876]],["title/components/BoardTaskComponent.html",[0,0.17,128,0.914]],["body/components/BoardTaskComponent.html",[0,0.212,1,0.604,2,0.938,3,0.077,4,0.072,5,0.663,6,0.676,7,0.663,8,0.663,9,0.046,15,0.56,16,1.733,17,1.729,18,0.604,19,0.974,21,0.938,23,0.938,25,0.179,26,0.547,27,0.959,32,0.622,37,0.49,44,0.897,46,0.649,47,0.007,48,0.608,49,0.331,50,0.547,52,0.758,53,1.159,60,1.18,61,1.111,62,1.03,71,0.46,73,0.256,77,0.838,81,0.519,85,0.072,88,0.904,89,2.589,90,0.155,91,0.663,106,0.921,109,3.115,110,1.449,111,1.672,113,1.889,114,1.508,115,0.663,116,1.011,117,1.137,118,0.55,119,1.764,120,0.663,121,1.226,122,0.593,123,0.639,124,0.616,125,0.663,126,0.604,127,0.663,128,1.272,129,1.679,130,0.663,131,0.616,132,0.663,133,0.616,134,0.663,135,0.604,136,0.639,137,0.663,138,0.616,139,0.663,140,0.639,141,0.604,142,1.223,143,0.718,144,1.011,145,0.604,146,1.011,147,0.593,148,1.743,149,0.604,150,1.341,151,0.663,152,0.604,153,1.556,154,0.604,155,0.604,156,0.616,157,0.663,158,0.604,159,0.663,160,0.627,161,0.571,162,1.137,163,0.616,164,0.663,165,0.616,166,1.443,167,0.663,168,0.616,169,0.663,170,0.616,171,1.501,172,0.663,173,0.616,174,0.663,175,0.616,176,0.663,177,0.604,178,0.639,179,0.616,180,0.732,181,0.663,182,0.604,183,0.663,184,0.604,185,0.616,186,0.663,187,0.616,188,1.226,189,0.616,190,1.011,191,0.663,192,0.616,193,0.663,194,0.616,195,0.663,196,0.604,197,0.627,198,0.604,199,0.663,200,0.604,201,0.651,202,0.904,203,0.604,204,0.616,205,0.616,206,0.663,207,0.604,208,1.422,209,0.593,210,0.663,211,0.604,212,0.627,213,0.604,214,0.604,215,0.663,216,0.616,217,0.663,218,1.011,219,0.616,220,0.663,221,0.616,222,0.663,223,0.663,224,0.616,225,0.663,226,0.904,227,1.471,228,0.604,229,0.616,230,0.663,231,0.616,232,0.663,233,0.904,234,1.011,235,1.011,236,0.604,237,0.639,238,0.56,239,0.604,240,0.604,241,0.651,242,0.627,243,0.663,244,0.604,245,0.663,246,0.593,247,0.639,248,0.663,249,0.004,250,0.004,255,1.91,277,1.12,288,0.989,291,1.633,306,2.996,334,1.743,370,1.052,392,2.627,393,2.664,512,2.345,528,6,537,4.25,539,3.322,567,1.743,568,2.036,569,1.95,573,1.346,574,1.17,575,1.313,576,1.346,579,1.95,582,2.248,586,1.805,627,2.386,632,1.95,646,2.248,647,2.248,648,1.874,649,2.558,651,3.462,653,3.901,655,1.913,656,1.196,658,2.401,660,1.224,661,2.105,662,2.201,663,2.854,664,1.346,666,1.417,668,1.17,669,1.17,670,1.824,671,2.07,672,1.865,675,1.196,678,2.115,680,2.551,681,2.053,685,4.402,687,2.688,693,1.866,697,7.557,698,6.932,699,2.789,700,5.801,701,4.787,702,6.541,703,6.541,704,3.638,705,5.765,706,1.866,707,2.558,708,4.787,709,2.854,710,3.139,711,3.139,712,3.139,713,3.638,714,3.139,715,3.139,716,3.139,717,3.139,718,3.139,719,3.139,720,1.874,721,2.386,722,2.134,723,3.104,724,2.789,725,4.787,726,2.789,727,3.603,728,2.036,729,3.139,730,2.789,731,2.789,732,2.386,733,2.386,734,2.558,735,2.386,736,2.386,737,2.789,738,4.787,739,4.252,740,4.787,741,1.743,742,2.053,743,1.685,744,2.618,745,2.688,746,3.017,747,3.09,748,2.857,749,3.901,750,3.007,751,2.927,752,3.139,753,2.789,754,2.386,755,1.95,756,1.538,757,3.139,758,2.558,759,4.409,760,3.139,761,3.602,762,3.602,763,2.789,764,2.789,765,3.139,766,3.139,767,2.248,768,2.134,769,0.97,770,2.415,771,4.155,772,1.685,773,2.857,774,3.139,775,3.139,776,2.28,777,3.139,778,2.036,779,1.584,780,2.558]],["title/components/ButtonComponent.html",[0,0.17,131,0.914]],["body/components/ButtonComponent.html",[0,0.258,1,0.616,2,0.952,3,0.078,4,0.073,5,0.676,6,0.689,7,0.676,8,0.676,9,0.047,13,1.335,15,0.571,16,1.735,17,1.733,18,0.616,19,0.989,21,0.952,23,0.952,25,0.182,26,0.555,32,0.632,44,0.793,47,0.007,48,0.52,49,0.377,52,0.374,53,0.639,57,1.568,60,1.068,61,0.933,71,0.373,73,0.261,77,0.85,81,0.529,85,0.073,90,0.158,110,0.969,111,1.118,113,1.908,115,0.676,116,1.24,117,1.511,118,0.56,119,1.866,120,0.676,121,1.24,122,0.604,123,0.651,124,0.627,125,0.676,126,0.616,127,0.676,128,0.627,129,0.651,130,0.676,131,1.285,132,0.676,133,0.627,134,0.676,135,0.616,136,0.651,137,0.676,138,0.627,139,0.676,140,0.651,141,0.616,142,1.028,143,0.728,144,1.026,145,0.616,146,1.026,147,0.604,148,1.752,149,0.616,150,0.56,151,0.676,152,0.616,153,1.13,154,0.616,155,0.616,156,0.627,157,0.676,158,0.616,159,0.676,160,0.639,161,0.582,162,1.151,163,0.627,164,0.676,165,0.627,166,1.511,167,0.676,168,0.627,169,0.676,170,0.627,171,0.627,172,0.676,173,0.627,174,0.676,175,0.627,176,0.676,177,0.616,178,0.651,179,0.627,180,0.743,181,0.676,182,0.616,183,0.676,184,0.616,185,1.151,186,0.676,187,0.627,188,1.24,189,0.627,190,1.026,191,0.676,192,0.627,193,0.676,194,0.627,195,0.676,196,0.616,197,0.639,198,0.616,199,0.676,200,0.616,201,0.664,202,0.917,203,0.616,204,0.627,205,0.627,206,0.676,207,0.616,208,1.434,209,0.604,210,0.676,211,0.616,212,0.639,213,0.616,214,0.616,215,0.676,216,0.627,217,0.676,218,1.026,219,0.627,220,0.676,221,0.627,222,0.676,223,0.676,224,0.627,225,0.676,226,0.604,227,0.788,228,0.616,229,0.627,230,0.676,231,0.627,232,0.676,233,0.917,234,1.026,235,1.026,236,0.616,237,0.651,238,0.571,239,0.616,240,0.616,241,0.664,242,0.639,243,0.676,244,0.616,245,0.676,246,0.604,247,0.651,248,0.676,249,0.004,250,0.004,253,0.715,255,1.277,262,5.149,269,3.479,273,1.5,282,1.811,291,3.664,303,0.867,305,3.983,306,2.517,392,3.229,393,2.745,394,3.669,573,1.372,574,2.443,575,1.339,576,1.372,655,1.638,658,1.442,659,1.988,660,1.894,661,1.407,662,1.85,668,1.811,669,1.811,670,2.498,671,1.733,672,1.888,675,1.22,678,2.552,679,4.102,681,1.372,685,4.265,687,3.037,688,1.372,693,1.894,706,1.894,741,1.776,742,2.81,743,2.608,744,3.741,745,3.037,746,3.408,747,2.313,748,2.899,749,3.958,750,3.437,753,4.315,761,1.776,762,1.776,770,3.306,772,2.608,781,2.843,782,2.083,783,5.87,784,5.87,785,4.857,786,6.848,787,7.708,788,4.784,789,3.2,790,3.2,791,3.017,792,4.857,793,4.857,794,4.981,795,3.2,796,4.998,797,3.2,798,4.315,799,3.2,800,6.554,801,3.375,802,4.857,803,3.2,804,3.2,805,1.988,806,2.075,807,3.2,808,2.843,809,3.692,810,2.843,811,3.2,812,3.2,813,3.2,814,2.843,815,3.958,816,3.2,817,3.2,818,1.91,819,3.2,820,3.2,821,3.2,822,5.215,823,4.315,824,3.2,825,2.608,826,3.356,827,7.046,828,3.2,829,3.2,830,2.608,831,2.175,832,3.2,833,5.15,834,3.017,835,4.204]],["title/components/CardComponent.html",[0,0.17,133,0.914]],["body/components/CardComponent.html",[0,0.257,1,0.846,2,1.2,3,0.108,4,0.1,5,0.929,6,0.946,7,0.929,8,0.929,9,0.065,13,1.682,14,2.568,15,0.784,16,1.759,17,1.757,18,0.846,19,1.246,21,1.2,23,1.2,25,0.25,32,0.796,36,2.776,37,1.098,44,0.654,47,0.007,48,0.605,52,0.514,53,0.878,71,0.348,73,0.359,77,1.072,81,0.727,85,0.1,90,0.217,110,1.331,115,0.929,116,1.293,117,1.381,118,0.77,119,1.869,120,0.929,121,1.488,122,0.83,123,0.895,124,0.862,125,0.929,126,0.846,127,0.929,128,0.862,129,0.895,130,0.929,131,0.862,132,0.929,133,1.493,134,0.929,135,0.846,136,0.895,137,0.929,138,0.862,139,0.929,140,0.895,141,0.846,142,1.233,143,0.918,144,1.293,145,0.846,146,1.293,147,0.83,148,1.885,149,0.846,150,0.77,151,0.929,152,0.846,153,1.355,154,0.846,155,0.846,156,0.862,157,0.929,158,0.846,159,0.929,160,0.878,161,0.799,162,1.381,163,0.862,164,0.929,165,0.862,166,1.2,167,0.929,168,0.862,169,0.929,170,0.862,171,0.862,172,0.929,173,0.862,174,0.929,175,0.862,176,0.929,177,0.846,178,0.895,179,0.862,180,0.936,181,0.929,182,0.846,183,0.929,184,0.846,185,0.862,186,0.929,187,0.862,188,1.488,189,0.862,190,1.293,191,0.929,192,0.862,193,0.929,194,0.862,195,0.929,196,0.846,197,0.878,198,0.846,199,0.929,200,0.846,201,0.912,202,1.156,203,0.846,204,0.862,205,0.862,206,0.929,207,0.846,208,1.629,209,0.83,210,0.929,211,0.846,212,0.878,213,0.846,214,0.846,215,0.929,216,0.862,217,0.929,218,1.293,219,0.862,220,0.929,221,0.862,222,0.929,223,0.929,224,0.862,225,0.929,226,0.83,227,0.992,228,0.846,229,0.862,230,0.929,231,0.862,232,0.929,233,1.156,234,1.293,235,1.293,236,0.846,237,0.895,238,0.784,239,0.846,240,0.846,241,0.912,242,0.878,243,0.929,244,0.846,245,0.929,246,0.83,247,0.895,248,0.929,249,0.005,250,0.005,255,1.754,262,2.851,277,1.569,306,3.019,393,2.648,394,1.984,395,3.183,512,2.998,574,2.281,655,1.099,658,1.817,662,1.929,664,1.885,666,1.984,667,4.16,672,1.413,675,2.333,685,2.527,741,2.44,744,3.436,745,2.836,761,3.909,762,3.909,778,2.851,834,3.802,836,3.905,837,8.672,838,7.041,839,6.121,840,4.396,841,4.396,842,5.438,843,6.765,844,4.396,845,2.624,846,4.396,847,3.341,848,4.396]],["title/components/ChangePasswordPage.html",[0,0.17,135,0.897]],["body/components/ChangePasswordPage.html",[0,0.216,1,0.621,2,0.958,3,0.079,4,0.074,5,0.682,6,0.694,7,0.682,8,0.682,9,0.047,13,1.343,14,2.151,15,0.576,16,1.736,17,1.734,18,0.621,19,0.995,21,0.958,23,0.958,25,0.184,26,0.559,27,0.975,29,2.888,32,0.636,36,2.4,37,0.762,44,0.795,46,0.437,47,0.007,48,0.562,49,0.28,50,0.809,52,0.571,53,0.976,60,0.587,61,0.513,62,1.842,63,2.53,65,2.821,66,3.11,71,0.453,73,0.263,74,1.037,77,0.856,81,0.533,83,0.853,85,0.074,90,0.159,91,1.722,93,0.886,103,1.581,104,1.581,106,0.621,110,0.977,111,1.127,113,2.623,114,2.509,115,0.682,116,1.033,117,1.157,118,0.565,119,1.603,120,0.682,121,1.246,122,0.609,123,0.657,124,0.633,125,0.682,126,0.621,127,0.682,128,0.633,129,0.657,130,0.682,131,0.633,132,0.682,133,0.633,134,0.682,135,1.266,136,1.62,137,0.682,138,0.633,139,0.682,140,0.657,141,0.621,142,1.033,143,0.733,144,1.033,145,0.621,146,1.033,147,0.609,148,1.755,149,0.621,150,0.565,151,0.682,152,0.621,153,1.135,154,0.621,155,0.621,156,0.633,157,0.682,158,0.621,159,0.682,160,0.645,161,0.587,162,1.157,163,0.633,164,0.682,165,0.633,166,1.157,167,0.682,168,0.633,169,0.682,170,0.633,171,0.633,172,0.682,173,0.633,174,0.682,175,0.633,176,0.682,177,0.621,178,0.657,179,0.633,180,0.747,181,0.682,182,0.621,183,0.682,184,0.621,185,1.459,186,0.682,187,0.633,188,1.246,189,0.633,190,1.033,191,0.682,192,0.633,193,0.682,194,0.633,195,0.682,196,0.621,197,0.645,198,0.621,199,0.682,200,0.621,201,0.669,202,0.923,203,0.621,204,0.633,205,0.633,206,0.682,207,0.621,208,1.439,209,0.609,210,0.682,211,0.621,212,0.645,213,0.621,214,0.621,215,0.682,216,0.633,217,0.682,218,1.033,219,0.633,220,0.682,221,0.633,222,0.682,223,0.682,224,0.633,225,0.682,226,0.609,227,0.792,228,0.621,229,0.633,230,0.682,231,0.633,232,0.682,233,0.923,234,1.033,235,1.033,236,0.621,237,0.657,238,0.576,239,0.621,240,0.621,241,0.669,242,0.645,243,0.682,244,0.621,245,0.682,246,0.609,247,0.657,248,0.682,249,0.004,250,0.004,279,2.265,303,0.872,305,1.35,384,3.234,392,2.655,393,2.209,395,1.678,407,2.542,426,0.977,464,5.874,479,4.451,481,3.995,488,5.847,494,5.374,536,3.786,563,3.275,655,1.645,658,2.364,659,2.004,660,3.178,662,1.859,664,2.096,666,2.205,668,2.453,669,2.199,670,2.508,671,2.105,672,1.897,673,1.678,674,1.628,675,1.863,678,1.786,680,1.419,681,1.384,742,1.384,748,4.22,751,1.628,756,1.581,776,1.536,818,1.926,849,6.867,850,2.629,851,5.241,852,4.342,853,5.241,854,2.193,855,4.887,856,2.866,857,3.226,858,5.374,859,4.342,860,4.342,861,4.342,862,4.342,863,4.342,864,3.226,865,2.624,866,4.887,867,3.226,868,2.866,869,2.311,870,2.452,871,2.866,872,2.866,873,2.311,874,2.629,875,4.887,876,4.342,877,2.866,878,2.452,879,2.629,880,3.226,881,3.226,882,2.004,883,2.629,884,3.714,885,2.092,886,1.855,887,2.004,888,1.678,889,4.825,890,2.193,891,3.169,892,2.193,893,1.855,894,2.917,895,5.648,896,2.917,897,2.092,898,1.926,899,2.092,900,2.193,901,2.193,902,2.311,903,4.473,904,2.193,905,4.806,906,4.473,907,2.193,908,2.193,909,2.193,910,2.193,911,2.193,912,2.193,913,2.193,914,2.193]],["title/components/CheckboxComponent.html",[0,0.17,138,0.914]],["body/components/CheckboxComponent.html",[0,0.228,1,0.681,2,1.027,3,0.087,4,0.081,5,0.747,6,0.761,7,0.747,8,0.747,9,0.052,15,0.631,16,1.744,17,1.74,18,0.681,19,1.066,21,1.027,23,1.027,25,0.201,26,0.599,27,0.866,29,2.132,32,0.681,44,0.943,46,0.934,47,0.007,48,0.65,49,0.388,50,0.788,52,0.931,53,1.592,60,1.338,61,1.352,62,1.483,64,1.348,68,1.78,71,0.298,73,0.289,77,0.917,81,0.585,85,0.081,90,0.174,91,1.822,115,0.747,116,1.106,117,1.442,118,0.917,119,1.429,120,0.747,121,1.317,122,0.668,123,0.72,124,0.694,125,0.747,126,0.681,127,0.747,128,0.694,129,0.72,130,0.747,131,0.694,132,0.747,133,0.694,134,0.747,135,0.681,136,0.72,137,0.747,138,1.351,139,0.747,140,1.838,141,0.681,142,1.091,143,0.785,144,1.106,145,0.681,146,1.106,147,0.668,148,1.796,149,0.681,150,0.619,151,0.747,152,0.681,153,1.2,154,0.681,155,0.681,156,0.694,157,0.747,158,0.681,159,0.747,160,0.707,161,0.643,162,1.222,163,0.694,164,0.747,165,0.694,166,1.351,167,0.747,168,0.694,169,0.747,170,0.694,171,0.694,172,0.747,173,0.694,174,0.747,175,0.694,176,0.747,177,0.681,178,0.72,179,0.694,180,0.801,181,0.747,182,0.681,183,0.747,184,0.681,185,0.694,186,0.747,187,0.694,188,1.317,189,0.694,190,1.106,191,0.747,192,0.694,193,0.747,194,0.694,195,0.747,196,0.681,197,0.707,198,0.681,199,0.747,200,0.681,201,0.734,202,0.989,203,0.681,204,0.694,205,0.694,206,0.747,207,0.681,208,1.497,209,0.668,210,0.747,211,0.681,212,0.707,213,0.681,214,0.681,215,0.747,216,0.694,217,0.747,218,1.106,219,0.694,220,0.747,221,0.694,222,0.747,223,0.747,224,0.694,225,0.747,226,0.668,227,0.849,228,0.681,229,0.694,230,0.747,231,0.694,232,0.747,233,0.989,234,1.554,235,1.106,236,0.681,237,0.72,238,0.631,239,0.681,240,0.681,241,0.734,242,0.707,243,0.747,244,0.681,245,0.747,246,0.668,247,0.72,248,0.747,249,0.004,250,0.004,253,1.539,272,1.899,273,1.925,277,1.262,279,3.408,282,1.319,288,1.115,296,2.303,303,0.934,321,1.138,323,3.145,356,3.347,360,1.899,533,3.347,625,1.996,629,2.565,655,1.309,656,1.348,661,1.556,675,1.348,706,2.042,742,2.245,743,1.899,759,2.689,772,1.899,773,2.111,779,1.785,782,1.517,809,5.237,826,1.685,831,3.559,915,3.143,916,2.641,917,4.267,918,6.234,919,5.236,920,3.125,921,3.125,922,3.962,923,4.596,924,3.72,925,3.72,926,3.125,927,3.125,928,3.125,929,3.125,930,4.596,931,3.125,932,3.538,933,5.421,934,2.197,935,3.011,936,2.111,937,2.907,938,2.111,939,2.111,940,2.034,941,1.899,942,1.964,943,2.197,944,4.564,945,2.907,946,1.964,947,2.197,948,2.034,949,1.964,950,2.197,951,4.39,952,2.111,953,1.964,954,2.034,955,2.034,956,2.111,957,2.111,958,1.262,959,3.125,960,2.111,961,2.197,962,3.125,963,2.494,964,4.596,965,2.111,966,3.46,967,2.034,968,3.584,969,3.125,970,2.363,971,4.112,972,1.964,973,2.111,974,3.125,975,2.111,976,2.197,977,2.111,978,2.111,979,2.197,980,3.125,981,2.111,982,2.111,983,2.294,984,2.197,985,2.197,986,2.197,987,2.197,988,2.197,989,2.111,990,2.907,991,2.197,992,3.125,993,2.883,994,2.689,995,2.197,996,2.294,997,2.197,998,5.236,999,3.395,1000,3.538,1001,3.538,1002,3.145,1003,2.689,1004,3.143,1005,3.538,1006,2.689,1007,2.883]],["title/directives/ClickStopPropagationDirective.html",[118,0.816,240,0.897]],["body/directives/ClickStopPropagationDirective.html",[3,0.166,4,0.154,9,0.099,15,1.206,16,1.443,25,0.385,27,1.431,32,1.052,44,0.865,46,0.916,47,0.007,48,0.537,49,0.321,50,0.773,52,0.79,53,1.616,57,3.311,62,1.455,71,0.385,73,0.551,85,0.154,90,0.333,118,1.416,239,1.301,240,1.557,241,1.861,242,1.832,249,0.006,250,0.006,288,2.549,546,7.312,1008,7.691,1009,6.005,1010,8.089,1011,8.089,1012,8.089,1013,6.759,1014,8.089,1015,8.089,1016,8.089,1017,6.759,1018,6.759,1019,6.759,1020,6.759,1021,6.759,1022,6.759]],["title/components/ControlAccessor.html",[0,0.17,140,0.948]],["body/components/ControlAccessor.html",[0,0.253,1,0.521,2,0.837,3,0.066,4,0.062,5,0.572,7,0.902,8,0.572,9,0.04,13,1.173,15,0.483,16,1.717,17,1.711,18,0.521,19,0.869,25,0.154,26,0.488,27,1.242,29,2.708,32,0.555,37,0.935,44,0.935,46,0.884,47,0.007,48,0.652,49,0.357,50,0.746,52,0.944,53,1.664,60,1.09,61,1.401,62,1.665,64,1.627,65,2.603,68,1.979,71,0.341,73,0.221,74,0.871,77,0.747,81,0.448,83,0.716,85,0.062,90,0.296,91,1.834,93,0.744,106,1.334,115,0.572,116,0.902,117,1.422,118,0.925,119,1.243,120,0.572,121,1.116,122,0.511,123,0.551,124,0.531,125,0.572,126,0.521,127,0.572,128,0.531,129,0.551,130,0.572,131,0.531,132,0.572,133,0.531,134,0.572,135,0.521,136,0.551,137,0.572,138,0.531,139,0.572,140,1.22,141,0.521,142,0.925,143,0.64,144,0.902,145,0.521,146,0.902,147,0.511,148,1.673,149,0.521,150,0.474,151,0.572,152,0.521,153,1.017,154,0.521,155,0.521,156,0.531,157,0.572,158,0.521,159,0.572,160,0.541,161,0.492,162,1.036,163,0.531,164,0.572,165,0.531,166,1.175,167,0.572,168,0.531,169,0.572,170,0.531,171,0.531,172,0.572,173,0.531,174,0.572,175,0.531,176,0.572,177,0.521,178,0.551,179,0.531,180,0.653,181,0.572,182,0.521,183,0.572,184,0.521,185,0.531,186,0.572,187,0.531,188,1.116,189,0.531,190,0.902,191,0.572,192,0.531,193,0.572,194,0.531,195,0.572,196,0.521,197,0.541,198,0.521,199,0.572,200,0.521,201,0.561,202,0.806,203,0.521,204,0.531,205,0.531,206,0.572,207,0.521,208,1.328,209,0.511,210,0.572,211,0.521,212,0.541,213,0.521,214,0.521,215,0.572,216,0.531,217,0.572,218,0.902,219,0.531,220,0.572,221,0.531,222,0.572,223,0.572,224,0.531,225,0.572,226,0.511,227,0.692,228,0.521,229,0.531,230,0.572,231,0.531,232,0.572,233,0.806,234,1.588,235,0.902,236,0.521,237,0.551,238,0.483,239,0.521,240,0.521,241,0.561,242,0.541,243,0.572,244,0.521,245,0.572,246,0.511,247,0.551,248,0.572,249,0.003,250,0.003,253,1.548,272,2.291,273,2.015,279,3.483,282,1.591,288,1.889,296,3.19,301,2.058,309,2.543,321,1.372,323,3.496,356,3.721,360,2.291,422,2.768,524,4.305,533,3.219,625,2.285,629,2.937,706,2.337,779,2.153,782,1.83,791,1.682,826,2.033,920,3.153,921,3.153,922,4.849,923,4.616,924,3.578,925,3.578,926,2.547,927,2.547,928,2.547,929,2.547,931,3.153,935,3.985,936,2.547,937,3.328,938,2.547,939,3.153,940,2.454,941,2.291,942,2.369,944,5.046,945,4.482,946,2.369,948,2.454,949,2.369,951,4.726,952,2.547,953,3.328,954,2.454,955,2.454,956,2.547,957,2.547,958,1.523,959,3.578,960,2.547,962,3.578,963,2.855,964,4.9,965,2.547,966,3.847,967,2.454,968,3.985,969,3.578,970,2.705,971,4.486,972,2.369,973,2.547,974,3.578,975,2.547,977,2.547,978,2.547,980,3.578,981,3.153,982,2.547,984,2.651,985,2.651,986,2.651,987,2.651,989,2.547,990,3.621,992,3.578,994,4.958,1023,7.828,1024,2.406,1025,3.792,1026,3.478,1027,3.118,1028,4.268,1029,3.244,1030,5.283,1031,2.768,1032,3.057,1033,3.591,1034,5.316,1035,1.84,1036,2.708,1037,3.478,1038,3.478,1039,3.244,1040,2.454,1041,2.708,1042,2.708,1043,2.708,1044,2.708,1045,2.708,1046,2.708,1047,2.708,1048,2.708,1049,2.708,1050,2.708,1051,2.708,1052,2.708,1053,2.708,1054,2.708,1055,3.792,1056,2.708,1057,2.708,1058,2.207,1059,2.708,1060,2.708,1061,2.708,1062,2.708,1063,2.708,1064,5.283,1065,2.153,1066,2.207,1067,1.84,1068,2.207,1069,2.708,1070,2.406,1071,2.207,1072,2.058,1073,2.058,1074,2.708,1075,2.708,1076,4.268,1077,2.708,1078,2.708,1079,2.708,1080,2.708,1081,2.406,1082,2.708,1083,2.708,1084,2.708,1085,5.283,1086,2.708,1087,2.207,1088,2.708,1089,2.708,1090,2.708,1091,2.207,1092,4.268,1093,4.268,1094,2.708,1095,2.708,1096,2.708,1097,2.708,1098,2.708,1099,2.708]],["title/components/CreateProjectMembersPage.html",[0,0.17,141,0.897]],["body/components/CreateProjectMembersPage.html",[0,0.217,1,0.946,2,0.964,3,0.08,4,0.074,5,0.687,6,0.7,7,0.687,8,0.687,9,0.048,11,2.109,15,0.58,16,1.737,17,1.735,18,1.141,19,1.444,21,0.964,23,0.964,25,0.185,26,0.562,27,1.417,28,2.279,29,2.848,32,0.639,37,1.031,44,0.873,46,0.441,47,0.007,48,0.615,49,0.337,50,0.811,52,0.575,53,1.184,60,1.202,61,0.782,62,1.668,63,2.542,65,2.366,66,2.607,68,1.693,71,0.494,73,0.265,74,1.046,77,1.579,78,1.806,81,0.538,83,0.86,85,0.074,87,3.121,88,0.929,90,0.16,91,1.811,93,0.894,103,1.593,104,1.593,105,1.806,106,0.946,109,2.64,110,1.795,111,1.718,112,2.481,113,0.947,114,1.025,115,0.687,116,1.039,117,1.162,118,0.57,119,1.37,120,0.687,121,1.253,122,0.614,123,0.662,124,0.638,125,0.687,126,0.626,127,0.687,128,0.638,129,0.662,130,0.687,131,0.638,132,0.687,133,0.638,134,0.687,135,0.626,136,0.662,137,0.687,138,0.638,139,0.687,140,0.662,141,1.272,142,1.458,143,1.414,144,1.039,145,0.626,146,1.039,147,0.614,148,1.759,149,0.626,150,0.57,151,0.687,152,0.626,153,1.141,154,0.626,155,0.626,156,0.638,157,0.687,158,0.626,159,0.687,160,0.65,161,0.592,162,1.162,163,0.638,164,0.687,165,0.638,166,0.964,167,0.687,168,0.638,169,0.687,170,0.638,171,0.638,172,0.687,173,0.638,174,0.687,175,0.638,176,0.687,177,0.626,178,0.662,179,0.638,180,1.085,181,0.687,182,0.626,183,0.687,184,0.626,185,0.638,186,0.687,187,0.638,188,1.253,189,0.638,190,1.039,191,0.687,192,0.638,193,0.687,194,0.638,195,0.687,196,0.626,197,0.65,198,0.626,199,0.687,200,0.626,201,0.675,202,0.929,203,0.626,204,0.638,205,0.638,206,0.687,207,0.626,208,1.444,209,0.614,210,0.687,211,0.626,212,0.65,213,0.626,214,0.626,215,0.687,216,0.638,217,0.687,218,1.039,219,0.638,220,0.687,221,0.638,222,0.687,223,0.687,224,0.638,225,0.687,226,0.614,227,0.797,228,0.626,229,0.638,230,0.687,231,0.638,232,0.687,233,0.929,234,1.039,235,1.039,236,0.626,237,0.662,238,0.58,239,0.626,240,0.626,241,0.675,242,0.65,243,0.687,244,0.626,245,0.687,246,0.614,247,0.662,248,0.687,249,0.004,250,0.004,253,0.727,256,2.162,268,3.054,277,1.161,303,0.877,305,2.058,309,1.917,321,2.566,384,3.587,426,0.985,529,4.84,536,3.797,539,3.497,540,3.797,541,4.456,563,3.939,571,2.109,573,1.395,574,1.212,575,1.361,576,1.395,585,1.806,632,2.02,641,2.33,642,2.02,648,1.941,655,1.482,656,1.24,657,2.557,658,1.76,661,2.162,662,1.868,671,1.161,672,1.046,675,1.24,720,1.941,776,1.549,865,2.64,888,1.692,1002,2.481,1100,6.328,1101,6.328,1102,2.651,1103,5.267,1104,4.369,1105,4.832,1106,4.832,1107,5.385,1108,5.385,1109,1.941,1110,3.691,1111,4.917,1112,3.253,1113,3.054,1114,3.342,1115,3.189,1116,3.189,1117,3.054,1118,3.342,1119,3.253,1120,3.253,1121,5.385,1122,3.253,1123,3.342,1124,3.253,1125,2.89,1126,3.253,1127,2.651,1128,2.472,1129,2.02,1130,2.211,1131,2.211,1132,2.02,1133,2.211,1134,2.02,1135,2.109,1136,2.472,1137,2.651,1138,2.472,1139,2.472,1140,2.651,1141,4.007,1142,2.651,1143,4.007,1144,2.89,1145,2.89,1146,2.89,1147,4.369,1148,3.189,1149,2.89]],["title/components/CreateProjectPage.html",[0,0.17,145,0.897]],["body/components/CreateProjectPage.html",[0,0.216,1,0.943,2,0.961,3,0.079,4,0.074,5,0.684,6,0.697,7,0.684,8,0.684,9,0.048,11,2.099,15,0.578,16,1.736,17,1.734,18,1.138,19,1.441,21,0.961,23,0.961,25,0.184,26,0.56,27,1.459,28,2.27,29,2.844,32,0.637,37,1.028,44,0.872,46,0.439,47,0.007,48,0.614,49,0.336,50,0.676,52,0.573,53,1.181,60,1.288,61,0.94,62,1.666,63,2.535,65,2.359,66,2.6,68,1.688,71,0.493,73,0.264,74,1.041,77,1.609,78,1.797,81,0.535,83,0.856,85,0.074,87,3.114,88,0.925,90,0.16,91,1.724,93,0.89,103,1.586,104,1.586,105,1.797,106,0.943,109,3.174,110,1.996,111,1.712,112,2.472,113,1.427,114,1.544,115,0.684,116,1.035,117,1.159,118,0.567,119,1.367,120,0.684,121,1.249,122,0.611,123,0.659,124,0.635,125,0.684,126,0.623,127,0.684,128,0.635,129,0.659,130,0.684,131,0.635,132,0.684,133,0.635,134,0.684,135,0.623,136,0.659,137,0.684,138,0.635,139,0.684,140,0.659,141,0.623,142,1.456,143,1.117,144,1.035,145,1.269,146,1.035,147,0.611,148,1.757,149,0.623,150,0.567,151,0.684,152,0.623,153,1.138,154,0.623,155,0.623,156,0.635,157,0.684,158,0.623,159,0.684,160,0.647,161,0.589,162,1.159,163,0.635,164,0.684,165,0.635,166,0.961,167,0.684,168,0.635,169,0.684,170,0.635,171,0.635,172,0.684,173,0.635,174,0.684,175,0.635,176,0.684,177,0.623,178,0.659,179,0.635,180,1.083,181,0.684,182,0.623,183,0.684,184,0.623,185,0.635,186,0.684,187,0.635,188,1.249,189,0.635,190,1.035,191,0.684,192,0.635,193,0.684,194,0.635,195,0.684,196,0.623,197,0.647,198,0.623,199,0.684,200,0.623,201,0.671,202,0.925,203,0.623,204,0.635,205,0.635,206,0.684,207,0.623,208,1.441,209,0.611,210,0.684,211,0.623,212,0.647,213,0.623,214,0.623,215,0.684,216,0.635,217,0.684,218,1.035,219,0.635,220,0.684,221,0.635,222,0.684,223,0.684,224,0.635,225,0.684,226,0.611,227,0.794,228,0.623,229,0.635,230,0.684,231,0.635,232,0.684,233,0.925,234,1.035,235,1.035,236,0.623,237,0.659,238,0.578,239,0.623,240,0.623,241,0.671,242,0.647,243,0.684,244,0.623,245,0.684,246,0.611,247,0.659,248,0.684,249,0.004,250,0.004,253,0.723,256,2.155,268,3.043,277,1.155,303,0.874,305,2.05,309,1.91,321,2.562,384,3.584,426,0.98,529,4.831,536,3.791,539,3.492,540,3.791,541,4.449,563,3.931,571,2.099,573,1.388,574,1.207,575,1.355,576,1.388,585,1.797,632,2.011,641,2.319,642,2.011,648,1.932,655,1.648,656,1.234,657,2.548,658,1.957,661,2.155,662,1.544,668,1.207,669,1.207,670,1.234,671,1.155,672,1.041,678,0.98,720,1.932,776,1.542,865,2.631,888,1.684,899,2.099,1002,2.472,1100,6.321,1105,4.818,1106,4.818,1107,5.372,1108,5.372,1109,1.932,1110,3.685,1113,3.043,1114,3.33,1115,3.177,1116,3.177,1117,3.043,1118,3.33,1121,5.372,1123,3.33,1127,2.638,1128,2.46,1129,2.011,1130,2.2,1131,2.2,1132,2.011,1133,2.2,1134,2.011,1135,2.099,1136,2.46,1137,2.638,1138,2.46,1139,2.46,1140,2.638,1141,4.818,1142,2.638,1143,3.993,1144,2.876,1145,2.876,1146,2.876,1147,4.353,1148,3.177,1150,6.321,1151,2.638,1152,5.252,1153,4.353,1154,4.9,1155,3.237,1156,3.237,1157,3.237,1158,3.237,1159,3.237,1160,3.237,1161,3.237,1162,3.993,1163,3.177]],["title/components/CreateWorkspacePage.html",[0,0.17,147,0.88]],["body/components/CreateWorkspacePage.html",[0,0.277,1,0.733,2,1.084,3,0.093,4,0.087,5,0.805,6,0.82,7,0.805,8,0.805,9,0.056,15,0.68,16,1.749,17,1.747,18,0.733,19,1.125,21,1.084,23,1.084,25,0.217,26,0.632,27,1.408,28,2.561,29,2.959,32,0.719,37,1.015,44,0.763,46,0.516,47,0.007,48,0.648,49,0.262,50,0.744,52,0.445,53,1.104,60,1.183,61,0.606,62,1.798,63,2.79,65,2.596,66,2.861,71,0.476,73,0.311,74,1.225,77,1.641,81,0.63,83,1.007,85,0.087,90,0.188,91,0.805,103,1.866,104,1.866,105,2.114,106,1.064,110,1.153,111,1.331,115,0.805,116,1.168,117,1.276,118,0.667,119,1.48,120,0.805,121,1.375,122,0.719,123,0.775,124,0.747,125,0.805,126,0.733,127,0.805,128,0.747,129,0.775,130,0.805,131,0.747,132,0.805,133,0.747,134,0.805,135,0.733,136,0.775,137,0.805,138,0.747,139,0.805,140,0.775,141,0.733,142,1.578,143,0.829,144,1.168,145,0.733,146,1.168,147,1.348,148,1.827,149,0.733,150,0.667,151,0.805,152,0.733,153,1.252,154,0.733,155,0.733,156,0.747,157,0.805,158,0.733,159,0.805,160,0.761,161,0.693,162,1.276,163,0.747,164,0.805,165,0.747,166,1.084,167,0.805,168,0.747,169,0.805,170,0.747,171,0.747,172,0.805,173,0.747,174,0.805,175,0.747,176,0.805,177,0.733,178,0.775,179,0.747,180,1.091,181,0.805,182,0.733,183,0.805,184,0.733,185,0.747,186,0.805,187,0.747,188,1.375,189,0.747,190,1.168,191,0.805,192,0.747,193,0.805,194,0.747,195,0.805,196,0.733,197,0.761,198,0.733,199,0.805,200,0.733,201,0.79,202,1.044,203,0.733,204,0.747,205,0.747,206,0.805,207,0.733,208,1.543,209,0.719,210,0.805,211,0.733,212,0.761,213,0.733,214,0.733,215,0.805,216,0.747,217,0.805,218,1.168,219,0.747,220,0.805,221,0.747,222,0.805,223,0.805,224,0.747,225,0.805,226,0.719,227,0.896,228,0.733,229,0.747,230,0.805,231,0.747,232,0.805,233,1.044,234,1.168,235,1.168,236,0.733,237,0.775,238,1.455,239,0.733,240,0.733,241,0.79,242,0.761,243,0.805,244,0.733,245,0.805,246,0.719,247,0.775,248,0.805,249,0.004,250,0.004,253,1.235,256,2.431,268,3.433,305,1.594,309,2.155,321,2.686,370,1.276,384,3.706,426,1.153,563,4.207,655,0.952,658,1.131,662,1.2,663,1.675,865,2.968,898,2.273,1002,2.788,1100,5.761,1105,5.302,1108,5.817,1109,2.273,1110,3.884,1113,3.433,1114,3.757,1115,3.584,1116,3.584,1117,3.433,1118,3.757,1121,5.817,1123,3.757,1129,2.366,1130,2.589,1131,2.589,1132,2.366,1134,2.366,1142,3.104,1143,4.505,1148,2.47,1163,3.584,1164,5.761,1165,3.104,1166,5.78,1167,4.911,1168,5.528,1169,3.809,1170,3.809,1171,3.384,1172,3.809,1173,3.384]],["title/modules/DashboardModule.html",[396,1.817,1174,3.542]],["body/modules/DashboardModule.html",[1,1.688,3,0.131,4,0.122,9,0.078,11,3.456,47,0.007,71,0.546,73,0.435,74,1.714,85,0.122,90,0.263,141,1.688,143,1.235,145,1.688,147,1.656,152,1.688,154,1.688,155,1.688,175,1.72,187,1.72,196,1.688,233,1.656,236,1.688,249,0.005,250,0.005,398,2.177,399,3.743,405,5.235,406,4.16,407,2.772,408,2.47,410,4.16,411,3.32,413,3.415,421,4.051,422,4.52,459,4.33,460,3.311,461,4.738,1101,4.051,1128,4.051,1150,4.051,1164,4.051,1174,7.46,1175,4.735,1176,4.735,1177,4.735,1178,4.735,1179,6.282,1180,4.709,1181,5.33,1182,4.735,1183,4.344,1184,5.33,1185,5.33,1186,4.344,1187,5.33,1188,4.735,1189,3.817,1190,4.735,1191,5.33,1192,5.33,1193,6.901,1194,6.193,1195,6.193,1196,6.193,1197,6.901,1198,4.051,1199,4.051,1200,4.051,1201,4.735,1202,4.051,1203,5.298,1204,4.735,1205,4.051,1206,5.33,1207,3.311]],["title/modules/DashboardRoutingModule.html",[396,1.817,1179,3.337]],["body/modules/DashboardRoutingModule.html",[0,0.339,3,0.14,4,0.13,9,0.084,47,0.007,71,0.536,73,0.465,85,0.13,87,2.506,89,2.274,90,0.281,93,1.566,141,1.401,142,1.275,143,1.267,145,1.401,147,1.375,152,1.401,153,1.097,154,1.401,155,1.401,160,1.454,161,1.037,180,0.872,196,1.401,208,1.16,236,1.401,249,0.005,250,0.005,396,2.222,398,2.328,411,2.714,413,3.566,424,4.345,425,4.688,426,1.726,433,6.513,435,6.468,439,4.645,452,3.54,480,3.874,1101,4.332,1150,4.332,1164,4.332,1179,5.214,1193,7.126,1194,6.468,1195,6.468,1196,6.468,1197,7.126,1198,4.332,1199,4.332,1200,4.332,1201,5.064,1202,4.332,1203,5.533,1204,5.064,1205,4.332,1208,5.7,1209,5.7,1210,4.645,1211,5.7,1212,7.126,1213,6.468,1214,6.468,1215,5.7,1216,5.7,1217,7.126,1218,7.28,1219,5.7,1220,5.7,1221,7.28,1222,5.7,1223,5.7,1224,5.7]],["title/components/DeleteAccountPage.html",[0,0.17,149,0.897]],["body/components/DeleteAccountPage.html",[0,0.229,1,0.687,2,1.034,3,0.088,4,0.082,5,0.755,6,0.769,7,0.755,8,0.755,9,0.052,13,1.449,14,2.286,15,0.637,16,1.744,17,1.743,18,0.687,19,1.073,21,1.034,23,1.034,25,0.203,29,2.526,32,0.686,36,2.524,37,0.822,44,0.67,46,0.715,47,0.007,48,0.614,49,0.25,50,0.603,52,0.616,53,1.054,71,0.357,73,0.291,77,0.923,81,0.59,85,0.082,90,0.176,91,1.325,93,0.982,110,1.082,111,1.248,113,2.649,114,2.435,115,0.755,116,1.114,117,1.229,118,0.625,119,1.737,120,0.755,121,1.325,122,0.675,123,0.727,124,0.7,125,0.755,126,0.687,127,0.755,128,0.7,129,0.727,130,0.755,131,0.7,132,0.755,133,0.7,134,0.755,135,0.687,136,0.727,137,0.755,138,0.7,139,0.755,140,0.727,141,0.687,142,1.098,143,0.791,144,1.114,145,0.687,146,1.114,147,0.675,148,1.8,149,1.332,150,1.437,151,0.755,152,0.687,153,1.206,154,0.687,155,0.687,156,0.7,157,0.755,158,0.687,159,0.755,160,0.714,161,0.65,162,1.229,163,0.7,164,0.755,165,0.7,166,1.229,167,0.755,168,0.7,169,0.755,170,0.7,171,0.7,172,0.755,173,0.7,174,0.755,175,0.7,176,0.755,177,0.687,178,0.727,179,0.7,180,0.806,181,0.755,182,0.687,183,0.755,184,0.687,185,1.515,186,0.755,187,0.7,188,1.325,189,0.7,190,1.114,191,0.755,192,0.7,193,0.755,194,0.7,195,0.755,196,0.687,197,0.714,198,0.687,199,0.755,200,0.687,201,0.741,202,1.55,203,0.687,204,0.7,205,0.7,206,0.755,207,0.687,208,1.503,209,0.675,210,0.755,211,0.687,212,0.714,213,0.687,214,0.687,215,0.755,216,0.7,217,0.755,218,1.114,219,0.7,220,0.755,221,0.7,222,0.755,223,0.755,224,0.7,225,0.755,226,0.675,227,0.855,228,0.687,229,0.7,230,0.755,231,0.7,232,0.755,233,0.996,234,1.114,235,1.114,236,0.687,237,0.727,238,0.637,239,0.687,240,0.687,241,1.3,242,0.714,243,0.755,244,0.687,245,0.755,246,0.675,247,0.727,248,0.755,249,0.004,250,0.004,303,1.119,305,1.495,384,3.345,392,2.758,393,2.566,395,1.858,426,1.082,467,5.262,468,3.777,481,4.149,483,4.685,494,4.765,536,3.916,655,1.567,658,2.193,659,2.219,660,3.199,662,1.976,664,1.532,666,1.612,668,2.337,669,1.966,670,2.39,671,1.275,672,1.149,675,2.01,678,1.898,680,2.319,681,2.262,687,1.655,742,1.532,746,1.858,747,1.701,748,4.407,750,2.444,751,1.802,756,1.75,776,1.701,818,2.132,854,2.428,873,2.558,874,2.911,885,2.316,886,2.054,887,2.219,888,1.858,889,5.011,890,2.428,891,3.42,892,2.428,893,2.054,894,3.148,895,5.792,896,3.148,898,2.132,899,2.316,900,2.428,901,2.428,902,2.558,903,4.706,904,2.428,905,5.019,906,4.706,907,2.428,908,2.428,909,2.428,910,2.428,911,2.428,912,2.428,913,2.428,914,2.428,1225,6.15,1226,2.715,1227,5.109,1228,4.298,1229,3.174,1230,5.274,1231,3.174,1232,3.174,1233,3.572,1234,3.572,1235,3.777,1236,5.274,1237,5.274,1238,4.706,1239,4.008,1240,2.584]],["title/injectables/DialogService.html",[317,1.628,539,2.103]],["body/injectables/DialogService.html",[0,0.301,3,0.105,4,0.098,9,0.063,20,5.109,25,0.245,26,0.689,27,0.711,28,4.326,32,0.784,37,1.085,41,2.671,44,0.96,46,1.146,47,0.007,48,0.671,49,0.416,50,0.966,52,1.038,53,0.859,60,1.372,61,0.958,62,1.623,71,0.491,73,0.351,76,2.671,77,1.48,78,2.387,83,1.137,85,0.098,90,0.212,91,1.739,93,1.912,106,1.626,113,1.252,122,0.812,123,1.227,143,1.267,150,1.055,249,0.005,250,0.005,253,1.774,255,2.777,256,3.06,261,3.08,263,4.891,266,6.177,269,5.895,270,4.281,271,6.708,272,3.236,275,5.289,291,3.619,303,1.242,307,4.317,308,4.73,309,3.096,317,2.106,319,2.17,321,2.425,332,4.097,365,3.821,368,2.17,369,2.048,370,1.441,539,2.72,570,2.309,633,4.912,634,4.912,640,4.912,642,2.671,648,2.567,678,1.302,709,2.651,1002,3.511,1003,4.581,1027,3.135,1241,3.821,1242,4.912,1243,7.055,1244,6.959,1245,6.7,1246,6.028,1247,6.028,1248,3.597,1249,6.028,1250,6.959,1251,4.301,1252,8.977,1253,4.301,1254,6.028,1255,4.301,1256,6.708,1257,6.028,1258,8.231,1259,7.313,1260,4.301,1261,6.028,1262,4.301,1263,6.028,1264,4.301,1265,6.028,1266,4.301,1267,6.028,1268,4.301,1269,6.028,1270,6.028,1271,4.317,1272,5.355,1273,6.028,1274,4.301,1275,6.028,1276,4.301,1277,4.301,1278,4.301,1279,4.301,1280,2.671,1281,2.387,1282,3.821,1283,5.671,1284,3.821,1285,4.301,1286,4.301,1287,3.821,1288,3.269,1289,4.301,1290,4.301,1291,4.301,1292,6.028,1293,4.301,1294,4.301,1295,4.301,1296,4.301,1297,4.301,1298,6.028,1299,6.028,1300,6.7,1301,4.581,1302,4.581]],["title/classes/ESet.html",[90,0.23,1303,3.542]],["body/classes/ESet.html",[3,0.176,4,0.164,9,0.105,25,0.408,32,1.089,44,0.766,46,0.971,47,0.007,48,0.569,49,0.34,50,0.819,52,0.837,53,1.431,85,0.164,90,0.353,249,0.006,250,0.006,279,3.88,916,4.224,1040,4.12,1303,6.364,1304,7.439,1305,6.366,1306,6.364,1307,8.373,1308,7.165,1309,5.132,1310,7.165,1311,7.165,1312,7.165]],["title/components/EditProjectMembersPage.html",[0,0.17,152,0.897]],["body/components/EditProjectMembersPage.html",[0,0.197,1,0.842,2,0.858,3,0.069,4,0.064,5,0.59,6,0.602,7,0.59,8,0.59,9,0.041,11,1.812,15,0.499,16,1.723,17,1.72,18,1.038,19,1.348,21,0.858,23,0.858,25,0.159,26,0.5,27,1.523,28,2.827,29,2.733,31,3.497,32,0.569,37,0.951,39,3.134,44,0.917,46,0.731,47,0.007,48,0.62,49,0.371,50,0.839,52,0.821,53,1.467,60,1.204,61,0.857,62,1.636,63,2.312,65,2.151,66,2.371,68,1.891,71,0.484,73,0.228,74,0.899,77,1.569,78,1.551,81,0.462,83,0.739,85,0.064,87,2.912,88,1.538,89,2.802,90,0.138,91,1.749,93,0.768,103,1.369,104,1.369,105,1.551,106,0.842,109,2.349,110,1.633,111,1.528,112,2.207,113,0.814,114,0.881,115,0.59,116,0.924,117,1.057,118,0.489,119,1.265,120,0.59,121,1.139,122,0.528,123,0.569,124,0.548,125,0.59,126,0.538,127,0.59,128,0.548,129,0.569,130,0.59,131,0.548,132,0.59,133,0.548,134,0.59,135,0.538,136,0.569,137,0.59,138,0.548,139,0.59,140,0.569,141,0.538,142,0.944,143,1.437,144,0.924,145,0.538,146,0.924,147,0.528,148,1.688,149,0.538,150,0.489,151,0.59,152,1.174,153,1.538,154,0.538,155,0.538,156,0.548,157,0.59,158,0.538,159,0.59,160,0.558,161,0.508,162,1.057,163,0.548,164,0.59,165,0.548,166,0.858,167,0.59,168,0.548,169,0.59,170,0.548,171,0.548,172,0.59,173,0.548,174,0.59,175,0.548,176,0.59,177,0.538,178,0.569,179,0.548,180,1.013,181,0.59,182,0.538,183,0.59,184,0.538,185,0.548,186,0.59,187,0.548,188,1.139,189,0.548,190,0.924,191,0.59,192,0.548,193,0.59,194,0.548,195,0.59,196,0.538,197,0.558,198,0.538,199,0.59,200,0.538,201,0.58,202,0.826,203,0.538,204,0.548,205,0.548,206,0.59,207,0.538,208,1.348,209,0.528,210,0.59,211,0.538,212,0.558,213,0.538,214,0.538,215,0.59,216,0.548,217,0.59,218,0.924,219,0.548,220,0.59,221,0.548,222,0.59,223,0.59,224,0.548,225,0.59,226,0.528,227,0.709,228,0.538,229,0.548,230,0.59,231,0.548,232,0.59,233,0.826,234,0.924,235,0.924,236,0.538,237,0.569,238,0.499,239,0.538,240,0.538,241,0.58,242,0.558,243,0.59,244,0.538,245,0.59,246,0.528,247,0.569,248,0.59,249,0.003,250,0.003,253,0.978,256,1.924,268,2.718,277,0.997,305,1.831,309,2.379,321,2.731,384,3.463,426,0.846,529,4.555,533,3.275,536,4.054,539,3.313,540,3.596,541,4.221,563,4.336,570,1.501,571,1.812,573,1.199,574,1.042,575,1.169,576,1.199,585,1.551,586,2.516,587,2.124,632,1.736,641,2.002,642,1.736,648,1.668,651,1.668,655,1.348,656,1.065,657,2.276,658,1.601,661,1.924,662,1.699,671,0.997,672,0.899,675,1.065,720,1.668,769,1.884,776,1.331,865,2.349,882,1.736,888,1.454,1002,2.207,1065,1.41,1102,2.278,1103,4.791,1104,3.887,1107,4.972,1109,1.668,1110,3.496,1114,2.974,1115,2.837,1116,2.837,1117,2.718,1118,2.974,1123,2.974,1125,2.483,1127,2.278,1128,2.124,1129,1.736,1130,1.9,1131,1.9,1132,1.736,1133,1.9,1134,1.736,1135,3.497,1138,2.124,1139,2.124,1140,2.278,1149,2.483,1198,6.584,1313,6.584,1314,4.394,1315,4.394,1316,4.637,1317,3.887,1318,3.887,1319,4.972,1320,4.376,1321,2.795,1322,3.887,1323,2.795,1324,6.193,1325,3.887,1326,2.795,1327,3.326,1328,2.795,1329,3.134,1330,3.326,1331,3.326,1332,3.887,1333,3.887,1334,2.795,1335,2.795,1336,2.837,1337,2.795,1338,2.974,1339,2.795,1340,3.566,1341,2.795,1342,2.974,1343,2.795,1344,3.566,1345,2.795,1346,2.974,1347,2.795,1348,2.278,1349,2.483,1350,2.483,1351,2.483,1352,2.483,1353,3.566,1354,2.795,1355,2.483,1356,2.278,1357,5.397,1358,2.483,1359,2.483,1360,2.483,1361,2.278,1362,2.483,1363,3.887,1364,2.611,1365,2.795,1366,2.795,1367,2.483,1368,2.483]],["title/components/EditProjectPage.html",[0,0.17,154,0.897]],["body/components/EditProjectPage.html",[0,0.206,1,0.575,2,0.904,3,0.073,4,0.068,5,0.631,6,0.643,7,0.631,8,0.631,9,0.044,13,1.266,15,0.533,16,1.729,17,1.725,18,0.575,19,0.938,21,0.904,23,0.904,25,0.17,26,0.527,27,1.535,28,2.93,29,2.785,31,3.648,32,0.599,37,0.986,44,0.911,46,0.762,47,0.007,48,0.633,49,0.378,50,0.86,52,0.799,53,1.442,60,1.15,61,0.733,62,1.672,63,2.412,65,2.245,66,2.474,68,1.951,71,0.464,73,0.244,74,0.961,77,1.611,78,1.658,81,0.494,83,0.79,85,0.068,87,2.781,88,1.565,89,2.523,90,0.147,91,1.72,93,1.266,95,2.14,98,2.14,100,2.14,103,1.464,104,1.464,105,1.658,106,0.887,110,1.395,111,1.044,112,1.507,115,0.631,116,0.974,117,1.103,118,0.523,119,1.311,120,0.631,121,1.189,122,0.564,123,0.608,124,0.586,125,0.631,126,0.575,127,0.631,128,0.586,129,0.608,130,0.631,131,0.586,132,0.631,133,0.586,134,0.631,135,0.575,136,0.608,137,0.631,138,0.586,139,0.631,140,0.608,141,0.575,142,0.985,143,1.291,144,0.974,145,0.575,146,0.974,147,0.564,148,1.72,149,0.575,150,0.523,151,0.631,152,0.575,153,1.567,154,1.217,155,0.575,156,0.586,157,0.631,158,0.575,159,0.631,160,0.597,161,0.543,162,1.103,163,0.586,164,0.631,165,0.586,166,0.904,167,0.631,168,0.586,169,0.631,170,0.586,171,0.586,172,0.631,173,0.586,174,0.631,175,0.586,176,0.631,177,0.575,178,0.608,179,0.586,180,0.967,181,0.631,182,0.575,183,0.631,184,0.575,185,0.586,186,0.631,187,0.586,188,1.189,189,0.586,190,0.974,191,0.631,192,0.586,193,0.631,194,0.586,195,0.631,196,0.575,197,0.597,198,0.575,199,0.631,200,0.575,201,0.62,202,0.87,203,0.575,204,0.586,205,0.586,206,0.631,207,0.575,208,1.391,209,0.564,210,0.631,211,0.575,212,0.597,213,0.575,214,0.575,215,0.631,216,0.586,217,0.631,218,0.974,219,0.586,220,0.631,221,0.586,222,0.631,223,0.631,224,0.586,225,0.631,226,0.564,227,0.747,228,0.575,229,0.586,230,0.631,231,0.586,232,0.631,233,0.87,234,0.974,235,0.974,236,0.575,237,0.608,238,0.533,239,0.575,240,0.575,241,0.62,242,0.597,243,0.631,244,0.575,245,0.631,246,0.564,247,0.608,248,0.631,249,0.003,250,0.003,253,1.03,256,2.026,268,2.862,277,1.066,305,1.25,309,2.465,321,2.769,384,3.519,398,1.882,426,0.905,524,4.584,533,3.395,536,4.12,540,3.686,563,4.425,570,1.604,585,1.658,586,1.718,587,2.271,651,1.783,655,1.152,656,1.139,657,1.554,658,1.368,661,1.314,662,0.941,663,1.314,671,1.066,672,0.961,769,1.953,776,1.423,865,2.474,882,1.856,1002,2.325,1065,1.507,1109,1.783,1110,3.583,1114,3.132,1115,2.988,1116,2.988,1117,2.862,1118,3.132,1123,3.132,1129,1.856,1130,2.031,1131,2.031,1132,1.856,1133,2.031,1134,1.856,1135,4.1,1138,2.271,1139,2.271,1151,2.435,1152,4.998,1153,4.094,1163,2.988,1199,6.546,1302,3.503,1313,6.546,1314,4.584,1315,4.584,1316,4.806,1317,4.094,1318,4.094,1319,5.153,1322,4.094,1324,6.331,1325,4.094,1327,3.503,1329,3.301,1330,3.503,1331,3.503,1332,4.094,1333,4.094,1336,2.988,1338,3.132,1340,3.755,1342,3.132,1344,3.755,1346,3.132,1348,2.435,1349,2.654,1350,2.654,1351,2.654,1352,2.654,1353,3.755,1356,2.435,1357,5.568,1358,2.654,1359,2.654,1360,2.654,1361,2.435,1362,2.654,1363,4.094,1364,2.75,1367,2.654,1368,2.654,1369,4.608,1370,2.988,1371,2.988,1372,2.988,1373,2.988,1374,2.988,1375,2.988,1376,2.988,1377,2.988,1378,2.988,1379,2.988,1380,2.988,1381,2.988,1382,2.988,1383,2.988,1384,2.988,1385,4.094,1386,2.988]],["title/components/EditWorkspacePage.html",[0,0.17,155,0.897]],["body/components/EditWorkspacePage.html",[0,0.266,1,0.661,2,1.004,3,0.084,4,0.078,5,0.725,6,0.739,7,0.725,8,0.725,9,0.05,15,0.613,16,1.741,17,1.738,18,0.661,19,1.042,21,1.004,23,1.004,25,0.195,26,0.586,27,1.475,28,3.146,29,2.887,32,0.666,37,1.059,44,0.844,46,0.694,47,0.007,48,0.644,49,0.345,50,0.871,52,0.599,53,1.023,60,1.114,61,0.546,62,1.64,63,2.626,65,2.898,66,2.693,68,1.749,71,0.462,73,0.28,74,1.104,77,1.674,78,1.906,81,0.568,83,0.908,85,0.078,87,1.51,88,1.157,90,0.169,91,1.609,93,0.943,103,1.682,104,1.682,105,1.906,106,0.985,110,1.04,111,1.199,115,0.725,116,1.082,117,1.201,118,0.601,119,1.408,120,0.725,121,1.294,122,0.648,123,0.699,124,0.673,125,0.725,126,0.661,127,0.725,128,0.673,129,0.699,130,0.725,131,0.673,132,0.725,133,0.673,134,0.725,135,0.661,136,0.699,137,0.725,138,0.673,139,0.725,140,0.699,141,0.661,142,1.072,143,0.768,144,1.082,145,0.661,146,1.082,147,0.648,148,1.783,149,0.661,150,0.601,151,0.725,152,0.661,153,1.703,154,0.661,155,1.307,156,0.673,157,0.725,158,0.661,159,0.725,160,0.686,161,0.624,162,1.201,163,0.673,164,0.725,165,0.673,166,1.004,167,0.725,168,0.673,169,0.725,170,0.673,171,0.673,172,0.725,173,0.673,174,0.725,175,0.673,176,0.725,177,0.661,178,0.699,179,0.673,180,1.038,181,0.725,182,0.661,183,0.725,184,0.661,185,0.673,186,0.725,187,0.673,188,1.294,189,0.673,190,1.082,191,0.725,192,0.673,193,0.725,194,0.673,195,0.725,196,0.661,197,0.686,198,0.661,199,0.725,200,0.661,201,0.712,202,0.967,203,0.661,204,0.673,205,0.673,206,0.725,207,0.661,208,1.478,209,0.648,210,0.725,211,0.661,212,0.686,213,0.661,214,0.661,215,0.725,216,0.673,217,0.725,218,1.082,219,0.673,220,0.725,221,0.673,222,0.725,223,0.725,224,0.673,225,0.725,226,0.648,227,0.83,228,0.661,229,0.673,230,0.725,231,0.673,232,0.725,233,0.967,234,1.082,235,1.082,236,0.661,237,0.699,238,1.296,239,0.661,240,0.661,241,0.712,242,0.686,243,0.725,244,0.661,245,0.725,246,0.648,247,0.699,248,0.725,249,0.004,250,0.004,253,1.368,256,2.252,268,3.181,305,1.437,309,2.647,321,2.846,384,3.629,426,1.04,536,4.249,563,4.602,585,1.906,655,0.858,658,1.019,662,1.082,663,1.51,693,1.997,769,2.353,865,2.749,898,2.049,1002,2.583,1109,2.049,1110,3.758,1114,3.481,1115,3.321,1116,3.321,1117,3.181,1118,3.481,1123,3.481,1129,2.132,1130,2.334,1131,2.334,1132,2.132,1134,2.132,1136,2.609,1148,2.226,1162,4.173,1163,3.321,1165,2.798,1166,5.441,1167,4.55,1173,3.05,1200,6.165,1313,6.165,1314,4.991,1315,4.991,1319,5.533,1327,3.892,1336,3.321,1340,4.173,1342,3.481,1344,4.173,1348,2.798,1353,2.798,1355,3.05,1356,2.798,1357,4.173,1387,5.121,1388,5.121,1389,5.121,1390,3.433,1391,3.433,1392,3.433,1393,3.433,1394,3.433,1395,3.433,1396,3.433,1397,3.433]],["title/modules/EmailsModule.html",[396,1.817,1398,3.542]],["body/modules/EmailsModule.html",[3,0.174,4,0.162,9,0.104,47,0.007,71,0.503,73,0.579,85,0.162,90,0.35,249,0.006,250,0.006,398,2.901,399,4.472,406,4.971,407,3.693,408,3.291,410,4.238,411,3.967,413,4.081,459,5.174,460,4.411,1398,7.156,1399,6.309,1400,6.309,1401,6.743,1402,7.101,1403,7.101]],["title/modules/EmailsRoutingModule.html",[396,1.817,1401,3.337]],["body/modules/EmailsRoutingModule.html",[3,0.176,4,0.164,9,0.105,47,0.007,71,0.477,73,0.584,85,0.164,90,0.353,93,1.969,180,1.096,249,0.006,250,0.006,396,2.794,398,2.927,411,3.412,413,4.102,424,4.997,425,5.002,426,2.17,452,4.45,480,4.87,942,4.648,1401,5.997,1404,7.165]],["title/classes/Enum.html",[90,0.23,299,2.894]],["body/classes/Enum.html",[3,0.105,4,0.098,9,0.063,25,0.245,27,1.247,32,0.784,44,0.806,46,1.022,47,0.007,48,0.599,49,0.358,50,0.862,52,1.008,61,1.199,85,0.098,88,1.138,90,0.212,93,1.182,106,1.626,249,0.005,250,0.005,253,1.774,273,1.862,282,2.594,288,2.193,299,6.031,303,1.242,309,2.94,678,2.284,693,3.604,767,6.621,782,3.53,963,3.92,972,4.929,1040,2.473,1081,5.355,1271,4.317,1309,4.984,1405,3.821,1406,3.821,1407,3.269,1408,4.301,1409,5.874,1410,8.231,1411,6.028,1412,7.663,1413,6.028,1414,4.301,1415,8.765,1416,6.621,1417,9.13,1418,9.13,1419,7.026,1420,6.959,1421,8.625,1422,6.028,1423,6.028,1424,6.028,1425,7.313,1426,6.028,1427,4.301,1428,4.581,1429,7.542,1430,6.028,1431,5.355,1432,6.028,1433,5.355,1434,6.028,1435,4.301,1436,6.959,1437,6.028,1438,4.301,1439,6.959,1440,4.301,1441,4.301,1442,4.301,1443,4.301,1444,4.301,1445,6.028,1446,6.028,1447,4.301,1448,6.028,1449,4.301,1450,4.301,1451,6.028,1452,3.505,1453,6.028,1454,6.028,1455,4.301,1456,4.301]],["title/interceptors/ErrorInterceptor.html",[1457,4.14,1458,3.337]],["body/interceptors/ErrorInterceptor.html",[3,0.149,4,0.139,9,0.089,13,1.672,25,0.346,26,0.867,32,0.987,37,0.949,44,0.884,46,1.028,47,0.007,48,0.602,49,0.392,50,0.867,52,0.711,60,1.107,61,0.968,68,2.361,71,0.507,73,0.496,83,1.61,85,0.139,88,1.149,90,0.3,91,1.828,106,1.714,202,1.149,249,0.006,250,0.006,317,2.65,363,4.625,370,2.039,384,3.854,426,1.843,515,6.74,522,5.407,539,4.097,625,2.319,678,2.297,693,2.373,707,4.959,720,3.632,883,4.959,1071,6.737,1235,4.358,1458,5.434,1459,6.086,1460,5.407,1461,8.267,1462,7.587,1463,6.086,1464,7.587,1465,8.655,1466,8.655,1467,6.086,1468,6.086,1469,6.086,1470,6.086,1471,7.587,1472,4.959,1473,6.578,1474,7.587,1475,6.086,1476,4.959,1477,6.086,1478,6.086,1479,6.086,1480,7.587,1481,6.086,1482,6.086,1483,6.086,1484,6.086,1485,6.086,1486,6.086,1487,6.086]],["title/interfaces/ErrorValidationTree.html",[86,0.816,1488,3.542]],["body/interfaces/ErrorValidationTree.html",[3,0.145,4,0.17,9,0.087,44,0.631,47,0.007,49,0.28,52,0.69,62,1.602,68,2.328,71,0.424,81,1.348,83,1.562,85,0.17,86,1.034,88,1.115,93,2.514,106,1.761,249,0.006,250,0.006,251,1.978,255,2.356,256,3.274,303,1.608,308,4.013,358,3.071,373,6.067,497,3.524,539,3.359,642,3.667,720,3.524,779,4.113,958,2.107,963,4.077,1002,4.113,1065,2.979,1309,5.84,1488,6.197,1489,6.067,1490,4.812,1491,5.905,1492,5.905,1493,5.246,1494,5.905,1495,5.905,1496,7.445,1497,5.905,1498,5.905,1499,5.542,1500,5.905,1501,5.905,1502,6.614,1503,6.067,1504,5.905,1505,5.905,1506,5.905,1507,5.905,1508,5.905,1509,6.067,1510,4.812,1511,5.905,1512,5.905,1513,5.905,1514,5.905,1515,5.905,1516,5.905,1517,5.905,1518,5.905,1519,5.905,1520,5.905,1521,8.561,1522,5.905,1523,5.905,1524,5.905,1525,5.905,1526,5.905,1527,5.905,1528,5.905,1529,5.905,1530,5.905]],["title/interfaces/FilterCheckbox.html",[86,0.816,1531,3.337]],["body/interfaces/FilterCheckbox.html",[3,0.163,4,0.152,9,0.098,25,0.378,26,0.915,32,1.04,44,0.709,46,0.899,47,0.007,48,0.527,49,0.458,50,0.759,52,0.776,61,1.418,85,0.196,86,1.162,166,1.301,249,0.006,250,0.006,251,2.223,303,1.533,334,4.95,337,7.128,497,4.775,678,2.7,693,3.477,917,6.52,930,5.322,948,4.6,1065,4.036,1281,3.684,1531,6.152,1532,5.408,1533,8.001,1534,6.528,1535,6.636,1536,5.896]],["title/classes/Filters.html",[90,0.23,1537,2.894]],["body/classes/Filters.html",[3,0.166,4,0.154,9,0.099,25,0.385,27,1.117,32,1.052,44,0.722,46,0.916,47,0.007,48,0.537,49,0.384,50,0.773,52,0.79,61,1.075,71,0.461,85,0.154,90,0.333,106,1.557,227,1.312,249,0.006,250,0.006,303,1.601,334,3.752,678,2.449,693,2.635,917,5.508,930,4.034,1040,3.886,1409,5.614,1531,6.2,1534,5.137,1537,5.024,1538,6.005,1539,8.089,1540,8.089,1541,6.759,1542,8.089,1543,4.841,1544,5.508,1545,6.759,1546,4.034,1547,6.148,1548,6.759,1549,6.005,1550,6.005,1551,6.759]],["title/components/FiltersComponent.html",[0,0.17,156,0.914]],["body/components/FiltersComponent.html",[0,0.213,1,0.611,2,0.946,3,0.078,4,0.072,5,0.67,6,0.683,7,0.67,8,0.67,9,0.047,15,0.566,16,1.734,17,1.731,18,0.611,19,0.982,21,0.946,23,0.946,25,0.332,26,0.552,27,1.409,29,2.529,32,0.627,37,0.495,44,0.971,46,1.042,47,0.007,48,0.668,49,0.417,50,0.928,52,0.967,53,1.621,60,1.276,61,1.316,62,1.654,64,1.209,65,2.603,68,1.667,71,0.371,73,0.259,74,1.02,77,0.845,81,0.524,85,0.072,88,1.103,90,0.156,91,1.842,93,1.604,106,1.256,113,1.7,114,1.84,115,0.67,116,1.019,117,1.376,118,0.845,119,1.353,120,0.67,121,1.234,122,0.599,123,0.646,124,0.622,125,0.67,126,0.611,127,0.67,128,0.622,129,0.646,130,0.67,131,0.622,132,0.67,133,0.622,134,0.67,135,0.611,136,0.646,137,0.67,138,0.622,139,0.67,140,1.805,141,0.611,142,1.022,143,0.723,144,1.019,145,0.611,146,1.019,147,0.599,148,1.748,149,0.611,150,0.555,151,0.67,152,0.611,153,1.124,154,0.611,155,0.611,156,1.279,157,0.67,158,0.611,159,0.67,160,0.634,161,0.577,162,1.145,163,0.622,164,0.67,165,0.622,166,1.279,167,0.67,168,0.622,169,0.67,170,0.622,171,0.622,172,0.67,173,0.622,174,0.67,175,0.622,176,0.67,177,0.611,178,0.646,179,0.622,180,0.738,181,0.67,182,0.611,183,0.67,184,0.611,185,0.622,186,0.67,187,0.622,188,1.234,189,0.622,190,1.019,191,0.67,192,0.622,193,0.67,194,0.622,195,0.67,196,0.611,197,0.634,198,0.611,199,0.67,200,0.611,201,0.658,202,0.911,203,0.611,204,0.622,205,0.622,206,0.67,207,0.611,208,1.429,209,0.599,210,0.67,211,0.611,212,0.634,213,0.611,214,0.611,215,0.67,216,0.622,217,0.67,218,1.019,219,0.622,220,0.67,221,0.622,222,0.67,223,0.67,224,0.622,225,0.67,226,0.599,227,0.782,228,0.611,229,0.622,230,0.67,231,0.622,232,0.67,233,0.911,234,1.483,235,1.019,236,0.611,237,0.646,238,0.566,239,0.611,240,0.611,241,0.658,242,0.634,243,0.67,244,0.611,245,0.67,246,0.599,247,0.646,248,0.67,249,0.004,250,0.004,253,1.458,272,1.703,273,1.804,279,3.253,282,1.183,288,1,296,1.395,305,2.019,321,1.02,323,2.946,356,3.135,360,1.703,533,3.135,625,1.839,629,2.364,678,0.961,693,1.237,706,1.881,779,1.6,782,1.36,826,1.511,916,2.434,920,2.88,921,2.88,922,4.757,923,4.189,924,3.485,925,3.485,926,2.88,927,2.88,928,2.88,929,2.88,931,2.88,933,5.296,934,1.971,935,2.774,936,1.894,937,2.678,938,1.894,939,1.894,940,1.824,941,1.703,942,1.761,943,1.971,944,4.515,945,2.678,946,1.761,947,1.971,948,1.824,949,1.761,950,1.971,951,4.189,952,1.894,953,1.761,954,1.824,955,1.824,956,1.894,957,1.894,958,1.132,959,2.88,960,1.894,961,1.971,962,2.88,963,2.298,964,4.412,965,1.894,966,3.241,967,1.824,968,3.357,969,2.88,970,2.177,971,3.894,972,1.761,973,1.894,974,2.88,975,1.894,976,1.971,977,1.894,978,1.894,979,1.971,980,2.88,981,1.894,982,1.894,983,2.057,984,1.971,985,1.971,986,1.971,987,1.971,988,1.971,989,1.894,990,2.678,991,1.971,992,2.88,995,1.971,996,2.057,997,1.971,1027,2.509,1035,2.156,1058,3.932,1163,3.129,1281,4.668,1537,5.296,1543,2.272,1552,2.819,1553,5.839,1554,4.825,1555,5.839,1556,6.525,1557,4.825,1558,4.825,1559,4.825,1560,3.173,1561,3.173,1562,3.173,1563,6.525,1564,3.173,1565,3.173,1566,3.173,1567,3.173,1568,3.173,1569,4.825,1570,3.173,1571,3.173,1572,4.825,1573,2.272,1574,2.272,1575,2.272,1576,3.173,1577,3.173,1578,3.173,1579,4.825,1580,3.173,1581,3.173,1582,3.173,1583,3.173,1584,4.825,1585,3.932,1586,4.825,1587,2.819,1588,2.819]],["title/directives/FocusInitialDirective.html",[118,0.816,244,0.897]],["body/directives/FocusInitialDirective.html",[3,0.16,4,0.149,9,0.096,13,2.175,15,1.163,16,1.412,25,0.371,32,1.029,37,1.329,44,0.846,46,0.883,47,0.007,48,0.518,49,0.309,50,0.745,52,0.762,53,1.581,60,1.439,71,0.371,73,0.532,85,0.149,90,0.321,117,1.738,118,1.651,166,1.552,238,1.412,239,1.254,244,1.523,249,0.006,250,0.006,253,1.768,269,5.668,309,2.541,370,2.184,636,6.015,786,7.031,801,5.096,1037,6.45,1330,6.015,1331,6.015,1589,7.572,1590,5.791,1591,6.015,1592,6.478,1593,7.915,1594,6.737,1595,6.518,1596,6.518,1597,8.523,1598,6.518,1599,6.518]],["title/components/ForgotPasswordPage.html",[0,0.17,158,0.897]],["body/components/ForgotPasswordPage.html",[0,0.215,1,0.62,2,0.957,3,0.079,4,0.074,5,0.68,6,0.693,7,0.68,8,0.68,9,0.047,15,0.575,16,1.736,17,1.736,18,0.62,19,0.993,21,0.957,23,0.957,25,0.183,26,0.558,27,0.974,29,2.887,32,0.635,37,0.502,44,0.755,46,0.436,47,0.007,48,0.561,49,0.231,50,0.674,52,0.376,53,0.643,60,0.887,61,0.776,62,1.415,63,2.527,64,2.834,65,2.351,66,2.591,71,0.44,73,0.263,74,1.035,77,0.854,81,0.532,83,0.852,85,0.074,90,0.159,91,1.389,103,1.577,104,1.577,106,0.939,110,0.975,111,1.125,113,2.622,114,2.507,115,0.68,116,1.031,117,1.155,118,0.564,119,1.75,120,0.68,121,1.245,122,0.608,123,0.655,124,0.631,125,0.68,126,0.62,127,0.68,128,0.631,129,0.655,130,0.68,131,0.631,132,0.68,133,0.631,134,0.68,135,0.62,136,0.655,137,0.68,138,0.631,139,0.68,140,0.655,141,0.62,142,1.032,143,0.732,144,1.031,145,0.62,146,1.031,147,0.608,148,1.755,149,0.62,150,0.564,151,0.68,152,0.62,153,1.134,154,0.62,155,0.62,156,0.631,157,0.68,158,1.265,159,1.681,160,0.643,161,0.586,162,1.155,163,0.631,164,0.68,165,0.631,166,1.155,167,0.68,168,0.631,169,0.68,170,0.631,171,0.631,172,0.68,173,0.631,174,0.68,175,0.631,176,0.68,177,0.62,178,0.655,179,0.631,180,0.746,181,0.68,182,0.62,183,0.68,184,0.62,185,1.458,186,0.68,187,0.631,188,1.245,189,0.631,190,1.031,191,0.68,192,0.631,193,0.68,194,0.631,195,0.68,196,0.62,197,0.643,198,0.62,199,0.68,200,0.62,201,0.668,202,0.922,203,0.62,204,0.631,205,0.631,206,0.68,207,0.62,208,1.438,209,0.608,210,0.68,211,0.62,212,0.643,213,0.62,214,0.62,215,0.68,216,0.631,217,0.68,218,1.031,219,0.631,220,0.68,221,0.631,222,0.68,223,0.68,224,0.631,225,0.68,226,0.608,227,0.791,228,0.62,229,0.631,230,0.68,231,0.631,232,0.68,233,0.922,234,1.031,235,1.031,236,0.62,237,0.655,238,1.261,239,0.62,240,0.62,241,0.668,242,0.643,243,0.68,244,0.62,245,0.68,246,0.608,247,0.655,248,0.68,249,0.004,250,0.004,305,2.042,370,1.079,384,3.232,392,2.653,393,2.619,395,1.675,407,4.137,426,0.975,470,5.651,476,3.164,479,4.137,481,3.992,487,5.358,563,3.271,573,1.381,574,1.2,575,1.347,576,1.381,655,1.93,656,1.227,658,2.506,659,2,660,3.176,662,2.226,664,2.092,666,2.202,668,2.879,669,2.633,670,2.944,671,2.346,672,2.114,673,1.675,674,1.624,675,1.86,678,2.251,679,2.462,680,2.146,681,2.092,687,1.492,688,1.381,742,2.092,743,1.729,746,1.675,747,1.533,748,4.216,750,2.73,751,1.624,756,1.577,770,1.624,773,1.922,776,1.533,818,1.922,850,2.624,851,5.235,852,4.335,853,5.235,854,2.189,856,2.861,865,2.62,869,2.306,873,2.306,876,4.335,877,2.861,878,2.447,884,3.709,885,2.088,886,1.851,887,2,888,1.675,889,4.821,890,2.189,891,3.164,892,2.189,893,1.851,894,2.912,895,5.645,896,2.912,897,3.164,898,1.922,899,2.088,900,2.189,901,2.189,902,3.495,903,4.469,904,2.189,905,4.802,906,4.469,907,2.189,908,2.189,909,2.189,910,2.189,911,2.189,912,2.189,913,2.189,914,2.189,1240,3.642,1600,6.605,1601,5.651,1602,3.22,1603,3.22,1604,3.22,1605,3.22,1606,3.22,1607,3.977,1608,4.88,1609,4.88,1610,2.088,1611,3.22,1612,2.861]],["title/interfaces/FormGroup.html",[63,1.998,86,0.816]],["body/interfaces/FormGroup.html",[3,0.176,4,0.164,9,0.106,25,0.409,32,1.091,44,0.768,47,0.007,52,0.84,53,1.676,63,3.925,71,0.409,74,2.311,85,0.164,86,1.258,249,0.006,250,0.006,251,2.407,794,6.957,963,3.423,1613,6.385,1614,7.187,1615,7.187,1616,5.857,1617,7.187,1618,7.187]],["title/interfaces/GitAccount.html",[86,0.816,1619,2.679]],["body/interfaces/GitAccount.html",[3,0.162,4,0.151,9,0.097,25,0.377,26,0.914,47,0.007,49,0.407,85,0.208,86,1.597,88,1.75,91,1.4,249,0.006,250,0.006,251,2.22,253,1.786,255,3.19,273,2.753,303,1.741,321,2.57,339,5.184,629,3.916,769,2.896,1240,3.247,1619,4.596,1620,4.505,1621,4.505,1622,6.059,1623,6.059,1624,4.965,1625,4.746,1626,4.116,1627,4.746,1628,3.558,1629,3.558,1630,4.505]],["title/interfaces/GitAccountWithUsage.html",[86,0.816,1631,3.542]],["body/interfaces/GitAccountWithUsage.html",[0,0.282,3,0.153,4,0.143,9,0.092,13,1.718,14,2.814,16,1.116,17,1.116,21,1.226,23,1.226,25,0.356,26,0.882,27,1.444,36,2.28,47,0.007,49,0.366,53,1.541,68,2.61,71,0.497,73,0.51,83,1.654,85,0.143,86,1.095,90,0.308,106,1.61,202,1.695,208,1.703,209,1.181,249,0.006,250,0.006,251,2.095,370,2.095,709,2.75,1180,4.493,1207,3.884,1240,3.063,1619,5.256,1631,5.864,1632,4.25,1633,4.479,1634,5.096,1635,7.974,1636,3.884,1637,3.884,1638,4.055,1639,4.055,1640,4.753,1641,5.556,1642,5.556,1643,5.556,1644,5.556,1645,5.556,1646,5.556,1647,5.556,1648,5.096,1649,5.096,1650,5.556,1651,5.556,1652,5.556,1653,5.556,1654,4.753,1655,5.556,1656,5.096,1657,5.096,1658,5.556,1659,5.556,1660,5.556]],["title/interfaces/GitIntegration.html",[86,0.816,1626,2.894]],["body/interfaces/GitIntegration.html",[3,0.164,4,0.153,9,0.098,25,0.381,26,0.919,47,0.007,49,0.381,85,0.209,86,1.602,88,1.689,91,1.414,249,0.006,250,0.006,251,2.242,253,1.797,255,3.208,273,2.484,303,1.742,321,2.586,339,5.214,629,3.939,769,2.762,1240,4.381,1619,3.848,1620,4.549,1621,4.549,1622,4.549,1623,4.549,1624,5.555,1625,4.793,1626,4.995,1627,6.405,1628,3.593,1629,3.593,1630,4.549]],["title/injectables/GitIntegrationService.html",[317,1.628,1180,2.502]],["body/injectables/GitIntegrationService.html",[3,0.081,4,0.076,9,0.049,25,0.189,27,1.597,32,0.65,37,0.518,44,0.962,46,1.192,47,0.007,48,0.71,49,0.417,50,1.006,52,1.063,62,1.292,68,2.622,71,0.444,73,0.271,83,0.878,85,0.076,88,1.814,89,3.278,90,0.164,91,0.702,93,1.372,106,1.731,143,0.9,150,0.875,161,1.599,162,1.575,180,0.508,202,1.734,238,1.342,249,0.004,250,0.004,253,1.341,270,3.473,273,1.543,284,4.892,288,2.104,303,1.466,309,2.341,317,1.745,318,3.795,319,1.675,321,2.147,322,4.07,341,3.577,356,2.682,358,2.598,368,1.675,369,1.581,370,1.112,476,3.239,489,1.982,507,2.378,512,2.941,540,3.824,570,1.783,624,4.539,625,1.904,638,5.388,693,1.295,709,2.196,769,1.543,782,2.864,897,4.33,940,3.839,958,1.782,1180,2.682,1240,2.447,1248,3.985,1256,4.07,1259,4.437,1271,4.783,1281,1.843,1361,2.706,1431,4.437,1510,5.442,1619,4.617,1622,2.257,1626,2.063,1628,3.585,1629,3.585,1636,2.063,1637,2.063,1639,2.153,1648,2.706,1649,2.706,1654,2.524,1657,4.07,1661,8.04,1662,2.95,1663,4.995,1664,3.796,1665,7.523,1666,6.678,1667,4.563,1668,4.995,1669,4.995,1670,4.995,1671,4.995,1672,4.995,1673,4.995,1674,4.995,1675,6.678,1676,4.995,1677,6.678,1678,4.995,1679,4.995,1680,4.995,1681,4.995,1682,4.995,1683,3.321,1684,4.995,1685,7.523,1686,3.321,1687,4.995,1688,6.168,1689,4.148,1690,3.321,1691,4.995,1692,3.321,1693,4.995,1694,3.321,1695,4.995,1696,4.995,1697,3.577,1698,4.995,1699,4.995,1700,3.321,1701,4.995,1702,3.321,1703,4.995,1704,3.321,1705,3.321,1706,3.321,1707,3.321,1708,4.995,1709,3.321,1710,4.995,1711,3.321,1712,4.995,1713,3.321,1714,4.995,1715,3.321,1716,4.07,1717,6.678,1718,3.796,1719,4.437,1720,3.321,1721,4.437,1722,4.995,1723,3.321,1724,4.995,1725,3.321,1726,4.995,1727,4.995,1728,4.995,1729,4.995,1730,4.995,1731,2.95,1732,3.321,1733,3.321,1734,3.321,1735,3.321,1736,3.321,1737,3.321,1738,3.321,1739,4.995,1740,3.321,1741,3.321,1742,3.321,1743,2.95,1744,2.95,1745,3.321,1746,3.321,1747,3.321,1748,2.524,1749,3.321,1750,2.706,1751,3.321,1752,3.321,1753,3.321,1754,3.321,1755,3.321,1756,3.321,1757,3.321,1758,3.321,1759,4.995,1760,3.321,1761,3.321,1762,3.321,1763,3.321,1764,3.321,1765,3.321,1766,3.321,1767,3.321,1768,4.995,1769,3.321,1770,3.321,1771,2.95,1772,3.321,1773,3.321,1774,3.321]],["title/interfaces/GitIssue.html",[86,0.816,1628,2.502]],["body/interfaces/GitIssue.html",[3,0.158,4,0.147,9,0.095,25,0.367,26,0.898,47,0.007,49,0.437,85,0.207,86,1.585,88,1.739,91,1.36,249,0.006,250,0.006,251,2.157,253,2.022,255,3.611,273,2.426,303,1.756,321,2.91,339,5.869,629,4.434,769,2.879,1240,3.154,1619,3.702,1620,4.377,1621,4.377,1622,4.377,1623,4.377,1624,4.879,1625,4.612,1626,3.999,1627,4.612,1628,4.218,1629,3.457,1630,4.377]],["title/interfaces/GitPull.html",[86,0.816,1629,2.502]],["body/interfaces/GitPull.html",[3,0.156,4,0.146,9,0.094,25,0.363,26,0.893,47,0.007,49,0.441,85,0.206,86,1.58,88,1.735,91,1.348,249,0.006,250,0.006,251,2.137,253,2.017,255,3.602,273,2.413,303,1.758,321,2.902,339,5.853,629,4.422,769,2.873,1240,3.125,1619,3.668,1620,4.336,1621,4.336,1622,4.336,1623,4.336,1624,4.851,1625,4.568,1626,3.962,1627,4.568,1628,3.425,1629,4.193,1630,5.98]],["title/interfaces/GitRepository.html",[86,0.816,1624,2.894]],["body/interfaces/GitRepository.html",[3,0.162,4,0.151,9,0.097,25,0.377,26,0.914,47,0.007,49,0.407,85,0.208,86,1.597,88,1.75,91,1.883,249,0.006,250,0.006,251,2.22,253,1.786,255,3.19,273,2.753,303,1.741,321,2.57,339,5.184,629,3.916,769,2.896,1240,3.247,1619,3.81,1620,4.505,1621,4.505,1622,4.505,1623,4.505,1624,5.332,1625,6.384,1626,4.116,1627,4.746,1628,3.558,1629,3.558,1630,4.505]],["title/components/GithubIntegrationPage.html",[0,0.17,160,0.931]],["body/components/GithubIntegrationPage.html",[0,0.26,1,0.863,2,1.216,3,0.11,4,0.102,5,0.947,6,0.965,7,0.947,8,0.947,9,0.066,13,1.705,14,2.594,15,0.8,16,1.761,17,1.758,18,0.863,19,1.263,21,1.216,23,1.216,25,0.255,32,0.807,36,2.8,37,0.967,44,0.663,46,0.608,47,0.007,48,0.64,49,0.213,50,0.513,52,0.524,53,0.896,71,0.405,73,0.366,77,1.086,81,0.741,85,0.102,90,0.221,91,1.311,93,1.232,115,0.947,116,1.311,117,1.395,118,0.785,119,1.592,120,0.947,121,1.503,122,0.847,123,0.912,124,0.879,125,0.947,126,0.863,127,0.947,128,0.879,129,0.912,130,0.947,131,0.879,132,0.947,133,0.879,134,0.947,135,0.863,136,0.912,137,0.947,138,0.879,139,0.947,140,0.912,141,0.863,142,1.246,143,0.93,144,1.311,145,0.863,146,1.311,147,0.847,148,1.892,149,0.863,150,0.785,151,0.947,152,0.863,153,1.369,154,0.863,155,0.863,156,0.879,157,0.947,158,0.863,159,0.947,160,1.534,161,1.585,162,1.581,163,0.879,164,0.947,165,0.879,166,1.216,167,0.947,168,0.879,169,0.947,170,0.879,171,0.879,172,0.947,173,0.879,174,0.947,175,0.879,176,0.947,177,0.863,178,0.912,179,0.879,180,0.949,181,0.947,182,0.863,183,0.947,184,0.863,185,0.879,186,0.947,187,0.879,188,1.503,189,0.879,190,1.311,191,0.947,192,0.879,193,0.947,194,0.879,195,0.947,196,0.863,197,0.896,198,0.863,199,0.947,200,0.863,201,0.93,202,1.172,203,0.863,204,0.879,205,0.879,206,0.947,207,0.863,208,1.641,209,0.847,210,0.947,211,0.863,212,0.896,213,0.863,214,0.863,215,0.947,216,0.879,217,0.947,218,1.311,219,0.879,220,0.947,221,0.879,222,0.947,223,0.947,224,0.879,225,0.947,226,0.847,227,1.006,228,0.863,229,0.879,230,0.947,231,0.879,232,0.947,233,1.172,234,1.311,235,1.311,236,0.863,237,0.912,238,1.439,239,0.863,240,0.863,241,0.93,242,0.896,243,0.947,244,0.863,245,0.947,246,0.847,247,0.912,248,0.947,249,0.005,250,0.005,426,1.357,535,3.047,536,4.085,874,3.653,970,2.8,1180,4.59,1207,2.784,1210,5.798,1638,2.907,1775,6.321,1776,3.983,1777,7.115,1778,6.204,1779,4.483,1780,4.483,1781,6.204,1782,8.062,1783,4.483,1784,4.483,1785,5.512,1786,4.443]],["title/components/IconComponent.html",[0,0.17,163,0.914]],["body/components/IconComponent.html",[0,0.253,1,0.59,2,0.922,3,0.075,4,0.07,5,0.648,6,0.66,7,0.648,8,0.648,9,0.045,15,0.547,16,1.731,17,1.727,18,0.59,19,0.957,21,0.922,23,0.922,25,0.175,26,0.538,27,1.355,44,0.926,46,0.416,47,0.007,48,0.672,49,0.372,50,0.351,52,0.853,53,0.613,60,1.166,61,1.208,71,0.365,73,0.25,77,0.823,81,0.507,85,0.07,90,0.151,91,1.461,93,0.843,106,1.546,113,2.281,115,0.648,116,1.354,117,1.121,118,0.537,119,1.329,120,0.648,121,1.208,122,0.579,123,0.624,124,0.601,125,0.648,126,0.59,127,0.648,128,0.601,129,0.624,130,0.648,131,0.601,132,0.648,133,0.601,134,0.648,135,0.59,136,0.624,137,0.648,138,0.601,139,0.648,140,0.624,141,0.59,142,1.001,143,0.705,144,0.993,145,0.59,146,0.993,147,0.579,148,1.732,149,0.59,150,0.537,151,0.648,152,0.59,153,1.1,154,0.59,155,0.59,156,0.601,157,0.648,158,0.59,159,0.648,160,0.613,161,0.558,162,1.121,163,1.257,164,0.648,165,0.601,166,1.635,167,0.648,168,0.601,169,0.648,170,0.601,171,0.601,172,0.648,173,0.601,174,0.648,175,0.601,176,0.648,177,0.59,178,0.624,179,0.601,180,0.719,181,0.648,182,0.59,183,0.648,184,0.59,185,0.601,186,0.648,187,0.601,188,1.208,189,0.601,190,0.993,191,0.648,192,0.601,193,0.648,194,0.601,195,0.648,196,0.59,197,0.613,198,0.59,199,0.648,200,0.59,201,0.636,202,0.888,203,0.59,204,0.601,205,0.601,206,0.648,207,0.59,208,1.407,209,0.579,210,0.648,211,0.59,212,0.613,213,0.59,214,0.59,215,0.648,216,0.601,217,0.648,218,0.993,219,0.601,220,0.648,221,0.601,222,0.648,223,0.648,224,0.601,225,0.648,226,0.579,227,0.762,228,0.59,229,0.601,230,0.648,231,0.601,232,0.648,233,0.888,234,0.993,235,0.993,236,0.59,237,0.624,238,0.547,239,0.59,240,0.59,241,0.636,242,0.613,243,0.648,244,0.59,245,0.648,246,0.579,247,0.624,248,0.648,249,0.004,250,0.004,253,0.685,264,3.573,277,2.04,278,6.385,279,2.65,295,2.196,303,1.584,358,4.503,573,1.315,574,1.143,575,1.967,576,2.965,655,1.728,658,1.396,660,3.132,668,1.752,669,1.752,670,2.443,671,1.678,672,1.512,678,0.929,679,4.793,706,1.833,759,6.699,782,3.256,788,7.123,798,6.142,809,4.346,814,6.142,815,6.188,963,2.239,1006,5.254,1027,2.445,1029,3.573,1072,2.331,1787,2.724,1788,6.411,1789,3.831,1790,4.702,1791,5.718,1792,4.702,1793,5.718,1794,4.702,1795,4.702,1796,6.913,1797,4.702,1798,6.913,1799,7.594,1800,7.594,1801,4.66,1802,3.067,1803,4.702,1804,6.411,1805,4.702,1806,4.702,1807,4.702,1808,7.295,1809,7.295,1810,4.702,1811,3.067,1812,3.831,1813,8.461,1814,4.702,1815,4.702,1816,7.835,1817,3.067,1818,6.913,1819,4.702,1820,3.067,1821,3.067,1822,3.067,1823,3.067,1824,3.067,1825,3.067,1826,3.067,1827,3.067,1828,4.702,1829,3.067,1830,3.067,1831,3.067,1832,3.067,1833,4.702,1834,2.703,1835,4.702,1836,4.702,1837,2.724,1838,2.724,1839,2.331,1840,3.067,1841,4.177,1842,3.067,1843,6.411,1844,4.702,1845,4.702,1846,3.067,1847,2.196,1848,4.702,1849,3.067,1850,4.702,1851,3.067,1852,3.067,1853,3.067,1854,3.067,1855,7.295,1856,3.067,1857,3.067,1858,4.702]],["title/components/InputAssigneeComponent.html",[0,0.17,165,0.914]],["body/components/InputAssigneeComponent.html",[0,0.174,1,0.446,2,0.739,3,0.057,4,0.053,5,0.489,6,0.499,7,0.489,8,0.489,9,0.034,15,0.413,16,1.702,17,1.696,18,0.446,19,1.387,21,0.739,23,0.739,25,0.132,26,0.431,27,1.475,29,1.628,32,0.49,37,0.361,44,0.972,46,0.995,47,0.007,48,0.636,49,0.406,50,0.883,52,0.95,53,1.624,57,1.135,60,1.239,61,1.252,62,1.528,64,0.883,68,1.359,71,0.43,73,0.189,74,0.745,77,0.66,81,0.383,83,0.613,85,0.053,88,1.035,89,1.899,90,0.114,91,1.74,93,1.308,106,1.055,109,4.146,110,1.441,111,0.809,113,1.596,115,0.489,116,0.796,117,1.183,118,0.66,119,1.727,120,0.489,121,1.006,122,0.438,123,0.472,124,0.454,125,0.489,126,0.446,127,0.489,128,0.454,129,0.472,130,0.489,131,0.454,132,0.489,133,0.454,134,0.489,135,0.446,136,0.472,137,0.489,138,0.454,139,0.489,140,1.695,141,0.446,142,0.833,143,0.565,144,0.796,145,0.446,146,0.796,147,0.438,148,1.594,149,0.446,150,0.406,151,0.489,152,0.446,153,0.916,154,0.446,155,0.446,156,0.454,157,0.489,158,0.446,159,0.489,160,0.463,161,0.421,162,0.933,163,0.454,164,0.489,165,1.075,166,1.594,167,0.489,168,0.454,169,0.489,170,0.454,171,0.454,172,0.489,173,0.454,174,0.489,175,0.454,176,0.489,177,0.446,178,0.472,179,0.454,180,0.576,181,0.489,182,0.446,183,0.489,184,0.446,185,0.454,186,0.489,187,0.454,188,1.006,189,0.454,190,0.796,191,0.489,192,0.454,193,0.489,194,0.454,195,0.489,196,0.446,197,0.463,198,0.446,199,0.489,200,0.446,201,0.48,202,0.711,203,0.446,204,0.454,205,0.454,206,0.489,207,0.446,208,1.228,209,0.438,210,0.489,211,0.446,212,0.463,213,0.446,214,0.446,215,0.489,216,0.454,217,0.489,218,0.796,219,0.454,220,0.489,221,0.454,222,0.489,223,0.489,224,0.454,225,0.489,226,0.438,227,0.611,228,0.446,229,0.454,230,0.489,231,0.454,232,0.489,233,0.711,234,1.275,235,0.796,236,0.446,237,0.472,238,0.413,239,0.446,240,0.446,241,0.781,242,0.463,243,0.489,244,0.446,245,0.489,246,0.438,247,0.472,248,0.489,249,0.003,250,0.003,253,1.225,255,1.503,272,1.244,273,1.997,279,3.157,282,0.864,288,0.73,296,1.019,306,2.351,321,0.745,323,2.401,356,2.556,360,1.244,392,2.62,393,2.671,394,2.917,422,2.443,510,1.244,533,2.556,537,3.782,567,4.512,568,1.502,569,1.439,586,2.166,625,1.436,629,1.845,651,1.383,655,1.508,657,1.205,658,1.919,660,2.138,661,1.019,662,1.187,663,2.093,664,0.993,666,1.045,668,2.044,669,2.044,670,2.597,671,1.699,672,1.763,678,1.441,680,1.656,681,1.615,685,2.737,687,1.746,706,1.469,709,2.411,722,1.575,741,1.286,742,1.615,743,1.244,744,2.722,745,2.795,747,1.794,748,1.383,749,1.888,750,1.074,751,1.169,754,1.761,756,2.332,758,6.71,761,2.091,762,2.091,770,1.9,771,2.698,772,1.244,779,1.169,782,0.993,796,1.502,801,2.737,805,1.439,806,1.502,825,1.888,826,1.794,834,2.34,845,2.841,882,2.34,916,1.9,920,2.248,921,2.248,922,4.528,923,3.601,924,2.841,925,2.841,926,2.248,927,2.248,928,2.248,929,2.248,931,2.248,933,4.891,934,1.439,935,2.166,936,1.383,937,2.091,938,1.383,939,1.383,940,1.332,941,1.244,942,1.286,943,1.439,944,4.051,945,2.091,946,1.286,947,1.439,948,1.332,949,1.286,950,1.439,951,3.601,952,1.383,953,1.286,954,1.332,955,1.332,956,1.383,957,1.383,958,1.344,959,2.248,960,1.383,961,1.439,962,2.248,963,1.794,964,3.858,965,1.383,966,2.642,967,1.332,968,2.737,969,2.248,970,1.7,971,3.272,972,1.286,973,1.383,974,2.248,975,1.383,976,1.439,977,1.383,978,1.383,979,1.439,980,2.248,981,1.383,982,1.383,983,1.502,984,1.439,985,1.439,986,1.439,987,1.439,988,1.439,989,1.383,990,2.091,991,1.439,992,2.248,995,1.439,996,1.502,997,1.439,1027,1.959,1031,2.443,1032,2.698,1033,3.236,1035,1.575,1065,4.04,1066,1.888,1067,1.575,1068,1.888,1072,1.761,1248,3.272,1280,2.957,1281,1.286,1306,4.167,1452,1.888,1573,1.659,1574,1.659,1575,1.659,1610,2.443,1639,1.502,1688,3.409,1748,1.761,1786,3.927,1859,7.665,1860,7.031,1861,2.058,1862,4.76,1863,3.767,1864,4.76,1865,4.76,1866,4.229,1867,5.744,1868,4.468,1869,3.07,1870,2.317,1871,3.767,1872,3.767,1873,2.317,1874,2.317,1875,2.317,1876,2.317,1877,3.767,1878,2.317,1879,2.317,1880,2.317,1881,2.317,1882,2.863,1883,2.317,1884,2.317,1885,2.317,1886,3.347,1887,2.317,1888,2.317,1889,2.317,1890,2.317,1891,2.317,1892,2.058,1893,2.317,1894,2.058,1895,2.317,1896,1.888,1897,1.761,1898,2.317,1899,1.888,1900,2.317,1901,3.767,1902,3.767,1903,2.317,1904,1.888,1905,2.317,1906,2.317,1907,3.767,1908,3.767,1909,2.317,1910,3.767,1911,2.317,1912,2.317,1913,2.058,1914,2.058,1915,2.058,1916,1.888,1917,2.058,1918,1.761,1919,3.879,1920,2.058,1921,2.058,1922,2.058,1923,2.058,1924,3.347,1925,2.317,1926,2.317,1927,3.767,1928,3.767,1929,3.767,1930,3.767,1931,3.767,1932,4.871,1933,2.863,1934,2.863,1935,2.317,1936,2.317,1937,1.383,1938,1.502,1939,4.76,1940,2.317,1941,2.317,1942,1.888,1943,2.317,1944,2.317,1945,1.888,1946,1.888,1947,2.317,1948,2.317,1949,2.443,1950,5.483,1951,2.317]],["title/components/InputComponent.html",[0,0.17,168,0.914]],["body/components/InputComponent.html",[0,0.227,1,0.471,2,0.772,3,0.06,4,0.056,5,0.517,6,0.526,7,0.517,8,0.517,9,0.036,15,0.436,16,1.708,17,1.702,18,0.471,19,0.801,21,0.772,23,0.772,25,0.224,26,0.45,27,0.65,29,2.267,32,0.512,37,0.381,44,0.948,46,0.841,47,0.007,48,0.594,49,0.413,50,0.709,52,0.874,53,1.494,57,1.928,60,1.396,61,1.31,62,1.335,64,1.882,68,1.41,71,0.353,73,0.199,74,0.786,77,0.689,81,0.404,85,0.056,88,0.743,90,0.121,91,1.689,110,1.714,111,2.167,113,2.178,114,1.955,115,0.517,116,0.831,117,1.216,118,0.689,119,1.848,120,0.517,121,1.043,122,0.462,123,0.498,124,0.479,125,0.517,126,0.471,127,0.517,128,0.479,129,0.498,130,0.517,131,0.479,132,0.517,133,0.479,134,0.517,135,0.471,136,0.498,137,0.517,138,0.479,139,0.517,140,1.716,141,0.471,142,0.865,143,0.59,144,0.831,145,0.471,146,0.831,147,0.462,148,1.622,149,0.471,150,0.428,151,0.517,152,0.471,153,0.95,154,0.471,155,0.471,156,0.479,157,0.517,158,0.471,159,0.517,160,0.488,161,0.445,162,0.968,163,0.479,164,0.517,165,0.479,166,1.825,167,0.517,168,1.11,169,0.517,170,0.479,171,0.479,172,0.517,173,0.479,174,0.517,175,0.479,176,0.517,177,0.471,178,0.498,179,0.479,180,0.602,181,0.517,182,0.471,183,0.517,184,0.471,185,0.479,186,0.517,187,0.479,188,1.043,189,0.479,190,0.831,191,0.517,192,0.479,193,0.517,194,0.479,195,0.517,196,0.471,197,0.488,198,0.471,199,0.517,200,0.471,201,0.507,202,0.743,203,0.471,204,0.479,205,0.479,206,0.517,207,0.471,208,1.262,209,0.462,210,0.517,211,0.471,212,0.488,213,0.471,214,0.471,215,0.517,216,0.479,217,0.517,218,0.831,219,0.479,220,0.517,221,0.479,222,0.517,223,0.517,224,0.479,225,0.517,226,0.462,227,0.638,228,0.471,229,0.479,230,0.517,231,0.479,232,0.517,233,0.743,234,1.31,235,0.831,236,0.471,237,0.498,238,0.436,239,0.471,240,0.471,241,0.507,242,0.488,243,0.517,244,0.471,245,0.517,246,0.462,247,0.498,248,0.517,249,0.003,250,0.003,253,1.386,255,1.57,264,2.991,272,1.313,273,1.748,279,2.622,282,2.312,288,1.24,295,1.751,296,1.075,303,1.293,306,3.681,321,0.786,323,2.491,356,2.651,358,2.046,360,1.313,392,2.586,393,2.7,408,1.133,479,2.046,512,1.928,533,2.651,574,0.911,625,1.5,629,1.928,655,1.869,657,1.272,658,1.842,660,2.716,661,3.667,662,2.283,663,1.075,664,1.048,666,1.103,668,0.911,669,0.911,670,0.932,672,1.588,675,2.526,678,2.194,681,1.048,684,4.714,685,1.406,687,1.823,688,1.687,693,1.534,706,1.534,741,1.357,742,2.427,743,2.113,744,3.957,745,3.704,746,2.568,747,2.352,750,1.823,751,1.233,759,3.753,761,3.141,762,3.141,767,1.751,770,3.655,772,2.113,779,1.233,782,1.048,791,2.444,796,1.586,801,2.839,805,1.519,826,1.164,830,1.993,831,1.662,835,1.751,842,4.387,843,2.172,845,3.377,916,1.985,920,2.348,921,2.348,922,4.414,923,3.702,924,2.947,925,2.947,926,2.348,927,2.348,928,2.348,929,2.348,930,4.582,931,2.348,933,4.965,934,1.519,935,2.262,936,1.459,937,3.678,938,1.459,939,1.459,940,1.406,941,1.313,942,1.357,943,1.519,944,4.016,945,2.741,946,1.357,947,1.519,948,1.406,949,1.357,950,1.519,951,3.702,952,1.459,953,1.357,954,1.406,955,1.406,956,1.459,957,1.459,958,0.873,959,2.348,960,1.459,961,1.519,962,2.348,963,1.874,964,3.955,965,1.459,966,2.741,967,1.406,968,2.839,969,2.348,970,1.776,971,3.377,972,1.357,973,1.459,974,2.348,975,1.459,976,1.519,977,1.459,978,1.459,979,1.519,980,2.348,981,1.459,982,1.459,983,1.586,984,1.519,985,1.519,986,1.519,987,1.519,988,1.519,989,1.459,990,2.184,991,1.519,992,2.348,995,1.519,997,1.519,999,2.552,1002,1.233,1006,3.753,1007,1.993,1031,2.552,1035,1.662,1072,1.858,1287,2.172,1409,4.022,1573,1.751,1574,1.751,1575,1.751,1847,1.751,1952,2.172,1953,4.938,1954,3.935,1955,4.387,1956,5.659,1957,5.659,1958,4.714,1959,5.51,1960,5.51,1961,3.935,1962,6.967,1963,3.935,1964,2.445,1965,5.887,1966,2.445,1967,3.496,1968,2.552,1969,2.445,1970,2.445,1971,2.445,1972,3.935,1973,2.445,1974,2.445,1975,3.935,1976,3.496,1977,2.445,1978,2.445,1979,2.445,1980,3.935,1981,3.935,1982,1.858,1983,5.659,1984,3.935,1985,5.659,1986,2.445,1987,2.445,1988,8.123,1989,6.202,1990,1.858,1991,2.445,1992,2.172,1993,3.935,1994,2.445,1995,2.445,1996,2.445,1997,2.445,1998,2.445,1999,2.445,2000,2.445,2001,3.935,2002,2.445]],["title/components/InputDateTimeComponent.html",[0,0.17,170,0.914]],["body/components/InputDateTimeComponent.html",[0,0.211,1,0.597,2,0.931,3,0.076,4,0.071,5,0.656,6,0.668,7,0.656,8,0.656,9,0.046,13,1.304,14,2.101,15,0.554,16,1.732,17,1.728,18,0.597,19,0.966,21,0.931,23,0.931,25,0.177,26,0.543,27,1.149,29,2.609,32,0.617,36,2.353,37,0.484,44,0.963,46,0.993,47,0.007,48,0.653,49,0.407,50,0.838,52,0.942,53,1.643,57,1.521,60,1.333,61,1.282,62,1.389,64,1.183,65,2.774,68,1.645,71,0.367,73,0.253,74,0.998,77,0.831,81,0.513,85,0.071,88,1.088,90,0.153,91,1.767,106,0.597,115,0.656,116,1.003,117,1.13,118,0.831,119,1.52,120,0.656,121,1.217,122,0.586,123,0.632,124,0.609,125,0.656,126,0.597,127,0.656,128,0.609,129,0.632,130,0.656,131,0.609,132,0.656,133,0.609,134,0.656,135,0.597,136,1.415,137,0.656,138,0.609,139,0.656,140,1.798,141,0.597,142,1.009,143,0.711,144,1.003,145,0.597,146,1.003,147,0.586,148,1.738,149,0.597,150,0.544,151,0.656,152,0.597,153,1.109,154,0.597,155,0.597,156,0.609,157,0.656,158,0.597,159,0.656,160,0.62,161,0.565,162,1.13,163,0.609,164,0.656,165,0.609,166,1.664,167,0.656,168,0.609,169,0.656,170,1.265,171,1.823,172,0.656,173,0.609,174,0.656,175,0.609,176,0.656,177,0.597,178,0.632,179,0.609,180,0.726,181,0.656,182,0.597,183,0.656,184,0.597,185,0.609,186,0.656,187,0.609,188,1.217,189,0.609,190,1.003,191,0.656,192,0.609,193,0.656,194,0.609,195,0.656,196,0.597,197,0.62,198,0.597,199,0.656,200,0.597,201,0.644,202,0.896,203,0.597,204,0.609,205,0.609,206,0.656,207,0.597,208,1.415,209,0.586,210,0.656,211,0.597,212,0.62,213,0.597,214,0.597,215,0.656,216,0.609,217,0.656,218,1.003,219,0.609,220,0.656,221,0.609,222,0.656,223,0.656,224,0.609,225,0.656,226,0.586,227,0.77,228,0.597,229,0.609,230,0.656,231,0.609,232,0.656,233,0.896,234,1.217,235,1.003,236,0.597,237,0.632,238,0.554,239,0.597,240,0.597,241,0.644,242,0.62,243,0.656,244,0.597,245,0.656,246,0.586,247,0.632,248,0.656,249,0.004,250,0.004,253,1.287,262,4.508,272,1.667,273,1.78,279,2.99,282,1.769,288,0.978,296,1.365,303,1.151,321,0.998,323,2.394,356,2.548,360,1.667,392,1.694,393,2.484,533,3.093,625,1.809,629,2.325,684,4.379,704,3.607,706,1.85,713,3.607,723,3.078,732,2.359,733,2.359,734,2.53,735,2.359,736,2.359,779,1.566,782,1.331,801,3.313,805,1.928,809,4.904,826,1.478,916,2.394,920,2.833,921,2.833,922,4.729,923,4.149,924,3.439,925,3.439,926,2.833,927,2.833,928,2.833,929,2.833,930,3.851,931,2.833,933,5.27,934,1.928,935,2.729,936,1.853,937,4.069,938,1.853,939,1.853,940,1.785,941,1.667,942,1.723,943,1.928,944,4.328,945,2.634,946,1.723,947,1.928,948,1.785,949,1.723,950,1.928,951,4.149,952,1.853,953,1.723,954,1.785,955,1.785,956,1.853,957,1.853,958,1.108,959,2.833,960,1.853,961,1.928,962,2.833,963,2.26,964,4.149,965,1.853,966,2.634,967,1.785,968,2.729,969,2.833,970,2.142,971,3.439,972,1.723,973,1.853,974,2.833,975,1.853,976,1.928,977,1.853,978,1.853,979,1.928,980,2.833,981,1.853,982,2.833,988,1.928,989,1.853,990,2.634,991,1.928,992,2.833,995,1.928,996,2.013,997,1.928,1035,2.11,1306,2.359,1573,2.223,1574,3.399,1575,2.223,1587,5.732,1588,4.217,1937,2.833,1955,4.217,1958,5.283,1976,4.217,2003,6.988,2004,6.41,2005,2.758,2006,5.732,2007,5.762,2008,4.746,2009,5.762,2010,5.762,2011,4.746,2012,3.104,2013,3.104,2014,3.104,2015,3.104,2016,3.104,2017,3.104,2018,3.104,2019,3.104,2020,3.104,2021,3.104,2022,3.104,2023,5.762,2024,4.746,2025,5.762,2026,4.217,2027,3.104,2028,3.104]],["title/components/IntegrationEntryComponent.html",[0,0.17,173,0.914]],["body/components/IntegrationEntryComponent.html",[0,0.249,1,0.798,2,1.152,3,0.102,4,0.095,5,0.876,6,0.893,7,0.876,8,0.876,9,0.061,13,1.614,14,2.488,15,0.74,16,1.755,17,1.753,18,0.798,19,1.196,21,1.152,23,1.152,25,0.236,32,0.764,36,2.706,37,1.064,44,0.894,47,0.007,48,0.589,49,0.372,52,0.485,53,0.829,60,0.754,61,0.659,62,0.893,71,0.236,73,0.338,77,1.029,81,0.686,85,0.095,90,0.204,110,1.779,113,1.208,114,1.307,115,0.876,116,1.241,117,1.338,118,0.726,119,1.687,120,0.876,121,1.441,122,0.783,123,0.844,124,0.813,125,0.876,126,0.798,127,0.876,128,0.813,129,0.844,130,0.876,131,0.813,132,0.876,133,0.813,134,0.876,135,0.798,136,0.844,137,0.876,138,0.813,139,0.876,140,0.844,141,0.798,142,1.195,143,0.881,144,1.241,145,0.798,146,1.241,147,0.783,148,1.862,149,0.798,150,0.726,151,0.876,152,0.798,153,1.313,154,0.798,155,0.798,156,0.813,157,0.876,158,0.798,159,0.876,160,0.829,161,0.754,162,1.792,163,0.813,164,0.876,165,0.813,166,1.64,167,0.876,168,0.813,169,0.876,170,0.813,171,0.813,172,0.876,173,1.455,174,0.876,175,0.813,176,0.876,177,0.798,178,0.844,179,0.813,180,0.898,181,0.876,182,0.798,183,0.876,184,0.798,185,0.813,186,0.876,187,0.813,188,1.441,189,0.813,190,1.241,191,0.876,192,0.813,193,0.876,194,0.813,195,0.876,196,0.798,197,0.829,198,0.798,199,0.876,200,0.798,201,0.86,202,1.11,203,0.798,204,0.813,205,0.813,206,0.876,207,0.798,208,1.594,209,0.783,210,0.876,211,0.798,212,0.829,213,0.798,214,0.798,215,0.876,216,0.813,217,0.876,218,1.241,219,0.813,220,0.876,221,0.813,222,0.876,223,0.876,224,0.813,225,0.876,226,0.783,227,0.953,228,0.798,229,0.813,230,0.876,231,0.813,232,0.876,233,1.11,234,1.241,235,1.241,236,0.798,237,0.844,238,0.74,239,0.798,240,0.798,241,0.86,242,0.829,243,0.876,244,0.798,245,0.876,246,0.783,247,0.844,248,0.876,249,0.004,250,0.004,253,1.817,273,1.815,282,2.19,303,1.324,393,1.231,394,1.871,574,1.546,655,1.705,656,1.581,658,1.744,661,1.824,662,1.307,668,2.19,669,2.19,670,2.239,671,1.48,672,1.334,673,2.157,674,2.092,675,1.581,678,1.256,685,3.378,706,2.291,744,3.079,745,2.722,751,2.092,771,4.208,834,2.576,847,3.152,930,4.675,1065,2.964,1623,5.044,1937,2.475,1946,5.56,2029,7.592,2030,6.964,2031,3.685,2032,6.823,2033,5.875,2034,5.875,2035,6.96,2036,5.875,2037,4.147,2038,4.147,2039,4.147,2040,4.147,2041,6.823,2042,4.147,2043,5.875,2044,3.152]],["title/components/IntegrationGithubComponent.html",[0,0.17,175,0.914]],["body/components/IntegrationGithubComponent.html",[0,0.239,1,0.737,2,1.088,3,0.094,4,0.087,5,0.809,6,0.824,7,0.809,8,0.809,9,0.056,13,1.524,14,2.379,15,0.683,16,1.75,17,1.747,18,1.255,19,1.129,21,1.088,23,1.088,25,0.218,26,0.634,27,1.309,29,2.231,32,0.721,36,2.609,37,0.597,44,0.911,46,0.519,47,0.007,48,0.603,49,0.309,50,0.438,52,0.836,53,1.429,60,1.186,61,1.037,62,1.54,63,2.798,65,1.527,66,2.869,71,0.432,73,0.312,74,1.231,77,0.971,81,0.633,85,0.087,88,1.048,89,2.603,90,0.189,110,1.159,113,1.615,114,1.748,115,0.809,116,1.172,117,1.279,118,0.67,119,1.735,120,0.809,121,1.378,122,0.723,123,0.779,124,0.75,125,0.809,126,0.737,127,0.809,128,0.75,129,0.779,130,0.809,131,0.75,132,0.809,133,0.75,134,0.809,135,0.737,136,0.779,137,0.809,138,0.75,139,0.809,140,0.779,141,0.737,142,1.142,143,0.832,144,1.172,145,0.737,146,1.172,147,0.723,148,1.829,149,0.737,150,0.67,151,0.809,152,0.737,153,1.255,154,0.737,155,0.737,156,0.75,157,0.809,158,0.737,159,0.809,160,0.765,161,1.521,162,1.698,163,0.75,164,0.809,165,0.75,166,1.403,167,0.809,168,0.75,169,0.809,170,0.75,171,0.75,172,0.809,173,0.75,174,0.809,175,1.403,176,0.809,177,0.737,178,0.779,179,0.75,180,0.848,181,0.809,182,0.737,183,0.809,184,0.737,185,1.088,186,0.809,187,0.75,188,1.378,189,0.75,190,1.172,191,0.809,192,0.75,193,0.809,194,0.75,195,0.809,196,0.737,197,0.765,198,0.737,199,0.809,200,0.737,201,0.794,202,1.048,203,0.737,204,0.75,205,0.75,206,0.809,207,0.737,208,1.546,209,0.723,210,0.809,211,0.737,212,0.765,213,0.737,214,0.737,215,0.809,216,0.75,217,0.809,218,1.172,219,0.75,220,0.809,221,0.75,222,0.809,223,0.809,224,0.75,225,0.809,226,0.723,227,0.899,228,0.737,229,0.75,230,0.809,231,0.75,232,0.809,233,1.048,234,1.172,235,1.172,236,0.737,237,0.779,238,0.683,239,0.737,240,0.737,241,0.794,242,0.765,243,0.809,244,0.737,245,0.809,246,0.723,247,0.779,248,0.809,249,0.004,250,0.004,282,2.432,288,1.206,305,1.601,306,2.379,370,1.282,392,1.366,393,2.351,394,1.727,638,5.124,655,0.957,658,1.647,662,1.206,664,1.641,666,1.727,668,1.427,669,1.427,670,2.114,671,1.979,672,1.784,673,1.991,674,1.931,675,1.459,706,2.163,744,2.503,745,2.57,755,2.377,869,2.741,882,2.377,888,2.885,1180,4.251,1183,7.057,1207,2.377,1338,3.77,1624,4.052,1636,2.377,1637,2.377,1638,2.482,1656,3.119,1938,2.482,2045,7.693,2046,3.4,2047,6.524,2048,5.547,2049,6.524,2050,6.524,2051,7.154,2052,7.154,2053,7.154,2054,3.4,2055,5.547,2056,3.828,2057,3.828,2058,3.828,2059,3.828,2060,3.828,2061,3.828,2062,3.828,2063,3.828,2064,5.547,2065,5.547,2066,3.828,2067,3.828,2068,3.828,2069,3.828,2070,3.828,2071,4.928,2072,5.547]],["title/components/LandingPageComponent.html",[0,0.17,177,0.897]],["body/components/LandingPageComponent.html",[0,0.271,1,0.932,2,1.282,3,0.119,4,0.111,5,1.023,6,1.042,7,1.023,8,1.023,9,0.071,15,0.864,16,1.765,17,1.763,18,0.932,19,1.331,21,1.282,23,1.282,37,1.155,44,0.518,47,0.007,48,0.63,71,0.276,73,0.395,77,1.145,81,0.8,85,0.111,90,0.239,115,1.023,116,1.382,117,1.452,118,0.848,119,1.645,120,1.023,121,1.565,122,0.915,123,0.986,124,0.949,125,1.023,126,0.932,127,1.023,128,0.949,129,0.986,130,1.023,131,0.949,132,1.023,133,0.949,134,1.023,135,0.932,136,0.986,137,1.023,138,0.949,139,1.023,140,0.986,141,0.932,142,1.297,143,0.981,144,1.382,145,0.932,146,1.382,147,0.915,148,1.921,149,0.932,150,0.848,151,1.023,152,0.932,153,1.425,154,0.932,155,0.932,156,0.949,157,1.023,158,0.932,159,1.023,160,0.967,161,0.881,162,1.452,163,0.949,164,1.023,165,0.949,166,1.282,167,1.023,168,0.949,169,1.023,170,0.949,171,0.949,172,1.023,173,0.949,174,1.023,175,0.949,176,1.023,177,1.526,178,1.806,179,0.949,180,1,181,1.023,182,0.932,183,1.023,184,0.932,185,0.949,186,1.023,187,0.949,188,1.565,189,0.949,190,1.382,191,1.023,192,0.949,193,1.023,194,0.949,195,1.023,196,0.932,197,0.967,198,0.932,199,1.023,200,0.932,201,1.004,202,1.235,203,0.932,204,0.949,205,0.949,206,1.023,207,0.932,208,1.686,209,0.915,210,1.023,211,0.932,212,0.967,213,0.932,214,0.932,215,1.023,216,0.949,217,1.023,218,1.382,219,0.949,220,1.023,221,0.949,222,1.023,223,1.023,224,0.949,225,1.023,226,0.915,227,1.06,228,0.932,229,0.949,230,1.023,231,0.949,232,1.023,233,1.235,234,1.382,235,1.382,236,0.932,237,0.986,238,1.322,239,0.932,240,0.932,241,1.004,242,0.967,243,1.023,244,0.932,245,1.023,246,0.915,247,0.986,248,1.023,249,0.005,250,0.005,419,6.028,2073,5.811,2074,4.302,2075,7.406,2076,6.541,2077,4.843]],["title/interfaces/LetContext.html",[86,0.816,2078,3.542]],["body/interfaces/LetContext.html",[3,0.171,4,0.159,9,0.102,16,1.241,25,0.396,26,0.941,47,0.007,49,0.33,61,1.106,71,0.396,73,0.567,85,0.159,86,1.218,90,0.343,91,1.47,118,1.441,166,1.613,246,1.314,247,1.908,249,0.006,250,0.006,251,2.33,279,3.223,337,6.884,1065,3.509,2078,6.66,2079,5.669,2080,7.311,2081,7.311,2082,6.18,2083,6.18,2084,6.18,2085,6.18,2086,6.18,2087,6.18,2088,6.18]],["title/directives/LetDirective.html",[118,0.816,246,0.88]],["body/directives/LetDirective.html",[3,0.158,4,0.147,9,0.095,15,1.149,16,1.402,25,0.367,26,0.898,37,1.004,44,0.944,46,1.065,47,0.007,48,0.624,49,0.419,50,0.898,52,0.753,53,1.286,60,1.171,61,1.348,71,0.367,73,0.525,85,0.147,86,1.127,90,0.317,91,1.791,118,1.375,166,1.54,239,1.239,246,1.484,247,1.929,249,0.006,250,0.006,279,2.984,337,6.879,706,3.063,1027,4.086,1065,3.963,2078,6.443,2079,5.247,2080,7.842,2081,7.842,2082,7.532,2083,6.979,2084,7.532,2085,5.721,2086,5.721,2087,5.721,2088,5.721,2089,7.856,2090,6.439,2091,7.856,2092,6.439]],["title/components/ListGroupComponent.html",[0,0.17,179,0.914]],["body/components/ListGroupComponent.html",[0,0.262,1,0.874,2,1.228,3,0.111,4,0.104,5,0.96,6,0.978,7,0.96,8,0.96,9,0.067,13,1.72,14,2.613,15,0.811,16,1.762,17,1.759,18,0.874,19,1.274,21,1.228,23,1.228,25,0.259,32,0.814,36,2.816,37,1.117,44,0.766,47,0.007,48,0.613,49,0.215,52,0.531,53,0.907,71,0.259,73,0.371,77,1.096,81,0.751,85,0.104,90,0.224,110,1.376,113,1.323,114,1.431,115,0.96,116,1.323,117,1.405,118,0.795,119,1.736,120,0.96,121,1.514,122,0.858,123,0.925,124,0.891,125,0.96,126,0.874,127,0.96,128,0.891,129,0.925,130,0.96,131,0.891,132,0.96,133,0.891,134,0.96,135,0.874,136,0.925,137,0.96,138,0.891,139,0.96,140,0.925,141,0.874,142,1.254,143,0.939,144,1.323,145,0.874,146,1.323,147,0.858,148,1.897,149,0.874,150,0.795,151,0.96,152,0.874,153,1.379,154,0.874,155,0.874,156,0.891,157,0.96,158,0.874,159,0.96,160,0.907,161,0.826,162,1.405,163,0.891,164,0.96,165,0.891,166,1.514,167,0.96,168,0.891,169,0.96,170,0.891,171,0.891,172,0.96,173,0.891,174,0.96,175,0.891,176,0.96,177,0.874,178,0.925,179,1.514,180,1.357,181,0.96,182,0.874,183,0.96,184,0.874,185,0.891,186,0.96,187,0.891,188,1.514,189,0.891,190,1.323,191,0.96,192,0.891,193,0.96,194,0.891,195,0.96,196,0.874,197,0.907,198,0.874,199,0.96,200,0.874,201,0.942,202,1.182,203,0.874,204,0.891,205,0.891,206,0.96,207,0.874,208,1.649,209,0.858,210,0.96,211,0.874,212,0.907,213,0.874,214,0.874,215,0.96,216,0.891,217,0.96,218,1.323,219,0.891,220,0.96,221,0.891,222,0.96,223,0.96,224,0.891,225,0.96,226,0.858,227,1.015,228,0.874,229,0.891,230,0.96,231,0.891,232,0.96,233,1.182,234,1.323,235,1.323,236,0.874,237,0.925,238,0.811,239,0.874,240,0.874,241,0.942,242,0.907,243,0.96,244,0.874,245,0.96,246,0.858,247,0.925,248,0.96,249,0.005,250,0.005,303,1.117,393,2.127,394,2.825,574,1.693,655,1.135,656,1.731,675,1.731,678,1.376,706,2.441,744,2.05,773,2.711,834,2.821,865,3.362,930,4.834,1006,3.453,1937,3.737,2093,6.86,2094,6.293,2095,4.036,2096,7.165,2097,6.261,2098,6.261,2099,4.543,2100,4.543,2101,4.543,2102,4.543]],["title/guards/LoggedInUsersGuard.html",[427,3.542,2103,3.542]],["body/guards/LoggedInUsersGuard.html",[3,0.166,4,0.155,9,0.099,13,1.86,25,0.385,32,1.053,37,1.055,44,0.865,46,0.917,47,0.007,48,0.537,49,0.321,50,0.774,52,0.791,71,0.493,73,0.552,85,0.155,90,0.334,91,1.43,106,1.558,249,0.006,250,0.006,273,2.091,282,2.523,288,2.133,317,2.828,368,3.414,369,3.223,370,2.267,384,3.897,426,2.05,427,6.153,438,8.275,481,5.055,883,5.516,2104,6.013,2105,7.696,2106,6.013,2107,6.013,2108,6.768,2109,6.768,2110,5.144,2111,6.768]],["title/components/LoginPage.html",[0,0.17,182,0.897]],["body/components/LoginPage.html",[0,0.211,1,0.597,2,0.931,3,0.076,4,0.071,5,0.656,6,0.668,7,0.656,8,0.656,9,0.046,13,1.304,14,2.101,15,0.554,16,1.732,17,1.73,18,0.597,19,0.966,21,0.931,23,0.931,25,0.177,26,0.543,27,1.212,29,2.861,32,0.617,36,2.353,37,0.74,44,0.815,46,0.643,47,0.007,48,0.582,49,0.306,50,0.838,52,0.673,53,1.151,60,0.565,61,0.494,62,1.693,63,2.471,64,1.809,65,3.043,66,3.057,71,0.434,73,0.253,74,0.998,77,0.831,81,0.513,83,0.821,85,0.071,90,0.153,91,1.549,103,1.521,104,1.521,106,0.913,110,0.94,111,1.084,113,2.607,114,2.479,115,0.656,116,1.003,117,1.13,118,0.544,119,1.672,120,0.656,121,1.217,122,0.586,123,0.632,124,0.609,125,0.656,126,0.597,127,0.656,128,0.609,129,0.632,130,0.656,131,0.609,132,0.656,133,0.609,134,0.656,135,0.597,136,0.632,137,0.656,138,0.609,139,0.656,140,0.632,141,0.597,142,1.009,143,0.711,144,1.003,145,0.597,146,1.003,147,0.586,148,1.738,149,0.597,150,0.544,151,0.656,152,0.597,153,1.109,154,0.597,155,0.597,156,0.609,157,0.656,158,0.597,159,1.217,160,0.62,161,0.565,162,1.13,163,0.609,164,0.656,165,0.609,166,1.13,167,0.656,168,0.609,169,0.656,170,0.609,171,0.609,172,0.656,173,0.609,174,0.656,175,0.609,176,0.656,177,0.597,178,0.632,179,0.609,180,0.726,181,0.656,182,1.242,183,0.656,184,0.597,185,1.437,186,0.656,187,0.609,188,1.217,189,0.609,190,1.003,191,0.656,192,0.609,193,0.656,194,0.609,195,0.656,196,0.597,197,0.62,198,0.597,199,0.656,200,0.597,201,0.644,202,1.088,203,0.597,204,0.609,205,0.609,206,0.656,207,0.597,208,1.415,209,0.586,210,0.656,211,0.597,212,0.62,213,0.597,214,0.597,215,0.656,216,0.609,217,0.656,218,1.003,219,0.609,220,0.656,221,0.609,222,0.656,223,0.656,224,0.609,225,0.656,226,0.586,227,0.77,228,0.597,229,0.609,230,0.656,231,0.609,232,0.656,233,0.896,234,1.003,235,1.003,236,0.597,237,0.632,238,0.554,239,0.597,240,0.597,241,1.195,242,0.62,243,0.656,244,0.597,245,0.656,246,0.586,247,0.632,248,0.656,249,0.004,250,0.004,288,1.496,303,0.847,305,1.299,384,3.191,392,2.616,393,2.484,395,1.615,407,2.468,426,0.94,476,5.502,478,3.607,479,3.966,481,3.935,510,1.667,513,5.119,563,3.198,655,1.612,658,2.335,659,1.928,660,3.143,662,2.033,664,2.035,666,2.142,668,2.405,669,2.148,670,2.459,671,2.056,672,1.853,673,1.615,674,1.566,675,2.196,678,1.745,680,2.087,681,2.035,687,1.439,742,1.331,746,1.615,747,1.478,748,4.149,750,2.199,751,1.566,756,1.521,776,1.478,791,2.948,818,1.853,854,2.11,865,2.548,873,2.223,878,2.359,879,2.53,884,4.904,885,2.013,886,1.785,887,1.928,888,1.615,889,4.753,890,2.11,891,3.078,892,2.11,893,1.785,894,2.833,895,5.591,896,2.833,897,2.013,898,1.853,899,2.013,900,2.11,901,3.226,902,2.223,903,4.385,904,2.11,905,4.725,906,4.385,907,2.11,908,2.11,909,2.11,910,2.11,911,2.11,912,2.11,913,2.11,914,2.11,958,1.108,1002,3.698,1091,3.868,1132,1.928,1238,3.226,1239,3.607,1240,2.325,1364,2.833,1472,2.53,1473,3.607,1476,2.53,1834,2.729,2112,2.758,2113,5.762,2114,4.746,2115,5.762,2116,4.217,2117,5.184,2118,3.104,2119,4.217,2120,3.104,2121,3.104,2122,3.104,2123,3.104,2124,3.104,2125,3.104,2126,2.53,2127,3.104,2128,4.746,2129,4.746,2130,3.104,2131,3.104,2132,2.758,2133,3.104,2134,3.104,2135,3.104,2136,1.928,2137,2.758,2138,3.104,2139,4.217,2140,2.758,2141,2.758,2142,3.104,2143,3.104,2144,3.104,2145,4.217,2146,4.217,2147,4.217,2148,4.217]],["title/modules/MainModule.html",[396,1.817,405,2.781]],["body/modules/MainModule.html",[2,1.458,3,0.102,4,0.095,9,0.061,47,0.007,71,0.558,73,0.34,74,1.339,76,2.587,85,0.156,90,0.337,93,1.145,117,1.156,122,1.113,131,1.156,133,1.156,138,1.156,156,1.156,163,1.156,168,1.156,170,1.156,171,1.156,184,1.134,185,1.341,189,1.156,192,1.156,194,1.156,205,1.156,216,1.156,219,1.156,221,1.156,229,1.156,231,1.156,240,1.134,242,0.832,244,1.134,246,1.113,249,0.004,250,0.004,253,0.931,270,2.166,288,1.313,318,2.973,332,4.006,362,3.395,363,3.166,396,3.059,398,3.205,399,3.992,405,4.862,406,3.517,407,2.166,408,1.93,410,4.438,411,3.737,413,3.35,422,3.822,424,3.517,426,1.261,431,3.166,432,3.701,452,2.587,459,3.661,460,2.587,461,4.006,531,3.701,539,2.659,566,3.701,782,1.786,810,3.701,937,2.312,945,3.271,953,3.271,1031,2.701,1032,2.983,1284,3.701,1409,2.701,1458,4.221,1510,3.395,1664,4.479,1697,4.221,1789,3.395,2004,3.395,2149,3.395,2150,5.893,2151,5.893,2152,4.803,2153,4.165,2154,5.893,2155,5.236,2156,5.236,2157,4.165,2158,5.236,2159,4.165,2160,5.236,2161,4.165,2162,5.236,2163,5.236,2164,8.147,2165,5.236,2166,5.236,2167,4.165,2168,5.236,2169,4.165,2170,6.076,2171,4.165,2172,5.236,2173,4.165,2174,6.076,2175,4.165,2176,5.236,2177,5.236,2178,4.165,2179,5.236,2180,4.165,2181,5.236,2182,4.165,2183,5.236,2184,4.165,2185,5.236,2186,4.165,2187,5.236,2188,4.165,2189,5.236,2190,4.165,2191,5.236,2192,4.165,2193,5.236,2194,4.165,2195,5.236,2196,3.701,2197,3.701,2198,4.165,2199,4.165,2200,4.165,2201,4.165,2202,4.165,2203,3.701,2204,4.165,2205,4.165,2206,4.165,2207,5.893,2208,3.395,2209,4.165,2210,3.395,2211,4.165,2212,4.165,2213,4.165,2214,4.165,2215,3.395,2216,5.893,2217,4.165,2218,3.395,2219,4.165,2220,4.165,2221,4.165,2222,4.165,2223,3.395,2224,4.165,2225,4.165,2226,4.165,2227,4.165,2228,4.165,2229,4.165,2230,4.221,2231,4.165,2232,4.165,2233,4.165,2234,3.701,2235,3.395,2236,4.803,2237,3.701,2238,3.395,2239,3.701,2240,3.701,2241,3.701,2242,4.165,2243,4.165,2244,5.893,2245,4.165,2246,5.893,2247,4.165,2248,4.165,2249,4.165,2250,4.165]],["title/components/MainViewComponent.html",[0,0.17,184,0.897]],["body/components/MainViewComponent.html",[0,0.262,1,0.876,2,1.229,3,0.112,4,0.104,5,0.962,6,0.98,7,0.962,8,0.962,9,0.067,13,1.723,14,2.615,15,0.812,16,1.762,17,1.759,18,0.876,19,1.276,21,1.229,23,1.229,25,0.259,32,0.815,36,2.818,37,1.118,44,0.67,47,0.007,48,0.614,52,0.532,53,0.909,71,0.259,73,0.371,77,1.098,81,0.752,85,0.104,90,0.224,113,1.825,114,2.554,115,0.962,116,1.325,117,1.406,118,0.797,119,1.681,120,0.962,121,1.515,122,0.859,123,0.926,124,0.892,125,0.962,126,0.876,127,0.962,128,0.892,129,0.926,130,0.962,131,0.892,132,0.962,133,0.892,134,0.962,135,0.876,136,0.926,137,0.962,138,0.892,139,0.962,140,0.926,141,0.876,142,1.256,143,0.94,144,1.325,145,0.876,146,1.325,147,0.859,148,1.898,149,0.876,150,0.797,151,0.962,152,0.876,153,1.38,154,0.876,155,0.876,156,0.892,157,0.962,158,0.876,159,0.962,160,0.909,161,0.828,162,1.406,163,0.892,164,0.962,165,0.892,166,1.229,167,0.962,168,0.892,169,0.962,170,0.892,171,0.892,172,0.962,173,0.892,174,0.962,175,0.892,176,0.962,177,0.876,178,0.926,179,0.892,180,0.959,181,0.962,182,0.876,183,0.962,184,1.487,185,1.74,186,0.962,187,0.892,188,1.515,189,0.892,190,1.325,191,0.962,192,0.892,193,0.962,194,0.892,195,0.962,196,0.876,197,0.909,198,0.876,199,0.962,200,0.876,201,0.944,202,1.184,203,0.876,204,0.892,205,0.892,206,0.962,207,0.876,208,1.65,209,0.859,210,0.962,211,0.876,212,0.909,213,0.876,214,0.876,215,0.962,216,0.892,217,0.962,218,1.325,219,0.892,220,0.962,221,0.892,222,0.962,223,0.962,224,0.892,225,0.962,226,0.859,227,1.017,228,0.876,229,0.892,230,0.962,231,0.892,232,0.962,233,1.184,234,1.633,235,1.325,236,0.876,237,0.926,238,0.812,239,0.876,240,0.876,241,0.944,242,0.909,243,0.962,244,0.876,245,0.962,246,0.859,247,0.926,248,0.962,249,0.005,250,0.005,277,1.624,392,1.624,393,1.861,394,2.054,395,2.367,431,5.451,655,1.567,658,2.295,660,2.796,664,1.952,666,2.054,693,1.774,755,2.827,1990,3.459,2251,6.372,2252,4.043,2253,7.172,2254,6.27,2255,4.551,2256,4.551,2257,4.875,2258,5.57,2259,4.49,2260,4.043,2261,3.709]],["title/components/MemberListComponent.html",[0,0.17,187,0.914]],["body/components/MemberListComponent.html",[0,0.243,1,0.759,2,1.112,3,0.097,4,0.09,5,0.833,6,0.849,7,0.833,8,0.833,9,0.058,13,1.558,14,2.42,15,0.704,16,1.752,17,1.749,18,0.759,19,1.796,21,1.112,23,1.112,25,0.225,26,0.648,27,1.323,32,0.737,36,2.645,37,0.615,44,0.902,46,0.768,47,0.007,48,0.67,49,0.414,50,0.648,52,0.663,53,1.133,60,0.717,61,0.627,64,2.765,68,1.895,71,0.438,73,0.322,77,0.993,81,0.652,83,1.043,85,0.09,87,1.735,88,1.451,89,3.066,90,0.194,91,0.833,93,1.084,115,0.833,116,1.198,117,1.301,118,0.691,119,1.504,120,0.833,121,1.402,122,0.745,123,0.803,124,0.773,125,0.833,126,0.759,127,0.833,128,0.773,129,0.803,130,0.833,131,0.773,132,0.833,133,0.773,134,0.833,135,0.759,136,0.803,137,0.833,138,0.773,139,0.833,140,0.803,141,0.759,142,1.345,143,0.85,144,1.198,145,0.759,146,1.198,147,0.745,148,1.842,149,0.759,150,1.162,151,0.833,152,0.759,153,1.586,154,0.759,155,0.759,156,0.773,157,0.833,158,0.759,159,0.833,160,0.788,161,0.717,162,1.301,163,0.773,164,0.833,165,0.773,166,1.569,167,0.833,168,0.773,169,0.833,170,0.773,171,0.773,172,0.833,173,0.773,174,0.833,175,0.773,176,0.833,177,0.759,178,0.803,179,0.773,180,1.109,181,0.833,182,0.759,183,0.833,184,0.759,185,0.773,186,0.833,187,1.422,188,1.402,189,0.773,190,1.198,191,0.833,192,0.773,193,0.833,194,0.773,195,0.833,196,0.759,197,0.788,198,0.759,199,0.833,200,0.759,201,0.818,202,1.071,203,0.759,204,0.773,205,0.773,206,0.833,207,0.759,208,1.564,209,0.745,210,0.833,211,0.759,212,0.788,213,0.759,214,0.759,215,0.833,216,0.773,217,0.833,218,1.198,219,0.773,220,0.833,221,0.773,222,0.833,223,0.833,224,0.773,225,0.833,226,0.745,227,0.919,228,0.759,229,0.773,230,0.833,231,0.773,232,0.833,233,1.071,234,1.198,235,1.198,236,0.759,237,0.803,238,0.704,239,0.759,240,0.759,241,0.818,242,0.788,243,0.833,244,0.759,245,0.833,246,0.745,247,0.803,248,0.833,249,0.004,250,0.004,303,1.012,370,1.321,426,1.194,509,3.383,510,3.895,536,4.038,541,4.6,567,3.684,568,2.558,569,2.45,571,2.558,585,2.19,586,2.268,651,2.354,706,2.21,769,1.218,1106,6.52,1141,3.215,1186,7,2262,7.631,2263,3.505,2264,6.636,2265,5.669,2266,5.669,2267,6.636,2268,3.945,2269,5.669,2270,3.945,2271,3.945,2272,5.669,2273,3.945,2274,3.945,2275,3.945,2276,3.945,2277,3.945,2278,3.945,2279,3.945,2280,5.669,2281,5.669,2282,5.669,2283,5.669,2284,4.62]],["title/injectables/MemberService.html",[317,1.628,541,2.679]],["body/injectables/MemberService.html",[3,0.111,4,0.104,9,0.067,18,1.559,19,1.78,25,0.259,27,1.54,32,0.815,37,0.709,44,0.895,46,1.135,47,0.007,48,0.665,49,0.397,50,0.958,52,1.05,62,0.979,68,2.719,71,0.461,73,0.371,83,1.203,85,0.104,88,1.798,89,3.489,90,0.224,106,1.612,109,5.026,143,1.423,180,1.181,197,1.714,249,0.005,250,0.005,253,1.81,303,1.279,309,3.409,317,2.189,318,4.225,319,2.294,321,2.015,328,5.098,344,6.826,345,6.826,368,2.294,369,2.165,370,1.523,489,2.714,507,3.257,508,3.091,512,3.512,541,3.602,567,3.478,568,2.948,569,2.824,709,3.774,769,2.825,942,4.649,1113,3.892,1271,5.533,1932,6.863,2285,4.04,2286,8.376,2287,4.547,2288,4.547,2289,4.547,2290,6.265,2291,6.369,2292,6.265,2293,4.547,2294,5.106,2295,4.547,2296,5.106,2297,6.265,2298,4.547,2299,6.265,2300,4.547,2301,6.265,2302,6.265,2303,4.547,2304,4.547,2305,4.547,2306,3.705,2307,4.547,2308,4.547,2309,4.547,2310,4.04,2311,4.04,2312,4.04,2313,3.705]],["title/modules/MessagesModule.html",[396,1.817,2314,3.542]],["body/modules/MessagesModule.html",[3,0.174,4,0.162,9,0.104,47,0.007,71,0.503,73,0.579,85,0.162,90,0.35,249,0.006,250,0.006,398,2.901,399,4.472,406,4.971,407,3.693,408,3.291,410,4.238,411,3.967,413,4.081,459,5.174,460,4.411,2314,7.156,2315,6.309,2316,6.309,2317,6.743,2318,7.101,2319,7.101]],["title/modules/MessagesRoutingModule.html",[396,1.817,2317,3.337]],["body/modules/MessagesRoutingModule.html",[3,0.176,4,0.164,9,0.105,47,0.007,71,0.477,73,0.584,85,0.164,90,0.353,93,1.969,180,1.096,249,0.006,250,0.006,396,2.794,398,2.927,411,3.412,413,4.102,424,4.997,425,5.002,426,2.17,442,6.364,452,4.45,480,4.87,2317,5.997,2320,7.165]],["title/interfaces/ModifyUser.html",[86,0.816,2321,3.022]],["body/interfaces/ModifyUser.html",[3,0.164,4,0.152,9,0.098,25,0.38,26,0.918,47,0.007,48,0.737,49,0.424,64,2.544,85,0.204,86,1.564,88,1.626,249,0.006,250,0.006,251,2.236,303,1.757,479,4.754,509,5.541,510,4.31,625,3.282,769,2.48,1949,6.02,2321,5.206,2322,4.78,2323,4.536,2324,4.536,2325,4.327]],["title/components/NavElementComponent.html",[0,0.17,189,0.914]],["body/components/NavElementComponent.html",[0,0.227,1,0.674,2,1.019,3,0.086,4,0.08,5,0.74,6,0.754,7,0.74,8,0.74,9,0.051,13,1.429,15,0.625,16,1.743,17,1.74,18,0.674,19,1.058,21,1.019,23,1.019,25,0.199,26,0.594,27,1.5,32,0.676,37,0.967,44,0.92,47,0.007,48,0.545,49,0.347,50,0.594,52,0.802,53,1.463,57,1.717,60,1.127,61,0.986,62,1.119,71,0.39,73,0.286,77,0.91,81,0.579,83,0.927,85,0.08,90,0.173,110,2.077,113,1.805,114,2.503,115,0.74,116,1.098,117,1.505,118,0.613,119,1.647,120,0.74,121,1.31,122,0.662,123,0.713,124,0.687,125,0.74,126,0.674,127,0.74,128,0.687,129,0.713,130,0.74,131,0.687,132,0.74,133,0.687,134,0.74,135,0.674,136,0.713,137,0.74,138,0.687,139,0.74,140,0.713,141,0.674,142,1.085,143,0.779,144,1.098,145,0.674,146,1.098,147,0.662,148,1.792,149,0.674,150,0.613,151,0.74,152,0.674,153,1.193,154,0.674,155,0.674,156,0.687,157,0.74,158,0.674,159,0.74,160,0.7,161,0.637,162,1.215,163,0.687,164,0.74,165,0.687,166,1.436,167,0.74,168,0.687,169,0.74,170,0.687,171,0.687,172,0.74,173,0.687,174,0.74,175,0.687,176,0.74,177,0.674,178,0.713,179,0.687,180,0.948,181,0.74,182,0.674,183,0.74,184,0.674,185,0.687,186,0.74,187,0.687,188,1.31,189,1.345,190,1.761,191,0.74,192,0.687,193,0.74,194,0.687,195,0.74,196,0.674,197,0.7,198,0.674,199,0.74,200,0.674,201,0.727,202,0.982,203,0.674,204,0.687,205,0.687,206,0.74,207,0.674,208,1.491,209,0.662,210,0.74,211,0.674,212,0.7,213,0.674,214,0.674,215,0.74,216,0.687,217,0.74,218,1.098,219,0.687,220,0.74,221,0.687,222,0.74,223,0.74,224,0.687,225,0.74,226,0.662,227,0.843,228,0.674,229,0.687,230,0.74,231,0.687,232,0.74,233,0.982,234,1.098,235,1.098,236,0.674,237,0.713,238,0.625,239,0.674,240,0.674,241,0.727,242,0.7,243,0.74,244,0.674,245,0.74,246,0.662,247,0.713,248,0.74,249,0.004,250,0.004,255,1.398,273,2.118,277,1.25,282,2.311,288,1.104,303,0.928,304,2.509,305,1.466,306,1.503,334,2.886,392,1.25,393,2.359,394,1.581,408,1.624,573,1.503,574,1.306,575,1.466,576,2.229,655,2.12,656,1.335,658,2.475,660,2.856,664,1.503,666,1.581,668,2.861,669,2.861,670,3.233,671,2.614,672,2.355,673,1.822,674,1.768,678,2.471,679,1.768,680,2.286,681,2.229,687,1.624,688,1.503,693,1.366,706,2.027,741,1.945,746,1.822,747,1.669,750,1.624,755,2.176,761,1.945,762,1.945,773,3.7,801,3.564,805,2.176,806,2.272,831,2.382,833,4.55,888,1.822,893,2.015,1248,2.091,1280,3.85,1592,4.711,1594,5.212,1601,5.833,1882,3.951,1937,2.091,1938,2.272,2210,7.099,2257,2.382,2259,3.724,2260,3.113,2261,2.855,2326,7.099,2327,3.113,2328,6.199,2329,5.199,2330,5.507,2331,5.507,2332,6.858,2333,6.858,2334,6.858,2335,5.507,2336,6.199,2337,5.199,2338,3.504,2339,3.504,2340,3.504,2341,3.504,2342,3.504,2343,3.504,2344,3.504,2345,4.619,2346,3.504,2347,3.504,2348,5.507,2349,3.504,2350,3.504,2351,3.113,2352,4.619,2353,3.113,2354,2.855,2355,3.113]],["title/components/NavElementWorkspaceComponent.html",[0,0.17,192,0.914]],["body/components/NavElementWorkspaceComponent.html",[0,0.184,1,0.484,2,0.79,3,0.062,4,0.058,5,0.532,6,0.542,7,0.532,8,0.532,9,0.037,13,1.107,15,0.449,16,1.712,17,1.707,18,0.484,19,0.82,21,0.79,23,0.79,25,0.143,26,0.461,27,1.415,32,0.524,37,0.628,44,0.942,46,0.955,47,0.007,48,0.628,49,0.382,50,0.864,52,0.969,53,1.677,57,1.233,60,1.047,61,0.915,62,0.867,71,0.441,73,0.205,77,1.499,81,0.416,83,0.666,85,0.058,90,0.124,91,1.216,110,1.906,113,1.833,114,2.494,115,0.532,116,0.851,117,1.874,118,0.441,119,1.697,120,0.532,121,1.064,122,0.475,123,0.512,124,0.494,125,0.532,126,0.484,127,0.532,128,0.494,129,0.512,130,0.532,131,0.494,132,0.532,133,0.494,134,0.532,135,0.484,136,0.512,137,0.532,138,0.494,139,0.532,140,0.512,141,0.484,142,1.175,143,1.387,144,0.851,145,0.484,146,0.851,147,0.475,148,1.637,149,0.484,150,1.102,151,0.532,152,0.484,153,1.453,154,0.484,155,0.484,156,0.494,157,0.532,158,0.484,159,0.532,160,0.503,161,0.458,162,0.987,163,0.494,164,0.532,165,0.494,166,1.234,167,0.532,168,0.494,169,0.532,170,0.494,171,0.494,172,0.532,173,0.494,174,0.532,175,0.494,176,0.532,177,0.484,178,0.512,179,0.494,180,0.616,181,0.532,182,0.484,183,0.532,184,0.484,185,0.494,186,0.532,187,0.494,188,1.064,189,0.494,190,1.596,191,0.532,192,1.128,193,0.532,194,0.494,195,0.532,196,0.484,197,1.006,198,0.484,199,0.532,200,0.484,201,0.522,202,0.761,203,0.484,204,0.494,205,0.494,206,0.532,207,0.484,208,1.281,209,0.475,210,0.532,211,0.484,212,0.503,213,0.484,214,0.484,215,0.532,216,0.494,217,0.532,218,0.851,219,0.494,220,0.532,221,0.494,222,0.532,223,0.532,224,0.494,225,0.532,226,0.475,227,0.653,228,0.484,229,0.494,230,0.532,231,0.494,232,0.532,233,0.761,234,0.851,235,0.851,236,0.484,237,0.512,238,0.449,239,0.484,240,0.484,241,0.522,242,0.503,243,0.532,244,0.484,245,0.532,246,0.475,247,0.512,248,0.532,249,0.003,250,0.003,255,1.004,273,1.244,277,0.898,282,1.877,288,2.116,303,0.719,304,1.803,305,1.685,334,2.236,384,2.95,392,2.516,393,2.518,394,2.84,395,1.309,408,1.866,426,0.762,539,3.181,540,3.454,573,1.08,574,0.938,575,1.053,576,2.159,655,2.045,656,0.959,658,2.349,660,2.856,668,2.815,669,2.815,670,3.119,671,2.396,672,2.159,673,2.095,674,2.032,678,2.478,679,1.27,680,1.771,681,1.727,687,1.866,688,1.08,693,1.963,706,1.57,741,1.397,744,2.597,745,2.667,746,2.095,747,1.918,750,1.866,761,1.397,762,1.397,769,1.244,773,3.005,801,2.895,805,1.564,806,1.632,831,1.711,833,2.502,845,2.404,893,2.316,1109,1.502,1110,3.197,1148,2.612,1242,3.283,1248,4.207,1280,3.127,1316,3.061,1364,3.757,1585,3.283,1592,3.827,1594,4.374,1601,5.103,1610,1.632,1654,3.827,1744,3.579,1882,3.061,1937,2.404,1938,2.612,1942,3.283,2208,7.223,2234,2.237,2259,2.885,2326,7.223,2330,4.473,2331,4.473,2335,4.473,2345,3.579,2351,2.237,2352,5.113,2353,3.579,2354,2.051,2355,2.237,2356,2.237,2357,5.035,2358,4.028,2359,5.035,2360,5.755,2361,5.755,2362,3.579,2363,5.113,2364,5.113,2365,4.028,2366,4.028,2367,4.028,2368,5.113,2369,4.028,2370,5.755,2371,5.755,2372,4.028,2373,2.517,2374,2.517,2375,2.517,2376,2.517,2377,3.579,2378,2.517,2379,2.517,2380,3.579,2381,2.517,2382,2.517,2383,2.517,2384,4.028,2385,2.517,2386,4.028,2387,2.517,2388,4.028,2389,2.517,2390,2.517,2391,4.028,2392,2.517,2393,2.517,2394,2.517,2395,2.517,2396,2.517,2397,2.517,2398,2.517,2399,2.237,2400,2.517,2401,2.237,2402,5.035,2403,2.517,2404,2.517,2405,6.294,2406,6.294,2407,6.294,2408,6.294,2409,3.579,2410,2.237,2411,2.237,2412,2.517,2413,2.517,2414,2.517,2415,2.517,2416,2.517,2417,2.517,2418,4.028,2419,4.028,2420,5.113,2421,5.113,2422,4.374,2423,4.028,2424,2.237,2425,2.517]],["title/components/OptionComponent.html",[0,0.17,194,0.914]],["body/components/OptionComponent.html",[0,0.262,1,0.877,2,1.231,3,0.112,4,0.104,5,0.963,6,0.981,7,0.963,8,0.963,9,0.067,15,0.814,16,1.762,17,1.759,18,0.877,19,1.278,21,1.231,23,1.231,25,0.26,26,0.718,27,0.754,37,0.711,44,0.867,46,0.618,47,0.007,48,0.644,49,0.341,50,0.521,60,0.829,61,1.23,71,0.357,73,0.372,77,1.099,81,0.754,85,0.104,90,0.225,106,0.877,115,0.963,116,1.326,117,1.408,118,0.798,119,1.604,120,0.963,121,1.517,122,0.861,123,0.928,124,0.894,125,0.963,126,0.877,127,0.963,128,0.894,129,0.928,130,0.963,131,0.894,132,0.963,133,0.894,134,0.963,135,0.877,136,0.928,137,0.963,138,0.894,139,0.963,140,0.928,141,0.877,142,1.257,143,0.941,144,1.326,145,0.877,146,1.326,147,0.861,148,1.898,149,0.877,150,0.798,151,0.963,152,0.877,153,1.381,154,0.877,155,0.877,156,0.894,157,0.963,158,0.877,159,0.963,160,0.911,161,0.829,162,1.408,163,0.894,164,0.963,165,0.894,166,1.59,167,0.963,168,0.894,169,0.963,170,0.894,171,0.894,172,0.963,173,0.894,174,0.963,175,0.894,176,0.963,177,0.877,178,0.928,179,0.894,180,0.96,181,0.963,182,0.877,183,0.963,184,0.877,185,0.894,186,0.963,187,0.894,188,1.517,189,0.894,190,1.326,191,0.963,192,0.894,193,0.963,194,1.517,195,0.963,196,0.877,197,0.911,198,0.877,199,0.963,200,0.877,201,0.946,202,1.186,203,0.877,204,0.894,205,0.894,206,0.963,207,0.877,208,1.651,209,0.861,210,0.963,211,0.877,212,0.911,213,0.877,214,0.877,215,0.963,216,0.894,217,0.963,218,1.326,219,0.894,220,0.963,221,0.894,222,0.963,223,0.963,224,0.894,225,0.963,226,0.861,227,1.018,228,0.877,229,0.894,230,0.963,231,0.894,232,0.963,233,1.186,234,1.326,235,1.326,236,0.877,237,0.928,238,0.814,239,0.877,240,0.877,241,0.946,242,0.911,243,0.963,244,0.877,245,0.963,246,0.861,247,0.928,248,0.963,249,0.005,250,0.005,303,1.281,370,1.528,573,1.955,574,1.7,575,1.908,576,1.955,679,3.622,706,2.448,788,5.851,801,4.447,1027,3.265,1534,4.771,1841,7.448,2426,4.051,2427,7.179,2428,6.278,2429,6.378,2430,4.56,2431,4.56,2432,6.278,2433,4.56,2434,4.56,2435,4.56,2436,4.56,2437,4.56,2438,4.56]],["title/interfaces/Project.html",[86,0.816,143,0.699]],["body/interfaces/Project.html",[3,0.163,4,0.152,9,0.098,25,0.379,26,0.916,47,0.007,48,0.752,49,0.423,50,0.916,71,0.379,85,0.152,86,1.165,88,1.624,109,4.303,143,1.289,161,1.457,180,1.225,197,1.601,249,0.006,250,0.006,251,2.229,303,1.656,567,4.955,569,4.133,638,5.74,769,2.866,782,2.854,2439,5.912,2440,8.926,2441,8.926,2442,8.014,2443,8.926]],["title/interfaces/ProjectMember.html",[86,0.816,567,2.587]],["body/interfaces/ProjectMember.html",[3,0.175,4,0.163,9,0.105,25,0.406,26,0.954,47,0.007,48,0.566,49,0.433,64,2.715,85,0.163,86,1.247,88,1.724,249,0.006,250,0.006,251,2.386,303,1.66,497,4.98,509,4.251,510,3.824,567,4.632,625,3.479,769,2.2,1949,4.619,2324,6.204,2444,6.328,2445,6.328]],["title/injectables/ProjectService.html",[317,1.628,540,2.283]],["body/injectables/ProjectService.html",[3,0.114,4,0.106,9,0.068,18,1.221,25,0.264,27,1.563,32,0.825,37,0.722,44,0.922,46,1.142,47,0.007,48,0.685,49,0.417,50,0.963,52,1.064,62,1.366,68,2.574,71,0.48,73,0.378,77,1.56,78,2.571,83,1.225,85,0.106,87,2.036,88,1.744,89,3.36,90,0.228,106,1.66,142,1.111,143,1.456,150,1.363,180,1.288,197,1.446,249,0.005,250,0.005,253,1.822,270,3.3,303,0.826,309,3.284,317,2.216,318,4.249,319,2.336,321,2.04,323,4.249,328,5.107,344,6.85,345,6.85,368,2.336,369,2.205,370,1.551,489,2.764,497,3.787,507,3.317,508,3.148,512,3.108,540,3.108,627,4.822,709,2.036,769,2.405,966,3.522,970,3.513,1113,3.941,1271,4.544,1324,6.344,1336,4.114,1499,5.292,2446,4.114,2447,6.345,2448,4.631,2449,6.345,2450,4.631,2451,6.345,2452,6.345,2453,4.631,2454,5.17,2455,4.631,2456,4.544,2457,5.637,2458,4.631,2459,5.637,2460,4.631,2461,6.345,2462,4.631,2463,4.114,2464,4.631,2465,4.631,2466,4.631,2467,4.631,2468,4.631,2469,4.631,2470,4.114,2471,4.631,2472,4.631,2473,4.631]],["title/components/ProjectsListPage.html",[0,0.17,196,0.897]],["body/components/ProjectsListPage.html",[0,0.235,1,0.719,2,1.069,3,0.092,4,0.085,5,0.79,6,0.804,7,0.79,8,0.79,9,0.055,15,0.667,16,1.748,17,1.744,18,0.719,19,1.11,21,1.069,23,1.069,25,0.213,26,0.623,27,1.298,32,0.709,37,0.85,44,0.888,46,0.959,47,0.007,48,0.684,49,0.385,50,0.809,52,0.752,53,1.286,60,0.68,61,0.594,62,1.173,68,2.148,71,0.483,73,0.305,77,1.455,81,0.618,83,0.989,85,0.085,87,3.308,88,1.03,90,0.184,91,1.756,93,1.027,110,1.132,115,0.79,116,1.152,117,1.262,118,0.654,119,1.467,120,0.79,121,1.36,122,0.706,123,0.761,124,0.733,125,0.79,126,0.719,127,0.79,128,0.733,129,0.761,130,0.79,131,0.733,132,0.79,133,0.733,134,0.79,135,0.719,136,0.761,137,0.79,138,0.733,139,0.79,140,0.761,141,0.719,142,1.127,143,1.397,144,1.152,145,0.719,146,1.152,147,0.706,148,1.82,149,0.719,150,1.127,151,0.79,152,0.719,153,1.511,154,0.719,155,0.719,156,0.733,157,0.79,158,0.719,159,0.79,160,0.747,161,0.68,162,1.262,163,0.733,164,0.79,165,0.733,166,1.069,167,0.79,168,0.733,169,0.79,170,0.733,171,0.733,172,0.79,173,0.733,174,0.79,175,0.733,176,0.79,177,0.719,178,0.761,179,0.733,180,1.082,181,0.79,182,0.719,183,0.79,184,0.719,185,0.733,186,0.79,187,0.733,188,1.36,189,0.733,190,1.152,191,0.79,192,0.733,193,0.79,194,0.733,195,0.79,196,1.361,197,1.743,198,0.719,199,0.79,200,0.719,201,0.775,202,1.03,203,0.719,204,0.733,205,0.733,206,0.79,207,0.719,208,1.531,209,0.706,210,0.79,211,0.719,212,0.747,213,0.719,214,0.719,215,0.79,216,0.733,217,0.79,218,1.152,219,0.733,220,0.79,221,0.733,222,0.79,223,0.79,224,0.733,225,0.79,226,0.706,227,0.884,228,0.719,229,0.733,230,0.79,231,0.733,232,0.79,233,1.03,234,1.152,235,1.152,236,0.719,237,0.761,238,0.667,239,0.719,240,0.719,241,0.775,242,0.747,243,0.79,244,0.719,245,0.79,246,0.706,247,0.761,248,0.79,249,0.004,250,0.004,277,1.334,384,3.393,426,1.132,529,5.093,535,2.54,536,3.847,539,3.659,540,3.972,573,1.603,574,1.393,575,1.564,576,1.603,585,2.075,655,0.934,656,1.425,657,1.944,709,1.644,941,2.927,970,2.46,1110,3.862,1133,2.54,1134,2.321,1135,4.173,1136,2.841,1137,3.046,1148,2.424,1162,4.443,1202,6.442,1316,4.144,1364,3.254,2362,4.844,2377,4.844,2380,4.844,2409,4.844,2410,3.32,2411,3.32,2463,3.32,2474,7.53,2475,2.841,2476,5.245,2477,4.443,2478,5.452,2479,5.452,2480,3.737,2481,3.737,2482,5.452,2483,3.32,2484,3.32,2485,3.737,2486,3.737,2487,3.046,2488,3.32,2489,3.737,2490,3.737,2491,3.737,2492,3.046,2493,3.046,2494,4.844,2495,4.844]],["title/classes/Random.html",[90,0.23,2496,3.542]],["body/classes/Random.html",[3,0.144,4,0.135,9,0.087,25,0.335,26,0.85,27,1.346,32,0.967,37,0.918,44,0.943,46,0.798,47,0.007,48,0.468,49,0.406,50,0.931,52,0.869,60,1.481,61,1.295,62,1.268,85,0.135,88,1.796,90,0.402,91,1.972,106,1.133,249,0.006,250,0.006,253,1.316,309,2.296,358,3.866,642,5.059,674,2.971,678,2.251,1040,3.386,2496,7.147,2497,5.233,2498,8.144,2499,8.144,2500,8.144,2501,7.433,2502,7.433,2503,8.554,2504,8.219,2505,8.144,2506,5.89,2507,8.144,2508,5.89,2509,7.433,2510,5.89,2511,5.89,2512,8.554,2513,8.554,2514,8.82,2515,5.89,2516,5.89,2517,5.89,2518,5.89,2519,5.89,2520,7.433,2521,6.604,2522,5.89,2523,5.89]],["title/components/RegisterPage.html",[0,0.17,198,0.897]],["body/components/RegisterPage.html",[0,0.198,1,0.543,2,0.864,3,0.069,4,0.064,5,0.596,6,0.607,7,0.596,8,0.596,9,0.041,15,0.503,16,1.723,17,1.721,18,0.543,19,0.897,21,0.864,23,0.864,25,0.161,26,0.504,27,1.295,29,2.792,32,0.573,37,0.44,44,0.856,46,0.597,47,0.007,48,0.605,49,0.315,50,0.871,52,0.717,53,1.225,60,0.986,61,0.862,62,1.868,63,2.325,64,2.337,65,3.43,66,3.781,71,0.446,73,0.23,74,0.907,77,0.771,81,0.466,83,0.746,85,0.064,90,0.139,91,1.295,103,1.381,104,1.381,106,0.848,110,0.854,111,0.985,113,2.583,114,2.468,115,0.596,116,0.931,117,1.063,118,0.494,119,1.624,120,0.596,121,1.146,122,0.533,123,0.574,124,0.553,125,0.596,126,0.543,127,0.596,128,0.553,129,0.574,130,0.596,131,0.553,132,0.596,133,0.553,134,0.596,135,0.543,136,0.574,137,0.596,138,0.553,139,0.596,140,0.574,141,0.543,142,0.949,143,0.661,144,0.931,145,0.543,146,0.931,147,0.533,148,1.693,149,0.543,150,0.494,151,0.596,152,0.543,153,1.044,154,0.543,155,0.543,156,0.553,157,0.596,158,0.543,159,0.596,160,0.563,161,0.513,162,1.063,163,0.553,164,0.596,165,0.553,166,1.063,167,0.596,168,0.553,169,0.596,170,0.553,171,0.553,172,0.596,173,0.553,174,0.596,175,0.553,176,0.596,177,0.543,178,0.574,179,0.553,180,0.674,181,0.596,182,0.543,183,0.596,184,0.543,185,1.382,186,0.596,187,0.553,188,1.146,189,0.553,190,0.931,191,0.596,192,0.553,193,0.596,194,0.553,195,0.596,196,0.543,197,0.563,198,1.18,199,0.596,200,0.543,201,0.585,202,1.158,203,0.543,204,0.553,205,0.553,206,0.596,207,0.543,208,1.354,209,0.533,210,0.596,211,0.543,212,0.563,213,0.543,214,0.543,215,0.596,216,0.553,217,0.596,218,0.931,219,0.553,220,0.596,221,0.553,222,0.596,223,0.596,224,0.553,225,0.596,226,0.533,227,0.714,228,0.543,229,0.553,230,0.596,231,0.553,232,0.596,233,0.832,234,0.931,235,0.931,236,0.543,237,0.574,238,0.503,239,0.543,240,0.543,241,1.125,242,0.563,243,0.596,244,0.543,245,0.596,246,0.533,247,0.574,248,0.596,249,0.003,250,0.003,258,2.298,273,0.871,282,1.051,288,0.889,299,1.751,303,0.968,305,1.18,370,0.945,384,3.082,392,2.516,393,2.424,395,1.466,426,0.854,476,2.857,478,6.467,479,2.82,481,3.785,509,2.63,510,2.911,563,3.01,625,1.679,655,1.762,658,2.379,659,1.751,660,3.054,662,1.709,664,1.889,666,1.988,668,2.285,669,2.021,670,2.337,671,2.188,672,1.971,673,2.291,674,2.223,675,1.679,678,1.642,680,1.937,681,1.889,687,1.307,742,1.209,746,1.466,747,1.343,748,3.969,750,2.042,751,1.422,756,1.381,776,2.583,791,2.737,818,1.683,854,1.917,858,5.055,859,4.818,860,3.914,861,3.914,862,3.914,863,3.914,865,2.365,868,2.505,870,2.143,871,2.505,872,2.505,873,2.02,878,2.143,879,2.298,882,1.751,884,3.349,885,1.828,886,1.621,887,1.751,888,1.466,889,4.572,890,1.917,891,2.857,892,1.917,893,1.621,894,2.63,895,5.445,896,2.63,897,1.828,898,1.683,899,1.828,900,1.917,901,1.917,902,2.02,903,4.167,904,1.917,905,4.521,906,4.167,907,1.917,908,1.917,909,1.917,910,1.917,911,1.917,912,1.917,913,1.917,914,1.917,937,1.565,958,1.006,1002,3.556,1071,3.591,1091,3.591,1132,1.751,1239,3.349,1240,2.158,1364,1.683,1472,2.298,1473,3.349,1476,2.298,1607,3.591,1834,3.118,2116,3.914,2119,3.914,2132,2.505,2136,2.737,2137,2.505,2139,3.914,2141,6.263,2146,3.914,2147,3.914,2148,3.914,2524,2.298,2525,5.423,2526,4.406,2527,6.771,2528,5.423,2529,4.818,2530,6.13,2531,6.13,2532,2.82,2533,2.82,2534,2.82,2535,2.82,2536,2.82,2537,2.82,2538,4.419,2539,6.13,2540,2.82,2541,2.82,2542,2.82,2543,5.423,2544,2.82,2545,2.82,2546,2.505,2547,2.505,2548,4.406,2549,5.423,2550,2.82,2551,2.82,2552,2.82,2553,4.406,2554,2.82,2555,4.406,2556,2.82,2557,2.82,2558,2.82,2559,2.82,2560,6.13,2561,2.82,2562,2.82,2563,4.406,2564,3.591,2565,4.406,2566,4.406,2567,4.406]],["title/interfaces/RequestOptions.html",[86,0.816,335,3.542]],["body/interfaces/RequestOptions.html",[3,0.12,4,0.112,9,0.109,18,1.266,25,0.278,26,0.752,47,0.007,49,0.442,50,1.08,60,1.196,71,0.278,85,0.112,86,1.454,88,0.922,106,1.646,150,1.151,249,0.005,250,0.005,251,1.636,253,1.091,270,4.138,273,2.701,288,2.072,296,3.762,303,1.56,306,3.562,309,1.904,323,3.318,325,5.843,326,5.843,328,4.967,330,5.843,334,4.417,335,4.998,338,5.843,340,7.601,343,5.843,358,3.42,363,3.711,373,6.485,374,8.003,375,7.601,433,4.47,494,4.998,497,4.749,512,4.413,667,3.319,782,2.82,830,5.359,1003,4.998,1029,4.998,1329,4.71,1503,6.485,1607,5.359,1750,7.245,1968,4.265,2568,4.338,2569,4.338,2570,8.891,2571,6.973,2572,8.556,2573,7.957,2574,6.577,2575,4.71,2576,7.957,2577,7.957,2578,5.843,2579,7.957,2580,6.577,2581,6.577,2582,6.048,2583,6.577,2584,6.577,2585,7.437,2586,8.744,2587,6.577,2588,4.998,2589,6.577,2590,6.577,2591,6.577,2592,6.577,2593,6.577,2594,7.957,2595,4.998,2596,4.882]],["title/components/RestoreAccountPage.html",[0,0.17,200,0.897]],["body/components/RestoreAccountPage.html",[0,0.231,1,0.696,2,1.043,3,0.089,4,0.083,5,0.764,6,0.778,7,0.764,8,0.764,9,0.053,15,0.645,16,1.745,17,1.742,18,0.696,19,1.083,21,1.043,23,1.043,25,0.206,29,2.655,32,0.692,37,0.564,44,0.675,46,0.49,47,0.007,48,0.589,49,0.172,50,0.413,52,0.622,53,1.063,71,0.359,73,0.295,77,0.932,81,0.598,85,0.083,90,0.178,91,0.764,110,1.095,111,1.263,113,2.668,114,2.595,115,0.764,116,1.124,117,1.238,118,0.633,119,1.664,120,0.764,121,1.334,122,0.683,123,0.736,124,0.709,125,0.764,126,0.696,127,0.764,128,0.709,129,0.736,130,0.764,131,0.709,132,0.764,133,0.709,134,0.764,135,0.696,136,0.736,137,0.764,138,0.709,139,0.764,140,0.736,141,0.696,142,1.105,143,0.798,144,1.124,145,0.696,146,1.124,147,0.683,148,1.805,149,0.696,150,0.633,151,0.764,152,0.696,153,1.215,154,0.696,155,0.696,156,0.709,157,0.764,158,0.696,159,0.764,160,0.722,161,0.658,162,1.238,163,0.709,164,0.764,165,0.709,166,1.043,167,0.764,168,0.709,169,0.764,170,0.709,171,0.709,172,0.764,173,0.709,174,0.764,175,0.709,176,0.764,177,0.696,178,0.736,179,0.709,180,0.814,181,0.764,182,0.696,183,0.764,184,0.696,185,1.522,186,0.764,187,0.709,188,1.334,189,0.709,190,1.124,191,0.764,192,0.709,193,0.764,194,0.709,195,0.764,196,0.696,197,0.722,198,0.696,199,0.764,200,1.34,201,1.9,202,1.614,203,0.696,204,0.709,205,0.709,206,0.764,207,0.696,208,1.511,209,0.683,210,0.764,211,0.696,212,0.722,213,0.696,214,0.696,215,0.764,216,0.709,217,0.764,218,1.124,219,0.709,220,0.764,221,0.709,222,0.764,223,0.764,224,0.709,225,0.764,226,0.683,227,0.863,228,0.696,229,0.709,230,0.764,231,0.709,232,0.764,233,1.005,234,1.124,235,1.124,236,0.696,237,0.736,238,1.127,239,0.696,240,0.696,241,0.75,242,0.722,243,0.764,244,0.696,245,0.764,246,0.683,247,0.736,248,0.764,249,0.004,250,0.004,370,1.211,384,3.358,392,2.77,393,2.305,395,1.88,408,2.466,426,1.095,474,5.292,477,5.292,481,4.167,655,1.855,658,2.495,659,2.246,660,3.277,662,2.339,663,2.34,664,2.282,666,2.401,668,2.353,669,2.353,670,2.654,671,2.485,672,2.239,673,1.88,674,1.824,675,2.406,678,1.912,680,1.59,681,1.55,742,1.55,748,4.429,751,1.824,756,1.771,770,1.824,776,1.722,778,2.345,818,2.158,854,2.458,885,2.345,886,2.079,887,2.246,888,1.88,889,5.033,890,2.458,891,3.45,892,2.458,893,2.079,894,3.176,895,5.809,896,3.176,897,2.345,898,2.158,899,2.345,900,2.458,901,2.458,903,4.733,904,2.458,905,5.044,906,4.733,907,2.458,908,2.458,909,2.458,910,2.458,911,2.458,912,2.458,913,2.458,914,2.458,1039,2.748,1226,2.748,1227,5.145,1228,4.336,1229,3.212,1232,3.212,1235,3.811,1238,3.617,2110,2.748,2597,6.186,2598,3.616,2599,2.946,2600,3.616,2601,5.321,2602,4.336,2603,4.727,2604,4.336,2605,3.212]],["title/injectables/RouterExtensionsService.html",[43,3.022,317,1.628]],["body/injectables/RouterExtensionsService.html",[3,0.169,4,0.157,9,0.101,25,0.392,27,1.138,37,1.074,43,5.304,44,0.874,46,0.933,47,0.007,48,0.547,49,0.327,50,0.787,71,0.466,73,0.562,85,0.157,90,0.339,106,1.325,249,0.006,250,0.006,317,2.857,319,3.474,368,3.474,369,3.279,370,2.307,384,3.912,426,2.085,1027,4.254,1750,5.611,1918,6.217,2107,6.117,2606,7.752,2607,6.117,2608,8.726,2609,6.886,2610,6.886,2611,6.886,2612,6.886,2613,6.886,2614,8.179,2615,6.886]],["title/components/SchedulePage.html",[0,0.17,203,0.897]],["body/components/SchedulePage.html",[0,0.219,1,0.639,2,0.979,3,0.081,4,0.076,5,0.701,6,0.714,7,0.701,8,0.701,9,0.049,13,1.372,14,2.188,15,0.592,16,1.738,17,1.734,18,0.639,19,1.016,21,0.979,23,0.979,25,0.189,26,0.571,27,1.477,32,0.649,36,2.188,37,0.517,44,0.858,46,0.45,47,0.007,48,0.568,49,0.34,50,0.379,52,0.388,53,0.663,60,1.091,61,0.954,68,2.044,71,0.468,73,0.271,77,0.874,81,0.549,83,0.878,85,0.076,88,1.133,90,0.164,93,1.372,110,1.817,111,1.744,112,2.518,113,2.338,114,2.589,115,0.701,116,1.055,117,1.177,118,0.581,119,1.865,120,0.701,121,1.268,122,0.627,123,0.675,124,0.651,125,0.701,126,0.639,127,0.701,128,0.651,129,0.675,130,0.701,131,0.651,132,0.701,133,0.651,134,0.701,135,0.639,136,0.675,137,0.701,138,0.651,139,0.701,140,0.675,141,0.639,142,1.051,143,1.127,144,1.055,145,0.639,146,1.055,147,0.627,148,1.768,149,0.639,150,0.581,151,0.701,152,0.639,153,1.155,154,0.639,155,0.639,156,0.651,157,0.701,158,0.639,159,0.701,160,0.663,161,0.603,162,1.177,163,0.651,164,0.701,165,0.651,166,0.979,167,0.701,168,0.651,169,0.701,170,0.651,171,1.404,172,0.701,173,0.651,174,0.701,175,0.651,176,0.701,177,0.639,178,0.675,179,0.651,180,0.763,181,0.701,182,0.639,183,0.701,184,0.639,185,0.651,186,0.701,187,0.651,188,1.268,189,0.651,190,1.055,191,0.701,192,0.651,193,0.701,194,0.651,195,0.701,196,0.639,197,0.663,198,0.639,199,0.701,200,0.639,201,0.688,202,0.943,203,1.285,204,1.574,205,0.651,206,0.701,207,0.639,208,1.457,209,0.627,210,0.701,211,0.639,212,0.663,213,0.639,214,0.639,215,0.701,216,0.651,217,0.701,218,1.055,219,0.651,220,0.701,221,0.651,222,0.701,223,0.701,224,0.651,225,0.701,226,0.627,227,0.973,228,0.639,229,0.651,230,0.701,231,0.651,232,0.701,233,0.943,234,1.055,235,1.055,236,0.639,237,0.675,238,1.071,239,0.639,240,0.639,241,0.688,242,0.663,243,0.701,244,0.639,245,0.701,246,0.627,247,0.675,248,0.701,249,0.004,250,0.004,255,1.992,277,1.184,306,2.863,392,2.382,393,2.671,394,3.23,426,1.005,512,1.626,536,3.507,537,3.706,540,3.507,546,5.44,570,1.782,572,2.522,574,2.237,654,3.794,655,2.007,656,1.265,657,1.726,658,2.524,660,3.13,661,1.459,662,1.046,663,1.459,664,1.423,666,1.497,667,4.079,668,1.861,669,1.861,670,2.544,671,1.781,672,1.605,678,2.168,680,3.307,688,1.423,693,2.34,722,2.256,723,3.237,741,1.842,744,3.776,745,3.616,756,1.626,761,3.706,762,3.706,763,2.948,764,2.948,770,2.518,796,3.237,818,1.981,834,3.727,845,2.979,865,3.222,887,2.061,894,2.979,1027,2.596,1610,3.237,1938,3.891,1949,2.152,1990,2.522,2257,2.256,2258,2.948,2261,2.704,2284,6.543,2291,2.948,2424,2.948,2616,2.948,2617,6.001,2618,4.992,2619,6.676,2620,6.676,2621,6.676,2622,3.318,2623,3.318,2624,3.318,2625,4.992,2626,3.318,2627,4.992,2628,3.318,2629,3.318,2630,3.318,2631,3.318,2632,3.318,2633,3.318,2634,2.948,2635,3.318,2636,4.992,2637,3.318,2638,3.318,2639,3.318,2640,3.794,2641,3.318,2642,5.931,2643,3.318,2644,5.331,2645,6.001,2646,2.948,2647,3.318,2648,3.318,2649,3.318,2650,2.948,2651,3.318,2652,3.318,2653,3.318]],["title/components/SelectComponent.html",[0,0.17,205,0.914]],["body/components/SelectComponent.html",[0,0.212,1,0.602,2,0.936,3,0.077,4,0.071,5,0.661,6,0.673,7,0.661,8,0.661,9,0.046,13,1.312,14,2.111,15,0.558,16,1.733,17,1.729,18,0.602,19,0.972,21,0.936,23,0.936,25,0.178,26,0.546,27,0.789,29,1.98,32,0.621,36,2.362,44,0.978,46,0.878,47,0.007,48,0.626,49,0.408,50,0.942,52,0.963,53,1.698,57,1.533,60,1.434,61,1.407,62,1.697,64,1.193,68,1.653,71,0.369,73,0.255,77,0.836,81,0.517,83,0.828,85,0.071,90,0.154,91,1.771,93,1.312,106,0.919,115,0.661,116,1.009,117,1.368,118,0.836,119,1.343,120,0.661,121,1.223,122,0.591,123,0.637,124,0.613,125,0.661,126,0.602,127,0.661,128,0.613,129,0.637,130,0.661,131,0.613,132,0.661,133,0.613,134,0.661,135,0.602,136,0.637,137,0.661,138,0.613,139,0.661,140,1.8,141,0.602,142,1.014,143,0.716,144,1.009,145,0.602,146,1.009,147,0.591,148,1.741,149,0.602,150,0.548,151,0.661,152,0.602,153,1.114,154,0.602,155,0.602,156,0.613,157,0.661,158,0.602,159,0.661,160,0.625,161,0.569,162,1.135,163,0.613,164,0.661,165,0.613,166,1.27,167,0.661,168,0.613,169,0.661,170,0.613,171,0.613,172,0.661,173,0.613,174,0.661,175,0.613,176,0.661,177,0.602,178,0.637,179,0.613,180,0.73,181,0.661,182,0.602,183,0.661,184,0.602,185,0.613,186,0.661,187,0.613,188,1.223,189,0.613,190,1.009,191,0.661,192,0.613,193,0.661,194,0.936,195,0.661,196,0.602,197,0.625,198,0.602,199,0.661,200,0.602,201,0.649,202,0.902,203,0.602,204,0.613,205,1.27,206,0.661,207,0.602,208,1.42,209,0.591,210,0.661,211,0.602,212,0.625,213,0.602,214,0.602,215,0.661,216,0.613,217,0.661,218,1.009,219,0.613,220,0.661,221,0.613,222,0.661,223,0.661,224,0.613,225,0.661,226,0.591,227,0.774,228,0.602,229,0.613,230,0.661,231,0.613,232,0.661,233,0.902,234,1.474,235,1.009,236,0.602,237,0.637,238,0.558,239,0.602,240,0.602,241,0.649,242,0.625,243,0.661,244,0.602,245,0.661,246,0.591,247,0.637,248,0.661,249,0.004,250,0.004,253,1.447,272,1.68,273,2.155,279,3.002,282,2.415,288,1.505,296,2.1,303,0.852,321,1.006,323,2.921,334,3.596,356,3.108,360,1.68,533,3.108,625,1.82,629,2.339,679,1.578,706,1.862,709,2.849,779,1.578,782,1.342,806,2.029,826,1.49,916,2.409,920,2.85,921,2.85,922,3.725,923,4.163,924,3.455,925,3.455,926,2.85,927,2.85,928,2.85,929,2.85,931,2.85,933,5.28,934,1.943,935,2.745,936,1.867,937,2.65,938,1.867,939,1.867,940,1.799,941,1.68,942,1.737,943,1.943,944,4.425,945,2.65,946,1.737,947,1.943,948,1.799,949,1.737,950,1.943,951,4.163,952,1.867,953,1.737,954,1.799,955,1.799,956,1.867,957,1.867,958,1.117,959,2.85,960,1.867,961,1.943,962,2.85,963,2.274,964,4.388,965,1.867,966,3.214,967,1.799,968,3.329,969,2.85,970,2.154,971,3.866,972,1.737,973,1.867,974,2.85,975,1.867,976,1.943,977,1.867,978,1.867,979,1.943,980,2.85,981,1.867,982,1.867,983,2.029,984,1.943,985,1.943,986,1.943,987,1.943,988,1.943,989,1.867,990,4.245,991,1.943,992,2.85,993,2.55,994,2.378,995,1.943,996,2.029,997,1.943,1027,2.483,1309,3.42,1534,4.4,1592,4.4,1594,4.924,1869,3.891,1958,5.302,2429,2.78,2654,2.78,2655,5.79,2656,4.775,2657,5.79,2658,5.79,2659,8.08,2660,6.478,2661,3.129,2662,3.129,2663,3.129,2664,3.129,2665,3.129,2666,3.129,2667,5.79,2668,4.775,2669,3.129,2670,3.129,2671,3.129,2672,3.129,2673,3.129,2674,3.129,2675,3.129,2676,3.129,2677,3.129,2678,3.129,2679,3.129,2680,3.129,2681,3.129,2682,3.129,2683,3.129,2684,3.129,2685,3.129,2686,3.129,2687,4.775,2688,3.129,2689,4.775,2690,3.129,2691,3.129,2692,3.129,2693,3.129,2694,3.129,2695,3.129,2696,3.129,2697,4.775,2698,4.775]],["title/injectables/SessionsService.html",[317,1.628,2699,3.542]],["body/injectables/SessionsService.html",[3,0.163,4,0.152,9,0.098,25,0.379,27,1.534,32,1.042,37,1.038,44,0.919,46,1.086,47,0.007,48,0.636,49,0.38,50,0.916,52,0.937,68,2.456,71,0.508,73,0.543,83,1.76,85,0.152,88,1.624,90,0.328,106,1.542,150,1.403,180,1.365,249,0.006,250,0.006,317,2.8,318,4.68,319,3.357,368,3.357,369,3.169,370,2.229,489,3.972,508,4.523,769,2.056,2699,6.091,2700,5.912,2701,6.655,2702,7.12,2703,6.655,2704,6.655,2705,4.766,2706,6.655,2707,6.655,2708,6.655]],["title/components/SettingsAccountPage.html",[0,0.17,207,0.897]],["body/components/SettingsAccountPage.html",[0,0.234,1,0.712,2,1.061,3,0.091,4,0.085,5,0.782,6,0.796,7,0.782,8,0.782,9,0.054,13,1.487,14,2.333,15,0.66,16,1.747,17,1.744,18,0.712,19,1.101,21,1.061,23,1.061,25,0.211,26,0.619,27,1.058,29,2.189,32,0.704,36,2.567,37,0.577,44,0.836,46,0.501,47,0.007,48,0.642,49,0.176,50,0.423,52,0.823,53,1.406,60,0.673,61,0.588,62,1.849,63,2.744,64,2.063,65,3.373,66,3.718,71,0.427,73,0.302,74,1.19,77,0.947,81,0.612,85,0.085,90,0.182,91,0.782,103,1.812,104,1.812,105,2.054,106,0.712,113,1.576,114,1.705,115,0.782,116,1.143,117,1.255,118,0.648,119,1.46,120,0.782,121,1.352,122,0.699,123,0.753,124,0.725,125,0.782,126,0.712,127,0.782,128,0.725,129,0.753,130,0.782,131,0.725,132,0.782,133,0.725,134,0.782,135,0.712,136,1.645,137,0.782,138,0.725,139,0.782,140,0.753,141,0.712,142,1.12,143,0.811,144,1.143,145,0.712,146,1.143,147,0.699,148,1.815,149,0.712,150,1.415,151,0.782,152,0.712,153,1.231,154,0.712,155,0.712,156,0.725,157,0.782,158,0.712,159,0.782,160,0.739,161,0.673,162,1.255,163,0.725,164,0.782,165,0.725,166,1.061,167,0.782,168,0.725,169,0.782,170,0.725,171,0.725,172,0.782,173,0.725,174,0.782,175,0.725,176,0.782,177,0.712,178,0.753,179,0.725,180,0.827,181,0.782,182,0.712,183,0.782,184,0.712,185,0.725,186,0.782,187,0.725,188,1.352,189,0.725,190,1.143,191,0.782,192,0.725,193,0.782,194,0.725,195,0.782,196,0.712,197,1.278,198,0.712,199,0.782,200,0.712,201,0.767,202,1.736,203,0.712,204,0.725,205,0.725,206,0.782,207,1.355,208,1.793,209,0.699,210,0.782,211,0.712,212,0.739,213,0.712,214,0.712,215,0.782,216,0.725,217,0.782,218,1.143,219,0.725,220,0.782,221,0.725,222,0.782,223,0.782,224,0.725,225,0.782,226,0.699,227,0.877,228,0.712,229,0.725,230,0.782,231,0.725,232,0.782,233,1.022,234,1.143,235,1.143,236,0.712,237,0.753,238,1.142,239,0.712,240,0.712,241,0.767,242,0.739,243,0.782,244,0.712,245,0.782,246,0.699,247,0.753,248,0.782,249,0.004,250,0.004,277,1.32,370,1.239,479,4.07,481,4.34,487,5.737,509,3.23,510,2.905,655,1.352,656,1.41,657,1.924,658,1.607,662,1.166,671,1.32,672,1.19,675,1.41,776,1.762,778,2.399,794,5.351,869,2.65,970,2.442,1226,2.812,1227,5.214,1228,4.41,1231,3.287,1235,3.876,1238,3.678,1240,1.812,1632,5.494,1718,2.812,1721,4.808,2006,4.808,2110,2.812,2117,5.319,2126,3.015,2595,4.113,2599,4.41,2602,5.214,2603,6.255,2604,4.41,2709,6.143,2710,7.04,2711,3.7,2712,3.7,2713,3.7,2714,3.7,2715,3.7,2716,3.7,2717,3.7,2718,3.7,2719,3.7,2720,3.7,2721,3.7,2722,3.7,2723,3.7,2724,3.7,2725,6.399,2726,3.7,2727,3.7,2728,3.7,2729,3.7,2730,3.7,2731,3.7,2732,3.7,2733,3.7,2734,5.412,2735,3.7,2736,3.7,2737,3.7,2738,3.7,2739,3.7,2740,3.7,2741,3.7,2742,3.7,2743,3.7,2744,3.7,2745,4.808,2746,4.808,2747,4.808,2748,5.412,2749,5.412,2750,5.412,2751,5.412,2752,4.808,2753,4.41,2754,5.412,2755,5.412,2756,5.412,2757,3.7]],["title/components/SettingsIntegrationsPage.html",[0,0.17,209,0.88]],["body/components/SettingsIntegrationsPage.html",[0,0.246,1,0.78,2,1.133,3,0.099,4,0.093,5,0.856,6,0.872,7,0.856,8,0.856,9,0.06,13,1.588,14,2.456,15,0.723,16,1.754,17,1.751,18,0.78,19,1.176,21,1.133,23,1.133,25,0.231,26,0.661,27,1.481,32,0.752,36,2.678,37,0.632,44,0.863,46,0.913,47,0.007,48,0.66,49,0.348,50,0.77,52,0.858,53,1.551,68,2.305,71,0.418,73,0.331,77,1.012,81,0.67,83,1.072,85,0.093,86,0.709,90,0.2,106,1.296,111,1.415,115,0.856,116,1.221,117,1.321,118,0.709,119,1.523,120,0.856,121,1.423,122,0.765,123,0.825,124,0.794,125,0.856,126,0.78,127,0.856,128,0.794,129,0.825,130,0.856,131,0.794,132,0.856,133,0.794,134,0.856,135,0.78,136,0.825,137,0.856,138,0.794,139,0.856,140,0.825,141,0.78,142,1.179,143,0.866,144,1.221,145,0.78,146,1.221,147,0.765,148,1.853,149,0.78,150,0.709,151,0.856,152,0.78,153,1.296,154,0.78,155,0.78,156,0.794,157,0.856,158,0.78,159,0.856,160,0.809,161,0.737,162,1.321,163,0.794,164,0.856,165,0.794,166,1.133,167,0.856,168,0.794,169,0.856,170,0.794,171,0.794,172,0.856,173,0.794,174,0.856,175,0.794,176,0.856,177,0.78,178,0.825,179,0.794,180,1.03,181,0.856,182,0.78,183,0.856,184,0.78,185,0.794,186,0.856,187,0.794,188,1.423,189,0.794,190,1.221,191,0.856,192,0.794,193,0.856,194,0.794,195,0.856,196,0.78,197,0.809,198,0.78,199,0.856,200,0.78,201,0.84,202,1.525,203,0.78,204,0.794,205,0.794,206,0.856,207,0.78,208,1.824,209,1.387,210,0.856,211,0.78,212,0.809,213,0.78,214,0.78,215,0.856,216,0.794,217,0.856,218,1.221,219,0.794,220,0.856,221,0.794,222,0.856,223,0.856,224,0.794,225,0.856,226,0.765,227,0.937,228,0.78,229,0.794,230,0.856,231,0.794,232,0.856,233,1.091,234,1.221,235,1.221,236,0.78,237,0.825,238,0.723,239,0.78,240,0.78,241,0.84,242,0.809,243,0.856,244,0.78,245,0.856,246,0.765,247,0.825,248,0.856,249,0.004,250,0.004,370,1.357,655,1.013,656,1.544,662,1.277,663,1.782,709,1.782,1180,4.334,1207,2.517,1240,1.985,1619,4.884,1631,3.08,1632,5.647,1633,5.951,1634,3.302,1635,5.134,1636,2.517,1637,2.517,1638,2.628,1639,2.628,1640,5.582,1641,5.134,1642,5.985,1643,5.985,1644,3.6,1645,6.525,1646,3.6,1647,3.6,1648,3.302,1649,3.302,1650,3.6,1651,5.134,1652,3.6,1653,3.6,1654,3.08,1655,5.134,1656,3.302,1657,3.302,1658,3.6,1659,3.6,1660,3.6,2035,5.134,2054,3.6,2758,5.779,2759,5.779,2760,4.052,2761,4.052,2762,4.052,2763,4.052]],["title/components/SettingsLocalizationPage.html",[0,0.17,211,0.897]],["body/components/SettingsLocalizationPage.html",[0,0.241,1,0.752,2,1.104,3,0.096,4,0.089,5,0.825,6,0.841,7,0.825,8,0.825,9,0.057,13,1.547,14,2.406,15,0.697,16,1.751,17,1.748,18,0.752,19,1.146,21,1.104,23,1.104,25,0.222,26,0.644,27,1.091,29,2.257,32,0.732,36,2.633,37,1.029,44,0.852,47,0.007,48,0.735,49,0.185,52,0.771,53,1.318,60,1.024,61,0.895,62,1.554,63,2.83,65,2.633,66,2.902,71,0.376,73,0.319,74,1.256,77,0.986,81,0.646,85,0.089,90,0.193,113,1.639,114,1.774,115,0.825,116,1.189,117,1.294,118,0.684,119,1.498,120,0.825,121,1.394,122,0.738,123,0.795,124,0.766,125,0.825,126,0.752,127,0.825,128,0.766,129,0.795,130,0.825,131,0.766,132,0.825,133,0.766,134,0.825,135,0.752,136,0.795,137,0.825,138,0.766,139,0.825,140,0.795,141,0.752,142,1.155,143,0.844,144,1.189,145,0.752,146,1.189,147,0.738,148,1.838,149,0.752,150,0.684,151,0.825,152,0.752,153,1.27,154,0.752,155,0.752,156,0.766,157,0.825,158,0.752,159,0.825,160,0.78,161,0.71,162,1.294,163,0.766,164,0.825,165,0.766,166,1.104,167,0.825,168,0.766,169,0.825,170,0.766,171,0.766,172,0.825,173,0.766,174,0.825,175,0.766,176,0.825,177,0.752,178,0.795,179,0.766,180,0.861,181,0.825,182,0.752,183,0.825,184,0.752,185,0.766,186,0.825,187,0.766,188,1.394,189,0.766,190,1.189,191,0.825,192,0.766,193,0.825,194,0.766,195,0.825,196,0.752,197,0.78,198,0.752,199,0.825,200,0.752,201,0.81,202,1.063,203,0.752,204,0.766,205,0.766,206,0.825,207,0.752,208,1.842,209,0.738,210,0.825,211,1.39,212,1.529,213,0.752,214,0.752,215,0.825,216,0.766,217,0.825,218,1.189,219,0.766,220,0.825,221,0.766,222,0.825,223,0.825,224,0.766,225,0.825,226,0.738,227,0.913,228,0.752,229,0.766,230,0.825,231,0.766,232,0.825,233,1.063,234,1.189,235,1.189,236,0.752,237,0.795,238,1.178,239,0.752,240,0.752,241,0.81,242,0.78,243,0.825,244,0.752,245,0.825,246,0.738,247,0.795,248,0.825,249,0.004,250,0.004,277,1.394,655,1.407,656,1.489,658,1.671,662,1.231,663,1.718,671,1.394,672,1.256,675,1.489,776,1.86,778,2.533,794,5.489,869,2.797,1163,3.65,1632,5.586,2422,6.879,2764,6.246,2765,3.47,2766,6.599,2767,5.629,2768,5.863,2769,7.222,2770,3.906,2771,3.906,2772,3.906,2773,3.906,2774,5.001,2775,3.906,2776,6.416,2777,5.629,2778,6.416,2779,5.001,2780,6.416,2781,5.629,2782,6.416,2783,5.629,2784,5.629,2785,6.416,2786,5.629,2787,5.629,2788,5.001,2789,4.278,2790,3.906,2791,3.906,2792,3.906,2793,5.629]],["title/modules/SettingsModule.html",[396,1.817,2794,3.542]],["body/modules/SettingsModule.html",[3,0.147,4,0.137,9,0.088,47,0.007,71,0.543,73,0.488,74,1.925,85,0.137,90,0.295,173,1.773,179,1.773,207,1.74,209,1.708,211,1.74,213,1.74,214,1.74,249,0.006,250,0.006,398,2.445,399,4.032,405,5.397,406,4.482,407,3.113,408,2.774,410,4.482,411,3.576,413,3.679,459,4.664,460,3.718,461,5.104,468,4.287,1182,5.318,1633,4.287,2030,4.878,2094,4.878,2709,4.55,2764,4.55,2794,7.425,2795,5.318,2796,5.318,2797,5.318,2798,6.477,2799,5.986,2800,5.986,2801,5.986,2802,5.986,2803,5.986,2804,5.986,2805,7.644,2806,5.318,2807,5.318,2808,4.55,2809,5.318,2810,5.986]],["title/components/SettingsPage.html",[0,0.17,213,0.897]],["body/components/SettingsPage.html",[0,0.247,1,0.784,2,1.137,3,0.1,4,0.093,5,0.86,6,0.877,7,0.86,8,0.86,9,0.06,13,1.594,14,2.463,15,0.727,16,1.754,17,1.752,18,0.784,19,1.181,21,1.137,23,1.137,25,0.232,26,0.663,32,0.754,36,2.684,37,1.053,44,0.864,47,0.007,48,0.585,52,0.476,53,0.814,60,1.339,61,1.171,71,0.385,73,0.332,77,1.016,81,0.673,85,0.093,90,0.201,110,2.046,111,1.423,112,2.926,113,2.143,114,1.828,115,0.86,116,1.225,117,1.324,118,0.713,119,1.82,120,0.86,121,1.427,122,0.769,123,0.829,124,0.799,125,0.86,126,0.784,127,0.86,128,0.799,129,0.829,130,0.86,131,0.799,132,0.86,133,0.799,134,0.86,135,0.784,136,0.829,137,0.86,138,0.799,139,0.86,140,0.829,141,0.784,142,1.183,143,0.87,144,1.225,145,0.784,146,1.225,147,0.769,148,1.855,149,0.784,150,0.713,151,0.86,152,0.784,153,1.3,154,0.784,155,0.784,156,0.799,157,0.86,158,0.784,159,0.86,160,0.814,161,0.741,162,1.324,163,0.799,164,0.86,165,0.799,166,1.137,167,0.86,168,0.799,169,0.86,170,0.799,171,0.799,172,0.86,173,0.799,174,0.86,175,0.799,176,0.86,177,0.784,178,0.829,179,0.799,180,0.887,181,0.86,182,0.784,183,0.86,184,0.784,185,0.799,186,0.86,187,0.799,188,1.427,189,0.799,190,1.225,191,0.86,192,0.799,193,0.86,194,0.799,195,0.86,196,0.784,197,0.814,198,0.784,199,0.86,200,0.784,201,0.845,202,1.39,203,0.784,204,0.799,205,0.799,206,0.86,207,0.784,208,1.694,209,0.769,210,0.86,211,0.784,212,1.35,213,1.417,214,0.784,215,0.86,216,0.799,217,1.225,218,1.225,219,0.799,220,0.86,221,0.799,222,0.86,223,0.86,224,0.799,225,0.86,226,0.769,227,0.94,228,0.784,229,0.799,230,0.86,231,0.799,232,0.86,233,1.095,234,1.225,235,1.225,236,0.784,237,0.829,238,1.205,239,0.784,240,0.784,241,0.845,242,0.814,243,0.86,244,0.784,245,0.86,246,0.769,247,0.829,248,0.86,249,0.004,250,0.004,306,1.747,392,2.627,393,2.57,394,2.617,395,2.118,408,1.887,512,1.995,573,1.747,574,1.518,575,1.704,576,1.747,655,1.45,658,1.722,660,2.261,661,1.791,662,1.828,663,1.791,668,1.518,669,1.518,670,2.211,671,1.453,672,2.172,675,1.552,679,2.055,687,1.887,741,2.261,742,2.487,743,2.187,744,3.322,745,3.411,746,2.118,747,1.94,750,1.887,754,3.095,755,2.53,761,2.261,762,2.261,770,2.055,772,2.187,796,2.641,822,3.618,826,1.94,833,2.53,845,3.462,1610,3.761,1640,4.408,1945,3.319,1982,3.095,2811,3.618,2812,6.755,2813,5.8,2814,8.087,2815,8.087,2816,8.087,2817,7.184,2818,5.8,2819,4.073,2820,4.073,2821,4.073,2822,4.073,2823,4.727,2824,4.073,2825,4.073,2826,4.073,2827,4.073]],["title/modules/SettingsRoutingModule.html",[396,1.817,2798,3.337]],["body/modules/SettingsRoutingModule.html",[0,0.332,3,0.16,4,0.149,9,0.096,47,0.007,71,0.532,73,0.531,85,0.149,90,0.321,93,1.789,180,0.995,202,1.229,207,1.522,209,1.493,211,1.522,212,1.3,213,1.522,214,1.522,249,0.006,250,0.006,396,2.538,398,2.659,411,3.1,413,3.874,424,4.72,425,4.874,426,1.971,433,6.171,439,5.305,442,6.01,452,4.043,468,4.662,480,4.425,1633,4.662,1640,4.947,2709,4.947,2764,4.947,2798,5.664,2805,7.871,2806,5.783,2807,5.783,2808,4.947,2809,5.783,2823,5.305,2828,6.509,2829,6.509]],["title/components/SettingsSessionsPage.html",[0,0.17,214,0.897]],["body/components/SettingsSessionsPage.html",[0,0.229,1,0.689,2,1.036,3,0.088,4,0.082,5,0.756,6,0.771,7,0.756,8,0.756,9,0.053,13,1.451,14,2.289,15,0.639,16,1.745,17,1.741,18,0.689,19,1.075,21,1.036,23,1.036,25,0.204,26,0.604,27,1.038,32,0.687,36,2.527,37,0.558,44,0.827,46,0.939,47,0.007,48,0.652,49,0.389,50,0.792,52,0.81,53,1.055,62,0.771,68,1.793,71,0.44,73,0.292,77,0.925,81,0.592,83,0.947,85,0.082,88,1.461,90,0.177,106,1.488,110,1.6,111,1.251,113,1.042,114,1.128,115,0.756,116,1.116,117,1.231,118,0.627,119,1.659,120,0.756,121,1.326,122,0.676,123,0.729,124,0.702,125,0.756,126,0.689,127,0.756,128,0.702,129,0.729,130,0.756,131,0.702,132,0.756,133,0.702,134,0.756,135,0.689,136,0.729,137,0.756,138,0.702,139,0.756,140,0.729,141,0.689,142,1.099,143,0.792,144,1.116,145,0.689,146,1.116,147,0.676,148,1.801,149,0.689,150,0.627,151,0.756,152,0.689,153,1.208,154,0.689,155,0.689,156,0.702,157,0.756,158,0.689,159,0.756,160,0.715,161,0.651,162,1.231,163,0.702,164,0.756,165,0.702,166,1.036,167,0.756,168,0.702,169,0.756,170,0.702,171,1.036,172,0.756,173,0.702,174,0.756,175,0.702,176,0.756,177,0.689,178,0.729,179,0.702,180,0.96,181,0.756,182,0.689,183,0.756,184,0.689,185,0.702,186,0.756,187,0.702,188,1.326,189,0.702,190,1.116,191,0.756,192,0.702,193,0.756,194,0.702,195,0.756,196,0.689,197,0.715,198,0.689,199,0.756,200,0.689,201,0.742,202,0.998,203,0.689,204,0.702,205,0.702,206,0.756,207,0.689,208,1.781,209,0.676,210,0.756,211,0.689,212,0.715,213,0.689,214,1.334,215,0.756,216,0.702,217,0.756,218,1.116,219,0.702,220,0.756,221,0.702,222,0.756,223,0.756,224,0.702,225,0.756,226,0.676,227,0.857,228,0.689,229,0.702,230,0.756,231,0.702,232,0.756,233,0.998,234,1.116,235,1.116,236,0.689,237,0.729,238,0.639,239,0.689,240,0.689,241,0.742,242,0.715,243,0.756,244,0.689,245,0.756,246,0.676,247,0.729,248,0.756,249,0.004,250,0.004,253,0.8,303,1.38,370,1.199,392,1.278,393,2.058,394,1.616,408,2.448,574,1.335,655,1.933,656,2.393,658,2.296,661,2.323,662,1.978,663,1.574,664,1.535,666,1.616,668,1.335,669,1.335,670,1.365,671,1.278,672,1.151,673,1.862,674,1.806,675,1.365,678,1.901,685,2.058,693,1.396,704,4.015,713,4.015,723,4.071,732,2.721,733,2.721,744,2.833,745,2.448,751,2.665,769,1.106,771,2.564,778,2.322,833,3.281,834,2.224,847,2.721,1238,3.591,1585,4.305,1632,5.438,1667,5.618,1785,4.693,1937,3.153,1946,2.918,1990,2.721,1992,3.181,2026,3.181,2044,2.721,2145,3.181,2152,2.918,2236,2.918,2640,2.721,2699,5.267,2705,2.564,2789,2.721,2808,6.08,2823,6.024,2830,3.181,2831,6.278,2832,5.283,2833,6.278,2834,5.283,2835,5.283,2836,3.58,2837,5.283,2838,5.283,2839,5.283,2840,6.93,2841,3.58,2842,3.58,2843,5.283,2844,3.58,2845,3.58,2846,5.283,2847,3.181,2848,3.58,2849,3.58,2850,3.58,2851,3.58,2852,3.58,2853,3.58,2854,3.58,2855,3.58,2856,3.58,2857,3.58,2858,3.58,2859,3.58,2860,3.58,2861,3.58,2862,3.58,2863,6.278,2864,3.58,2865,3.58,2866,3.58,2867,3.58,2868,5.283,2869,6.93,2870,5.283,2871,5.283,2872,5.283,2873,5.283,2874,2.918]],["title/components/SidebarNavigationComponent.html",[0,0.17,216,0.914]],["body/components/SidebarNavigationComponent.html",[0,0.25,1,0.799,2,1.153,3,0.102,4,0.095,5,0.877,6,0.893,7,0.877,8,0.877,9,0.061,15,0.741,16,1.756,17,1.753,18,0.799,19,1.197,21,1.153,23,1.153,25,0.236,26,0.672,27,1.227,31,4.426,32,0.765,37,0.647,44,0.794,46,0.563,47,0.007,48,0.622,49,0.324,50,0.781,52,0.485,53,0.829,68,1.949,71,0.446,73,0.339,77,1.372,81,0.686,85,0.095,90,0.205,91,0.877,112,2.094,113,1.712,114,1.308,115,0.877,116,1.242,117,1.338,118,0.727,119,1.625,120,0.877,121,1.442,122,0.784,123,0.845,124,0.814,125,0.877,126,0.799,127,0.877,128,0.814,129,0.845,130,0.877,131,0.814,132,0.877,133,0.814,134,0.877,135,0.799,136,0.845,137,0.877,138,0.814,139,0.877,140,0.845,141,0.799,142,1.425,143,0.881,144,1.242,145,0.799,146,1.242,147,0.784,148,1.862,149,0.799,150,0.727,151,0.877,152,0.799,153,1.314,154,0.799,155,0.799,156,0.814,157,0.877,158,0.799,159,0.877,160,0.829,161,0.755,162,1.338,163,0.814,164,0.877,165,0.814,166,1.456,167,0.877,168,0.814,169,0.877,170,0.814,171,0.814,172,0.877,173,0.814,174,0.877,175,0.814,176,0.877,177,0.799,178,0.845,179,0.814,180,0.899,181,0.877,182,0.799,183,0.877,184,0.799,185,0.814,186,0.877,187,0.814,188,1.442,189,0.814,190,1.242,191,0.877,192,0.814,193,0.877,194,0.814,195,0.877,196,0.799,197,0.829,198,0.799,199,0.877,200,0.799,201,0.861,202,1.11,203,0.799,204,0.814,205,0.814,206,0.877,207,0.799,208,1.595,209,0.784,210,0.877,211,0.799,212,0.829,213,0.799,214,0.799,215,0.877,216,1.456,217,1.806,218,1.242,219,0.814,220,0.877,221,0.814,222,0.877,223,0.877,224,0.814,225,0.877,226,0.784,227,0.953,228,0.799,229,0.814,230,0.877,231,0.814,232,0.877,233,1.11,234,1.242,235,1.242,236,0.799,237,1.595,238,0.741,239,0.799,240,0.799,241,0.861,242,0.829,243,0.877,244,0.799,245,0.877,246,0.784,247,0.845,248,0.877,249,0.004,250,0.004,277,1.481,303,1.049,370,1.39,384,3.501,392,2.649,393,1.745,394,1.873,426,1.257,655,1.037,658,2.027,660,2.292,662,1.308,664,1.78,666,1.873,678,2.067,679,3.443,680,1.825,681,1.78,687,1.923,688,2.927,706,2.292,742,1.78,746,2.159,747,1.977,750,1.923,756,2.88,818,2.477,823,3.688,885,2.692,886,2.387,887,2.578,888,2.159,889,2.692,891,3.812,894,2.477,1109,2.477,1110,3.875,1212,5.223,1242,4.791,1302,4.468,1346,2.821,1364,2.477,2215,6.386,2399,3.688,2401,3.688,2640,3.155,2875,6.962,2876,3.383,2877,5.223,2878,6.065,2879,5.223,2880,7.424,2881,4.151,2882,4.151,2883,4.151,2884,3.688,2885,4.151,2886,3.383,2887,3.383,2888,4.151,2889,4.151,2890,4.151]],["title/interfaces/SinglePersonSchedule.html",[86,0.816,2891,3.542]],["body/interfaces/SinglePersonSchedule.html",[3,0.176,4,0.164,9,0.106,25,0.409,26,0.959,47,0.007,49,0.421,71,0.409,85,0.192,86,1.258,204,1.409,249,0.006,250,0.006,251,2.407,625,3.489,709,3.906,1546,5.463,2325,5.935,2891,6.752,2892,5.857,2893,6.385]],["title/components/SnackbarComponent.html",[0,0.17,219,0.914]],["body/components/SnackbarComponent.html",[0,0.23,1,0.69,2,1.037,3,0.088,4,0.082,5,0.758,6,0.772,7,0.758,8,0.758,9,0.053,13,1.454,14,2.292,15,0.64,16,1.745,17,1.741,18,0.69,19,1.077,21,1.037,23,1.037,25,0.204,26,0.605,27,1.358,32,0.688,36,2.53,37,0.56,44,0.936,46,0.717,47,0.007,48,0.695,49,0.351,50,0.605,52,0.735,53,1.256,57,1.758,60,1.345,61,1.176,71,0.395,73,0.293,77,0.926,81,0.593,85,0.082,90,0.177,106,1.018,110,1.087,111,1.848,113,1.541,115,0.758,116,1.118,117,1.232,118,0.628,119,1.739,120,0.758,121,1.328,122,0.678,123,0.73,124,0.704,125,0.758,126,0.69,127,0.758,128,0.704,129,0.73,130,0.758,131,0.704,132,0.758,133,0.704,134,0.758,135,0.69,136,0.73,137,0.758,138,0.704,139,0.758,140,0.73,141,0.69,142,1.101,143,0.793,144,1.118,145,0.69,146,1.118,147,0.678,148,1.802,149,0.69,150,0.628,151,0.758,152,0.69,153,1.21,154,0.69,155,0.69,156,0.704,157,0.758,158,0.69,159,0.758,160,0.717,161,0.653,162,1.232,163,0.704,164,0.758,165,0.704,166,1.57,167,0.758,168,0.704,169,0.758,170,0.704,171,0.704,172,0.758,173,0.704,174,0.758,175,0.704,176,0.758,177,0.69,178,0.73,179,0.704,180,0.809,181,0.758,182,0.69,183,0.758,184,0.69,185,0.704,186,0.758,187,0.704,188,1.328,189,0.704,190,1.118,191,0.758,192,0.704,193,0.758,194,0.704,195,0.758,196,0.69,197,0.717,198,0.69,199,0.758,200,0.69,201,0.744,202,0.999,203,0.69,204,0.704,205,0.704,206,0.758,207,0.69,208,1.506,209,0.678,210,0.758,211,0.69,212,0.717,213,0.69,214,0.69,215,0.758,216,0.704,217,0.758,218,1.118,219,1.36,220,0.758,221,0.704,222,1.328,223,0.758,224,0.704,225,0.758,226,0.678,227,0.858,228,0.69,229,0.704,230,0.758,231,0.704,232,0.758,233,0.999,234,1.118,235,1.118,236,0.69,237,0.73,238,0.64,239,0.69,240,0.69,241,0.744,242,0.717,243,0.758,244,0.69,245,0.758,246,0.678,247,0.73,248,0.758,249,0.004,250,0.004,256,3.404,264,4.022,277,1.28,295,2.57,303,1.497,305,1.501,306,2.696,370,1.202,392,1.888,393,2.568,408,1.663,573,1.539,574,1.338,575,1.501,576,1.539,655,1.571,656,2.017,658,1.065,660,2.063,661,1.578,662,1.667,663,2.327,672,1.701,678,1.903,680,1.578,681,1.539,685,3.989,687,1.663,688,3.319,693,2.063,706,2.063,742,2.269,743,1.926,744,2.836,745,2.913,747,2.52,756,2.592,770,1.81,772,1.926,806,3.431,815,4.312,825,2.924,826,2.52,834,2.229,845,2.142,896,4.141,1027,2.752,1248,4.415,1288,4.778,1786,5.544,1834,3.042,1919,2.924,1934,2.727,2136,2.229,2257,2.439,2894,3.188,2895,6.286,2896,5.291,2897,6.286,2898,7.741,2899,5.291,2900,5.123,2901,5.291,2902,6.286,2903,3.188,2904,5.262,2905,3.588,2906,3.588,2907,4.701,2908,3.588,2909,3.588,2910,3.588,2911,5.291,2912,3.588,2913,3.588,2914,5.291,2915,3.588,2916,5.291,2917,3.588,2918,3.588,2919,3.588,2920,2.924,2921,2.439,2922,3.588,2923,3.588,2924,3.588,2925,3.588,2926,3.588,2927,2.924,2928,3.588,2929,3.588,2930,3.588,2931,3.588,2932,3.588,2933,3.588,2934,3.588,2935,3.588,2936,3.588,2937,3.588,2938,3.588,2939,3.588,2940,3.588,2941,3.588,2942,5.291,2943,5.291,2944,5.291]],["title/interfaces/SnackbarData.html",[86,0.816,2921,3.167]],["body/interfaces/SnackbarData.html",[3,0.175,4,0.163,9,0.105,25,0.406,26,0.955,47,0.007,49,0.42,85,0.163,86,1.249,88,1.672,249,0.006,250,0.006,251,2.389,256,4.015,303,1.58,393,2.711,896,5.285,2900,7.441,2921,5.677,2927,7.217,2945,6.337]],["title/components/SnackbarOutletComponent.html",[0,0.17,221,0.914]],["body/components/SnackbarOutletComponent.html",[0,0.257,1,0.841,2,1.195,3,0.107,4,0.1,5,0.924,6,0.941,7,0.924,8,0.924,9,0.064,15,0.78,16,1.759,17,1.757,18,0.841,19,1.241,21,1.195,23,1.195,25,0.347,26,0.697,27,1.161,32,0.793,37,0.682,44,0.75,46,0.826,47,0.007,48,0.657,49,0.289,50,0.697,52,0.511,60,0.795,61,0.695,71,0.4,73,0.357,77,1.067,81,0.723,85,0.1,88,1.326,90,0.216,106,0.841,110,1.324,111,1.527,112,2.205,115,0.924,116,1.288,117,1.377,118,0.765,119,1.575,120,0.924,121,1.483,122,0.826,123,0.89,124,0.857,125,0.924,126,0.841,127,0.924,128,0.857,129,0.89,130,0.924,131,0.857,132,0.924,133,0.857,134,0.924,135,0.841,136,0.89,137,0.924,138,0.857,139,0.924,140,0.89,141,0.841,142,1.229,143,0.914,144,1.288,145,0.841,146,1.288,147,0.826,148,1.882,149,0.841,150,0.765,151,0.924,152,0.841,153,1.351,154,0.841,155,0.841,156,0.857,157,0.924,158,0.841,159,0.924,160,0.873,161,0.795,162,1.377,163,0.857,164,0.924,165,0.857,166,1.195,167,0.924,168,0.857,169,0.924,170,0.857,171,0.857,172,0.924,173,0.857,174,0.924,175,0.857,176,0.924,177,0.841,178,0.89,179,0.857,180,0.932,181,0.924,182,0.841,183,0.924,184,0.841,185,0.857,186,0.924,187,0.857,188,1.483,189,0.857,190,1.288,191,0.924,192,0.857,193,0.924,194,0.857,195,0.924,196,0.841,197,0.873,198,0.841,199,0.924,200,0.841,201,0.907,202,1.151,203,0.841,204,0.857,205,0.857,206,0.924,207,0.841,208,1.626,209,0.826,210,0.924,211,0.841,212,0.873,213,0.841,214,0.841,215,0.924,216,0.857,217,0.924,218,1.288,219,0.857,220,0.924,221,1.489,222,1.83,223,0.924,224,0.857,225,0.924,226,0.826,227,0.989,228,0.841,229,0.857,230,0.924,231,0.857,232,0.924,233,1.151,234,1.288,235,1.288,236,0.841,237,0.89,238,0.78,239,0.841,240,0.841,241,0.907,242,0.873,243,0.924,244,0.841,245,0.924,246,0.826,247,0.89,248,0.924,249,0.005,250,0.005,277,1.56,303,1.355,370,1.464,385,5.417,655,1.093,658,2.084,662,1.378,664,1.875,666,1.973,668,1.63,669,1.63,675,1.666,678,1.324,742,1.875,751,2.205,756,2.142,770,3.076,772,2.347,776,2.082,1039,3.323,1288,4.634,1847,3.131,1904,3.563,2218,6.19,2257,2.972,2259,3.131,2903,3.884,2904,5.624,2920,3.563,2921,5.163,2946,6.748,2947,3.884,2948,7.021,2949,6.097,2950,6.237,2951,6.097,2952,6.097,2953,6.097,2954,4.372,2955,4.372,2956,6.097,2957,4.372,2958,3.884,2959,4.372,2960,4.372]],["title/injectables/SnackbarService.html",[317,1.628,2904,3.167]],["body/injectables/SnackbarService.html",[3,0.145,4,0.135,9,0.087,25,0.337,26,0.853,27,1.573,28,3.458,32,0.97,37,1.274,44,0.944,46,1.011,47,0.007,48,0.593,49,0.354,50,0.853,52,0.955,53,1.632,60,1.357,61,1.187,62,1.606,71,0.503,73,0.483,83,1.568,85,0.135,88,1.542,90,0.292,93,2.356,249,0.006,250,0.006,256,3.281,303,1.61,317,2.607,319,2.99,321,2.399,368,2.99,369,2.822,393,2.545,507,4.245,709,3.885,896,5.273,1245,7.616,1280,3.681,1282,5.265,1283,6.656,1288,5.672,1786,5.344,2900,6.986,2904,5.072,2907,6.63,2921,4.028,2927,6.656,2950,7.256,2961,5.265,2962,7.462,2963,5.927,2964,7.462,2965,5.927,2966,5.927,2967,7.462,2968,5.927,2969,7.462,2970,5.927,2971,5.927,2972,7.462,2973,5.927,2974,5.927,2975,5.927,2976,5.927]],["title/interfaces/Status.html",[81,0.77,86,0.816]],["body/interfaces/Status.html",[3,0.145,4,0.135,9,0.087,25,0.337,26,0.853,47,0.007,48,0.716,49,0.419,71,0.425,81,1.591,85,0.17,86,1.547,88,1.542,111,2.607,227,1.535,249,0.006,250,0.006,251,1.985,253,1.324,273,2.786,288,2.351,296,3.967,302,5.672,303,1.457,392,2.663,393,2.795,560,4.028,655,1.865,664,2.541,667,5.072,769,2.786,916,2.99,1546,4.454,2044,6.516,2582,5.672,2977,4.83,2978,6.63,2979,8.229,2980,8.014,2981,6.516,2982,5.072,2983,5.344,2984,6.081,2985,5.672,2986,5.672,2987,5.672,2988,6.63,2989,5.265,2990,5.265]],["title/pipes/StatusColorPipe.html",[958,1.663,2991,3.337]],["body/pipes/StatusColorPipe.html",[3,0.167,4,0.156,9,0.1,13,1.87,15,1.215,32,0.885,44,0.728,46,0.923,47,0.007,48,0.69,49,0.323,50,0.778,52,0.796,60,1.238,61,1.292,71,0.463,73,0.555,81,1.125,82,4.414,85,0.156,90,0.336,106,1.731,249,0.006,250,0.006,688,2.919,780,5.547,958,2.899,1834,5.362,1904,7.076,2136,4.228,2582,6.174,2984,6.62,2991,5.818,2992,4.228,2993,7.217,2994,6.047,2995,8.124,2996,5.522,2997,6.807,2998,5.522,2999,6.807,3000,8.124,3001,6.807]],["title/components/StatusLabelComponent.html",[0,0.17,224,0.914]],["body/components/StatusLabelComponent.html",[0,0.192,1,0.516,2,0.83,3,0.066,4,0.061,5,0.566,6,0.577,7,0.566,8,0.566,9,0.039,15,0.478,16,1.718,17,1.713,18,0.516,19,0.862,21,0.83,23,0.83,25,0.153,26,0.484,27,1.479,29,1.795,32,0.551,37,0.418,44,0.98,46,1.015,47,0.007,48,0.65,49,0.408,50,0.856,52,0.971,53,1.66,57,1.313,60,1.314,61,1.302,62,1.733,64,1.022,68,1.499,71,0.426,73,0.219,74,0.862,77,0.741,81,1.463,82,1.738,83,0.709,85,0.061,88,1.303,89,2.094,90,0.132,91,1.73,106,1.147,110,1.805,113,1.528,114,1.654,115,0.566,116,0.894,117,1.273,118,0.741,119,1.67,120,0.566,121,1.109,122,0.506,123,0.546,124,0.526,125,0.566,126,0.516,127,0.566,128,0.526,129,0.546,130,0.566,131,0.526,132,0.566,133,0.526,134,0.566,135,0.516,136,0.546,137,0.566,138,0.526,139,0.566,140,1.749,141,0.516,142,0.919,143,0.635,144,0.894,145,0.516,146,0.894,147,0.506,148,1.668,149,0.516,150,0.469,151,0.566,152,0.516,153,1.01,154,0.516,155,0.516,156,0.526,157,0.566,158,0.516,159,0.566,160,0.535,161,0.487,162,1.029,163,0.526,164,0.566,165,0.526,166,1.417,167,0.566,168,0.526,169,0.566,170,0.526,171,0.526,172,0.566,173,0.526,174,0.566,175,0.526,176,0.566,177,0.516,178,0.546,179,0.526,180,0.647,181,0.566,182,0.516,183,0.566,184,0.516,185,0.526,186,0.566,187,0.526,188,1.109,189,0.526,190,0.894,191,0.566,192,0.526,193,0.566,194,0.526,195,0.566,196,0.516,197,0.535,198,0.516,199,0.566,200,0.516,201,0.556,202,0.8,203,0.516,204,0.526,205,0.526,206,0.566,207,0.516,208,1.321,209,0.506,210,0.566,211,0.516,212,0.535,213,0.516,214,0.516,215,0.566,216,0.526,217,0.566,218,0.894,219,0.526,220,0.566,221,0.526,222,0.566,223,0.566,224,1.169,225,0.566,226,0.506,227,0.686,228,0.516,229,0.526,230,0.566,231,0.526,232,0.566,233,0.8,234,1.371,235,0.894,236,0.516,237,0.546,238,0.478,239,0.516,240,0.516,241,0.878,242,0.535,243,0.566,244,0.516,245,0.566,246,0.506,247,0.546,248,0.566,249,0.003,250,0.003,253,1.332,255,1.069,272,1.439,273,2.131,277,0.956,279,3.197,282,0.999,288,0.845,296,1.179,306,1.816,321,0.862,323,2.647,356,2.817,360,1.439,392,2.316,393,2.391,394,2.69,422,2.745,533,2.817,537,4.011,549,3.132,586,1.541,625,1.614,629,2.074,651,1.6,655,1.311,656,1.022,658,1.257,660,1.651,662,0.845,663,2.622,668,1.578,669,1.578,670,2,671,0.956,672,0.862,678,1.589,680,1.179,681,1.149,687,1.242,688,1.149,706,1.651,709,2.308,722,1.822,741,1.488,744,2.69,745,2.762,747,1.276,750,1.242,751,2.136,761,1.488,762,1.488,779,1.352,782,1.149,801,3.017,805,1.665,806,1.738,826,1.276,845,2.527,882,1.665,916,2.136,920,2.527,921,2.527,922,4.709,923,3.874,924,3.132,925,3.132,926,2.527,927,2.527,928,2.527,929,2.527,930,2.527,931,2.527,933,5.087,934,1.665,935,2.434,936,1.6,937,2.35,938,1.6,939,1.6,940,1.541,941,1.439,942,1.488,943,1.665,944,4.238,945,2.35,946,1.488,947,1.665,948,1.541,949,1.488,950,1.665,951,3.874,952,1.6,953,1.488,954,1.541,955,1.541,956,1.6,957,1.6,958,1.511,959,2.527,960,1.6,961,1.665,962,2.527,963,2.016,964,4.118,965,1.6,966,2.913,967,1.541,968,3.017,969,2.527,970,1.91,971,3.558,972,1.488,973,1.6,974,2.527,975,1.6,976,1.665,977,1.6,978,1.6,979,1.665,980,2.527,981,1.6,982,1.6,983,1.738,984,1.665,985,1.665,986,1.665,987,1.665,988,1.665,989,1.6,990,2.35,991,1.665,992,2.527,995,1.665,996,1.738,997,1.665,1027,2.202,1031,2.745,1032,3.032,1033,3.567,1035,1.822,1066,2.184,1067,1.822,1068,2.184,1248,3.558,1280,3.259,1281,1.488,1306,4.531,1452,2.184,1573,1.92,1574,1.92,1575,1.92,1610,1.738,1639,1.738,1688,3.758,1748,2.037,1786,4.27,1866,4.662,1867,6.13,1868,4.858,1869,3.45,1882,3.218,1886,3.761,1892,2.381,1894,2.381,1896,2.184,1899,2.184,1913,2.381,1914,2.381,1915,2.381,1916,2.184,1917,2.381,1918,2.037,1919,4.277,1920,2.381,1921,2.381,1922,2.381,1923,2.381,1924,3.761,1933,3.218,1934,2.037,1942,2.184,1982,2.037,2313,2.184,2650,2.381,2887,2.184,3002,7.699,3003,7.062,3004,2.381,3005,5.248,3006,4.234,3007,6.849,3008,5.248,3009,4.234,3010,2.68,3011,4.234,3012,2.68,3013,2.68,3014,2.68,3015,2.68,3016,4.234,3017,2.68,3018,2.68,3019,2.68,3020,2.68,3021,2.68,3022,2.68,3023,2.68,3024,2.68,3025,2.68,3026,2.68,3027,2.68,3028,2.68,3029,2.68,3030,2.68,3031,2.68,3032,2.68,3033,4.234,3034,3.761]],["title/injectables/StatusService.html",[317,1.628,538,3.022]],["body/injectables/StatusService.html",[3,0.099,4,0.092,9,0.059,25,0.23,27,1.554,32,0.749,37,0.629,44,0.907,46,1.15,47,0.007,48,0.674,49,0.402,50,0.97,52,1.047,62,1.24,68,2.714,71,0.459,73,0.329,81,1.625,83,1.067,85,0.092,88,1.79,89,3.573,90,0.199,91,0.852,93,2.014,106,1.662,129,1.492,142,1.568,143,1.313,150,1.283,180,1.233,227,1.09,249,0.004,250,0.004,253,1.732,303,1.028,309,3.367,317,2.013,318,4.067,319,2.035,328,4.704,368,2.035,369,1.922,370,1.352,489,2.408,508,2.743,512,2.823,537,4.606,538,3.736,549,4.375,560,5.269,581,3.585,598,5.477,613,5.119,709,1.774,769,2.811,791,4.553,970,3.308,1113,3.579,1336,3.736,1544,3.288,1546,4.375,1549,3.585,2294,4.695,2454,4.695,2456,4.126,2457,5.119,3007,7.162,3035,3.585,3036,5.762,3037,4.035,3038,5.762,3039,4.035,3040,5.119,3041,4.035,3042,7.956,3043,4.695,3044,4.035,3045,4.035,3046,4.035,3047,5.762,3048,4.035,3049,5.119,3050,4.035,3051,5.119,3052,3.585,3053,4.035,3054,4.035,3055,4.035,3056,4.035,3057,4.035,3058,4.035,3059,5.762,3060,5.762,3061,5.762,3062,4.035,3063,4.035,3064,4.035,3065,5.762,3066,4.035,3067,4.035,3068,4.035,3069,4.035,3070,4.035,3071,5.762,3072,4.035,3073,4.035,3074,4.035]],["title/interfaces/StatusWithTasks.html",[86,0.816,560,3.167]],["body/interfaces/StatusWithTasks.html",[3,0.157,4,0.146,9,0.094,25,0.364,26,0.894,47,0.007,48,0.621,49,0.303,71,0.445,81,1.589,85,0.179,86,1.581,88,1.206,111,2.231,227,1.544,249,0.006,250,0.006,251,2.14,253,1.427,273,2.415,288,2.013,296,3.715,302,4.855,303,1.14,392,2.279,393,2.613,560,5.313,655,1.596,664,3.352,667,4.342,769,2.415,916,3.943,1546,5.484,2044,5.941,2582,4.855,2977,5.205,2978,5.675,2979,7.505,2980,6.945,2981,5.941,2982,4.342,2983,4.575,2984,5.205,2985,4.855,2986,4.855,2987,4.855,2988,5.675,2989,5.675,2990,5.675]],["title/interfaces/Task.html",[86,0.816,227,0.756]],["body/interfaces/Task.html",[3,0.119,4,0.111,9,0.071,25,0.275,26,0.747,47,0.007,48,0.678,49,0.438,50,1.098,62,1.041,71,0.275,77,0.847,81,1.08,85,0.149,86,1.45,87,2.127,88,1.756,89,1.93,143,1.279,161,1.635,171,1.74,180,1.212,227,1.57,249,0.005,250,0.005,251,1.621,253,1.949,273,2.636,303,1.683,328,3.974,549,4.731,624,6.233,625,2.491,636,3.677,637,5.326,728,5.141,768,5.8,769,2.854,916,2.44,1026,3.942,1038,3.942,1240,3.884,1416,3.465,1499,4.443,1547,6.025,1628,3.509,1629,3.509,1636,3.005,1637,3.005,1689,5.645,2575,4.681,2981,5.626,2982,4.443,2985,6.025,2986,6.025,2987,4.968,3075,3.942,3076,6.025,3077,7.043,3078,6.954,3079,5.807,3080,5.807,3081,5.807,3082,5.326,3083,3.465,3084,4.298,3085,7.043,3086,3.677,3087,4.298,3088,3.942,3089,3.677,3090,3.677]],["title/components/TaskDialog.html",[0,0.17,226,0.88]],["body/components/TaskDialog.html",[0,0.192,1,0.517,2,0.832,3,0.066,4,0.061,5,0.568,6,0.579,7,0.568,8,0.568,9,0.04,13,1.166,14,1.917,15,0.48,16,1.719,17,1.713,18,0.517,19,0.864,20,2.278,21,0.832,23,0.832,25,0.153,26,0.485,27,1.537,28,2.767,29,2.042,30,3.573,31,3.409,32,0.552,34,4.696,35,4.538,36,2.177,37,0.662,38,2.19,40,3.573,41,3.709,42,3.996,43,3.872,44,0.947,46,0.713,47,0.007,48,0.613,49,0.389,50,0.601,52,0.845,53,1.445,57,1.317,58,2.884,60,1.315,61,1.192,62,2.035,63,2.254,65,2.594,66,3.656,68,2.301,71,0.494,72,1.827,73,0.219,74,0.864,75,1.743,76,1.669,77,0.92,78,1.492,79,2.043,80,2.043,81,0.701,82,1.743,83,0.711,84,2.043,85,0.12,86,0.471,87,3.297,88,1.416,89,2.991,90,0.133,91,1.373,92,2.043,93,1.641,94,2.043,95,3.765,96,2.043,97,3.225,98,1.925,99,3.225,100,1.925,101,2.043,102,2.043,103,1.317,104,1.317,105,1.492,106,0.817,108,1.827,113,0.783,114,0.847,115,0.568,116,0.896,117,1.031,118,0.471,119,1.238,120,0.568,121,1.111,122,0.508,123,0.547,124,0.527,125,0.568,126,0.517,127,0.568,128,0.527,129,0.547,130,0.568,131,0.527,132,0.568,133,0.527,134,0.568,135,0.517,136,0.547,137,0.568,138,0.527,139,0.568,140,0.547,141,0.517,142,1.474,143,0.788,144,0.896,145,0.517,146,0.896,147,0.508,148,1.669,149,0.517,150,0.471,151,0.568,152,0.517,153,1.392,154,0.517,155,0.517,156,0.527,157,0.568,158,0.517,159,0.568,160,0.537,161,1.403,162,1.418,163,0.527,164,0.568,165,0.527,166,0.832,167,0.568,168,0.527,169,0.568,170,0.527,171,0.527,172,0.568,173,0.527,174,0.568,175,0.527,176,0.568,177,0.517,178,0.547,179,0.527,180,0.649,181,0.568,182,0.517,183,0.568,184,0.517,185,0.527,186,0.568,187,0.527,188,1.111,189,0.527,190,0.896,191,0.568,192,0.527,193,0.568,194,0.527,195,0.568,196,0.517,197,0.537,198,0.517,199,0.568,200,0.517,201,0.557,202,0.801,203,0.517,204,0.527,205,0.527,206,0.568,207,0.517,208,1.323,209,0.508,210,0.568,211,0.517,212,0.537,213,0.517,214,0.517,215,0.568,216,0.527,217,0.568,218,0.896,219,0.527,220,0.568,221,0.527,222,0.568,223,0.568,224,0.527,225,0.568,226,1.128,227,1.307,228,0.517,229,0.527,230,0.568,231,0.527,232,0.568,233,0.801,234,0.896,235,0.896,236,0.517,237,0.547,238,0.48,239,0.517,240,0.517,241,0.557,242,0.537,243,0.568,244,0.517,245,0.568,246,0.508,247,0.547,248,0.568,249,0.003,250,0.003,253,0.948,263,3.872,273,1.624,282,2.423,288,0.847,291,1.398,299,2.636,328,2.278,538,4.69,549,3.879,570,1.443,578,4.215,579,4.493,582,1.925,591,2.043,624,4.696,709,1.182,727,3.265,728,2.752,768,2.884,769,1.311,949,3.314,966,2.355,1065,1.356,1110,3.445,1163,2.752,1180,3.883,1207,1.669,1280,4.037,1301,3.225,1302,3.225,1329,4.276,1338,5.939,1346,1.827,1628,1.443,1629,1.443,1636,1.669,1637,1.669,1638,1.743,1689,4.291,2071,3.77,2306,4.284,2492,2.19,2493,2.19,2575,3.039,2886,2.19,3034,3.77,3076,3.225,3086,3.996,3089,3.996,3090,3.225,3091,2.043,3092,4.671,3093,3.77,3094,4.671,3095,4.671,3096,4.671,3097,4.671,3098,4.671,3099,4.671,3100,5.305,3101,4.243,3102,4.243,3103,2.688,3104,2.688,3105,2.688,3106,2.688,3107,2.688,3108,2.688,3109,3.77,3110,2.688,3111,3.77,3112,2.688,3113,2.688,3114,3.77,3115,4.276,3116,3.77,3117,6.138,3118,2.688,3119,2.688,3120,2.688,3121,2.688,3122,2.688,3123,2.688,3124,3.77,3125,2.688,3126,2.688,3127,3.77,3128,2.688,3129,3.77,3130,2.688,3131,2.688,3132,2.19,3133,2.388,3134,3.996,3135,3.77,3136,2.388,3137,2.19,3138,3.996,3139,2.388,3140,2.19,3141,2.388,3142,2.388,3143,2.388,3144,2.388,3145,2.388,3146,2.388,3147,3.77,3148,2.388,3149,2.388,3150,2.388,3151,2.19,3152,2.388,3153,2.388,3154,2.388,3155,2.388,3156,2.388,3157,3.77,3158,3.77,3159,2.388,3160,3.77,3161,2.388,3162,2.388,3163,2.388,3164,2.388,3165,3.77,3166,2.388,3167,2.388,3168,4.243,3169,4.243,3170,4.243,3171,4.243,3172,4.243,3173,2.688]],["title/interfaces/TaskDialogData.html",[86,0.816,578,3.022]],["body/interfaces/TaskDialogData.html",[0,0.222,3,0.106,4,0.099,9,0.064,13,1.191,14,2.211,16,0.774,17,0.774,20,2.328,21,0.85,23,0.85,25,0.247,26,0.693,27,1.486,28,2.009,29,1.483,30,2.947,31,2.812,34,2.947,35,3.295,36,1.581,37,0.676,40,2.947,41,3.765,42,3.295,43,3.931,47,0.007,48,0.344,49,0.391,50,0.944,58,2.947,61,0.689,62,2.033,63,2.6,65,2.789,66,3.725,68,2.357,71,0.532,72,2.947,73,0.354,74,1.394,75,2.812,76,2.693,77,0.759,78,2.407,79,3.295,80,3.295,81,0.717,82,2.812,83,1.147,84,3.295,85,0.16,86,0.759,87,3.861,88,1.632,89,3.504,90,0.214,91,1.683,92,3.295,93,2.08,94,3.295,95,5.006,96,3.295,97,4.607,98,3.105,99,4.607,100,3.105,101,3.295,102,3.295,103,2.124,104,2.124,105,2.407,106,1.167,108,2.947,142,1.061,143,0.65,153,1.167,161,1.102,162,1.189,226,0.819,227,1.401,249,0.005,250,0.005,251,1.452,253,0.969,263,2.812,273,2.338,282,2.821,288,1.366,291,3.936,299,3.765,538,4.532,549,4.517,570,2.328,578,4.532,579,5.126,582,3.105,591,3.295,624,4.121,709,1.907,727,4.701,728,2.812,768,2.947,769,1.339,949,3.365,1065,2.187,1110,3.329,1180,3.753,1207,2.693,1280,4.701,1338,5.969,1346,2.947,1628,2.328,1629,2.328,1636,2.693,1637,2.693,1638,2.812,1689,3.765,2306,3.533,2492,3.533,2493,3.533,2575,3.105,2886,3.533,3076,3.295,3086,4.607,3089,4.607,3090,3.295,3091,3.295,3092,3.852,3093,3.852,3094,3.852,3095,3.852,3096,3.852,3097,3.852,3098,3.852,3099,3.852,3100,3.852,3109,3.852,3111,3.852,3114,3.852,3115,3.105,3116,3.852,3117,6.21,3124,3.852,3127,3.852,3129,3.852,3132,3.533,3133,3.852,3134,3.295,3135,5.386,3136,3.852,3137,3.533,3138,3.295,3139,3.852,3140,3.533,3141,6.21,3142,3.852,3143,3.852,3144,3.852,3145,3.852,3146,3.852,3147,5.386,3148,3.852,3149,3.852,3150,3.852,3151,3.533,3152,3.852,3153,3.852,3154,3.852,3155,3.852,3156,3.852,3157,5.386,3158,5.386,3159,3.852,3160,5.386,3161,3.852,3162,3.852,3163,3.852,3164,3.852,3165,5.386,3166,3.852,3167,3.852]],["title/components/TaskListPage.html",[0,0.17,228,0.897]],["body/components/TaskListPage.html",[0,0.175,1,0.449,2,0.743,3,0.057,4,0.053,5,0.493,6,0.503,7,0.493,8,0.493,9,0.034,15,0.417,16,1.703,17,1.699,18,0.449,19,1.121,21,0.743,23,0.743,25,0.133,26,0.433,27,1.499,30,4.41,32,0.493,37,0.591,44,0.951,46,0.965,47,0.007,48,0.627,49,0.391,50,0.814,52,0.832,53,1.1,60,1.408,61,1.231,62,1.471,65,1.909,68,2.102,71,0.495,73,0.19,74,0.751,77,0.664,81,1.13,82,1.514,83,0.618,85,0.053,87,1.027,88,1.39,89,2.589,90,0.115,91,1.444,93,1.514,106,1.315,109,2.569,110,1.834,111,1.324,112,1.178,113,2.074,114,1.909,115,0.493,116,0.801,117,1.272,118,0.409,119,1.477,120,0.493,121,1.011,122,0.441,123,0.475,124,0.458,125,0.493,126,0.449,127,0.493,128,0.458,129,0.475,130,0.493,131,0.458,132,0.493,133,0.458,134,0.493,135,0.449,136,0.475,137,0.493,138,0.458,139,0.493,140,0.475,141,0.449,142,1.197,143,0.973,144,0.801,145,0.449,146,0.801,147,0.441,148,1.598,149,0.449,150,1.061,151,0.493,152,0.449,153,1.315,154,0.449,155,0.449,156,0.458,157,0.493,158,0.449,159,0.493,160,0.466,161,0.425,162,0.938,163,0.458,164,0.493,165,0.458,166,0.743,167,0.493,168,0.458,169,0.493,170,0.458,171,1.272,172,0.493,173,0.458,174,0.493,175,0.458,176,0.493,177,0.449,178,0.475,179,0.458,180,0.926,181,0.493,182,0.449,183,0.493,184,0.449,185,0.458,186,0.493,187,0.458,188,1.011,189,0.458,190,0.801,191,0.493,192,0.458,193,0.493,194,0.458,195,0.493,196,0.449,197,0.466,198,0.449,199,0.493,200,0.449,201,0.484,202,0.716,203,0.449,204,0.458,205,0.458,206,0.493,207,0.449,208,1.233,209,0.441,210,0.493,211,0.449,212,0.466,213,0.449,214,0.449,215,0.493,216,0.458,217,0.493,218,0.801,219,0.458,220,0.493,221,0.458,222,0.493,223,0.493,224,0.458,225,0.493,226,0.716,227,1.511,228,1.06,229,0.458,230,0.493,231,0.458,232,0.493,233,0.716,234,0.801,235,0.801,236,0.449,237,0.475,238,0.417,239,0.449,240,0.449,241,0.484,242,0.466,243,0.493,244,0.449,245,0.493,246,0.441,247,0.475,248,0.493,249,0.003,250,0.003,255,2.589,270,1.214,277,0.833,288,1.195,291,1.214,303,0.417,321,1.539,341,1.672,356,2.569,358,1.214,392,1.353,393,1.926,394,2.16,426,0.707,527,5.764,528,5.288,529,4.207,535,1.587,536,3.179,537,3.795,538,4.433,539,3.085,540,3.349,541,3.93,549,1.393,567,2.104,568,1.514,569,1.45,570,1.254,571,1.514,572,1.775,573,1.001,574,1.413,575,0.977,576,1.001,579,1.45,585,1.296,586,2.18,587,1.775,588,2.074,591,2.881,595,2.074,597,2.074,598,1.903,627,2.881,632,1.45,646,1.672,647,1.672,648,1.393,649,1.903,651,2.856,653,3.9,654,2.881,655,1.78,656,2.1,657,1.214,658,1.635,660,2.665,661,3.006,662,2.154,663,3.132,668,1.413,669,1.413,670,1.824,671,0.833,672,1.219,675,1.445,678,1.965,679,1.912,680,1.027,681,1.001,685,3.731,687,1.757,688,1.001,693,0.91,702,5.764,703,5.764,704,2.881,705,3.368,709,2.104,713,2.881,720,1.393,721,1.775,722,1.587,723,2.458,724,2.074,726,2.074,727,4.424,728,1.514,730,2.074,731,4.252,732,1.775,733,1.775,734,1.903,735,1.775,736,1.775,737,2.074,739,3.368,741,1.296,742,2.052,743,2.035,744,2.928,745,2.218,746,1.214,747,1.805,750,1.082,751,1.178,756,1.144,758,3.089,761,1.296,762,1.296,768,2.577,769,1.171,770,2.779,771,3.945,772,1.254,773,1.393,779,1.178,780,1.903,826,1.112,835,2.715,886,1.342,898,1.393,935,1.342,941,1.254,1039,1.775,1281,2.656,1303,3.637,1338,2.577,1537,3.762,1543,1.672,1544,1.903,1546,2.262,1610,1.514,1612,2.074,1688,1.672,1933,3.637,1934,1.775,1982,3.637,2117,4.646,2126,1.903,2257,1.587,2259,1.672,2284,4.489,2310,2.074,2311,2.074,2312,2.074,2313,1.903,2475,1.775,2476,3.9,2477,3.089,2483,2.074,2605,2.074,2642,2.074,2887,1.903,3078,1.903,3140,1.903,3151,1.903,3174,7.937,3175,6.79,3176,4.786,3177,4.786,3178,4.252,3179,4.786,3180,5.509,3181,3.791,3182,3.791,3183,3.791,3184,3.791,3185,5.509,3186,3.791,3187,3.368,3188,2.335,3189,3.791,3190,2.335,3191,4.786,3192,3.791,3193,2.335,3194,3.791,3195,2.335,3196,3.791,3197,2.335,3198,3.791,3199,4.786,3200,2.335,3201,2.335,3202,3.791,3203,2.335,3204,2.335,3205,2.335,3206,2.335,3207,2.335,3208,2.074,3209,2.335,3210,2.335,3211,2.335,3212,2.335,3213,2.335,3214,2.335,3215,2.335,3216,2.335,3217,2.074,3218,2.335,3219,2.335,3220,2.335,3221,2.335,3222,2.335,3223,3.791,3224,3.791,3225,2.335,3226,2.335,3227,2.335,3228,2.335,3229,2.335,3230,3.791,3231,2.335,3232,2.335,3233,2.335,3234,2.335,3235,2.335,3236,2.335,3237,2.335,3238,2.335,3239,2.335,3240,2.335,3241,3.791,3242,3.791,3243,3.791,3244,3.368,3245,2.335,3246,2.335,3247,3.791,3248,2.335,3249,2.335]],["title/pipes/TaskPriorityIconPipe.html",[958,1.663,3250,3.337]],["body/pipes/TaskPriorityIconPipe.html",[3,0.169,4,0.158,9,0.101,13,1.895,15,1.23,32,0.897,44,0.737,46,0.935,47,0.007,48,0.693,49,0.327,50,0.788,52,0.806,61,1.302,71,0.393,73,0.562,85,0.158,90,0.34,106,1.775,249,0.006,250,0.006,688,2.957,958,2.921,1834,5.302,2136,4.283,2992,4.283,2996,5.564,2998,5.564,3115,5.863,3250,5.863,3251,5.863,3252,5.619,3253,8.186,3254,6.126,3255,5.619,3256,6.896,3257,5.619,3258,6.896,3259,5.619,3260,6.896,3261,5.619,3262,6.896,3263,5.619,3264,6.896]],["title/pipes/TaskPriorityPipe.html",[958,1.663,3265,3.337]],["body/pipes/TaskPriorityPipe.html",[3,0.17,4,0.158,9,0.102,13,1.9,15,1.234,32,0.899,44,0.739,46,0.937,47,0.007,48,0.694,49,0.328,50,0.791,52,0.808,61,1.304,71,0.394,73,0.564,85,0.158,90,0.341,106,1.776,249,0.006,250,0.006,688,2.966,958,2.926,1834,5.307,2136,4.295,2992,4.295,2996,5.574,2998,5.574,3134,6.233,3251,5.873,3255,5.636,3257,5.636,3259,5.636,3261,5.636,3263,5.636,3265,5.873,3266,6.144,3267,6.916,3268,6.916,3269,6.916,3270,6.916,3271,6.916,3272,6.916]],["title/injectables/TaskService.html",[317,1.628,537,2.587]],["body/injectables/TaskService.html",[3,0.06,4,0.056,9,0.036,20,4.534,25,0.141,26,0.453,27,1.523,32,0.516,37,0.887,44,0.87,46,1.066,47,0.007,48,0.625,49,0.373,50,0.9,52,1.033,60,0.904,61,0.392,62,1.657,68,2.63,71,0.485,73,0.201,81,1.202,83,0.653,85,0.056,88,1.78,89,3.607,90,0.122,91,1.585,93,1.563,106,1.746,109,2.668,136,1.48,142,1.348,143,1.332,150,1.426,153,0.763,180,1.112,204,1.543,226,0.466,227,1.585,249,0.003,250,0.003,253,1.758,255,0.985,256,1.085,261,1.767,263,1.6,270,3.782,275,1.876,288,1.566,291,2.959,307,1.767,308,1.677,309,3.424,317,1.385,318,3.785,319,1.245,328,3.904,332,2.695,341,1.767,368,1.245,369,1.175,489,1.473,512,2.787,537,2.201,539,3.156,540,3.426,541,4.021,549,2.965,567,2.201,568,1.6,569,1.533,570,1.325,571,1.6,572,1.876,578,2.571,579,1.533,582,1.767,625,3.146,630,3.522,632,3.534,633,2.011,634,2.011,640,2.011,646,3.559,647,2.839,648,2.965,654,3.013,709,2.502,720,1.473,721,1.876,723,2.571,727,4.66,728,1.6,735,1.876,736,1.876,769,2.757,958,2.496,970,3.616,990,3.158,1003,1.876,1065,3.144,1113,2.462,1117,4.516,1180,3.755,1207,1.533,1235,2.839,1256,5.926,1281,3.158,1300,3.522,1329,2.839,1336,2.571,1473,6.188,1537,3.086,1543,1.767,1546,4.696,1547,1.876,1550,2.193,1638,1.6,1639,1.6,1688,5.74,2294,3.231,2296,4.049,2454,3.231,2456,2.839,2634,2.193,2904,4.754,2920,2.011,3040,3.522,3042,7.64,3043,5.699,3049,3.522,3051,6.46,3052,3.522,3082,3.231,3083,5.208,3273,2.193,3274,7.7,3275,3.964,3276,3.964,3277,5.689,3278,3.964,3279,3.964,3280,3.964,3281,3.522,3282,3.964,3283,2.468,3284,6.84,3285,4.969,3286,3.964,3287,3.964,3288,2.468,3289,2.468,3290,2.468,3291,3.964,3292,2.468,3293,7.271,3294,2.468,3295,2.468,3296,3.964,3297,5.689,3298,2.468,3299,3.964,3300,2.468,3301,3.964,3302,2.468,3303,3.964,3304,3.964,3305,2.468,3306,2.468,3307,2.011,3308,2.468,3309,2.468,3310,4.969,3311,2.468,3312,3.964,3313,2.468,3314,2.468,3315,2.468,3316,2.468,3317,2.468,3318,2.468,3319,2.468,3320,2.468,3321,6.232,3322,3.964,3323,3.964,3324,5.689,3325,3.964,3326,3.964,3327,3.964,3328,3.964,3329,2.468,3330,2.468,3331,2.468,3332,3.964,3333,2.468,3334,2.468,3335,2.193,3336,2.468,3337,2.468,3338,2.468,3339,2.468,3340,2.468,3341,2.468,3342,2.468,3343,3.964,3344,2.468,3345,2.468,3346,2.468,3347,2.468,3348,3.964,3349,2.468,3350,2.468,3351,2.468,3352,2.468,3353,3.964,3354,2.468,3355,2.468,3356,2.468,3357,2.468,3358,2.468,3359,2.468,3360,2.468,3361,2.468,3362,2.468,3363,3.964]],["title/pipes/TaskTypeIconPipe.html",[958,1.663,3364,3.337]],["body/pipes/TaskTypeIconPipe.html",[3,0.169,4,0.158,9,0.101,13,1.895,15,1.23,32,0.897,44,0.737,46,0.935,47,0.007,48,0.693,49,0.414,50,0.788,52,0.806,61,1.302,71,0.393,73,0.562,85,0.158,90,0.34,106,1.775,227,1.118,249,0.006,250,0.006,688,2.957,727,4.283,958,2.921,1689,4.283,1834,5.302,2136,4.283,2992,4.283,2996,5.564,2998,5.564,3251,5.863,3252,5.619,3254,6.126,3364,5.863,3365,8.186,3366,6.896,3367,6.896,3368,5.619,3369,6.896,3370,5.619,3371,6.896,3372,6.896]],["title/pipes/TaskTypePipe.html",[958,1.663,3373,3.337]],["body/pipes/TaskTypePipe.html",[3,0.168,4,0.156,9,0.1,13,1.878,15,1.22,32,0.889,44,0.731,46,0.927,47,0.007,48,0.691,49,0.386,50,0.782,52,0.799,60,1.243,61,1.432,71,0.389,73,0.558,85,0.156,90,0.337,106,1.796,227,1.321,249,0.006,250,0.006,688,2.932,727,4.246,958,2.906,1689,4.246,1834,5.29,2136,4.246,2140,6.074,2992,4.246,2996,5.536,2998,5.536,3138,6.19,3251,5.833,3368,5.571,3370,5.571,3373,5.833,3374,6.074,3375,6.836,3376,6.836,3377,6.836,3378,6.836,3379,6.836,3380,6.836,3381,6.836]],["title/interfaces/TaskWithAdditionalData.html",[86,0.816,3083,3.337]],["body/interfaces/TaskWithAdditionalData.html",[3,0.126,4,0.117,9,0.075,25,0.292,26,0.777,47,0.007,48,0.539,49,0.42,50,0.928,62,1.462,71,0.292,77,1.189,81,0.847,85,0.155,86,1.478,87,3.568,88,1.671,89,3.237,143,1.301,161,1.695,171,1.494,180,1.039,227,1.564,249,0.005,250,0.005,251,1.716,253,1.702,273,2.923,303,1.604,328,4.091,549,3.058,624,6.293,625,1.953,636,5.162,637,4.175,728,3.323,768,4.617,769,2.607,916,3.426,1026,5.535,1038,5.535,1240,3.327,1416,4.865,1499,5.515,1547,3.894,1628,4.356,1629,4.356,1636,3.182,1637,3.182,1689,5.79,2575,3.67,2981,6.594,2982,3.483,2985,5.162,2986,5.162,2987,3.894,3075,4.175,3076,3.894,3077,4.552,3078,5.535,3079,4.552,3080,4.552,3081,4.552,3082,4.175,3083,4.865,3084,6.034,3085,7.984,3086,6.166,3087,6.034,3088,5.535,3089,6.166,3090,6.166]],["title/modules/TasksModule.html",[396,1.817,3382,3.542]],["body/modules/TasksModule.html",[3,0.134,4,0.125,9,0.08,47,0.007,49,0.259,71,0.548,73,0.446,74,1.757,85,0.125,90,0.269,126,1.699,128,1.731,165,1.731,203,1.699,224,1.731,226,1.668,228,1.699,233,1.338,249,0.005,250,0.005,398,2.232,399,3.804,405,5.27,406,4.228,407,2.842,408,2.532,410,4.228,411,3.374,413,3.471,421,4.153,459,4.401,460,3.394,461,4.816,580,4.855,698,4.453,1188,4.855,1189,3.914,1190,4.855,1203,4.153,1860,4.453,2203,4.855,2991,6.325,3003,4.453,3115,3.914,3175,4.153,3250,6.325,3265,6.325,3364,6.325,3373,6.325,3382,7.458,3383,4.855,3384,4.855,3385,4.855,3386,6.325,3387,5.465,3388,5.465,3389,5.465,3390,5.465,3391,5.465,3392,5.465,3393,4.855,3394,4.855,3395,4.855,3396,5.465,3397,5.465,3398,8.318,3399,7.085,3400,5.465,3401,5.465,3402,5.465]],["title/modules/TasksRoutingModule.html",[396,1.817,3386,3.337]],["body/modules/TasksRoutingModule.html",[0,0.316,3,0.165,4,0.154,9,0.099,47,0.007,71,0.521,73,0.548,85,0.154,90,0.331,93,1.847,126,1.551,129,1.641,180,1.233,203,1.551,204,1.318,228,1.551,249,0.006,250,0.006,396,2.62,398,2.745,411,3.201,413,3.949,424,4.811,425,4.917,426,2.035,433,6.087,452,4.174,480,4.568,1203,5.108,1213,5.971,1214,5.971,1217,5.971,1546,4.811,3175,5.108,3386,5.774,3393,5.971,3394,5.971,3395,5.971,3403,6.721]],["title/classes/TestNgControl.html",[90,0.23,1033,3.167]],["body/classes/TestNgControl.html",[3,0.164,4,0.153,9,0.098,25,0.381,26,0.919,32,1.046,44,0.921,46,0.907,47,0.007,48,0.531,49,0.317,50,0.765,52,0.782,53,1.606,60,1.217,61,1.064,62,1.731,65,3.44,71,0.381,74,2.152,85,0.153,90,0.33,91,1.821,106,1.288,249,0.006,250,0.006,916,4.057,922,4.957,944,5.043,1027,4.182,1033,5.466,1040,3.848,1058,5.454,1065,3.376,1067,6.079,3404,7.945,3405,5.454,3406,8.621,3407,8.041,3408,6.692,3409,8.041,3410,6.692,3411,8.041,3412,6.692,3413,8.041,3414,8.041]],["title/components/TextareaComponent.html",[0,0.17,229,0.914]],["body/components/TextareaComponent.html",[0,0.219,1,0.639,2,0.979,3,0.081,4,0.076,5,0.702,6,0.715,7,0.702,8,0.702,9,0.049,15,0.593,16,1.738,17,1.734,18,0.639,19,1.017,21,0.979,23,0.979,25,0.189,26,0.571,27,0.826,29,2.053,32,0.65,44,0.967,46,0.905,47,0.007,48,0.638,49,0.413,50,0.764,52,0.912,53,1.559,60,1.419,61,1.37,62,1.437,64,1.266,68,1.714,71,0.284,73,0.271,77,0.875,81,0.549,85,0.076,88,1.261,90,0.164,91,1.796,115,0.702,116,1.055,117,1.404,118,0.875,119,1.385,120,0.702,121,1.268,122,0.627,123,0.676,124,0.651,125,0.702,126,0.639,127,0.702,128,0.651,129,0.676,130,0.702,131,0.651,132,0.702,133,0.651,134,0.702,135,0.639,136,0.676,137,0.702,138,0.651,139,0.702,140,1.819,141,0.639,142,1.051,143,0.749,144,1.055,145,0.639,146,1.055,147,0.627,148,1.768,149,0.639,150,0.581,151,0.702,152,0.639,153,1.155,154,0.639,155,0.639,156,0.651,157,0.702,158,0.639,159,0.702,160,0.663,161,0.604,162,1.177,163,0.651,164,0.702,165,0.651,166,1.739,167,0.702,168,0.651,169,0.702,170,0.651,171,0.651,172,0.702,173,0.651,174,0.702,175,0.651,176,0.702,177,0.639,178,0.676,179,0.651,180,0.764,181,0.702,182,0.639,183,0.702,184,0.639,185,0.651,186,0.702,187,0.651,188,1.268,189,0.651,190,1.055,191,0.702,192,0.651,193,0.702,194,0.651,195,0.702,196,0.639,197,0.663,198,0.639,199,0.702,200,0.639,201,0.689,202,0.943,203,0.639,204,0.651,205,0.651,206,0.702,207,0.639,208,1.457,209,0.627,210,0.702,211,0.639,212,0.663,213,0.639,214,0.639,215,0.702,216,0.651,217,0.702,218,1.055,219,0.651,220,0.702,221,0.651,222,0.702,223,0.702,224,0.651,225,0.702,226,0.627,227,0.81,228,0.639,229,1.309,230,0.702,231,0.651,232,0.702,233,0.943,234,1.513,235,1.055,236,0.639,237,0.676,238,0.593,239,0.639,240,0.639,241,0.689,242,0.663,243,0.702,244,0.639,245,0.702,246,0.627,247,0.676,248,0.702,249,0.004,250,0.004,253,1.492,272,1.783,273,1.854,279,3.094,282,1.238,288,1.046,296,2.196,303,1.433,306,3.226,321,1.068,323,3.029,356,3.223,358,2.598,360,1.783,533,3.223,625,1.904,629,2.447,655,1.88,684,5.442,706,1.947,756,2.447,779,1.675,782,1.424,791,3.102,826,1.581,916,2.52,920,2.981,921,2.981,922,3.839,923,4.274,924,3.583,925,3.583,926,2.981,927,2.981,928,2.981,929,2.981,930,3.985,931,2.981,933,5.35,934,2.063,935,2.872,936,1.982,937,2.773,938,1.982,939,1.982,940,1.909,941,1.783,942,1.843,943,2.063,944,4.494,945,2.773,946,1.843,947,2.063,948,1.909,949,1.843,950,2.063,951,4.274,952,1.982,953,1.843,954,1.909,955,1.909,956,1.982,957,1.982,958,1.185,959,2.981,960,1.982,961,2.063,962,2.981,963,2.379,964,4.49,965,1.982,966,3.332,967,1.909,968,3.452,969,2.981,970,2.254,971,3.985,972,1.843,973,1.982,974,2.981,975,1.982,976,2.063,977,1.982,978,1.982,979,2.063,980,2.981,981,1.982,982,1.982,983,2.153,984,2.063,985,2.063,986,2.063,987,2.063,988,2.063,989,1.982,990,2.773,991,2.063,992,2.981,993,2.706,994,2.524,995,2.063,996,2.153,997,2.063,999,3.239,1031,3.239,1409,3.239,1958,5.442,1959,6.934,1960,6.362,1965,4.437,1967,4.437,1968,3.239,2646,5.334,3415,2.95,3416,4.995,3417,6.004,3418,4.995,3419,6.004,3420,3.321,3421,3.321,3422,3.321,3423,3.321,3424,4.437,3425,3.321,3426,3.321,3427,4.995]],["title/components/UpperNavigationComponent.html",[0,0.17,231,0.914]],["body/components/UpperNavigationComponent.html",[0,0.209,1,0.589,2,0.92,3,0.075,4,0.07,5,0.646,6,0.658,7,0.646,8,0.646,9,0.045,13,1.289,14,2.082,15,0.546,16,1.731,17,1.73,18,0.589,19,0.955,21,0.92,23,0.92,25,0.267,26,0.537,27,1.477,32,0.61,36,2.335,37,0.732,44,0.934,46,0.415,47,0.007,48,0.548,49,0.271,50,0.35,52,0.887,53,1.456,57,1.498,60,1.325,61,1.159,62,1.01,71,0.457,73,0.25,77,0.822,81,0.506,83,0.809,85,0.07,90,0.151,91,1.459,106,0.589,110,1.729,111,1.068,112,2.88,113,1.662,114,1.479,115,0.646,116,0.991,117,1.119,118,0.536,119,1.728,120,0.646,121,1.206,122,0.578,123,0.623,124,0.6,125,0.646,126,0.589,127,0.646,128,0.6,129,0.623,130,0.646,131,0.6,132,0.646,133,0.6,134,0.646,135,0.589,136,0.623,137,0.646,138,0.6,139,0.646,140,0.623,141,0.589,142,0.999,143,0.703,144,0.991,145,0.589,146,0.991,147,0.578,148,1.731,149,0.589,150,0.536,151,0.646,152,0.589,153,1.099,154,0.589,155,0.589,156,0.6,157,0.646,158,0.589,159,0.646,160,0.611,161,0.556,162,1.119,163,0.6,164,0.646,165,0.6,166,0.92,167,0.646,168,0.6,169,0.646,170,0.6,171,0.6,172,0.646,173,0.6,174,0.646,175,0.6,176,0.646,177,0.589,178,0.623,179,0.6,180,0.717,181,0.646,182,0.589,183,0.646,184,0.589,185,0.6,186,0.646,187,0.6,188,1.206,189,0.6,190,0.991,191,0.646,192,0.6,193,0.646,194,0.6,195,0.646,196,0.589,197,0.611,198,0.589,199,0.646,200,0.589,201,0.634,202,0.886,203,0.589,204,0.6,205,0.6,206,0.646,207,0.589,208,1.544,209,0.578,210,0.646,211,0.589,212,0.611,213,0.589,214,0.589,215,0.646,216,0.6,217,0.646,218,0.991,219,0.6,220,0.646,221,0.6,222,0.646,223,0.646,224,0.6,225,0.646,226,0.886,227,1.038,228,0.589,229,0.6,230,0.646,231,1.255,232,1.654,233,0.886,234,0.991,235,0.991,236,0.589,237,0.623,238,0.546,239,0.589,240,0.589,241,0.973,242,0.611,243,0.646,244,0.589,245,0.646,246,0.578,247,0.623,248,0.646,249,0.004,250,0.004,273,1.763,277,1.091,282,2.574,288,2.017,291,1.591,304,2.191,305,1.28,306,2.448,334,1.698,384,3.174,392,2.285,393,2.542,394,2.576,408,2.645,426,0.926,434,2.493,476,1.983,477,4.866,481,4.073,537,4.211,539,3.288,573,1.312,574,1.14,575,1.28,576,1.312,578,3.043,579,1.9,632,1.9,641,2.191,642,1.9,646,2.191,647,2.191,648,1.825,650,2.717,651,1.825,655,1.896,656,1.166,657,1.591,658,2.253,660,2.226,661,1.345,662,1.799,663,1.345,668,2.574,669,2.574,670,2.777,671,1.091,672,0.983,678,2.297,679,2.367,680,2.063,681,2.012,687,1.417,688,1.312,693,1.193,707,2.493,709,1.345,720,1.825,721,2.325,722,2.079,742,2.961,743,1.642,744,2.117,745,2.174,746,1.591,747,1.457,750,1.417,767,2.191,770,3.23,772,3.065,776,1.457,801,3.282,805,1.9,831,2.079,833,4.289,845,1.825,882,1.9,888,1.591,894,1.825,1007,2.493,1110,3.613,1238,3.189,1248,1.825,1364,1.825,1601,5.538,1639,1.983,1748,2.325,1847,2.191,1899,2.493,1916,2.493,1938,1.983,2110,2.325,2223,7.179,2348,5.072,2354,2.493,2470,2.717,2599,2.493,2640,2.325,2745,5.072,2817,6.474,2876,2.493,2877,4.169,2878,5.072,2879,4.169,2884,2.717,3132,2.493,3428,7.826,3429,5.709,3430,7.287,3431,7.287,3432,5.709,3433,6.402,3434,6.402,3435,6.402,3436,6.402,3437,6.402,3438,3.059,3439,3.059,3440,3.059,3441,3.059,3442,3.059,3443,3.059,3444,3.059,3445,3.059,3446,3.059,3447,3.059,3448,3.059,3449,3.059,3450,3.059,3451,4.692,3452,3.059,3453,3.059,3454,3.059,3455,3.059,3456,6.402,3457,3.059,3458,3.059,3459,3.059,3460,3.059,3461,4.692,3462,3.059,3463,5.709,3464,4.169]],["title/interfaces/User.html",[86,0.816,625,1.776]],["body/interfaces/User.html",[3,0.159,4,0.148,9,0.095,25,0.369,26,0.902,47,0.007,48,0.732,49,0.443,64,3.372,85,0.202,86,1.549,88,1.712,249,0.006,250,0.006,251,2.172,303,1.76,479,4.716,509,5.503,510,4.868,625,3.372,769,2.801,1949,5.979,2321,4.204,2322,4.643,2323,4.406,2324,4.406,2325,4.204]],["title/interfaces/UserData.html",[86,0.816,2325,3.022]],["body/interfaces/UserData.html",[3,0.162,4,0.151,9,0.097,25,0.376,26,0.913,47,0.007,48,0.736,49,0.432,64,2.519,85,0.203,86,1.559,88,1.722,249,0.006,250,0.006,251,2.214,303,1.755,479,4.151,509,5.528,510,4.894,625,3.268,769,2.816,1949,6.007,2321,4.285,2322,4.733,2323,4.492,2324,4.492,2325,5.175]],["title/injectables/UserService.html",[317,1.628,2117,3.167]],["body/injectables/UserService.html",[3,0.162,4,0.151,9,0.097,25,0.377,27,1.532,32,1.039,37,1.032,44,0.917,46,1.083,47,0.007,48,0.634,49,0.379,50,0.913,52,0.934,68,2.45,71,0.507,73,0.54,83,1.75,85,0.151,90,0.326,106,1.537,249,0.006,250,0.006,317,2.79,318,4.674,319,3.338,368,3.338,369,3.152,370,2.217,489,3.95,512,3.242,970,3.604,1731,5.88,2117,5.429,2321,5.777,2893,5.88,3465,5.88,3466,8.909,3467,6.618,3468,6.618,3469,7.988,3470,6.618,3471,7.988,3472,6.618,3473,6.618]],["title/interfaces/UserSession.html",[86,0.816,2705,3.337]],["body/interfaces/UserSession.html",[3,0.166,4,0.154,9,0.099,25,0.385,26,0.925,47,0.007,49,0.453,85,0.154,86,1.183,88,1.758,249,0.006,250,0.006,251,2.264,273,2.876,303,1.694,497,4.828,769,2.771,2705,5.793,3474,6.005,3475,7.971,3476,8.972,3477,8.972,3478,8.972,3479,8.972,3480,8.972,3481,6.759,3482,6.759]],["title/classes/UserUtils.html",[90,0.23,1897,3.542]],["body/classes/UserUtils.html",[3,0.153,4,0.142,9,0.092,25,0.355,27,1.272,32,1.001,44,0.823,46,1.043,47,0.007,48,0.611,49,0.365,50,0.88,52,0.9,62,1.657,71,0.438,85,0.142,88,1.648,90,0.307,93,2.509,106,1.481,249,0.006,250,0.006,303,1.491,393,2.712,510,4.132,678,1.886,754,4.734,769,1.924,1040,3.581,1409,5.922,1897,5.85,2496,6.349,3483,5.534,3484,7.697,3485,7.697,3486,7.697,3487,6.229,3488,7.697,3489,6.229,3490,6.229,3491,6.229,3492,8.726,3493,7.697,3494,7.697,3495,7.697,3496,7.697,3497,7.697,3498,7.697,3499,6.229,3500,8.354,3501,5.534,3502,6.229,3503,6.229,3504,6.229,3505,7.697,3506,6.229,3507,5.534,3508,5.534,3509,6.229,3510,5.534,3511,6.229,3512,6.229,3513,6.229]],["title/interfaces/UserWithPrivileges.html",[86,0.816,2323,3.167]],["body/interfaces/UserWithPrivileges.html",[3,0.167,4,0.156,9,0.1,25,0.388,26,0.929,47,0.007,48,0.69,49,0.385,64,2.594,85,0.205,86,1.575,88,1.736,249,0.006,250,0.006,251,2.28,303,1.738,479,4.225,509,5.183,510,4.361,625,3.622,769,2.509,1949,5.631,2321,4.414,2322,4.875,2323,5.522,2324,6.113,2325,4.414]],["title/classes/Utils.html",[90,0.23,1839,3.542]],["body/classes/Utils.html",[3,0.122,4,0.113,9,0.073,25,0.475,26,0.916,27,1.324,32,0.975,44,0.856,46,1.085,47,0.007,48,0.636,49,0.38,50,0.983,52,1.043,60,0.902,61,0.788,85,0.113,88,1.415,90,0.328,93,1.362,106,1.739,119,1.028,249,0.005,250,0.005,253,1.865,270,4.64,273,2.053,282,2.985,288,2.362,301,5.051,303,1.729,309,3.423,678,2.425,693,1.933,742,2.85,779,4.336,963,3.165,1040,2.851,1117,4.128,1309,3.551,1409,6.014,1412,7.799,1425,5.904,1502,5.904,1591,6.086,1716,5.416,1771,6.659,1801,7.004,1839,5.051,2958,4.405,3501,4.405,3514,4.405,3515,4.959,3516,4.959,3517,4.041,3518,4.959,3519,6.645,3520,6.645,3521,6.645,3522,6.645,3523,4.959,3524,6.645,3525,6.645,3526,4.959,3527,8.595,3528,6.645,3529,8.35,3530,6.645,3531,8.922,3532,8.35,3533,4.959,3534,6.645,3535,6.645,3536,6.645,3537,6.645,3538,4.959,3539,6.645,3540,6.645,3541,6.645,3542,8.008,3543,7.495,3544,6.645,3545,8.008,3546,4.959,3547,4.959,3548,4.959,3549,4.959,3550,6.645,3551,4.959,3552,4.959,3553,4.959]],["title/interfaces/ValidationError.html",[86,0.816,999,3.022]],["body/interfaces/ValidationError.html",[3,0.168,4,0.156,9,0.1,25,0.389,26,0.931,29,2.338,47,0.007,49,0.451,64,3.104,85,0.156,86,1.426,249,0.006,250,0.006,251,2.29,253,1.527,256,4.105,296,3.006,297,5.196,303,1.666,782,3.493,945,4.521,946,3.795,999,5.281,1002,4.641,1029,6.19,1034,5.571,3554,6.074,3555,6.074,3556,6.074,3557,6.836,3558,6.836,3559,6.637,3560,6.637,3561,8.145,3562,8.145,3563,8.145]],["title/pipes/ValidationErrorPipe.html",[958,1.663,2230,3.337]],["body/pipes/ValidationErrorPipe.html",[3,0.165,4,0.154,9,0.099,13,1.854,15,1.204,32,0.878,44,0.721,46,0.915,47,0.007,48,0.687,49,0.32,50,0.772,52,0.945,61,1.426,71,0.384,73,0.551,85,0.154,90,0.333,106,1.299,249,0.006,250,0.006,253,1.806,256,3.554,303,1.442,309,2.631,688,3.71,958,3.2,999,5.241,1002,4.077,1034,6.587,1065,3.405,2230,5.789,2992,4.192,2996,5.494,2998,5.494,3556,7.967,3559,6.587,3560,6.587,3564,7.181,3565,5.996,3566,6.749,3567,8.082,3568,6.749]],["title/components/ViewOptionsComponent.html",[0,0.17,233,0.88]],["body/components/ViewOptionsComponent.html",[0,0.241,1,0.749,2,1.101,3,0.095,4,0.089,5,0.823,6,0.838,7,0.823,8,0.823,9,0.057,15,0.695,16,1.751,17,1.748,18,0.749,19,1.143,21,1.101,23,1.101,25,0.222,26,0.642,27,1.317,37,0.607,44,0.878,46,0.528,47,0.007,48,0.633,49,0.363,50,0.445,60,1.021,61,0.893,71,0.411,73,0.318,77,0.983,81,0.644,85,0.089,87,3.362,88,1.362,89,3.05,90,0.192,93,1.07,109,3.871,110,1.7,112,4.018,113,1.635,114,1.227,115,0.823,116,1.186,117,1.292,118,0.682,119,1.803,120,0.823,121,1.392,122,0.735,123,0.792,124,0.763,125,0.823,126,0.749,127,0.823,128,0.763,129,0.792,130,0.823,131,0.763,132,0.823,133,0.763,134,0.823,135,0.749,136,0.792,137,0.823,138,0.763,139,0.823,140,0.792,141,0.749,142,1.153,143,1.284,144,1.186,145,0.749,146,1.186,147,0.735,148,1.836,149,0.749,150,0.682,151,0.823,152,0.749,153,1.268,154,0.749,155,0.749,156,0.763,157,0.823,158,0.749,159,0.823,160,0.778,161,0.708,162,1.292,163,0.763,164,0.823,165,0.763,166,1.499,167,0.823,168,0.763,169,0.823,170,0.763,171,0.763,172,0.823,173,0.763,174,0.823,175,0.763,176,0.823,177,0.749,178,0.792,179,0.763,180,0.859,181,0.823,182,0.749,183,0.823,184,0.749,185,0.763,186,0.823,187,0.763,188,1.392,189,0.763,190,1.186,191,0.823,192,0.763,193,0.823,194,0.763,195,0.823,196,0.749,197,0.778,198,0.749,199,0.823,200,0.749,201,0.807,202,1.061,203,0.749,204,0.763,205,0.763,206,0.823,207,0.749,208,1.556,209,0.735,210,0.823,211,0.749,212,0.778,213,0.749,214,0.749,215,0.823,216,0.763,217,0.823,218,1.186,219,0.763,220,0.823,221,0.763,222,0.823,223,0.823,224,0.763,225,0.823,226,0.735,227,0.911,228,0.749,229,0.763,230,0.823,231,0.763,232,0.823,233,1.444,234,1.809,235,1.186,236,0.749,237,0.792,238,0.695,239,0.749,240,0.749,241,0.807,242,0.778,243,0.823,244,0.749,245,0.823,246,0.735,247,0.792,248,0.823,249,0.004,250,0.004,255,3.276,277,1.389,303,1.002,306,2.825,334,3.117,370,1.304,392,1.389,393,2.581,395,2.025,426,1.179,535,2.646,536,3.902,570,2.09,573,1.669,574,1.451,575,1.629,576,1.669,585,2.161,586,2.238,655,1.802,656,1.484,658,1.956,660,1.518,661,1.712,662,2.076,663,1.712,668,2.093,669,2.093,670,2.14,672,1.252,675,2.14,680,1.712,681,1.669,706,2.189,742,2.825,743,3.015,744,2.534,745,2.602,750,1.804,755,2.418,770,2.833,772,2.09,773,2.324,796,2.525,826,1.854,833,2.418,835,2.788,886,2.238,893,2.238,1135,2.525,1189,6.019,1281,3.656,1301,4.268,1937,2.324,3569,7.467,3570,3.173,3571,5.852,3572,4.989,3573,5.852,3574,5.616,3575,3.459,3576,5.852,3577,3.893,3578,5.852,3579,3.893,3580,3.459,3581,3.459,3582,7.211,3583,3.459]],["title/components/ViewOptionsComponent-1.html",[0,0.142,233,0.734,693,1.515]],["body/components/ViewOptionsComponent-1.html",[0,0.224,1,0.659,2,1.002,3,0.084,4,0.078,5,0.724,6,0.737,7,0.724,8,0.724,9,0.05,15,0.611,16,1.741,17,1.738,18,0.659,19,1.041,21,1.002,23,1.002,25,0.291,26,0.585,27,1.394,37,0.534,44,0.902,46,0.464,47,0.007,48,0.604,49,0.361,50,0.392,60,1.384,61,1.21,62,1.1,65,2.44,71,0.449,73,0.279,74,1.102,77,0.895,81,0.566,85,0.078,87,3.191,88,1.281,89,2.895,90,0.169,93,0.941,110,2.305,112,4.255,113,1.781,114,1.611,115,0.724,116,1.08,117,1.33,118,0.6,119,1.834,120,0.724,121,1.292,122,0.647,123,0.697,124,0.672,125,0.724,126,0.659,127,0.724,128,0.672,129,1.245,130,0.724,131,0.672,132,0.724,133,0.672,134,0.724,135,0.659,136,0.697,137,0.724,138,0.672,139,0.724,140,0.697,141,0.659,142,1.071,143,1.242,144,1.08,145,0.659,146,1.08,147,0.647,148,1.782,149,0.659,150,0.6,151,0.724,152,0.659,153,1.396,154,0.659,155,0.659,156,0.672,157,0.724,158,0.659,159,0.724,160,0.684,161,0.623,162,1.199,163,0.672,164,0.724,165,0.672,166,1.492,167,0.724,168,0.672,169,0.724,170,0.672,171,0.672,172,0.724,173,0.672,174,0.724,175,0.672,176,0.724,177,0.659,178,0.697,179,0.672,180,1.037,181,0.724,182,0.659,183,0.724,184,0.659,185,0.672,186,0.724,187,0.672,188,1.292,189,0.672,190,1.08,191,0.724,192,0.672,193,0.724,194,0.672,195,0.724,196,0.659,197,0.684,198,0.659,199,0.724,200,0.659,201,0.71,202,0.966,203,0.659,204,1.199,205,0.672,206,0.724,207,0.659,208,1.477,209,0.647,210,0.724,211,0.659,212,0.684,213,0.659,214,0.659,215,0.724,216,0.672,217,0.724,218,1.08,219,0.672,220,0.724,221,0.672,222,0.724,223,0.724,224,0.672,225,0.724,226,0.647,227,0.829,228,0.659,229,0.672,230,0.724,231,0.672,232,0.724,233,1.37,234,1.751,235,1.08,236,0.659,237,0.697,238,0.611,239,0.659,240,0.659,241,0.71,242,0.684,243,0.724,244,0.659,245,0.724,246,0.647,247,0.697,248,0.724,249,0.004,250,0.004,277,1.223,282,1.906,306,2.908,334,3.765,370,1.148,392,1.824,393,2.667,394,1.546,395,1.782,426,1.037,535,2.329,536,3.729,570,1.839,573,2.192,574,1.277,575,2.139,576,2.192,585,1.902,586,1.97,655,1.971,656,1.306,658,2.26,660,1.993,661,2.248,662,2.137,663,2.69,668,2.705,669,2.705,670,2.766,671,1.223,672,1.644,673,1.782,674,1.728,675,2.331,678,1.852,679,1.728,680,2.248,681,2.192,688,1.469,693,1.336,706,1.993,742,3.112,743,3.284,744,3.061,745,3.143,750,2.369,755,2.128,770,3.421,772,2.745,773,2.045,796,2.221,826,1.631,833,2.128,835,2.454,847,2.604,886,1.97,893,2.94,1135,2.221,1189,6.132,1281,4.225,1301,3.886,1537,4.507,1543,2.454,1847,2.454,1868,2.792,1937,3.051,1938,2.221,3178,5.434,3464,3.044,3570,2.792,3571,5.434,3572,4.542,3573,5.434,3575,3.044,3576,5.434,3578,5.434,3580,3.044,3581,3.044,3583,3.044,3584,7.607,3585,7.611,3586,6.117,3587,5.113,3588,3.426,3589,3.426,3590,3.426,3591,3.426,3592,3.426,3593,3.044,3594,5.113,3595,5.113,3596,3.426,3597,3.426]],["title/interfaces/Workspace.html",[77,0.816,86,0.816]],["body/interfaces/Workspace.html",[3,0.166,4,0.155,9,0.099,25,0.385,26,0.926,47,0.007,48,0.74,49,0.435,71,0.385,77,1.662,85,0.155,86,1.517,88,1.695,143,1.299,185,1.587,249,0.006,250,0.006,251,2.267,253,1.512,303,1.546,497,4.832,769,2.877,2324,4.601,3598,6.013,3599,8.096,3600,8.096,3601,8.096,3602,8.977,3603,6.768]],["title/injectables/WorkspaceService.html",[317,1.628,1110,2.219]],["body/injectables/WorkspaceService.html",[3,0.118,4,0.11,9,0.071,25,0.273,26,0.744,27,1.551,32,0.846,37,1.15,44,0.931,46,1.12,47,0.007,48,0.656,49,0.392,50,0.944,52,1.061,60,1.341,61,0.764,62,1.701,68,2.733,71,0.45,73,0.392,77,1.699,83,1.27,85,0.11,88,1.608,90,0.237,106,1.589,142,1.139,150,1.384,180,1.331,237,1.609,249,0.005,250,0.005,253,1.902,270,3.383,309,3.22,317,2.272,318,4.529,319,2.423,321,2.542,323,4.468,328,5.126,332,4.421,344,6.898,345,6.898,368,2.423,369,2.288,370,1.609,489,2.867,508,3.265,512,3.187,769,2.736,970,3.567,990,4.094,1110,3.098,1113,4.04,1336,4.218,1499,5.373,2296,5.301,2456,4.659,2459,5.779,2487,3.915,2702,5.779,3517,5.301,3604,4.268,3605,5.779,3606,6.505,3607,6.505,3608,4.804,3609,6.505,3610,4.804,3611,6.505,3612,4.804,3613,4.804,3614,6.505,3615,4.804,3616,4.804,3617,4.804,3618,4.804,3619,4.804,3620,4.804]],["title/components/WorkspacesListPage.html",[0,0.17,236,0.897]],["body/components/WorkspacesListPage.html",[0,0.265,1,0.656,2,0.999,3,0.084,4,0.078,5,1.288,6,0.734,7,0.72,8,0.72,9,0.05,13,1.4,14,2.224,15,0.608,16,1.741,17,1.737,18,1.173,19,1.037,20,3.632,21,0.999,23,0.999,25,0.194,26,0.582,27,1.256,32,0.662,36,2.467,37,1.055,44,0.865,46,0.917,47,0.007,48,0.669,49,0.343,50,0.869,52,0.846,53,1.447,60,1.109,61,0.542,62,1.096,68,2.068,71,0.471,73,0.278,77,1.675,81,0.563,83,0.902,85,0.078,90,0.168,91,1.429,110,1.032,115,0.72,116,1.076,117,1.196,118,0.597,119,1.403,120,0.72,121,1.288,122,0.644,123,1.241,124,0.668,125,0.72,126,0.656,127,0.72,128,0.668,129,0.694,130,0.72,131,0.668,132,0.72,133,0.668,134,0.72,135,0.656,136,0.694,137,0.72,138,0.668,139,0.72,140,0.694,141,0.656,142,1.068,143,0.764,144,1.076,145,0.656,146,1.076,147,0.644,148,1.78,149,0.656,150,1.268,151,0.72,152,0.656,153,1.621,154,0.656,155,0.656,156,0.668,157,0.72,158,0.656,159,0.72,160,0.681,161,0.62,162,1.196,163,0.668,164,0.72,165,0.668,166,0.999,167,0.72,168,0.668,169,0.72,170,0.668,171,0.668,172,0.72,173,0.668,174,0.72,175,0.668,176,0.72,177,0.656,178,0.694,179,0.668,180,1.288,181,0.72,182,0.656,183,0.72,184,0.656,185,0.668,186,0.72,187,0.668,188,1.288,189,0.668,190,1.076,191,0.72,192,0.668,193,0.72,194,0.668,195,0.72,196,0.656,197,0.681,198,0.656,199,0.72,200,0.656,201,0.707,202,0.962,203,0.656,204,0.668,205,0.668,206,0.72,207,0.656,208,1.474,209,0.644,210,0.72,211,0.656,212,0.681,213,0.656,214,0.656,215,0.72,216,0.668,217,0.72,218,1.076,219,0.668,220,0.72,221,0.668,222,0.72,223,0.72,224,0.668,225,0.72,226,0.644,227,0.826,228,0.656,229,0.668,230,0.72,231,0.668,232,0.72,233,0.962,234,1.076,235,1.076,236,1.302,237,1.875,238,1.526,239,0.656,240,0.656,241,0.707,242,0.681,243,0.72,244,0.656,245,0.72,246,0.644,247,0.694,248,0.72,249,0.004,250,0.004,253,1.511,263,3.303,277,1.216,305,2.131,309,2.823,321,2.603,332,3.462,358,2.649,384,3.525,426,1.032,529,4.926,539,3.652,540,3.857,573,1.462,574,1.271,575,1.426,576,1.462,655,1.524,656,1.299,657,1.773,679,2.569,897,3.303,941,2.735,970,2.298,1109,2.034,1110,3.749,1115,3.303,1133,2.317,1134,2.117,1148,2.21,1171,3.028,1205,6.289,1272,4.525,1327,3.871,1330,3.871,1331,3.871,1346,2.317,1364,3.04,1385,4.525,2363,4.525,2364,4.525,2368,4.525,2456,3.648,2475,2.591,2476,4.97,2477,4.151,2484,3.028,2487,2.778,2488,3.028,2494,4.525,2495,4.525,2604,4.151,3187,3.028,3208,3.028,3217,3.028,3281,4.525,3335,4.525,3621,7.351,3622,6.766,3623,5.094,3624,3.409,3625,5.094,3626,5.094,3627,3.409,3628,3.409,3629,5.094,3630,3.409,3631,5.094,3632,5.094,3633,3.409,3634,3.409,3635,3.409]],["title/coverage.html",[3636,5.661]],["body/coverage.html",[0,0.353,1,0.576,9,0.044,10,3.759,11,2.991,12,3.759,20,1.606,39,2.142,43,1.94,47,0.007,49,0.219,62,0.644,63,1.283,66,1.315,77,0.524,81,0.494,86,1.63,90,0.371,114,2.961,117,0.904,118,0.986,122,0.565,124,0.587,126,0.576,128,0.587,131,0.587,133,0.587,135,0.576,138,0.587,140,0.609,141,0.576,143,1.025,145,0.576,147,0.565,149,0.576,152,0.576,154,0.576,155,0.576,156,0.587,158,0.576,160,0.598,163,0.587,165,0.587,168,0.587,170,0.587,171,0.904,173,0.587,175,0.587,177,0.576,179,0.587,182,0.576,184,0.576,187,0.587,189,0.587,192,0.587,194,0.587,196,0.576,198,0.576,200,0.576,203,0.576,205,0.587,207,0.576,209,0.565,211,0.576,213,0.576,214,0.576,216,0.587,219,0.587,221,0.587,224,0.587,226,0.565,227,0.485,228,0.576,229,0.587,231,0.587,233,0.871,236,0.576,238,0.534,240,0.576,242,0.598,244,0.576,246,0.565,249,0.003,250,0.003,252,3.506,266,2.142,299,1.858,317,2.976,318,1.509,320,2.658,321,0.962,335,2.274,361,3.506,381,2.658,419,3.506,427,2.274,431,2.274,464,2.274,467,2.274,470,2.274,474,2.274,481,1.606,482,2.658,523,2.658,537,1.661,538,1.94,539,1.35,540,1.465,541,1.72,560,2.033,567,1.661,578,1.94,625,1.14,678,2.957,697,2.658,698,2.438,699,2.658,756,2.758,781,2.658,836,2.658,849,2.658,850,3.759,858,2.274,870,2.274,915,2.658,944,1.606,958,2.577,963,4.21,999,1.94,1008,2.658,1009,2.658,1023,2.658,1024,2.658,1033,2.033,1067,3.135,1100,4.279,1101,2.274,1102,3.759,1110,1.425,1129,1.858,1150,2.274,1151,3.759,1164,2.274,1165,3.759,1180,1.606,1183,2.438,1186,2.438,1189,3.304,1198,2.274,1199,2.274,1200,2.274,1202,2.274,1205,2.274,1210,2.438,1225,2.658,1226,4.279,1241,2.658,1303,2.274,1304,2.658,1305,2.658,1313,4.279,1405,2.658,1419,2.274,1457,2.658,1458,2.142,1460,2.658,1488,2.274,1489,3.759,1490,3.759,1499,2.033,1509,2.438,1531,2.142,1532,2.438,1537,1.858,1538,2.658,1552,2.658,1589,2.658,1590,2.658,1600,2.658,1613,2.658,1619,1.72,1620,4.646,1621,4.646,1624,1.858,1626,1.858,1628,1.606,1629,1.606,1631,2.274,1632,4.646,1633,3.304,1634,3.759,1661,2.658,1662,2.658,1775,2.658,1776,2.658,1787,2.658,1812,6.334,1839,2.274,1859,2.658,1860,2.438,1861,2.658,1897,2.274,1945,2.438,1952,2.658,2003,2.658,2004,2.438,2005,2.658,2029,2.658,2030,2.438,2031,2.658,2045,2.658,2046,2.658,2073,2.658,2074,2.658,2078,2.274,2079,3.759,2093,2.658,2094,2.438,2095,2.658,2103,2.274,2105,2.658,2106,2.658,2112,2.658,2117,2.033,2149,2.438,2208,2.438,2210,2.438,2215,2.438,2218,2.438,2223,2.438,2230,2.142,2235,2.438,2251,2.658,2252,2.658,2262,2.658,2263,2.658,2285,2.658,2321,1.94,2322,4.532,2323,2.033,2325,1.94,2326,3.759,2327,2.658,2356,2.658,2426,2.658,2439,2.658,2444,2.658,2445,2.658,2446,2.658,2474,2.658,2475,4.279,2496,2.274,2497,2.658,2521,4.098,2524,2.438,2538,2.438,2568,2.658,2569,2.658,2571,2.438,2597,2.658,2606,2.658,2607,2.658,2616,2.658,2654,2.658,2699,2.274,2700,2.658,2705,2.142,2709,2.274,2764,2.274,2765,2.658,2808,2.274,2811,2.658,2830,2.658,2875,2.658,2876,3.759,2891,2.274,2892,2.438,2894,2.658,2904,2.033,2921,2.033,2945,2.658,2946,2.658,2947,2.658,2961,2.658,2977,3.759,2991,2.142,2993,2.658,2994,2.658,3002,2.658,3003,2.438,3004,2.658,3035,2.658,3075,3.759,3083,2.142,3091,3.506,3115,2.142,3174,2.658,3175,2.274,3244,2.658,3250,2.142,3251,4.532,3252,3.759,3265,2.142,3266,2.658,3273,2.658,3307,2.438,3364,2.142,3373,2.142,3374,2.658,3404,2.658,3405,3.759,3415,2.658,3428,2.658,3465,2.658,3474,2.658,3483,2.658,3514,2.658,3554,2.658,3555,2.658,3564,2.658,3565,2.658,3569,2.658,3570,3.759,3584,2.658,3598,2.658,3604,2.658,3621,2.658,3636,2.658,3637,2.274,3638,2.991,3639,8.956,3640,2.991,3641,7.223,3642,5.63,3643,4.613,3644,5.63,3645,2.991,3646,8.521,3647,4.613,3648,2.991,3649,2.991,3650,5.63,3651,2.991,3652,2.991,3653,2.991,3654,2.991,3655,5.63,3656,5.63,3657,2.991,3658,2.991,3659,8.288,3660,2.991,3661,2.991,3662,2.991,3663,2.658,3664,2.658,3665,8.521,3666,2.658,3667,2.658,3668,2.658,3669,4.613,3670,4.613,3671,6.328,3672,4.613,3673,2.658,3674,2.658,3675,2.658,3676,2.658,3677,2.658,3678,2.991,3679,2.991,3680,2.658,3681,2.658,3682,2.658,3683,2.658,3684,2.658,3685,2.658,3686,2.658,3687,2.991,3688,2.991,3689,7.223,3690,2.991,3691,2.991,3692,2.991,3693,2.991,3694,2.991,3695,2.991,3696,4.613,3697,4.613,3698,4.613,3699,7.223,3700,2.991,3701,4.613,3702,2.991,3703,5.63,3704,4.613,3705,2.991,3706,2.991,3707,2.991,3708,4.613,3709,4.613,3710,2.991,3711,2.991,3712,2.991,3713,2.991,3714,2.991,3715,2.991,3716,2.991,3717,2.991,3718,2.991,3719,2.991,3720,2.991,3721,2.991,3722,2.991,3723,2.991,3724,2.991,3725,2.658,3726,2.991,3727,2.658,3728,2.658,3729,2.658,3730,4.098,3731,2.658,3732,4.098,3733,2.658,3734,4.098,3735,2.658,3736,2.658,3737,2.658,3738,2.658,3739,4.098,3740,4.098,3741,2.658,3742,2.658,3743,4.098,3744,2.658,3745,2.991]],["title/dependencies.html",[399,3.011,3746,3.452]],["body/dependencies.html",[47,0.007,73,0.544,74,2.146,83,1.765,249,0.006,250,0.006,393,1.981,399,3.583,415,7.132,426,2.021,460,4.145,573,3.692,574,2.488,575,3.738,576,3.692,723,4.327,1283,5.438,1667,6.101,1837,5.929,1838,5.929,2152,5.438,2196,5.929,2197,5.929,2789,5.072,2847,5.929,3593,5.929,3747,6.674,3748,9.469,3749,6.674,3750,8.028,3751,6.674,3752,6.674,3753,6.674,3754,6.674,3755,6.674,3756,6.674,3757,8.934,3758,6.674,3759,6.674,3760,6.674,3761,6.674,3762,6.674,3763,5.929,3764,6.674,3765,6.674,3766,6.674,3767,6.674,3768,6.674,3769,6.674,3770,6.674,3771,6.674]],["title/miscellaneous/enumerations.html",[3772,2.413,3773,4.982]],["body/miscellaneous/enumerations.html",[20,4.292,25,0.377,47,0.007,49,0.314,60,1.454,61,1.544,142,1.4,153,1.538,227,1.074,249,0.006,250,0.006,252,5.037,261,5.725,262,5.184,291,3.447,296,3.515,297,5.037,298,5.401,579,4.965,693,3.117,727,4.116,767,4.746,1419,5.037,1689,4.965,2524,5.401,2527,7.102,2546,5.888,2547,5.888,3091,5.037,3134,6.076,3137,6.515,3138,6.076,3255,6.515,3257,6.515,3259,6.515,3261,6.515,3263,6.515,3368,5.401,3370,5.401,3424,5.888,3772,4.116,3773,5.888,3774,6.627,3775,6.627,3776,8.585,3777,8.585,3778,6.627,3779,7.994,3780,7.994]],["title/miscellaneous/functions.html",[1407,4.262,3772,2.413]],["body/miscellaneous/functions.html",[0,0.255,9,0.102,16,0.95,17,0.95,21,1.044,23,1.044,25,0.303,28,2.467,46,1.242,47,0.007,48,0.728,49,0.43,50,1.048,52,0.999,61,0.847,64,2.029,66,3.414,85,0.122,88,1.466,90,0.343,118,0.932,142,0.932,147,1.005,237,1.084,238,1.565,249,0.005,250,0.005,253,1.556,256,3.414,303,1.565,321,2.648,341,3.813,360,2.858,425,3.74,479,3.623,779,4.312,782,2.283,858,5.901,870,5.294,963,3.697,1037,4.339,1087,6.966,1116,5.035,1129,4.327,1407,4.046,1488,5.901,1489,4.339,1490,5.677,1493,4.73,1537,3.307,1616,4.339,1812,4.339,1896,5.677,2504,4.73,2538,6.327,2588,7.028,2595,4.046,2753,5.677,2874,5.677,3307,5.677,3663,4.73,3664,6.898,3666,4.73,3667,6.189,3668,4.73,3673,4.73,3674,6.189,3675,4.73,3676,6.189,3677,6.189,3680,4.73,3681,4.73,3682,6.189,3683,4.73,3684,4.73,3685,4.73,3686,6.189,3729,6.189,3730,7.79,3731,6.189,3734,4.73,3735,6.189,3736,6.189,3739,4.73,3740,6.898,3741,6.189,3742,6.189,3763,6.189,3772,3.307,3781,5.324,3782,5.324,3783,5.324,3784,5.324,3785,6.966,3786,5.324,3787,5.324,3788,5.324,3789,5.324,3790,5.324,3791,5.324,3792,5.324,3793,5.324,3794,5.324,3795,6.966,3796,5.324,3797,5.324,3798,8.547,3799,5.324,3800,5.324,3801,4.339,3802,4.73,3803,8.236,3804,5.324,3805,5.324,3806,4.73,3807,4.73,3808,5.324,3809,6.966,3810,5.324,3811,5.324,3812,6.189,3813,5.324,3814,5.324,3815,5.324,3816,5.324,3817,5.324,3818,5.324,3819,5.324,3820,5.324,3821,5.324]],["title/index.html",[25,0.221,1342,2.641,2983,2.783]],["body/index.html",[4,0.145,17,1.502,47,0.007,136,1.29,143,0.95,161,1.152,202,1.197,227,1.027,249,0.006,250,0.006,358,3.295,389,6.911,398,2.588,442,4.816,449,5.629,638,5.571,776,4.18,954,3.643,955,3.643,1073,4.816,1239,5.912,1342,4.307,1428,6.672,1546,3.782,1591,4.816,1664,6.97,1718,4.816,1918,4.816,2588,6.398,2746,5.629,2747,6.911,2752,5.629,2982,5.287,2983,4.538,3088,5.164,3605,6.911,3637,6.672,3822,6.336,3823,6.336,3824,6.336,3825,6.336,3826,6.336,3827,6.911,3828,8.418,3829,6.336,3830,8.778,3831,6.336,3832,6.336,3833,6.336,3834,5.629,3835,6.336,3836,6.336,3837,6.336,3838,8.398,3839,6.336,3840,6.336,3841,6.336,3842,6.336,3843,6.336,3844,5.164,3845,6.672,3846,6.336,3847,6.336,3848,6.336,3849,6.336,3850,5.164,3851,6.911,3852,7.779,3853,7.779,3854,8.418,3855,5.629,3856,6.336,3857,6.336,3858,6.336,3859,5.629,3860,6.336,3861,6.336,3862,6.336,3863,4.816,3864,6.336,3865,6.336,3866,6.336,3867,6.336,3868,6.336,3869,6.336,3870,6.336]],["title/license.html",[1342,2.641,2564,3.167,2983,2.783]],["body/license.html",[47,0.007,249,0.007,250,0.007,382,6.795,2564,6.233]],["title/modules.html",[398,2.603]],["body/modules.html",[47,0.006,249,0.006,250,0.006,397,5.249,398,2.821,404,4.946,405,4.121,453,5.249,457,4.946,575,3.986,1174,5.249,1179,4.946,1398,5.249,1401,4.946,1667,7.24,1743,8.463,2314,5.249,2317,4.946,2794,5.249,2798,4.946,3382,5.249,3386,4.946,3517,7.703,3871,9.773,3872,9.453]],["title/overview.html",[3873,5.661]],["body/overview.html",[1,1.42,2,0.943,47,0.007,124,1.708,126,1.42,128,1.447,135,1.42,141,1.42,145,1.42,147,1.394,149,1.42,152,1.42,154,1.42,155,1.42,158,1.42,165,1.447,173,1.447,175,1.447,177,1.42,179,1.447,182,1.42,187,1.447,196,1.42,198,1.42,200,1.42,203,1.42,207,1.42,209,1.394,211,1.42,213,1.42,214,1.42,224,1.447,226,1.394,228,1.42,233,1.394,236,1.42,239,0.925,249,0.005,250,0.005,251,1.611,319,2.426,397,6.962,398,1.964,399,3.495,400,4.272,401,4.272,402,4.272,403,4.272,404,5.285,405,5.198,406,3.885,407,2.501,408,2.228,425,2.582,453,7.216,454,4.272,455,4.272,456,4.272,457,5.285,693,1.875,1040,2.765,1174,7.402,1175,4.272,1176,4.272,1177,4.272,1178,4.272,1179,5.285,1180,3.962,1398,6.01,1399,4.272,1400,4.272,1401,5.285,1419,3.655,2103,3.655,2314,6.01,2315,4.272,2316,4.272,2317,5.285,2602,3.919,2794,7.258,2795,4.272,2796,4.272,2797,4.272,2798,5.285,2991,5.285,2992,2.987,3250,5.285,3265,5.285,3364,5.285,3373,5.285,3382,7.385,3383,4.272,3384,4.272,3385,4.272,3386,5.285,3507,4.272,3725,4.272,3873,4.272,3874,4.808,3875,4.808,3876,4.808,3877,4.808]],["title/properties.html",[26,0.641,3746,3.452]],["body/properties.html",[26,0.872,47,0.007,249,0.007,250,0.007,3802,6.773,3878,7.624]],["title/routes.html",[425,3.421]],["body/routes.html",[47,0.007,249,0.007,250,0.007,425,4.113]],["title/miscellaneous/typealiases.html",[3772,2.413,3879,5.608]],["body/miscellaneous/typealiases.html",[25,0.422,47,0.006,49,0.352,88,1.399,204,1.674,249,0.006,250,0.006,393,2.535,1281,4.74,1531,5.307,1532,6.039,1536,7.586,2891,5.632,2892,6.039,3772,4.603,3880,7.41,3881,7.41,3882,8.539,3883,7.41,3884,7.41]],["title/miscellaneous/variables.html",[3772,2.413,3885,4.982]],["body/miscellaneous/variables.html",[2,1.322,9,0.074,17,0.905,20,3.621,25,0.289,28,3.512,29,1.734,41,3.149,47,0.007,49,0.425,60,1.605,61,1.404,75,3.287,81,1.115,122,0.957,131,0.994,133,0.994,138,0.994,156,0.994,163,0.994,168,0.994,170,0.994,184,0.975,185,0.994,189,0.994,192,0.994,194,0.994,205,0.994,216,0.994,219,0.994,221,0.994,229,0.994,231,0.994,240,0.975,244,0.975,246,0.957,249,0.005,250,0.005,256,2.966,270,4.72,282,2.514,288,2.546,291,2.636,296,2.966,318,2.557,323,3.823,324,5.992,328,3.621,339,3.287,360,4.069,361,6.574,362,5.496,396,1.976,398,2.755,399,3.621,410,3.025,411,2.414,422,3.287,424,3.025,459,3.149,461,3.446,497,3.025,512,3.713,539,2.287,672,1.63,808,4.504,953,3.744,1031,4.915,1032,3.631,1067,4.584,1070,4.504,1428,5.126,1433,5.992,1458,3.631,1503,5.496,1509,6.584,1616,5.496,1697,3.631,1716,4.131,1789,4.131,1933,3.853,2149,4.131,2155,4.504,2156,4.504,2158,4.504,2160,4.504,2162,4.504,2163,4.504,2165,4.504,2166,4.504,2168,4.504,2170,5.992,2172,4.504,2174,5.992,2176,5.992,2177,4.504,2179,4.504,2181,4.504,2183,4.504,2185,4.504,2187,4.504,2189,4.504,2191,4.504,2193,4.504,2195,4.504,2230,3.631,2235,5.496,2236,5.496,2237,4.504,2238,4.131,2239,4.504,2240,4.504,2241,4.504,2571,6.584,3284,4.504,3405,5.496,3727,4.504,3728,4.504,3732,4.504,3733,5.992,3737,4.504,3738,5.992,3743,4.504,3744,5.992,3772,3.149,3801,6.584,3827,4.504,3845,3.853,3851,4.504,3855,4.504,3885,4.504,3886,6.744,3887,5.069,3888,5.069,3889,5.069,3890,5.069,3891,6.744,3892,5.069,3893,5.069,3894,5.069,3895,5.069,3896,5.069,3897,5.069,3898,5.069,3899,5.069,3900,6.744,3901,5.069,3902,5.069,3903,5.069,3904,6.744,3905,6.744,3906,4.504,3907,5.069,3908,5.069,3909,5.069]],["title/additional-documentation/architecture.html",[238,0.693,1968,2.52,3910,3.452]],["body/additional-documentation/architecture.html",[0,0.316,2,1.696,9,0.14,17,0.905,18,1.298,28,3.512,47,0.006,48,0.403,49,0.24,57,3.958,61,0.806,90,0.25,118,1.414,142,0.888,143,0.76,185,0.994,239,1.555,249,0.005,250,0.005,251,2.539,262,3.287,270,2.636,292,4.131,296,4.092,321,1.63,322,4.131,396,3.15,398,3.3,425,2.722,625,1.932,655,1.267,673,4.498,674,2.557,688,2.174,782,3.25,791,3.149,944,2.722,946,4.207,958,2.704,968,2.915,972,2.814,1004,7.965,1025,4.504,1040,4.645,1055,4.504,1073,6.899,1087,4.131,1243,7.473,1406,4.504,1407,3.853,1416,5.786,1697,4.83,1718,7.182,1719,6.733,1834,2.915,1968,4.915,2103,5.126,2104,7.177,2422,3.853,2578,4.504,2644,5.992,2874,5.496,2992,5.018,3637,6.709,3807,4.504,3812,7.177,3850,7.532,3859,4.504,3863,5.126,3906,4.504,3910,6.733,3911,5.069,3912,6.744,3913,7.965,3914,8.966,3915,5.069,3916,5.069,3917,8.457,3918,4.131,3919,5.069,3920,5.069,3921,5.069,3922,5.069,3923,5.069,3924,5.069,3925,4.504,3926,5.069,3927,8.079,3928,6.744,3929,5.069,3930,5.069,3931,5.069,3932,5.069,3933,5.069,3934,4.504,3935,7.473,3936,5.069,3937,8.827,3938,5.069,3939,5.069,3940,5.069,3941,5.069,3942,5.069,3943,5.069,3944,5.069,3945,5.069,3946,5.069,3947,6.744,3948,5.069,3949,6.176,3950,5.069,3951,7.579,3952,5.069,3953,5.069,3954,5.069,3955,5.069,3956,5.069,3957,5.069,3958,5.069,3959,5.069,3960,5.069,3961,7.579,3962,5.069,3963,5.069,3964,5.069,3965,5.069]],["title/additional-documentation/localization.html",[212,0.776,238,0.693,1968,2.52]],["body/additional-documentation/localization.html",[9,0.122,17,1.546,47,0.007,60,1.111,62,1.637,86,1.07,117,1.198,143,0.916,153,1.176,180,0.934,212,1.22,249,0.006,250,0.006,296,2.686,306,2.62,358,3.177,755,3.794,782,3.551,826,3.622,967,3.512,1073,5.78,1248,4.539,1591,4.643,1664,4.643,1801,4.978,2238,4.978,2420,5.427,2421,5.427,2422,4.643,2529,5.427,2595,5.78,2768,5.427,2774,8.075,2776,6.757,2778,6.757,2779,5.427,2780,6.757,2782,6.757,2785,7.699,2788,5.427,2789,4.643,2982,4.152,3043,4.978,3475,5.427,3508,5.427,3510,5.427,3559,4.978,3560,4.978,3806,5.427,3834,6.757,3838,5.427,3844,4.978,3845,4.643,3863,5.78,3913,7.357,3917,5.427,3918,4.978,3925,7.357,3934,5.427,3935,6.757,3949,4.978,3966,6.109,3967,6.109,3968,6.109,3969,6.109,3970,6.109,3971,7.605,3972,6.109,3973,6.109,3974,6.109,3975,6.109,3976,6.109,3977,6.109,3978,7.605,3979,6.109,3980,6.109,3981,6.109,3982,6.109,3983,8.666,3984,6.109,3985,6.109,3986,7.605,3987,7.605,3988,7.605,3989,6.109,3990,7.605,3991,6.109,3992,6.109,3993,8.666,3994,6.109,3995,7.605,3996,6.109,3997,6.109,3998,6.109,3999,6.109,4000,8.281,4001,6.109,4002,6.109,4003,6.109,4004,6.109,4005,6.109,4006,6.109]],["title/additional-documentation/continuos-integration.html",[162,0.653,238,0.595,1968,2.161,4007,2.96]],["body/additional-documentation/continuos-integration.html",[9,0.104,47,0.006,142,1.234,161,1.282,162,1.382,238,1.258,249,0.006,250,0.006,358,3.666,361,5.357,369,3.357,778,5.378,1416,5.048,1428,5.357,1630,4.791,1697,5.94,2588,5.357,2753,6.758,3637,6.303,3801,5.744,3844,5.744,3845,5.357,3850,6.758,3863,6.303,3918,7.181,3949,6.758,4007,6.262,4008,7.049,4009,8.293,4010,7.049,4011,7.049,4012,7.049,4013,7.049,4014,8.293,4015,7.049,4016,7.049,4017,7.049,4018,7.049,4019,7.049,4020,7.049,4021,7.049,4022,7.049,4023,7.049,4024,7.049,4025,7.049,4026,7.049,4027,7.049]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["0",{"_index":678,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["0.0.1",{"_index":3878,"title":{},"body":{"properties.html":{}}}],["0.01rem",{"_index":752,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0.1",{"_index":1941,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["0.1.43",{"_index":3764,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":3756,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":3771,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":832,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.2",{"_index":692,"title":{},"body":{"components/BoardPage.html":{}}}],["0.25rem",{"_index":2938,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["0.2rem",{"_index":1985,"title":{},"body":{"components/InputComponent.html":{}}}],["0.2s",{"_index":746,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["0.35rem",{"_index":2826,"title":{},"body":{"components/SettingsPage.html":{}}}],["0.4rem",{"_index":1983,"title":{},"body":{"components/InputComponent.html":{}}}],["0.4s",{"_index":1934,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["0.5",{"_index":771,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["0.5rem",{"_index":751,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["0.5s",{"_index":777,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0.7",{"_index":848,"title":{},"body":{"components/CardComponent.html":{}}}],["0.75",{"_index":1948,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["0.75em",{"_index":1994,"title":{},"body":{"components/InputComponent.html":{}}}],["0.75rem",{"_index":825,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{}}}],["0.8125rem",{"_index":820,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.8rem",{"_index":2002,"title":{},"body":{"components/InputComponent.html":{}}}],["0/1",{"_index":3665,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3697,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3696,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3655,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3662,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":3723,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3641,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":3720,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3654,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3646,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3659,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3656,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3671,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3699,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3689,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3698,"title":{},"body":{"coverage.html":{}}}],["00b300",{"_index":2928,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["0a95d0",{"_index":765,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0xffffffff",{"_index":2509,"title":{},"body":{"classes/Random.html":{}}}],["1",{"_index":693,"title":{"components/ViewOptionsComponent-1.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":2516,"title":{},"body":{"classes/Random.html":{}}}],["1.0.2",{"_index":3768,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":3755,"title":{},"body":{"dependencies.html":{}}}],["1.11.2",{"_index":3762,"title":{},"body":{"dependencies.html":{}}}],["1.22.17",{"_index":3868,"title":{},"body":{"index.html":{}}}],["1.25rem",{"_index":821,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1.5",{"_index":829,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1.5em",{"_index":1804,"title":{},"body":{"components/IconComponent.html":{}}}],["1.5rem",{"_index":901,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["1/1",{"_index":3639,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":3695,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3721,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":3724,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3643,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":3691,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":3693,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":754,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SettingsPage.html":{},"classes/UserUtils.html":{}}}],["10/20",{"_index":3651,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":114,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["1000",{"_index":2932,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["10000000",{"_index":3512,"title":{},"body":{"classes/UserUtils.html":{}}}],["100px",{"_index":2647,"title":{},"body":{"components/SchedulePage.html":{}}}],["100vh",{"_index":892,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["10px",{"_index":112,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["11/19",{"_index":3649,"title":{},"body":{"coverage.html":{}}}],["11/26",{"_index":3719,"title":{},"body":{"coverage.html":{}}}],["11/27",{"_index":3717,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":3692,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":3647,"title":{},"body":{"coverage.html":{}}}],["12/22",{"_index":3658,"title":{},"body":{"coverage.html":{}}}],["123456789",{"_index":2505,"title":{},"body":{"classes/Random.html":{}}}],["1240px",{"_index":912,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["12px",{"_index":1007,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["13",{"_index":3875,"title":{},"body":{"overview.html":{}}}],["13.2.0",{"_index":3748,"title":{},"body":{"dependencies.html":{}}}],["13.2.5",{"_index":3870,"title":{},"body":{"index.html":{}}}],["13.3.0",{"_index":3750,"title":{},"body":{"dependencies.html":{}}}],["13/13",{"_index":3722,"title":{},"body":{"coverage.html":{}}}],["130px",{"_index":2643,"title":{},"body":{"components/SchedulePage.html":{}}}],["14",{"_index":3690,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":3640,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":3874,"title":{},"body":{"overview.html":{}}}],["150",{"_index":3596,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["15px",{"_index":847,"title":{},"body":{"components/CardComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{}}}],["16",{"_index":2521,"title":{},"body":{"classes/Random.html":{},"coverage.html":{}}}],["16.13.0",{"_index":3867,"title":{},"body":{"index.html":{}}}],["16/19",{"_index":3661,"title":{},"body":{"coverage.html":{}}}],["17/24",{"_index":3653,"title":{},"body":{"coverage.html":{}}}],["18000",{"_index":2522,"title":{},"body":{"classes/Random.html":{}}}],["1em",{"_index":676,"title":{},"body":{"components/BoardPage.html":{}}}],["1px",{"_index":834,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{}}}],["1rem",{"_index":663,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["1s",{"_index":2936,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["2",{"_index":767,"title":{},"body":{"components/BoardTaskComponent.html":{},"classes/Enum.html":{},"components/InputComponent.html":{},"components/UpperNavigationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["2.3.0",{"_index":3767,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":3245,"title":{},"body":{"components/TaskListPage.html":{}}}],["2/3",{"_index":3688,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2627,"title":{},"body":{"components/SchedulePage.html":{}}}],["200",{"_index":808,"title":{},"body":{"components/ButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["200px",{"_index":3464,"title":{},"body":{"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["20px",{"_index":888,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["22",{"_index":3712,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":815,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"components/SnackbarComponent.html":{}}}],["25",{"_index":823,"title":{},"body":{"components/ButtonComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["250ms",{"_index":689,"title":{},"body":{"components/BoardPage.html":{}}}],["250px",{"_index":2887,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["255",{"_index":3495,"title":{},"body":{"classes/UserUtils.html":{}}}],["25px",{"_index":844,"title":{},"body":{"components/CardComponent.html":{}}}],["28px",{"_index":1005,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["29",{"_index":3876,"title":{},"body":{"overview.html":{}}}],["29px",{"_index":3247,"title":{},"body":{"components/TaskListPage.html":{}}}],["2ecc71",{"_index":780,"title":{},"body":{"components/BoardTaskComponent.html":{},"pipes/StatusColorPipe.html":{},"components/TaskListPage.html":{}}}],["2px",{"_index":835,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["2rem",{"_index":657,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["3",{"_index":1419,"title":{},"body":{"classes/Enum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3/3",{"_index":3670,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":3702,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2748,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["300",{"_index":1937,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["300px",{"_index":665,"title":{},"body":{"components/BoardPage.html":{}}}],["30px",{"_index":2424,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{}}}],["315px",{"_index":2824,"title":{},"body":{"components/SettingsPage.html":{}}}],["32px",{"_index":760,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["36969",{"_index":2519,"title":{},"body":{"classes/Random.html":{}}}],["36px",{"_index":1950,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["39;one&#39",{"_index":1422,"title":{},"body":{"classes/Enum.html":{}}}],["39;three&#39",{"_index":1424,"title":{},"body":{"classes/Enum.html":{}}}],["39;two&#39",{"_index":1423,"title":{},"body":{"classes/Enum.html":{}}}],["3px",{"_index":1939,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["4",{"_index":3424,"title":{},"body":{"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4.2.3",{"_index":3759,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":3704,"title":{},"body":{"coverage.html":{}}}],["4/18",{"_index":3713,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":3700,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":3703,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1933,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"miscellaneous/variables.html":{}}}],["4000",{"_index":2907,"title":{},"body":{"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{}}}],["400px",{"_index":1287,"title":{},"body":{"injectables/DialogService.html":{},"components/InputComponent.html":{}}}],["401",{"_index":1479,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":2138,"title":{},"body":{"components/LoginPage.html":{}}}],["404",{"_index":2143,"title":{},"body":{"components/LoginPage.html":{}}}],["40px",{"_index":1610,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["41",{"_index":3498,"title":{},"body":{"classes/UserUtils.html":{}}}],["42",{"_index":3718,"title":{},"body":{"coverage.html":{}}}],["422",{"_index":2558,"title":{},"body":{"components/RegisterPage.html":{}}}],["4294967296",{"_index":2523,"title":{},"body":{"classes/Random.html":{}}}],["42px",{"_index":819,"title":{},"body":{"components/ButtonComponent.html":{}}}],["43",{"_index":3705,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":3678,"title":{},"body":{"coverage.html":{}}}],["450px",{"_index":910,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["45deg",{"_index":2941,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["46px",{"_index":2353,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["4a5465",{"_index":3000,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["4px",{"_index":822,"title":{},"body":{"components/ButtonComponent.html":{},"components/SettingsPage.html":{}}}],["4rem",{"_index":898,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/TaskListPage.html":{}}}],["5",{"_index":764,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/SchedulePage.html":{}}}],["5/11",{"_index":3679,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":3642,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":3715,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":3726,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":756,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["500",{"_index":845,"title":{},"body":{"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["500px",{"_index":905,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["520px",{"_index":913,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["54",{"_index":3657,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":3725,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["55px",{"_index":1986,"title":{},"body":{"components/InputComponent.html":{}}}],["57",{"_index":3648,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":773,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/ForgotPasswordPage.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["6",{"_index":3507,"title":{},"body":{"classes/UserUtils.html":{},"overview.html":{}}}],["6.1.0",{"_index":3757,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":3669,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":3645,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":3716,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1938,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["60px",{"_index":1149,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["62px",{"_index":3463,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["64px",{"_index":887,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{}}}],["65535",{"_index":2520,"title":{},"body":{"classes/Random.html":{}}}],["66",{"_index":3687,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2602,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"overview.html":{}}}],["7.1.0",{"_index":3761,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":3765,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":3707,"title":{},"body":{"coverage.html":{}}}],["7/16",{"_index":3706,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":3709,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":3652,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["71",{"_index":3714,"title":{},"body":{"coverage.html":{}}}],["720px",{"_index":914,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["74px",{"_index":2959,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["75",{"_index":3701,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":3877,"title":{},"body":{"overview.html":{}}}],["770px",{"_index":906,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["7px",{"_index":846,"title":{},"body":{"components/CardComponent.html":{}}}],["8.3.2",{"_index":3769,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":3650,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":3711,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1945,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SettingsPage.html":{},"coverage.html":{}}}],["800",{"_index":894,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["800px",{"_index":2827,"title":{},"body":{"components/SettingsPage.html":{}}}],["80px",{"_index":818,"title":{},"body":{"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{}}}],["84",{"_index":3660,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":3644,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":3708,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":3710,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":2825,"title":{},"body":{"components/SettingsPage.html":{}}}],["9",{"_index":3694,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":3672,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":3497,"title":{},"body":{"classes/UserUtils.html":{}}}],["950px",{"_index":909,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["987654321",{"_index":2507,"title":{},"body":{"classes/Random.html":{}}}],["_",{"_index":2958,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"classes/Utils.html":{}}}],["_assignee",{"_index":1864,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["_blank",{"_index":1654,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["_context",{"_index":2082,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["_control",{"_index":3406,"title":{},"body":{"classes/TestNgControl.html":{}}}],["_filters",{"_index":1555,"title":{},"body":{"components/FiltersComponent.html":{}}}],["_icon",{"_index":1793,"title":{},"body":{"components/IconComponent.html":{}}}],["_index",{"_index":2955,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["_isbuttondisabled",{"_index":3429,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["_main/_main.module",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["_main/components/main",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["_main/interfaces/color.interface",{"_index":2989,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["_main/services/api.service",{"_index":3313,"title":{},"body":{"injectables/TaskService.html":{}}}],["_main/services/dialog.service",{"_index":577,"title":{},"body":{"components/BoardPage.html":{}}}],["_main/validators/required.validator",{"_index":84,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["_required",{"_index":920,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["_templateref",{"_index":2084,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["_viewcontainer",{"_index":2090,"title":{},"body":{"directives/LetDirective.html":{}}}],["_viewcontainer.createembeddedview(_templateref",{"_index":2085,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["ability",{"_index":1726,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["absolute",{"_index":772,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["abstract",{"_index":3943,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["abstractcontrol",{"_index":3413,"title":{},"body":{"classes/TestNgControl.html":{}}}],["acc",{"_index":2313,"title":{},"body":{"injectables/MemberService.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["acc.set(member.user.id",{"_index":2312,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["acc.set(status.id",{"_index":3030,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["access",{"_index":322,"title":{},"body":{"injectables/ApiService.html":{},"injectables/GitIntegrationService.html":{},"additional-documentation/architecture.html":{}}}],["accessor",{"_index":994,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["accessor.class",{"_index":997,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["accessor.class.ts",{"_index":1024,"title":{},"body":{"components/ControlAccessor.html":{},"coverage.html":{}}}],["accessor.class.ts:102",{"_index":1043,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:118",{"_index":1048,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:126",{"_index":1045,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:133",{"_index":1046,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:139",{"_index":1047,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:150",{"_index":1044,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:19",{"_index":1041,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:25",{"_index":1054,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:29",{"_index":1057,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:36",{"_index":1049,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:41",{"_index":1059,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:48",{"_index":1050,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:53",{"_index":1052,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:58",{"_index":1061,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:65",{"_index":1063,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:67",{"_index":1036,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:77",{"_index":1051,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:88",{"_index":1042,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessors",{"_index":1027,"title":{},"body":{"components/ControlAccessor.html":{},"injectables/DialogService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"directives/LetDirective.html":{},"components/OptionComponent.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{}}}],["account",{"_index":202,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["account.githubusername",{"_index":1755,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["account.githubusername.replace",{"_index":1769,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["account.page",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DeleteAccountPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["account.page'},{'name",{"_index":151,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["account.page.html",{"_index":1228,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.scss",{"_index":1227,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts",{"_index":1226,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"coverage.html":{}}}],["account.page.ts:10",{"_index":1229,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{}}}],["account.page.ts:12",{"_index":2712,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:13",{"_index":2598,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["account.page.ts:15",{"_index":2716,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:17",{"_index":1232,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{}}}],["account.page.ts:22",{"_index":1231,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts:28",{"_index":2715,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:36",{"_index":2714,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:42",{"_index":2713,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account/delete",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DeleteAccountPage.html":{},"coverage.html":{}}}],["account/restore",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/RestoreAccountPage.html":{},"coverage.html":{}}}],["account/settings",{"_index":2709,"title":{},"body":{"components/SettingsAccountPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{}}}],["accounts.map((account",{"_index":1649,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["action",{"_index":2753,"title":{},"body":{"components/SettingsAccountPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/continuos-integration.html":{}}}],["actions",{"_index":778,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"additional-documentation/continuos-integration.html":{}}}],["activatedroute",{"_index":536,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/GithubIntegrationPage.html":{},"components/MemberListComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["active",{"_index":833,"title":{},"body":{"components/ButtonComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["activeworkspace",{"_index":2359,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["actual_component",{"_index":248,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["add",{"_index":18,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["add(emails",{"_index":2288,"title":{},"body":{"injectables/MemberService.html":{}}}],["added",{"_index":2307,"title":{},"body":{"injectables/MemberService.html":{}}}],["addedmembers",{"_index":2267,"title":{},"body":{"components/MemberListComponent.html":{}}}],["adding",{"_index":3990,"title":{},"body":{"additional-documentation/localization.html":{}}}],["additional",{"_index":1968,"title":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}},"body":{"components/InputComponent.html":{},"interfaces/RequestOptions.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["addmemberdialog",{"_index":1,"title":{"components/AddMemberDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["addmemberdialogdata",{"_index":39,"title":{"interfaces/AddMemberDialogData.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["addmembers",{"_index":33,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["addrepository",{"_index":2051,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["address",{"_index":1608,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["adds",{"_index":2290,"title":{},"body":{"injectables/MemberService.html":{}}}],["advanced",{"_index":342,"title":{},"body":{"injectables/ApiService.html":{}}}],["afterclosed",{"_index":648,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["afterviewinit",{"_index":1592,"title":{},"body":{"directives/FocusInitialDirective.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{}}}],["agent",{"_index":2840,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype",{"_index":2834,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(\"browser",{"_index":2870,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(\"os",{"_index":2868,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(type",{"_index":2839,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agree",{"_index":2563,"title":{},"body":{"components/RegisterPage.html":{}}}],["agreement",{"_index":2565,"title":{},"body":{"components/RegisterPage.html":{}}}],["agreements",{"_index":2539,"title":{},"body":{"components/RegisterPage.html":{}}}],["alert",{"_index":123,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["alert(data",{"_index":1254,"title":{},"body":{"injectables/DialogService.html":{}}}],["alert.dialog.html",{"_index":260,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alert.dialog.scss",{"_index":259,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alert/information",{"_index":1257,"title":{},"body":{"injectables/DialogService.html":{}}}],["alertdialog",{"_index":122,"title":{"components/AlertDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alertdialogdata",{"_index":266,"title":{"interfaces/AlertDialogData.html":{}},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"coverage.html":{}}}],["alertdialogvariant",{"_index":261,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{},"miscellaneous/enumerations.html":{}}}],["alertdialogvariant.default",{"_index":311,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alertdialogvariant.important",{"_index":275,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["aliases",{"_index":3880,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":668,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["already",{"_index":2141,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["always",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["american",{"_index":2787,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["angular",{"_index":1073,"title":{},"body":{"components/ControlAccessor.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["angular.json",{"_index":3806,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/localization.html":{}}}],["angular/animations",{"_index":3747,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3749,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":804,"title":{},"body":{"components/ButtonComponent.html":{}}}],["angular/cdk/drag",{"_index":566,"title":{},"body":{"components/BoardPage.html":{},"modules/MainModule.html":{}}}],["angular/cdk/observers",{"_index":2157,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/overlay",{"_index":2159,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/platform",{"_index":2161,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/text",{"_index":1978,"title":{},"body":{"components/InputComponent.html":{}}}],["angular/common",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":363,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"modules/MainModule.html":{},"interfaces/RequestOptions.html":{}}}],["angular/compiler",{"_index":3751,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":74,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AuthModule.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"classes/TestNgControl.html":{},"components/ViewOptionsComponent-1.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":3967,"title":{},"body":{"additional-documentation/localization.html":{}}}],["angular/material",{"_index":3752,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2167,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/badge",{"_index":2169,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/checkbox",{"_index":2171,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/core",{"_index":2173,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/datepicker",{"_index":2175,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/dialog",{"_index":76,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["angular/material/form",{"_index":2178,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/icon",{"_index":2180,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/input",{"_index":2182,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/menu",{"_index":2184,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/progress",{"_index":2186,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/select",{"_index":2188,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/table",{"_index":2190,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tabs",{"_index":2192,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tooltip",{"_index":2194,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/platform",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["animating",{"_index":686,"title":{},"body":{"components/BoardPage.html":{}}}],["animation",{"_index":2935,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["animationname",{"_index":2897,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["any)._markastouched",{"_index":1092,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any)._rawvalidators",{"_index":1086,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any)._root",{"_index":2613,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["any).color",{"_index":1907,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["any).control._rawvalidators",{"_index":1089,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any).injector",{"_index":2250,"title":{},"body":{"modules/MainModule.html":{}}}],["any).injector.get(dialogservice",{"_index":1511,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["any).prototype.submit",{"_index":1617,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["any).subscribe",{"_index":616,"title":{},"body":{"components/BoardPage.html":{}}}],["api",{"_index":323,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{}}}],["apiservice",{"_index":318,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":324,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["app.component",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["app/main/main.module",{"_index":2242,"title":{},"body":{"modules/MainModule.html":{}}}],["app/main/main.module';(@)ngmodule",{"_index":2153,"title":{},"body":{"modules/MainModule.html":{}}}],["appcomponent",{"_index":124,"title":{"components/AppComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["appfocusinitial",{"_index":1593,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["appfocusinitial]'},{'name",{"_index":245,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["application",{"_index":1697,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["apply",{"_index":948,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["apply(input",{"_index":1533,"title":{},"body":{"interfaces/FilterCheckbox.html":{}}}],["apply(tasks",{"_index":1548,"title":{},"body":{"classes/Filters.html":{}}}],["applyfilters",{"_index":3307,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["applyfilters(filters",{"_index":3796,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appmodule",{"_index":397,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":404,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":3910,"title":{"additional-documentation/architecture.html":{}},"body":{"additional-documentation/architecture.html":{}}}],["arguments",{"_index":1013,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["array",{"_index":1425,"title":{},"body":{"classes/Enum.html":{},"classes/Utils.html":{}}}],["array.isarray(members",{"_index":1906,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["arraybuffer",{"_index":2585,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["artifacts",{"_index":3847,"title":{},"body":{"index.html":{}}}],["as.validator",{"_index":872,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["as.validator.ts",{"_index":3686,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["assign",{"_index":3274,"title":{},"body":{"injectables/TaskService.html":{}}}],["assign(member?.user.id",{"_index":1926,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assign(userid",{"_index":3282,"title":{},"body":{"injectables/TaskService.html":{}}}],["assigned",{"_index":3079,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["assignee",{"_index":758,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/TaskListPage.html":{}}}],["assignee'},{'name",{"_index":167,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["assignee(assignee",{"_index":1900,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component",{"_index":3390,"title":{},"body":{"modules/TasksModule.html":{}}}],["assignee.component.html",{"_index":1863,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.scss",{"_index":1862,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts",{"_index":1861,"title":{},"body":{"components/InputAssigneeComponent.html":{},"coverage.html":{}}}],["assignee.component.ts:18",{"_index":1871,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:27",{"_index":1889,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:31",{"_index":1872,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:45",{"_index":1874,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:46",{"_index":1873,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:48",{"_index":1887,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:50",{"_index":1880,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:52",{"_index":1884,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:53",{"_index":1883,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:54",{"_index":1881,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:56",{"_index":1895,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:60",{"_index":1893,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:62",{"_index":1870,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:68",{"_index":1876,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:80",{"_index":1875,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:84",{"_index":1879,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:91",{"_index":1878,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.user.name[0",{"_index":1927,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee/input",{"_index":1860,"title":{},"body":{"components/InputAssigneeComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["assigneecolor",{"_index":1865,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assigneecontrol",{"_index":3176,"title":{},"body":{"components/TaskListPage.html":{}}}],["assigneeid",{"_index":1547,"title":{},"body":{"classes/Filters.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["assignees",{"_index":757,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["async)?.name",{"_index":1162,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{}}}],["attach",{"_index":1329,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"interfaces/RequestOptions.html":{},"components/TaskDialog.html":{},"injectables/TaskService.html":{}}}],["attached",{"_index":636,"title":{},"body":{"components/BoardPage.html":{},"directives/FocusInitialDirective.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["attachgithubintegration",{"_index":1668,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["attachgithubintegration(projectid",{"_index":1684,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["attachgithubintegration(this.projectid",{"_index":2069,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["attribute",{"_index":1809,"title":{},"body":{"components/IconComponent.html":{}}}],["auth",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/UpperNavigationComponent.html":{}}}],["auth.routing",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/guard/logged",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/interfaces/user.interface",{"_index":2893,"title":{},"body":{"interfaces/SinglePersonSchedule.html":{},"injectables/UserService.html":{}}}],["auth/services/auth.service",{"_index":2110,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["auth/services/user.service",{"_index":2126,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{}}}],["authentication",{"_index":2591,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["authmodule",{"_index":453,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":457,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":481,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["auto",{"_index":2261,"title":{},"body":{"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SchedulePage.html":{}}}],["autocomplete",{"_index":931,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["autofillmonitor",{"_index":1962,"title":{},"body":{"components/InputComponent.html":{}}}],["automatically",{"_index":3843,"title":{},"body":{"index.html":{}}}],["available",{"_index":3517,"title":{},"body":{"classes/Utils.html":{},"injectables/WorkspaceService.html":{},"modules.html":{}}}],["avatar",{"_index":1949,"title":{},"body":{"components/InputAssigneeComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/SchedulePage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["awesome",{"_index":1790,"title":{},"body":{"components/IconComponent.html":{}}}],["back",{"_index":1607,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{}}}],["backend",{"_index":3897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["backlog",{"_index":3595,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["badge",{"_index":4026,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["badges",{"_index":4024,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["base",{"_index":1025,"title":{},"body":{"components/ControlAccessor.html":{},"additional-documentation/architecture.html":{}}}],["based",{"_index":1432,"title":{},"body":{"classes/Enum.html":{}}}],["basic",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["before",{"_index":826,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/localization.html":{}}}],["begin",{"_index":2979,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["behaviorsubject",{"_index":1280,"title":{},"body":{"injectables/DialogService.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["behaviorsubject(false",{"_index":1882,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{}}}],["behaviorsubject>(new",{"_index":2969,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["behaviorsubject>>(this.dialogsmap",{"_index":1275,"title":{},"body":{"injectables/DialogService.html":{}}}],["below",{"_index":304,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["beneath",{"_index":1967,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["between",{"_index":674,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["bezier(0",{"_index":691,"title":{},"body":{"components/BoardPage.html":{}}}],["binding",{"_index":278,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/IconComponent.html":{}}}],["blob",{"_index":2586,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["block",{"_index":656,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["blocks",{"_index":3945,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["blur",{"_index":977,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["board",{"_index":129,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["board'},{'name",{"_index":127,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["board(projectid",{"_index":3038,"title":{},"body":{"injectables/StatusService.html":{}}}],["board.page.html",{"_index":526,"title":{},"body":{"components/BoardPage.html":{}}}],["board.page.scss",{"_index":525,"title":{},"body":{"components/BoardPage.html":{}}}],["board.push([task",{"_index":3069,"title":{},"body":{"injectables/StatusService.html":{}}}],["board.push(other",{"_index":3073,"title":{},"body":{"injectables/StatusService.html":{}}}],["boardpage",{"_index":126,"title":{"components/BoardPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["boardtaskcomponent",{"_index":128,"title":{"components/BoardTaskComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{}}}],["bold",{"_index":2102,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["boolean",{"_index":273,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/UserSession.html":{},"classes/Utils.html":{}}}],["boolean(repositoryname.match(new",{"_index":1770,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["bootstrap",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":744,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["bottom",{"_index":675,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["box",{"_index":748,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["branch",{"_index":1630,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"additional-documentation/continuos-integration.html":{}}}],["brands",{"_index":3593,"title":{},"body":{"components/ViewOptionsComponent-1.html":{},"dependencies.html":{}}}],["break",{"_index":1091,"title":{},"body":{"components/ControlAccessor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["british",{"_index":2781,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["browse",{"_index":3871,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1667,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["bubbles",{"_index":1021,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["build",{"_index":3845,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["builder",{"_index":3895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":3859,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{}}}],["buildthe",{"_index":3846,"title":{},"body":{"index.html":{}}}],["button",{"_index":305,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["button'},{'name",{"_index":132,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["button.component.html",{"_index":785,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":784,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button:not(.button",{"_index":816,"title":{},"body":{"components/ButtonComponent.html":{}}}],["buttoncomponent",{"_index":131,"title":{"components/ButtonComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buttons",{"_index":258,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/RegisterPage.html":{}}}],["c.charcodeat(0",{"_index":3503,"title":{},"body":{"classes/UserUtils.html":{}}}],["calc($padding",{"_index":1991,"title":{},"body":{"components/InputComponent.html":{}}}],["calc($size",{"_index":766,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["calc(100",{"_index":886,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["calc(50",{"_index":1944,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["calc(var",{"_index":828,"title":{},"body":{"components/ButtonComponent.html":{}}}],["calendar",{"_index":3594,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["call",{"_index":2594,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["callback",{"_index":951,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["called",{"_index":964,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["camelcase",{"_index":3540,"title":{},"body":{"classes/Utils.html":{}}}],["canactivate",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoggedInUsersGuard.html":{}}}],["cancel",{"_index":34,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["cancelable",{"_index":1022,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["cancels",{"_index":3293,"title":{},"body":{"injectables/TaskService.html":{}}}],["canceltext",{"_index":308,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"injectables/DialogService.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/TaskService.html":{}}}],["card",{"_index":837,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":134,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["card.component.html",{"_index":839,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":838,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":133,"title":{"components/CardComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":1834,"title":{},"body":{"components/IconComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"additional-documentation/architecture.html":{}}}],["catch",{"_index":623,"title":{},"body":{"components/BoardPage.html":{}}}],["catcherror",{"_index":1472,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["catcherror((e",{"_index":1476,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["catchresponse",{"_index":3677,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["catchresponse(message",{"_index":3797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cdk",{"_index":682,"title":{},"body":{"components/BoardPage.html":{}}}],["cdkdragdrop",{"_index":544,"title":{},"body":{"components/BoardPage.html":{}}}],["cell",{"_index":2642,"title":{},"body":{"components/SchedulePage.html":{},"components/TaskListPage.html":{}}}],["center",{"_index":670,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["change",{"_index":136,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["changed",{"_index":2679,"title":{},"body":{"components/SelectComponent.html":{}}}],["changedate",{"_index":704,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["changedate(date",{"_index":713,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["changedate(session.lastused",{"_index":2873,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["changedate(subtask.deadline",{"_index":3243,"title":{},"body":{"components/TaskListPage.html":{}}}],["changedate(task.deadline",{"_index":739,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["changeddate",{"_index":2009,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["changelanguage",{"_index":2769,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["changepasswordpage",{"_index":135,"title":{"components/ChangePasswordPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["changes",{"_index":966,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TextareaComponent.html":{}}}],["changestatus",{"_index":3275,"title":{},"body":{"injectables/TaskService.html":{}}}],["changestatus(statusid",{"_index":3287,"title":{},"body":{"injectables/TaskService.html":{}}}],["changeworkspace",{"_index":2447,"title":{},"body":{"injectables/ProjectService.html":{}}}],["changeworkspace(projectid",{"_index":2449,"title":{},"body":{"injectables/ProjectService.html":{}}}],["changeworkspace(this.projectid",{"_index":1362,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["char",{"_index":3529,"title":{},"body":{"classes/Utils.html":{}}}],["char.length",{"_index":3553,"title":{},"body":{"classes/Utils.html":{}}}],["character",{"_index":3527,"title":{},"body":{"classes/Utils.html":{}}}],["character.tolowercase",{"_index":3550,"title":{},"body":{"classes/Utils.html":{}}}],["character.touppercase",{"_index":3549,"title":{},"body":{"classes/Utils.html":{}}}],["check",{"_index":779,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{},"miscellaneous/functions.html":{}}}],["checkbox",{"_index":917,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{}}}],["checkbox'},{'name",{"_index":139,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["checkbox.component.html",{"_index":919,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":918,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.ng",{"_index":1000,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":138,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkboxes",{"_index":1028,"title":{},"body":{"components/ControlAccessor.html":{}}}],["checkifisrequired",{"_index":924,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["checks",{"_index":1716,"title":{},"body":{"injectables/GitIntegrationService.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":1039,"title":{},"body":{"components/ControlAccessor.html":{},"components/RestoreAccountPage.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{}}}],["child)::before",{"_index":3246,"title":{},"body":{"components/TaskListPage.html":{}}}],["children",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["choose",{"_index":1727,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["ci/cd",{"_index":4008,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["city",{"_index":3481,"title":{},"body":{"interfaces/UserSession.html":{}}}],["class",{"_index":90,"title":{"classes/ESet.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"classes/Random.html":{},"classes/TestNgControl.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["class.focused",{"_index":1961,"title":{},"body":{"components/InputComponent.html":{}}}],["class.important",{"_index":265,"title":{},"body":{"components/AlertDialog.html":{}}}],["classes",{"_index":1040,"title":{},"body":{"components/ControlAccessor.html":{},"classes/ESet.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"classes/Random.html":{},"classes/TestNgControl.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["classes/control",{"_index":1979,"title":{},"body":{"components/InputComponent.html":{}}}],["classes/utils.class",{"_index":1840,"title":{},"body":{"components/IconComponent.html":{}}}],["clean",{"_index":954,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["cleargithubintegrationfields",{"_index":3100,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["cli",{"_index":3869,"title":{},"body":{"index.html":{}}}],["click",{"_index":241,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["clickstoppropagationdirective",{"_index":240,"title":{"directives/ClickStopPropagationDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["close",{"_index":1786,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{}}}],["close(uid",{"_index":2964,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["closeall",{"_index":1245,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{}}}],["closed",{"_index":284,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/GitIntegrationService.html":{}}}],["closenavelement",{"_index":2332,"title":{},"body":{"components/NavElementComponent.html":{}}}],["closeprofile",{"_index":3433,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["closes",{"_index":281,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["closeworkspace",{"_index":2360,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["cluster_appmodule",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":454,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":455,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":456,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":1175,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":1177,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":1176,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_providers",{"_index":1178,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_emailsmodule",{"_index":1399,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_emailsmodule_imports",{"_index":1400,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_messagesmodule",{"_index":2315,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_messagesmodule_imports",{"_index":2316,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":2795,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2797,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2796,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":3383,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":3385,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":3384,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["code",{"_index":2422,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SettingsLocalizationPage.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["color",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["color.hsl(hue",{"_index":3496,"title":{},"body":{"classes/UserUtils.html":{}}}],["color.pipe",{"_index":3397,"title":{},"body":{"modules/TasksModule.html":{}}}],["color.pipe.ts",{"_index":2994,"title":{},"body":{"pipes/StatusColorPipe.html":{},"coverage.html":{}}}],["color.pipe.ts:8",{"_index":2997,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["colorstyle",{"_index":2902,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["cols",{"_index":3419,"title":{},"body":{"components/TextareaComponent.html":{}}}],["column",{"_index":664,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["column.name",{"_index":652,"title":{},"body":{"components/BoardPage.html":{}}}],["columns",{"_index":2988,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["combinelatest",{"_index":3052,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["combinelatest([this.list(projectid",{"_index":3059,"title":{},"body":{"injectables/StatusService.html":{}}}],["command",{"_index":3834,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{}}}],["commit",{"_index":775,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["commonmodule",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["comparewith",{"_index":3816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complete",{"_index":1529,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["completed",{"_index":3080,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["completes",{"_index":344,"title":{},"body":{"injectables/ApiService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["compodoc",{"_index":3860,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":3754,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["component.ts",{"_index":3946,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["component_template",{"_index":120,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["components/board",{"_index":3388,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/button/button.component",{"_index":2198,"title":{},"body":{"modules/MainModule.html":{}}}],["components/card/card.component",{"_index":2199,"title":{},"body":{"modules/MainModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":2200,"title":{},"body":{"modules/MainModule.html":{}}}],["components/filters/filters.component",{"_index":2201,"title":{},"body":{"modules/MainModule.html":{}}}],["components/icon/icon.component",{"_index":2202,"title":{},"body":{"modules/MainModule.html":{}}}],["components/input",{"_index":2203,"title":{},"body":{"modules/MainModule.html":{},"modules/TasksModule.html":{}}}],["components/input/input.component",{"_index":2205,"title":{},"body":{"modules/MainModule.html":{}}}],["components/integration",{"_index":1182,"title":{},"body":{"modules/DashboardModule.html":{},"modules/SettingsModule.html":{}}}],["components/list",{"_index":2803,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/main",{"_index":2206,"title":{},"body":{"modules/MainModule.html":{}}}],["components/member",{"_index":1185,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/nav",{"_index":2207,"title":{},"body":{"modules/MainModule.html":{}}}],["components/option/option.component",{"_index":2212,"title":{},"body":{"modules/MainModule.html":{}}}],["components/select/select.component",{"_index":2213,"title":{},"body":{"modules/MainModule.html":{}}}],["components/sidebar",{"_index":2214,"title":{},"body":{"modules/MainModule.html":{}}}],["components/snackbar",{"_index":2217,"title":{},"body":{"modules/MainModule.html":{}}}],["components/snackbar/snackbar.component",{"_index":2220,"title":{},"body":{"modules/MainModule.html":{}}}],["components/status",{"_index":3391,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/textarea/textarea.component",{"_index":2221,"title":{},"body":{"modules/MainModule.html":{}}}],["components/upper",{"_index":2222,"title":{},"body":{"modules/MainModule.html":{}}}],["components/view",{"_index":1188,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["concurrently",{"_index":3760,"title":{},"body":{"dependencies.html":{}}}],["configurable",{"_index":257,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["configuration",{"_index":362,"title":{},"body":{"injectables/ApiService.html":{},"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":3902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":343,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["confirm",{"_index":263,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["confirm(data",{"_index":1261,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmation",{"_index":286,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["confirmed",{"_index":3335,"title":{},"body":{"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["confirmprojectdelete",{"_index":1246,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmprojectdelete(project",{"_index":1263,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmtext",{"_index":307,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["confirmworkspacedelete",{"_index":1247,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmworkspacedelete(workspace",{"_index":1265,"title":{},"body":{"injectables/DialogService.html":{}}}],["connect",{"_index":2071,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"components/TaskDialog.html":{}}}],["connected",{"_index":3085,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["connectgithubissue",{"_index":1669,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubissue(projectid",{"_index":1687,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubpull",{"_index":1670,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubpull(projectid",{"_index":1691,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connection",{"_index":1695,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connecttogithub",{"_index":2052,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["connectwithissueongithub",{"_index":3086,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["connectwithpullrequestongithub",{"_index":3090,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["console",{"_index":3898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('submit",{"_index":1618,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["console.log('updated",{"_index":2686,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.log('value",{"_index":2678,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.log(board",{"_index":3074,"title":{},"body":{"injectables/StatusService.html":{}}}],["console.log(data",{"_index":3341,"title":{},"body":{"injectables/TaskService.html":{}}}],["console.log(formvalues",{"_index":3166,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["console.log(installation_id",{"_index":1783,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["console.log(this.control.value",{"_index":2688,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.log(val",{"_index":2684,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.warn('unknown",{"_index":3381,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["const",{"_index":93,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["constructor(_viewcontainer",{"_index":2083,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["constructor(activatedroute",{"_index":535,"title":{},"body":{"components/BoardPage.html":{},"components/GithubIntegrationPage.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["constructor(apiservice",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["constructor(authservice",{"_index":854,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["constructor(data",{"_index":38,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/TaskDialog.html":{}}}],["constructor(dialogservice",{"_index":707,"title":{},"body":{"components/BoardTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/UpperNavigationComponent.html":{}}}],["constructor(el",{"_index":1595,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["constructor(gitintegrationservice",{"_index":2054,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["constructor(httpclient",{"_index":329,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(injector",{"_index":2248,"title":{},"body":{"modules/MainModule.html":{}}}],["constructor(matdialog",{"_index":1251,"title":{},"body":{"injectables/DialogService.html":{}}}],["constructor(memberservice",{"_index":2268,"title":{},"body":{"components/MemberListComponent.html":{}}}],["constructor(ngcontrol",{"_index":1035,"title":{},"body":{"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["constructor(private",{"_index":370,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"interceptors/ErrorInterceptor.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{}}}],["constructor(public",{"_index":1573,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["constructor(ref",{"_index":2430,"title":{},"body":{"components/OptionComponent.html":{}}}],["constructor(router",{"_index":2107,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"injectables/RouterExtensionsService.html":{}}}],["constructor(seed",{"_index":2501,"title":{},"body":{"classes/Random.html":{}}}],["constructor(sessionservice",{"_index":2836,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["constructor(snackbarservice",{"_index":2903,"title":{},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["constructor(taskservice",{"_index":2622,"title":{},"body":{"components/SchedulePage.html":{}}}],["constructor(userservice",{"_index":2711,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["constructor(workspaceservice",{"_index":1109,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["containing",{"_index":1270,"title":{},"body":{"injectables/DialogService.html":{}}}],["contains",{"_index":1081,"title":{},"body":{"components/ControlAccessor.html":{},"classes/Enum.html":{}}}],["content",{"_index":672,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/variables.html":{}}}],["content.cdk",{"_index":694,"title":{},"body":{"components/BoardPage.html":{}}}],["contentchildren",{"_index":2674,"title":{},"body":{"components/SelectComponent.html":{}}}],["contentchildren(optioncomponent",{"_index":2668,"title":{},"body":{"components/SelectComponent.html":{}}}],["context",{"_index":2571,"title":{},"body":{"interfaces/RequestOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":3357,"title":{},"body":{"injectables/TaskService.html":{}}}],["continuos",{"_index":4007,"title":{"additional-documentation/continuos-integration.html":{}},"body":{"additional-documentation/continuos-integration.html":{}}}],["control",{"_index":944,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"additional-documentation/architecture.html":{}}}],["control's",{"_index":965,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["control.errors",{"_index":998,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["control?.errors",{"_index":1981,"title":{},"body":{"components/InputComponent.html":{}}}],["controlaccessor",{"_index":140,"title":{"components/ControlAccessor.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["controlaccessor:102",{"_index":947,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:118",{"_index":983,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:126",{"_index":961,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:133",{"_index":976,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:139",{"_index":979,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:150",{"_index":950,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:19",{"_index":934,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:22",{"_index":2018,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["controlaccessor:28",{"_index":1564,"title":{},"body":{"components/FiltersComponent.html":{}}}],["controlaccessor:29",{"_index":3020,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["controlaccessor:32",{"_index":2016,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["controlaccessor:36",{"_index":988,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:44",{"_index":1977,"title":{},"body":{"components/InputComponent.html":{}}}],["controlaccessor:48",{"_index":991,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:53",{"_index":995,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:64",{"_index":1885,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["controlaccessor:77",{"_index":993,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:88",{"_index":943,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controls",{"_index":3557,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["controlvalueaccessor",{"_index":1030,"title":{},"body":{"components/ControlAccessor.html":{}}}],["convenient",{"_index":4001,"title":{},"body":{"additional-documentation/localization.html":{}}}],["conventions",{"_index":3916,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["convert",{"_index":3544,"title":{},"body":{"classes/Utils.html":{}}}],["converts",{"_index":3539,"title":{},"body":{"classes/Utils.html":{}}}],["cookie",{"_index":2590,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["core",{"_index":1838,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{}}}],["correctdata",{"_index":2549,"title":{},"body":{"components/RegisterPage.html":{}}}],["country",{"_index":3482,"title":{},"body":{"interfaces/UserSession.html":{}}}],["coverage",{"_index":3636,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":142,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["create(project",{"_index":2452,"title":{},"body":{"injectables/ProjectService.html":{}}}],["create(projectid",{"_index":3040,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["create(workspace",{"_index":3607,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["create/general",{"_index":1218,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["create/members",{"_index":1219,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["created",{"_index":3043,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{},"additional-documentation/localization.html":{}}}],["createnewtask",{"_index":3434,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["createproject",{"_index":2361,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["createprojectmemberspage",{"_index":141,"title":{"components/CreateProjectMembersPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["createprojectpage",{"_index":145,"title":{"components/CreateProjectPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":1113,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["createsubscription",{"_index":1105,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["createsubtask",{"_index":705,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["createsubtask(task",{"_index":3189,"title":{},"body":{"components/TaskListPage.html":{}}}],["createworkspace",{"_index":2880,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["createworkspacepage",{"_index":147,"title":{"components/CreateWorkspacePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["creating",{"_index":1026,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["creation",{"_index":1121,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["credentials",{"_index":2589,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["css",{"_index":1805,"title":{},"body":{"components/IconComponent.html":{}}}],["cubic",{"_index":690,"title":{},"body":{"components/BoardPage.html":{}}}],["cuepic",{"_index":3369,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["cuissue",{"_index":3367,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["cupriorityhigh",{"_index":3262,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cupriorityhighest",{"_index":3264,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritylow",{"_index":3258,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritylowest",{"_index":3256,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritymedium",{"_index":3260,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["current",{"_index":3475,"title":{},"body":{"interfaces/UserSession.html":{},"additional-documentation/localization.html":{}}}],["currentdate",{"_index":2852,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentdate.diff(sessiondate",{"_index":2855,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentdate.year",{"_index":2853,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentuserid",{"_index":1542,"title":{},"body":{"classes/Filters.html":{}}}],["cursor",{"_index":680,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["custom",{"_index":953,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["cusubtask",{"_index":3372,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["cutask",{"_index":3366,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["cuuserstory",{"_index":3371,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["cypress",{"_index":3857,"title":{},"body":{"index.html":{}}}],["czemar/cli",{"_index":1766,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["czy",{"_index":2724,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["d",{"_index":2860,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["dashboard",{"_index":1212,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/SidebarNavigationComponent.html":{}}}],["dashboard.routing",{"_index":1191,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard/classes/user.class",{"_index":1898,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["dashboard/dialogs/add",{"_index":1127,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["dashboard/interfaces/git",{"_index":1636,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["dashboard/interfaces/project",{"_index":568,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/interfaces/project.interface",{"_index":570,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/SchedulePage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["dashboard/interfaces/workspace.interface",{"_index":78,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/ProjectService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["dashboard/services/git",{"_index":1638,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/member.service",{"_index":571,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/MemberListComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/project.service",{"_index":572,"title":{},"body":{"components/BoardPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/workspace.service",{"_index":3132,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{}}}],["dashboardmodule",{"_index":1174,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardroutingmodule",{"_index":1179,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":28,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/SnackbarService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["data.canceltext",{"_index":315,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.confirmtext",{"_index":316,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.message",{"_index":314,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.task?.name",{"_index":3168,"title":{},"body":{"components/TaskDialog.html":{}}}],["data.title",{"_index":313,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.variant",{"_index":310,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["database",{"_index":2987,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["date",{"_index":171,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["date().gettime",{"_index":2511,"title":{},"body":{"classes/Random.html":{}}}],["date:'d",{"_index":2637,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:'eee",{"_index":2638,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:'mmmm",{"_index":2635,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'d",{"_index":2652,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'eee",{"_index":2653,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'mmmm",{"_index":2651,"title":{},"body":{"components/SchedulePage.html":{}}}],["datepicker",{"_index":2028,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["dates",{"_index":2621,"title":{},"body":{"components/SchedulePage.html":{}}}],["day",{"_index":2648,"title":{},"body":{"components/SchedulePage.html":{}}}],["dayjs",{"_index":723,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["dayjs().todate",{"_index":2625,"title":{},"body":{"components/SchedulePage.html":{}}}],["dayjs(date",{"_index":733,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["days",{"_index":2603,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["dd",{"_index":736,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["de",{"_index":2776,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["deadline",{"_index":768,"title":{},"body":{"components/BoardTaskComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["debug",{"_index":3664,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["declarations",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["declare",{"_index":1615,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["decorator",{"_index":3812,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["decorator.ts",{"_index":3948,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["decorators",{"_index":57,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/ButtonComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/UpperNavigationComponent.html":{},"additional-documentation/architecture.html":{}}}],["decorators/service.decorator",{"_index":365,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DialogService.html":{}}}],["dedicated",{"_index":3937,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["deep",{"_index":1588,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["deep.mat",{"_index":2024,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["default",{"_index":60,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/localization.html":{}}}],["defaults",{"_index":1803,"title":{},"body":{"components/IconComponent.html":{}}}],["define",{"_index":3952,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["defines",{"_index":936,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["definition",{"_index":1798,"title":{},"body":{"components/IconComponent.html":{}}}],["delete",{"_index":150,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["delete(id",{"_index":2702,"title":{},"body":{"injectables/SessionsService.html":{},"injectables/WorkspaceService.html":{}}}],["delete(projectid",{"_index":2454,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["delete(url",{"_index":333,"title":{},"body":{"injectables/ApiService.html":{}}}],["deleteaccount",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"components/DeleteAccountPage.html":{}}}],["deleteaccount(token",{"_index":1230,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["deleteaccountconfirmation",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccountconfirmation(token",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccountmailcheck",{"_index":2710,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["deleteaccountpage",{"_index":149,"title":{"components/DeleteAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["deleteconnectedgithubaccount",{"_index":1671,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deleteconnectedgithubaccount(githubaccountid",{"_index":1693,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deleted",{"_index":1235,"title":{},"body":{"components/DeleteAccountPage.html":{},"interceptors/ErrorInterceptor.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"injectables/TaskService.html":{}}}],["deletegithubintegration",{"_index":1672,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deletegithubintegration(projectid",{"_index":1699,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deletemember",{"_index":2266,"title":{},"body":{"components/MemberListComponent.html":{}}}],["deletemember(id",{"_index":2272,"title":{},"body":{"components/MemberListComponent.html":{}}}],["deleteproject",{"_index":2362,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["deleteproject(project",{"_index":2377,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["deletes",{"_index":2456,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["deletesession",{"_index":2835,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["deletesession(id",{"_index":2843,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["deletetask",{"_index":3181,"title":{},"body":{"components/TaskListPage.html":{}}}],["deletetask(task",{"_index":3192,"title":{},"body":{"components/TaskListPage.html":{}}}],["deletewithconfirmation",{"_index":3276,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletewithconfirmation(projectid",{"_index":3291,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleteworkspace",{"_index":2363,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["deleteworkspace(workspace",{"_index":3623,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["deletion",{"_index":2604,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/WorkspacesListPage.html":{}}}],["dependencies",{"_index":399,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dependency",{"_index":332,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["deploy",{"_index":4014,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["deploy.yml",{"_index":4015,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["describe",{"_index":1055,"title":{},"body":{"components/ControlAccessor.html":{},"additional-documentation/architecture.html":{}}}],["description",{"_index":253,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"modules/MainModule.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["descriptor",{"_index":1496,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["descriptor.value",{"_index":1498,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["destroy",{"_index":921,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["destroyed",{"_index":959,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["detached",{"_index":644,"title":{},"body":{"components/BoardPage.html":{}}}],["details",{"_index":1951,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["determine",{"_index":2981,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["deutsch",{"_index":2777,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dev",{"_index":3840,"title":{},"body":{"index.html":{}}}],["development",{"_index":3827,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dezaktywujacy",{"_index":2738,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["dialog",{"_index":20,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dialog's",{"_index":290,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["dialog'},{'name",{"_index":121,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["dialog.afterclosed().subscribe",{"_index":1290,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialog.close",{"_index":1294,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogref",{"_index":40,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["dialogs",{"_index":1243,"title":{},"body":{"injectables/DialogService.html":{},"additional-documentation/architecture.html":{}}}],["dialogs/add",{"_index":1192,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dialogs/alert/alert.dialog",{"_index":1284,"title":{},"body":{"injectables/DialogService.html":{},"modules/MainModule.html":{}}}],["dialogs/task/task.dialog",{"_index":580,"title":{},"body":{"components/BoardPage.html":{},"modules/TasksModule.html":{}}}],["dialogservice",{"_index":539,"title":{"injectables/DialogService.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dialogservice.alert",{"_index":1512,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["dialogsmap",{"_index":1244,"title":{},"body":{"injectables/DialogService.html":{}}}],["direction",{"_index":666,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["directive",{"_index":118,"title":{"directives/ClickStopPropagationDirective.html":{},"directives/FocusInitialDirective.html":{},"directives/LetDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["directive.ts",{"_index":3950,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["directives",{"_index":239,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["directives/click",{"_index":2224,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/focus",{"_index":2226,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/let.directive",{"_index":2228,"title":{},"body":{"modules/MainModule.html":{}}}],["directory",{"_index":3850,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["disable",{"_index":1070,"title":{},"body":{"components/ControlAccessor.html":{},"miscellaneous/variables.html":{}}}],["disableconsolelog",{"_index":3900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disabled",{"_index":980,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["disconnect",{"_index":2035,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["disconnect(account",{"_index":1651,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["disconnectgithubissue",{"_index":1673,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubissue(projectid",{"_index":1701,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubpull",{"_index":1674,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubpull(projectid",{"_index":1703,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["display",{"_index":655,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["displayed",{"_index":302,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["displays",{"_index":1118,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["dist",{"_index":3849,"title":{},"body":{"index.html":{}}}],["dni",{"_index":2744,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["document.addeventlistener('domcontentloaded",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["document.body.classlist.remove('preload",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":3637,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["dodac",{"_index":2722,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["done",{"_index":2984,"title":{},"body":{"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"interfaces/StatusWithTasks.html":{}}}],["download",{"_index":2583,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["drag",{"_index":683,"title":{},"body":{"components/BoardPage.html":{}}}],["dragdropmodule",{"_index":2155,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["dragging",{"_index":695,"title":{},"body":{"components/BoardPage.html":{}}}],["drop",{"_index":531,"title":{},"body":{"components/BoardPage.html":{},"modules/MainModule.html":{}}}],["drop(event",{"_index":543,"title":{},"body":{"components/BoardPage.html":{}}}],["due",{"_index":738,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["duration",{"_index":2900,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["dynamic",{"_index":3753,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1487,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e.error.message",{"_index":1482,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e.status",{"_index":1478,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e2e",{"_index":3858,"title":{},"body":{"index.html":{}}}],["e[0",{"_index":1456,"title":{},"body":{"classes/Enum.html":{}}}],["e[1",{"_index":1454,"title":{},"body":{"classes/Enum.html":{}}}],["each",{"_index":3917,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["ease",{"_index":747,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["edit",{"_index":153,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/localization.html":{}}}],["edited",{"_index":3999,"title":{},"body":{"additional-documentation/localization.html":{}}}],["editing",{"_index":1340,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["editor",{"_index":4000,"title":{},"body":{"additional-documentation/localization.html":{}}}],["editproject",{"_index":1316,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["editproject(project",{"_index":2380,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["editprojectmemberspage",{"_index":152,"title":{"components/EditProjectMembersPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["editprojectpage",{"_index":154,"title":{"components/EditProjectPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["editprojectwithworkspace",{"_index":1317,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["editprojectwithworkspace(newworkspaceid",{"_index":1322,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["edittask",{"_index":3182,"title":{},"body":{"components/TaskListPage.html":{}}}],["edittask(task",{"_index":3194,"title":{},"body":{"components/TaskListPage.html":{}}}],["editworkspace",{"_index":2364,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["editworkspace(workspace",{"_index":3626,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["editworkspacepage",{"_index":155,"title":{"components/EditWorkspacePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["el",{"_index":1597,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["element",{"_index":117,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"additional-documentation/localization.html":{}}}],["element'},{'name",{"_index":191,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["element.component",{"_index":2211,"title":{},"body":{"modules/MainModule.html":{}}}],["element.component.html",{"_index":2329,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.scss",{"_index":2328,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts",{"_index":2327,"title":{},"body":{"components/NavElementComponent.html":{},"coverage.html":{}}}],["element.component.ts:12",{"_index":2338,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:15",{"_index":2339,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:17",{"_index":2344,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:19",{"_index":2347,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:22",{"_index":2346,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:24",{"_index":2337,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:28",{"_index":2342,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:31",{"_index":2340,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:34",{"_index":2343,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:42",{"_index":2341,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.scrollheight}px",{"_index":3240,"title":{},"body":{"components/TaskListPage.html":{}}}],["element/nav",{"_index":2210,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementComponent.html":{},"coverage.html":{}}}],["elementref",{"_index":801,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FocusInitialDirective.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["email",{"_index":64,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["emails",{"_index":942,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/MemberService.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["emails.routing",{"_index":1403,"title":{},"body":{"modules/EmailsModule.html":{}}}],["emailsmodule",{"_index":1398,"title":{"modules/EmailsModule.html":{}},"body":{"modules/EmailsModule.html":{},"modules.html":{},"overview.html":{}}}],["emailsroutingmodule",{"_index":1401,"title":{"modules/EmailsRoutingModule.html":{}},"body":{"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["emailvalidator",{"_index":2538,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emitevent",{"_index":2021,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["emits",{"_index":992,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["empty",{"_index":1473,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/TaskService.html":{}}}],["en",{"_index":2778,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["end",{"_index":776,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SnackbarOutletComponent.html":{},"components/UpperNavigationComponent.html":{},"index.html":{}}}],["endpoints",{"_index":3862,"title":{},"body":{"index.html":{}}}],["english",{"_index":2780,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["enter",{"_index":884,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["entity",{"_index":3601,"title":{},"body":{"interfaces/Workspace.html":{}}}],["entries",{"_index":1410,"title":{},"body":{"classes/Enum.html":{}}}],["entries(enumtype",{"_index":1413,"title":{},"body":{"classes/Enum.html":{}}}],["entry",{"_index":1946,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["entry'},{'name",{"_index":174,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["entry.component",{"_index":2802,"title":{},"body":{"modules/SettingsModule.html":{}}}],["entry.component.html",{"_index":2033,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.scss",{"_index":2032,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts",{"_index":2031,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"coverage.html":{}}}],["entry.component.ts:10",{"_index":2039,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:11",{"_index":2037,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:12",{"_index":2040,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:14",{"_index":2036,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:18",{"_index":2042,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:9",{"_index":2038,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry/integration",{"_index":2030,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["enum",{"_index":299,"title":{"classes/Enum.html":{}},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"classes/Enum.html":{},"components/RegisterPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{}}}],["enum.entries(subtasktype",{"_index":3124,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(tasktype",{"_index":3129,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(testenum",{"_index":1420,"title":{},"body":{"classes/Enum.html":{}}}],["enum.isnumeric(enumtype",{"_index":1445,"title":{},"body":{"classes/Enum.html":{}}}],["enum.keys(testenum",{"_index":1436,"title":{},"body":{"classes/Enum.html":{}}}],["enum.ts",{"_index":3954,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enum.values(testenum",{"_index":1439,"title":{},"body":{"classes/Enum.html":{}}}],["enumerable",{"_index":292,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"additional-documentation/architecture.html":{}}}],["enumeration",{"_index":3953,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enumerations",{"_index":3773,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":3951,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enumtype",{"_index":1421,"title":{},"body":{"classes/Enum.html":{}}}],["environment",{"_index":361,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/continuos-integration.html":{}}}],["environment.apiurl",{"_index":359,"title":{},"body":{"injectables/ApiService.html":{}}}],["epic",{"_index":3368,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["error",{"_index":1002,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["error('this",{"_index":1742,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["error(error",{"_index":1525,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["error.error.message",{"_index":2559,"title":{},"body":{"components/RegisterPage.html":{}}}],["error.interface.ts",{"_index":3555,"title":{},"body":{"interfaces/ValidationError.html":{},"coverage.html":{}}}],["error.pipe",{"_index":2232,"title":{},"body":{"modules/MainModule.html":{}}}],["error.pipe.ts",{"_index":3565,"title":{},"body":{"pipes/ValidationErrorPipe.html":{},"coverage.html":{}}}],["error.pipe.ts:15",{"_index":3566,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["error.status",{"_index":2137,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["errorinterceptor",{"_index":1458,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":1034,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["errorvalidationtree",{"_index":1488,"title":{"interfaces/ErrorValidationTree.html":{}},"body":{"interfaces/ErrorValidationTree.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["errorvalidationtree[identifier",{"_index":1504,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["errorvalidationtree[identifier][status",{"_index":1507,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["es",{"_index":2782,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["eset",{"_index":1303,"title":{"classes/ESet.html":{}},"body":{"classes/ESet.html":{},"components/TaskListPage.html":{},"coverage.html":{}}}],["eslint",{"_index":1069,"title":{},"body":{"components/ControlAccessor.html":{}}}],["eslint/component",{"_index":1074,"title":{},"body":{"components/ControlAccessor.html":{}}}],["español",{"_index":2783,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["estimated",{"_index":3081,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["estimateddate",{"_index":3076,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["etc",{"_index":1029,"title":{},"body":{"components/ControlAccessor.html":{},"components/IconComponent.html":{},"interfaces/RequestOptions.html":{},"interfaces/ValidationError.html":{}}}],["event",{"_index":546,"title":{},"body":{"components/BoardPage.html":{},"directives/ClickStopPropagationDirective.html":{},"components/SchedulePage.html":{}}}],["event('click",{"_index":1020,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["event.container",{"_index":618,"title":{},"body":{"components/BoardPage.html":{}}}],["event.container.data",{"_index":622,"title":{},"body":{"components/BoardPage.html":{}}}],["event.currentindex",{"_index":620,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer",{"_index":617,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.data",{"_index":621,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.element.nativeelement.dataset['index",{"_index":602,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previousindex",{"_index":610,"title":{},"body":{"components/BoardPage.html":{}}}],["event.stoppropagation",{"_index":1018,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["eventemitter",{"_index":2041,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["events",{"_index":830,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{},"interfaces/RequestOptions.html":{}}}],["ex",{"_index":1719,"title":{},"body":{"injectables/GitIntegrationService.html":{},"additional-documentation/architecture.html":{}}}],["example",{"_index":782,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"interfaces/Project.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["example.page.html",{"_index":3813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example.page.scss",{"_index":3814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["examplemodule",{"_index":2154,"title":{},"body":{"modules/MainModule.html":{}}}],["exclusive",{"_index":2517,"title":{},"body":{"classes/Random.html":{}}}],["execute",{"_index":3853,"title":{},"body":{"index.html":{}}}],["existing",{"_index":3087,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["expanded",{"_index":3248,"title":{},"body":{"components/TaskListPage.html":{}}}],["expandedsubtasks",{"_index":3177,"title":{},"body":{"components/TaskListPage.html":{}}}],["expect",{"_index":2587,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["expecttofail",{"_index":3741,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["expecttofail(val",{"_index":3799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expecttopass",{"_index":3742,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["expecttopass(val",{"_index":3800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expired",{"_index":1486,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["exportdeclarations",{"_index":2239,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["exported",{"_index":2240,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["extended",{"_index":1038,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["extends",{"_index":916,"title":{},"body":{"components/CheckboxComponent.html":{},"classes/ESet.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{}}}],["extension",{"_index":3925,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["extensions.service",{"_index":80,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["extensions.service.ts",{"_index":2607,"title":{},"body":{"injectables/RouterExtensionsService.html":{},"coverage.html":{}}}],["extensions.service.ts:7",{"_index":2609,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["extensions.service.ts:9",{"_index":2611,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["external",{"_index":2238,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/localization.html":{}}}],["extract",{"_index":3996,"title":{},"body":{"additional-documentation/localization.html":{}}}],["extract:i18neach",{"_index":3998,"title":{},"body":{"additional-documentation/localization.html":{}}}],["f1",{"_index":4006,"title":{},"body":{"additional-documentation/localization.html":{}}}],["f39c12",{"_index":3001,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["fa",{"_index":1799,"title":{},"body":{"components/IconComponent.html":{}}}],["faaddresscard",{"_index":2814,"title":{},"body":{"components/SettingsPage.html":{}}}],["faangledown",{"_index":1601,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["facheck",{"_index":702,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["fachevronright",{"_index":527,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["facirclenodes",{"_index":2815,"title":{},"body":{"components/SettingsPage.html":{}}}],["faclose",{"_index":2898,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["facodecommit",{"_index":528,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["facodepullrequest",{"_index":703,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["facog",{"_index":3430,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["fafilter",{"_index":3576,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["fagithub",{"_index":3585,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["faglobe",{"_index":2816,"title":{},"body":{"components/SettingsPage.html":{}}}],["false",{"_index":282,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/variables.html":{}}}],["fapentosquare",{"_index":3578,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["faplus",{"_index":529,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["faquestion",{"_index":1841,"title":{},"body":{"components/IconComponent.html":{},"components/OptionComponent.html":{}}}],["fas",{"_index":1819,"title":{},"body":{"components/IconComponent.html":{}}}],["fasignout",{"_index":3431,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["fauser",{"_index":2817,"title":{},"body":{"components/SettingsPage.html":{},"components/UpperNavigationComponent.html":{}}}],["fff",{"_index":774,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["field",{"_index":937,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["fields",{"_index":949,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["filed",{"_index":989,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["filename",{"_index":3922,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["files",{"_index":3844,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["fill",{"_index":939,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["filter",{"_index":1281,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["filter((closed",{"_index":1747,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["filter((e",{"_index":1452,"title":{},"body":{"classes/Enum.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["filter((v",{"_index":1447,"title":{},"body":{"classes/Enum.html":{}}}],["filter.label",{"_index":1584,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filter.type",{"_index":1586,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filter.value",{"_index":1581,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtercheckbox",{"_index":1531,"title":{"interfaces/FilterCheckbox.html":{}},"body":{"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filters",{"_index":1537,"title":{"classes/Filters.html":{}},"body":{"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filters'},{'name",{"_index":157,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["filters(filters",{"_index":1568,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.html",{"_index":1554,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":1553,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.map((filter",{"_index":1570,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.operator",{"_index":3309,"title":{},"body":{"injectables/TaskService.html":{}}}],["filters.operator.ts",{"_index":3674,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterscomponent",{"_index":156,"title":{"components/FiltersComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filterscontrol",{"_index":3178,"title":{},"body":{"components/TaskListPage.html":{},"components/ViewOptionsComponent-1.html":{}}}],["filtertype",{"_index":1536,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"miscellaneous/typealiases.html":{}}}],["filtervalue",{"_index":1579,"title":{},"body":{"components/FiltersComponent.html":{}}}],["final",{"_index":2980,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["find",{"_index":3534,"title":{},"body":{"classes/Utils.html":{}}}],["finished",{"_index":345,"title":{},"body":{"injectables/ApiService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["finishing",{"_index":628,"title":{},"body":{"components/BoardPage.html":{}}}],["first",{"_index":1591,"title":{},"body":{"directives/FocusInitialDirective.html":{},"classes/Utils.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["flex",{"_index":658,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["floating",{"_index":1965,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["floatinglabel",{"_index":1958,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["fn",{"_index":974,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["focus",{"_index":786,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FocusInitialDirective.html":{}}}],["focusableoption",{"_index":783,"title":{},"body":{"components/ButtonComponent.html":{}}}],["focused",{"_index":1955,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["focusinitialdirective",{"_index":244,"title":{"directives/FocusInitialDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["folder",{"_index":3935,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["font",{"_index":1006,"title":{},"body":{"components/CheckboxComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListGroupComponent.html":{}}}],["fontawesome",{"_index":2197,"title":{},"body":{"modules/MainModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":2195,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["forgot",{"_index":159,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["forgotpasswordpage",{"_index":158,"title":{"components/ForgotPasswordPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":29,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["formarray",{"_index":1563,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formcontrol",{"_index":65,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"classes/TestNgControl.html":{},"components/ViewOptionsComponent-1.html":{}}}],["formcontrol(false",{"_index":3117,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(filter.value",{"_index":1571,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formcontrol(null",{"_index":1338,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/IntegrationGithubComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["formcontrol(projectid",{"_index":1350,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["formcontrol(tasktype.task",{"_index":3114,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(this.taskpriorities[2",{"_index":3116,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(workspaceid",{"_index":1139,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["formfields",{"_index":2548,"title":{},"body":{"components/RegisterPage.html":{}}}],["formgroup",{"_index":63,"title":{"interfaces/FormGroup.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{}}}],["forms",{"_index":968,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["formsmodule",{"_index":2165,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["formvalue",{"_index":1577,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formvalue.push(filter",{"_index":1582,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formvalues",{"_index":101,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.connectwithissueongithub",{"_index":3163,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.createissue",{"_index":3165,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.issueattachgithub",{"_index":3164,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["fortawesome/angular",{"_index":2196,"title":{},"body":{"modules/MainModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":1837,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":573,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["forwards",{"_index":2937,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["found",{"_index":1828,"title":{},"body":{"components/IconComponent.html":{}}}],["fragment",{"_index":1988,"title":{},"body":{"components/InputComponent.html":{}}}],["fragments",{"_index":1987,"title":{},"body":{"components/InputComponent.html":{}}}],["fromevent",{"_index":1899,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["fromevent(document",{"_index":1916,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["ftp",{"_index":4019,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["full",{"_index":1214,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["fullname",{"_index":1625,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["function",{"_index":963,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"interfaces/FormGroup.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":3947,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["functions",{"_index":1407,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Enum.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["future",{"_index":3989,"title":{},"body":{"additional-documentation/localization.html":{}}}],["g",{"_index":3839,"title":{},"body":{"index.html":{}}}],["gb",{"_index":2779,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["general",{"_index":3582,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["generate",{"_index":3304,"title":{},"body":{"injectables/TaskService.html":{}}}],["generates",{"_index":3303,"title":{},"body":{"injectables/TaskService.html":{}}}],["generation",{"_index":2503,"title":{},"body":{"classes/Random.html":{}}}],["generator.js",{"_index":4027,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["geoip",{"_index":3476,"title":{},"body":{"interfaces/UserSession.html":{}}}],["german",{"_index":3969,"title":{},"body":{"additional-documentation/localization.html":{}}}],["germany",{"_index":3970,"title":{},"body":{"additional-documentation/localization.html":{}}}],["get('/user/integration/github",{"_index":1754,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["get(id",{"_index":3611,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["get(projectid",{"_index":2457,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{}}}],["get(url",{"_index":346,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(workspaceid",{"_index":3149,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["getassignee",{"_index":1888,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["getcolorbyid",{"_index":3484,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyid(id",{"_index":3486,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyusername",{"_index":3485,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyusername(username",{"_index":3488,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorstyle",{"_index":2918,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["getconnectedgithubaccounts",{"_index":1675,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getconnectedprojects",{"_index":2758,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["getconnectedprojects(account",{"_index":1655,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["getcontrol",{"_index":1058,"title":{},"body":{"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"classes/TestNgControl.html":{}}}],["getcontrol(index",{"_index":1559,"title":{},"body":{"components/FiltersComponent.html":{}}}],["getdates",{"_index":2632,"title":{},"body":{"components/SchedulePage.html":{}}}],["geterrors",{"_index":1062,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getfilters",{"_index":1565,"title":{},"body":{"components/FiltersComponent.html":{}}}],["getgithubaccountconnectedprojects",{"_index":1676,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getgithubaccountconnectedprojects(account",{"_index":1657,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["getgithubintegration",{"_index":1677,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getheight",{"_index":1825,"title":{},"body":{"components/IconComponent.html":{}}}],["geticon",{"_index":1821,"title":{},"body":{"components/IconComponent.html":{}}}],["geticondefinition",{"_index":1826,"title":{},"body":{"components/IconComponent.html":{}}}],["getisanydialogopen",{"_index":1278,"title":{},"body":{"injectables/DialogService.html":{}}}],["getisopen",{"_index":1892,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["getmyself",{"_index":3466,"title":{},"body":{"injectables/UserService.html":{}}}],["getname",{"_index":1056,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getrequired",{"_index":1053,"title":{},"body":{"components/ControlAccessor.html":{}}}],["gets",{"_index":2459,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["getselected",{"_index":2672,"title":{},"body":{"components/SelectComponent.html":{}}}],["getsnakecasename",{"_index":1831,"title":{},"body":{"components/IconComponent.html":{}}}],["getsnapshot",{"_index":2610,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["getstatus",{"_index":3183,"title":{},"body":{"components/TaskListPage.html":{}}}],["getstatus(statusid",{"_index":3196,"title":{},"body":{"components/TaskListPage.html":{}}}],["getstyle",{"_index":1829,"title":{},"body":{"components/IconComponent.html":{}}}],["getsubscription",{"_index":1314,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["getsubtaskscontainerheight",{"_index":3184,"title":{},"body":{"components/TaskListPage.html":{}}}],["getsubtaskscontainerheight(taskid",{"_index":3198,"title":{},"body":{"components/TaskListPage.html":{}}}],["gettasksfromstatus",{"_index":532,"title":{},"body":{"components/BoardPage.html":{}}}],["gettasksfromstatus(statusid",{"_index":547,"title":{},"body":{"components/BoardPage.html":{}}}],["getter",{"_index":1813,"title":{},"body":{"components/IconComponent.html":{}}}],["getting",{"_index":1342,"title":{"index.html":{},"license.html":{}},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"index.html":{}}}],["getvalue",{"_index":1060,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getviewvalue",{"_index":2436,"title":{},"body":{"components/OptionComponent.html":{}}}],["getwidth",{"_index":1824,"title":{},"body":{"components/IconComponent.html":{}}}],["git",{"_index":1663,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["gitaccount",{"_index":1619,"title":{"interfaces/GitAccount.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/SettingsIntegrationsPage.html":{},"coverage.html":{}}}],["gitaccountwithusage",{"_index":1631,"title":{"interfaces/GitAccountWithUsage.html":{}},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"coverage.html":{}}}],["github",{"_index":161,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"additional-documentation/continuos-integration.html":{}}}],["github'},{'name",{"_index":176,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["github.component",{"_index":1184,"title":{},"body":{"modules/DashboardModule.html":{}}}],["github.component.html",{"_index":2048,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.scss",{"_index":2047,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts",{"_index":2046,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["github.component.ts:14",{"_index":2056,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:16",{"_index":2062,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:17",{"_index":2055,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:21",{"_index":2061,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:25",{"_index":2058,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:31",{"_index":2059,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:39",{"_index":2057,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:45",{"_index":2060,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.dev",{"_index":2419,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["github/integration",{"_index":1183,"title":{},"body":{"modules/DashboardModule.html":{},"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["github/workflows",{"_index":4012,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["githubaccountid",{"_index":1696,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubaccounts",{"_index":1643,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["githubintegration",{"_index":2440,"title":{},"body":{"interfaces/Project.html":{}}}],["githubintegrationpage",{"_index":160,"title":{"components/GithubIntegrationPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["githubissuelist",{"_index":1678,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubissuelist(projectid",{"_index":1708,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubpulllist",{"_index":1679,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubpulllist(projectid",{"_index":1710,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubusername",{"_index":1622,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitintegration",{"_index":1626,"title":{"interfaces/GitIntegration.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"coverage.html":{}}}],["gitintegrationservice",{"_index":1180,"title":{"injectables/GitIntegrationService.html":{}},"body":{"modules/DashboardModule.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["gitissue",{"_index":1628,"title":{"interfaces/GitIssue.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["gitpull",{"_index":1629,"title":{"interfaces/GitPull.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["gitrepositories",{"_index":1627,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitrepository",{"_index":1624,"title":{"interfaces/GitRepository.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["give",{"_index":940,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["given",{"_index":1271,"title":{},"body":{"injectables/DialogService.html":{},"classes/Enum.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{}}}],["global",{"_index":1616,"title":{},"body":{"interfaces/FormGroup.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":3837,"title":{},"body":{"index.html":{}}}],["going",{"_index":1236,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["graph",{"_index":3872,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":896,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["greater",{"_index":3810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["green",{"_index":2927,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["group",{"_index":865,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{}}}],["group'},{'name",{"_index":181,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["group.component",{"_index":2804,"title":{},"body":{"modules/SettingsModule.html":{}}}],["group.component.html",{"_index":2097,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.scss",{"_index":2096,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts",{"_index":2095,"title":{},"body":{"components/ListGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:13",{"_index":2099,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts:9",{"_index":2098,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group/list",{"_index":2094,"title":{},"body":{"components/ListGroupComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["grouped",{"_index":3942,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["grouping",{"_index":3600,"title":{},"body":{"interfaces/Workspace.html":{}}}],["grow",{"_index":1990,"title":{},"body":{"components/InputComponent.html":{},"components/MainViewComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{}}}],["guard",{"_index":2103,"title":{"guards/LoggedInUsersGuard.html":{}},"body":{"coverage.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["guard.ts",{"_index":3957,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["guards",{"_index":2104,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"additional-documentation/architecture.html":{}}}],["h2",{"_index":899,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["h3",{"_index":677,"title":{},"body":{"components/BoardPage.html":{}}}],["h4",{"_index":2100,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["h:mm",{"_index":2861,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["handleerror",{"_index":2116,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["handleerror(error",{"_index":2119,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["has(object",{"_index":3522,"title":{},"body":{"classes/Utils.html":{}}}],["hasgithubintegration",{"_index":1680,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["hasgithubintegration(projectid",{"_index":1712,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["header",{"_index":667,"title":{},"body":{"components/BoardPage.html":{},"components/CardComponent.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["headers",{"_index":2570,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["heading",{"_index":763,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/SchedulePage.html":{}}}],["height",{"_index":660,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["hello",{"_index":3923,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["here",{"_index":1239,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"index.html":{}}}],["hh:mm",{"_index":737,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["hidden",{"_index":2259,"title":{},"body":{"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{}}}],["high",{"_index":3261,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["highest",{"_index":3263,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["highly",{"_index":2746,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["hint",{"_index":1959,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["hook",{"_index":1331,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"directives/FocusInitialDirective.html":{},"components/WorkspacesListPage.html":{}}}],["host",{"_index":277,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/IconComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["host.focused",{"_index":1993,"title":{},"body":{"components/InputComponent.html":{}}}],["host.ng",{"_index":1998,"title":{},"body":{"components/InputComponent.html":{}}}],["host:not(.focused",{"_index":1996,"title":{},"body":{"components/InputComponent.html":{}}}],["hostbinding",{"_index":295,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/SnackbarComponent.html":{}}}],["hostbinding('class.focused",{"_index":1975,"title":{},"body":{"components/InputComponent.html":{}}}],["hostbinding('class.important",{"_index":294,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["hostbinding('style.animation",{"_index":2916,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["hostbinding('style.height",{"_index":1856,"title":{},"body":{"components/IconComponent.html":{}}}],["hostbinding('style.width",{"_index":1854,"title":{},"body":{"components/IconComponent.html":{}}}],["hostbindings",{"_index":264,"title":{},"body":{"components/AlertDialog.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/SnackbarComponent.html":{}}}],["hostlistener",{"_index":1017,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hostlistener('click",{"_index":1016,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hostlisteners",{"_index":1012,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hosts",{"_index":1808,"title":{},"body":{"components/IconComponent.html":{}}}],["hover",{"_index":750,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["html",{"_index":116,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["htmlelement",{"_index":3199,"title":{},"body":{"components/TaskListPage.html":{}}}],["http",{"_index":357,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://localhost:4200",{"_index":3842,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":2163,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":330,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["httpclientmodule",{"_index":2162,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["httpcontext",{"_index":2576,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httpevent",{"_index":1470,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":1466,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpheaders",{"_index":2577,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httpinterceptor",{"_index":1471,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpparams",{"_index":2579,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httprequest",{"_index":1465,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["https://nodejs.org/en",{"_index":3831,"title":{},"body":{"index.html":{}}}],["https://workflow.adiantek.ovh/${this.form.value.language}/settings/localization",{"_index":2792,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["hue",{"_index":3494,"title":{},"body":{"classes/UserUtils.html":{}}}],["human",{"_index":3559,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/localization.html":{}}}],["i18n",{"_index":3983,"title":{},"body":{"additional-documentation/localization.html":{}}}],["icon",{"_index":679,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icon'},{'name",{"_index":164,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icon(value",{"_index":1842,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.html",{"_index":1792,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":1791,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.hide",{"_index":813,"title":{},"body":{"components/ButtonComponent.html":{}}}],["icon.pipe",{"_index":3399,"title":{},"body":{"modules/TasksModule.html":{}}}],["icon.pipe.ts",{"_index":3252,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"coverage.html":{}}}],["icon.pipe.ts:7",{"_index":3254,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskTypeIconPipe.html":{}}}],["iconcomponent",{"_index":163,"title":{"components/IconComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icondefinition",{"_index":788,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"components/OptionComponent.html":{}}}],["iconname",{"_index":1816,"title":{},"body":{"components/IconComponent.html":{}}}],["iconprefix",{"_index":1818,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":576,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["id",{"_index":769,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"components/NavElementWorkspaceComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{}}}],["id).subscribe",{"_index":2279,"title":{},"body":{"components/MemberListComponent.html":{}}}],["identifier",{"_index":1499,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"injectables/ProjectService.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"injectables/WorkspaceService.html":{},"coverage.html":{}}}],["ids",{"_index":2302,"title":{},"body":{"injectables/MemberService.html":{}}}],["image",{"_index":889,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{}}}],["immediately",{"_index":957,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectPage.html":{},"interceptors/ErrorInterceptor.html":{},"directives/FocusInitialDirective.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/WorkspacesListPage.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["import('../settings/settings.module').then((m",{"_index":1215,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["import('../tasks/tasks.module').then((m",{"_index":1223,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./dashboard/dashboard.module').then((m",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./emails/emails.module').then((m",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./messages/messages.module').then((m",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":262,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputDateTimeComponent.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/architecture.html":{}}}],["important_data",{"_index":2546,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["importexports",{"_index":2237,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":761,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["included",{"_index":4021,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["inclusive",{"_index":2515,"title":{},"body":{"classes/Random.html":{}}}],["increase",{"_index":2749,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["independent",{"_index":3824,"title":{},"body":{"index.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1491,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["indexof",{"_index":3545,"title":{},"body":{"classes/Utils.html":{}}}],["indicate",{"_index":283,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["indicates",{"_index":300,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["infomracja",{"_index":2733,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["information",{"_index":791,"title":{},"body":{"components/ButtonComponent.html":{},"components/ControlAccessor.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/StatusService.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["information's",{"_index":3914,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["inherited",{"_index":933,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["initassigneechanging",{"_index":3185,"title":{},"body":{"components/TaskListPage.html":{}}}],["initcheckfortouch",{"_index":925,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["initial.directive",{"_index":2227,"title":{},"body":{"modules/MainModule.html":{}}}],["initial.directive.ts",{"_index":1590,"title":{},"body":{"directives/FocusInitialDirective.html":{},"coverage.html":{}}}],["initial.directive.ts:19",{"_index":1598,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initial.directive.ts:9",{"_index":1596,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initialization",{"_index":969,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["initialize",{"_index":1037,"title":{},"body":{"components/ControlAccessor.html":{},"directives/FocusInitialDirective.html":{},"miscellaneous/functions.html":{}}}],["initializer",{"_index":3804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initmocks",{"_index":3730,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject",{"_index":72,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["inject(mat_dialog_data",{"_index":58,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["injectable",{"_index":317,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"coverage.html":{}}}],["injectables",{"_index":319,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"overview.html":{}}}],["injection",{"_index":3281,"title":{},"body":{"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["injector",{"_index":2164,"title":{},"body":{"modules/MainModule.html":{}}}],["injects",{"_index":268,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["inline",{"_index":1611,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["input",{"_index":166,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["input'},{'name",{"_index":169,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["input.component.html",{"_index":1954,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":1953,"title":{},"body":{"components/InputComponent.html":{}}}],["input::placeholder",{"_index":1997,"title":{},"body":{"components/InputComponent.html":{}}}],["inputassigneecomponent",{"_index":165,"title":{"components/InputAssigneeComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["inputcomponent",{"_index":168,"title":{"components/InputComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inputdatetimecomponent",{"_index":170,"title":{"components/InputDateTimeComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inputs",{"_index":706,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["inputstring",{"_index":3543,"title":{},"body":{"classes/Utils.html":{}}}],["insiders",{"_index":2423,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["insiders://vscode.git/clone?url=https://github.com/${project.githubintegration",{"_index":2417,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["install",{"_index":3828,"title":{},"body":{"index.html":{}}}],["installand",{"_index":3835,"title":{},"body":{"index.html":{}}}],["installation_id",{"_index":1781,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["installationid",{"_index":1724,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["instance",{"_index":272,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"injectables/DialogService.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["instances",{"_index":3819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instead",{"_index":3088,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"index.html":{}}}],["int",{"_index":2574,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["integration",{"_index":162,"title":{"additional-documentation/continuos-integration.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/continuos-integration.html":{}}}],["integration.gitrepositories",{"_index":2068,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["integration.interface",{"_index":1637,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["integration.interface.ts",{"_index":1621,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"coverage.html":{}}}],["integration.page",{"_index":1211,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["integration.page.html",{"_index":1778,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.scss",{"_index":1777,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts",{"_index":1776,"title":{},"body":{"components/GithubIntegrationPage.html":{},"coverage.html":{}}}],["integration.page.ts:10",{"_index":1779,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts:16",{"_index":1780,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.service",{"_index":1207,"title":{},"body":{"modules/DashboardModule.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["integration.service.ts",{"_index":1662,"title":{},"body":{"injectables/GitIntegrationService.html":{},"coverage.html":{}}}],["integration.service.ts:103",{"_index":1702,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:107",{"_index":1711,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:111",{"_index":1692,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:117",{"_index":1704,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:128",{"_index":1715,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:133",{"_index":1706,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:25",{"_index":1683,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:33",{"_index":1725,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:50",{"_index":1723,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:56",{"_index":1707,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:60",{"_index":1686,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:66",{"_index":1705,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:81",{"_index":1694,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:85",{"_index":1700,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:89",{"_index":1713,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:93",{"_index":1709,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:97",{"_index":1690,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration/github",{"_index":1210,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/GithubIntegrationPage.html":{},"coverage.html":{}}}],["integrationentrycomponent",{"_index":173,"title":{"components/IntegrationEntryComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["integrationgithubcomponent",{"_index":175,"title":{"components/IntegrationGithubComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["integrations",{"_index":1640,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{}}}],["integrations'},{'name",{"_index":210,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["integrations.page",{"_index":2806,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["integrations.page.html",{"_index":1641,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.scss",{"_index":1642,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts",{"_index":1634,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"coverage.html":{}}}],["integrations.page.ts:17",{"_index":2759,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:21",{"_index":2763,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:25",{"_index":2762,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:38",{"_index":2760,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:44",{"_index":2761,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations/settings",{"_index":1633,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{}}}],["intercept",{"_index":1462,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":1464,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":1457,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1459,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptors/error.interceptor",{"_index":2229,"title":{},"body":{"modules/MainModule.html":{}}}],["interface",{"_index":86,"title":{"interfaces/AddMemberDialogData.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"interfaces/ModifyUser.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"interfaces/ModifyUser.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{},"coverage.html":{},"additional-documentation/localization.html":{}}}],["interfaces",{"_index":251,"title":{},"body":{"interfaces/AddMemberDialogData.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"interfaces/ModifyUser.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["interfaces/project.interface",{"_index":2463,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{}}}],["interfaces/request",{"_index":366,"title":{},"body":{"injectables/ApiService.html":{}}}],["interfaces/session.interface",{"_index":2848,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["interfaces/status.interface",{"_index":581,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{}}}],["interfaces/task.interface",{"_index":582,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["interfaces/workspace.interface",{"_index":2487,"title":{},"body":{"components/ProjectsListPage.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["interval",{"_index":1732,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["interval(100).pipe",{"_index":1745,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["invalid",{"_index":2000,"title":{},"body":{"components/InputComponent.html":{}}}],["invalid.ng",{"_index":1001,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["invoked",{"_index":956,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["ip",{"_index":3477,"title":{},"body":{"interfaces/UserSession.html":{}}}],["isanydialogopen",{"_index":1250,"title":{},"body":{"injectables/DialogService.html":{}}}],["isbuttondisabled",{"_index":3435,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["isdisabled",{"_index":981,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["isfiltersopen",{"_index":3586,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["isgithubintegrationavailable",{"_index":3094,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["isletter",{"_index":3519,"title":{},"body":{"classes/Utils.html":{}}}],["isletter(char",{"_index":3525,"title":{},"body":{"classes/Utils.html":{}}}],["isloggedin",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnumeric",{"_index":1411,"title":{},"body":{"classes/Enum.html":{}}}],["isnumeric(enumtype",{"_index":1426,"title":{},"body":{"classes/Enum.html":{}}}],["isopen",{"_index":1867,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["isopen(val",{"_index":1913,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["isownerofrepository",{"_index":1681,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["isownerofrepository(repositoryname",{"_index":1714,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["issubtasksrow",{"_index":3179,"title":{},"body":{"components/TaskListPage.html":{}}}],["issue",{"_index":1689,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"miscellaneous/enumerations.html":{}}}],["issue.title",{"_index":3171,"title":{},"body":{"components/TaskDialog.html":{}}}],["issueattachgithub",{"_index":3089,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["issuelist",{"_index":3095,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["issuenumbergithub",{"_index":3162,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["it's",{"_index":1718,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsAccountPage.html":{},"index.html":{},"additional-documentation/architecture.html":{}}}],["it\\'s",{"_index":2757,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["italian",{"_index":3976,"title":{},"body":{"additional-documentation/localization.html":{}}}],["italiano",{"_index":2784,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["italy",{"_index":3977,"title":{},"body":{"additional-documentation/localization.html":{}}}],["items",{"_index":669,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["jego",{"_index":2742,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["jesli",{"_index":2731,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["join",{"_index":3551,"title":{},"body":{"classes/Utils.html":{}}}],["js",{"_index":2152,"title":{},"body":{"modules/MainModule.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{}}}],["json",{"_index":374,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["justify",{"_index":671,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["k",{"_index":1444,"title":{},"body":{"classes/Enum.html":{}}}],["karma",{"_index":3855,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":1309,"title":{},"body":{"classes/ESet.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"components/SelectComponent.html":{},"classes/Utils.html":{}}}],["keyframes",{"_index":2942,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["keys",{"_index":1412,"title":{},"body":{"classes/Enum.html":{},"classes/Utils.html":{}}}],["keys(enumtype",{"_index":1434,"title":{},"body":{"classes/Enum.html":{}}}],["kingdom",{"_index":3972,"title":{},"body":{"additional-documentation/localization.html":{}}}],["konta",{"_index":2730,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["konto",{"_index":2739,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["label",{"_index":930,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["label'},{'name",{"_index":225,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["label.component",{"_index":3392,"title":{},"body":{"modules/TasksModule.html":{}}}],["label.component.html",{"_index":3006,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.scss",{"_index":3005,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts",{"_index":3004,"title":{},"body":{"components/StatusLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:16",{"_index":3010,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:17",{"_index":3012,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:18",{"_index":3013,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:19",{"_index":3011,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:27",{"_index":3009,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:33",{"_index":3021,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:35",{"_index":3022,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:36",{"_index":3019,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:38",{"_index":3025,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:42",{"_index":3024,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:46",{"_index":3015,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:58",{"_index":3014,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:62",{"_index":3018,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:69",{"_index":3017,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label/status",{"_index":3003,"title":{},"body":{"components/StatusLabelComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["label::after",{"_index":2001,"title":{},"body":{"components/InputComponent.html":{}}}],["labels",{"_index":2044,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["landing",{"_index":178,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["landingpagecomponent",{"_index":177,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["language",{"_index":2774,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["language.name",{"_index":2793,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["languages",{"_index":2768,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["last",{"_index":941,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/WorkspacesListPage.html":{}}}],["lastused",{"_index":3478,"title":{},"body":{"interfaces/UserSession.html":{}}}],["layout",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["leas",{"_index":1430,"title":{},"body":{"classes/Enum.html":{}}}],["leave",{"_index":2286,"title":{},"body":{"injectables/MemberService.html":{}}}],["leave(projectid",{"_index":2292,"title":{},"body":{"injectables/MemberService.html":{}}}],["left",{"_index":661,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["legend",{"_index":115,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["length",{"_index":3809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["length.validator",{"_index":1131,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["length.validator.ts",{"_index":3682,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["letcontext",{"_index":2078,"title":{"interfaces/LetContext.html":{}},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"coverage.html":{}}}],["letdirective",{"_index":246,"title":{"directives/LetDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["letter",{"_index":3528,"title":{},"body":{"classes/Utils.html":{}}}],["letters",{"_index":3920,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["lg",{"_index":908,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["li",{"_index":1942,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{}}}],["libraries",{"_index":3518,"title":{},"body":{"classes/Utils.html":{}}}],["library",{"_index":3865,"title":{},"body":{"index.html":{}}}],["license",{"_index":2564,"title":{"license.html":{}},"body":{"components/RegisterPage.html":{},"license.html":{}}}],["lifecycle",{"_index":1330,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"directives/FocusInitialDirective.html":{},"components/WorkspacesListPage.html":{}}}],["limitafter",{"_index":2619,"title":{},"body":{"components/SchedulePage.html":{}}}],["limitbefore",{"_index":2620,"title":{},"body":{"components/SchedulePage.html":{}}}],["line",{"_index":1072,"title":{},"body":{"components/ControlAccessor.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{}}}],["link",{"_index":1240,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["list",{"_index":180,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesRoutingModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/localization.html":{}}}],["list'},{'name",{"_index":188,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["list(projectid",{"_index":2294,"title":{},"body":{"injectables/MemberService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["list.component",{"_index":1187,"title":{},"body":{"modules/DashboardModule.html":{}}}],["list.component.html",{"_index":2265,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.scss",{"_index":2264,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts",{"_index":2263,"title":{},"body":{"components/MemberListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":2276,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:15",{"_index":2275,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:18",{"_index":2270,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:21",{"_index":2271,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:24",{"_index":2269,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:33",{"_index":2273,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:39",{"_index":2274,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.page",{"_index":1203,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["list.page.html",{"_index":2477,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.scss",{"_index":2476,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts",{"_index":2475,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["list.page.ts:105",{"_index":3203,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:123",{"_index":3190,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:143",{"_index":3195,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:149",{"_index":3193,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:155",{"_index":3201,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:159",{"_index":3200,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:17",{"_index":2486,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:18",{"_index":2485,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:20",{"_index":2484,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:22",{"_index":2479,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:34",{"_index":3209,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:35",{"_index":3206,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:36",{"_index":3207,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:37",{"_index":3208,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:38",{"_index":3205,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:40",{"_index":3214,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:41",{"_index":2481,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:42",{"_index":3217,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:43",{"_index":3216,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:44",{"_index":3213,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:45",{"_index":2483,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{}}}],["list.page.ts:46",{"_index":3204,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:47",{"_index":3628,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:48",{"_index":3215,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:49",{"_index":2480,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:50",{"_index":3210,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:51",{"_index":3211,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:53",{"_index":3212,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:54",{"_index":3187,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:62",{"_index":3624,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:75",{"_index":3627,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:79",{"_index":3630,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:95",{"_index":3197,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:99",{"_index":3188,"title":{},"body":{"components/TaskListPage.html":{}}}],["list/member",{"_index":1186,"title":{},"body":{"modules/DashboardModule.html":{},"components/MemberListComponent.html":{},"coverage.html":{}}}],["list/projects",{"_index":1202,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ProjectsListPage.html":{},"coverage.html":{}}}],["list/task",{"_index":3175,"title":{},"body":{"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["list/workspaces",{"_index":1205,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["listed",{"_index":3982,"title":{},"body":{"additional-documentation/localization.html":{}}}],["listelement",{"_index":2330,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["listgroupcomponent",{"_index":179,"title":{"components/ListGroupComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["lists",{"_index":2296,"title":{},"body":{"injectables/MemberService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["listwithtasks",{"_index":3036,"title":{},"body":{"injectables/StatusService.html":{}}}],["listwithtasks(projectid",{"_index":3047,"title":{},"body":{"injectables/StatusService.html":{}}}],["literal",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"interfaces/UserSession.html":{},"interfaces/Workspace.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1272,"title":{},"body":{"injectables/DialogService.html":{},"components/WorkspacesListPage.html":{}}}],["loadchildren",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["loader",{"_index":792,"title":{},"body":{"components/ButtonComponent.html":{}}}],["loadgithubintegration",{"_index":1645,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["loadparamsfromurl",{"_index":35,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["loadproject",{"_index":1318,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["loadproject(id",{"_index":1325,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["loadrepositories",{"_index":2053,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["loads",{"_index":1327,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["loadworkspace",{"_index":1387,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["loadworkspace(id",{"_index":1389,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["loadworkspaces",{"_index":3622,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["local",{"_index":2236,"title":{},"body":{"modules/MainModule.html":{},"components/SettingsSessionsPage.html":{},"miscellaneous/variables.html":{}}}],["locales",{"_index":3984,"title":{},"body":{"additional-documentation/localization.html":{}}}],["localization",{"_index":212,"title":{"additional-documentation/localization.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/localization.html":{}}}],["localization.page",{"_index":2807,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["localization.page.html",{"_index":2767,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.scss",{"_index":2766,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts",{"_index":2765,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"coverage.html":{}}}],["localization.page.ts:11",{"_index":2775,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:15",{"_index":2790,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:44",{"_index":2770,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:48",{"_index":2772,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:50",{"_index":2771,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:54",{"_index":2773,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization/settings",{"_index":2764,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{}}}],["localize`are",{"_index":633,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`cancel",{"_index":640,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`close",{"_index":1297,"title":{},"body":{"injectables/DialogService.html":{}}}],["localize`delete",{"_index":1300,"title":{},"body":{"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`detach",{"_index":645,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`email",{"_index":2561,"title":{},"body":{"components/RegisterPage.html":{}}}],["localize`epic",{"_index":3379,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`given",{"_index":861,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["localize`high",{"_index":3271,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`highest",{"_index":3272,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`if",{"_index":635,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`issue",{"_index":3378,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`low",{"_index":3269,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`lowest",{"_index":3268,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`medium",{"_index":3270,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`merge",{"_index":639,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`ok",{"_index":1517,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`only",{"_index":1545,"title":{},"body":{"classes/Filters.html":{}}}],["localize`something",{"_index":1514,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`subtask",{"_index":3380,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`success",{"_index":1513,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`task",{"_index":3376,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`user",{"_index":2140,"title":{},"body":{"components/LoginPage.html":{},"pipes/TaskTypePipe.html":{}}}],["localize`username",{"_index":2562,"title":{},"body":{"components/RegisterPage.html":{}}}],["localize`wrong",{"_index":2144,"title":{},"body":{"components/LoginPage.html":{}}}],["localized",{"_index":3966,"title":{},"body":{"additional-documentation/localization.html":{}}}],["localstorage.getitem('logged",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["localstorage.removeitem('logged",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["localstorage.setitem('logged",{"_index":2128,"title":{},"body":{"components/LoginPage.html":{}}}],["located",{"_index":3949,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["location.href",{"_index":2791,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["location.reload",{"_index":651,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["log",{"_index":1238,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/LoginPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/UpperNavigationComponent.html":{}}}],["logged",{"_index":2142,"title":{},"body":{"components/LoginPage.html":{}}}],["loggedinusersguard",{"_index":427,"title":{"guards/LoggedInUsersGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoggedInUsersGuard.html":{},"coverage.html":{}}}],["logging",{"_index":3899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logic",{"_index":3941,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["login",{"_index":476,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/UpperNavigationComponent.html":{}}}],["login'},{'name",{"_index":183,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["login(this.form.value",{"_index":2131,"title":{},"body":{"components/LoginPage.html":{}}}],["login(undefined",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.page.html",{"_index":2114,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":2113,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":182,"title":{"components/LoginPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginsubscription",{"_index":2115,"title":{},"body":{"components/LoginPage.html":{}}}],["logo",{"_index":885,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{}}}],["logout",{"_index":477,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/RestoreAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["low",{"_index":3257,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["lower",{"_index":3919,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["lowest",{"_index":3255,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["m",{"_index":1521,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["m.authmodule",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.dashboardmodule",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.emailsmodule",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.messagesmodule",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingsmodule",{"_index":1216,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["m.tasksmodule",{"_index":1224,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["m_w",{"_index":2498,"title":{},"body":{"classes/Random.html":{}}}],["m_z",{"_index":2499,"title":{},"body":{"classes/Random.html":{}}}],["ma",{"_index":2740,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["mail",{"_index":3826,"title":{},"body":{"index.html":{}}}],["maila",{"_index":2737,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["main",{"_index":185,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["main/_main.module",{"_index":2800,"title":{},"body":{"modules/SettingsModule.html":{}}}],["main/classes/control",{"_index":996,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["main/classes/e",{"_index":3218,"title":{},"body":{"components/TaskListPage.html":{}}}],["main/classes/enum.class",{"_index":3133,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["main/classes/filters.class",{"_index":3220,"title":{},"body":{"components/TaskListPage.html":{}}}],["main/classes/random.class",{"_index":3490,"title":{},"body":{"classes/UserUtils.html":{}}}],["main/components/snackbar/snackbar.interface",{"_index":2971,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["main/decorators/service.decorator",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SnackbarService.html":{}}}],["main/dialogs/alert/alert.dialog",{"_index":3306,"title":{},"body":{"injectables/TaskService.html":{}}}],["main/interfaces/filters.interface",{"_index":1543,"title":{},"body":{"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent-1.html":{}}}],["main/operators/apply",{"_index":3308,"title":{},"body":{"injectables/TaskService.html":{}}}],["main/services/api.service",{"_index":1731,"title":{},"body":{"injectables/GitIntegrationService.html":{},"injectables/UserService.html":{}}}],["main/services/dialog.service",{"_index":720,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["main/services/router",{"_index":79,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["main/services/snackbar.service",{"_index":2920,"title":{},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/TaskService.html":{}}}],["main/validators/email.validator",{"_index":2545,"title":{},"body":{"components/RegisterPage.html":{}}}],["main/validators/max",{"_index":1130,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["main/validators/password.validator",{"_index":868,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["main/validators/required.validator",{"_index":869,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{}}}],["main/validators/same",{"_index":871,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["mainly",{"_index":3906,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["mainmodule",{"_index":405,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["mainmodule.injector",{"_index":2249,"title":{},"body":{"modules/MainModule.html":{}}}],["maintained",{"_index":3911,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["mainviewcomponent",{"_index":184,"title":{"components/MainViewComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":3510,"title":{},"body":{"classes/UserUtils.html":{},"additional-documentation/localization.html":{}}}],["making",{"_index":3992,"title":{},"body":{"additional-documentation/localization.html":{}}}],["manage",{"_index":1242,"title":{},"body":{"injectables/DialogService.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["management",{"_index":3605,"title":{},"body":{"injectables/WorkspaceService.html":{},"index.html":{}}}],["map",{"_index":709,"title":{},"body":{"components/BoardTaskComponent.html":{},"injectables/DialogService.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/SinglePersonSchedule.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["map(([statuses",{"_index":3061,"title":{},"body":{"injectables/StatusService.html":{}}}],["map(([tasks",{"_index":3352,"title":{},"body":{"injectables/TaskService.html":{}}}],["map((accounts",{"_index":1648,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["map((c",{"_index":3502,"title":{},"body":{"classes/UserUtils.html":{}}}],["map((character",{"_index":3547,"title":{},"body":{"classes/Utils.html":{}}}],["map((e",{"_index":1455,"title":{},"body":{"classes/Enum.html":{}}}],["map((members",{"_index":2310,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["map((projects",{"_index":1772,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["map((response",{"_index":1736,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["map((v",{"_index":1450,"title":{},"body":{"classes/Enum.html":{}}}],["map((workspace",{"_index":2491,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["map((workspaces",{"_index":2470,"title":{},"body":{"injectables/ProjectService.html":{},"components/UpperNavigationComponent.html":{}}}],["map(projectid",{"_index":2297,"title":{},"body":{"injectables/MemberService.html":{}}}],["map.delete(uid",{"_index":2975,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["map.set(uid",{"_index":2973,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["margin",{"_index":662,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["mark",{"_index":2874,"title":{},"body":{"components/SettingsSessionsPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["mask",{"_index":2500,"title":{},"body":{"classes/Random.html":{}}}],["master",{"_index":4017,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["mat",{"_index":809,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/IconComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["mat_dialog_data",{"_index":75,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/variables.html":{}}}],["matautocompletemodule",{"_index":2166,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":2168,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1502,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"classes/Utils.html":{}}}],["match(error",{"_index":1526,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["match(value",{"_index":1522,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["matcheckboxmodule",{"_index":2170,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":250,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["matdatepickermodule",{"_index":2174,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1252,"title":{},"body":{"injectables/DialogService.html":{}}}],["matdialogmodule",{"_index":2176,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":41,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/variables.html":{}}}],["matdialogtestingprovider",{"_index":3738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1789,"title":{},"body":{"components/IconComponent.html":{},"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":2177,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":2518,"title":{},"body":{"classes/Random.html":{}}}],["maticonmodule",{"_index":2179,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":2181,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":2183,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matnativedatemodule",{"_index":2172,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":2185,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":2187,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodule",{"_index":2189,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":2191,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":2193,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1982,"title":{},"body":{"components/InputComponent.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["maxlength",{"_index":3562,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["maxlengthvalidator",{"_index":1129,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["maxlengthvalidator(50",{"_index":1123,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["maxlengthvalidator(length",{"_index":3808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["md",{"_index":907,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["medium",{"_index":3259,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["member",{"_index":19,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["member.dialog",{"_index":1128,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{}}}],["member.dialog.html",{"_index":24,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.scss",{"_index":22,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.ts",{"_index":12,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"coverage.html":{}}}],["member.dialog.ts:21",{"_index":69,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:22",{"_index":70,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:24",{"_index":67,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:26",{"_index":45,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:29",{"_index":59,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:34",{"_index":56,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:41",{"_index":55,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:47",{"_index":51,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:58",{"_index":54,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.interface",{"_index":569,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["member.interface.ts",{"_index":2445,"title":{},"body":{"interfaces/ProjectMember.html":{},"coverage.html":{}}}],["member.user.name",{"_index":1929,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.name[0",{"_index":1928,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.surname",{"_index":1930,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.username",{"_index":1931,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member/add",{"_index":11,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["memberlist",{"_index":1106,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/MemberListComponent.html":{}}}],["memberlistcomponent",{"_index":187,"title":{"components/MemberListComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["members",{"_index":109,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{}}}],["members'},{'name",{"_index":144,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["members(members",{"_index":1905,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["members.page",{"_index":1194,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["members.page.html",{"_index":1104,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.scss",{"_index":1103,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts",{"_index":1102,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["members.page.ts:106",{"_index":1323,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:116",{"_index":1321,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:122",{"_index":1334,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:140",{"_index":1328,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:21",{"_index":1122,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:25",{"_index":1337,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:26",{"_index":1124,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:30",{"_index":1339,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:33",{"_index":1120,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:35",{"_index":1125,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts:36",{"_index":1347,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:37",{"_index":1126,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:39",{"_index":1111,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:42",{"_index":1343,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:46",{"_index":1341,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:48",{"_index":1345,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:49",{"_index":1320,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:65",{"_index":1112,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:74",{"_index":1119,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:80",{"_index":1326,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:91",{"_index":1335,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.reduce((acc",{"_index":2311,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["members.values",{"_index":1911,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["members/create",{"_index":1101,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["members/edit",{"_index":1198,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["membersarray",{"_index":1910,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["memberservice",{"_index":541,"title":{"injectables/MemberService.html":{}},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["merged",{"_index":637,"title":{},"body":{"components/BoardPage.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["mergedpulllist",{"_index":3077,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["mergemap",{"_index":1733,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["mergemap((url",{"_index":1738,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["message",{"_index":256,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{},"injectables/TaskService.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{}}}],["messages.routing",{"_index":2319,"title":{},"body":{"modules/MessagesModule.html":{}}}],["messagesmodule",{"_index":2314,"title":{"modules/MessagesModule.html":{}},"body":{"modules/MessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesroutingmodule",{"_index":2317,"title":{"modules/MessagesRoutingModule.html":{}},"body":{"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["method",{"_index":356,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["methodologies",{"_index":3912,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["methods",{"_index":32,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["middle",{"_index":1989,"title":{},"body":{"components/InputComponent.html":{}}}],["min",{"_index":659,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["minlength",{"_index":3561,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["miragejs",{"_index":3763,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":3772,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":735,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["mock",{"_index":3905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mocking",{"_index":3803,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modal",{"_index":1269,"title":{},"body":{"injectables/DialogService.html":{}}}],["mode",{"_index":3896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":971,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["modify",{"_index":3609,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["modifyuser",{"_index":2321,"title":{"interfaces/ModifyUser.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["module",{"_index":396,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["module.ts",{"_index":3938,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["modules",{"_index":398,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectPage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["moduser",{"_index":3471,"title":{},"body":{"injectables/UserService.html":{}}}],["moment",{"_index":4013,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["month",{"_index":2856,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["more",{"_index":3913,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["more_vert",{"_index":2352,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["move",{"_index":627,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"injectables/ProjectService.html":{},"components/TaskListPage.html":{}}}],["moved",{"_index":2451,"title":{},"body":{"injectables/ProjectService.html":{}}}],["moveiteminarray",{"_index":564,"title":{},"body":{"components/BoardPage.html":{}}}],["moveiteminarray(event.container.data",{"_index":619,"title":{},"body":{"components/BoardPage.html":{}}}],["mozliwosc",{"_index":2741,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["multi",{"_index":2241,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":3823,"title":{},"body":{"index.html":{}}}],["n",{"_index":3505,"title":{},"body":{"classes/UserUtils.html":{}}}],["na",{"_index":2725,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["named",{"_index":3918,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["naming",{"_index":3915,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["native",{"_index":800,"title":{},"body":{"components/ButtonComponent.html":{}}}],["nav",{"_index":190,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navelementcomponent",{"_index":189,"title":{"components/NavElementComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navelementworkspacecomponent",{"_index":192,"title":{"components/NavElementWorkspaceComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigatebyurl",{"_index":2406,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["navigates",{"_index":1115,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["navigation",{"_index":2877,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation'},{'name",{"_index":218,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navigation.component",{"_index":2216,"title":{},"body":{"modules/MainModule.html":{}}}],["navigation.component.html",{"_index":2879,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.scss",{"_index":2878,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts",{"_index":2876,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["navigation.component.ts:14",{"_index":2882,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:16",{"_index":2884,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:18",{"_index":2883,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:20",{"_index":2881,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:25",{"_index":3442,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:41",{"_index":3452,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:43",{"_index":3447,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:44",{"_index":3450,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:45",{"_index":3448,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:46",{"_index":3449,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:48",{"_index":3446,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:49",{"_index":3445,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:51",{"_index":3439,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:66",{"_index":3441,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:72",{"_index":3440,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:75",{"_index":3443,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:84",{"_index":3438,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:87",{"_index":3444,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation/sidebar",{"_index":2215,"title":{},"body":{"modules/MainModule.html":{},"components/SidebarNavigationComponent.html":{},"coverage.html":{}}}],["navigation/upper",{"_index":2223,"title":{},"body":{"modules/MainModule.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["need",{"_index":2595,"title":{},"body":{"interfaces/RequestOptions.html":{},"components/SettingsAccountPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/localization.html":{}}}],["needed",{"_index":3042,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["neutral",{"_index":893,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["new",{"_index":62,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AuthRoutingModule.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"additional-documentation/localization.html":{}}}],["newly",{"_index":1258,"title":{},"body":{"injectables/DialogService.html":{}}}],["newstatus",{"_index":607,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatus.final",{"_index":631,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatus.id",{"_index":614,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatusindex",{"_index":603,"title":{},"body":{"components/BoardPage.html":{}}}],["newtask",{"_index":3348,"title":{},"body":{"injectables/TaskService.html":{}}}],["newtask.id",{"_index":3324,"title":{},"body":{"injectables/TaskService.html":{}}}],["newvalue",{"_index":3411,"title":{},"body":{"classes/TestNgControl.html":{}}}],["newworkspaceid",{"_index":1324,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/ProjectService.html":{}}}],["newworkspaceid]).then",{"_index":1386,"title":{},"body":{"components/EditProjectPage.html":{}}}],["next",{"_index":1071,"title":{},"body":{"components/ControlAccessor.html":{},"interceptors/ErrorInterceptor.html":{},"components/RegisterPage.html":{}}}],["next(value",{"_index":1520,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["next.handle(req).pipe",{"_index":1475,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nextstage",{"_index":2530,"title":{},"body":{"components/RegisterPage.html":{}}}],["ng",{"_index":1587,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["ngafterviewinit",{"_index":1594,"title":{},"body":{"directives/FocusInitialDirective.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{}}}],["ngcontrol",{"_index":922,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{}}}],["ngcontrol.control?.errors",{"_index":3427,"title":{},"body":{"components/TextareaComponent.html":{}}}],["nglet",{"_index":247,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["nglet(value",{"_index":2087,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["ngmodule",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["ngmoduleconfig",{"_index":2235,"title":{},"body":{"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngmoduleconfig.declarations",{"_index":2245,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.exportdeclarations",{"_index":2246,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.importexports",{"_index":2244,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.imports",{"_index":2243,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.providers",{"_index":2247,"title":{},"body":{"modules/MainModule.html":{}}}],["ngondestroy",{"_index":533,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["no_content_provided",{"_index":3733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":1918,"title":{},"body":{"components/InputAssigneeComponent.html":{},"injectables/RouterExtensionsService.html":{},"components/StatusLabelComponent.html":{},"index.html":{}}}],["node.children[0",{"_index":2614,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["node.js",{"_index":3829,"title":{},"body":{"index.html":{}}}],["node.value.params",{"_index":2615,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["none",{"_index":831,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["not(.add",{"_index":1935,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(.add):hover",{"_index":1936,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(.line",{"_index":1943,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(:last",{"_index":2605,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/TaskListPage.html":{}}}],["nothing",{"_index":3907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notify",{"_index":3908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["now",{"_index":1785,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/SettingsSessionsPage.html":{}}}],["npm",{"_index":3830,"title":{},"body":{"index.html":{}}}],["null",{"_index":1065,"title":{},"body":{"components/ControlAccessor.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"classes/TestNgControl.html":{},"pipes/ValidationErrorPipe.html":{}}}],["number",{"_index":88,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["number(e[1",{"_index":1453,"title":{},"body":{"classes/Enum.html":{}}}],["number(event.container.element.nativeelement.dataset['index",{"_index":604,"title":{},"body":{"components/BoardPage.html":{}}}],["number(k",{"_index":1443,"title":{},"body":{"classes/Enum.html":{}}}],["number(key",{"_index":1441,"title":{},"body":{"classes/Enum.html":{}}}],["number(projectid",{"_index":100,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["number(this.expandedsubtasks.has(taskid",{"_index":3239,"title":{},"body":{"components/TaskListPage.html":{}}}],["number(this.form?.controls[index].value",{"_index":1580,"title":{},"body":{"components/FiltersComponent.html":{}}}],["number(v",{"_index":1448,"title":{},"body":{"classes/Enum.html":{}}}],["number(workspaceid",{"_index":98,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["numberrepresentation",{"_index":3500,"title":{},"body":{"classes/UserUtils.html":{}}}],["numeric",{"_index":1429,"title":{},"body":{"classes/Enum.html":{}}}],["object",{"_index":270,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["object.entries(enumtype",{"_index":1451,"title":{},"body":{"classes/Enum.html":{}}}],["object.hasownproperty(key",{"_index":3552,"title":{},"body":{"classes/Utils.html":{}}}],["object.keys(enumtype",{"_index":1440,"title":{},"body":{"classes/Enum.html":{}}}],["object.keys(enumtype).filter((k",{"_index":1442,"title":{},"body":{"classes/Enum.html":{}}}],["object.values(enumtype",{"_index":1446,"title":{},"body":{"classes/Enum.html":{}}}],["object.values(taskpriority",{"_index":3127,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["obs",{"_index":1477,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["observable",{"_index":68,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["observable((subscriber",{"_index":1518,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["observables",{"_index":1501,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["observe",{"_index":2572,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["observersmodule",{"_index":2156,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["occurrence",{"_index":3535,"title":{},"body":{"classes/Utils.html":{}}}],["of(newtask",{"_index":3325,"title":{},"body":{"injectables/TaskService.html":{}}}],["of(null",{"_index":3332,"title":{},"body":{"injectables/TaskService.html":{}}}],["of(true",{"_index":3338,"title":{},"body":{"injectables/TaskService.html":{}}}],["offset",{"_index":827,"title":{},"body":{"components/ButtonComponent.html":{}}}],["omit",{"_index":3084,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["onblur",{"_index":1956,"title":{},"body":{"components/InputComponent.html":{}}}],["onclick",{"_index":1011,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["onclick(event",{"_index":1015,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["ondestroy",{"_index":524,"title":{},"body":{"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/EditProjectPage.html":{}}}],["one",{"_index":1416,"title":{},"body":{"classes/Enum.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["onfocus",{"_index":1957,"title":{},"body":{"components/InputComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["only_my_tasks",{"_index":1539,"title":{},"body":{"classes/Filters.html":{}}}],["only_my_tasks(currentuserid",{"_index":1540,"title":{},"body":{"classes/Filters.html":{}}}],["onprojectidchange",{"_index":3101,"title":{},"body":{"components/TaskDialog.html":{}}}],["onprojectidchange(projectid",{"_index":3109,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["onsameurlnavigation",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["onsuccess",{"_index":612,"title":{},"body":{"components/BoardPage.html":{}}}],["onworkspaceidchange",{"_index":3102,"title":{},"body":{"components/TaskDialog.html":{}}}],["onworkspaceidchange(workspaceid",{"_index":3111,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["opacity",{"_index":685,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{}}}],["open",{"_index":1248,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{},"additional-documentation/localization.html":{}}}],["open(addmemberdialog",{"_index":1140,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["open(component",{"_index":1267,"title":{},"body":{"injectables/DialogService.html":{}}}],["open(taskdialog",{"_index":646,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["openaddmembersdialog",{"_index":1107,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["openbelow",{"_index":3432,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["opencreatenewtaskdialog",{"_index":3277,"title":{},"body":{"injectables/TaskService.html":{}}}],["opencreatesubtaskdialog",{"_index":3278,"title":{},"body":{"injectables/TaskService.html":{}}}],["opencreatesubtaskdialog(projectid",{"_index":3296,"title":{},"body":{"injectables/TaskService.html":{}}}],["opened",{"_index":1259,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{}}}],["openedittaskdialog",{"_index":3279,"title":{},"body":{"injectables/TaskService.html":{}}}],["openedittaskdialog(projectid",{"_index":3299,"title":{},"body":{"injectables/TaskService.html":{}}}],["openerrordialog",{"_index":1249,"title":{},"body":{"injectables/DialogService.html":{}}}],["openerrordialog(error",{"_index":1273,"title":{},"body":{"injectables/DialogService.html":{}}}],["opennavelement",{"_index":2333,"title":{},"body":{"components/NavElementComponent.html":{}}}],["opennewtaskdialog",{"_index":534,"title":{},"body":{"components/BoardPage.html":{}}}],["openprofile",{"_index":3436,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["openproject",{"_index":2478,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["openproject(project",{"_index":2482,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["opens",{"_index":1256,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/TaskService.html":{}}}],["openwithlocalvscode",{"_index":2365,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscode(project",{"_index":2384,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscodeinsiders",{"_index":2366,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscodeinsiders(project",{"_index":2386,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithvscode",{"_index":2367,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithvscode(project",{"_index":2388,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openworkspace",{"_index":2368,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["openworkspace(workspace",{"_index":3629,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["option",{"_index":1534,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{}}}],["option'},{'name",{"_index":195,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["option.assigneeid",{"_index":1551,"title":{},"body":{"classes/Filters.html":{}}}],["option.component.html",{"_index":2428,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.component.scss",{"_index":2427,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.selected",{"_index":2681,"title":{},"body":{"components/SelectComponent.html":{}}}],["option.viewvalue",{"_index":2698,"title":{},"body":{"components/SelectComponent.html":{}}}],["option/option.component",{"_index":2675,"title":{},"body":{"components/SelectComponent.html":{}}}],["optional",{"_index":50,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":3939,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["optioncomponent",{"_index":194,"title":{"components/OptionComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":334,"title":{},"body":{"injectables/ApiService.html":{},"components/BoardTaskComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options'},{'name",{"_index":235,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["options.component",{"_index":1190,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["options.component.html",{"_index":3572,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.scss",{"_index":3571,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts",{"_index":3570,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["options.component.ts:12",{"_index":3579,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:13",{"_index":3577,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:15",{"_index":3581,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:16",{"_index":3580,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:17",{"_index":3591,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:19",{"_index":3575,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:20",{"_index":3592,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:22",{"_index":3574,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:23",{"_index":3590,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:26",{"_index":3588,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:29",{"_index":3589,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:31",{"_index":3587,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.interface",{"_index":367,"title":{},"body":{"injectables/ApiService.html":{}}}],["options.interface.ts",{"_index":2569,"title":{},"body":{"interfaces/RequestOptions.html":{},"coverage.html":{}}}],["options/view",{"_index":1189,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["optionsmap",{"_index":2657,"title":{},"body":{"components/SelectComponent.html":{}}}],["origin",{"_index":2889,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["originalmethod.apply(this",{"_index":1500,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["os",{"_index":2866,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["osname",{"_index":2863,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["other[1].find((status",{"_index":3070,"title":{},"body":{"injectables/StatusService.html":{}}}],["otherwise",{"_index":1117,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{}}}],["out",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RestoreAccountPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"modules/TasksModule.html":{},"components/UpperNavigationComponent.html":{},"overview.html":{}}}],["outlet",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet'},{'name",{"_index":223,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["outlet.component",{"_index":2219,"title":{},"body":{"modules/MainModule.html":{}}}],["outlet.component.html",{"_index":2949,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet.component.scss",{"_index":2948,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts",{"_index":2947,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"coverage.html":{}}}],["outlet.component.ts:11",{"_index":2952,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts:15",{"_index":2954,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet/snackbar",{"_index":2218,"title":{},"body":{"modules/MainModule.html":{},"components/SnackbarOutletComponent.html":{},"coverage.html":{}}}],["outline",{"_index":824,"title":{},"body":{"components/ButtonComponent.html":{}}}],["output",{"_index":2043,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["outputs",{"_index":2034,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["overflow",{"_index":2257,"title":{},"body":{"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SchedulePage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{}}}],["overlay",{"_index":1868,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["overlaymodule",{"_index":2158,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":1574,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["overview",{"_index":3873,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":1721,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsAccountPage.html":{}}}],["owner",{"_index":1717,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["p",{"_index":900,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["p.project",{"_index":2473,"title":{},"body":{"injectables/ProjectService.html":{}}}],["package",{"_index":3746,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":110,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["page",{"_index":238,"title":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/continuos-integration.html":{}}}],["page'},{'name",{"_index":148,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["page.component",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":2076,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":2075,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":2074,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:8",{"_index":2077,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/landing",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["pages/board/board.page",{"_index":3393,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/change",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/create",{"_index":1193,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/delete",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/edit",{"_index":1197,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/forgot",{"_index":469,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/github",{"_index":1209,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["pages/login/login.page",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/projects",{"_index":1201,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/register/register.page",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/restore",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/schedule/schedule.page",{"_index":3394,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/settings",{"_index":2805,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["pages/settings/settings.page",{"_index":2829,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["pages/task",{"_index":3395,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/workspaces",{"_index":1204,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["param",{"_index":309,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"directives/FocusInitialDirective.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1750,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/RequestOptions.html":{},"injectables/RouterExtensionsService.html":{}}}],["paramsinheritancestrategy",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parent",{"_index":3082,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["parenttask",{"_index":3297,"title":{},"body":{"injectables/TaskService.html":{}}}],["parenttask.id",{"_index":3347,"title":{},"body":{"injectables/TaskService.html":{}}}],["parenttaskid",{"_index":728,"title":{},"body":{"components/BoardTaskComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["parser",{"_index":2847,"title":{},"body":{"components/SettingsSessionsPage.html":{},"dependencies.html":{}}}],["part",{"_index":2578,"title":{},"body":{"interfaces/RequestOptions.html":{},"additional-documentation/architecture.html":{}}}],["partial",{"_index":3141,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pascalcase",{"_index":3541,"title":{},"body":{"classes/Utils.html":{}}}],["pass",{"_index":271,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{}}}],["passable",{"_index":2592,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["passed",{"_index":301,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ControlAccessor.html":{},"classes/Utils.html":{}}}],["passes",{"_index":1114,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["passthrough",{"_index":289,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["password",{"_index":479,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"interfaces/ModifyUser.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"miscellaneous/functions.html":{}}}],["password'},{'name",{"_index":137,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["password.page",{"_index":465,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["password.page.html",{"_index":852,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.scss",{"_index":851,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts",{"_index":850,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["password.page.ts:14",{"_index":1602,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:16",{"_index":855,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:17",{"_index":1604,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:19",{"_index":1605,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:24",{"_index":856,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts:28",{"_index":1603,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:29",{"_index":867,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:34",{"_index":864,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:47",{"_index":857,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password/change",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{},"coverage.html":{}}}],["password/forgot",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["passwords",{"_index":862,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["passwordvalidator",{"_index":858,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["patch",{"_index":325,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["patch(url",{"_index":348,"title":{},"body":{"injectables/ApiService.html":{}}}],["path",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/RequestOptions.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pathmatch",{"_index":1213,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pattern",{"_index":3563,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["pending",{"_index":787,"title":{},"body":{"components/ButtonComponent.html":{}}}],["pentosquare",{"_index":3573,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["people",{"_index":2291,"title":{},"body":{"injectables/MemberService.html":{},"components/SchedulePage.html":{}}}],["per",{"_index":2986,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["performs",{"_index":952,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["period",{"_index":2755,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["permanently",{"_index":2751,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["person",{"_index":2645,"title":{},"body":{"components/SchedulePage.html":{}}}],["personal_data",{"_index":2547,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["pewno",{"_index":2726,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["picker",{"_index":2010,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["pipe",{"_index":958,"title":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"pipes/ValidationErrorPipe.html":{},"coverage.html":{},"additional-documentation/architecture.html":{}}}],["pipe(filter((result",{"_index":1296,"title":{},"body":{"injectables/DialogService.html":{}}}],["pipe(map((projects",{"_index":1658,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["pipe(map((workspace",{"_index":3150,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pipe(skip(1",{"_index":3460,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["pipe.ts",{"_index":3960,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["pipeline",{"_index":4009,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["pipes",{"_index":2992,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["pipes/status",{"_index":3396,"title":{},"body":{"modules/TasksModule.html":{}}}],["pipes/task",{"_index":3398,"title":{},"body":{"modules/TasksModule.html":{}}}],["pipes/validation",{"_index":2231,"title":{},"body":{"modules/MainModule.html":{}}}],["pipetransform",{"_index":2998,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}}}],["pl",{"_index":2785,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["pl.xlf",{"_index":3987,"title":{},"body":{"additional-documentation/localization.html":{}}}],["placed",{"_index":3944,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["placeholder",{"_index":684,"title":{},"body":{"components/BoardPage.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TextareaComponent.html":{}}}],["platformmodule",{"_index":2160,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":2148,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["plus",{"_index":3631,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["pointer",{"_index":681,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["poland",{"_index":3979,"title":{},"body":{"additional-documentation/localization.html":{}}}],["polish",{"_index":3978,"title":{},"body":{"additional-documentation/localization.html":{}}}],["polski",{"_index":2786,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["populatedtasks",{"_index":3230,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatedtasks.push",{"_index":3236,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatedtasks.push(task",{"_index":3233,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatesubtasks",{"_index":3186,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatesubtasks(tasklist",{"_index":3202,"title":{},"body":{"components/TaskListPage.html":{}}}],["popup",{"_index":2723,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["position",{"_index":742,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["post",{"_index":326,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["post(url",{"_index":350,"title":{},"body":{"injectables/ApiService.html":{}}}],["postgithubintegration",{"_index":1682,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["postgithubintegration(installationid",{"_index":1722,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["powerful",{"_index":3822,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":814,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{}}}],["prefix:not(.pending",{"_index":817,"title":{},"body":{"components/ButtonComponent.html":{}}}],["preparedusername",{"_index":1768,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["press",{"_index":4005,"title":{},"body":{"additional-documentation/localization.html":{}}}],["previousstage",{"_index":2531,"title":{},"body":{"components/RegisterPage.html":{}}}],["previousstatus",{"_index":605,"title":{},"body":{"components/BoardPage.html":{}}}],["previousstatus.tasks[previoustaskindex",{"_index":611,"title":{},"body":{"components/BoardPage.html":{}}}],["previousstatusindex",{"_index":601,"title":{},"body":{"components/BoardPage.html":{}}}],["previoustaskindex",{"_index":609,"title":{},"body":{"components/BoardPage.html":{}}}],["primary",{"_index":796,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["principle",{"_index":3928,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["priority",{"_index":3115,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityIconPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["priority.enum",{"_index":3136,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["priority.enum.ts",{"_index":3779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["priority.pipe",{"_index":3400,"title":{},"body":{"modules/TasksModule.html":{}}}],["priority.pipe.ts",{"_index":3266,"title":{},"body":{"pipes/TaskPriorityPipe.html":{},"coverage.html":{}}}],["priority.pipe.ts:7",{"_index":3267,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["privacy",{"_index":2566,"title":{},"body":{"components/RegisterPage.html":{}}}],["private",{"_index":91,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["privileges",{"_index":2324,"title":{},"body":{"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/Workspace.html":{}}}],["process",{"_index":1666,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["production",{"_index":3801,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/continuos-integration.html":{}}}],["profile",{"_index":2745,"title":{},"body":{"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["programmatic",{"_index":986,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["progress",{"_index":2582,"title":{},"body":{"interfaces/RequestOptions.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"interfaces/StatusWithTasks.html":{}}}],["project",{"_index":143,"title":{"interfaces/Project.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["project's",{"_index":2443,"title":{},"body":{"interfaces/Project.html":{}}}],["project'},{'name",{"_index":146,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["project.githubintegration",{"_index":1759,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["project.id",{"_index":2409,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["project.interface",{"_index":3603,"title":{},"body":{"interfaces/Workspace.html":{}}}],["project.name",{"_index":1301,"title":{},"body":{"injectables/DialogService.html":{},"components/TaskDialog.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["project.name).join",{"_index":1660,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["project.page",{"_index":1195,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["project.page.html",{"_index":1153,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.scss",{"_index":1152,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.ts",{"_index":1151,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{},"coverage.html":{}}}],["project.page.ts:104",{"_index":1371,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:116",{"_index":1370,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:125",{"_index":1373,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:21",{"_index":1375,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:24",{"_index":1159,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:26",{"_index":1377,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:27",{"_index":1380,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:28",{"_index":1158,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:32",{"_index":1157,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:33",{"_index":1378,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:34",{"_index":1160,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:36",{"_index":1161,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:37",{"_index":1376,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:38",{"_index":1154,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:39",{"_index":1379,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:40",{"_index":1369,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:59",{"_index":1155,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:69",{"_index":1372,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:72",{"_index":1156,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:89",{"_index":1374,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.project",{"_index":2493,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["project.service",{"_index":1734,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["project/create",{"_index":1150,"title":{},"body":{"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["project/edit",{"_index":1199,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectPage.html":{},"coverage.html":{}}}],["projectid",{"_index":89,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["projectid/edit",{"_index":1220,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectid/edit/general",{"_index":1221,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectid/edit/members",{"_index":1222,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectlist",{"_index":2306,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["projectmember",{"_index":567,"title":{"interfaces/ProjectMember.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["projectmembers",{"_index":2441,"title":{},"body":{"interfaces/Project.html":{}}}],["projects",{"_index":197,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["projects.filter",{"_index":1773,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["projects.map((project",{"_index":1659,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["projects.push(...workspace.projectswithprivileges.map((p",{"_index":2472,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects/spaces",{"_index":3599,"title":{},"body":{"interfaces/Workspace.html":{}}}],["projectservice",{"_index":540,"title":{"injectables/ProjectService.html":{}},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["projectslistpage",{"_index":196,"title":{"components/ProjectsListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["projectswithprivileges",{"_index":3602,"title":{},"body":{"interfaces/Workspace.html":{}}}],["projectwithpriv.project.name",{"_index":2418,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["prompt",{"_index":938,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["propagate",{"_index":973,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["propagation",{"_index":1010,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation.directive",{"_index":2225,"title":{},"body":{"modules/MainModule.html":{}}}],["propagation.directive.ts",{"_index":1009,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{},"coverage.html":{}}}],["propagation.directive.ts:8",{"_index":1014,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation]'},{'name",{"_index":243,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["properly",{"_index":2151,"title":{},"body":{"modules/MainModule.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"properties.html":{}}}],["property",{"_index":935,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["propertydescriptor",{"_index":1497,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["propertykey",{"_index":1495,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["props",{"_index":1815,"title":{},"body":{"components/IconComponent.html":{}}}],["protect",{"_index":3955,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["provide",{"_index":1031,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":360,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":368,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["provider.helper",{"_index":1068,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["provider.helper.ts",{"_index":3405,"title":{},"body":{"classes/TestNgControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provider.helper.ts:4",{"_index":3408,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:5",{"_index":3410,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:8",{"_index":3412,"title":{},"body":{"classes/TestNgControl.html":{}}}],["providers",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"components/ControlAccessor.html":{},"modules/DashboardModule.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/variables.html":{}}}],["przywrocenia",{"_index":2743,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["pull",{"_index":624,"title":{},"body":{"components/BoardPage.html":{},"injectables/GitIntegrationService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["pulllist",{"_index":3096,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pullrequest.title",{"_index":3172,"title":{},"body":{"components/TaskDialog.html":{}}}],["purple",{"_index":2026,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["push",{"_index":4016,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["put",{"_index":327,"title":{},"body":{"injectables/ApiService.html":{}}}],["put(url",{"_index":352,"title":{},"body":{"injectables/ApiService.html":{}}}],["query",{"_index":2580,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["querylist",{"_index":2667,"title":{},"body":{"components/SelectComponent.html":{}}}],["queryoptions",{"_index":2658,"title":{},"body":{"components/SelectComponent.html":{}}}],["question",{"_index":1800,"title":{},"body":{"components/IconComponent.html":{}}}],["question_mark",{"_index":1858,"title":{},"body":{"components/IconComponent.html":{}}}],["radius",{"_index":745,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["random",{"_index":2496,"title":{"classes/Random.html":{}},"body":{"classes/Random.html":{},"classes/UserUtils.html":{},"coverage.html":{}}}],["random(id",{"_index":3491,"title":{},"body":{"classes/UserUtils.html":{}}}],["random(numberrepresentation",{"_index":3513,"title":{},"body":{"classes/UserUtils.html":{}}}],["random.random",{"_index":3493,"title":{},"body":{"classes/UserUtils.html":{}}}],["randomnumber",{"_index":3492,"title":{},"body":{"classes/UserUtils.html":{}}}],["reactiveformsmodule",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["readable",{"_index":3560,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/localization.html":{}}}],["readme.md",{"_index":4025,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["readonly",{"_index":1866,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["readonlyarray",{"_index":2596,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["ready",{"_index":3836,"title":{},"body":{"index.html":{}}}],["rebuild",{"_index":4018,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["receive",{"_index":1609,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["recommended",{"_index":2747,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["recoveraccount",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["red",{"_index":842,"title":{},"body":{"components/CardComponent.html":{},"components/InputComponent.html":{}}}],["redirectto",{"_index":1217,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["reduce((sum",{"_index":3504,"title":{},"body":{"classes/UserUtils.html":{}}}],["ref",{"_index":2432,"title":{},"body":{"components/OptionComponent.html":{}}}],["reference",{"_index":269,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"injectables/DialogService.html":{},"directives/FocusInitialDirective.html":{}}}],["regex",{"_index":3531,"title":{},"body":{"classes/Utils.html":{}}}],["regexindexof",{"_index":3520,"title":{},"body":{"classes/Utils.html":{}}}],["regexindexof(string",{"_index":3530,"title":{},"body":{"classes/Utils.html":{}}}],["regexp",{"_index":1771,"title":{},"body":{"injectables/GitIntegrationService.html":{},"classes/Utils.html":{}}}],["register",{"_index":478,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["register'},{'name",{"_index":199,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["register(this.form.value",{"_index":2557,"title":{},"body":{"components/RegisterPage.html":{}}}],["register(undefined",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.page.html",{"_index":2526,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":2525,"title":{},"body":{"components/RegisterPage.html":{}}}],["registeronchange",{"_index":926,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registeronchange(fn",{"_index":960,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched",{"_index":927,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched(fn",{"_index":975,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerpage",{"_index":198,"title":{"components/RegisterPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["registers",{"_index":962,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerstage",{"_index":2527,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["registerstage.important_data",{"_index":2543,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerstage.personal_data",{"_index":2554,"title":{},"body":{"components/RegisterPage.html":{}}}],["registersubscription",{"_index":2528,"title":{},"body":{"components/RegisterPage.html":{}}}],["regular",{"_index":3758,"title":{},"body":{"dependencies.html":{}}}],["relative",{"_index":743,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["reload",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["remember",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["remembered",{"_index":3479,"title":{},"body":{"interfaces/UserSession.html":{}}}],["removal",{"_index":1698,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["remove",{"_index":1932,"title":{},"body":{"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{}}}],["remove(projectid",{"_index":2299,"title":{},"body":{"injectables/MemberService.html":{}}}],["removes",{"_index":2301,"title":{},"body":{"injectables/MemberService.html":{}}}],["repeat",{"_index":891,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{}}}],["repeatpassword",{"_index":859,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["replace",{"_index":3807,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["replaced",{"_index":3901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replacements",{"_index":3805,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":3310,"title":{},"body":{"injectables/TaskService.html":{}}}],["report",{"_index":2581,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["reportprogress",{"_index":2573,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["repositories",{"_index":1729,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["repository",{"_index":638,"title":{},"body":{"components/BoardPage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/Project.html":{},"index.html":{}}}],["repository.fullname",{"_index":2072,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositorylist",{"_index":2049,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositorylistloaded",{"_index":2050,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositoryname",{"_index":1685,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["req",{"_index":1468,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["request",{"_index":328,"title":{},"body":{"injectables/ApiService.html":{},"components/BoardPage.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{}}}],["request(method",{"_index":354,"title":{},"body":{"injectables/ApiService.html":{}}}],["requested",{"_index":987,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["requestoptions",{"_index":335,"title":{"interfaces/RequestOptions.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{},"coverage.html":{}}}],["requests",{"_index":2575,"title":{},"body":{"interfaces/RequestOptions.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["require",{"_index":3744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":3892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":945,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{}}}],["required::after",{"_index":1984,"title":{},"body":{"components/InputComponent.html":{}}}],["requiredvalidator",{"_index":66,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["requires",{"_index":3508,"title":{},"body":{"classes/UserUtils.html":{},"additional-documentation/localization.html":{}}}],["reset",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"components/SettingsAccountPage.html":{}}}],["resetpassword(undefined",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetsubscription",{"_index":853,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["resolved",{"_index":4010,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["response",{"_index":1503,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"interfaces/RequestOptions.html":{},"miscellaneous/variables.html":{}}}],["response.deleted",{"_index":2134,"title":{},"body":{"components/LoginPage.html":{}}}],["response.id]).subscribe",{"_index":1146,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["response.link",{"_index":1737,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["response.operator.ts",{"_index":3676,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["response?.error?.status",{"_index":1505,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["response?.status",{"_index":1506,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["responsetype",{"_index":373,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/RequestOptions.html":{}}}],["responsibility",{"_index":3927,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["restore",{"_index":201,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["restoreaccountpage",{"_index":200,"title":{"components/RestoreAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["result",{"_index":642,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Random.html":{},"components/UpperNavigationComponent.html":{}}}],["result).subscribe",{"_index":650,"title":{},"body":{"components/BoardPage.html":{},"components/UpperNavigationComponent.html":{}}}],["results",{"_index":249,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["return",{"_index":106,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"injectables/MemberService.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"injectables/RouterExtensionsService.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{}}}],["returned",{"_index":3558,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["returns",{"_index":52,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["reversible",{"_index":2754,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["revert",{"_index":2756,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["revive",{"_index":1237,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["rgb(0",{"_index":753,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{}}}],["rgba(0",{"_index":1940,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["right",{"_index":770,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["ripple",{"_index":2027,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["root",{"_index":369,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"additional-documentation/continuos-integration.html":{}}}],["root'},{'name",{"_index":125,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["rotate",{"_index":2940,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["rotate(45deg",{"_index":2939,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["rotate(90deg",{"_index":1612,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/TaskListPage.html":{}}}],["router",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["routerextensions",{"_index":42,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["routerextensionsservice",{"_index":43,"title":{"injectables/RouterExtensionsService.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/RouterExtensionsService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{}}}],["routerlink",{"_index":2335,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["routermodule",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(routes",{"_index":480,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":425,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/functions.html":{},"overview.html":{},"routes.html":{},"additional-documentation/architecture.html":{}}}],["routetoproject",{"_index":2369,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routetoproject(project",{"_index":2391,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routetoworkspace",{"_index":2370,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routing.ts",{"_index":3940,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["row",{"_index":2284,"title":{},"body":{"components/MemberListComponent.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{}}}],["row.hasownproperty('withsubtasks",{"_index":3221,"title":{},"body":{"components/TaskListPage.html":{}}}],["row.name",{"_index":2494,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["row.user.email",{"_index":2281,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.name",{"_index":2282,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.surname",{"_index":2283,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.username",{"_index":2280,"title":{},"body":{"components/MemberListComponent.html":{}}}],["rows",{"_index":2646,"title":{},"body":{"components/SchedulePage.html":{},"components/TextareaComponent.html":{}}}],["run",{"_index":1664,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["running",{"_index":3851,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["runs",{"_index":4020,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["rxjs",{"_index":83,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":2885,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["s.user.id",{"_index":3356,"title":{},"body":{"injectables/TaskService.html":{}}}],["same",{"_index":863,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["sameasvalidator",{"_index":870,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sameasvalidator('password",{"_index":860,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["sameasvalidator(comparewith",{"_index":3815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sampandonte/untitled",{"_index":2442,"title":{},"body":{"interfaces/Project.html":{}}}],["save",{"_index":1163,"title":{},"body":{"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{}}}],["savefilters",{"_index":1556,"title":{},"body":{"components/FiltersComponent.html":{}}}],["scale(1",{"_index":811,"title":{},"body":{"components/ButtonComponent.html":{}}}],["scale(1.02",{"_index":2890,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["scaley",{"_index":2354,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["schedule",{"_index":204,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/typealiases.html":{}}}],["schedule(projectid",{"_index":3301,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.page.html",{"_index":2618,"title":{},"body":{"components/SchedulePage.html":{}}}],["schedule.page.scss",{"_index":2617,"title":{},"body":{"components/SchedulePage.html":{}}}],["schedule.tasks.get(null).push(task",{"_index":3362,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.has(null",{"_index":3360,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.set(dayjs(task.estimateddate).format('yyyy",{"_index":3359,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.set(null",{"_index":3361,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedulepage",{"_index":203,"title":{"components/SchedulePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["schedules",{"_index":3353,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedules.find((s",{"_index":3355,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedules.push",{"_index":3354,"title":{},"body":{"injectables/TaskService.html":{}}}],["screen",{"_index":903,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["script",{"_index":4023,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["search",{"_index":1801,"title":{},"body":{"components/IconComponent.html":{},"classes/Utils.html":{},"additional-documentation/localization.html":{}}}],["searching",{"_index":3894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":3832,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["section",{"_index":755,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/localization.html":{}}}],["sections",{"_index":2639,"title":{},"body":{"components/SchedulePage.html":{}}}],["secure",{"_index":2146,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["security",{"_index":2750,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["see",{"_index":1004,"title":{},"body":{"components/CheckboxComponent.html":{},"additional-documentation/architecture.html":{}}}],["seed",{"_index":2504,"title":{},"body":{"classes/Random.html":{},"miscellaneous/functions.html":{}}}],["select",{"_index":1869,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["select'},{'name",{"_index":206,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["select(member",{"_index":1877,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["select(status",{"_index":3016,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["select.component.html",{"_index":2656,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":2655,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectcomponent",{"_index":205,"title":{"components/SelectComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":2659,"title":{},"body":{"components/SelectComponent.html":{}}}],["selecteditem.viewvalue",{"_index":2697,"title":{},"body":{"components/SelectComponent.html":{}}}],["selection",{"_index":3991,"title":{},"body":{"additional-documentation/localization.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["self",{"_index":902,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["send",{"_index":340,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["sends",{"_index":338,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["separated",{"_index":3934,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["server",{"_index":2588,"title":{},"body":{"interfaces/RequestOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/continuos-integration.html":{}}}],["serves",{"_index":4004,"title":{},"body":{"additional-documentation/localization.html":{}}}],["service",{"_index":321,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/SelectComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["service.ts",{"_index":3963,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["services",{"_index":3961,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["services/api.service",{"_index":2233,"title":{},"body":{"modules/MainModule.html":{}}}],["services/auth.service",{"_index":873,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["services/dialog.service",{"_index":2234,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["services/git",{"_index":1206,"title":{},"body":{"modules/DashboardModule.html":{}}}],["services/project.service",{"_index":1133,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["services/sessions.service",{"_index":2849,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["services/status.service",{"_index":583,"title":{},"body":{"components/BoardPage.html":{}}}],["services/task.service",{"_index":584,"title":{},"body":{"components/BoardPage.html":{}}}],["services/workspace.service",{"_index":1134,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["servicevalidator",{"_index":3667,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["servicevalidator(errorvalidationtree",{"_index":1493,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"miscellaneous/functions.html":{}}}],["session",{"_index":1485,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["session.geoip.city",{"_index":2871,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["session.geoip.country",{"_index":2872,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["session.useragent",{"_index":2869,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate",{"_index":732,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["sessiondate.format('ll",{"_index":2857,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('lll",{"_index":2858,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('mmmm",{"_index":2859,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('yyyy",{"_index":734,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TaskListPage.html":{}}}],["sessiondate.year",{"_index":2854,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions",{"_index":2823,"title":{},"body":{"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{}}}],["sessions'},{'name",{"_index":215,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sessions.page",{"_index":2809,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["sessions.page.html",{"_index":2832,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.scss",{"_index":2831,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts",{"_index":2830,"title":{},"body":{"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["sessions.page.ts:14",{"_index":2837,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:17",{"_index":2845,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:21",{"_index":2842,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:36",{"_index":2841,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:49",{"_index":2844,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions/settings",{"_index":2808,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["sessionservice",{"_index":2838,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessionslist",{"_index":2833,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessionsservice",{"_index":2699,"title":{"injectables/SessionsService.html":{}},"body":{"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["set",{"_index":279,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/ESet.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["set.class",{"_index":3219,"title":{},"body":{"components/TaskListPage.html":{}}}],["set.class.ts",{"_index":1305,"title":{},"body":{"classes/ESet.html":{},"coverage.html":{}}}],["set.class.ts:2",{"_index":1308,"title":{},"body":{"classes/ESet.html":{}}}],["setanimationname",{"_index":2899,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["setanimationname(name",{"_index":2914,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["setassignee(assignee",{"_index":1890,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["setdisabledstate",{"_index":928,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":978,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["setfilters(filters",{"_index":1567,"title":{},"body":{"components/FiltersComponent.html":{}}}],["seticon(value",{"_index":1823,"title":{},"body":{"components/IconComponent.html":{}}}],["setisopen(val",{"_index":1894,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["setmembers(members",{"_index":1891,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["setnewpassword",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{}}}],["setnewpassword(this.token",{"_index":880,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["setnewpassword(token",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["setnglet(value",{"_index":2092,"title":{},"body":{"directives/LetDirective.html":{}}}],["setstatuses(statuses",{"_index":3023,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["setter",{"_index":1814,"title":{},"body":{"components/IconComponent.html":{}}}],["settimeout",{"_index":806,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["setting",{"_index":866,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["settings",{"_index":208,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["settings.page.html",{"_index":2813,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":2812,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.routing",{"_index":2810,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settingsaccountpage",{"_index":207,"title":{"components/SettingsAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingsintegrationspage",{"_index":209,"title":{"components/SettingsIntegrationsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingslocalizationpage",{"_index":211,"title":{"components/SettingsLocalizationPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingsmodule",{"_index":2794,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingspage",{"_index":213,"title":{"components/SettingsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingsroutingmodule",{"_index":2798,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["settingssessionspage",{"_index":214,"title":{"components/SettingsSessionsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["setup_action",{"_index":1782,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["shadow",{"_index":749,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{}}}],["shape",{"_index":3959,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["share",{"_index":3962,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["shared",{"_index":2752,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["shopping_cart",{"_index":1836,"title":{},"body":{"components/IconComponent.html":{}}}],["shoppingcart",{"_index":1835,"title":{},"body":{"components/IconComponent.html":{}}}],["show",{"_index":2962,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["show(message",{"_index":2967,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["showalert",{"_index":1508,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["showalert(error",{"_index":1527,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["showalert(m",{"_index":1523,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["showarrow",{"_index":2331,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["shown",{"_index":793,"title":{},"body":{"components/ButtonComponent.html":{}}}],["showoptions",{"_index":2336,"title":{},"body":{"components/NavElementComponent.html":{}}}],["shows",{"_index":3625,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["shrink",{"_index":2640,"title":{},"body":{"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["side",{"_index":895,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["sidebar",{"_index":217,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sidebarnavigationcomponent",{"_index":216,"title":{"components/SidebarNavigationComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sie",{"_index":2728,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["simple",{"_index":254,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["simultaneously",{"_index":3170,"title":{},"body":{"components/TaskDialog.html":{}}}],["single",{"_index":2644,"title":{},"body":{"components/SchedulePage.html":{},"additional-documentation/architecture.html":{}}}],["singlepersonschedule",{"_index":2891,"title":{"interfaces/SinglePersonSchedule.html":{}},"body":{"interfaces/SinglePersonSchedule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["singleschedule.user.name.substring(0",{"_index":2636,"title":{},"body":{"components/SchedulePage.html":{}}}],["site",{"_index":2147,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["size",{"_index":759,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{}}}],["skip",{"_index":3453,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["skiplocationchange",{"_index":2407,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["sm",{"_index":904,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["small",{"_index":4022,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["smaller",{"_index":3511,"title":{},"body":{"classes/UserUtils.html":{}}}],["snackbar",{"_index":222,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbar'},{'name",{"_index":220,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbar.component.html",{"_index":2896,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.component.scss",{"_index":2895,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.interface",{"_index":2922,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.interface",{"_index":2957,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["snackbar:not(:last",{"_index":2960,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["snackbarcomponent",{"_index":219,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["snackbardata",{"_index":2921,"title":{"interfaces/SnackbarData.html":{}},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["snackbardata['color",{"_index":2925,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbardata['duration",{"_index":2924,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbardata['message",{"_index":2923,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbaroutletcomponent",{"_index":221,"title":{"components/SnackbarOutletComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["snackbars",{"_index":2950,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["snackbarservice",{"_index":2904,"title":{"injectables/SnackbarService.html":{}},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["snake",{"_index":1833,"title":{},"body":{"components/IconComponent.html":{}}}],["snake_case",{"_index":3542,"title":{},"body":{"classes/Utils.html":{}}}],["snakecase",{"_index":3521,"title":{},"body":{"classes/Utils.html":{}}}],["snakecase(inputstring",{"_index":3537,"title":{},"body":{"classes/Utils.html":{}}}],["snakecasename",{"_index":1796,"title":{},"body":{"components/IconComponent.html":{}}}],["snapshot",{"_index":2608,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["solid",{"_index":574,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["source.subscribe",{"_index":1519,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["space",{"_index":673,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["spaces",{"_index":3921,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["spain",{"_index":3975,"title":{},"body":{"additional-documentation/localization.html":{}}}],["span",{"_index":1947,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["spanish",{"_index":3974,"title":{},"body":{"additional-documentation/localization.html":{}}}],["spec\\.ts",{"_index":3893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":3284,"title":{},"body":{"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["specified",{"_index":3524,"title":{},"body":{"classes/Utils.html":{}}}],["specify",{"_index":297,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ValidationError.html":{},"miscellaneous/enumerations.html":{}}}],["specyfic",{"_index":3811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["speed",{"_index":3825,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":810,"title":{},"body":{"components/ButtonComponent.html":{},"modules/MainModule.html":{}}}],["spinner.hide",{"_index":812,"title":{},"body":{"components/ButtonComponent.html":{}}}],["split",{"_index":3501,"title":{},"body":{"classes/UserUtils.html":{},"classes/Utils.html":{}}}],["splitindex",{"_index":1845,"title":{},"body":{"components/IconComponent.html":{}}}],["splitter",{"_index":3933,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/.../_main.mocks.prod.ts",{"_index":3786,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../_main.mocks.ts",{"_index":3787,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../_main.module.ts",{"_index":3890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../alert.dialog.ts",{"_index":3774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../apply",{"_index":3781,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../catch",{"_index":3782,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../color.interface.ts",{"_index":3881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../debug.decorator.ts",{"_index":3783,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../email.validator.ts",{"_index":3784,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":3888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filters.interface.ts",{"_index":3882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mat",{"_index":3889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../max",{"_index":3788,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../page.decorator.ts",{"_index":3789,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../password.validator.ts",{"_index":3790,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../register.page.ts",{"_index":3775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../required.validator.ts",{"_index":3791,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../response.mock.helper.ts",{"_index":3891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../same",{"_index":3792,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../schedule.interface.ts",{"_index":3883,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../service",{"_index":3794,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../service.decorator.ts",{"_index":3793,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task",{"_index":3776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../task.dialog.ts",{"_index":3778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":3886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validator",{"_index":3785,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../workspaces.mocks.ts",{"_index":3795,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app",{"_index":3936,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/app/_main/_main.module.ts",{"_index":2149,"title":{},"body":{"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_main/classes/control",{"_index":1023,"title":{},"body":{"components/ControlAccessor.html":{},"coverage.html":{}}}],["src/app/_main/classes/e",{"_index":1304,"title":{},"body":{"classes/ESet.html":{},"coverage.html":{}}}],["src/app/_main/classes/enum.class.ts",{"_index":1405,"title":{},"body":{"classes/Enum.html":{},"coverage.html":{}}}],["src/app/_main/classes/enum.class.ts:10",{"_index":1427,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:32",{"_index":1435,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:48",{"_index":1438,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:70",{"_index":1414,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/filters.class.ts",{"_index":1538,"title":{},"body":{"classes/Filters.html":{},"coverage.html":{}}}],["src/app/_main/classes/filters.class.ts:5",{"_index":1541,"title":{},"body":{"classes/Filters.html":{}}}],["src/app/_main/classes/random.class.ts",{"_index":2497,"title":{},"body":{"classes/Random.html":{},"coverage.html":{}}}],["src/app/_main/classes/random.class.ts:17",{"_index":2510,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:2",{"_index":2506,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:3",{"_index":2508,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:4",{"_index":2502,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/utils.class.ts",{"_index":3514,"title":{},"body":{"classes/Utils.html":{},"coverage.html":{}}}],["src/app/_main/classes/utils.class.ts:12",{"_index":3533,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:22",{"_index":3538,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:45",{"_index":3523,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:59",{"_index":3526,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/components/button/button.component.ts",{"_index":781,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/button/button.component.ts:21",{"_index":797,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:23",{"_index":795,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:28",{"_index":790,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:33",{"_index":789,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:38",{"_index":803,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:43",{"_index":799,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/card/card.component.ts",{"_index":836,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/card/card.component.ts:11",{"_index":841,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/_main/components/card/card.component.ts:8",{"_index":840,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/_main/components/checkbox/checkbox.component.ts",{"_index":915,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/checkbox/checkbox.component.ts:10",{"_index":932,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts",{"_index":1552,"title":{},"body":{"components/FiltersComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/filters/filters.component.ts:12",{"_index":1558,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:21",{"_index":1566,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:25",{"_index":1562,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:26",{"_index":1557,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:32",{"_index":1560,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:37",{"_index":1561,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts",{"_index":1787,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/icon/icon.component.ts:100",{"_index":1820,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:105",{"_index":1817,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:113",{"_index":1832,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:19",{"_index":1802,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:35",{"_index":1797,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:52",{"_index":1822,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:59",{"_index":1810,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:66",{"_index":1807,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:73",{"_index":1827,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:83",{"_index":1830,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:95",{"_index":1811,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/input",{"_index":2003,"title":{},"body":{"components/InputDateTimeComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/input/input.component.ts",{"_index":1952,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/input/input.component.ts:18",{"_index":1971,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:23",{"_index":1964,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:28",{"_index":1970,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:33",{"_index":1969,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:38",{"_index":1966,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:40",{"_index":1972,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:42",{"_index":1963,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:48",{"_index":1974,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:52",{"_index":1973,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/main",{"_index":2251,"title":{},"body":{"components/MainViewComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/nav",{"_index":2326,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/option/option.component.ts",{"_index":2426,"title":{},"body":{"components/OptionComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/option/option.component.ts:10",{"_index":2434,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:11",{"_index":2433,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:13",{"_index":2435,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:15",{"_index":2437,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:17",{"_index":2431,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/select/select.component.ts",{"_index":2654,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/select/select.component.ts:12",{"_index":2669,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:13",{"_index":2665,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:14",{"_index":2666,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:15",{"_index":2661,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:16",{"_index":2671,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:18",{"_index":2670,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:20",{"_index":2673,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:24",{"_index":2663,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:41",{"_index":2662,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:49",{"_index":2664,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/sidebar",{"_index":2875,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/snackbar",{"_index":2946,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts",{"_index":2894,"title":{},"body":{"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:12",{"_index":2917,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:15",{"_index":2910,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:18",{"_index":2909,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:21",{"_index":2908,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:24",{"_index":2906,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:27",{"_index":2911,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:29",{"_index":2919,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:36",{"_index":2905,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:40",{"_index":2913,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:46",{"_index":2912,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:53",{"_index":2915,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.interface.ts",{"_index":2945,"title":{},"body":{"interfaces/SnackbarData.html":{},"coverage.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts",{"_index":3415,"title":{},"body":{"components/TextareaComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:13",{"_index":3421,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:18",{"_index":3426,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:23",{"_index":3423,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:28",{"_index":3422,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:30",{"_index":3425,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:32",{"_index":3420,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/upper",{"_index":3428,"title":{},"body":{"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["src/app/_main/decorators/debug.decorator.ts",{"_index":3663,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/page.decorator",{"_index":1171,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["src/app/_main/decorators/page.decorator.ts",{"_index":3666,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/service",{"_index":1489,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/service.decorator.ts",{"_index":3668,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts",{"_index":252,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:50",{"_index":267,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:58",{"_index":293,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:67",{"_index":276,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:73",{"_index":280,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:80",{"_index":287,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/directives/click",{"_index":1008,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{},"coverage.html":{}}}],["src/app/_main/directives/focus",{"_index":1589,"title":{},"body":{"directives/FocusInitialDirective.html":{},"coverage.html":{}}}],["src/app/_main/directives/let.directive.ts",{"_index":2079,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"coverage.html":{}}}],["src/app/_main/directives/let.directive.ts:11",{"_index":2089,"title":{},"body":{"directives/LetDirective.html":{}}}],["src/app/_main/directives/let.directive.ts:18",{"_index":2091,"title":{},"body":{"directives/LetDirective.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts",{"_index":1460,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:11",{"_index":1469,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:13",{"_index":1467,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:8",{"_index":1463,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interfaces/color.interface.ts",{"_index":3884,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/_main/interfaces/filters.interface.ts",{"_index":1532,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/_main/interfaces/filters.interface.ts:9",{"_index":1535,"title":{},"body":{"interfaces/FilterCheckbox.html":{}}}],["src/app/_main/interfaces/request",{"_index":2568,"title":{},"body":{"interfaces/RequestOptions.html":{},"coverage.html":{}}}],["src/app/_main/interfaces/validation",{"_index":3554,"title":{},"body":{"interfaces/ValidationError.html":{},"coverage.html":{}}}],["src/app/_main/operators/apply",{"_index":3673,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/operators/catch",{"_index":3675,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/pipes/validation",{"_index":3564,"title":{},"body":{"pipes/ValidationErrorPipe.html":{},"coverage.html":{}}}],["src/app/_main/services/api.service",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/WorkspaceService.html":{}}}],["src/app/_main/services/api.service.ts",{"_index":320,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/_main/services/api.service.ts:18",{"_index":331,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:30",{"_index":355,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:44",{"_index":347,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:54",{"_index":351,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:64",{"_index":336,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:74",{"_index":353,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:84",{"_index":349,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/dialog.service",{"_index":2488,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["src/app/_main/services/dialog.service.ts",{"_index":1241,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["src/app/_main/services/dialog.service.ts:101",{"_index":1266,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:18",{"_index":1277,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:19",{"_index":1276,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:21",{"_index":1279,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:23",{"_index":1253,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:36",{"_index":1268,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:55",{"_index":1260,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:66",{"_index":1255,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:72",{"_index":1274,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:87",{"_index":1262,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:91",{"_index":1264,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/router",{"_index":2606,"title":{},"body":{"injectables/RouterExtensionsService.html":{},"coverage.html":{}}}],["src/app/_main/services/snackbar.service.ts",{"_index":2961,"title":{},"body":{"injectables/SnackbarService.html":{},"coverage.html":{}}}],["src/app/_main/services/snackbar.service.ts:11",{"_index":2963,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:14",{"_index":2970,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:16",{"_index":2968,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:26",{"_index":2965,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:31",{"_index":2966,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/validators/email.validator.ts",{"_index":3680,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/max",{"_index":3681,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/password.validator.ts",{"_index":3683,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/required.validator",{"_index":1132,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["src/app/_main/validators/required.validator.ts",{"_index":3684,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/same",{"_index":3685,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.ts",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.routing.ts",{"_index":475,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/guard/logged",{"_index":2105,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"coverage.html":{}}}],["src/app/auth/interfaces/user.interface.ts",{"_index":2322,"title":{},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["src/app/auth/pages/change",{"_index":849,"title":{},"body":{"components/ChangePasswordPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/delete",{"_index":1225,"title":{},"body":{"components/DeleteAccountPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/forgot",{"_index":1600,"title":{},"body":{"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/login/login.page.ts",{"_index":2112,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/login/login.page.ts:14",{"_index":2118,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:21",{"_index":2125,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:22",{"_index":2123,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:27",{"_index":2124,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:33",{"_index":2122,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:40",{"_index":2121,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:66",{"_index":2120,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/register/register.page.ts",{"_index":2524,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/auth/pages/register/register.page.ts:21",{"_index":2532,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:24",{"_index":2542,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:25",{"_index":2544,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:26",{"_index":2541,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:28",{"_index":2537,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:33",{"_index":2540,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:51",{"_index":2534,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:66",{"_index":2535,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:70",{"_index":2536,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:91",{"_index":2533,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/restore",{"_index":2597,"title":{},"body":{"components/RestoreAccountPage.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service.ts",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service.ts:12",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:30",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:42",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:47",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:51",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:55",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:59",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:63",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:67",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:9",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/user.service.ts",{"_index":3465,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/auth/services/user.service.ts:12",{"_index":3470,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:16",{"_index":3468,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:9",{"_index":3467,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/dashboard/classes/user.class.ts",{"_index":3483,"title":{},"body":{"classes/UserUtils.html":{},"coverage.html":{}}}],["src/app/dashboard/classes/user.class.ts:15",{"_index":3489,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/classes/user.class.ts:5",{"_index":3487,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/components/integration",{"_index":2045,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/components/member",{"_index":2262,"title":{},"body":{"components/MemberListComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/components/view",{"_index":3569,"title":{},"body":{"components/ViewOptionsComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.module.ts",{"_index":1181,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/dashboard.routing.ts",{"_index":1208,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/dashboard/dialogs/add",{"_index":10,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/git",{"_index":1620,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/project",{"_index":2444,"title":{},"body":{"interfaces/ProjectMember.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/project.interface",{"_index":2398,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["src/app/dashboard/interfaces/project.interface.ts",{"_index":2439,"title":{},"body":{"interfaces/Project.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/workspace.interface",{"_index":2399,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["src/app/dashboard/interfaces/workspace.interface.ts",{"_index":3598,"title":{},"body":{"interfaces/Workspace.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/create",{"_index":1100,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/edit",{"_index":1313,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/github",{"_index":1775,"title":{},"body":{"components/GithubIntegrationPage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/projects",{"_index":2474,"title":{},"body":{"components/ProjectsListPage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/workspaces",{"_index":3621,"title":{},"body":{"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["src/app/dashboard/services/git",{"_index":1661,"title":{},"body":{"injectables/GitIntegrationService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/member.service.ts",{"_index":2285,"title":{},"body":{"injectables/MemberService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/member.service.ts:11",{"_index":2287,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:19",{"_index":2295,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:29",{"_index":2300,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:39",{"_index":2293,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:49",{"_index":2289,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:61",{"_index":2298,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/project.service",{"_index":2400,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["src/app/dashboard/services/project.service.ts",{"_index":2446,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/project.service.ts:12",{"_index":2448,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:20",{"_index":2458,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:29",{"_index":2455,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:38",{"_index":2462,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:47",{"_index":2453,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:57",{"_index":2450,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:64",{"_index":2460,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/workspace.service",{"_index":2401,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["src/app/dashboard/services/workspace.service.ts",{"_index":3604,"title":{},"body":{"injectables/WorkspaceService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/workspace.service.ts:13",{"_index":3606,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:26",{"_index":3612,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:35",{"_index":3610,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:44",{"_index":3615,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:52",{"_index":3613,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:61",{"_index":3608,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/emails/emails.module.ts",{"_index":1402,"title":{},"body":{"modules/EmailsModule.html":{}}}],["src/app/emails/emails.routing.ts",{"_index":1404,"title":{},"body":{"modules/EmailsRoutingModule.html":{}}}],["src/app/hello",{"_index":3929,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/app/landing",{"_index":2073,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/messages/messages.module.ts",{"_index":2318,"title":{},"body":{"modules/MessagesModule.html":{}}}],["src/app/messages/messages.routing.ts",{"_index":2320,"title":{},"body":{"modules/MessagesRoutingModule.html":{}}}],["src/app/settings/components/integration",{"_index":2029,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"coverage.html":{}}}],["src/app/settings/components/list",{"_index":2093,"title":{},"body":{"components/ListGroupComponent.html":{},"coverage.html":{}}}],["src/app/settings/interfaces/session.interface",{"_index":2706,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/interfaces/session.interface.ts",{"_index":3474,"title":{},"body":{"interfaces/UserSession.html":{},"coverage.html":{}}}],["src/app/settings/pages/settings",{"_index":1632,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["src/app/settings/pages/settings/settings.page",{"_index":2801,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/settings/pages/settings/settings.page.ts",{"_index":2811,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:10",{"_index":2822,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:11",{"_index":2821,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:12",{"_index":2820,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:13",{"_index":2818,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:17",{"_index":2819,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/services/sessions.service.ts",{"_index":2700,"title":{},"body":{"injectables/SessionsService.html":{},"coverage.html":{}}}],["src/app/settings/services/sessions.service.ts:12",{"_index":2704,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:16",{"_index":2703,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:9",{"_index":2701,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/settings.module.ts",{"_index":2799,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/settings/settings.routing.ts",{"_index":2828,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/tasks/components/board",{"_index":697,"title":{},"body":{"components/BoardTaskComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/input",{"_index":1859,"title":{},"body":{"components/InputAssigneeComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/status",{"_index":3002,"title":{},"body":{"components/StatusLabelComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/view",{"_index":3584,"title":{},"body":{"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts",{"_index":3091,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:105",{"_index":3112,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:111",{"_index":3110,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:136",{"_index":3107,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:142",{"_index":3105,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:150",{"_index":3106,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:169",{"_index":3104,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:38",{"_index":3126,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:40",{"_index":3130,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:41",{"_index":3125,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:42",{"_index":3128,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:44",{"_index":3123,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:45",{"_index":3131,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:46",{"_index":3121,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:47",{"_index":3120,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:48",{"_index":3122,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:50",{"_index":3119,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:52",{"_index":3118,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:73",{"_index":3103,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:76",{"_index":3113,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:84",{"_index":3108,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/enums/task",{"_index":3780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/tasks/interfaces/schedule.interface.ts",{"_index":2892,"title":{},"body":{"interfaces/SinglePersonSchedule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/interfaces/status.interface.ts",{"_index":2977,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"coverage.html":{}}}],["src/app/tasks/interfaces/task.interface.ts",{"_index":3075,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["src/app/tasks/pages/board/board.page.ts",{"_index":523,"title":{},"body":{"components/BoardPage.html":{},"coverage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:129",{"_index":552,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:23",{"_index":556,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:24",{"_index":554,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:25",{"_index":555,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:27",{"_index":559,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:29",{"_index":562,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:30",{"_index":553,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:31",{"_index":558,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:32",{"_index":557,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:33",{"_index":561,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:34",{"_index":542,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:56",{"_index":548,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:60",{"_index":551,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:66",{"_index":550,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:70",{"_index":545,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts",{"_index":2616,"title":{},"body":{"components/SchedulePage.html":{},"coverage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:16",{"_index":2631,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:17",{"_index":2630,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:19",{"_index":2626,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:20",{"_index":2628,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:21",{"_index":2629,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:23",{"_index":2633,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:37",{"_index":2623,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:50",{"_index":2624,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/task",{"_index":3174,"title":{},"body":{"components/TaskListPage.html":{},"coverage.html":{}}}],["src/app/tasks/pipes/status",{"_index":2993,"title":{},"body":{"pipes/StatusColorPipe.html":{},"coverage.html":{}}}],["src/app/tasks/pipes/task",{"_index":3251,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"coverage.html":{}}}],["src/app/tasks/services/status.service.ts",{"_index":3035,"title":{},"body":{"injectables/StatusService.html":{},"coverage.html":{}}}],["src/app/tasks/services/status.service.ts:11",{"_index":3037,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:19",{"_index":3046,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:29",{"_index":3045,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:39",{"_index":3041,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:49",{"_index":3050,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:59",{"_index":3044,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:63",{"_index":3048,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:74",{"_index":3039,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/task.service.ts",{"_index":3273,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/tasks/services/task.service.ts:119",{"_index":3290,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:129",{"_index":3292,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:155",{"_index":3300,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:181",{"_index":3295,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:204",{"_index":3298,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:231",{"_index":3302,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:269",{"_index":3283,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:282",{"_index":3288,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:33",{"_index":3280,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:53",{"_index":3294,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:74",{"_index":3289,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:98",{"_index":3305,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/tasks.module.ts",{"_index":3387,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/tasks/tasks.routing.ts",{"_index":3403,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/environments/environment",{"_index":364,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/environments/environment.prod.ts",{"_index":3727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/locales",{"_index":3988,"title":{},"body":{"additional-documentation/localization.html":{}}}],["src/locales/messages.pl",{"_index":3986,"title":{},"body":{"additional-documentation/localization.html":{}}}],["src/mocks/_main.mocks.prod.ts",{"_index":3729,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mocks/_main.mocks.ts",{"_index":3731,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mocks/helpers/response.mock.helper.ts",{"_index":3732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/workspaces.mocks.ts",{"_index":3734,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tests/helpers/mat",{"_index":3737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tests/helpers/ng",{"_index":3404,"title":{},"body":{"classes/TestNgControl.html":{},"coverage.html":{}}}],["src/tests/helpers/validator",{"_index":3739,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tests/test.ts",{"_index":3743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/typings/typings.ts",{"_index":1613,"title":{},"body":{"interfaces/FormGroup.html":{},"coverage.html":{}}}],["src/typings/typings.ts:5",{"_index":1614,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["stage",{"_index":2529,"title":{},"body":{"components/RegisterPage.html":{},"additional-documentation/localization.html":{}}}],["start",{"_index":897,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/WorkspacesListPage.html":{}}}],["start:docsapi",{"_index":3861,"title":{},"body":{"index.html":{}}}],["start:test",{"_index":3856,"title":{},"body":{"index.html":{}}}],["started",{"_index":2983,"title":{"index.html":{},"license.html":{}},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"index.html":{}}}],["startgithubintegration",{"_index":1665,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["starting",{"_index":3536,"title":{},"body":{"classes/Utils.html":{}}}],["startnavigate",{"_index":3841,"title":{},"body":{"index.html":{}}}],["startpos",{"_index":3532,"title":{},"body":{"classes/Utils.html":{}}}],["state",{"_index":629,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["statement",{"_index":2567,"title":{},"body":{"components/RegisterPage.html":{}}}],["statements",{"_index":3638,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3973,"title":{},"body":{"additional-documentation/localization.html":{}}}],["static",{"_index":1409,"title":{},"body":{"classes/Enum.html":{},"classes/Filters.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"components/TextareaComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{}}}],["staticlabel",{"_index":1960,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["statistics",{"_index":2495,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["status",{"_index":81,"title":{"interfaces/Status.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["status.begin)?.id",{"_index":3155,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["status.id",{"_index":598,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{}}}],["status.name",{"_index":3034,"title":{},"body":{"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{}}}],["status.tasks",{"_index":3071,"title":{},"body":{"injectables/StatusService.html":{}}}],["status.tasks.push(task",{"_index":3072,"title":{},"body":{"injectables/StatusService.html":{}}}],["status/column",{"_index":2978,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["status['name",{"_index":2999,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["statuscolor",{"_index":2995,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["statuscolorpipe",{"_index":2991,"title":{"pipes/StatusColorPipe.html":{}},"body":{"pipes/StatusColorPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["statuses",{"_index":3007,"title":{},"body":{"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{}}}],["statuses(statuses",{"_index":3026,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statuses.find((status",{"_index":3154,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["statuses.foreach((status",{"_index":3062,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.map((status",{"_index":3066,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.reduce((acc",{"_index":3029,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statuseswithsubtasks",{"_index":3065,"title":{},"body":{"injectables/StatusService.html":{}}}],["statusid",{"_index":549,"title":{},"body":{"components/BoardPage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["statusid)?.name",{"_index":3229,"title":{},"body":{"components/TaskListPage.html":{}}}],["statusid)?.tasks",{"_index":599,"title":{},"body":{"components/BoardPage.html":{}}}],["statuslabelcomponent",{"_index":224,"title":{"components/StatusLabelComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["statuslist",{"_index":30,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["statuslistsubscription",{"_index":530,"title":{},"body":{"components/BoardPage.html":{}}}],["statusmap",{"_index":3008,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statusmap.get(statusid)?.name",{"_index":3033,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statusservice",{"_index":538,"title":{"injectables/StatusService.html":{}},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"coverage.html":{}}}],["statuswithtasks",{"_index":560,"title":{"interfaces/StatusWithTasks.html":{}},"body":{"components/BoardPage.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"coverage.html":{}}}],["statuswithtasks).tasks",{"_index":3063,"title":{},"body":{"injectables/StatusService.html":{}}}],["step",{"_index":3833,"title":{},"body":{"index.html":{}}}],["stop",{"_index":242,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["store",{"_index":3817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stored",{"_index":3848,"title":{},"body":{"index.html":{}}}],["stores",{"_index":3903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["story",{"_index":3377,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["string",{"_index":303,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"interfaces/Workspace.html":{},"miscellaneous/functions.html":{}}}],["string.substring(startpos).search(regex",{"_index":3546,"title":{},"body":{"classes/Utils.html":{}}}],["strings",{"_index":3995,"title":{},"body":{"additional-documentation/localization.html":{}}}],["structure",{"_index":3958,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["studio",{"_index":2421,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"additional-documentation/localization.html":{}}}],["style",{"_index":798,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{}}}],["style.animation",{"_index":2901,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["style.height",{"_index":1794,"title":{},"body":{"components/IconComponent.html":{}}}],["style.width",{"_index":1795,"title":{},"body":{"components/IconComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["styles/typography",{"_index":741,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["styling",{"_index":298,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["sub",{"_index":2425,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["subject",{"_index":990,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"injectables/WorkspaceService.html":{}}}],["subject.next(tasks",{"_index":3318,"title":{},"body":{"injectables/TaskService.html":{}}}],["subject.pipe(applyfilters(filters",{"_index":3319,"title":{},"body":{"injectables/TaskService.html":{}}}],["submit",{"_index":794,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FormGroup.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{}}}],["submitcreate",{"_index":1108,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["submitupdate",{"_index":1319,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["subscribe",{"_index":882,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/RegisterPage.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["subscribe((response",{"_index":2133,"title":{},"body":{"components/LoginPage.html":{}}}],["subscribe((result",{"_index":641,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/UpperNavigationComponent.html":{}}}],["subscribe((task",{"_index":730,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["subscriber.complete",{"_index":1530,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscriber.error(error",{"_index":1528,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscriber.next(value",{"_index":1524,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscription",{"_index":563,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["subscriptions",{"_index":1333,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["subtask",{"_index":727,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["subtask.id",{"_index":3241,"title":{},"body":{"components/TaskListPage.html":{}}}],["subtask.name",{"_index":3242,"title":{},"body":{"components/TaskListPage.html":{}}}],["subtask.statusid",{"_index":3068,"title":{},"body":{"injectables/StatusService.html":{}}}],["subtasks",{"_index":3078,"title":{},"body":{"interfaces/Task.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["subtasktype",{"_index":3137,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["subtasktypes",{"_index":3097,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["success",{"_index":1509,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["successful",{"_index":3909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successfully",{"_index":3330,"title":{},"body":{"injectables/TaskService.html":{}}}],["suffix",{"_index":1075,"title":{},"body":{"components/ControlAccessor.html":{}}}],["sum",{"_index":3506,"title":{},"body":{"classes/UserUtils.html":{}}}],["super(ngcontrol",{"_index":1575,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["support",{"_index":1743,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules.html":{}}}],["supports",{"_index":1788,"title":{},"body":{"components/IconComponent.html":{}}}],["sure",{"_index":634,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["surname",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["suspended",{"_index":1623,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IntegrationEntryComponent.html":{}}}],["svg",{"_index":575,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{},"modules.html":{}}}],["swagger",{"_index":3864,"title":{},"body":{"index.html":{}}}],["switch",{"_index":2136,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["switchmap",{"_index":3311,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((confirmed",{"_index":3334,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((newtask",{"_index":3321,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((task",{"_index":3345,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((updatedtask",{"_index":3342,"title":{},"body":{"injectables/TaskService.html":{}}}],["system",{"_index":2145,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsSessionsPage.html":{}}}],["t",{"_index":337,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["table",{"_index":3244,"title":{},"body":{"components/TaskListPage.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3745,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":3583,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["tak",{"_index":2732,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["take",{"_index":1639,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/StatusLabelComponent.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["take(1",{"_index":1748,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["taken",{"_index":2560,"title":{},"body":{"components/RegisterPage.html":{}}}],["tap",{"_index":3312,"title":{},"body":{"injectables/TaskService.html":{}}}],["tap((data",{"_index":3340,"title":{},"body":{"injectables/TaskService.html":{}}}],["target",{"_index":1494,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["task",{"_index":227,"title":{"interfaces/Task.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["task'},{'name",{"_index":130,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["task).subscribe",{"_index":731,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["task.assigneeid",{"_index":1550,"title":{},"body":{"classes/Filters.html":{},"injectables/TaskService.html":{}}}],["task.component",{"_index":3389,"title":{},"body":{"modules/TasksModule.html":{}}}],["task.component.html",{"_index":701,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.scss",{"_index":700,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts",{"_index":699,"title":{},"body":{"components/BoardTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:17",{"_index":712,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:20",{"_index":711,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:23",{"_index":710,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:25",{"_index":718,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:26",{"_index":719,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:27",{"_index":708,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:31",{"_index":716,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:37",{"_index":717,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:43",{"_index":715,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:63",{"_index":714,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.connectwithissueongithub",{"_index":3326,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.connectwithpullrequestongithub",{"_index":3322,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.dialog.html",{"_index":3093,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["task.dialog.scss",{"_index":3092,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["task.estimateddate",{"_index":3358,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.id",{"_index":653,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["task.id).pipe(switchmap",{"_index":3337,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.interface",{"_index":2990,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["task.issue",{"_index":3328,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.mergedpulllist",{"_index":643,"title":{},"body":{"components/BoardPage.html":{}}}],["task.name",{"_index":654,"title":{},"body":{"components/BoardPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["task.parenttaskid",{"_index":3232,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.pull",{"_index":630,"title":{},"body":{"components/BoardPage.html":{},"injectables/TaskService.html":{}}}],["task.service",{"_index":3053,"title":{},"body":{"injectables/StatusService.html":{}}}],["task.statusid",{"_index":613,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{}}}],["task.subtasks",{"_index":3234,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.subtasks.length",{"_index":3235,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.subtasks?.filter((subtask",{"_index":3067,"title":{},"body":{"injectables/StatusService.html":{}}}],["task.subtasks?.length",{"_index":3064,"title":{},"body":{"injectables/StatusService.html":{}}}],["task/board",{"_index":698,"title":{},"body":{"components/BoardTaskComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["task:not(.cdk",{"_index":696,"title":{},"body":{"components/BoardPage.html":{}}}],["task?.name",{"_index":740,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["taskcreate",{"_index":3173,"title":{},"body":{"components/TaskDialog.html":{}}}],["taskdialog",{"_index":226,"title":{"components/TaskDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["taskdialogdata",{"_index":578,"title":{"interfaces/TaskDialogData.html":{}},"body":{"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["taskdialogvariant",{"_index":579,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["taskdialogvariant.create",{"_index":647,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["taskdialogvariant.edit",{"_index":3339,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskid",{"_index":1688,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["tasklist",{"_index":3180,"title":{},"body":{"components/TaskListPage.html":{}}}],["tasklist.filter((task",{"_index":3231,"title":{},"body":{"components/TaskListPage.html":{}}}],["tasklistpage",{"_index":228,"title":{"components/TaskListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["taskpriorities",{"_index":3098,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["taskpriority",{"_index":3134,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["taskpriorityicon",{"_index":3253,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["taskpriorityiconpipe",{"_index":3250,"title":{"pipes/TaskPriorityIconPipe.html":{}},"body":{"pipes/TaskPriorityIconPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["taskprioritypipe",{"_index":3265,"title":{"pipes/TaskPriorityPipe.html":{}},"body":{"pipes/TaskPriorityPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasks",{"_index":1546,"title":{},"body":{"classes/Filters.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"index.html":{}}}],["tasks.filter((task",{"_index":1549,"title":{},"body":{"classes/Filters.html":{},"injectables/StatusService.html":{}}}],["tasks.routing",{"_index":3402,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks/dialogs/task/task.dialog",{"_index":721,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["tasks/enums/task",{"_index":3135,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["tasks/interfaces/schedule.interface",{"_index":2634,"title":{},"body":{"components/SchedulePage.html":{},"injectables/TaskService.html":{}}}],["tasks/interfaces/status.interface",{"_index":82,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["tasks/interfaces/task.interface",{"_index":1544,"title":{},"body":{"classes/Filters.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{}}}],["tasks/services/status.service",{"_index":3140,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["tasks/services/task.service",{"_index":722,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["taskservice",{"_index":537,"title":{"injectables/TaskService.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":3382,"title":{"modules/TasksModule.html":{}},"body":{"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksroutingmodule",{"_index":3386,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tasktype",{"_index":3138,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["tasktypeicon",{"_index":3365,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["tasktypeiconpipe",{"_index":3364,"title":{"pipes/TaskTypeIconPipe.html":{}},"body":{"pipes/TaskTypeIconPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasktypepipe",{"_index":3373,"title":{"pipes/TaskTypePipe.html":{}},"body":{"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasktypes",{"_index":3099,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["taskwithadditionaldata",{"_index":3083,"title":{"interfaces/TaskWithAdditionalData.html":{}},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["templateref",{"_index":2080,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["test",{"_index":1431,"title":{},"body":{"classes/Enum.html":{},"injectables/GitIntegrationService.html":{}}}],["testenum",{"_index":1415,"title":{},"body":{"classes/Enum.html":{}}}],["testing",{"_index":1067,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testing.helper.ts",{"_index":3740,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["testngcontrol",{"_index":1033,"title":{"classes/TestNgControl.html":{}},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"coverage.html":{}}}],["tests",{"_index":1428,"title":{},"body":{"classes/Enum.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/continuos-integration.html":{}}}],["tests/helpers/ng",{"_index":1066,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["text",{"_index":306,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/NavElementComponent.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/localization.html":{}}}],["textarea",{"_index":3416,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea'},{'name",{"_index":230,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["textarea.component.html",{"_index":3418,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea.component.scss",{"_index":3417,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textareacomponent",{"_index":229,"title":{"components/TextareaComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["theirs",{"_index":3818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this._assignee",{"_index":1901,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this._context",{"_index":2086,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["this._context.nglet",{"_index":2088,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["this._control",{"_index":3414,"title":{},"body":{"classes/TestNgControl.html":{}}}],["this._filters",{"_index":1572,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this._icon",{"_index":1843,"title":{},"body":{"components/IconComponent.html":{}}}],["this._isbuttondisabled",{"_index":3456,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this._required",{"_index":1076,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.activatedroute.snapshot.params",{"_index":585,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/MemberListComponent.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.activatedroute.snapshot.queryparams",{"_index":874,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/GithubIntegrationPage.html":{}}}],["this.active",{"_index":2348,"title":{},"body":{"components/NavElementComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["this.activeworkspace",{"_index":2402,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.add(key",{"_index":1312,"title":{},"body":{"classes/ESet.html":{}}}],["this.alert(data",{"_index":1298,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.animationname",{"_index":2933,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.apiservice",{"_index":1753,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/auth/delete",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.delete(`/auth/delete/confirm",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.delete(`/project/${projectid",{"_index":2465,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/integration/github",{"_index":1757,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/member",{"_index":2305,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/status/${status.id",{"_index":3058,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid",{"_index":3333,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid}/integration/git/issue",{"_index":1762,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid}/integration/git/pull",{"_index":1765,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/session/${id",{"_index":2708,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.apiservice.delete(`/user/integration/github/${githubaccountid",{"_index":1756,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/workspace/${id",{"_index":3617,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.get('/user/integration/github/repository",{"_index":1751,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get('/user/integration/github/repository').pipe",{"_index":1735,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get('/workspace').pipe",{"_index":2469,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.get(`/auth/me",{"_index":3473,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.get(`/project/${projectid",{"_index":2464,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.get(`/project/${projectid}/integration/git/issue",{"_index":1760,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get(`/project/${projectid}/integration/git/pull",{"_index":1763,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get(`/project/${projectid}/member",{"_index":2303,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.get(`/project/${projectid}/status",{"_index":3054,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.get(`/project/${projectid}/status/${statusid",{"_index":3055,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.get(`/project/${projectid}/task`).subscribe((tasks",{"_index":3317,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.get(`/session",{"_index":2707,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.apiservice.get(`/workspace",{"_index":3619,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.get(`/workspace/${id",{"_index":3616,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.post('/project",{"_index":2467,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.post(`/auth/delete/recover",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/login",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/logout",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/password/recover",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/password/reset",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/register",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/project/${projectid}/integration/github",{"_index":1752,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/${projectid}/status",{"_index":3056,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task",{"_index":3320,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task/${taskid}/integration/git/issue",{"_index":1761,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task/${taskid}/integration/git/pull",{"_index":1764,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/member",{"_index":2308,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.post(`/user/integration/github",{"_index":1749,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/workspace",{"_index":3620,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.put(`/auth/edit",{"_index":3472,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.put(`/project/${project.id",{"_index":2466,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.put(`/project/${projectid}/member",{"_index":2304,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.put(`/project/${projectid}/status/${status.id",{"_index":3057,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.put(`/project/${projectid}/task/${task.id",{"_index":3331,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.put(`/project/${projectid}/task/${taskid",{"_index":3363,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.put(`/project/${projectid}/workspace/${newworkspaceid",{"_index":2468,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.put(`/workspace/${workspace.id",{"_index":3618,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiurl",{"_index":372,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.assigneecolor",{"_index":1902,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.assigneecontrol.valuechanges.subscribe((assignee",{"_index":3238,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.authservice",{"_index":879,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.authservice.deleteaccount().subscribe",{"_index":2721,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.authservice.deleteaccountconfirmation(token).subscribe",{"_index":1234,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["this.authservice.isloggedin",{"_index":2111,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["this.authservice.logout().subscribe",{"_index":2599,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["this.authservice.recoveraccount().subscribe",{"_index":2600,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["this.authservice.resetpassword(this.form.value).subscribe",{"_index":1606,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["this.authservice.resetpassword(this.form.value.email).subscribe",{"_index":2720,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.board",{"_index":589,"title":{},"body":{"components/BoardPage.html":{}}}],["this.button.nativeelement.focus",{"_index":807,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.changeddate.setvalue(this.changedate(value",{"_index":2022,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.changeddate.valuechanges.subscribe((date",{"_index":2019,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.checkifisrequired",{"_index":1084,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.cleargithubintegrationfields",{"_index":3152,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.close",{"_index":1919,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.closenavelement",{"_index":2350,"title":{},"body":{"components/NavElementComponent.html":{}}}],["this.closeprofile",{"_index":3461,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.closeworkspace",{"_index":2404,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.color",{"_index":2926,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.confirm",{"_index":1299,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.control",{"_index":1085,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.disable",{"_index":1095,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.enable",{"_index":1096,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.errors",{"_index":1080,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.markastouched",{"_index":1093,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.setvalue(formvalue",{"_index":1583,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.control.setvalue(this.changedate(date",{"_index":2020,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.control.value",{"_index":1079,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.valuechanges.subscribe((value",{"_index":2677,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.create(projectid",{"_index":3349,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.create(task.projectid",{"_index":3346,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.createsubscription",{"_index":1143,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["this.createsubscription?.closed",{"_index":1142,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["this.data",{"_index":94,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.data.projectid",{"_index":99,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.data.variant",{"_index":274,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["this.data.workspaceid",{"_index":97,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.delete(key",{"_index":1311,"title":{},"body":{"classes/ESet.html":{}}}],["this.delete(projectid",{"_index":3336,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.deleteaccount(token",{"_index":1233,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["this.destroy$.complete",{"_index":1098,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.destroy$.next(null",{"_index":1097,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.dialogref.close([formvalues.email",{"_index":107,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["this.dialogref.close(false",{"_index":108,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.dialogref.close(formvalues",{"_index":3167,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.dialogref.close(true",{"_index":312,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["this.dialogs$.getvalue().size",{"_index":1285,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogs$.next(this.dialogsmap",{"_index":1292,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogservice",{"_index":632,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["this.dialogservice.closeall",{"_index":1481,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.dialogservice.confirmprojectdelete(project).subscribe",{"_index":2410,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["this.dialogservice.confirmworkspacedelete(this.workspace).subscribe",{"_index":2412,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.dialogservice.confirmworkspacedelete(workspace).subscribe",{"_index":3634,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.dialogservice.openerrordialog($localize`your",{"_index":1484,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.dialogsmap.delete(uid",{"_index":1291,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.foreach((dialog",{"_index":1293,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.set(uid",{"_index":1289,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.duration",{"_index":2929,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.editproject",{"_index":1360,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.editprojectwithworkspace(newworkspaceid",{"_index":1359,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.el.nativeelement.__ngcontext__[33].focus",{"_index":1599,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["this.error",{"_index":2139,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.filters.entries",{"_index":1578,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filters.push(filters.only_my_tasks(user.id",{"_index":3227,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.filterscontrol.valuechanges.subscribe((filters",{"_index":3228,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.focused",{"_index":1980,"title":{},"body":{"components/InputComponent.html":{}}}],["this.form",{"_index":1569,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.form.addcontrol('id",{"_index":1349,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.form.addcontrol('workspaceid",{"_index":1138,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.form.get('newworkspaceid')?.value",{"_index":1358,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.form.get('projectid')?.valuechanges.subscribe(this.onprojectidchange.bind(this",{"_index":3144,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.get('workspaceid')?.valuechanges.subscribe(this.onworkspaceidchange.bind(this",{"_index":3143,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.get(field)?.invalid",{"_index":2552,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.get(field)?.markastouched",{"_index":2550,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.get(field)?.updatevalueandvalidity",{"_index":2551,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.invalid",{"_index":105,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.markallastouched",{"_index":103,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue",{"_index":95,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue(project",{"_index":1382,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.form.patchvalue(response",{"_index":2718,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.form.patchvalue(task",{"_index":3142,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue(workspace",{"_index":1355,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.form.updatevalueandvalidity",{"_index":104,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.valid",{"_index":878,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.form.value",{"_index":102,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.value.password",{"_index":881,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["this.form.value.repository",{"_index":2070,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.form?.controls[index",{"_index":1576,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.getconnectedprojects(account).pipe(take(1",{"_index":1650,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.getsubscription",{"_index":1353,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.getsubscription.unsubscribe",{"_index":1367,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.githubaccounts",{"_index":1646,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.githubintegrationservice.isownerofrepository(&#39;@czemar/cli&#39",{"_index":1720,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.githubintegrationservice.isownerofrepository('@czemar/cli",{"_index":1767,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.githubintegrationservice.startgithubintegration",{"_index":1730,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.gitintegrationservice",{"_index":1656,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.connectgithubissue(projectid",{"_index":3327,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.gitintegrationservice.connectgithubpull(projectid",{"_index":3323,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.gitintegrationservice.deleteconnectedgithubaccount(account.id).subscribe",{"_index":1652,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.getconnectedgithubaccounts().pipe",{"_index":1647,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.getgithubintegration().subscribe((integration",{"_index":2066,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.gitintegrationservice.githubissuelist(projectid",{"_index":3159,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.githubpulllist(projectid",{"_index":3161,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.hasgithubintegration(projectid!).subscribe((value",{"_index":3156,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.postgithubintegration(installation_id).subscribe",{"_index":1784,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["this.gitintegrationservice.startgithubintegration().subscribe",{"_index":2063,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.handleerror(e",{"_index":2132,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.has(key",{"_index":1310,"title":{},"body":{"classes/ESet.html":{}}}],["this.httpclient.request(method",{"_index":371,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.initcheckfortouch",{"_index":1083,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.isgithubintegrationavailable",{"_index":3157,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.isopen",{"_index":1922,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(false",{"_index":1921,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(true",{"_index":1920,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(val",{"_index":1914,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.value",{"_index":1915,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isownerofrepository(project.githubintegration",{"_index":1774,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.issuelist",{"_index":3158,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.list(projectid).pipe",{"_index":2309,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.list(projectid).pipe(take(1",{"_index":3350,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.get(projectid",{"_index":3315,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.has(projectid",{"_index":3314,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.set(projectid",{"_index":3316,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.loadgithubintegration",{"_index":1644,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.loadparamsfromurl",{"_index":92,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.loadproject(projectid",{"_index":1351,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.loadrepositories",{"_index":2064,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.loadworkspace(workspaceid",{"_index":1395,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.loadworkspaces",{"_index":3632,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.loginsubscription",{"_index":2129,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginsubscription.closed",{"_index":2130,"title":{},"body":{"components/LoginPage.html":{}}}],["this.m_w",{"_index":2512,"title":{},"body":{"classes/Random.html":{}}}],["this.m_z",{"_index":2514,"title":{},"body":{"classes/Random.html":{}}}],["this.mask",{"_index":2513,"title":{},"body":{"classes/Random.html":{}}}],["this.matdialog.open(component",{"_index":1286,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.memberlist",{"_index":1141,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/MemberListComponent.html":{}}}],["this.members",{"_index":595,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.members$.next(members",{"_index":1909,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.members$.next(membersarray",{"_index":1912,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.memberservice.add(result",{"_index":1365,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.memberservice.add(this.memberlist",{"_index":1145,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.memberservice.list(projectid",{"_index":2277,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.memberservice.list(projectid).pipe",{"_index":3222,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.memberservice.list(projectid).pipe(take(1",{"_index":3351,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.memberservice.map(projectid",{"_index":596,"title":{},"body":{"components/BoardPage.html":{}}}],["this.memberservice.remove(this.projectid",{"_index":2278,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.name",{"_index":1850,"title":{},"body":{"components/IconComponent.html":{}}}],["this.ngcontrol",{"_index":1088,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol.control",{"_index":1078,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol.name?.tostring",{"_index":1077,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":1082,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.onprojectidchange(projectid",{"_index":3146,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.onworkspaceidchange(workspaceid",{"_index":3145,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.open",{"_index":1923,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.open(alertdialog",{"_index":1295,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.opennavelement",{"_index":2349,"title":{},"body":{"components/NavElementComponent.html":{}}}],["this.openprofile",{"_index":3462,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.openworkspace",{"_index":2403,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.options",{"_index":2690,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap!.set(x.value",{"_index":2695,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap?.foreach((option",{"_index":2680,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap?.get(this.control.value",{"_index":2676,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.overlay?.nativeelement.contains(e.target",{"_index":1917,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.prefix",{"_index":1848,"title":{},"body":{"components/IconComponent.html":{}}}],["this.project",{"_index":587,"title":{},"body":{"components/BoardPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/TaskListPage.html":{}}}],["this.project$.subscribe((project",{"_index":1381,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.project$.subscribe((workspace",{"_index":1354,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.projectid",{"_index":586,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.projectid).subscribe",{"_index":3032,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.projectid]).subscribe",{"_index":1366,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.projectlist",{"_index":3147,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.projects",{"_index":2489,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["this.projectservice",{"_index":1361,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{}}}],["this.projectservice.create(this.form.value).subscribe((response",{"_index":1144,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.projectservice.delete(project.id).subscribe",{"_index":2411,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["this.projectservice.get(id",{"_index":1352,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.projectservice.get(projectid",{"_index":588,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.projectservice.get(projectid).pipe(map((project",{"_index":1758,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.projectservice.update(this.form.value).subscribe",{"_index":1363,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.pulllist",{"_index":3160,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.queryoptions?.changes.subscribe((options",{"_index":2685,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.queryoptions?.map((x",{"_index":2691,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.ref.nativeelement.innertext",{"_index":2438,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.registersubscription",{"_index":2555,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registersubscription.closed",{"_index":2556,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.repositorylist",{"_index":2067,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.repositorylistloaded",{"_index":2065,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.request('delete",{"_index":378,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('get",{"_index":376,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('patch",{"_index":380,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('post",{"_index":377,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('put",{"_index":379,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.resetsubscription",{"_index":876,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["this.resetsubscription.closed",{"_index":877,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["this.router",{"_index":2405,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.router.navigate",{"_index":1364,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/LoginPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["this.router.navigate(['/']).then",{"_index":1173,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["this.router.navigate(['/auth/delete",{"_index":1483,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigate(['/auth/login",{"_index":883,"title":{},"body":{"components/ChangePasswordPage.html":{},"interceptors/ErrorInterceptor.html":{},"guards/LoggedInUsersGuard.html":{}}}],["this.router.navigate(['/auth/restore",{"_index":2135,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigate([this.workspaceid]).then",{"_index":1147,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.router.routerstate.snapshot",{"_index":2612,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["this.routerextensions.snapshot.params",{"_index":96,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.selected$.next(option",{"_index":2682,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selected$.next(this.optionsmap?.get(this.control.value",{"_index":2696,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selected$.subscribe((val",{"_index":2683,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.sessionservice.delete(id).subscribe",{"_index":2867,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.sessionservice.list",{"_index":2851,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.sessionslist",{"_index":2850,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.setanimationname('close",{"_index":2930,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.showarrow$.next(boolean(this.listelement?.nativeelement.children.length",{"_index":2351,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["this.size",{"_index":1855,"title":{},"body":{"components/IconComponent.html":{}}}],["this.snackbars$.next(map",{"_index":2974,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbars$.next(new",{"_index":2976,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbars$.value",{"_index":2972,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbarservice.close(this.uid",{"_index":2931,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.snackbarservice.show($localize`task",{"_index":3329,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.snackbarservice.snackbars",{"_index":2956,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["this.stage",{"_index":2553,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.statuses$.next(statuses",{"_index":3027,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.statuslist",{"_index":591,"title":{},"body":{"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["this.statuslist$.subscribe((list",{"_index":3225,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.statuslist$.subscribe((statuses",{"_index":3153,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.statuslist$.subscribe((statuslist",{"_index":594,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslist.find((status",{"_index":597,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.statuslist[newstatusindex",{"_index":608,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslist[previousstatusindex",{"_index":606,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslistsubscription",{"_index":593,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslistsubscription?.unsubscribe",{"_index":600,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statusmap",{"_index":3028,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.statusservice.board(projectid",{"_index":590,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statusservice.list(projectid",{"_index":3151,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["this.statusservice.listwithtasks(projectid",{"_index":592,"title":{},"body":{"components/BoardPage.html":{}}}],["this.task).subscribe",{"_index":725,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["this.task.id",{"_index":729,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["this.taskid",{"_index":1924,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.tasklist",{"_index":3223,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.taskservice",{"_index":1925,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.taskservice.changestatus(status.id",{"_index":3031,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.taskservice.create(result.projectid",{"_index":3459,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.taskservice.create(this.projectid",{"_index":649,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.deletewithconfirmation(this.projectid",{"_index":724,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.list(projectid",{"_index":3224,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.taskservice.list(projectid)]).pipe",{"_index":3060,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.taskservice.openedittaskdialog(this.projectid",{"_index":726,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.update(this.projectid",{"_index":615,"title":{},"body":{"components/BoardPage.html":{}}}],["this.token",{"_index":875,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["this.touched$.complete",{"_index":1099,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.touched$.next(true",{"_index":1094,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.unauthorizedinarow",{"_index":1480,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.update(projectid",{"_index":3344,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.updateoptions",{"_index":2687,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.updatesubscription",{"_index":1357,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.updatesubscription.unsubscribe",{"_index":1368,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.updatesubscription?.closed",{"_index":1356,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.userservice.getmyself().subscribe",{"_index":2127,"title":{},"body":{"components/LoginPage.html":{}}}],["this.userservice.getmyself().subscribe((response",{"_index":2717,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.userservice.getmyself().subscribe((user",{"_index":3226,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.userservice.update(this.form.value).subscribe",{"_index":2719,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.workspace",{"_index":1136,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{}}}],["this.workspace$.pipe",{"_index":2490,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["this.workspace$.subscribe((workspace",{"_index":1396,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.workspace.id",{"_index":2408,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.workspaceid",{"_index":1135,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ProjectsListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.workspacelist",{"_index":2886,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.workspacelist$.subscribe((workspaces",{"_index":1383,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.workspaces",{"_index":3633,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.workspaceservice",{"_index":3148,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.workspaceservice.create(this.form.value).subscribe",{"_index":1172,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["this.workspaceservice.delete(this.workspace.id).subscribe",{"_index":2413,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.workspaceservice.delete(workspace.id).subscribe",{"_index":3635,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.workspaceservice.get(id",{"_index":1348,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.workspaceservice.get(workspaceid",{"_index":1137,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/ProjectsListPage.html":{}}}],["this.workspaceservice.list",{"_index":1346,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/WorkspacesListPage.html":{}}}],["this.workspaceservice.list().pipe",{"_index":3454,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.workspaceservice.update(this.form.value).subscribe",{"_index":1397,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.yet",{"_index":2689,"title":{},"body":{"components/SelectComponent.html":{}}}],["three",{"_index":1418,"title":{},"body":{"classes/Enum.html":{}}}],["through",{"_index":2593,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["throw",{"_index":1741,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["throwerror",{"_index":1474,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["time",{"_index":2006,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/SettingsAccountPage.html":{}}}],["time'},{'name",{"_index":172,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["time.component",{"_index":2204,"title":{},"body":{"modules/MainModule.html":{}}}],["time.component.html",{"_index":2008,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.scss",{"_index":2007,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts",{"_index":2005,"title":{},"body":{"components/InputDateTimeComponent.html":{},"coverage.html":{}}}],["time.component.ts:13",{"_index":2013,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:16",{"_index":2012,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:18",{"_index":2017,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:20",{"_index":2011,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:26",{"_index":2015,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:36",{"_index":2014,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time/input",{"_index":2004,"title":{},"body":{"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"coverage.html":{}}}],["timeline",{"_index":2641,"title":{},"body":{"components/SchedulePage.html":{}}}],["title",{"_index":255,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"injectables/DialogService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{}}}],["title>app",{"_index":3249,"title":{},"body":{"components/TaskListPage.html":{}}}],["todo",{"_index":3191,"title":{},"body":{"components/TaskListPage.html":{}}}],["toggle",{"_index":1306,"title":{},"body":{"classes/ESet.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["toggle(key",{"_index":1307,"title":{},"body":{"classes/ESet.html":{}}}],["togglenavelement",{"_index":2334,"title":{},"body":{"components/NavElementComponent.html":{}}}],["toggleprofile",{"_index":3437,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["toggleworkspace",{"_index":2371,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["token",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/RequestOptions.html":{}}}],["tool",{"_index":4011,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["tools",{"_index":4002,"title":{},"body":{"additional-documentation/localization.html":{}}}],["top",{"_index":111,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["touched",{"_index":923,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["touched.ng",{"_index":1999,"title":{},"body":{"components/InputComponent.html":{}}}],["tracksnackbartuple",{"_index":2951,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["tracksnackbartuple(_index",{"_index":2953,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["transferarrayitem",{"_index":565,"title":{},"body":{"components/BoardPage.html":{}}}],["transform",{"_index":688,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["transform(value",{"_index":2996,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}}}],["transformed",{"_index":3567,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["transition",{"_index":687,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["translatable",{"_index":3997,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translated",{"_index":3968,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translatex(0",{"_index":2944,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["translatex(100",{"_index":2943,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["translatey(100",{"_index":3597,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["translatey(calc($height",{"_index":1995,"title":{},"body":{"components/InputComponent.html":{}}}],["translating",{"_index":3994,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translation",{"_index":3985,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translations",{"_index":3993,"title":{},"body":{"additional-documentation/localization.html":{}}}],["transparent",{"_index":1992,"title":{},"body":{"components/InputComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["true",{"_index":288,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":626,"title":{},"body":{"components/BoardPage.html":{}}}],["ts",{"_index":3926,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["tslib",{"_index":3766,"title":{},"body":{"dependencies.html":{}}}],["tweaks",{"_index":3509,"title":{},"body":{"classes/UserUtils.html":{}}}],["two",{"_index":1417,"title":{},"body":{"classes/Enum.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["type.enum",{"_index":3139,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["type.enum.ts",{"_index":3777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.pipe",{"_index":3401,"title":{},"body":{"modules/TasksModule.html":{}}}],["type.pipe.ts",{"_index":3374,"title":{},"body":{"pipes/TaskTypePipe.html":{},"coverage.html":{}}}],["type.pipe.ts:7",{"_index":3375,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type[0",{"_index":3169,"title":{},"body":{"components/TaskDialog.html":{}}}],["typealiases",{"_index":3879,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1844,"title":{},"body":{"components/IconComponent.html":{}}}],["typescript",{"_index":1408,"title":{},"body":{"classes/Enum.html":{}}}],["typo",{"_index":762,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["ua",{"_index":2789,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{},"additional-documentation/localization.html":{}}}],["uaparser",{"_index":2846,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser(agent",{"_index":2862,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser.getbrowser().name",{"_index":2865,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser.getos().name",{"_index":2864,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["ui",{"_index":967,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/localization.html":{}}}],["uid",{"_index":1288,"title":{},"body":{"injectables/DialogService.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["uk",{"_index":2788,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["ukraine)configuration",{"_index":3981,"title":{},"body":{"additional-documentation/localization.html":{}}}],["ukrainian",{"_index":3980,"title":{},"body":{"additional-documentation/localization.html":{}}}],["unassigned",{"_index":3286,"title":{},"body":{"injectables/TaskService.html":{}}}],["unauthorized",{"_index":3956,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["unauthorizedinarow",{"_index":1461,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["undefined",{"_index":1904,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{}}}],["underline",{"_index":2025,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["unique",{"_index":2985,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["unit",{"_index":3852,"title":{},"body":{"index.html":{}}}],["united",{"_index":3971,"title":{},"body":{"additional-documentation/localization.html":{}}}],["units",{"_index":1806,"title":{},"body":{"components/IconComponent.html":{}}}],["universal",{"_index":2150,"title":{},"body":{"modules/MainModule.html":{}}}],["unknown",{"_index":1585,"title":{},"body":{"components/FiltersComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["unsubscribe",{"_index":1332,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["unsupported",{"_index":3499,"title":{},"body":{"classes/UserUtils.html":{}}}],["up",{"_index":955,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["update",{"_index":970,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["update(moduser",{"_index":3469,"title":{},"body":{"injectables/UserService.html":{}}}],["update(project",{"_index":2461,"title":{},"body":{"injectables/ProjectService.html":{}}}],["update(projectid",{"_index":3049,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["update(workspace",{"_index":3614,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["updated",{"_index":3051,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["updatedtask",{"_index":3343,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateoptions",{"_index":2660,"title":{},"body":{"components/SelectComponent.html":{}}}],["updates",{"_index":1336,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["updatesubscription",{"_index":1315,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["updating",{"_index":1344,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["upload",{"_index":2584,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["upper",{"_index":232,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["uppercase",{"_index":2650,"title":{},"body":{"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{}}}],["uppernavigationcomponent",{"_index":231,"title":{"components/UpperNavigationComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":339,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"miscellaneous/variables.html":{}}}],["url('../../../../assets/metadata/logo_with_name.svg",{"_index":2888,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["url('/assets/metadata/logo_with_name.svg",{"_index":890,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["usage",{"_index":1635,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["use",{"_index":358,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["useclass",{"_index":1032,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":296,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["useful",{"_index":3516,"title":{},"body":{"classes/Utils.html":{}}}],["user",{"_index":625,"title":{"interfaces/User.html":{}},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{},"additional-documentation/architecture.html":{}}}],["user_story",{"_index":3370,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":3480,"title":{},"body":{"interfaces/UserSession.html":{}}}],["userdata",{"_index":2325,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["userid",{"_index":3285,"title":{},"body":{"injectables/TaskService.html":{}}}],["username",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{}}}],["users.guard",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users.guard.ts",{"_index":2106,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"coverage.html":{}}}],["users.guard.ts:6",{"_index":2108,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["users.guard.ts:9",{"_index":2109,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["userservice",{"_index":2117,"title":{"injectables/UserService.html":{}},"body":{"components/LoginPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usersession",{"_index":2705,"title":{"interfaces/UserSession.html":{}},"body":{"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/UserSession.html":{},"coverage.html":{}}}],["userutils",{"_index":1897,"title":{"classes/UserUtils.html":{}},"body":{"components/InputAssigneeComponent.html":{},"classes/UserUtils.html":{},"coverage.html":{}}}],["userutils.getcolorbyid(assignee?.user.id",{"_index":1903,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["userutils.getcolorbyid(member.user.id",{"_index":1908,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["userwithprivileges",{"_index":2323,"title":{"interfaces/UserWithPrivileges.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["usevalue",{"_index":3904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":3863,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["usuniecie",{"_index":2729,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["utilities",{"_index":3515,"title":{},"body":{"classes/Utils.html":{}}}],["utility",{"_index":1406,"title":{},"body":{"classes/Enum.html":{},"additional-documentation/architecture.html":{}}}],["utils",{"_index":1839,"title":{"classes/Utils.html":{}},"body":{"components/IconComponent.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["utils.isletter(character",{"_index":3548,"title":{},"body":{"classes/Utils.html":{}}}],["utils.regexindexof(value",{"_index":1846,"title":{},"body":{"components/IconComponent.html":{}}}],["utils.snakecase(this.name",{"_index":1857,"title":{},"body":{"components/IconComponent.html":{}}}],["uuid",{"_index":1283,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{},"dependencies.html":{}}}],["v",{"_index":1449,"title":{},"body":{"classes/Enum.html":{}}}],["v4",{"_index":1282,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{}}}],["val",{"_index":1896,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/functions.html":{}}}],["valid",{"_index":1116,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"miscellaneous/functions.html":{}}}],["validate",{"_index":3964,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["validation",{"_index":3556,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["validationerror",{"_index":999,"title":{"interfaces/ValidationError.html":{}},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"coverage.html":{}}}],["validationerrorpipe",{"_index":2230,"title":{"pipes/ValidationErrorPipe.html":{}},"body":{"modules/MainModule.html":{},"pipes/ValidationErrorPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":1064,"title":{},"body":{"components/ControlAccessor.html":{}}}],["validator",{"_index":1087,"title":{},"body":{"components/ControlAccessor.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["validator.decorator.ts",{"_index":1490,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validator.decorator.ts:4",{"_index":1492,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["validator.name",{"_index":1090,"title":{},"body":{"components/ControlAccessor.html":{}}}],["validator.ts",{"_index":3965,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["validatorfn",{"_index":3798,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":946,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"additional-documentation/architecture.html":{}}}],["value",{"_index":61,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["value.iconname",{"_index":1853,"title":{},"body":{"components/IconComponent.html":{}}}],["value.prefix",{"_index":1852,"title":{},"body":{"components/IconComponent.html":{}}}],["value.substring(0",{"_index":1849,"title":{},"body":{"components/IconComponent.html":{}}}],["value.substring(splitindex",{"_index":1851,"title":{},"body":{"components/IconComponent.html":{}}}],["value?.message",{"_index":3568,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["values",{"_index":972,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["values(enumtype",{"_index":1437,"title":{},"body":{"classes/Enum.html":{}}}],["var",{"_index":119,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["variable",{"_index":1812,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["variables",{"_index":3885,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":291,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":3802,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["versions",{"_index":3866,"title":{},"body":{"index.html":{}}}],["via",{"_index":3854,"title":{},"body":{"index.html":{}}}],["view",{"_index":234,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["view'},{'name",{"_index":186,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["view.component",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{}}}],["view.component.html",{"_index":2254,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.scss",{"_index":2253,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts",{"_index":2252,"title":{},"body":{"components/MainViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:11",{"_index":2256,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts:8",{"_index":2255,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view/main",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":805,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["viewchild('btn",{"_index":802,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('elementlist",{"_index":2345,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["viewchild('input",{"_index":1976,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["viewchild('openbelow",{"_index":3451,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["viewchild('overlay",{"_index":1886,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["viewcontainerref",{"_index":2081,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["viewoptionscomponent",{"_index":233,"title":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["viewtomodelupdate",{"_index":3407,"title":{},"body":{"classes/TestNgControl.html":{}}}],["viewtomodelupdate(newvalue",{"_index":3409,"title":{},"body":{"classes/TestNgControl.html":{}}}],["viewvalue",{"_index":2429,"title":{},"body":{"components/OptionComponent.html":{},"components/SelectComponent.html":{}}}],["visibility",{"_index":2355,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["visible",{"_index":2934,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["visual",{"_index":2420,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"additional-documentation/localization.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["vscode",{"_index":2416,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["vscode://vscode.git/clone?url=https://github.com/${project.githubintegration",{"_index":2415,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["want",{"_index":1003,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/DialogService.html":{},"interfaces/RequestOptions.html":{},"injectables/TaskService.html":{}}}],["way",{"_index":4003,"title":{},"body":{"additional-documentation/localization.html":{}}}],["week",{"_index":2649,"title":{},"body":{"components/SchedulePage.html":{}}}],["weight",{"_index":2101,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["went",{"_index":1515,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["whether",{"_index":1433,"title":{},"body":{"classes/Enum.html":{},"miscellaneous/variables.html":{}}}],["white",{"_index":2023,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["width",{"_index":113,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["wikipedia",{"_index":3932,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["win",{"_index":1739,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["win.closed",{"_index":1746,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["window",{"_index":1510,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{}}}],["window.document.dispatchevent",{"_index":1019,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["window.location.reload",{"_index":1148,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["window.open",{"_index":1744,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["window.open(`https://github.dev/${project.githubintegration",{"_index":2414,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["window.open(link",{"_index":1653,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["window.open(url",{"_index":1740,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["witch",{"_index":1728,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["withcredentials",{"_index":375,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["within",{"_index":2601,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["without",{"_index":285,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["withsubtasks",{"_index":3237,"title":{},"body":{"components/TaskListPage.html":{}}}],["work",{"_index":2982,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["workflow",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["workspace",{"_index":77,"title":{"interfaces/Workspace.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["workspace'},{'name",{"_index":193,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["workspace.component",{"_index":2209,"title":{},"body":{"modules/MainModule.html":{}}}],["workspace.component.html",{"_index":2358,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.scss",{"_index":2357,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts",{"_index":2356,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"coverage.html":{}}}],["workspace.component.ts:104",{"_index":2389,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:108",{"_index":2385,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:115",{"_index":2387,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:18",{"_index":2373,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:21",{"_index":2374,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:23",{"_index":2396,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:24",{"_index":2395,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:26",{"_index":2397,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:29",{"_index":2372,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:38",{"_index":2390,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:41",{"_index":2375,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:44",{"_index":2394,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:52",{"_index":2383,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:58",{"_index":2393,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:64",{"_index":2392,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:70",{"_index":2376,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:76",{"_index":2381,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:82",{"_index":2378,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:90",{"_index":2382,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:96",{"_index":2379,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.id",{"_index":1385,"title":{},"body":{"components/EditProjectPage.html":{},"components/WorkspacesListPage.html":{}}}],["workspace.name",{"_index":1302,"title":{},"body":{"injectables/DialogService.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{}}}],["workspace.page",{"_index":1196,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["workspace.page.html",{"_index":1167,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.scss",{"_index":1166,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.ts",{"_index":1165,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{}}}],["workspace.page.ts:22",{"_index":1392,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:23",{"_index":1170,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:27",{"_index":1394,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:30",{"_index":1168,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:32",{"_index":1393,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:36",{"_index":1388,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:43",{"_index":1169,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:58",{"_index":1390,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:69",{"_index":1391,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.projectswithprivileges.length).length",{"_index":3458,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspace.projectswithprivileges.map((project",{"_index":2492,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["workspace/create",{"_index":1164,"title":{},"body":{"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["workspace/edit",{"_index":1200,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{}}}],["workspace/nav",{"_index":2208,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{},"coverage.html":{}}}],["workspaceid",{"_index":87,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/MemberListComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["workspacelist",{"_index":31,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["workspaces",{"_index":237,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["workspaces.filter((workspace",{"_index":3457,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspaces.find((workspace",{"_index":1384,"title":{},"body":{"components/EditProjectPage.html":{}}}],["workspaces.length",{"_index":3455,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspaces.reduce((projects",{"_index":2471,"title":{},"body":{"injectables/ProjectService.html":{}}}],["workspaceservice",{"_index":1110,"title":{"injectables/WorkspaceService.html":{}},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["workspaceslistpage",{"_index":236,"title":{"components/WorkspacesListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["workspacesmock",{"_index":3735,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["workspacesmock(server",{"_index":3820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["workspacesseed",{"_index":3736,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["workspacesseed(server",{"_index":3821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["world",{"_index":3924,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["world.module.ts",{"_index":3931,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["world/hello",{"_index":3930,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["wrapper",{"_index":843,"title":{},"body":{"components/CardComponent.html":{},"components/InputComponent.html":{}}}],["write",{"_index":985,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writes",{"_index":984,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue",{"_index":929,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue(value",{"_index":982,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["wrong",{"_index":1516,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["wyslany",{"_index":2736,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["x",{"_index":2258,"title":{},"body":{"components/MainViewComponent.html":{},"components/SchedulePage.html":{}}}],["x.icon",{"_index":2694,"title":{},"body":{"components/SelectComponent.html":{}}}],["x.value",{"_index":2692,"title":{},"body":{"components/SelectComponent.html":{}}}],["x.viewvalue",{"_index":2693,"title":{},"body":{"components/SelectComponent.html":{}}}],["xl",{"_index":911,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["y",{"_index":2260,"title":{},"body":{"components/MainViewComponent.html":{},"components/NavElementComponent.html":{}}}],["yarn",{"_index":3838,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{}}}],["yes",{"_index":341,"title":{},"body":{"injectables/ApiService.html":{},"injectables/GitIntegrationService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":1847,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["ze",{"_index":2734,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["zgadzamy",{"_index":2727,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["zone.js",{"_index":3770,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["zostal",{"_index":2735,"title":{},"body":{"components/SettingsAccountPage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddMemberDialog.html":{"url":"components/AddMemberDialog.html","title":"component - AddMemberDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMemberDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-member-dialog\n            \n\n            \n                styleUrls\n                ./add-member.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-member.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMembers\n                            \n                            \n                                cancel\n                            \n                            \n                                loadParamsFromUrl\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: AddMemberDialogData, dialogRef: MatDialogRef, routerExtensions: RouterExtensionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMemberDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerExtensions\n                                                  \n                                                        \n                                                                        RouterExtensionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMembers\n                        \n                    \n                \n            \n            \n                \naddMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadParamsFromUrl\n                        \n                    \n                \n            \n            \n                \nloadParamsFromUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddMemberDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\n\nexport interface AddMemberDialogData {\n  workspaceId: number;\n  projectId?: number;\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member.dialog.html',\n  styleUrls: ['./add-member.dialog.scss'],\n})\nexport class AddMemberDialog implements OnInit {\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\n    private dialogRef: MatDialogRef,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  addMembers() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close([formValues.email]);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Add members\n\n  \n\n    \n    \n    \n\n  \n\n\n  Cancel\n  Add\n\n\n    \n\n    \n                \n                    ./add-member.dialog.scss\n                \n                form {\n  padding-top: 10px;\n\n  > * {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add members                  Cancel  Add'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddMemberDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddMemberDialogData.html":{"url":"interfaces/AddMemberDialogData.html","title":"interface - AddMemberDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddMemberDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\n\nexport interface AddMemberDialogData {\n  workspaceId: number;\n  projectId?: number;\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member.dialog.html',\n  styleUrls: ['./add-member.dialog.scss'],\n})\nexport class AddMemberDialog implements OnInit {\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\n    private dialogRef: MatDialogRef,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  addMembers() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close([formValues.email]);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertDialog.html":{"url":"components/AlertDialog.html","title":"component - AlertDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/dialogs/alert/alert.dialog.ts\n\n\n\n    \n        Description\n    \n    \n        Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert-dialog\n            \n\n            \n                styleUrls\n                ./alert.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./alert.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                AlertDialogVariant\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                important\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                confirm\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.important-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: AlertDialogData, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:50\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the dialog reference and data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AlertDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Object to pass as data to the dialog\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to dialog instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.important-dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.data.variant === AlertDialogVariant.IMPORTANT\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:67\n                        \n                    \n\n            \n                \n                    Host binding to set if the dialog is important.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/dialogs/alert/alert.dialog.ts:73\n                \n            \n\n\n            \n                \n                    Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/dialogs/alert/alert.dialog.ts:80\n                \n            \n\n\n            \n                \n                    Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        AlertDialogVariant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AlertDialogVariant\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:50\n                        \n                    \n\n            \n                \n                    Passthrough to the dialog's variant enumerable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AlertDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:58\n                        \n                    \n\n            \n                \n                    Object to pass as data to the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        important\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.data.variant === AlertDialogVariant.IMPORTANT\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.important-dialog')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:67\n                        \n                    \n\n            \n                \n                    Host binding to set if the dialog is important.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostBinding, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Type of the dialog variant. Used to specify what dialog styling should be used.\n */\nexport enum AlertDialogVariant {\n  DEFAULT = 'default',\n  IMPORTANT = 'important',\n}\n\n/**\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\n */\nexport interface AlertDialogData {\n  /**\n   * Dialog title. Displayed at the top of the dialog.\n   */\n  title?: string;\n  /**\n   * Dialog message. Displayed below the title.\n   */\n  message?: string;\n  /**\n   * Confirm button text.\n   */\n  confirmText?: string;\n  /**\n   * Cancel button text.\n   */\n  cancelText?: string;\n  /**\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\n   */\n  variant?: AlertDialogVariant;\n}\n\n/**\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n */\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert.dialog.html',\n  styleUrls: ['./alert.dialog.scss'],\n})\nexport class AlertDialog {\n  /**\n   * Passthrough to the dialog's variant enumerable.\n   */\n  public AlertDialogVariant = AlertDialogVariant;\n\n  /**\n   * Default constructor. Injects the dialog reference and data.\n   * @param data Object to pass as data to the dialog\n   * @param dialogRef Reference to dialog instance\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\n    private dialogRef: MatDialogRef,\n  ) {\n    data.variant ||= AlertDialogVariant.DEFAULT;\n  }\n\n  /**\n   * Host binding to set if the dialog is important.\n   */\n  @HostBinding('class.important-dialog') important: boolean =\n    this.data.variant === AlertDialogVariant.IMPORTANT;\n\n  /**\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n   */\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n   */\n  confirm() {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n  {{ data.message }}\n\n\n  {{ data.cancelText }}\n  \n    {{ data.confirmText }}\n  \n  \n    {{ data.confirmText }}\n  \n\n\n    \n\n    \n                \n                    ./alert.dialog.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.message }}  {{ data.cancelText }}      {{ data.confirmText }}        {{ data.confirmText }}  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlertDialogData.html":{"url":"interfaces/AlertDialogData.html","title":"interface - AlertDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AlertDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/dialogs/alert/alert.dialog.ts\n        \n\n\n            \n                Description\n            \n            \n                Alert dialog data interface. Indicates what data will be passed to the dialog.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cancelText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confirmText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            variant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Cancel button text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Confirm button text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dialog message. Displayed below the title.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dialog title. Displayed at the top of the dialog.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         AlertDialogVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AlertDialogVariant\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of the dialog variant. Used to specify what dialog styling should be used.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostBinding, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Type of the dialog variant. Used to specify what dialog styling should be used.\n */\nexport enum AlertDialogVariant {\n  DEFAULT = 'default',\n  IMPORTANT = 'important',\n}\n\n/**\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\n */\nexport interface AlertDialogData {\n  /**\n   * Dialog title. Displayed at the top of the dialog.\n   */\n  title?: string;\n  /**\n   * Dialog message. Displayed below the title.\n   */\n  message?: string;\n  /**\n   * Confirm button text.\n   */\n  confirmText?: string;\n  /**\n   * Cancel button text.\n   */\n  cancelText?: string;\n  /**\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\n   */\n  variant?: AlertDialogVariant;\n}\n\n/**\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n */\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert.dialog.html',\n  styleUrls: ['./alert.dialog.scss'],\n})\nexport class AlertDialog {\n  /**\n   * Passthrough to the dialog's variant enumerable.\n   */\n  public AlertDialogVariant = AlertDialogVariant;\n\n  /**\n   * Default constructor. Injects the dialog reference and data.\n   * @param data Object to pass as data to the dialog\n   * @param dialogRef Reference to dialog instance\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\n    private dialogRef: MatDialogRef,\n  ) {\n    data.variant ||= AlertDialogVariant.DEFAULT;\n  }\n\n  /**\n   * Host binding to set if the dialog is important.\n   */\n  @HostBinding('class.important-dialog') important: boolean =\n    this.data.variant === AlertDialogVariant.IMPORTANT;\n\n  /**\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n   */\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n   */\n  confirm() {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to access the API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/api.service.ts:18\n                            \n                        \n\n                \n                    \n                            Default service constructor with HttpClient dependency\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:64\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends DELETE request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends GET request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends PATCH request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:54\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends POST request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                    \n                    put(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:74\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends PUT request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        request\n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP method to use\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/api.service.ts:18\n                        \n                    \n\n            \n                \n                    URL of the API. Provided in the environment configuration file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Service } from '../decorators/service.decorator';\nimport { RequestOptions } from '../interfaces/request-options.interface';\n\n/**\n * Service to access the API\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  /**\n   * URL of the API. Provided in the environment configuration file.\n   */\n  private apiURL: string = environment.apiURL;\n\n  /** Default service constructor with `HttpClient` dependency */\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * Sends request to the API.\n   * @param method HTTP method to use\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public request(method: string, url: string, options?: RequestOptions) {\n    return this.httpClient.request(method, this.apiURL + url, {\n      responseType: 'json' as any,\n      withCredentials: true,\n      ...options,\n    });\n  }\n\n  /**\n   * Sends GET request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(url: string, options?: RequestOptions) {\n    return this.request('GET', url, options);\n  }\n\n  /**\n   * Sends POST request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public post(url: string, options?: RequestOptions) {\n    return this.request('POST', url, options);\n  }\n\n  /**\n   * Sends DELETE request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(url: string, options?: RequestOptions) {\n    return this.request('DELETE', url, options);\n  }\n\n  /**\n   * Sends PUT request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public put(url: string, options?: RequestOptions) {\n    return this.request('PUT', url, options);\n  }\n\n  /**\n   * Sends PATCH request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public patch(url: string, options?: RequestOptions) {\n    return this.request('PATCH', url, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main Component with basic layout and main router outlet\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'workflow'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the page\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Main Component with basic layout and main router outlet\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  /**\n   * Title of the page\n   */\n  public title = 'workflow';\n\n  constructor() {\n    document.addEventListener('DOMContentLoaded', () => {\n      document.body.classList.remove('preload');\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  width: 100%;\n  background-color: var(--color-secondary-700);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { LandingPageComponent } from './landing-page/landing-page/landing-page.component';\nimport { MainModule } from './_main/_main.module';\n\n@NgModule({\n  declarations: [AppComponent, LandingPageComponent],\n  imports: [AppRoutingModule, BrowserAnimationsModule, MainModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoggedInUsersGuard } from './auth/guard/logged-in-users.guard';\nimport { LandingPageComponent } from './landing-page/landing-page/landing-page.component';\nimport { MainViewComponent } from './_main/components/main-view/main-view.component';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'landing-page',\n    component: LandingPageComponent,\n  },\n  {\n    path: '',\n    component: MainViewComponent,\n    canActivate: [LoggedInUsersGuard],\n    children: [\n      {\n        path: 'email',\n        loadChildren: () => \"import('./emails/emails.module').then((m) => m.EmailsModule)\",\n      },\n      {\n        path: 'messages',\n        loadChildren: () => \"import('./messages/messages.module').then((m) => m.MessagesModule)\",\n      },\n      {\n        path: '',\n        loadChildren: () => \"import('./dashboard/dashboard.module').then((m) => m.DashboardModule)\",\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      onSameUrlNavigation: 'reload',\n      paramsInheritanceStrategy: 'always',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nChangePasswordPage->AuthModule\n\n\n\n\n\nDeleteAccountPage\n\nDeleteAccountPage\n\nAuthModule -->\n\nDeleteAccountPage->AuthModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\nAuthModule -->\n\nForgotPasswordPage->AuthModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAuthModule -->\n\nLoginPage->AuthModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nAuthModule -->\n\nRegisterPage->AuthModule\n\n\n\n\n\nRestoreAccountPage\n\nRestoreAccountPage\n\nAuthModule -->\n\nRestoreAccountPage->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAuthModule -->\n\nMainModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChangePasswordPage\n                        \n                        \n                            DeleteAccountPage\n                        \n                        \n                            ForgotPasswordPage\n                        \n                        \n                            LoginPage\n                        \n                        \n                            RegisterPage\n                        \n                        \n                            RestoreAccountPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { AuthRoutingModule } from './auth.routing';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\nimport { DeleteAccountPage } from './pages/delete-account/delete-account.page';\nimport { ForgotPasswordPage } from './pages/forgot-password/forgot-password.page';\nimport { LoginPage } from './pages/login/login.page';\nimport { RegisterPage } from './pages/register/register.page';\nimport { RestoreAccountPage } from './pages/restore-account/restore-account.page';\n\n@NgModule({\n  imports: [CommonModule, AuthRoutingModule, MainModule, ReactiveFormsModule],\n  declarations: [\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    ChangePasswordPage,\n    RestoreAccountPage,\n    DeleteAccountPage,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\nimport { DeleteAccountPage } from './pages/delete-account/delete-account.page';\nimport { ForgotPasswordPage } from './pages/forgot-password/forgot-password.page';\nimport { LoginPage } from './pages/login/login.page';\nimport { RegisterPage } from './pages/register/register.page';\nimport { RestoreAccountPage } from './pages/restore-account/restore-account.page';\n\n/**\n * Auth routes list\n */\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginPage,\n  },\n  {\n    path: 'logout',\n    component: LoginPage,\n  },\n  {\n    path: 'register',\n    component: RegisterPage,\n  },\n  {\n    path: 'password-reset',\n    component: ForgotPasswordPage,\n  },\n  {\n    path: 'set-new-password',\n    component: ChangePasswordPage,\n  },\n  {\n    path: 'restore-account',\n    component: RestoreAccountPage,\n  },\n  {\n    path: 'delete-account',\n    component: DeleteAccountPage,\n  },\n];\n\n/**\n * Auth routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteAccount\n                            \n                            \n                                    Public\n                                deleteAccountConfirmation\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                recoverAccount\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Public\n                                setNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAccountConfirmation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccountConfirmation(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        recoverAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setNewPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setNewPassword(token: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Service } from '@main/decorators/service.decorator';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private apiService: ApiService) {}\n\n  public register({\n    email,\n    password,\n    name,\n    surname,\n    username,\n  }: {\n    email: string;\n    password: string;\n    name: string;\n    surname: string;\n    username: string;\n  }) {\n    return this.apiService.post(`/auth/register`, {\n      body: { email, password, name, surname, username },\n    });\n  }\n\n  public login({\n    email,\n    password,\n    remember,\n  }: {\n    email: string;\n    password: string;\n    remember: boolean;\n  }) {\n    return this.apiService.post(`/auth/login`, { body: { email, password, remember } });\n  }\n\n  public logout() {\n    localStorage.removeItem('logged');\n    return this.apiService.post(`/auth/logout`, { body: {} });\n  }\n\n  public resetPassword({ email }: { email: string }) {\n    return this.apiService.post(`/auth/password/recover`, { body: { email } });\n  }\n\n  public setNewPassword(token: string, password: string) {\n    return this.apiService.post(`/auth/password/reset`, { body: { token, password } });\n  }\n\n  public deleteAccount() {\n    return this.apiService.delete(`/auth/delete`, { body: {} });\n  }\n\n  public deleteAccountConfirmation(token: string) {\n    return this.apiService.delete(`/auth/delete/confirm`, { body: { token } });\n  }\n\n  public recoverAccount() {\n    return this.apiService.post(`/auth/delete/recover`, { body: {} });\n  }\n\n  public isLoggedIn() {\n    if (localStorage.getItem('logged')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardPage.html":{"url":"components/BoardPage.html","title":"component - BoardPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/board/board.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                ./board.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./board.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board$\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                statusList\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Private\n                                    Optional\n                                statusListSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                getTasksFromStatus\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNewTaskDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, taskService: TaskService, statusService: StatusService, dialogService: DialogService, projectService: ProjectService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/board/board.page.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasksFromStatus\n                        \n                    \n                \n            \n            \n                \ngetTasksFromStatus(statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewTaskDialog\n                        \n                    \n                \n            \n            \n                \nopenNewTaskDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        board$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StatusWithTasks[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        statusListSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport { faChevronRight, faCodeCommit, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Observable, Subscription } from 'rxjs';\nimport { DialogService } from '../../../_main/services/dialog.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '../../dialogs/task/task.dialog';\nimport { StatusWithTasks } from '../../interfaces/status.interface';\nimport { Task } from '../../interfaces/task.interface';\nimport { StatusService } from '../../services/status.service';\nimport { TaskService } from '../../services/task.service';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.page.html',\n  styleUrls: ['./board.page.scss'],\n})\nexport class BoardPage implements OnInit, OnDestroy {\n  faPlus = faPlus;\n  faChevronRight = faChevronRight;\n  faCodeCommit = faCodeCommit;\n\n  public projectId!: number;\n\n  public statusList$!: Observable;\n  public board$!: Observable;\n  public project$: Observable;\n  public members$: Observable>;\n  public statusList: StatusWithTasks[] = [];\n  private statusListSubscription?: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private taskService: TaskService,\n    private statusService: StatusService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.projectId = projectId;\n    this.project$ = this.projectService.get(projectId);\n    this.board$ = this.statusService.board(projectId);\n    this.statusList$ = this.statusService.listWithTasks(projectId);\n    this.statusListSubscription = this.statusList$.subscribe((statusList) => {\n      this.statusList = statusList;\n    });\n    this.members$ = this.memberService.map(projectId);\n  }\n\n  getTasksFromStatus(statusId: number) {\n    return this.statusList.find((status) => status.id === statusId)?.tasks;\n  }\n\n  ngOnInit() {\n    this.statusList$.subscribe((statusList) => {\n      this.statusList = statusList;\n    });\n  }\n\n  ngOnDestroy() {\n    this.statusListSubscription?.unsubscribe();\n  }\n\n  drop(event: CdkDragDrop) {\n    const previousStatusIndex = Number(\n      event.previousContainer.element.nativeElement.dataset['index'],\n    );\n    const newStatusIndex = Number(event.container.element.nativeElement.dataset['index']);\n    const previousStatus = this.statusList[previousStatusIndex];\n    const newStatus = this.statusList[newStatusIndex];\n    const previousTaskIndex = event.previousIndex;\n    const task = previousStatus.tasks[previousTaskIndex];\n\n    const onSuccess = () => {\n      task.statusId = newStatus.id;\n      this.taskService.update(this.projectId, task as any).subscribe();\n\n      if (event.previousContainer === event.container) {\n        moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      } else {\n        transferArrayItem(\n          event.previousContainer.data,\n          event.container.data,\n          event.previousIndex,\n          event.currentIndex,\n        );\n      }\n    };\n\n    // Catch if the task has pull request and user is trying to move to finishing state\n    if (task.pull && newStatus.final) {\n      this.dialogService\n        .alert({\n          title: $localize`Are you sure?`,\n          message: $localize`If you will move this task to finishing state, the attached pull request will be merged to the repository.`,\n          confirmText: $localize`Merge`,\n          cancelText: $localize`Cancel`,\n        })\n        .subscribe((result) => {\n          if (!result) return;\n\n          onSuccess();\n        });\n      // } else if (task.mergedPullList && !newStatus.final) {\n      //   this.dialogService\n      //     .alert({\n      //       title: $localize`Are you sure?`,\n      //       message: $localize`If you will move this task to not finishing state, the pull request will be detached.`,\n      //       confirmText: $localize`Detach`,\n      //       cancelText: $localize`Cancel`,\n      //     })\n      //     .subscribe((result) => {\n      //       if (!result) return;\n\n      //       onSuccess();\n      //     });\n      // }\n    } else {\n      onSuccess();\n    }\n  }\n\n  openNewTaskDialog() {\n    this.dialogService\n      .open(TaskDialog, {\n        projectId: this.projectId,\n        variant: TaskDialogVariant.CREATE,\n      } as TaskDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.taskService.create(this.projectId, result).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        {{column.name}}\n        \n       -->\n      \n        \n          \n            \n            #{{ task.id }}\n            {{ task.name }}\n            \n              \n            \n            \n              \n            \n            \n              \n              \n            \n          \n        \n       -->\n      \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./board.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\n.board {\n  display: flex;\n  min-height: 100%;\n  padding-left: 10px;\n  margin-left: -1rem;\n\n  .column {\n    display: flex;\n    width: 300px;\n    min-height: 100%;\n    flex-direction: column;\n    padding: 1rem;\n\n    .column-header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 1em;\n      color: var(--color-text);\n\n      h3 {\n        margin: 0;\n      }\n\n      app-icon {\n        cursor: pointer;\n      }\n    }\n\n    .column-content {\n      height: 100%;\n    }\n  }\n}\n\n.cdk-drag-placeholder {\n  opacity: 0;\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.column-content.cdk-drop-list-dragging app-board-task:not(.cdk-drag-placeholder) {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{column.name}}               -->                                                #{{ task.id }}            {{ task.name }}                                                                                                                                                         -->                                  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoardPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardTaskComponent.html":{"url":"components/BoardTaskComponent.html","title":"component - BoardTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/board-task/board-task.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board-task\n            \n\n            \n                styleUrls\n                ./board-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./board-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faCheck\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                createSubtask\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                members\n                            \n                            \n                                projectId\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { faCheck, faCodeCommit, faCodePullRequest } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskDialog, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { Task } from '../../interfaces/task.interface';\n\n@Component({\n  selector: 'app-board-task',\n  templateUrl: './board-task.component.html',\n  styleUrls: ['./board-task.component.scss'],\n})\nexport class BoardTaskComponent {\n  @Input()\n  public task!: Task;\n\n  @Input()\n  public projectId!: number;\n\n  @Input()\n  public members: Map = new Map();\n\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  constructor(private dialogService: DialogService, private taskService: TaskService) {}\n\n  delete() {\n    this.taskService.deleteWithConfirmation(this.projectId, this.task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  edit() {\n    this.taskService.openEditTaskDialog(this.projectId, this.task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  createSubtask() {\n    this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: this.projectId,\n        subtask: true,\n        task: {\n          parentTaskId: this.task.id,\n        },\n      })\n      .afterClosed()\n      .subscribe((task) => {\n        if (!task) return;\n\n        this.taskService.create(this.projectId, task).subscribe(() => {\n          location.reload();\n        });\n      });\n  }\n\n  changeDate(date: Date) {\n    let sessionDate = dayjs(date);\n    return sessionDate.format('YYYY-MM-DD, hh:mm A');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Due date\n      {{ changeDate(task.deadline) }}\n    \n  \n  \n    #{{ task.id }}\n    {{ task?.name }}\n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n        Edit task\n      \n      \n        Create subtask\n      \n      \n        Delete task\n      \n    \n  \n\n    \n\n    \n                \n                    ./board-task.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  cursor: move;\n}\n\n.task {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  background-color: var(--color-board-task-background);\n  border-radius: var(--border-radius);\n  transition: background-color 0.2s ease, box-shadow 0.2s ease;\n\n  &:hover {\n    background-color: var(--color-board-task-background-hover);\n    box-shadow: 0 0 0.5rem 0.01rem rgb(0 0 0 / 10%);\n  }\n\n  .top-section {\n    display: flex;\n\n    > * {\n      width: 50%;\n    }\n\n    .assignees {\n      .assignee {\n        $size: 32px;\n\n        @include typo-heading-5;\n\n        display: flex;\n        width: #{$size};\n        height: #{$size};\n        align-items: center;\n        justify-content: center;\n        background-color: #0a95d0;\n        border-radius: calc($size / 2);\n        color: var(--color-text);\n      }\n    }\n\n    .deadline {\n      color: var(--color-text);\n\n      .title {\n        @include typo-body;\n      }\n\n      .value {\n        @include typo-title;\n      }\n    }\n  }\n\n  .name {\n    @include typo-body;\n\n    margin-top: 1rem;\n    color: var(--color-text);\n\n    .task-id {\n      margin-right: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n\n  .options {\n    position: absolute;\n    right: 5px;\n    color: #fff;\n  }\n\n  .commit {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n    padding: 0 0.5rem;\n    color: var(--color-text);\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.5s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  .actions {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n\n    > * {\n      display: flex;\n      margin-left: 1rem;\n      color: var(--color-text);\n      cursor: pointer;\n      opacity: 0.5;\n      transition: opacity 0.2s ease;\n\n      &:hover {\n        opacity: 1;\n      }\n\n      .check {\n        margin-left: 5px;\n        color: #2ecc71;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Due date      {{ changeDate(task.deadline) }}            #{{ task.id }}    {{ task?.name }}                                                                                        Edit task                    Create subtask                    Delete task            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoardTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/button/button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main button component\nExample text\n    \n\n\n    \n        Implements\n    \n    \n                FocusableOption\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                pending\n                            \n                            \n                                type\n                            \n                            \n                                variant\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:33\n                            \n                        \n                \n                    \n                        Icon to display on the button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pending\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:28\n                            \n                        \n                \n                    \n                        Information about the pending. If button is pending the loader icon will be shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"button\" | \"submit\"\n\n                    \n                \n                \n                    \n                        Default value : 'submit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :     \"primary\" | \"secondary\" | \"important\"\n\n                    \n                \n                \n                    \n                        Default value : 'secondary'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:21\n                            \n                        \n                \n                    \n                        Style variant of the button\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        focus\n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/button/button.component.ts:43\n                \n            \n\n\n            \n                \n                    Focus the native button element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('btn')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/button/button.component.ts:38\n                        \n                    \n\n            \n                \n                    Reference to native button element\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { FocusableOption } from '@angular/cdk/a11y';\nimport { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Main button component\n *\n * ```html\n * Example text\n * ```\n */\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent implements FocusableOption {\n  /**\n   * Style variant of the button\n   */\n  @Input() variant: 'primary' | 'secondary' | 'important' = 'secondary';\n\n  @Input() type: 'button' | 'submit' = 'submit';\n\n  /**\n   * Information about the pending. If button is pending the loader icon will be shown\n   */\n  @Input() pending?: boolean = false;\n\n  /**\n   * Icon to display on the button\n   */\n  @Input() icon?: string | IconDefinition;\n\n  /**\n   * Reference to native button element\n   */\n  @ViewChild('btn') button!: ElementRef;\n\n  /**\n   * Focus the native button element\n   */\n  focus() {\n    setTimeout(() => {\n      this.button.nativeElement.focus();\n    }, 200);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                @import '../../../../styles/typography';\n\nbutton mat-spinner,\nbutton app-icon {\n  opacity: 1;\n  transform: scale(1);\n  transition: opacity 0.2s;\n}\n\nbutton mat-spinner.hide,\nbutton app-icon.hide {\n  opacity: 0;\n}\n\nbutton .prefix {\n  position: relative;\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  transition: width 0.2s, margin-right 0.2s;\n\n  > * {\n    position: absolute;\n  }\n}\n\nbutton:not(.button-with-icon) .prefix:not(.pending) {\n  width: 0;\n  margin-right: 0;\n}\n\nbutton {\n  @include typo-title;\n\n  position: relative;\n  display: flex;\n  min-width: 80px;\n  height: 42px;\n  align-items: center;\n  justify-content: center;\n  padding: 0.8125rem 1.25rem;\n  border-radius: var(--border-radius);\n  box-shadow: 0 4px 4px rgb(0 0 0 / 25%);\n  color: var(--color-text);\n  outline: 0 !important;\n  transition: background-color 0.2s ease;\n\n  > * {\n    margin-right: 0.75rem;\n  }\n\n  &::before {\n    $offset: 4px;\n\n    position: absolute;\n    top: #{-$offset};\n    right: #{-$offset};\n    bottom: #{-$offset};\n    left: #{-$offset};\n    border-radius: calc(var(--border-radius) * 1.5);\n    content: '';\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.1s ease;\n  }\n\n  &:focus {\n    &::before {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    box-shadow: 0 1px 1px rgb(0 0 0 / 25%);\n  }\n\n  &.primary {\n    background-color: var(--color-button-primary-background);\n\n    &::before {\n      border: 2px solid var(--color-button-primary-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-primary-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-primary-background-active);\n    }\n  }\n\n  &.secondary {\n    background-color: var(--color-button-secondary-background);\n\n    &::before {\n      border: 2px solid var(--color-button-secondary-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-secondary-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-secondary-background-active);\n    }\n  }\n\n  &.important {\n    background-color: var(--color-button-important-background);\n\n    &::before {\n      border: 2px solid var(--color-button-important-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-important-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-important-background-active);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/card/card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/card/card.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/card/card.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  &.important {\n    .card {\n      border: 1px solid var(--color-red-700);\n    }\n\n    .card-header-wrapper {\n      color: var(--color-red-700);\n    }\n  }\n}\n\n.card {\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  border: 1px solid var(--color-secondary-500);\n  border-radius: var(--border-radius);\n}\n\n.card-header-wrapper {\n  @include typo-title;\n\n  margin-bottom: 7px;\n  color: var(--color-text);\n}\n\n.card-content-wrapper {\n  @include typo-body;\n\n  margin-bottom: 15px;\n  color: var(--color-text);\n  opacity: 0.7;\n}\n\n.card-actions-wrapper {\n  @include typo-body;\n\n  color: var(--color-text);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordPage.html":{"url":"components/ChangePasswordPage.html","title":"component - ChangePasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/change-password/change-password.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                ./change-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                resetSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/change-password/change-password.page.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNewPassword\n                        \n                    \n                \n            \n            \n                \nsetNewPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/change-password/change-password.page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:34\n                        \n                    \n\n            \n                \n                    Form group for setting new password.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        resetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { passwordValidator } from '@main/validators/password.validator';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport { sameAsValidator } from '@main/validators/same-as.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n  private token?: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const { token } = this.activatedRoute.snapshot.queryParams;\n    this.token = token;\n  }\n\n  private resetSubscription?: Subscription;\n\n  /**\n   * Form group for setting new password.\n   */\n  public form = new FormGroup({\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n  });\n\n  setNewPassword() {\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid && this.token) {\n      this.resetSubscription = this.authService\n        .setNewPassword(this.token, this.form.value.password)\n        .subscribe(() => {\n          this.router.navigate(['/auth/login']);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Reset password\n          Enter your new password.\n        \n\n        \n\n        \n\n        Set new password\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./change-password.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Reset password          Enter your new password.                                Set new password                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/checkbox/checkbox.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/checkbox/checkbox.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:77\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n})\nexport class CheckboxComponent extends ControlAccessor {\n  @Input() label: string = '';\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n\n{{ control.errors | validationError }}\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                :host {\n  position: relative;\n}\n\nmat-checkbox.ng-invalid.ng-touched ~ mat-error {\n  // Set this to 'block' if you want to see mat-error label\n  display: none;\n}\n\nmat-error {\n  position: absolute;\n  bottom: -5px;\n  left: 28px;\n  display: none;\n  font-size: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}  {{ control.errors | validationError }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClickStopPropagationDirective.html":{"url":"directives/ClickStopPropagationDirective.html","title":"directive - ClickStopPropagationDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ClickStopPropagationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/click-stop-propagation.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [click-stop-propagation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/directives/click-stop-propagation.directive.ts:8\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/_main/directives/click-stop-propagation.directive.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[click-stop-propagation]',\n})\nexport class ClickStopPropagationDirective {\n  @HostListener('click', ['$event'])\n  public onClick(event: any): void {\n    event.stopPropagation();\n\n    window.document.dispatchEvent(\n      new Event('click', {\n        bubbles: true,\n        cancelable: true,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlAccessor.html":{"url":"components/ControlAccessor.html","title":"component - ControlAccessor","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ControlAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/classes/control-accessor.class.ts\n\n\n\n    \n        Description\n    \n    \n        A base class for creating custom control accessors like inputs, checkboxes, etc.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    required\n                                \n                                \n                                    name\n                                \n                                \n                                    control\n                                \n                                \n                                    value\n                                \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/control-accessor.class.ts:67\n                            \n                        \n\n                \n                    \n                            Accessor constructor to initialize component. Extended by child classes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                control to be used by the accessor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:19\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:88\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:102\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:150\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:126\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:133\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:139\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:118\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:36\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:48\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:77\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:53\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n\n                \n                    \n                        getrequired()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:25\n                                \n                            \n                    \n                        \n                                Property to describe if the control is required.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n\n                \n                    \n                        getcontrol()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:41\n                                \n                            \n                    \n                        \n                                Control that is used by the form.\n\n\n                                \n                                    Returns :         FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:58\n                                \n                            \n                    \n                        \n                                Get the value of the control.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:65\n                                \n                            \n                    \n                        \n                                Get the errors of the control.\n\n\n                                \n                                    Returns :         ValidationErrors | null\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl, ValidationErrors } from '@angular/forms';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport { Subject } from 'rxjs';\n\n/**\n * A base class for creating custom control accessors like inputs, checkboxes, etc.\n */\n@Component({\n  template: '',\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ControlAccessor implements OnDestroy, ControlValueAccessor {\n  /**\n   * Property that defines if field should prompt user how to fill it. For example\n   * in a form, if a field is email, it will give the user last used emails\n   */\n  @Input() autocomplete: 'on' | 'off' = 'off';\n\n  /**\n   * Property to describe if the control is required.\n   * @returns true if the control is required to fill in form.\n   */\n  public get required() {\n    return this._required;\n  }\n\n  public get name() {\n    return this.ngControl.name?.toString() || '';\n  }\n\n  /**\n   * Private property to set filed as required\n   */\n  private _required: boolean = false;\n\n  /**\n   * Control that is used by the form.\n   */\n  public get control(): FormControl {\n    return (this.ngControl.control as FormControl) || new FormControl();\n  }\n\n  /**\n   * Observable that emits when the control is destroyed.\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Observable that emits when the control is touched.\n   */\n  private touched$ = new Subject();\n\n  /**\n   * Get the value of the control.\n   */\n  public get value(): any {\n    return this.control.value;\n  }\n\n  /**\n   * Get the errors of the control.\n   */\n  public get errors(): ValidationErrors | null {\n    return this.control.errors;\n  }\n\n  /**\n   * Accessor constructor to initialize component. Extended by child classes.\n   * @param ngControl control to be used by the accessor\n   */\n  constructor(\n    /**\n     * Control passed from DOM to the component, contains all the information about form control\n     */\n    public ngControl: NgControl,\n  ) {\n    this.ngControl.valueAccessor = this;\n\n    this.initCheckForTouch();\n    this.checkIfIsRequired();\n  }\n\n  /**\n   * Check if the control is required by provided validators.\n   */\n  private checkIfIsRequired(): void {\n    if (!(this.control as any)._rawValidators) return;\n\n    for (const validator of (this.ngControl as any).control._rawValidators) {\n      if (validator.name === 'required') {\n        this._required = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Apply the touched observable on ngControl and control fields\n   */\n  private initCheckForTouch(): void {\n    (this.control as any)._markAsTouched = this.control.markAsTouched;\n    this.control.markAsTouched = () => {\n      (this.control as any)._markAsTouched();\n      this.touched$.next(true);\n    };\n  }\n\n  /**\n   * Writes a new value to the element.\n   *\n   * This method is called by the forms API to write to the view when programmatic\n   * changes from model to view are requested.\n   *\n   * @param value The new value for the element\n   */\n  writeValue(value: any): void {}\n\n  /**\n   * Registers a callback function that is called when the control's value changes in the UI.\n   *\n   * This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n   * @param fn Callback to be called when the control value changes.\n   */\n  registerOnChange(fn: any): void {}\n\n  /**\n   * Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n   *\n   * @param fn Callback to be called when the control is touched.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Set disabled state on the control. If set to true, the control will be disabled.\n   * @param isDisabled State to set to the control\n   */\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.control.disable();\n    } else {\n      this.control.enable();\n    }\n  }\n\n  /**\n   * A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n    this.touched$.complete();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ControlAccessor'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectMembersPage.html":{"url":"components/CreateProjectMembersPage.html","title":"component - CreateProjectMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-project-members/create-project-members.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project-members\n            \n\n            \n                styleUrls\n                ./create-project-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                memberList\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:39\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:65\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:33\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:26\n                        \n                    \n\n            \n                \n                    Form group for the project creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        memberList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddMemberDialog } from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-create-project-members',\n  templateUrl: './create-project-members.page.html',\n  styleUrls: ['./create-project-members.page.scss'],\n})\nexport class CreateProjectMembersPage {\n  faPlus = faPlus;\n\n  /**\n   * Form group for the project creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  public workspace$!: Observable;\n\n  private workspaceId!: number;\n\n  private memberList?: string[];\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n    this.workspaceId = workspaceId;\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n  }\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {})\n      .afterClosed()\n      .subscribe((result) => {\n        this.memberList = result;\n      });\n  }\n\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.projectService.create(this.form.value).subscribe((response) => {\n      if (this.memberList) {\n        this.memberService.add(this.memberList, [response.id]).subscribe(() => {\n          this.router.navigate([this.workspaceId]).then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        this.router.navigate([this.workspaceId]).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  Add member\n\n\n\n\n    \n\n    \n                \n                    ./create-project-members.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.button {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: -60px;\n  margin-bottom: 20px;\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add member'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectPage.html":{"url":"components/CreateProjectPage.html","title":"component - CreateProjectPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-project/create-project.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project\n            \n\n            \n                styleUrls\n                ./create-project.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                memberList\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:38\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project/create-project.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project/create-project.page.ts:72\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:32\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:24\n                        \n                    \n\n            \n                \n                    Form group for the project creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        memberList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddMemberDialog } from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.page.html',\n  styleUrls: ['./create-project.page.scss'],\n})\nexport class CreateProjectPage {\n  /**\n   * Form group for the project creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  faPlus = faPlus;\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  public workspace$!: Observable;\n\n  private workspaceId!: number;\n\n  public memberList: string[] = [];\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n    this.workspaceId = workspaceId;\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n  }\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {})\n      .afterClosed()\n      .subscribe((result) => {\n        this.memberList = [...this.memberList, ...result];\n      });\n  }\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.projectService.create(this.form.value).subscribe((response) => {\n      if (this.memberList) {\n        this.memberService.add(this.memberList, [response.id]).subscribe(() => {\n          this.router.navigate([this.workspaceId]).then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        this.router.navigate([this.workspaceId]).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Workspace: {{ (workspace$ | async)?.name }}\n    \n  \n\n  \n    Members\n    \n      Add member\n    \n  \n  \n\n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./create-project.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n.members {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-top: 20px;\n\n  h2 {\n    margin: 0;\n  }\n\n  .button {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n  }\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Workspace: {{ (workspace$ | async)?.name }}            Members          Add member              Save  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateWorkspacePage.html":{"url":"components/CreateWorkspacePage.html","title":"component - CreateWorkspacePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateWorkspacePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-workspace/create-workspace.page.ts\n\n\n\n    \n        Description\n    \n    \n        Create workspace page component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-workspace-page\n            \n\n            \n                styleUrls\n                ./create-workspace.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-workspace.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:30\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:43\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:30\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:23\n                        \n                    \n\n            \n                \n                    Form group for the workspace creation.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Subscription } from 'rxjs';\nimport { Page } from 'src/app/_main/decorators/page.decorator';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Create workspace page component.\n */\n@Page()\n@Component({\n  selector: 'app-create-workspace-page',\n  templateUrl: './create-workspace.page.html',\n  styleUrls: ['./create-workspace.page.scss'],\n})\nexport class CreateWorkspacePage {\n  /**\n   * Form group for the workspace creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(private workspaceService: WorkspaceService, private router: Router) {}\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.workspaceService.create(this.form.value).subscribe(() => {\n      this.router.navigate(['/']).then(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  Create new workspace\n  \n\n  \n    Save\n  \n\n\n\n    \n\n    \n                \n                    ./create-workspace.page.scss\n                \n                form {\n  padding: 4rem;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create new workspace        Save  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateWorkspacePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nAddMemberDialog\n\nAddMemberDialog\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nAddMemberDialog->DashboardModule\n\n\n\n\n\nCreateProjectMembersPage\n\nCreateProjectMembersPage\n\nDashboardModule -->\n\nCreateProjectMembersPage->DashboardModule\n\n\n\n\n\nCreateProjectPage\n\nCreateProjectPage\n\nDashboardModule -->\n\nCreateProjectPage->DashboardModule\n\n\n\n\n\nCreateWorkspacePage\n\nCreateWorkspacePage\n\nDashboardModule -->\n\nCreateWorkspacePage->DashboardModule\n\n\n\n\n\nEditProjectMembersPage\n\nEditProjectMembersPage\n\nDashboardModule -->\n\nEditProjectMembersPage->DashboardModule\n\n\n\n\n\nEditProjectPage\n\nEditProjectPage\n\nDashboardModule -->\n\nEditProjectPage->DashboardModule\n\n\n\n\n\nEditWorkspacePage\n\nEditWorkspacePage\n\nDashboardModule -->\n\nEditWorkspacePage->DashboardModule\n\n\n\n\n\nIntegrationGithubComponent\n\nIntegrationGithubComponent\n\nDashboardModule -->\n\nIntegrationGithubComponent->DashboardModule\n\n\n\n\n\nMemberListComponent\n\nMemberListComponent\n\nDashboardModule -->\n\nMemberListComponent->DashboardModule\n\n\n\n\n\nProjectsListPage\n\nProjectsListPage\n\nDashboardModule -->\n\nProjectsListPage->DashboardModule\n\n\n\n\n\nViewOptionsComponent\n\nViewOptionsComponent\n\nDashboardModule -->\n\nViewOptionsComponent->DashboardModule\n\n\n\n\n\nWorkspacesListPage\n\nWorkspacesListPage\n\nDashboardModule -->\n\nWorkspacesListPage->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nDashboardModule -->\n\nMainModule->DashboardModule\n\n\n\n\n\nGitIntegrationService\n\nGitIntegrationService\n\nDashboardModule -->\n\nGitIntegrationService->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddMemberDialog\n                        \n                        \n                            CreateProjectMembersPage\n                        \n                        \n                            CreateProjectPage\n                        \n                        \n                            CreateWorkspacePage\n                        \n                        \n                            EditProjectMembersPage\n                        \n                        \n                            EditProjectPage\n                        \n                        \n                            EditWorkspacePage\n                        \n                        \n                            IntegrationGithubComponent\n                        \n                        \n                            MemberListComponent\n                        \n                        \n                            ProjectsListPage\n                        \n                        \n                            ViewOptionsComponent\n                        \n                        \n                            WorkspacesListPage\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GitIntegrationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DashboardRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { IntegrationGithubComponent } from './components/integration-github/integration-github.component';\nimport { MemberListComponent } from './components/member-list/member-list.component';\nimport { ViewOptionsComponent } from './components/view-options/view-options.component';\nimport { DashboardRoutingModule } from './dashboard.routing';\nimport { AddMemberDialog } from './dialogs/add-member/add-member.dialog';\nimport { CreateProjectMembersPage } from './pages/create-project-members/create-project-members.page';\nimport { CreateProjectPage } from './pages/create-project/create-project.page';\nimport { CreateWorkspacePage } from './pages/create-workspace/create-workspace.page';\nimport { EditProjectMembersPage } from './pages/edit-project-members/edit-project-members.page';\nimport { EditProjectPage } from './pages/edit-project/edit-project.page';\nimport { EditWorkspacePage } from './pages/edit-workspace/edit-workspace.page';\nimport { ProjectsListPage } from './pages/projects-list/projects-list.page';\nimport { WorkspacesListPage } from './pages/workspaces-list/workspaces-list.page';\nimport { GitIntegrationService } from './services/git-integration.service';\n\n@NgModule({\n  imports: [CommonModule, MainModule, ReactiveFormsModule, DashboardRoutingModule],\n  declarations: [\n    CreateWorkspacePage,\n    WorkspacesListPage,\n    EditWorkspacePage,\n    ProjectsListPage,\n    CreateProjectPage,\n    EditProjectPage,\n    CreateProjectMembersPage,\n    EditProjectMembersPage,\n    IntegrationGithubComponent,\n    ViewOptionsComponent,\n    MemberListComponent,\n    AddMemberDialog,\n  ],\n  providers: [GitIntegrationService],\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateProjectMembersPage } from './pages/create-project-members/create-project-members.page';\nimport { CreateProjectPage } from './pages/create-project/create-project.page';\nimport { CreateWorkspacePage } from './pages/create-workspace/create-workspace.page';\nimport { EditProjectMembersPage } from './pages/edit-project-members/edit-project-members.page';\nimport { EditProjectPage } from './pages/edit-project/edit-project.page';\nimport { EditWorkspacePage } from './pages/edit-workspace/edit-workspace.page';\nimport { GithubIntegrationPage } from './pages/github-integration/github-integration.page';\nimport { ProjectsListPage } from './pages/projects-list/projects-list.page';\nimport { WorkspacesListPage } from './pages/workspaces-list/workspaces-list.page';\n\n/**\n * Dashboard routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: WorkspacesListPage,\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('../settings/settings.module').then((m) => m.SettingsModule)\",\n  },\n  {\n    path: 'github',\n    component: GithubIntegrationPage,\n  },\n  {\n    path: 'dashboard',\n    redirectTo: '',\n  },\n  {\n    path: 'create',\n    component: CreateWorkspacePage,\n  },\n  {\n    path: ':workspaceId',\n    children: [\n      {\n        path: 'edit',\n        component: EditWorkspacePage,\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        component: ProjectsListPage,\n      },\n      {\n        path: 'create',\n        redirectTo: 'create/general',\n      },\n      {\n        path: 'create/general',\n        component: CreateProjectPage,\n      },\n      {\n        path: 'create/members',\n        component: CreateProjectMembersPage,\n      },\n      {\n        path: ':projectId/edit',\n        redirectTo: ':projectId/edit/general',\n      },\n      {\n        path: ':projectId/edit/general',\n        component: EditProjectPage,\n      },\n      {\n        path: ':projectId/edit/members',\n        component: EditProjectMembersPage,\n      },\n      {\n        path: ':projectId',\n        loadChildren: () => \"import('../tasks/tasks.module').then((m) => m.TasksModule)\",\n      },\n    ],\n  },\n];\n\n/**\n * Dashboard routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteAccountPage.html":{"url":"components/DeleteAccountPage.html","title":"component - DeleteAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/delete-account/delete-account.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-account.page\n            \n\n            \n                styleUrls\n                ./delete-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./delete-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccount\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/delete-account/delete-account.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \ndeleteAccount(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/delete-account/delete-account.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/delete-account/delete-account.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-delete-account.page',\n  templateUrl: './delete-account.page.html',\n  styleUrls: ['./delete-account.page.scss'],\n})\nexport class DeleteAccountPage implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const { token } = this.activatedRoute.snapshot.queryParams;\n    this.deleteAccount(token);\n  }\n\n  deleteAccount(token: string) {\n    if (token) {\n      this.authService.deleteAccountConfirmation(token).subscribe(() => {});\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Your account has been deleted.\n        If you are going to revive your account, you can log in to your account click here to log in \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./delete-account.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      padding: 4rem;\n      background-color: var(--color-gray-800);\n\n      h2 {\n        margin-bottom: 0.5rem;\n      }\n\n      p {\n        margin-bottom: 1.5rem;\n      }\n\n      app-input {\n        width: 100%;\n      }\n\n      app-button {\n        align-self: flex-end;\n      }\n\n      a {\n        color: var(--color-link);\n        cursor: pointer;\n        transition: color 0.2s ease;\n\n        &:hover {\n          color: var(--color-link-hover);\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Your account has been deleted.        If you are going to revive your account, you can log in to your account click here to log in                     '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DeleteAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/dialog.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage dialogs.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dialogs$\n                            \n                            \n                                    Private\n                                dialogsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alert\n                            \n                            \n                                closeAll\n                            \n                            \n                                confirm\n                            \n                            \n                                confirmProjectDelete\n                            \n                            \n                                confirmWorkspaceDelete\n                            \n                            \n                                open\n                            \n                            \n                                openErrorDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAnyDialogOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/dialog.service.ts:23\n                            \n                        \n\n                \n                    \n                            Default constructor with MatDialog dependency.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        alert\n                        \n                    \n                \n            \n            \n                \nalert(data: AlertDialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:66\n                \n            \n\n\n            \n                \n                    Opens a alert/information dialog.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AlertDialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeAll\n                        \n                    \n                \n            \n            \n                \ncloseAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm(data: AlertDialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:87\n                \n            \n\n\n            \n                \n                    Opens a confirm dialog.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AlertDialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmProjectDelete\n                        \n                    \n                \n            \n            \n                \nconfirmProjectDelete(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmWorkspaceDelete\n                        \n                    \n                \n            \n            \n                \nconfirmWorkspaceDelete(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(component: any, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:36\n                \n            \n\n\n            \n                \n                    Opens a modal dialog containing the given component.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Type of the component to load into the dialog.\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openErrorDialog\n                        \n                    \n                \n            \n            \n                \nopenErrorDialog(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>>(this.dialogsMap)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogsMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAnyDialogOpen\n                    \n                \n\n                \n                    \n                        getisAnyDialogOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/services/dialog.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { BehaviorSubject, filter } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\nimport { Service } from '../decorators/service.decorator';\nimport { AlertDialog, AlertDialogData, AlertDialogVariant } from '../dialogs/alert/alert.dialog';\n\n/**\n * Service to manage dialogs.\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogService {\n  private dialogsMap = new Map();\n  private dialogs$ = new BehaviorSubject>>(this.dialogsMap);\n\n  public get isAnyDialogOpen() {\n    return this.dialogs$.getValue().size > 0;\n  }\n  /**\n   * Default constructor with `MatDialog` dependency.\n   * @param matDialog MatDialog instance\n   */\n  constructor(private matDialog: MatDialog) {}\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param component Type of the component to load into the dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  open(component: any, data: any) {\n    const dialog = this.matDialog.open(component, {\n      data,\n      width: '400px',\n    });\n\n    const uid = uuid();\n    this.dialogsMap.set(uid, dialog);\n\n    dialog.afterClosed().subscribe(() => {\n      this.dialogsMap.delete(uid);\n      this.dialogs$.next(this.dialogsMap);\n    });\n\n    this.dialogs$.next(this.dialogsMap);\n\n    return dialog;\n  }\n\n  closeAll() {\n    this.dialogsMap.forEach((dialog) => {\n      dialog.close();\n    });\n  }\n\n  /**\n   * Opens a alert/information dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  alert(data: AlertDialogData) {\n    return this.open(AlertDialog, data)\n      .afterClosed()\n      .pipe(filter((result) => result));\n  }\n\n  openErrorDialog(error: string) {\n    const data: AlertDialogData = {\n      title: 'Error',\n      message: error,\n      variant: AlertDialogVariant.IMPORTANT,\n      cancelText: $localize`Close`,\n    };\n    return this.alert(data);\n  }\n\n  /**\n   * Opens a confirm dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  confirm(data: AlertDialogData) {\n    return this.alert(data);\n  }\n\n  confirmProjectDelete(project: Project) {\n    return this.confirm({\n      title: $localize`Delete project \"${project.name}\"`,\n      message: $localize`Are you sure you want to delete project \"${project.name}\"?`,\n      confirmText: $localize`Delete`,\n      cancelText: $localize`Cancel`,\n      variant: AlertDialogVariant.IMPORTANT,\n    });\n  }\n\n  confirmWorkspaceDelete(workspace: Workspace) {\n    return this.confirm({\n      title: $localize`Delete workspace \"${workspace.name}\"`,\n      message: $localize`Are you sure you want to delete this workspace \"${workspace.name}\"?`,\n      confirmText: $localize`Delete`,\n      cancelText: $localize`Cancel`,\n      variant: AlertDialogVariant.IMPORTANT,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ESet.html":{"url":"classes/ESet.html","title":"class - ESet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ESet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/e-set.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Set\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(key: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/e-set.class.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ESet extends Set {\n  toggle(key: any) {\n    if (this.has(key)) {\n      this.delete(key);\n    } else {\n      this.add(key);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProjectMembersPage.html":{"url":"components/EditProjectMembersPage.html","title":"component - EditProjectMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProjectMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-project-members\n            \n\n            \n                styleUrls\n                ./edit-project-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-project-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                editProjectWithWorkspace\n                            \n                            \n                                    Public\n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:49\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProjectWithWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProjectWithWorkspace(newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:80\n                \n            \n\n\n            \n                \n                    Loads project data from the project service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:140\n                \n            \n\n\n            \n                \n                    Attach to lifecycle hook to unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:91\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:30\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:46\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:42\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.workspaceService.list()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  AddMemberDialog,\n  AddMemberDialogData,\n} from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-edit-project-members',\n  templateUrl: './edit-project-members.page.html',\n  styleUrls: ['./edit-project-members.page.scss'],\n})\nexport class EditProjectMembersPage {\n  faPlus = faPlus;\n\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  });\n\n  public project$!: Observable;\n  public workspaceList$: Observable = this.workspaceService.list();\n  // public workspace: Workspace = this.workspaceService.get(id);\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  private workspaceId!: number;\n  public projectId!: number;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n    this.form.addControl('id', new FormControl(projectId));\n\n    this.loadProject(projectId);\n  }\n\n  /**\n   * Loads project data from the project service.\n   * @param id project id\n   */\n  public loadProject(id: number) {\n    this.project$ = this.projectService.get(id);\n    this.getSubscription = this.project$.subscribe((workspace) => {\n      this.form.patchValue(workspace);\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    let newWorkspaceId: number = this.form.get('newWorkspaceId')?.value;\n\n    if (this.workspaceId != newWorkspaceId && newWorkspaceId != null) {\n      this.editProjectWithWorkspace(newWorkspaceId);\n    } else {\n      this.editProject();\n    }\n  }\n\n  public editProjectWithWorkspace(newWorkspaceId: number) {\n    this.updateSubscription = this.projectService\n      .changeWorkspace(this.projectId, newWorkspaceId)\n      .subscribe(() => {\n        this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n          this.router.navigate(['/', newWorkspaceId]);\n        });\n      });\n  }\n\n  public editProject() {\n    this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/', this.workspaceId]);\n    });\n  }\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {\n        projectId: this.projectId,\n      } as AddMemberDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.memberService.add(result, [this.projectId]).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  /**\n   * Attach to lifecycle hook to unsubscribe from all subscriptions.\n   */\n  ngOnDestroy(): void {\n    if (this.getSubscription) this.getSubscription.unsubscribe();\n    if (this.updateSubscription) this.updateSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  Add member\n\n\n\n\n    \n\n    \n                \n                    ./edit-project-members.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.button {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: -60px;\n  margin-bottom: 20px;\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add member'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditProjectMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProjectPage.html":{"url":"components/EditProjectPage.html","title":"component - EditProjectPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProjectPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-project/edit-project.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-project\n            \n\n            \n                styleUrls\n                ./edit-project.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-project.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                editProjectWithWorkspace\n                            \n                            \n                                    Public\n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:40\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProjectWithWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProjectWithWorkspace(newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:69\n                \n            \n\n\n            \n                \n                    Loads project data from the project service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:125\n                \n            \n\n\n            \n                \n                    Attach to lifecycle hook to unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:89\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:21\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:37\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:33\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.workspaceService.list()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-edit-project',\n  templateUrl: './edit-project.page.html',\n  styleUrls: ['./edit-project.page.scss'],\n})\nexport class EditProjectPage implements OnDestroy {\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  });\n\n  public project$!: Observable;\n  public workspaceList$: Observable = this.workspaceService.list();\n  // public workspace: Workspace = this.workspaceService.get(id);\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  private workspaceId!: number;\n  public projectId!: number;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = Number(workspaceId);\n    this.projectId = Number(projectId);\n\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n    this.form.addControl('id', new FormControl(projectId));\n\n    this.loadProject(projectId);\n  }\n\n  /**\n   * Loads project data from the project service.\n   * @param id project id\n   */\n  public loadProject(id: number) {\n    this.project$ = this.projectService.get(id);\n    this.getSubscription = this.project$.subscribe((project) => {\n      this.form.patchValue(project);\n    });\n\n    this.workspaceList$.subscribe((workspaces) => {\n      const workspace = workspaces.find((workspace) => workspace.id === this.workspaceId);\n      if (workspace) {\n        this.form.patchValue({\n          newWorkspaceId: workspace.id,\n        });\n      }\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    let newWorkspaceId: number = this.form.get('newWorkspaceId')?.value;\n\n    if (this.workspaceId != newWorkspaceId && newWorkspaceId != null) {\n      this.editProjectWithWorkspace(newWorkspaceId);\n    } else {\n      this.editProject();\n    }\n  }\n\n  public editProjectWithWorkspace(newWorkspaceId: number) {\n    this.updateSubscription = this.projectService\n      .changeWorkspace(this.projectId, newWorkspaceId)\n      .subscribe(() => {\n        this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n          this.router.navigate(['/', newWorkspaceId]).then(() => {\n            location.reload();\n          });\n        });\n      });\n  }\n\n  public editProject() {\n    this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/', this.workspaceId]);\n    });\n  }\n\n  /**\n   * Attach to lifecycle hook to unsubscribe from all subscriptions.\n   */\n  ngOnDestroy(): void {\n    if (this.getSubscription) this.getSubscription.unsubscribe();\n    if (this.updateSubscription) this.updateSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n  \n    Workspace:\n    \n      {{ workspace.name }}\n      \n    \n  \n\n  \n    Modules\n  \n  \n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./edit-project.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Workspace:          {{ workspace.name }}                  Modules          Save  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditProjectPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditWorkspacePage.html":{"url":"components/EditWorkspacePage.html","title":"component - EditWorkspacePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditWorkspacePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts\n\n\n\n    \n        Description\n    \n    \n        Edit workspace page component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-workspace-page\n            \n\n            \n                styleUrls\n                ./edit-workspace.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-workspace.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadWorkspace\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:36\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadWorkspace(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:58\n                \n            \n\n\n            \n                \n                    Loads workspace data from the workspace service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:69\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    id: new FormControl(-1),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:22\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:36\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:32\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Edit workspace page component.\n */\n@Component({\n  selector: 'app-edit-workspace-page',\n  templateUrl: './edit-workspace.page.html',\n  styleUrls: ['./edit-workspace.page.scss'],\n})\nexport class EditWorkspacePage {\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    id: new FormControl(-1),\n  });\n\n  public workspace$!: Observable;\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n\n    this.loadWorkspace(workspaceId);\n  }\n\n  /**\n   * Loads workspace data from the workspace service.\n   * @param id Workspace id\n   */\n  public loadWorkspace(id: number) {\n    this.workspace$ = this.workspaceService.get(id);\n    this.getSubscription = this.workspace$.subscribe((workspace) => {\n      this.form.patchValue(workspace);\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.updateSubscription = this.workspaceService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/']).then(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  Edit workspace: {{ (workspace$ | async)?.name }}\n  \n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./edit-workspace.page.scss\n                \n                form {\n  padding: 4rem;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Edit workspace: {{ (workspace$ | async)?.name }}        Save  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditWorkspacePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailsModule.html":{"url":"modules/EmailsModule.html","title":"module - EmailsModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_imports\n\n\n\n\nEmailsRoutingModule\n\nEmailsRoutingModule\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nEmailsRoutingModule->EmailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/emails/emails.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            EmailsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmailsRoutingModule } from './emails.routing';\n\n@NgModule({\n  imports: [CommonModule, EmailsRoutingModule],\n  declarations: [],\n})\nexport class EmailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailsRoutingModule.html":{"url":"modules/EmailsRoutingModule.html","title":"module - EmailsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/emails/emails.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/**\n * Emails routes list\n */\nconst routes: Routes = [{}];\n\n/**\n * Emails routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmailsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Enum.html":{"url":"classes/Enum.html","title":"class - Enum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Enum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/enum.class.ts\n        \n\n\n            \n                Description\n            \n            \n                Utility enum functions for typescript\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                entries\n                            \n                            \n                                    Static\n                                isNumeric\n                            \n                            \n                                    Static\n                                keys\n                            \n                            \n                                    Static\n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        entries\n                        \n                    \n                \n            \n            \n                \n                    \n                    entries(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:70\n                \n            \n\n\n            \n                \n                    Function to get enum value by key.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.entries(TestEnum) // [['One', 1], ['Two', 2], ['Three', 3]]\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get entries from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.entries(TestEnum) // [[&#39;One&#39;, 1], [&#39;Two&#39;, 2], [&#39;Three&#39;, 3]]\n                        \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        array of enum entries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isNumeric\n                        \n                    \n                \n            \n            \n                \n                    \n                    isNumeric(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:10\n                \n            \n\n\n            \n                \n                    Tests if the given enum is numeric - contains at leas one number as value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to test\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true or false based on whether enum has numeric values\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        keys\n                        \n                    \n                \n            \n            \n                \n                    \n                    keys(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:32\n                \n            \n\n\n            \n                \n                    Function to get enum keys.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.keys(TestEnum) // ['One', 'Two', 'Three']\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get keys from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.keys(TestEnum) // [&#39;One&#39;, &#39;Two&#39;, &#39;Three&#39;]\n                        \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        array of enum keys\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        values\n                        \n                    \n                \n            \n            \n                \n                    \n                    values(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:48\n                \n            \n\n\n            \n                \n                    Function to get enum values.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.values(TestEnum) // [1, 2, 3]\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get values from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.values(TestEnum) // [1, 2, 3]\n                        \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        array of enum values\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Enum {\n  /**\n   * Tests if the given enum is numeric - contains at leas one number as value.\n   * @param enumType enum to test\n   * @returns true or false based on whether enum has numeric values\n   */\n  public static isNumeric(enumType: any): boolean {\n    for (const key of Object.keys(enumType)) {\n      if (Number(key)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Function to get enum keys.\n   * @param enumType enum to get keys from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.keys(TestEnum) // ['One', 'Two', 'Three']\n   * @returns array of enum keys\n   */\n  public static keys(enumType: any): string[] {\n    return Object.keys(enumType).filter((k) => !Number(k) && k != '0');\n  }\n\n  /**\n   * Function to get enum values.\n   * @param enumType enum to get values from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.values(TestEnum) // [1, 2, 3]\n   * @returns array of enum values\n   */\n  public static values(enumType: any): any[] {\n    if (!Enum.isNumeric(enumType)) {\n      return Object.values(enumType);\n    }\n\n    return Object.values(enumType)\n      .filter((v) => Number(v) || v === '0')\n      .map((v) => Number(v));\n  }\n\n  /**\n   * Function to get enum value by key.\n   * @param enumType enum to get entries from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.entries(TestEnum) // [['One', 1], ['Two', 2], ['Three', 3]]\n   * @returns array of enum entries\n   */\n  public static entries(enumType: any): [string, any][] {\n    if (!Enum.isNumeric(enumType)) {\n      return Object.entries(enumType);\n    }\n\n    return Object.entries(enumType)\n      .filter((e) => Number(e[1]) || e[1] === '0' || e[1] === 0)\n      .map((e) => [e[0], Number(e[1])]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                unauthorizedInARow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/interceptors/error.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/interceptors/error.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unauthorizedInARow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/interceptors/error.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DialogService } from '@main/services/dialog.service';\nimport { catchError, EMPTY, Observable, throwError } from 'rxjs';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private dialogService: DialogService, private router: Router) {}\n\n  private unauthorizedInARow = 0;\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((e, obs) => {\n        if (e.status === 401) {\n          this.unauthorizedInARow++;\n\n          if (this.unauthorizedInARow > 1) return EMPTY;\n\n          this.dialogService.closeAll();\n\n          if (e.error.message == 'user deleted') {\n            localStorage.removeItem('logged');\n            this.router.navigate(['/auth/delete-account']);\n            return EMPTY;\n          }\n\n          if (localStorage.getItem('logged')) {\n            localStorage.removeItem('logged');\n            this.dialogService.openErrorDialog($localize`Your session has expired.`);\n          }\n\n          this.router.navigate(['/auth/login']);\n          return EMPTY;\n        }\n\n        return throwError(() => e);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorValidationTree.html":{"url":"interfaces/ErrorValidationTree.html","title":"interface - ErrorValidationTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorValidationTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/decorators/service-validator.decorator.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/decorators/service-validator.decorator.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { DialogService } from '@main/services/dialog.service';\nimport { Observable } from 'rxjs';\n\nexport interface ErrorValidationTree {\n  [key: string]: {\n    [key: number]: string;\n  };\n}\n\nexport function ServiceValidator(errorValidationTree: ErrorValidationTree) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    descriptor.value = function (identifier: string) {\n      // const result = originalMethod.apply(this, identifier);\n\n      // This function returns new observable to use it as a pipe in other observables\n      return (source: Observable) => {\n        // Check for match in response\n        const match = (response: any) => {\n          // identifier check\n          if (!errorValidationTree[identifier]) return;\n\n          // Status check\n          const status = response?.error?.status || response?.status;\n          if (!status) return;\n\n          return errorValidationTree[identifier][status] || null;\n        };\n\n        const showAlert = (message: string, responseType: 'SUCCESS' | 'ERROR') => {\n          const dialogService = (window as any).injector.get(DialogService);\n\n          dialogService.alert({\n            title:\n              responseType === 'SUCCESS' ? $localize`Success` : $localize`Something went wrong`,\n            message,\n            cancelText: $localize`OK`,\n          });\n        };\n\n        return new Observable((subscriber) => {\n          source.subscribe({\n            next(value) {\n              const m = match(value);\n\n              if (m) {\n                showAlert(m, 'ERROR');\n              } else {\n                subscriber.next(value);\n              }\n            },\n            error(error) {\n              const m = match(error);\n\n              if (m) {\n                showAlert(error, 'ERROR');\n              } else {\n                subscriber.error(error);\n              }\n            },\n            complete() {\n              subscriber.complete();\n            },\n          });\n        });\n      };\n    };\n\n    return descriptor;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterCheckbox.html":{"url":"interfaces/FilterCheckbox.html","title":"interface - FilterCheckbox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterCheckbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/filters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        apply\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(input: T, option: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/interfaces/filters.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    option\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     \"1\" | \"0\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"1\" | \"0\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterCheckbox {\n  type: 'checkbox';\n  options: {\n    1: T | null;\n    0: T | null;\n  };\n  value: 1 | 0;\n  label: string;\n  apply(input: T, option: any): T;\n}\n\nexport type Filter = FilterCheckbox;\n\nexport type FilterType = 'checkbox';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filters.html":{"url":"classes/Filters.html","title":"class - Filters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/filters.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ONLY_MY_TASKS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        ONLY_MY_TASKS\n                        \n                    \n                \n            \n            \n                \n                    \n                    ONLY_MY_TASKS(currentUserId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/filters.class.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterCheckbox\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterCheckbox } from '@main/interfaces/filters.interface';\nimport { Task } from '@tasks/interfaces/task.interface';\n\nexport class Filters {\n  public static ONLY_MY_TASKS(currentUserId: string): FilterCheckbox {\n    return {\n      type: 'checkbox',\n      label: $localize`Only my tasks`,\n      options: {\n        1: { assigneeId: currentUserId },\n        0: {},\n      },\n      value: 0,\n      apply(tasks: Task[], option: { assigneeId?: string }) {\n        return tasks.filter((task) => task.assigneeId === option.assigneeId);\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/filters/filters.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                ./filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filters\n                            \n                            \n                                    Public\n                                    Optional\n                                form\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getControl\n                            \n                            \n                                    Public\n                                saveFilters\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filters\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/filters/filters.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/filters/filters.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getControl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getControl(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/filters/filters.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/filters/filters.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/filters/filters.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormArray\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/filters/filters.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n\n                \n                    \n                        getfilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/filters/filters.component.ts:21\n                                \n                            \n\n                \n                    \n                        setfilters(filters: Filter[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/filters/filters.component.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            filters\n                                                    \n                                                            \n                                                                            Filter[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormArray, FormControl, NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Filter } from '@main/interfaces/filters.interface';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss'],\n})\nexport class FiltersComponent extends ControlAccessor {\n  @Input() set filters(filters: Filter[]) {\n    this.form = new FormArray(\n      filters.map((filter) => {\n        return new FormControl(filter.value);\n      }),\n    );\n    this._filters = filters;\n  }\n\n  public get filters() {\n    return this._filters;\n  }\n\n  private _filters: Filter[] = [];\n  public form?: FormArray;\n\n  constructor(public override ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  public getControl(index: number) {\n    const control = (this.form?.controls[index] || new FormControl()) as FormControl;\n    return control;\n  }\n\n  public saveFilters() {\n    if (!this.form) return;\n\n    let formValue: Filter[] = [];\n\n    for (const [index, filter] of this.filters.entries()) {\n      const filterValue = Number(this.form?.controls[index].value) as 0 | 1;\n      filter.value = filterValue;\n      formValue.push(filter);\n    }\n\n    this.control.setValue(formValue);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ filter.label }}\n      \n      Unknown filter type: {{ filter.type }}\n    \n  \n\n  Save filters\n\n    \n\n    \n                \n                    ./filters.component.scss\n                \n                .filters {\n  width: 100%;\n\n  app-button {\n    width: 100%;\n\n    ::ng-deep button {\n      width: 100%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ filter.label }}            Unknown filter type: {{ filter.type }}        Save filters'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusInitialDirective.html":{"url":"directives/FocusInitialDirective.html","title":"directive - FocusInitialDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  FocusInitialDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/focus-initial.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to focus on the first input element on the page\n\n            \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFocusInitial]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/focus-initial.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Default constructor of the directive.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to attached element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/directives/focus-initial.directive.ts:19\n                \n            \n\n\n            \n                \n                    Lifecycle hook to initialize the directive.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n/**\n * Directive to focus on the first input element on the page\n */\n@Directive({\n  selector: '[appFocusInitial]',\n})\nexport class FocusInitialDirective implements AfterViewInit {\n  /**\n   * Default constructor of the directive.\n   * @param el Reference to attached element\n   */\n  constructor(private el: ElementRef) {}\n\n  /**\n   * Lifecycle hook to initialize the directive.\n   */\n  ngAfterViewInit(): void {\n    this.el.nativeElement.__ngContext__[33].focus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordPage.html":{"url":"components/ForgotPasswordPage.html","title":"component - ForgotPasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/forgot-password/forgot-password.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-page\n            \n\n            \n                styleUrls\n                ./forgot-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAngleDown\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                resetSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:24\n                        \n                    \n\n            \n                \n                    Form group for reset password.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        resetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-forgot-page',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  faAngleDown = faAngleDown;\n\n  private resetSubscription?: Subscription;\n\n  /**\n   * Form group for reset password.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n  });\n\n  resetPassword() {\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.resetSubscription = this.authService.resetPassword(this.form.value).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        Back to login page\n      \n      \n        \n          Reset password\n          When you enter your email address, you will receive an email with a link to reset your password.\n        \n\n        \n\n        Reset password\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .return-button {\n      position: relative;\n      display: flex;\n      align-items: center;\n      align-self: flex-start;\n      margin: 0 0 0 40px;\n\n      &:hover {\n        a {\n          color: var(--color-link-hover);\n        }\n\n        app-icon {\n          color: var(--color-link-hover);\n        }\n      }\n\n      app-icon {\n        display: inline-block;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: 5px;\n        color: var(--color-link);\n        transform: rotate(90deg);\n      }\n\n      a {\n        color: var(--color-link);\n        cursor: pointer;\n        transition: color 0.2s ease;\n      }\n    }\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Back to login page                              Reset password          When you enter your email address, you will receive an email with a link to reset your password.                        Reset password                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormGroup.html":{"url":"interfaces/FormGroup.html","title":"interface - FormGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typings/typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        submit\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/typings/typings.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\n\ndeclare global {\n  interface FormGroup {\n    submit(): void;\n  }\n}\n\n(FormGroup as any).prototype.submit = function () {\n  console.log('submit');\n};\n\nexport {};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitAccount.html":{"url":"interfaces/GitAccount.html","title":"interface - GitAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitHubUsername\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            suspended\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitHubUsername\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitHubUsername:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suspended\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suspended:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitAccountWithUsage.html":{"url":"interfaces/GitAccountWithUsage.html","title":"interface - GitAccountWithUsage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitAccountWithUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                                \n                                        \n                                            usage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:         GitAccount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitAccount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usage:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GitAccount } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { map, Observable, take } from 'rxjs';\n\ninterface GitAccountWithUsage {\n  account: GitAccount;\n  usage: Observable;\n}\n\n@Component({\n  selector: 'app-settings-integrations',\n  templateUrl: './settings-integrations.page.html',\n  styleUrls: ['./settings-integrations.page.scss'],\n})\nexport class SettingsIntegrationsPage implements OnInit {\n  public gitHubAccounts$!: Observable;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  ngOnInit() {\n    this.loadGitHubIntegration();\n  }\n\n  public loadGitHubIntegration(): void {\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\n      map((accounts) => {\n        return accounts.map((account) => {\n          return {\n            account,\n            usage: this.getConnectedProjects(account).pipe(take(1)),\n          };\n        });\n      }),\n    );\n  }\n\n  public disconnect(account: GitAccount): void {\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\n      window.open(link, '_blank');\n    });\n  }\n\n  public getConnectedProjects(account: GitAccount): Observable {\n    return this.gitIntegrationService\n      .getGitHubAccountConnectedProjects(account)\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(', ')));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitIntegration.html":{"url":"interfaces/GitIntegration.html","title":"interface - GitIntegration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitIntegration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitRepositories\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitRepositories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitRepositories:         GitRepository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitRepository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GitIntegrationService.html":{"url":"injectables/GitIntegrationService.html","title":"injectable - GitIntegrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GitIntegrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/git-integration.service.ts\n        \n\n\n            \n                Description\n            \n            \n                How to use Git integration service:\n\nRun method startGitHubIntegration() to start the integration process and open the browser to the GitHub login page.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attachGitHubIntegration\n                            \n                            \n                                    Public\n                                connectGitHubIssue\n                            \n                            \n                                    Public\n                                connectGitHubPull\n                            \n                            \n                                    Public\n                                deleteConnectedGitHubAccount\n                            \n                            \n                                    Public\n                                deleteGitHubIntegration\n                            \n                            \n                                    Public\n                                disconnectGitHubIssue\n                            \n                            \n                                    Public\n                                disconnectGitHubPull\n                            \n                            \n                                    Public\n                                getConnectedGitHubAccounts\n                            \n                            \n                                    Public\n                                getGitHubAccountConnectedProjects\n                            \n                            \n                                    Public\n                                getGitHubIntegration\n                            \n                            \n                                    Public\n                                gitHubIssueList\n                            \n                            \n                                    Public\n                                gitHubPullList\n                            \n                            \n                                    Public\n                                hasGitHubIntegration\n                            \n                            \n                                    Public\n                                isOwnerOfRepository\n                            \n                            \n                                    Public\n                                postGitHubIntegration\n                            \n                            \n                                    Public\n                                startGitHubIntegration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/git-integration.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attachGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    attachGitHubIntegration(projectId: number, repositoryName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repositoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectGitHubIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectGitHubIssue(projectId: number, taskId: number, issue?: GitIssue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    issue\n                                    \n                                                GitIssue\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectGitHubPull\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectGitHubPull(projectId: number, taskId: number, pull?: GitPull)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pull\n                                    \n                                                GitPull\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteConnectedGitHubAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteConnectedGitHubAccount(gitHubAccountId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:81\n                \n            \n\n\n            \n                \n                    Delete the given account connection\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gitHubAccountId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GitHub account id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with link to open the GitHub page with application removal\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGitHubIntegration(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnectGitHubIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnectGitHubIssue(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnectGitHubPull\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnectGitHubPull(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConnectedGitHubAccounts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConnectedGitHubAccounts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGitHubAccountConnectedProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGitHubAccountConnectedProjects(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gitHubIssueList\n                        \n                    \n                \n            \n            \n                \n                    \n                    gitHubIssueList(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gitHubPullList\n                        \n                    \n                \n            \n            \n                \n                    \n                    gitHubPullList(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hasGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasGitHubIntegration(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isOwnerOfRepository\n                        \n                    \n                \n            \n            \n                \n                    \n                    isOwnerOfRepository(repositoryName: string, account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:128\n                \n            \n\n\n            \n                \n                    Checks if the given account is the owner of the repository\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    repositoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Repository name with it's owner ex.\n\n                                    \n                                \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GitHub account object to test with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.gitHubIntegrationService.isOwnerOfRepository(&#39;@czemar/cli&#39;, account)\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the repository is owned by the account\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        postGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    postGitHubIntegration(installationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    installationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        startGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    startGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:33\n                \n            \n\n\n            \n                \n                    Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\n\n\n                    \n                        Example :\n                        \n                            this.gitHubIntegrationService.startGitHubIntegration()\n                        \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable true if the opened window with GitHub integration was closed\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  GitAccount,\n  GitIntegration,\n  GitIssue,\n  GitPull,\n} from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { ApiService } from '@main/services/api.service';\nimport { filter, interval, map, mergeMap, Observable, take } from 'rxjs';\nimport { ProjectService } from './project.service';\n\n/**\n * How to use Git integration service:\n *\n * 1. Run method `startGitHubIntegration()` to start the integration process and open the browser to the GitHub login page.\n *\n *\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class GitIntegrationService {\n  constructor(private apiService: ApiService, private projectService: ProjectService) {}\n\n  /**\n   * Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\n   * @example this.gitHubIntegrationService.startGitHubIntegration()\n   * @returns Observable true if the opened window with GitHub integration was closed\n   */\n  public startGitHubIntegration(): Observable {\n    return this.apiService.get('/user/integration/github/repository').pipe(\n      map((response: any) => response.link),\n      mergeMap((url) => {\n        const win = window.open(url, '_blank');\n\n        if (!win) throw new Error('This browser does not support window.open');\n\n        return interval(100).pipe(\n          map(() => win.closed),\n          filter((closed) => closed),\n          take(1),\n        );\n      }),\n    );\n  }\n\n  public postGitHubIntegration(installationId: string): Observable {\n    return this.apiService.post(`/user/integration/github`, {\n      params: { installationId },\n    });\n  }\n\n  public getGitHubIntegration(): Observable {\n    return this.apiService.get('/user/integration/github/repository');\n  }\n\n  public attachGitHubIntegration(projectId: number, repositoryName: string): Observable {\n    return this.apiService.post(`/project/${projectId}/integration/github`, {\n      body: repositoryName,\n    });\n  }\n\n  public getConnectedGitHubAccounts(): Observable {\n    return this.apiService\n      .get('/user/integration/github')\n      .pipe(\n        map((accounts: GitAccount[]) =>\n          accounts.map((account) => ({ ...account, gitHubUsername: `@${account.gitHubUsername}` })),\n        ),\n      );\n  }\n\n  /**\n   * Delete the given account connection\n   * @param gitHubAccountId GitHub account id\n   * @returns object with link to open the GitHub page with application removal\n   */\n  public deleteConnectedGitHubAccount(gitHubAccountId: number): Observable {\n    return this.apiService.delete(`/user/integration/github/${gitHubAccountId}`);\n  }\n\n  public deleteGitHubIntegration(projectId: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/integration/github`);\n  }\n\n  public hasGitHubIntegration(projectId: number): Observable {\n    return this.projectService.get(projectId).pipe(map((project) => !!project.gitHubIntegration));\n  }\n\n  public gitHubIssueList(projectId: number) {\n    return this.apiService.get(`/project/${projectId}/integration/git/issue`);\n  }\n\n  public connectGitHubIssue(projectId: number, taskId: number, issue?: GitIssue) {\n    return this.apiService.post(`/project/${projectId}/task/${taskId}/integration/git/issue`, {\n      body: issue,\n    });\n  }\n\n  public disconnectGitHubIssue(projectId: number, taskId: number) {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}/integration/git/issue`);\n  }\n\n  public gitHubPullList(projectId: number) {\n    return this.apiService.get(`/project/${projectId}/integration/git/pull`);\n  }\n\n  public connectGitHubPull(projectId: number, taskId: number, pull?: GitPull) {\n    return this.apiService.post(`/project/${projectId}/task/${taskId}/integration/git/pull`, {\n      body: pull,\n    });\n  }\n\n  public disconnectGitHubPull(projectId: number, taskId: number) {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}/integration/git/pull`);\n  }\n\n  /**\n   * Checks if the given account is the owner of the repository\n   * @param repositoryName Repository name with it's owner ex. @czemar/cli\n   * @param account GitHub account object to test with\n   * @example this.gitHubIntegrationService.isOwnerOfRepository('@czemar/cli', account)\n   * @returns true if the repository is owned by the account\n   */\n  public isOwnerOfRepository(repositoryName: string, account: GitAccount): boolean {\n    const preparedUsername = account.gitHubUsername.replace('@', '');\n    return Boolean(repositoryName.match(new RegExp('^' + preparedUsername + '/*')));\n  }\n\n  public getGitHubAccountConnectedProjects(account: GitAccount): Observable {\n    return this.projectService\n      .list()\n      .pipe(\n        map((projects) =>\n          projects.filter(\n            (project: Project) =>\n              project.gitHubIntegration &&\n              this.isOwnerOfRepository(project.gitHubIntegration, account),\n          ),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitIssue.html":{"url":"interfaces/GitIssue.html","title":"interface - GitIssue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitIssue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitPull.html":{"url":"interfaces/GitPull.html","title":"interface - GitPull","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitPull\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            branch\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitRepository.html":{"url":"interfaces/GitRepository.html","title":"interface - GitRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fullName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            private\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GithubIntegrationPage.html":{"url":"components/GithubIntegrationPage.html","title":"component - GithubIntegrationPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GithubIntegrationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/github-integration/github-integration.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-github-integration-page\n            \n\n            \n                styleUrls\n                ./github-integration.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./github-integration.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/github-integration/github-integration.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/github-integration/github-integration.page.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\n\n@Component({\n  selector: 'app-github-integration-page',\n  templateUrl: './github-integration.page.html',\n  styleUrls: ['./github-integration.page.scss'],\n})\nexport class GithubIntegrationPage implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private gitIntegrationService: GitIntegrationService,\n  ) {}\n\n  ngOnInit() {\n    const { installation_id, setup_action } = this.activatedRoute.snapshot.queryParams;\n\n    console.log(installation_id, setup_action, setup_action !== 'update');\n\n    if (installation_id && setup_action && setup_action !== 'update') {\n      this.gitIntegrationService.postGitHubIntegration(installation_id).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  Now you can close this page\n\n\n    \n\n    \n                \n                    ./github-integration.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Now you can close this page'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'GithubIntegrationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/icon/icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        Icon component. Supports material icons and font-awesome icons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-icon\n            \n\n            \n                styleUrls\n                ./icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _icon\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                prefix\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.height\n                            \n                            \n                                style.width\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    iconDefinition\n                                \n                                \n                                    style\n                                \n                                \n                                    snakeCaseName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/icon/icon.component.ts:35\n                            \n                        \n                \n                    \n                        Icon to display. Can be a string or an icon definition.\nFor example:\nFor the icon \"fa fa-question\" you can use:\nFor the icon \"mat search\" you can use:\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '24px'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/icon/icon.component.ts:19\n                            \n                        \n                \n                    \n                        Icon size. Defaults to 1.5em. Supports all CSS units.\nFor example: 24px, 1.5em, etc.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:66\n                        \n                    \n\n            \n                \n                    Binding to the hosts height attribute to use the size input.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:59\n                        \n                    \n\n            \n                \n                    Binding to hosts width attribute to use the size input.\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:95\n                        \n                    \n\n            \n                \n                    Private icon variable to use getter and setter for props.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconName\n\n                    \n                \n                \n                    \n                        Default value : 'question'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:105\n                        \n                    \n\n            \n                \n                    Name getter\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconPrefix\n\n                    \n                \n                \n                    \n                        Default value : 'fas'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:100\n                        \n                    \n\n            \n                \n                    Prefix getter\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:52\n                                \n                            \n                    \n                        \n                                Icon getter\n\n\n                                \n                                    Returns :     string | IconDefinition\n\n                                \n                        \n                    \n\n                \n                    \n                        seticon(value: string | IconDefinition)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:35\n                                \n                            \n                    \n                        \n                                Icon to display. Can be a string or an icon definition.\nFor example:\nFor the icon \"fa fa-question\" you can use:\nFor the icon \"mat search\" you can use:\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string | IconDefinition\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:59\n                                \n                            \n                    \n                        \n                                Binding to hosts width attribute to use the size input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:66\n                                \n                            \n                    \n                        \n                                Binding to the hosts height attribute to use the size input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        iconDefinition\n                    \n                \n\n                \n                    \n                        geticonDefinition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:73\n                                \n                            \n                    \n                        \n                                Getter to the icon definition. If no icon is found it returns the question icon.\n\n\n                                \n                                    Returns :     IconDefinition\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        style\n                    \n                \n\n                \n                    \n                        getstyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:83\n                                \n                            \n                    \n                        \n                                Style host binding to set the icon size.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        snakeCaseName\n                    \n                \n\n                \n                    \n                        getsnakeCaseName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:113\n                                \n                            \n                    \n                        \n                                Getter to get the icon name in snake case.\nFor example:\nfor ShoppingCart this function will return shopping_cart\n\n\n                                \n                                    Returns :     IconName\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input } from '@angular/core';\nimport { IconName, IconPrefix } from '@fortawesome/fontawesome-svg-core';\nimport { Utils } from '../../classes/utils.class';\nimport { faQuestion, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Icon component. Supports material icons and font-awesome icons.\n */\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent {\n  /**\n   * Icon size. Defaults to 1.5em. Supports all CSS units.\n   * For example: 24px, 1.5em, etc.\n   */\n  @Input() size: string = '24px';\n\n  /**\n   * Icon to display. Can be a string or an icon definition.\n   * For example:\n   *\n   * For the icon \"fa fa-question\" you can use:\n   * ```html\n   * \n   * ```\n   *\n   * For the icon \"mat search\" you can use:\n   * ```html\n   * \n   * ```\n   */\n  @Input() set icon(value: string | IconDefinition) {\n    this._icon = value;\n\n    if (typeof value === 'string') {\n      const splitIndex = Utils.regexIndexOf(value, /[A-Z]/);\n\n      this.prefix = value.substring(0, splitIndex) as IconPrefix;\n      this.name = value.substring(splitIndex) as IconName;\n    } else {\n      this.prefix = value.prefix as IconPrefix;\n      this.name = value.iconName as IconName;\n    }\n  }\n\n  /**\n   * Icon getter\n   */\n  public get icon(): string | IconDefinition {\n    return this._icon;\n  }\n\n  /**\n   * Binding to hosts width attribute to use the size input.\n   */\n  @HostBinding('style.width') get width() {\n    return this.size;\n  }\n\n  /**\n   * Binding to the hosts height attribute to use the size input.\n   */\n  @HostBinding('style.height') get height() {\n    return this.size;\n  }\n\n  /**\n   * Getter to the icon definition. If no icon is found it returns the question icon.\n   */\n  public get iconDefinition(): IconDefinition {\n    if (typeof this._icon === 'string') {\n      return faQuestion;\n    }\n    return this._icon as IconDefinition;\n  }\n\n  /**\n   * Style host binding to set the icon size.\n   */\n  public get style() {\n    return {\n      'font-size': this.size,\n      width: this.size,\n      height: this.size,\n      'line-height': this.size,\n    };\n  }\n\n  /**\n   * Private icon variable to use getter and setter for props.\n   */\n  private _icon: string | IconDefinition = '';\n\n  /**\n   * Prefix getter\n   */\n  public prefix: IconPrefix = 'fas';\n\n  /**\n   * Name getter\n   */\n  public name: IconName = 'question';\n\n  /**\n   * Getter to get the icon name in snake case.\n   * For example:\n   *\n   * for `ShoppingCart` this function will return `shopping_cart`\n   */\n  public get snakeCaseName(): IconName {\n    return Utils.snakeCase(this.name) as IconName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    {{ snakeCaseName }}\n  \n  \n    \n  \n  \n    question_mark\n  \n\n    \n\n    \n                \n                    ./icon.component.scss\n                \n                :host {\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  font-size: 0;\n\n  fa-icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ snakeCaseName }}                question_mark  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputAssigneeComponent.html":{"url":"components/InputAssigneeComponent.html","title":"component - InputAssigneeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputAssigneeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/input-assignee/input-assignee.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n            \n                selector\n                app-input-assignee\n            \n\n            \n                styleUrls\n                ./input-assignee.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-assignee.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _assignee\n                            \n                            \n                                    Public\n                                    Optional\n                                assigneeColor\n                            \n                            \n                                    Public\n                                    Readonly\n                                isOpen$\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                overlay\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assignee\n                            \n                            \n                                members\n                            \n                            \n                                projectId\n                            \n                            \n                                taskId\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    assignee\n                                \n                                \n                                    members\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assignee\n                    \n                \n                \n                    \n                        Type :     ProjectMember | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n                \n                    \n                        Type :     Map | []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(member: ProjectMember | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    member\n                                    \n                                            ProjectMember | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _assignee\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectMember | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        assigneeColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as any)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('overlay')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        assignee\n                    \n                \n\n                \n                    \n                        getassignee()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:27\n                                \n                            \n\n                \n                    \n                        setassignee(assignee: ProjectMember | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            assignee\n                                                    \n                                                            \n                                                                        ProjectMember | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n\n\n                \n                    \n                        setmembers(members: Map | ProjectMember[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            members\n                                                    \n                                                            \n                                                                        Map | ProjectMember[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:60\n                                \n                            \n\n                \n                    \n                        setisOpen(val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:56\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { UserUtils } from '@dashboard/classes/user.class';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { TaskService } from '@tasks/services/task.service';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport * as Color from 'color';\nimport { BehaviorSubject, filter, fromEvent, take } from 'rxjs';\n\n@Component({\n  selector: 'app-input-assignee',\n  templateUrl: './input-assignee.component.html',\n  styleUrls: ['./input-assignee.component.scss'],\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\nexport class InputAssigneeComponent extends ControlAccessor {\n  @Input() set assignee(assignee: ProjectMember | null) {\n    this._assignee = assignee;\n\n    if (assignee) {\n      this.assigneeColor = UserUtils.getColorById(assignee?.user.id);\n    } else {\n      this.assigneeColor = undefined;\n    }\n  }\n  public get assignee(): ProjectMember | null {\n    return this._assignee;\n  }\n\n  @Input() set members(members: Map | ProjectMember[]) {\n    if (Array.isArray(members)) {\n      for (const member of members) {\n        (member as any).color = UserUtils.getColorById(member.user.id);\n      }\n      this.members$.next(members as any);\n    } else if (members) {\n      const membersArray = [...members.values()];\n      for (const member of membersArray) {\n        (member as any).color = UserUtils.getColorById(member.user.id);\n      }\n      this.members$.next(membersArray as any);\n    }\n  }\n  @Input() taskId?: number;\n  @Input() projectId?: number;\n\n  @ViewChild('overlay') overlay!: ElementRef;\n\n  private _assignee: ProjectMember | null = null;\n\n  public members$ = new BehaviorSubject([] as any);\n  public readonly isOpen$ = new BehaviorSubject(false);\n  public assigneeColor?: Color;\n\n  public set isOpen(val: boolean) {\n    this.isOpen$.next(val);\n  }\n\n  public get isOpen() {\n    return this.isOpen$.value;\n  }\n\n  constructor(public override ngControl: NgControl, private taskService: TaskService) {\n    super(ngControl);\n  }\n\n  public open() {\n    setTimeout(() => {\n      fromEvent(document, 'click')\n        .pipe(\n          take(1),\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\n        )\n        .subscribe(() => this.close());\n      this.isOpen$.next(true);\n    });\n  }\n\n  public close() {\n    this.isOpen$.next(false);\n  }\n\n  public toggle() {\n    if (this.isOpen) {\n      return this.close();\n    }\n    return this.open();\n  }\n\n  public select(member: ProjectMember | null) {\n    if (this.taskId && this.projectId)\n      this.taskService\n        .assign(member?.user.id || null, this.taskId, this.projectId)\n        .subscribe(() => {\n          this.close();\n          location.reload();\n        });\n  }\n}\n\n    \n\n    \n        \n\n  {{ assignee ? assignee.user.name[0] : '+' }}\n\n\n\n  \n    \n      {{ member.user.name[0] }}\n      \n        {{ member.user.name }} {{ member.user.surname }}\n        @{{ member.user.username }}\n      \n    \n    \n    \n      -\n      Remove assignee\n    \n  \n\n    \n\n    \n                \n                    ./input-assignee.component.scss\n                \n                @import '../../../../styles/typography';\n\n.assignee {\n  display: flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-secondary-400);\n  border-radius: 50%;\n  color: var(--color-text);\n  cursor: pointer;\n  transition: background-color 0.4s ease;\n\n  &:not(.add) {\n    @include typo-title;\n\n    background-color: var(--color-primary-500);\n  }\n\n  &:not(.add):hover {\n    background-color: var(--color-secondary-300);\n  }\n}\n\n.members-overlay {\n  padding: 1rem;\n  padding: 0.5rem 0;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.1);\n\n  li {\n    display: flex;\n    align-items: center;\n    padding: 0.75rem 2rem;\n    color: var(--color-text);\n\n    &:not(.line) {\n      cursor: pointer;\n      transition: background-color 0.4s ease;\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n\n    &.line {\n      position: relative;\n\n      &::before {\n        position: absolute;\n        top: calc(50% - 1px);\n        left: 10%;\n        width: 80%;\n        height: 1px;\n        background-color: var(--color-secondary-500);\n        content: '';\n      }\n    }\n\n    &.entry-remove {\n      span {\n        opacity: 0.75;\n      }\n    }\n\n    .avatar {\n      @include typo-title;\n\n      display: flex;\n      width: 36px;\n      height: 36px;\n      align-items: center;\n      justify-content: center;\n      margin-right: 1rem;\n      border-radius: 50%;\n      color: var(--color-text);\n    }\n\n    .avatar-remove {\n      display: flex;\n      width: 36px;\n      height: 36px;\n      align-items: center;\n      justify-content: center;\n      margin-right: 1rem;\n      background-color: var(--color-secondary-400);\n      border-radius: 50%;\n      color: var(--color-text);\n      opacity: 0.5;\n    }\n\n    .details {\n      display: flex;\n      flex-direction: column;\n\n      .username {\n        opacity: 0.5;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ assignee ? assignee.user.name[0] : \\'+\\' }}            {{ member.user.name[0] }}              {{ member.user.name }} {{ member.user.surname }}        @{{ member.user.username }}                        -      Remove assignee      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputAssigneeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/input/input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Default text input component\n\n    \n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input\n            \n\n            \n                styleUrls\n                ./input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                focused\n                            \n                            \n                                input\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlur\n                            \n                            \n                                onFocus\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                hint\n                            \n                            \n                                placeholder\n                            \n                            \n                                staticLabel\n                            \n                            \n                                type\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.focused\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, autofillMonitor: AutofillMonitor)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/input/input.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autofillMonitor\n                                                  \n                                                        \n                                                                    AutofillMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:23\n                            \n                        \n                \n                    \n                        Floating label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:38\n                            \n                        \n                \n                    \n                        Hint to display beneath the input to provide additional information of how to use the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:33\n                            \n                        \n                \n                    \n                        Input placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        staticLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:28\n                            \n                        \n                \n                    \n                        Static label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"text\" | \"number\" | \"email\" | \"password\"\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:18\n                            \n                        \n                \n                    \n                        Type of the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.focused\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input/input.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input/input.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFocus\n                        \n                    \n                \n            \n            \n                \nonFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input/input.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        focused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.focused')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input/input.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input/input.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AutofillMonitor } from '@angular/cdk/text-field';\nimport { Component, ElementRef, HostBinding, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ControlAccessor } from '../../classes/control-accessor.class';\n\n/**\n * Default text input component\n */\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent extends ControlAccessor {\n  /**\n   * Type of the input\n   */\n  @Input() type: 'text' | 'number' | 'email' | 'password' = 'text';\n\n  /**\n   * Floating label text to display\n   */\n  @Input() floatingLabel?: string;\n\n  /**\n   * Static label text to display\n   */\n  @Input() staticLabel?: string;\n\n  /**\n   * Input placeholder text\n   */\n  @Input() placeholder: string = '';\n\n  /**\n   * Hint to display beneath the input to provide additional information of how to use the input\n   */\n  @Input() hint?: string;\n\n  @HostBinding('class.focused') focused = false;\n\n  @ViewChild('input') input!: ElementRef;\n\n  constructor(public override ngControl: NgControl, private autofillMonitor: AutofillMonitor) {\n    super(ngControl);\n  }\n\n  onFocus() {\n    this.focused = true;\n  }\n\n  onBlur() {\n    this.focused = false;\n  }\n}\n\n    \n\n    \n        \n  {{ staticLabel }}\n  \n    \n    \n      {{ floatingLabel }}\n    \n    \n    \n  \n  {{ control?.errors | validationError }}\n\n\n    \n\n    \n                \n                    ./input.component.scss\n                \n                @import '../../../../styles/typography';\n\n.form-field {\n  display: flex;\n  max-width: 400px;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  > label {\n    @include typo-title;\n\n    margin-bottom: 0.4rem;\n    color: var(--color-input-text);\n\n    &.required::after {\n      margin-left: 0.2rem;\n      color: var(--color-input-text);\n      content: '*';\n    }\n  }\n}\n\n$padding-left: 1rem;\n$height: 55px;\n\n// New input\n.input-form-field {\n  position: relative;\n  height: $height;\n  margin-bottom: 2rem;\n\n  // Static label for input\n  .static-label {\n    @include typo-title;\n\n    margin-bottom: 0.4rem;\n    color: var(--color-input-text);\n\n    &.required::after {\n      margin-left: 0.2rem;\n      color: var(--color-input-text);\n      content: '*';\n    }\n  }\n\n  // Floating label for input\n  .floating-label {\n    @include typo-body;\n\n    padding: 0 0.4rem;\n    color: var(--color-text);\n    transition: transform 0.2s ease, font-size 0.2s ease;\n  }\n\n  // Fragments\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    z-index: 1;\n    height: 100%;\n    border: 2px solid var(--color-input-border);\n    pointer-events: none;\n  }\n\n  .fragment-left {\n    width: $padding-left;\n    border-right-width: 0;\n    border-bottom-left-radius: var(--border-radius);\n    border-top-left-radius: var(--border-radius);\n  }\n\n  .fragment-middle {\n    display: flex;\n    align-items: center;\n    border-right-width: 0;\n    border-left-width: 0;\n  }\n\n  .fragment-right {\n    flex-grow: 1;\n    border-left-width: 0;\n    border-bottom-right-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n  }\n\n  .input-wrapper {\n    position: relative;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    background-color: var(--color-input-background);\n    border-radius: var(--border-radius);\n    transition: background-color 0.2s ease-in-out;\n\n    &:hover {\n      background-color: var(--color-input-background-hover);\n    }\n  }\n\n  input {\n    @include typo-body;\n\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    padding-left: calc($padding-left + 0.4rem);\n    background-color: var(--color-input-background);\n    background-color: transparent;\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n  }\n}\n\n.has-value,\n:host.focused {\n  .floating-label {\n    font-size: 0.75em;\n    transform: translateY(calc($height / -2));\n  }\n\n  .fragment-middle {\n    border-top-width: 0;\n  }\n}\n\n:host:not(.focused) {\n  input::placeholder {\n    opacity: 0;\n  }\n}\n\n:host.ng-touched.ng-invalid {\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    border-color: var(--color-red-500);\n  }\n}\n\n:host.focused .input-form-field {\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    border-color: var(--color-primary-500);\n  }\n}\n\n.required {\n  .static-label::after,\n  .floating-label::after {\n    margin-left: 0.2rem;\n    color: var(--color-red-500);\n    content: '*';\n  }\n}\n\n.error {\n  position: absolute;\n  margin-top: 0.2rem;\n  color: var(--color-red-500);\n  font-size: 12px;\n  line-height: 0.8rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ staticLabel }}                {{ floatingLabel }}                {{ control?.errors | validationError }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputDateTimeComponent.html":{"url":"components/InputDateTimeComponent.html","title":"component - InputDateTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputDateTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/input-date-time/input-date-time.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input-date-time\n            \n\n            \n                styleUrls\n                ./input-date-time.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-date-time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changedDate\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                picker\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                writeValue\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                placeholder\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        writeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input-date-time')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'app-input-date-time',\n  templateUrl: './input-date-time.component.html',\n  styleUrls: ['./input-date-time.component.scss'],\n})\nexport class InputDateTimeComponent extends ControlAccessor implements OnInit {\n  @Input()\n  placeholder: string = '';\n\n  @Input()\n  floatingLabel?: string;\n\n  public changedDate: FormControl = new FormControl();\n\n  @ViewChild('input-date-time') picker!: ElementRef;\n\n  constructor(public override ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  ngOnInit(): void {\n    this.changedDate.valueChanges.subscribe((date) =>\n      this.control.setValue(this.changeDate(date), { emitEvent: false }),\n    );\n  }\n\n  override writeValue(value: any): void {\n    this.changedDate.setValue(this.changeDate(value));\n  }\n\n  changeDate(date: number) {\n    let sessionDate = dayjs(date);\n\n    return sessionDate.format('YYYY-MM-DD');\n  }\n}\n\n    \n\n    \n        \n   {{floatingLabel}}\n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./input-date-time.component.scss\n                \n                ::ng-deep .mat-focused .mat-form-field-label {\n  /* change color of label */\n  color: white !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /* change color of underline */\n  background-color: var(--color-purple-300) !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /* change color of underline when focused */\n  background-color: white !important;\n}\n\n::ng-deep .mat-form-field-label {\n  /* change color of label */\n  color: white !important;\n}\n\nmat-datepicker-toggle {\n  color: var(--color-purple-300) !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{floatingLabel}}        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputDateTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntegrationEntryComponent.html":{"url":"components/IntegrationEntryComponent.html","title":"component - IntegrationEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntegrationEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/components/integration-entry/integration-entry.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-integration-entry\n            \n\n            \n                styleUrls\n                ./integration-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./integration-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                integration\n                            \n                            \n                                label\n                            \n                            \n                                suspended\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        integration\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        suspended\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        disconnect\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-integration-entry',\n  templateUrl: './integration-entry.component.html',\n  styleUrls: ['./integration-entry.component.scss'],\n})\nexport class IntegrationEntryComponent implements OnInit {\n  @Input() integration?: any;\n  @Input() label!: string;\n  @Input() description?: string | null;\n  @Input() suspended: boolean = false;\n\n  @Output() disconnect = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      {{ label }}\n    \n    \n      {{ description }}\n    \n  \n  \n    Disconnect\n  \n\n\n    \n\n    \n                \n                    ./integration-entry.component.scss\n                \n                .integration-entry {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n  border: 1px solid var(--color-secondary-300);\n  border-radius: var(--border-radius);\n\n  &.suspended {\n    opacity: 0.5;\n  }\n\n  .labels {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    margin-bottom: 0;\n\n    .description {\n      display: block;\n      padding-left: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}              {{ description }}            Disconnect  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntegrationEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntegrationGithubComponent.html":{"url":"components/IntegrationGithubComponent.html","title":"component - IntegrationGithubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntegrationGithubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/integration-github/integration-github.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-integration-github\n            \n\n            \n                styleUrls\n                ./integration-github.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./integration-github.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                repositoryList\n                            \n                            \n                                    Public\n                                repositoryListLoaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRepository\n                            \n                            \n                                connectToGithub\n                            \n                            \n                                loadRepositories\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRepository\n                        \n                    \n                \n            \n            \n                \naddRepository()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectToGithub\n                        \n                    \n                \n            \n            \n                \nconnectToGithub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRepositories\n                        \n                    \n                \n            \n            \n                \nloadRepositories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    repository: new FormControl(null, [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repositoryList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GitRepository[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repositoryListLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { GitRepository } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-integration-github',\n  templateUrl: './integration-github.component.html',\n  styleUrls: ['./integration-github.component.scss'],\n})\nexport class IntegrationGithubComponent implements OnInit {\n  @Input()\n  projectId!: number;\n\n  repositoryList: GitRepository[] = [];\n  public repositoryListLoaded = false;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  public form = new FormGroup({\n    repository: new FormControl(null, [requiredValidator()]),\n  });\n\n  connectToGithub() {\n    this.gitIntegrationService.startGitHubIntegration().subscribe(() => {\n      this.loadRepositories();\n    });\n  }\n\n  loadRepositories() {\n    this.repositoryListLoaded = false;\n    this.gitIntegrationService.getGitHubIntegration().subscribe((integration) => {\n      this.repositoryList = integration.gitRepositories;\n      this.repositoryListLoaded = true;\n    });\n  }\n\n  addRepository() {\n    this.gitIntegrationService\n      .attachGitHubIntegration(this.projectId, this.form.value.repository)\n      .subscribe();\n  }\n\n  ngOnInit() {\n    this.loadRepositories();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Github\n    \n    Connect to Github\n  \n\n  \n\n    \n    \n      \n        {{repository.fullName}}\n        \n      \n      Add repository\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./integration-github.component.scss\n                \n                main {\n  padding: 20px;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n\n  section {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    color: var(--color-text);\n\n    .github {\n      width: 100%;\n    }\n\n    app-button {\n      align-items: center;\n      justify-content: center;\n      margin-bottom: 20px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Github        Connect to Github                          {{repository.fullName}}                    Add repository      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntegrationGithubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page/landing-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/landing-page/landing-page.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss'],\n})\nexport class LandingPageComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LetContext.html":{"url":"interfaces/LetContext.html","title":"interface - LetContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LetContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/let.directive.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ngLet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngLet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ngLet:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface LetContext {\n  ngLet: T;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class LetDirective {\n  private _context: LetContext = { ngLet: null };\n\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>) {\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\n  }\n\n  @Input()\n  set ngLet(value: T) {\n    this._context.ngLet = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LetDirective.html":{"url":"directives/LetDirective.html","title":"directive - LetDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/let.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngLet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngLet\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngLet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/let.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _viewContainer\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _templateRef\n                                                  \n                                                        \n                                                                        TemplateRef>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/directives/let.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LetContext\n\n                    \n                \n                \n                    \n                        Default value : { ngLet: null }\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/directives/let.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n\n\n                \n                    \n                        setngLet(value: T)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/directives/let.directive.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface LetContext {\n  ngLet: T;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class LetDirective {\n  private _context: LetContext = { ngLet: null };\n\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>) {\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\n  }\n\n  @Input()\n  set ngLet(value: T) {\n    this._context.ngLet = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListGroupComponent.html":{"url":"components/ListGroupComponent.html","title":"component - ListGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/components/list-group/list-group.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-group\n            \n\n            \n                styleUrls\n                ./list-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/components/list-group/list-group.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/list-group/list-group.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/components/list-group/list-group.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-group',\n  templateUrl: './list-group.component.html',\n  styleUrls: ['./list-group.component.scss'],\n})\nexport class ListGroupComponent implements OnInit {\n  @Input() label!: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  {{ label }}\n\n\n    \n\n    \n                \n                    ./list-group.component.scss\n                \n                h4 {\n  display: block;\n  width: 100%;\n  padding: 5px 0;\n  border-bottom: 1px solid var(--color-secondary-300);\n  color: var(--color-secondary-300);\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoggedInUsersGuard.html":{"url":"guards/LoggedInUsersGuard.html","title":"guard - LoggedInUsersGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoggedInUsersGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guard/logged-in-users.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guard/logged-in-users.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/guard/logged-in-users.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LoggedInUsersGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/auth/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/login/login.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                error\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                loginSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/login/login.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n    password: new FormControl('', [requiredValidator()], []),\n    remember: new FormControl('', [], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:27\n                        \n                    \n\n            \n                \n                    Form group for login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        loginSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '@auth/services/user.service';\nimport { catchError, EMPTY, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n  ) {}\n\n  private loginSubscription?: Subscription;\n  public error?: string;\n\n  /**\n   * Form group for login.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n    password: new FormControl('', [requiredValidator()], []),\n    remember: new FormControl('', [], []),\n  });\n\n  ngOnInit() {\n    this.userService.getMyself().subscribe(() => {\n      localStorage.setItem('logged', 'true');\n      this.router.navigate(['/']);\n    });\n  }\n\n  login() {\n    if (this.loginSubscription && !this.loginSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.loginSubscription = this.authService\n        .login(this.form.value)\n        .pipe(\n          catchError((e) => {\n            this.handleError(e);\n            return EMPTY;\n          }),\n        )\n        .subscribe((response) => {\n          if (response.deleted) {\n            this.router.navigate(['/auth/restore-account']);\n          } else {\n            localStorage.setItem('logged', 'true');\n            this.router.navigate(['/']);\n          }\n        });\n    }\n  }\n\n  handleError(error: any) {\n    switch (error.status) {\n      case 403:\n        this.error = $localize`User is already logged`;\n        break;\n      case 404:\n        this.error = $localize`Wrong username or password`;\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Login to system\n          This is a secure site. Please enter your login information to enter or click here to register.\n        \n\n        \n          {{ error }}\n        \n\n        \n\n        \n\n        Forgot your password? Reset password.\n\n        \n          \n        \n\n        Log in\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .remember-me {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n\n        a {\n          color: var(--color-link);\n          cursor: pointer;\n          transition: color 0.2s ease;\n\n          &:hover {\n            color: var(--color-link-hover);\n          }\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Login to system          This is a secure site. Please enter your login information to enter or click here to register.                          {{ error }}                                Forgot your password? Reset password.                                  Log in                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/_main/_main.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Main dependency module with all universal components and modules declarations\nThis module is required for application to run properly\n```js\nimport { MainModule } from '@app/main/main.module';(@)NgModule({\n  imports: [ ..., MainModule ],\n  ...\n})\nexport class ExampleModule {}\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injector, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CardComponent } from './components/card/card.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { FiltersComponent } from './components/filters/filters.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { InputDateTimeComponent } from './components/input-date-time/input-date-time.component';\nimport { InputComponent } from './components/input/input.component';\nimport { MainViewComponent } from './components/main-view/main-view.component';\nimport { NavElementWorkspaceComponent } from './components/nav-element-workspace/nav-element-workspace.component';\nimport { NavElementComponent } from './components/nav-element/nav-element.component';\nimport { OptionComponent } from './components/option/option.component';\nimport { SelectComponent } from './components/select/select.component';\nimport { SidebarNavigationComponent } from './components/sidebar-navigation/sidebar-navigation.component';\nimport { SnackbarOutletComponent } from './components/snackbar-outlet/snackbar-outlet.component';\nimport { SnackbarComponent } from './components/snackbar/snackbar.component';\nimport { TextareaComponent } from './components/textarea/textarea.component';\nimport { UpperNavigationComponent } from './components/upper-navigation/upper-navigation.component';\nimport { AlertDialog } from './dialogs/alert/alert.dialog';\nimport { ClickStopPropagationDirective } from './directives/click-stop-propagation.directive';\nimport { FocusInitialDirective } from './directives/focus-initial.directive';\nimport { LetDirective } from './directives/let.directive';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport { ValidationErrorPipe } from './pipes/validation-error.pipe';\nimport { ApiService } from './services/api.service';\nimport { DialogService } from './services/dialog.service';\n\n/**\n * Main module configuration object\n */\nconst ngModuleConfig = {\n  imports: [\n    /*=============================================\n    =             Local dependencies              =\n    =============================================*/\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n    ObserversModule,\n  ],\n  importExports: [\n    /*=============================================\n      =                Dependencies                 =\n      =============================================*/\n    DragDropModule,\n    PlatformModule,\n    OverlayModule,\n\n    /*=============================================\n      =              Material modules               =\n      =============================================*/\n    MatDialogModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n\n    /*=============================================\n      =              External modules               =\n      =============================================*/\n    FontAwesomeModule,\n  ],\n  declarations: [\n    /*=============================================\n    =         Local custom components             =\n    =============================================*/\n  ],\n  exportDeclarations: [\n    /*=============================================\n    =         Exported custom components          =\n    =============================================*/\n    InputComponent,\n    ButtonComponent,\n    ValidationErrorPipe,\n    AlertDialog,\n    IconComponent,\n    FocusInitialDirective,\n    SidebarNavigationComponent,\n    NavElementComponent,\n    NavElementWorkspaceComponent,\n    UpperNavigationComponent,\n    SelectComponent,\n    OptionComponent,\n    MainViewComponent,\n    TextareaComponent,\n    CheckboxComponent,\n    CardComponent,\n    ClickStopPropagationDirective,\n    InputDateTimeComponent,\n    LetDirective,\n    FiltersComponent,\n    SnackbarComponent,\n    SnackbarOutletComponent,\n  ],\n  providers: [\n    DialogService,\n    ApiService,\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    MatCheckboxModule,\n    MatDatepickerModule,\n  ],\n};\n\n/**\n * Main dependency module with all universal components and modules declarations\n * This module is required for application to run properly\n * @example\n * ```js\n * import { MainModule } from '@app/main/main.module';\n *\n * (@)NgModule({\n *   imports: [ ..., MainModule ],\n *   ...\n * })\n * export class ExampleModule {}\n * ```\n */\n@NgModule({\n  imports: [...ngModuleConfig.imports, ...ngModuleConfig.importExports],\n  declarations: [...ngModuleConfig.declarations, ...ngModuleConfig.exportDeclarations],\n  exports: [...ngModuleConfig.importExports, ...ngModuleConfig.exportDeclarations],\n  providers: [...ngModuleConfig.providers],\n})\nexport class MainModule {\n  static injector: Injector;\n\n  constructor(injector: Injector) {\n    MainModule.injector = injector;\n    (window as any).injector = injector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainViewComponent.html":{"url":"components/MainViewComponent.html","title":"component - MainViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/main-view/main-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-view\n            \n\n            \n                styleUrls\n                ./main-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/main-view/main-view.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/main-view/main-view.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-view',\n  templateUrl: './main-view.component.html',\n  styleUrls: ['./main-view.component.scss'],\n})\nexport class MainViewComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  \n\n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./main-view.component.scss\n                \n                :host {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: var(--color-secondary-700);\n}\n\nsection {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow-x: hidden;\n\n  main {\n    width: 100%;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberListComponent.html":{"url":"components/MemberListComponent.html","title":"component - MemberListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/member-list/member-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-list\n            \n\n            \n                styleUrls\n                ./member-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./member-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                memberList$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteMember\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addedMembers\n                            \n                            \n                                memberList\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(memberService: MemberService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addedMembers\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        memberList\n                    \n                \n                \n                    \n                        Type :     ProjectMember[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"create\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'edit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMember\n                        \n                    \n                \n            \n            \n                \ndeleteMember(id: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        memberList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.scss'],\n})\nexport class MemberListComponent implements OnInit {\n  public projectId!: number;\n\n  public memberList$!: Observable;\n\n  @Input()\n  addedMembers?: string[];\n\n  @Input()\n  type: 'create' | 'edit' = 'edit';\n\n  @Input()\n  memberList!: ProjectMember[];\n\n  constructor(private memberService: MemberService, private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n    this.projectId = projectId;\n\n    this.memberList$ = this.memberService.list(projectId);\n  }\n\n  deleteMember(id: number[]) {\n    this.memberService.remove(this.projectId, id).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  \n  \n    Username\n     {{ row.user.username }} \n  \n\n  \n  \n    Email\n     {{ row.user.email }} \n  \n\n  \n  \n    Name\n     {{ row.user.name }} \n  \n\n  \n  \n    Surname\n     {{ row.user.surname }} \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Delete member\n        \n      \n    \n  \n\n  \n  \n\n\n\n\n  \n  \n    Username or Email\n     {{ row }} \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./member-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Username     {{ row.user.username }}           Email     {{ row.user.email }}           Name     {{ row.user.name }}           Surname     {{ row.user.surname }}                                                           Delete member                                Username or Email     {{ row }}       '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemberListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberService.html":{"url":"injectables/MemberService.html","title":"injectable - MemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/member.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                leave\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                map\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/member.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(emails: string[], projects: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:49\n                \n            \n\n\n            \n                \n                    Adds members to projects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    emails\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        emails of people to add\n\n                                    \n                                \n                                \n                                    projects\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        leave\n                        \n                    \n                \n            \n            \n                \n                    \n                    leave(projectId: number, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:39\n                \n            \n\n\n            \n                \n                    Let member leave project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the member who will leave the project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:19\n                \n            \n\n\n            \n                \n                    Lists members in given project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        map\n                        \n                    \n                \n            \n            \n                \n                    \n                    map(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:61\n                \n            \n\n\n            \n                \n                    Creates members map from given project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(projectId: number, id: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:29\n                \n            \n\n\n            \n                \n                    Removes members from project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        list of member ids to remove from project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { map, Observable } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemberService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Lists members in given project\n   * @param projectId project which are members from\n   * @returns Request observable, which completes when request is finished\n   */\n  public list(projectId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/member`);\n  }\n\n  /**\n   * Removes members from project\n   * @param projectId project which are members from\n   * @param id list of member ids to remove from project\n   * @returns Request observable, which completes when request is finished\n   */\n  public remove(projectId: number, id: number[]): Observable {\n    return this.apiService.put(`/project/${projectId}/member`, { body: id });\n  }\n\n  /**\n   * Let member leave project.\n   * @param projectId project which are members from\n   * @param id id of the member who will leave the project\n   * @returns Request observable, which completes when request is finished\n   */\n  public leave(projectId: number, id: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/member`, { body: id });\n  }\n\n  /**\n   * Adds members to projects.\n   * @param emails emails of people to add\n   * @param projectList projects where people will be added\n   * @returns Request observable, which completes when request is finished\n   */\n  public add(\n    emails: string[],\n    projects: number[],\n  ): Observable {\n    return this.apiService.post(`/project/member`, { body: { emails, projects } });\n  }\n\n  /**\n   * Creates members map from given project\n   * @param projectId project which are members from\n   * @returns Request observable, which completes when request is finished\n   */\n  public map(projectId: number): Observable> {\n    return this.list(projectId).pipe(\n      map((members) =>\n        members.reduce((acc: Map, member: ProjectMember) => {\n          acc.set(member.user.id, member);\n          return acc;\n        }, new Map()),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesModule.html":{"url":"modules/MessagesModule.html","title":"module - MessagesModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_imports\n\n\n\n\nMessagesRoutingModule\n\nMessagesRoutingModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nMessagesRoutingModule->MessagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/messages/messages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MessagesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessagesRoutingModule } from './messages.routing';\n\n@NgModule({\n  imports: [CommonModule, MessagesRoutingModule],\n  declarations: [],\n})\nexport class MessagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesRoutingModule.html":{"url":"modules/MessagesRoutingModule.html","title":"module - MessagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/messages/messages.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/**\n * Messages routes list\n */\nconst routes: Routes = [{}];\n\n/**\n * Messages routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MessagesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModifyUser.html":{"url":"interfaces/ModifyUser.html","title":"interface - ModifyUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModifyUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavElementComponent.html":{"url":"components/NavElementComponent.html","title":"component - NavElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/nav-element/nav-element.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-element\n            \n\n            \n                styleUrls\n                ./nav-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                    Optional\n                                listElement\n                            \n                            \n                                    Public\n                                showArrow$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeNavElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                openNavElement\n                            \n                            \n                                    Public\n                                toggleNavElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routerLink\n                            \n                            \n                                showOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:24\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routerLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showOptions\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    openNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('elementList')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showArrow$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-nav-element',\n  templateUrl: './nav-element.component.html',\n  styleUrls: ['./nav-element.component.scss'],\n})\nexport class NavElementComponent implements AfterViewInit {\n  @Input()\n  public routerLink?: string;\n\n  @Input()\n  public showOptions?: boolean;\n\n  public active: boolean = false;\n\n  public showArrow$: BehaviorSubject = new BehaviorSubject(false);\n\n  @ViewChild('elementList')\n  listElement?: ElementRef;\n\n  faAngleDown = faAngleDown;\n\n  constructor() {}\n\n  public openNavElement() {\n    this.active = true;\n  }\n  public closeNavElement() {\n    this.active = false;\n  }\n  public toggleNavElement() {\n    if (!this.active) {\n      this.openNavElement();\n    } else {\n      this.closeNavElement();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n    \n      \n    \n    \n      \n        more_vert\n      \n      \n        \n      \n    \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./nav-element.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n}\n\nsection {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  height: 46px;\n  align-items: center;\n  justify-content: space-between;\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: color 0.2s ease-in-out;\n\n  .element {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding: 0 0 0 20px;\n  }\n\n  .icons {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 0 5px 0 0;\n    }\n\n    .open-below {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: center;\n      padding: 0 5px;\n\n      // padding: 0 5px;\n\n      app-icon {\n        display: flex;\n        justify-content: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n\n    .options button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  &:hover {\n    color: var(--color-text);\n  }\n}\n\n.list {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    justify-content: center;\n    background-color: var(--color-secondary-600);\n  }\n}\n\n.hidden {\n  visibility: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              more_vert                                  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavElementWorkspaceComponent.html":{"url":"components/NavElementWorkspaceComponent.html","title":"component - NavElementWorkspaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavElementWorkspaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-element-workspace\n            \n\n            \n                styleUrls\n                ./nav-element-workspace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-element-workspace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeWorkspace\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                    Optional\n                                listElement\n                            \n                            \n                                    Public\n                                showArrow$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeWorkspace\n                            \n                            \n                                createProject\n                            \n                            \n                                deleteProject\n                            \n                            \n                                deleteWorkspace\n                            \n                            \n                                editProject\n                            \n                            \n                                editWorkspace\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                openWithLocalVSCode\n                            \n                            \n                                openWithLocalVSCodeInsiders\n                            \n                            \n                                openWithVSCode\n                            \n                            \n                                    Public\n                                openWorkspace\n                            \n                            \n                                routeToProject\n                            \n                            \n                                routeToWorkspace\n                            \n                            \n                                    Public\n                                toggleWorkspace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routerLink\n                            \n                            \n                                workspace\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, dialogService: DialogService, projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routerLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        workspace\n                    \n                \n                \n                    \n                        Type :         Workspace\n\n                    \n                \n                \n                    \n                        Default value : { id: -1 } as unknown as Workspace\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProject\n                        \n                    \n                \n            \n            \n                \ncreateProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteWorkspace\n                        \n                    \n                \n            \n            \n                \ndeleteWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProject\n                        \n                    \n                \n            \n            \n                \neditProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editWorkspace\n                        \n                    \n                \n            \n            \n                \neditWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithLocalVSCode\n                        \n                    \n                \n            \n            \n                \nopenWithLocalVSCode(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithLocalVSCodeInsiders\n                        \n                    \n                \n            \n            \n                \nopenWithLocalVSCodeInsiders(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithVSCode\n                        \n                    \n                \n            \n            \n                \nopenWithVSCode(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    openWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeToProject\n                        \n                    \n                \n            \n            \n                \nrouteToProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeToWorkspace\n                        \n                    \n                \n            \n            \n                \nrouteToWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeWorkspace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('elementList')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showArrow$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { BehaviorSubject } from 'rxjs';\nimport { Project } from 'src/app/dashboard/interfaces/project.interface';\nimport { Workspace } from 'src/app/dashboard/interfaces/workspace.interface';\nimport { ProjectService } from 'src/app/dashboard/services/project.service';\nimport { WorkspaceService } from 'src/app/dashboard/services/workspace.service';\nimport { DialogService } from '../../services/dialog.service';\n\n@Component({\n  selector: 'app-nav-element-workspace',\n  templateUrl: './nav-element-workspace.component.html',\n  styleUrls: ['./nav-element-workspace.component.scss'],\n})\nexport class NavElementWorkspaceComponent implements AfterViewInit {\n  @Input()\n  public routerLink?: string;\n\n  @Input()\n  public workspace: Workspace = { id: -1 } as unknown as Workspace;\n\n  faAngleDown = faAngleDown;\n  public activeWorkspace: boolean = false;\n\n  public showArrow$: BehaviorSubject = new BehaviorSubject(false);\n\n  @ViewChild('elementList')\n  listElement?: ElementRef;\n\n  constructor(\n    private workspaceService: WorkspaceService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private router: Router,\n  ) {}\n\n  public openWorkspace() {\n    this.activeWorkspace = true;\n  }\n  public closeWorkspace() {\n    this.activeWorkspace = false;\n  }\n  public toggleWorkspace() {\n    if (!this.activeWorkspace) {\n      this.openWorkspace();\n    } else {\n      this.closeWorkspace();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\n    });\n  }\n\n  routeToWorkspace() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id]));\n  }\n\n  routeToProject(project: Project) {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, project.id]));\n  }\n\n  createProject() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, 'create']));\n  }\n\n  editProject(project: Project) {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, project.id, 'edit']));\n  }\n\n  deleteProject(project: Project) {\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\n      this.projectService.delete(project.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n\n  editWorkspace() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, 'edit']));\n  }\n\n  deleteWorkspace() {\n    this.dialogService.confirmWorkspaceDelete(this.workspace).subscribe(() => {\n      this.workspaceService.delete(this.workspace.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n\n  openWithVSCode(project: Project) {\n    window.open(`https://github.dev/${project.gitHubIntegration}`, '_blank');\n  }\n\n  openWithLocalVSCode(project: Project) {\n    window.open(\n      `vscode://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\n      '_blank',\n    );\n  }\n\n  openWithLocalVSCodeInsiders(project: Project) {\n    window.open(\n      `vscode-insiders://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\n      '_blank',\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n      \n      \n        \n          more_vert\n        \n        \n          \n            Create project\n          \n          \n            Manage projects\n          \n          \n            Edit workspace\n          \n          \n            Delete workspace\n          \n        \n      \n    \n  \n  \n    \n      \n        {{projectWithPriv.project.name}}\n        \n          \n            \n              more_vert\n            \n            \n              \n                Open in github.dev\n              \n              \n                Open in Visual Studio Code\n              \n              \n                Open in Visual Studio Code Insiders\n              \n              \n                Edit project\n              \n              \n                Delete project\n              \n            \n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./nav-element-workspace.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  @include typo-title;\n\n  background-color: var(--color-secondary-600);\n}\n\nli {\n  background-color: var(--color-secondary-700);\n}\n\n.workspace {\n  display: flex;\n  width: 100%;\n  height: 46px;\n  justify-content: space-between;\n  border-radius: var(--border-radius);\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n\n  .element {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding: 0 0 0 30px;\n  }\n\n  .icons {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 0 5px 0 0;\n    }\n\n    .open-below {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: center;\n      padding: 0 5px;\n\n      app-icon {\n        display: flex;\n        justify-content: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n\n    .options button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  &:hover {\n    background-color: var(--color-secondary-500);\n  }\n}\n\n.project {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    justify-content: center;\n    background-color: var(--color-secondary-600);\n    color: var(--color-neutral-300);\n    transition: background-color 0.2s ease-in-out;\n\n    li {\n      display: flex;\n      width: 100%;\n      height: 46px;\n      align-items: center;\n      justify-content: space-between;\n      border-radius: var(--border-radius);\n\n      .sub-element {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        align-items: center;\n        padding: 0 0 0 40px;\n      }\n\n      .icons {\n        display: flex;\n        height: 100%;\n        align-items: center;\n        padding: 0 5px 0 0;\n      }\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n  }\n}\n\nbutton {\n  display: flex;\n  align-items: center;\n}\n\n.hidden {\n  visibility: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                more_vert                                      Create project                                Manage projects                                Edit workspace                                Delete workspace                                                  {{projectWithPriv.project.name}}                                            more_vert                                                      Open in github.dev                                            Open in Visual Studio Code                                            Open in Visual Studio Code Insiders                                            Edit project                                            Delete project                                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavElementWorkspaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionComponent.html":{"url":"components/OptionComponent.html","title":"component - OptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/option/option.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-option\n            \n\n            \n                styleUrls\n                ./option.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faQuestion\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    viewValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/option/option.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/option/option.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/option/option.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faQuestion\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/option/option.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        viewValue\n                    \n                \n\n                \n                    \n                        getviewValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/option/option.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input } from '@angular/core';\nimport { faQuestion, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-option',\n  templateUrl: './option.component.html',\n  styleUrls: ['./option.component.scss'],\n})\nexport class OptionComponent {\n  @Input() value!: any;\n  @Input() icon?: string | IconDefinition;\n\n  faQuestion = faQuestion;\n\n  public get viewValue(): string {\n    return this.ref.nativeElement.innerText;\n  }\n\n  constructor(private ref: ElementRef) {}\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./option.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'OptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/project.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitHubIntegration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitHubIntegration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitHubIntegration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub repository name\n\"SamPanDonte/untitled\"\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project's ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project's name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectMembers:     ProjectMember[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectMember[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of projects members\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProjectMember } from './project-member.interface';\n\nexport interface Project {\n  /**\n   * The project's ID.\n   */\n  id: number;\n\n  /**\n   * The project's name.\n   */\n  name: string;\n\n  /**\n   * GitHub repository name\n   * @example\n   * \"SamPanDonte/untitled\"\n   */\n  gitHubIntegration: string;\n\n  /**\n   * List of projects members\n   */\n  projectMembers?: ProjectMember[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectMember.html":{"url":"interfaces/ProjectMember.html","title":"interface - ProjectMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/project-member.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            privileges\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        privileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        privileges:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectMember {\n  user: {\n    id: number;\n    name: string;\n    surname: string;\n    email: string;\n    avatar: string;\n    username: string;\n  };\n  privileges: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeWorkspace\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/project.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeWorkspace(projectId: number, newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:57\n                \n            \n\n\n            \n                \n                    Changes the workspace of the project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project to move\n\n                                    \n                                \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace where the project will be moved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(project: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:47\n                \n            \n\n\n            \n                \n                    Creates a new project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:29\n                \n            \n\n\n            \n                \n                    Deletes the project by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the project to delete from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:20\n                \n            \n\n\n            \n                \n                    Gets a project by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the project to get from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:64\n                \n            \n\n\n            \n                \n                    List projects in given workspace.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:38\n                \n            \n\n\n            \n                \n                    Updates a project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project object to update in the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { map } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Project } from '../interfaces/project.interface';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Gets a project by its ID.\n   * @param projectId identifier of the project to get from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(projectId: number) {\n    return this.apiService.get(`/project/${projectId}`);\n  }\n\n  /**\n   * Deletes the project by its ID.\n   * @param projectId identifier of the project to delete from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(projectId: number) {\n    return this.apiService.delete(`/project/${projectId}`);\n  }\n\n  /**\n   * Updates a project.\n   * @param project project object to update in the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public update(project: Project) {\n    return this.apiService.put(`/project/${project.id}`, { body: project });\n  }\n\n  /**\n   * Creates a new project.\n   * @param project project to add\n   * @returns Request observable, which completes when request is finished\n   */\n  public create(project: { name: string; workspaceId: number }) {\n    return this.apiService.post('/project', { body: project });\n  }\n\n  /**\n   * Changes the workspace of the project.\n   * @param projectId project to move\n   * @param newWorkspaceId workspace where the project will be moved\n   * @returns Request observable, which completes when request is finished\n   */\n  public changeWorkspace(projectId: number, newWorkspaceId: number) {\n    return this.apiService.put(`/project/${projectId}/workspace/${newWorkspaceId}`);\n  }\n\n  /**\n   * List projects in given workspace.\n   */\n  public list() {\n    return this.apiService.get('/workspace').pipe(\n      map((workspaces) =>\n        workspaces.reduce((projects: any, workspace: Workspace) => {\n          projects.push(...workspace.projectsWithPrivileges.map((p) => p.project));\n          return projects;\n        }, []),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsListPage.html":{"url":"components/ProjectsListPage.html","title":"component - ProjectsListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/projects-list/projects-list.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects-list\n            \n\n            \n                styleUrls\n                ./projects-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./projects-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faPlus\n                            \n                            \n                                projects$\n                            \n                            \n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProject\n                            \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                openProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, workspaceService: WorkspaceService, projectService: ProjectService, dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WorkspaceService } from '../../services/workspace.service';\nimport { map, Observable } from 'rxjs';\nimport { Project } from '../../interfaces/project.interface';\nimport { Workspace } from '../../interfaces/workspace.interface';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from 'src/app/_main/services/dialog.service';\nimport { ProjectService } from '../../services/project.service';\n\n@Component({\n  selector: 'app-projects-list',\n  templateUrl: './projects-list.page.html',\n  styleUrls: ['./projects-list.page.scss'],\n})\nexport class ProjectsListPage {\n  workspace$: Observable;\n  projects$: Observable;\n\n  faPlus = faPlus;\n\n  private workspaceId!: number;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private router: Router,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.projects$ = this.workspace$.pipe(\n      map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)),\n    );\n  }\n\n  public editProject(project: Project) {\n    this.router.navigate(['/', this.workspaceId, project.id, 'edit']);\n  }\n\n  public openProject(project: Project) {\n    this.router.navigate(['/', this.workspaceId, project.id]);\n  }\n\n  deleteProject(project: Project) {\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\n      this.projectService.delete(project.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n\n  {{ (workspace$ | async)?.name }}\n  New project\n\n\n\n\n\n  \n  \n    Name\n     {{ row.name }} \n  \n\n  \n  \n    Statistics\n     - \n  \n\n  \n  \n    Last update\n     - \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Edit project\n        \n        \n          Delete project\n        \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./projects-list.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ (workspace$ | async)?.name }}  New project        Name     {{ row.name }}           Statistics     -           Last update     -                                                           Edit project                          Delete project                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Random.html":{"url":"classes/Random.html","title":"class - Random","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Random\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/random.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                m_w\n                            \n                            \n                                    Private\n                                m_z\n                            \n                            \n                                    Private\n                                mask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                random\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(seed: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/random.class.ts:4\n                            \n                        \n\n                \n                    \n                            Random number generation class with optional seed\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        seed\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the seed to use in random number generation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        m_w\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 123456789\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        m_z\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 987654321\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0xffffffff\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        random\n                        \n                    \n                \n            \n            \n                \n                    \n                    random()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/random.class.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Random {\n  private m_w = 123456789;\n  private m_z = 987654321;\n  private mask = 0xffffffff;\n\n  /**\n   * Random number generation class with optional seed\n   * @param seed the seed to use in random number generation\n   */\n  constructor(seed: number = new Date().getTime()) {\n    this.m_w = (123456789 + seed) & this.mask;\n    this.m_z = (987654321 - seed) & this.mask;\n  }\n\n  // Returns number between 0 (inclusive) and 1.0 (exclusive),\n  // just like Math.random().\n  public random() {\n    this.m_z = (36969 * (this.m_z & 65535) + (this.m_z >> 16)) & this.mask;\n    this.m_w = (18000 * (this.m_w & 65535) + (this.m_w >> 16)) & this.mask;\n    let result = ((this.m_z >> 0;\n    result /= 4294967296;\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/register/register.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                error\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                RegisterStage\n                            \n                            \n                                    Private\n                                    Optional\n                                registerSubscription\n                            \n                            \n                                    Public\n                                    Optional\n                                stage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                nextStage\n                            \n                            \n                                previousStage\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/register/register.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousStage\n                        \n                    \n                \n            \n            \n                \npreviousStage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator(), emailValidator()], []),\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n    name: new FormControl('', [requiredValidator()], []),\n    surname: new FormControl('', [requiredValidator()], []),\n    username: new FormControl('', [requiredValidator()], []),\n    agreements: new FormControl('', [requiredValidator()], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:33\n                        \n                    \n\n            \n                \n                    Form group for register.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RegisterStage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RegisterStage\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        registerSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegisterStage\n\n                    \n                \n                \n                    \n                        Default value : RegisterStage.IMPORTANT_DATA\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { emailValidator } from '@main/validators/email.validator';\nimport { passwordValidator } from '@main/validators/password.validator';\nimport { sameAsValidator } from '@main/validators/same-as.validator';\nimport { catchError, EMPTY, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { AuthService } from '../../services/auth.service';\n\nenum RegisterStage {\n  IMPORTANT_DATA,\n  PERSONAL_DATA,\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  private registerSubscription?: Subscription;\n  public stage?: RegisterStage = RegisterStage.IMPORTANT_DATA;\n  RegisterStage = RegisterStage;\n\n  public error?: string;\n\n  /**\n   * Form group for register.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator(), emailValidator()], []),\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n    name: new FormControl('', [requiredValidator()], []),\n    surname: new FormControl('', [requiredValidator()], []),\n    username: new FormControl('', [requiredValidator()], []),\n    agreements: new FormControl('', [requiredValidator()], []),\n  });\n\n  nextStage() {\n    let formFields: string[] = ['email', 'password', 'repeatPassword', 'agreements'];\n    let correctData: boolean = true;\n    for (let field of formFields) {\n      this.form.get(field)?.markAsTouched();\n      this.form.get(field)?.updateValueAndValidity();\n      if (this.form.get(field)?.invalid) {\n        correctData = false;\n      }\n    }\n    if (correctData) {\n      this.stage = RegisterStage.PERSONAL_DATA;\n    }\n  }\n\n  previousStage() {\n    this.stage = RegisterStage.IMPORTANT_DATA;\n  }\n\n  register() {\n    if (this.registerSubscription && !this.registerSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.registerSubscription = this.authService\n        .register(this.form.value)\n        .pipe(\n          catchError((e) => {\n            this.handleError(e);\n            return EMPTY;\n          }),\n        )\n        .subscribe(() => {\n          this.router.navigate(['/']);\n        });\n    }\n  }\n\n  handleError(error: any) {\n    switch (error.status) {\n      case 422:\n        switch (error.error.message) {\n          case 'this email is already taken':\n            this.error = $localize`Email is already taken`;\n            break;\n          case 'this username is already taken':\n            this.error = $localize`Username is already taken`;\n        }\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Register\n          This is a secure site. Please enter your register information or if you have an\n            account already, click here to login.\n        \n\n        \n          {{ error }}\n        \n\n        \n          \n\n          \n\n          \n\n          \n            \n              I agree to the End User License Agreement and Privacy Statement.\n            \n          \n\n          Next\n        \n        \n          \n\n          \n\n          \n          \n            Back\n            Register\n          \n        \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .agreements {\n          display: flex;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n\n        a {\n          color: var(--color-link);\n          cursor: pointer;\n          transition: color 0.2s ease;\n\n          &:hover {\n            color: var(--color-link-hover);\n          }\n        }\n\n        .buttons {\n          display: flex;\n          width: 100%;\n          justify-content: space-between;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Register          This is a secure site. Please enter your register information or if you have an            account already, click here to login.                          {{ error }}                                                                                  I agree to the End User License Agreement and Privacy Statement.                                Next                                                                    Back            Register                                      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestOptions.html":{"url":"interfaces/RequestOptions.html","title":"interface - RequestOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/request-options.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Request options interface\nUse this interface to configure request options like body, params, headers, etc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            observe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reportProgress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            responseType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withCredentials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         HttpContext\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpContext\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional context to attach with request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     HttpHeaders | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to send with the request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        observe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        observe:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Part of the response to observe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:     HttpParams | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpParams | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Query params to send with the request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reportProgress:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to report progress events like download or upload progress.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responseType:     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Response type to expect from the server.\nFor example:\n\nblob - will return a Blob object (used when API sends back a file).\njson - will return a JSON object.\ntext - will return a string.\n\nDefault is json.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If you want the credentials (cookie authentication token) to be passable through a call,\nyou need to add { withCredentials: true } in your httpClient call.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpContext, HttpHeaders, HttpParams } from '@angular/common/http';\n\n/**\n * Request options interface\n * Use this interface to configure request options like body, params, headers, etc.\n */\nexport interface RequestOptions {\n  /**\n   * Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.\n   */\n  body?: any;\n  /**\n   * Headers to send with the request.\n   */\n  headers?:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      };\n  /**\n   * Additional context to attach with request.\n   */\n  context?: HttpContext;\n  /**\n   * Part of the response to observe.\n   */\n  observe?: 'body';\n  /**\n   * Query params to send with the request.\n   */\n  params?:\n    | HttpParams\n    | {\n        [param: string]: string | number | boolean | ReadonlyArray;\n      };\n  /**\n   * Used to report progress events like download or upload progress.\n   */\n  reportProgress?: boolean;\n\n  /**\n   * Response type to expect from the server.\n   * For example:\n   * - blob - will return a Blob object (used when API sends back a file).\n   * - json - will return a JSON object.\n   * - text - will return a string.\n   *\n   * Default is json.\n   */\n  responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  /**\n   * If you want the credentials (cookie authentication token) to be passable through a call,\n   * you need to add `{ withCredentials: true }` in your httpClient call.\n   */\n  withCredentials?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestoreAccountPage.html":{"url":"components/RestoreAccountPage.html","title":"component - RestoreAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestoreAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/restore-account/restore-account.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-restore-account-page\n            \n\n            \n                styleUrls\n                ./restore-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./restore-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/restore-account/restore-account.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/restore-account/restore-account.page.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restore\n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/restore-account/restore-account.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\n\n@Component({\n  selector: 'app-restore-account-page',\n  templateUrl: './restore-account.page.html',\n  styleUrls: ['./restore-account.page.scss'],\n})\nexport class RestoreAccountPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  logOut() {\n    this.authService.logout().subscribe();\n  }\n\n  restore() {\n    this.authService.recoverAccount().subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Restore account\n          Your account has been deleted. You can restore your account within 7 days of\n            deletion.\n        \n\n        \n          Log out\n          Restore\n        \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./restore-account.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .actions {\n          display: flex;\n          width: 100%;\n          justify-content: flex-end;\n          margin-bottom: 1rem;\n\n          > *:not(:last-child) {\n            margin-right: 1rem;\n          }\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Restore account          Your account has been deleted. You can restore your account within 7 days of            deletion.                          Log out          Restore                            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'RestoreAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterExtensionsService.html":{"url":"injectables/RouterExtensionsService.html","title":"injectable - RouterExtensionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RouterExtensionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/router-extensions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    snapshot\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/router-extensions.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        snapshot\n                    \n                \n\n                \n                    \n                        getsnapshot()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/services/router-extensions.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterExtensionsService {\n  constructor(private router: Router) {}\n  public get snapshot() {\n    let node = (this.router.routerState.snapshot as any)._root;\n    while (node.children[0]) {\n      node = node.children[0];\n    }\n\n    return { params: node.value.params };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SchedulePage.html":{"url":"components/SchedulePage.html","title":"component - SchedulePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SchedulePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/schedule/schedule.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-schedule-page\n            \n\n            \n                styleUrls\n                ./schedule.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./schedule.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cursor\n                            \n                            \n                                    Public\n                                limitAfter\n                            \n                            \n                                    Public\n                                limitBefore\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                schedule$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dates\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, activatedRoute: ActivatedRoute, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/schedule/schedule.page.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cursor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dayjs().toDate()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limitAfter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limitBefore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        schedule$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dates\n                    \n                \n\n                \n                    \n                        getdates()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/pages/schedule/schedule.page.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport { Schedule } from '@tasks/interfaces/schedule.interface';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-schedule-page',\n  templateUrl: './schedule.page.html',\n  styleUrls: ['./schedule.page.scss'],\n})\nexport class SchedulePage implements OnInit {\n  public schedule$: Observable;\n  public project$: Observable;\n\n  public cursor = dayjs().toDate();\n  public limitAfter = 20;\n  public limitBefore = 0;\n\n  public get dates() {\n    const { cursor, limitBefore, limitAfter } = this;\n\n    const dates = [];\n\n    for (let i = 0; i \n    \n\n    \n        \n\n\n  \n    \n      \n        {{ cursor | date:'MMMM' }}\n      \n    \n    \n      \n    \n    \n      \n      \n        \n          {{ singleSchedule.user.name.substring(0, 1) }}\n        \n      \n    \n  \n\n  \n    \n      \n      \n        {{ date | date:'d' }}\n        {{ date | date:'EEE' }}\n      \n    \n    \n      \n      \n    \n    \n      \n      \n        \n          \n            \n              {{ task.name }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./schedule.page.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  padding: 2rem;\n}\n\n.schedule {\n  display: flex;\n  width: 100%;\n  padding-left: 10px;\n\n  // Sections\n\n  .people-header {\n    width: 80px;\n    height: 100%;\n    flex-shrink: 0;\n    margin-right: 1rem;\n    background-color: var(--color-secondary-800);\n    border-radius: var(--border-radius);\n  }\n\n  .timeline {\n    width: 100%;\n    height: 100%;\n    flex-grow: 1;\n    background-color: var(--color-secondary-800);\n    border-radius: var(--border-radius);\n    overflow-x: auto;\n\n    .cell {\n      width: 130px;\n      border-right: 1px solid var(--color-secondary-600);\n    }\n\n    .group-event-row {\n      .cell {\n        border-top: 1px solid var(--color-secondary-600);\n      }\n    }\n\n    .single-person-row {\n      .cell {\n        border-top: 1px solid var(--color-secondary-600);\n      }\n    }\n  }\n\n  // Rows\n  .header-event-row,\n  .group-event-row,\n  .single-person-row {\n    display: flex;\n  }\n\n  .header-row {\n    @include typo-title;\n\n    display: flex;\n    height: 64px;\n    color: var(--color-text);\n  }\n\n  .group-event-row {\n    display: flex;\n    height: 30px;\n  }\n\n  .single-person-row {\n    display: flex;\n    width: 100%;\n    height: 100px;\n  }\n\n  .cell {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    flex-shrink: 0;\n    align-items: center;\n    justify-content: center;\n\n    .number {\n      @include typo-title;\n    }\n\n    .day-of-week {\n      @include typo-body;\n    }\n\n    .task {\n      width: 100%;\n      height: 100%;\n      padding: 10px;\n      background-color: var(--color-primary-500);\n      border-radius: var(--border-radius);\n      color: var(--color-text);\n    }\n  }\n}\n\n.avatar {\n  @include typo-heading-5;\n\n  display: flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-primary-500);\n  border-radius: 50%;\n  color: var(--color-text);\n  text-transform: uppercase;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ cursor | date:\\'MMMM\\' }}                                                          {{ singleSchedule.user.name.substring(0, 1) }}                                              {{ date | date:\\'d\\' }}        {{ date | date:\\'EEE\\' }}                                                                                          {{ task.name }}                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SchedulePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/select/select.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                ./select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                options\n                            \n                            \n                                    Optional\n                                optionsMap\n                            \n                            \n                                    Optional\n                                queryOptions\n                            \n                            \n                                selected$\n                            \n                            \n                                yet\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateOptions\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/select/select.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOptions\n                        \n                    \n                \n            \n            \n                \nupdateOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        optionsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        queryOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(OptionComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:77\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/select/select.component.ts:20\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, ContentChildren, Input, OnInit, QueryList } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Subject } from 'rxjs';\nimport { OptionComponent } from '../option/option.component';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n})\nexport class SelectComponent extends ControlAccessor implements AfterViewInit, OnInit {\n  @ContentChildren(OptionComponent) queryOptions?: QueryList;\n  options?: any[];\n  optionsMap?: Map = new Map();\n  @Input() floatingLabel: string = '';\n  yet: boolean = false;\n\n  selected$: Subject = new Subject();\n\n  get selected() {\n    return this.optionsMap?.get(this.control.value);\n  }\n\n  ngOnInit(): void {\n    this.control.valueChanges.subscribe((value) => {\n      console.log('Value changed to: ' + value);\n      this.optionsMap?.forEach((option, key) => {\n        const selected = key === value;\n        option.selected = selected;\n        if (selected) {\n          this.selected$.next(option);\n        }\n      });\n    });\n\n    this.selected$.subscribe((val) => {\n      console.log(val);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.queryOptions?.changes.subscribe((options) => {\n      console.log('updated options');\n      this.updateOptions();\n    });\n    this.updateOptions();\n  }\n\n  updateOptions() {\n    console.log(this.control.value);\n\n    this.yet = false;\n    this.options = this.queryOptions?.map((x) => {\n      const option = { value: x.value, viewValue: x.viewValue, icon: x.icon };\n\n      this.optionsMap!.set(x.value, option);\n      return option;\n    });\n    setTimeout(() => {\n      this.selected$.next(this.optionsMap?.get(this.control.value));\n      this.yet = true;\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ floatingLabel }}\n  \n    \n      \n      {{ selectedItem.viewValue }}\n    \n    \n      \n        \n        {{ option.viewValue }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ floatingLabel }}                  {{ selectedItem.viewValue }}                              {{ option.viewValue }}            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/services/sessions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/services/sessions.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/services/sessions.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/services/sessions.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserSession } from 'src/app/settings/interfaces/session.interface';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionsService {\n  constructor(private apiService: ApiService) {}\n\n  public list(): Observable {\n    return this.apiService.get(`/session`);\n  }\n\n  public delete(id: number) {\n    return this.apiService.delete(`/session/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsAccountPage.html":{"url":"components/SettingsAccountPage.html","title":"component - SettingsAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-account/settings-account.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-account-page\n            \n\n            \n                styleUrls\n                ./settings-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccountMailCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-account/settings-account.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccountMailCheck\n                        \n                    \n                \n            \n            \n                \ndeleteAccountMailCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', requiredValidator()),\n    name: new FormControl('', requiredValidator()),\n    surname: new FormControl('', requiredValidator()),\n    username: new FormControl('', requiredValidator()),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-account/settings-account.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AuthService } from '@auth/services/auth.service';\nimport { UserService } from '@auth/services/user.service';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-settings-account-page',\n  templateUrl: './settings-account.page.html',\n  styleUrls: ['./settings-account.page.scss'],\n})\nexport class SettingsAccountPage implements OnInit {\n  constructor(private userService: UserService, private authService: AuthService) {}\n\n  public form = new FormGroup({\n    email: new FormControl('', requiredValidator()),\n    name: new FormControl('', requiredValidator()),\n    surname: new FormControl('', requiredValidator()),\n    username: new FormControl('', requiredValidator()),\n  });\n\n  ngOnInit() {\n    this.userService.getMyself().subscribe((response) => {\n      this.form.patchValue(response);\n    });\n  }\n\n  submit() {\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.userService.update(this.form.value).subscribe(() => {});\n  }\n\n  resetPassword() {\n    this.authService.resetPassword(this.form.value.email).subscribe(() => {\n      this.authService.logout().subscribe();\n    });\n  }\n\n  deleteAccountMailCheck() {\n    this.authService.deleteAccount().subscribe(() => {\n      // dodac popup czy na pewno zgadzamy sie na usuniecie konta, jesli tak to infomracja ze zostal wyslany link na maila dezaktywujacy konto i ze ma mozliwosc jego przywrocenia do 7 dni\n      this.authService.logout().subscribe();\n    });\n  }\n}\n\n    \n\n    \n        Account\n\n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n    Update profile\n  \n\n  \n  \n    Change password\n    It's highly recommended to change the password every 30 days. It will increase your\n      account security.\n    \n      Change password\n    \n  \n\n  \n  \n    Delete account\n    Delete your account permanently. All not shared owned projects will also be deleted.\n      This action is reversible in period of 7 days - you need to log in to your account in this time to revert your\n      account deletion.\n    \n      Delete account\n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings-account.page.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n}\n\n.actions {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Account                                Update profile          Change password    It\\'s highly recommended to change the password every 30 days. It will increase your      account security.          Change password              Delete account    Delete your account permanently. All not shared owned projects will also be deleted.      This action is reversible in period of 7 days - you need to log in to your account in this time to revert your      account deletion.          Delete account      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsIntegrationsPage.html":{"url":"components/SettingsIntegrationsPage.html","title":"component - SettingsIntegrationsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsIntegrationsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-integrations\n            \n\n            \n                styleUrls\n                ./settings-integrations.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-integrations.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gitHubAccounts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                getConnectedProjects\n                            \n                            \n                                    Public\n                                loadGitHubIntegration\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConnectedProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConnectedProjects(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        gitHubAccounts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GitAccount } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { map, Observable, take } from 'rxjs';\n\ninterface GitAccountWithUsage {\n  account: GitAccount;\n  usage: Observable;\n}\n\n@Component({\n  selector: 'app-settings-integrations',\n  templateUrl: './settings-integrations.page.html',\n  styleUrls: ['./settings-integrations.page.scss'],\n})\nexport class SettingsIntegrationsPage implements OnInit {\n  public gitHubAccounts$!: Observable;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  ngOnInit() {\n    this.loadGitHubIntegration();\n  }\n\n  public loadGitHubIntegration(): void {\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\n      map((accounts) => {\n        return accounts.map((account) => {\n          return {\n            account,\n            usage: this.getConnectedProjects(account).pipe(take(1)),\n          };\n        });\n      }),\n    );\n  }\n\n  public disconnect(account: GitAccount): void {\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\n      window.open(link, '_blank');\n    });\n  }\n\n  public getConnectedProjects(account: GitAccount): Observable {\n    return this.gitIntegrationService\n      .getGitHubAccountConnectedProjects(account)\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(', ')));\n  }\n}\n\n    \n\n    \n        Integrations\n\n\n\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-integrations.page.scss\n                \n                .list {\n  > * {\n    display: block;\n    margin-top: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Integrations              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsIntegrationsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsLocalizationPage.html":{"url":"components/SettingsLocalizationPage.html","title":"component - SettingsLocalizationPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsLocalizationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-localization/settings-localization.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-localization-page\n            \n\n            \n                styleUrls\n                ./settings-localization.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-localization.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    language: new FormControl('', requiredValidator()),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      code: 'de-DE',\n      name: 'Deutsch',\n    },\n    {\n      code: 'en-GB',\n      name: 'English (British)',\n    },\n    {\n      code: 'es-ES',\n      name: 'Español',\n    },\n    {\n      code: 'it-IT',\n      name: 'Italiano',\n    },\n    {\n      code: 'pl-PL',\n      name: 'Polski',\n    },\n    {\n      code: 'en-US',\n      name: 'English (American)',\n    },\n    {\n      code: 'uk-UA',\n      name: 'Українська',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-settings-localization-page',\n  templateUrl: './settings-localization.page.html',\n  styleUrls: ['./settings-localization.page.scss'],\n})\nexport class SettingsLocalizationPage implements OnInit {\n  public form = new FormGroup({\n    language: new FormControl('', requiredValidator()),\n  });\n\n  languages = [\n    {\n      code: 'de-DE',\n      name: 'Deutsch',\n    },\n    {\n      code: 'en-GB',\n      name: 'English (British)',\n    },\n    {\n      code: 'es-ES',\n      name: 'Español',\n    },\n    {\n      code: 'it-IT',\n      name: 'Italiano',\n    },\n    {\n      code: 'pl-PL',\n      name: 'Polski',\n    },\n    {\n      code: 'en-US',\n      name: 'English (American)',\n    },\n    {\n      code: 'uk-UA',\n      name: 'Українська',\n    },\n  ];\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  changeLanguage() {\n    location.href = `https://workflow.adiantek.ovh/${this.form.value.language}/settings/localization`;\n  }\n\n  submit() {}\n}\n\n    \n\n    \n        Localization\n\n\n  \n  \n    {{ language.name }}\n  \n\n  \n  \n    Save settings\n  \n\n\n\n    \n\n    \n                \n                    ./settings-localization.page.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n}\n\n.actions {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Localization        {{ language.name }}          Save settings  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsLocalizationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_declarations\n\n\n\n\nIntegrationEntryComponent\n\nIntegrationEntryComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nIntegrationEntryComponent->SettingsModule\n\n\n\n\n\nListGroupComponent\n\nListGroupComponent\n\nSettingsModule -->\n\nListGroupComponent->SettingsModule\n\n\n\n\n\nSettingsAccountPage\n\nSettingsAccountPage\n\nSettingsModule -->\n\nSettingsAccountPage->SettingsModule\n\n\n\n\n\nSettingsIntegrationsPage\n\nSettingsIntegrationsPage\n\nSettingsModule -->\n\nSettingsIntegrationsPage->SettingsModule\n\n\n\n\n\nSettingsLocalizationPage\n\nSettingsLocalizationPage\n\nSettingsModule -->\n\nSettingsLocalizationPage->SettingsModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\nSettingsModule -->\n\nSettingsPage->SettingsModule\n\n\n\n\n\nSettingsSessionsPage\n\nSettingsSessionsPage\n\nSettingsModule -->\n\nSettingsSessionsPage->SettingsModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nSettingsModule -->\n\nMainModule->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IntegrationEntryComponent\n                        \n                        \n                            ListGroupComponent\n                        \n                        \n                            SettingsAccountPage\n                        \n                        \n                            SettingsIntegrationsPage\n                        \n                        \n                            SettingsLocalizationPage\n                        \n                        \n                            SettingsPage\n                        \n                        \n                            SettingsSessionsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '@main/_main.module';\nimport { SettingsPage } from 'src/app/settings/pages/settings/settings.page';\nimport { IntegrationEntryComponent } from './components/integration-entry/integration-entry.component';\nimport { ListGroupComponent } from './components/list-group/list-group.component';\nimport { SettingsAccountPage } from './pages/settings-account/settings-account.page';\nimport { SettingsIntegrationsPage } from './pages/settings-integrations/settings-integrations.page';\nimport { SettingsLocalizationPage } from './pages/settings-localization/settings-localization.page';\nimport { SettingsSessionsPage } from './pages/settings-sessions/settings-sessions.page';\nimport { SettingsRoutingModule } from './settings.routing';\n\n@NgModule({\n  imports: [CommonModule, MainModule, ReactiveFormsModule, SettingsRoutingModule],\n  declarations: [\n    SettingsPage,\n    SettingsLocalizationPage,\n    SettingsAccountPage,\n    SettingsIntegrationsPage,\n    SettingsSessionsPage,\n    ListGroupComponent,\n    IntegrationEntryComponent,\n  ],\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings/settings.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-page\n            \n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAddressCard\n                            \n                            \n                                faCircleNodes\n                            \n                            \n                                faGlobe\n                            \n                            \n                                faUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings/settings.page.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings/settings.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAddressCard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAddressCard\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCircleNodes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCircleNodes\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGlobe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGlobe\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faUser\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { faAddressCard, faCircleNodes, faGlobe, faUser } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-settings-page',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  faUser = faUser;\n  faGlobe = faGlobe;\n  faCircleNodes = faCircleNodes;\n  faAddressCard = faAddressCard;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n  \n  \n    \n\n      \n      \n        \n          \n          Account\n        \n      \n\n      \n      \n        \n          \n          Localization\n        \n      \n\n      \n      \n        \n          \n          Integrations\n        \n      \n\n      \n      \n        \n          \n          Sessions\n        \n      \n\n    \n  \n\n  \n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                @import '../../../../styles/typography';\n\nsection {\n  display: flex;\n  justify-content: center;\n}\n\n.sidebar {\n  width: 315px;\n  height: 100%;\n  padding: 40px;\n\n  a {\n    @include typo-body;\n\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: 8px 10px;\n    margin-bottom: 0.35rem;\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n    transition: background-color 0.2s ease-in-out;\n\n    app-icon {\n      margin-right: 1rem;\n    }\n\n    &:hover {\n      background-color: var(--color-secondary-500);\n    }\n\n    &.active {\n      background-color: var(--color-secondary-500);\n\n      &::before {\n        position: absolute;\n        top: 10%;\n        left: -10px;\n        width: 4px;\n        height: 80%;\n        background-color: var(--color-primary-700);\n        border-radius: var(--border-radius);\n        content: '';\n      }\n    }\n  }\n}\n\n.content {\n  width: 100%;\n  max-width: 800px;\n  padding: 40px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Account                                                      Localization                                                      Integrations                                                      Sessions                              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsAccountPage } from './pages/settings-account/settings-account.page';\nimport { SettingsIntegrationsPage } from './pages/settings-integrations/settings-integrations.page';\nimport { SettingsLocalizationPage } from './pages/settings-localization/settings-localization.page';\nimport { SettingsSessionsPage } from './pages/settings-sessions/settings-sessions.page';\nimport { SettingsPage } from './pages/settings/settings.page';\n\n/**\n * Messages routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage,\n    children: [\n      {\n        path: 'account',\n        component: SettingsAccountPage,\n      },\n      {\n        path: 'localization',\n        component: SettingsLocalizationPage,\n      },\n      {\n        path: 'integrations',\n        component: SettingsIntegrationsPage,\n      },\n      {\n        path: 'sessions',\n        component: SettingsSessionsPage,\n      },\n    ],\n  },\n];\n\n/**\n * Messages routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsSessionsPage.html":{"url":"components/SettingsSessionsPage.html","title":"component - SettingsSessionsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsSessionsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-sessions/settings-sessions.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-sessions\n            \n\n            \n                styleUrls\n                ./settings-sessions.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-sessions.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sessionsList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agentType\n                            \n                            \n                                changeDate\n                            \n                            \n                                deleteSession\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agentType\n                        \n                    \n                \n            \n            \n                \nagentType(type: string, agent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    agent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSession\n                        \n                    \n                \n            \n            \n                \ndeleteSession(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sessionsList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\nimport * as UAParser from 'ua-parser-js';\nimport { UserSession } from '../../interfaces/session.interface';\nimport { SessionsService } from '../../services/sessions.service';\n\n@Component({\n  selector: 'app-settings-sessions',\n  templateUrl: './settings-sessions.page.html',\n  styleUrls: ['./settings-sessions.page.scss'],\n})\nexport class SettingsSessionsPage implements OnInit {\n  public sessionsList$!: Observable;\n\n  constructor(private sessionService: SessionsService) {}\n  ngOnInit() {\n    this.sessionsList$ = this.sessionService.list();\n  }\n\n  changeDate(date: number) {\n    let currentDate = dayjs();\n    let sessionDate = dayjs(date);\n\n    if (currentDate.year() != sessionDate.year()) {\n      if (currentDate.diff(sessionDate, 'month') > 0) {\n        return sessionDate.format('LL');\n      } else {\n        return sessionDate.format('LLL');\n      }\n    } else {\n      return sessionDate.format('MMMM D, h:mm A');\n    }\n  }\n\n  agentType(type: string, agent: string) {\n    let uaParser = new UAParser(agent);\n    let osName = uaParser.getOS().name || 'Unknown system';\n    let browser = uaParser.getBrowser().name || 'Unknown browser';\n    if (type == 'os') {\n      return osName;\n    }\n    if (type == 'browser') {\n      return browser;\n    }\n    return osName + ', ' + browser;\n  }\n\n  deleteSession(id: number) {\n    this.sessionService.delete(id).subscribe();\n  }\n}\n\n    \n\n    \n        Sessions\n\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                {{ agentType(\"os\", session.userAgent) }},\n              \n              \n                {{ agentType(\"browser\", session.userAgent) }}\n              \n            \n            \n              \n                {{ session.geoip.city }}, {{ session.geoip.country }}\n              \n              \n                {{ changeDate(session.lastUsed) }}\n              \n              \n                Active now\n              \n            \n          \n          \n            Log out\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-sessions.page.scss\n                \n                .list {\n  > * {\n    display: block;\n    margin-top: 1rem;\n  }\n}\n\n.sessions-entry {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n  border: 1px solid var(--color-secondary-300);\n  border-radius: var(--border-radius);\n\n  .labels {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    margin-bottom: 0;\n\n    .agent,\n    .local {\n      display: flex;\n    }\n\n    mark {\n      display: block;\n      margin-left: 0.5rem;\n      background-color: transparent;\n      color: var(--color-purple-300);\n    }\n\n    .description {\n      display: block;\n      padding-left: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n}\n\n.actions {\n  flex-grow: 1;\n  flex-shrink: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sessions                                                                          {{ agentType(\"os\", session.userAgent) }},                                            {{ agentType(\"browser\", session.userAgent) }}                                                                    {{ session.geoip.city }}, {{ session.geoip.country }}                                            {{ changeDate(session.lastUsed) }}                                            Active now                                                          Log out                              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsSessionsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarNavigationComponent.html":{"url":"components/SidebarNavigationComponent.html","title":"component - SidebarNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar-navigation\n            \n\n            \n                styleUrls\n                ./sidebar-navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar-navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                workspaceList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWorkspace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createWorkspace\n                        \n                    \n                \n            \n            \n                \ncreateWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        workspaceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Workspace } from 'src/app/dashboard/interfaces/workspace.interface';\nimport { WorkspaceService } from 'src/app/dashboard/services/workspace.service';\n\n@Component({\n  selector: 'app-sidebar-navigation',\n  templateUrl: './sidebar-navigation.component.html',\n  styleUrls: ['./sidebar-navigation.component.scss'],\n})\nexport class SidebarNavigationComponent {\n  @Input()\n  public icon!: String;\n\n  public workspaceList?: Observable;\n\n  createWorkspace() {\n    this.router.navigate(['/', 'create']);\n  }\n\n  constructor(private workspaceService: WorkspaceService, private router: Router) {\n    this.workspaceList = this.workspaceService.list();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\nDashboard\n\n  Workspaces\n  \n    \n      \n        {{workspace.name}}\n      \n    \n  \n  \n    \n      Create workspace\n    \n    \n      Manage workspaces\n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar-navigation.component.scss\n                \n                :host {\n  display: flex;\n  width: 250px;\n  height: 100%;\n  flex-direction: column;\n  flex-shrink: 0;\n  background-color: var(--color-secondary-800);\n}\n\n.logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin: 10px 20px 0;\n  background-image: url('../../../../assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n  transform-origin: 50% 25%;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Dashboard  Workspaces                    {{workspace.name}}                        Create workspace              Manage workspaces      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SinglePersonSchedule.html":{"url":"interfaces/SinglePersonSchedule.html","title":"interface - SinglePersonSchedule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SinglePersonSchedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/schedule.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tasks\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '@auth/interfaces/user.interface';\n\nexport type Schedule = SinglePersonSchedule[];\n\nexport interface SinglePersonSchedule {\n  user: UserData;\n  tasks: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/snackbar/snackbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationName\n                            \n                            \n                                faClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setAnimationName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                duration\n                            \n                            \n                                message\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.animation-name\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    colorStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 'gray'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        duration\n                    \n                \n                \n                    \n                        Default value : 4000\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uid\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:15\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.animation-name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnimationName\n                        \n                    \n                \n            \n            \n                \nsetAnimationName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        animationName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.animation-name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faClose\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faClose\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        colorStyle\n                    \n                \n\n                \n                    \n                        getcolorStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { faClose } from '@fortawesome/free-solid-svg-icons';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { SnackbarData } from './snackbar.interface';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss'],\n})\nexport class SnackbarComponent implements OnInit {\n  faClose = faClose;\n\n  @Input()\n  public uid!: string;\n\n  @Input()\n  public message!: SnackbarData['message'];\n\n  @Input()\n  public duration: SnackbarData['duration'] = 4000;\n\n  @Input()\n  public color: SnackbarData['color'] = 'gray';\n\n  @HostBinding('style.animation-name')\n  public animationName: string = 'open';\n\n  public get colorStyle(): string {\n    switch (this.color) {\n      case 'gray':\n        return 'var(--color-gray-500)';\n      case 'green':\n        return '#00b300';\n    }\n  }\n\n  constructor(private snackbarService: SnackbarService) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.close();\n    }, this.duration);\n  }\n\n  close() {\n    this.setAnimationName('close');\n    setTimeout(() => {\n      this.snackbarService.close(this.uid);\n    }, 1000);\n  }\n\n  setAnimationName(name: string) {\n    this.animationName = name;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ message }}\n  \n  \n\n\n    \n\n    \n                \n                    ./snackbar.component.scss\n                \n                :host {\n  display: block;\n  overflow: visible;\n  animation: open 1s ease-in-out forwards;\n}\n\n.content {\n  display: flex;\n  padding: 1rem;\n  border-radius: var(--border-radius);\n\n  .message {\n    margin-right: 0.75rem;\n    color: var(--color-text);\n  }\n\n  .close-button {\n    position: relative;\n    width: 24px;\n    height: 24px;\n    color: var(--color-text);\n    cursor: pointer;\n\n    &::before,\n    &::after {\n      position: absolute;\n      top: 0;\n      left: 50%;\n      display: block;\n      width: 1px;\n      height: 1rem;\n      margin-top: 0.25rem;\n      background-color: var(--color-text);\n      border-radius: 50%;\n      content: '';\n      transition: background-color 0.4s ease;\n    }\n\n    &::before {\n      transform: rotate(45deg);\n    }\n\n    &::after {\n      transform: rotate(-45deg);\n    }\n  }\n}\n\n@keyframes open {\n  from {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n}\n\n@keyframes close {\n  from {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n\n  to {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ message }}    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnackbarData.html":{"url":"interfaces/SnackbarData.html","title":"interface - SnackbarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnackbarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/components/snackbar/snackbar.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     \"gray\" | \"green\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"gray\" | \"green\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SnackbarData {\n  color: 'gray' | 'green';\n  message: string;\n  duration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarOutletComponent.html":{"url":"components/SnackbarOutletComponent.html","title":"component - SnackbarOutletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnackbarOutletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar-outlet\n            \n\n            \n                styleUrls\n                ./snackbar-outlet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snackbar-outlet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackbars$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trackSnackbarTuple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        trackSnackbarTuple\n                        \n                    \n                \n            \n            \n                \ntrackSnackbarTuple(_index: number, undefined: [string, SnackbarData])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                [string, SnackbarData]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackbars$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.snackbarService.snackbars$\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { SnackbarData } from '../snackbar/snackbar.interface';\n\n@Component({\n  selector: 'app-snackbar-outlet',\n  templateUrl: './snackbar-outlet.component.html',\n  styleUrls: ['./snackbar-outlet.component.scss'],\n})\nexport class SnackbarOutletComponent {\n  public snackbars$ = this.snackbarService.snackbars$;\n\n  constructor(private snackbarService: SnackbarService) {}\n\n  trackSnackbarTuple(_index: number, [uid, _]: [string, SnackbarData]) {\n    return uid;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./snackbar-outlet.component.scss\n                \n                :host {\n  position: absolute;\n  z-index: 50;\n  top: 74px;\n  right: 0;\n  display: flex;\n  overflow: hidden;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-right: 10px;\n}\n\napp-snackbar:not(:last-child) {\n  margin-bottom: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarOutletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/snackbar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackbars$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                closeAll\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/snackbar.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        show\n                        \n                    \n                \n            \n            \n                \n                    \n                    show(message: string, color: \"gray\" | \"green\", duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    color\n                                    \n                                            \"gray\" | \"green\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'gray'\n                                    \n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        4000\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackbars$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Map())\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/snackbar.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SnackbarData } from '@main/components/snackbar/snackbar.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { BehaviorSubject } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  constructor() {}\n\n  public snackbars$ = new BehaviorSubject>(new Map());\n\n  public show(message: string, color: 'gray' | 'green' = 'gray', duration: number = 4000) {\n    const data = { message, duration, color };\n    const uid = uuid();\n\n    const map = this.snackbars$.value;\n    map.set(uid, data);\n\n    this.snackbars$.next(map);\n  }\n\n  public close(uid: string) {\n    const map = this.snackbars$.value;\n    map.delete(uid);\n  }\n\n  public closeAll() {\n    this.snackbars$.next(new Map());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Status.html":{"url":"interfaces/Status.html","title":"interface - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/status.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Task status/column interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            begin\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            final\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        begin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        begin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status begin (used to determine if the task is in progress or not). If begin is true,\nthe work on the task does not started yet.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         color\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         color\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status color (used to display as the background of the labels)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        final\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        final:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status final (used to determine if the task is done or not)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status id (unique per database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status name (Header displayed in labels or on the top of the columns)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { color } from '../../_main/interfaces/color.interface';\nimport { Task } from './task.interface';\n\n/**\n * Task status/column interface\n */\nexport interface Status {\n  /**\n   * Status id (unique per database)\n   */\n  id: number;\n\n  /**\n   * Status name (Header displayed in labels or on the top of the columns)\n   */\n  name: string;\n\n  /**\n   * Status color (used to display as the background of the labels)\n   */\n  color: color;\n\n  /**\n   * Status final (used to determine if the task is done or not)\n   */\n  final: boolean;\n\n  /**\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\n   * the work on the task does not started yet.\n   */\n  begin: boolean;\n}\n\n/**\n * Status with task interface - status column with tasks\n */\nexport interface StatusWithTasks extends Status {\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StatusColorPipe.html":{"url":"pipes/StatusColorPipe.html","title":"pipe - StatusColorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StatusColorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/status-color.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        statusColor\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value:  | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/status-color.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                             | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '@tasks/interfaces/status.interface';\n\n@Pipe({\n  name: 'statusColor',\n})\nexport class StatusColorPipe implements PipeTransform {\n  transform(value: Status['name'] | undefined): any {\n    switch (value) {\n      case 'TO DO':\n      case 'To Do':\n        return '#4A5465';\n      case 'IN PROGRESS':\n      case 'In Progress':\n        return '#f39c12';\n      case 'DONE':\n      case 'Done':\n        return '#2ECC71';\n      default:\n        return '#4A5465';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusLabelComponent.html":{"url":"components/StatusLabelComponent.html","title":"component - StatusLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/status-label/status-label.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n            \n                selector\n                app-status-label\n            \n\n            \n                styleUrls\n                ./status-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isOpen$\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                overlay\n                            \n                            \n                                    Public\n                                statuses$\n                            \n                            \n                                statusMap\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                statuses\n                            \n                            \n                                statusId\n                            \n                            \n                                taskId\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    statuses\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statuses\n                    \n                \n                \n                    \n                        Type :         Status[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statusId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('overlay')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statuses$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        statuses\n                    \n                \n\n\n                \n                    \n                        setstatuses(statuses: Status[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            statuses\n                                                    \n                                                            \n                                                                            Status[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:42\n                                \n                            \n\n                \n                    \n                        setisOpen(val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { TaskService } from '@tasks/services/task.service';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport { BehaviorSubject, filter, fromEvent, take } from 'rxjs';\n\n@Component({\n  selector: 'app-status-label',\n  templateUrl: './status-label.component.html',\n  styleUrls: ['./status-label.component.scss'],\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\nexport class StatusLabelComponent extends ControlAccessor {\n  @Input() projectId!: number;\n  @Input() statusId!: number;\n  @Input() taskId?: number;\n  @Input() set statuses(statuses: Status[]) {\n    this.statuses$.next(statuses);\n    this.statusMap = statuses.reduce((acc, status) => {\n      acc.set(status.id, status);\n      return acc;\n    }, new Map());\n  }\n\n  statusMap = new Map();\n\n  constructor(public override ngControl: NgControl, private taskService: TaskService) {\n    super(ngControl);\n  }\n\n  @ViewChild('overlay') overlay!: ElementRef;\n\n  public statuses$ = new BehaviorSubject([]);\n  public readonly isOpen$ = new BehaviorSubject(false);\n\n  public set isOpen(val: boolean) {\n    this.isOpen$.next(val);\n  }\n\n  public get isOpen() {\n    return this.isOpen$.value;\n  }\n\n  public open() {\n    setTimeout(() => {\n      fromEvent(document, 'click')\n        .pipe(\n          take(1),\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\n        )\n        .subscribe(() => this.close());\n      this.isOpen$.next(true);\n    });\n  }\n\n  public close() {\n    this.isOpen$.next(false);\n  }\n\n  public toggle() {\n    if (this.isOpen) {\n      return this.close();\n    }\n    return this.open();\n  }\n\n  public select(status: Status) {\n    if (this.taskId && this.projectId)\n      this.taskService.changeStatus(status.id, this.taskId, this.projectId).subscribe(() => {\n        this.close();\n        location.reload();\n      });\n  }\n}\n\n    \n\n    \n        \n\n  {{ statusMap.get(statusId)?.name }}\n\n\n\n  \n    \n      {{ status.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./status-label.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  width: 100%;\n  padding: 0 1rem;\n  margin: 0 1rem;\n}\n\n.status {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  max-width: 250px;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-secondary-400);\n  border-radius: var(--border-radius);\n  text-transform: uppercase;\n}\n\n.statuses-overlay {\n  padding: 1rem;\n  padding: 0.5rem 0;\n  background-color: var(--color-secondary-500);\n  border-radius: var(--border-radius);\n\n  li {\n    display: flex;\n    align-items: center;\n    padding: 0.5rem 1rem;\n    background-color: var(--color-secondary-500);\n    color: var(--color-text);\n    cursor: pointer;\n    transition: background-color 0.4s ease;\n\n    &:hover {\n      background-color: var(--color-secondary-400);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ statusMap.get(statusId)?.name }}            {{ status.name }}      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatusLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusService.html":{"url":"injectables/StatusService.html","title":"injectable - StatusService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/services/status.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                listWithTasks\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/services/status.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        board\n                        \n                    \n                \n            \n            \n                \n                    \n                    board(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:39\n                \n            \n\n\n            \n                \n                    Creates new status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the created status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:59\n                \n            \n\n\n            \n                \n                    Deletes status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(projectId: number, statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:29\n                \n            \n\n\n            \n                \n                    Get status information\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to get status\n\n                                    \n                                \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status id needed to get status information\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:19\n                \n            \n\n\n            \n                \n                    Get list of statuses\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable with list of statuses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        listWithTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    listWithTasks(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:49\n                \n            \n\n\n            \n                \n                    Updates status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the updated status\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Task } from '@tasks/interfaces/task.interface';\nimport { combineLatest, map, Observable } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Status, StatusWithTasks } from '../interfaces/status.interface';\nimport { TaskService } from './task.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StatusService {\n  constructor(private apiService: ApiService, private taskService: TaskService) {}\n\n  /**\n   * Get list of statuses\n   * @param projectId Project id needed to create status\n   * @returns Request observable with list of statuses\n   */\n  public list(projectId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/status/`);\n  }\n\n  /**\n   * Get status information\n   * @param statusId Status id needed to get status information\n   * @param projectId Project id needed to get status\n   * @returns Request observable with the status\n   */\n  public get(projectId: number, statusId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/status/${statusId}`);\n  }\n\n  /**\n   * Creates new status\n   * @param status Status to create\n   * @param projectId Project id needed to create status\n   * @returns Request observable with the created status\n   */\n  public create(projectId: number, status: Status): Observable {\n    return this.apiService.post(`/project/${projectId}/status/`, { body: status });\n  }\n\n  /**\n   * Updates status\n   * @param status Status to update\n   * @param projectId Project id needed to create status\n   * @returns Request observable with the updated status\n   */\n  public update(projectId: number, status: Status): Observable {\n    return this.apiService.put(`/project/${projectId}/status/${status.id}`, { body: status });\n  }\n\n  /**\n   * Deletes status\n   * @param status Status id to delete\n   * @param projectId Project id needed to create status\n   * @returns Request observable\n   */\n  public delete(projectId: number, status: Status): Observable {\n    return this.apiService.delete(`/project/${projectId}/status/${status.id}`);\n  }\n\n  public listWithTasks(projectId: number): Observable {\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\n      map(([statuses, tasks]) => {\n        statuses.forEach((status) => {\n          (status as StatusWithTasks).tasks = tasks.filter((task) => task.statusId === status.id);\n        });\n        return statuses as StatusWithTasks[];\n      }),\n    );\n  }\n\n  public board(projectId: number): Observable {\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\n      map(([statuses, tasks]) => {\n        const board: [Task | string, StatusWithTasks[]][] = [];\n        const OTHER = ['OTHER', statuses as StatusWithTasks[]] as [string, StatusWithTasks[]];\n\n        for (const task of tasks) {\n          if (task.subTasks?.length) {\n            const statusesWithSubtasks = statuses.map((status) => ({\n              ...status,\n              tasks: task.subTasks?.filter((subtask) => subtask.statusId === status.id) || [],\n            }));\n            board.push([task, statusesWithSubtasks]);\n          } else {\n            let status = OTHER[1].find((status) => status.id === task.statusId)!;\n            if (!status.tasks) {\n              status.tasks = [];\n            }\n            status.tasks.push(task);\n          }\n        }\n\n        board.push(OTHER);\n\n        console.log(board);\n        return board;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StatusWithTasks.html":{"url":"interfaces/StatusWithTasks.html","title":"interface - StatusWithTasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StatusWithTasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/status.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Status with task interface - status column with tasks\n\n            \n\n            \n                Extends\n            \n            \n                        Status\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tasks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { color } from '../../_main/interfaces/color.interface';\nimport { Task } from './task.interface';\n\n/**\n * Task status/column interface\n */\nexport interface Status {\n  /**\n   * Status id (unique per database)\n   */\n  id: number;\n\n  /**\n   * Status name (Header displayed in labels or on the top of the columns)\n   */\n  name: string;\n\n  /**\n   * Status color (used to display as the background of the labels)\n   */\n  color: color;\n\n  /**\n   * Status final (used to determine if the task is done or not)\n   */\n  final: boolean;\n\n  /**\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\n   * the work on the task does not started yet.\n   */\n  begin: boolean;\n}\n\n/**\n * Status with task interface - status column with tasks\n */\nexport interface StatusWithTasks extends Status {\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/task.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Project task interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            assigneeId\n                                        \n                                \n                                \n                                        \n                                            deadline\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            estimatedDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mergedPullList\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parentTaskId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pull\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subTasks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assigneeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assigneeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional user id who is assigned to task\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deadline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deadline:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task deadline to be completed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estimatedDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estimatedDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task estimated date to work on it\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task id (unique per project)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional link to the GitHub issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mergedPullList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mergedPullList:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional merged pull requests list\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentTaskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentTaskId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Parent task id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pull\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pull:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional link to the GitHub pull request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Status id (unique per database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subTasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of subtasks\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\n\n/**\n * Project task interface\n */\nexport interface Task {\n  /**\n   * Task id (unique per project)\n   */\n  id: number;\n\n  /**\n   * Task name\n   */\n  name: string;\n\n  /**\n   * Task description\n   */\n  description: string;\n\n  /**\n   * Task deadline to be completed\n   */\n  deadline: Date;\n\n  /**\n   * Task estimated date to work on it\n   */\n  estimatedDate: Date;\n\n  /**\n   * Status id (unique per database)\n   */\n  statusId?: number;\n\n  /**\n   * Parent task id\n   */\n  parentTaskId?: number;\n\n  /**\n   * List of subtasks\n   */\n  subTasks?: Task[];\n\n  /**\n   * Optional link to the GitHub issue\n   */\n  issue?: string;\n\n  /**\n   * Optional link to the GitHub pull request\n   */\n  pull?: string;\n\n  /**\n   * Optional merged pull requests list\n   */\n  mergedPullList?: String[];\n\n  /**\n   * Optional user id who is assigned to task\n   */\n  assigneeId?: number;\n}\n\n/**\n * Extended project task interface\n */\nexport interface TaskWithAdditionalData extends Omit {\n  /**\n   * Project identifier\n   */\n  projectId: number;\n\n  /**\n   * Workspace identifier\n   */\n  workspaceId: string;\n\n  /**\n   * Boolean to determine if task is connected to GitHub issue\n   */\n  connectWithIssueOnGitHub: boolean;\n\n  /**\n   * Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n   */\n  issueAttachGithub: boolean;\n\n  /**\n   * Boolean to determine if task is connected to GitHub pull request\n   */\n  connectWithPullRequestOnGitHub: boolean;\n\n  /**\n   * GitHub pull to which the task is connected to\n   */\n  pull: GitPull;\n\n  /**\n   * GitHub issue to which the task is connected to\n   */\n  issue: GitIssue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDialog.html":{"url":"components/TaskDialog.html","title":"component - TaskDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/dialogs/task/task.dialog.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-dialog\n            \n\n            \n                styleUrls\n                ./task.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./task.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                isGitHubIntegrationAvailable\n                            \n                            \n                                    Public\n                                issueList$\n                            \n                            \n                                    Public\n                                projectList$\n                            \n                            \n                                    Public\n                                pullList$\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                subTaskTypes\n                            \n                            \n                                TaskDialogVariant\n                            \n                            \n                                    Public\n                                taskPriorities\n                            \n                            \n                                    Public\n                                taskTypes\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                clearGitHubIntegrationFields\n                            \n                            \n                                confirm\n                            \n                            \n                                loadParamsFromUrl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onProjectIdChange\n                            \n                            \n                                onWorkspaceIdChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: TaskDialogData, dialogRef: MatDialogRef, statusService: StatusService, workspaceService: WorkspaceService, gitIntegrationService: GitIntegrationService, routerExtensions: RouterExtensionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        TaskDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerExtensions\n                                                  \n                                                        \n                                                                        RouterExtensionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearGitHubIntegrationFields\n                        \n                    \n                \n            \n            \n                \nclearGitHubIntegrationFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadParamsFromUrl\n                        \n                    \n                \n            \n            \n                \nloadParamsFromUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onProjectIdChange\n                        \n                    \n                \n            \n            \n                \nonProjectIdChange(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWorkspaceIdChange\n                        \n                    \n                \n            \n            \n                \nonWorkspaceIdChange(workspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isGitHubIntegrationAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pullList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subTaskTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Enum.entries(SubTaskType)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TaskDialogVariant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TaskDialogVariant\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskPriorities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(TaskPriority)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Enum.entries(TaskType)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { Enum } from '@main/classes/enum.class';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { TaskPriority } from '@tasks/enums/task-priority.enum';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\nimport { Task } from '../../interfaces/task.interface';\n\nexport enum TaskDialogVariant {\n  CREATE = 'create',\n  EDIT = 'edit',\n}\n\nexport interface TaskDialogData {\n  workspaceId: number;\n  projectId?: number;\n  variant: TaskDialogVariant;\n  task?: Partial;\n  subtask?: boolean;\n}\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task.dialog.html',\n  styleUrls: ['./task.dialog.scss'],\n})\nexport class TaskDialog implements OnInit {\n  TaskDialogVariant = TaskDialogVariant;\n\n  public taskTypes = Enum.entries(TaskType);\n  public subTaskTypes = Enum.entries(SubTaskType);\n  public taskPriorities = Object.values(TaskPriority);\n\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n  public projectList$: Observable = new BehaviorSubject([]);\n  public issueList$!: Observable;\n  public pullList$!: Observable;\n\n  public isGitHubIntegrationAvailable: boolean = false;\n\n  public form = new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\n    private dialogRef: MatDialogRef,\n    private statusService: StatusService,\n    private workspaceService: WorkspaceService,\n    private gitIntegrationService: GitIntegrationService,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId, task } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n    if (task) this.form.patchValue(task);\n\n    this.workspaceList$ = this.workspaceService.list();\n\n    this.form.get('workspaceId')?.valueChanges.subscribe(this.onWorkspaceIdChange.bind(this));\n    this.form.get('projectId')?.valueChanges.subscribe(this.onProjectIdChange.bind(this));\n\n    if (workspaceId) {\n      this.onWorkspaceIdChange(workspaceId);\n    }\n\n    if (projectId) {\n      this.onProjectIdChange(projectId);\n    }\n  }\n\n  onWorkspaceIdChange(workspaceId: number) {\n    this.projectList$ = this.projectList$ = this.workspaceService\n      .get(workspaceId)\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\n  }\n\n  onProjectIdChange(projectId: number) {\n    this.statusList$ = this.statusService.list(projectId);\n    this.clearGitHubIntegrationFields();\n\n    this.statusList$.subscribe((statuses) => {\n      const statusId = statuses.find((status) => status.begin)?.id;\n\n      if (!statusId) return;\n\n      this.form.patchValue({ statusId });\n    });\n\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\n      this.isGitHubIntegrationAvailable = value;\n\n      if (this.isGitHubIntegrationAvailable) {\n        this.issueList$ = this.gitIntegrationService.gitHubIssueList(projectId);\n        this.pullList$ = this.gitIntegrationService.gitHubPullList(projectId);\n      } else {\n        this.issueList$ = new BehaviorSubject([]);\n        this.pullList$ = new BehaviorSubject([]);\n      }\n    });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  clearGitHubIntegrationFields() {\n    this.form.patchValue({\n      issueNumberGitHub: null,\n      issueAttachGithub: false,\n      connectWithIssueOnGitHub: false,\n    });\n  }\n\n  confirm() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    if (formValues.connectWithIssueOnGitHub && !formValues.issueAttachGithub) {\n      formValues.createIssue = true;\n    } else {\n      formValues.createIssue = false;\n    }\n\n    console.log(formValues);\n\n    this.dialogRef.close(formValues);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Edit task: {{ data.task?.name }}\nCreate new task\nCreate new subtask\n\n  \n\n    \n    \n      {{ workspace.name }}\n      \n    \n\n    \n    \n      \n        {{project.name}}\n        \n      \n    \n\n    \n    \n      {{ type[0] | taskType\n        }}\n      \n    \n\n    \n    \n    \n\n    \n    \n\n    \n    \n      {{ status.name }}\n      \n    \n\n    \n    \n      {{\n        priority | taskPriority }}\n    \n\n    \n    \n    \n\n    \n    \n    \n\n    \n    Create or attach\n      GitHub issue simultaneously\n\n    \n      \n        Create\n        Attach\n      \n\n      \n        {{issue.title}}\n      \n    \n\n    \n    \n      Connect with GitHub pull request\n    \n\n    \n      \n        {{pullRequest.title}}\n        \n      \n    \n\n  \n\n\n  Cancel\n  Create\n  \n  Save changes\n  \n\n\n    \n\n    \n                \n                    ./task.dialog.scss\n                \n                form {\n  > * {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Edit task: {{ data.task?.name }}Create new taskCreate new subtask                {{ workspace.name }}                                {{project.name}}                                {{ type[0] | taskType        }}                                            {{ status.name }}                        {{        priority | taskPriority }}                                    Create or attach      GitHub issue simultaneously                  Create        Attach                    {{issue.title}}                        Connect with GitHub pull request                      {{pullRequest.title}}                      Cancel  Create    Save changes  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskDialogData.html":{"url":"interfaces/TaskDialogData.html","title":"interface - TaskDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/dialogs/task/task.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subtask\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task\n                                        \n                                \n                                \n                                        \n                                            variant\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtask\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtask:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         TaskDialogVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TaskDialogVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { Enum } from '@main/classes/enum.class';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { TaskPriority } from '@tasks/enums/task-priority.enum';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\nimport { Task } from '../../interfaces/task.interface';\n\nexport enum TaskDialogVariant {\n  CREATE = 'create',\n  EDIT = 'edit',\n}\n\nexport interface TaskDialogData {\n  workspaceId: number;\n  projectId?: number;\n  variant: TaskDialogVariant;\n  task?: Partial;\n  subtask?: boolean;\n}\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task.dialog.html',\n  styleUrls: ['./task.dialog.scss'],\n})\nexport class TaskDialog implements OnInit {\n  TaskDialogVariant = TaskDialogVariant;\n\n  public taskTypes = Enum.entries(TaskType);\n  public subTaskTypes = Enum.entries(SubTaskType);\n  public taskPriorities = Object.values(TaskPriority);\n\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n  public projectList$: Observable = new BehaviorSubject([]);\n  public issueList$!: Observable;\n  public pullList$!: Observable;\n\n  public isGitHubIntegrationAvailable: boolean = false;\n\n  public form = new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\n    private dialogRef: MatDialogRef,\n    private statusService: StatusService,\n    private workspaceService: WorkspaceService,\n    private gitIntegrationService: GitIntegrationService,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId, task } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n    if (task) this.form.patchValue(task);\n\n    this.workspaceList$ = this.workspaceService.list();\n\n    this.form.get('workspaceId')?.valueChanges.subscribe(this.onWorkspaceIdChange.bind(this));\n    this.form.get('projectId')?.valueChanges.subscribe(this.onProjectIdChange.bind(this));\n\n    if (workspaceId) {\n      this.onWorkspaceIdChange(workspaceId);\n    }\n\n    if (projectId) {\n      this.onProjectIdChange(projectId);\n    }\n  }\n\n  onWorkspaceIdChange(workspaceId: number) {\n    this.projectList$ = this.projectList$ = this.workspaceService\n      .get(workspaceId)\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\n  }\n\n  onProjectIdChange(projectId: number) {\n    this.statusList$ = this.statusService.list(projectId);\n    this.clearGitHubIntegrationFields();\n\n    this.statusList$.subscribe((statuses) => {\n      const statusId = statuses.find((status) => status.begin)?.id;\n\n      if (!statusId) return;\n\n      this.form.patchValue({ statusId });\n    });\n\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\n      this.isGitHubIntegrationAvailable = value;\n\n      if (this.isGitHubIntegrationAvailable) {\n        this.issueList$ = this.gitIntegrationService.gitHubIssueList(projectId);\n        this.pullList$ = this.gitIntegrationService.gitHubPullList(projectId);\n      } else {\n        this.issueList$ = new BehaviorSubject([]);\n        this.pullList$ = new BehaviorSubject([]);\n      }\n    });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  clearGitHubIntegrationFields() {\n    this.form.patchValue({\n      issueNumberGitHub: null,\n      issueAttachGithub: false,\n      connectWithIssueOnGitHub: false,\n    });\n  }\n\n  confirm() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    if (formValues.connectWithIssueOnGitHub && !formValues.issueAttachGithub) {\n      formValues.createIssue = true;\n    } else {\n      formValues.createIssue = false;\n    }\n\n    console.log(formValues);\n\n    this.dialogRef.close(formValues);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListPage.html":{"url":"components/TaskListPage.html","title":"component - TaskListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/task-list/task-list.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n            \n                styleUrls\n                ./task-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assigneeControl\n                            \n                            \n                                expandedSubtasks\n                            \n                            \n                                faCheck\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Public\n                                filtersControl\n                            \n                            \n                                isSubtasksRow\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                statusList\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                taskList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                createSubtask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                getStatus\n                            \n                            \n                                    Public\n                                getSubtasksContainerHeight\n                            \n                            \n                                initAssigneeChanging\n                            \n                            \n                                populateSubtasks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, taskService: TaskService, statusService: StatusService, projectService: ProjectService, dialogService: DialogService, memberService: MemberService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date?: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:123\n                \n            \n\n\n            \n                \n                    TODO: Move this method to service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSubtasksContainerHeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubtasksContainerHeight(taskId: number, element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initAssigneeChanging\n                        \n                    \n                \n            \n            \n                \ninitAssigneeChanging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populateSubtasks\n                        \n                    \n                \n            \n            \n                \npopulateSubtasks(taskList: Task[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        assigneeControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandedSubtasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ESet()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filtersControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubtasksRow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '@auth/services/user.service';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport {\n  faCheck,\n  faChevronRight,\n  faCodeCommit,\n  faCodePullRequest,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { ESet } from '@main/classes/e-set.class';\nimport { Filters } from '@main/classes/filters.class';\nimport { Filter } from '@main/interfaces/filters.interface';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskDialog, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Task } from '@tasks/interfaces/task.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { map, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.page.html',\n  styleUrls: ['./task-list.page.scss'],\n})\nexport class TaskListPage {\n  faPlus = faPlus;\n  faChevronRight = faChevronRight;\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  public projectId!: number;\n\n  public taskList$!: Observable;\n  public statusList$!: Observable;\n  public project$!: Observable;\n  public members$!: Observable>;\n  public assigneeControl = new FormControl(null);\n\n  public statusList: Status[] = [];\n\n  public filters: Filter[] = [];\n  public filtersControl = new FormControl();\n\n  isSubtasksRow = (i: number, row: Object) => row.hasOwnProperty('withSubtasks');\n  expandedSubtasks = new ESet();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private taskService: TaskService,\n    private statusService: StatusService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n    private userService: UserService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.projectId = projectId;\n    this.project$ = this.projectService.get(projectId);\n\n    /**\n     * TODO: Use method from service\n     */\n    this.members$ = this.memberService.list(projectId).pipe(\n      map((members) =>\n        members.reduce((acc: Map, member: ProjectMember) => {\n          acc.set(member.user.id, member);\n          return acc;\n        }, new Map()),\n      ),\n    );\n    this.taskList$ = this.taskService.list(projectId);\n    this.statusList$ = this.statusService.list(projectId);\n    this.statusList$.subscribe((list) => {\n      this.statusList = list;\n    });\n    this.userService.getMyself().subscribe((user) => {\n      this.filters.push(Filters.ONLY_MY_TASKS(user.id));\n    });\n\n    this.filtersControl.valueChanges.subscribe((filters) => {\n      this.taskList$ = this.taskService.list(projectId, filters);\n    });\n  }\n\n  getStatus(statusId: number) {\n    return this.statusList.find((status) => status.id === statusId)?.name;\n  }\n\n  changeDate(date?: Date) {\n    if (!date) return '-';\n    let sessionDate = dayjs(date);\n    return sessionDate.format('YYYY-MM-DD, hh:mm A');\n  }\n\n  populateSubtasks(taskList: Task[]) {\n    const populatedTasks = [];\n    const tasks = taskList.filter((task) => !task.parentTaskId);\n\n    for (const task of tasks) {\n      populatedTasks.push(task);\n\n      if (task.subTasks && task.subTasks.length) {\n        populatedTasks.push({ ...task, withSubtasks: true });\n      }\n    }\n\n    return populatedTasks;\n  }\n\n  /**\n   * TODO: Move this method to service\n   */\n  createSubtask(task: Task) {\n    this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: this.projectId,\n        subtask: true,\n        task: {\n          parentTaskId: task.id,\n        },\n      })\n      .afterClosed()\n      .subscribe((task) => {\n        if (!task) return;\n\n        this.taskService.create(this.projectId, task).subscribe(() => {\n          location.reload();\n        });\n      });\n  }\n\n  editTask(task: Task) {\n    this.taskService.openEditTaskDialog(this.projectId, task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  deleteTask(task: Task) {\n    this.taskService.deleteWithConfirmation(this.projectId, task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  initAssigneeChanging() {\n    this.assigneeControl.valueChanges.subscribe((assignee) => {});\n  }\n\n  public getSubtasksContainerHeight(taskId: number, element: HTMLElement) {\n    return `${Number(this.expandedSubtasks.has(taskId)) * element.scrollHeight}px`;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n  \n    Title\n    Status\n    Assignee\n    Deadline\n    \n      \n    \n  \n\n  \n  \n    \n\n      \n      \n        \n          \n          #{{ task.id }}\n          {{ task.name }}\n          \n            \n          \n          \n            \n          \n          \n            \n            \n          \n        \n      \n\n      \n      \n        \n        \n      \n\n      \n      \n        \n        \n      \n\n      \n      {{changeDate(task.deadline)}}\n\n      \n      \n        \n          \n        \n        \n          \n            Edit task\n          \n          \n            Create subtask\n          \n          \n            Delete task\n          \n        \n      \n    \n    \n      \n\n        \n        \n          \n            #{{ subtask.id }}\n            {{ subtask.name }}\n            \n              \n            \n            \n              \n            \n            \n              \n              \n            \n          \n        \n\n        \n        \n          \n        \n\n        \n        \n          \n          \n        \n\n        \n        {{changeDate(subtask.deadline)}}\n\n        \n        \n          \n            \n          \n          \n            \n              Edit task\n            \n            \n              Create subtask\n            \n            \n              Delete task\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./task-list.page.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  padding: 2rem;\n}\n\n.table {\n  width: 100%;\n  padding-left: 10px;\n}\n\n.table .row .cell .status {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  max-width: 250px;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  padding: 0 1rem;\n  margin: 0 1rem;\n  background-color: var(--color-secondary-400);\n  border-radius: var(--border-radius);\n}\n\n.task-title,\n.subtask-title {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  padding-left: 0.5rem;\n\n  .task-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .task-property {\n    display: flex;\n    margin-left: 1rem;\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.2s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .check {\n      margin-left: 5px;\n      color: #2ecc71;\n    }\n  }\n\n  &>app-icon {\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n}\n\n.subtasks {\n  position: relative;\n  overflow: hidden;\n  max-height: 0;\n  padding-left: 4rem;\n  transition: max-height 0.4s ease;\n\n  .subtask-title {\n    display: flex;\n  }\n\n  .subtask-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .row {\n    position: relative;\n\n    &::before,\n    &::after {\n      position: absolute;\n      top: 0;\n      left: -2.5rem;\n      display: block;\n      content: '';\n    }\n\n    &:last-child {\n      margin-bottom: 1rem;\n    }\n\n    &:not(:last-child)::before {\n      width: 2px;\n      height: calc(100% + 1rem);\n      background-color: var(--color-secondary-400);\n    }\n\n    &::after {\n      width: 29px;\n      height: 29px;\n      border: 2px solid var(--color-secondary-400);\n      border-top-width: 0;\n      border-right-width: 0;\n      border-bottom-left-radius: 50%;\n    }\n  }\n}\n\n.row {\n  &.expanded {\n    .task-title>app-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Title    Status    Assignee    Deadline                                                                #{{ task.id }}          {{ task.name }}                                                                                                                                                                                                          {{changeDate(task.deadline)}}                                                                    Edit task                                Create subtask                                Delete task                                                                            #{{ subtask.id }}            {{ subtask.name }}                                                                                                                                                                                                                                                {{changeDate(subtask.deadline)}}                                                                                    Edit task                                      Create subtask                                      Delete task                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskPriorityIconPipe.html":{"url":"pipes/TaskPriorityIconPipe.html","title":"pipe - TaskPriorityIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskPriorityIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-priority-icon.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskPriorityIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-priority-icon.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskPriorityIcon',\n})\nexport class TaskPriorityIconPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'lowest':\n        return 'cuPriorityLowest';\n      case 'low':\n        return 'cuPriorityLow';\n      case 'medium':\n        return 'cuPriorityMedium';\n      case 'high':\n        return 'cuPriorityHigh';\n      case 'highest':\n        return 'cuPriorityHighest';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskPriorityPipe.html":{"url":"pipes/TaskPriorityPipe.html","title":"pipe - TaskPriorityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskPriorityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-priority.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskPriority\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-priority.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskPriority',\n})\nexport class TaskPriorityPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'lowest':\n        return $localize`Lowest`;\n      case 'low':\n        return $localize`Low`;\n      case 'medium':\n        return $localize`Medium`;\n      case 'high':\n        return $localize`High`;\n      case 'highest':\n        return $localize`Highest`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/services/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assign\n                            \n                            \n                                    Public\n                                changeStatus\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                deleteWithConfirmation\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                openCreateNewTaskDialog\n                            \n                            \n                                    Public\n                                openCreateSubtaskDialog\n                            \n                            \n                                    Public\n                                openEditTaskDialog\n                            \n                            \n                                    Public\n                                schedule\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, gitIntegrationService: GitIntegrationService, dialogService: DialogService, projectService: ProjectService, memberService: MemberService, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/services/task.service.ts:33\n                            \n                        \n\n                \n                    \n                            Default constructor with dependency injection.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ApiService\n\n                                                        \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        assign\n                        \n                    \n                \n            \n            \n                \n                    \n                    assign(userId: number | null, taskId: number, projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:269\n                \n            \n\n\n            \n                \n                    Assign task to specific user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to assign task to (if null, task will be unassigned)\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task to assign\n\n                                    \n                                \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id needed to assign task\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Updated task object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeStatus(statusId: number, taskId: number, projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:282\n                \n            \n\n\n            \n                \n                    Change status of specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        status to change task to\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task to change status of\n\n                                    \n                                \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id needed to change status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Updated task object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(projectId: number, task: TaskWithAdditionalData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:74\n                \n            \n\n\n            \n                \n                    Creates new task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                TaskWithAdditionalData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the created task\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:119\n                \n            \n\n\n            \n                \n                    Deletes task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to delete task\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteWithConfirmation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteWithConfirmation(projectId: number, task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:129\n                \n            \n\n\n            \n                \n                    Opens dialog to delete specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to delete task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number, filters?: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:53\n                \n            \n\n\n            \n                \n                    Get list of tasks\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to list all tasks\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with list of tasks\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateNewTaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateNewTaskDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:181\n                \n            \n\n\n            \n                \n                    Opens dialog to create new task\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        created task, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateSubtaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateSubtaskDialog(projectId: number, parentTask: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:204\n                \n            \n\n\n            \n                \n                    Opens dialog to create new subtask\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update subtask\n\n                                    \n                                \n                                \n                                    parentTask\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent task id to which attach subtask\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        created subtask, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openEditTaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openEditTaskDialog(projectId: number, task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:155\n                \n            \n\n\n            \n                \n                    Opens dialog to edit specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable with updated task, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        schedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    schedule(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:231\n                \n            \n\n\n            \n                \n                    Generates schedule object for specific project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id to generate schedule from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Schedule object with all tasks\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(projectId: number, task: TaskWithAdditionalData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:98\n                \n            \n\n\n            \n                \n                    Updates task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                TaskWithAdditionalData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the updated task\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/services/task.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport { AlertDialogVariant } from '@main/dialogs/alert/alert.dialog';\nimport { Filter } from '@main/interfaces/filters.interface';\nimport { applyFilters } from '@main/operators/apply-filters.operator';\nimport { DialogService } from '@main/services/dialog.service';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { Schedule } from '@tasks/interfaces/schedule.interface';\nimport * as dayjs from 'dayjs';\nimport {\n  combineLatest,\n  EMPTY,\n  map,\n  Observable,\n  of,\n  ReplaySubject,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs';\nimport { ApiService } from '../../_main/services/api.service';\nimport { Task, TaskWithAdditionalData } from '../interfaces/task.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private lists = new Map>();\n\n  /**\n   * Default constructor with dependency injection.\n   * @param apiService ApiService\n   */\n  constructor(\n    private apiService: ApiService,\n    private gitIntegrationService: GitIntegrationService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private memberService: MemberService,\n    private snackbarService: SnackbarService,\n  ) {}\n\n  /**\n   * Get list of tasks\n   * @param projectId Project id needed to list all tasks\n   * @returns Request observable with list of tasks\n   */\n  public list(projectId: number, filters?: Filter[]): Observable {\n    let subject: ReplaySubject;\n    if (this.lists.has(projectId)) {\n      subject = this.lists.get(projectId)!;\n    } else {\n      subject = new ReplaySubject();\n      this.lists.set(projectId, subject);\n      this.apiService.get(`/project/${projectId}/task`).subscribe((tasks) => {\n        subject.next(tasks);\n      });\n    }\n\n    return subject.pipe(applyFilters(filters));\n  }\n\n  /**\n   * Creates new task\n   * @param task Task to create\n   * @param projectId Project id needed to create task\n   * @returns Request observable with the created task\n   */\n  public create(projectId: number, task: TaskWithAdditionalData): Observable {\n    return this.apiService.post(`/project/${projectId}/task/`, { body: task }).pipe(\n      switchMap((newTask) => {\n        if (task.connectWithPullRequestOnGitHub) {\n          return this.gitIntegrationService.connectGitHubPull(projectId, newTask.id, task.pull);\n        } else return of(newTask);\n      }),\n      switchMap((newTask) => {\n        if (task.connectWithIssueOnGitHub) {\n          return this.gitIntegrationService.connectGitHubIssue(projectId, newTask.id, task.issue);\n        } else return of(newTask);\n      }),\n      tap(() => {\n        this.snackbarService.show($localize`Task created successfully!`);\n      }),\n    );\n  }\n\n  /**\n   * Updates task\n   * @param task Task to update\n   * @param projectId Project id needed to update task\n   * @returns Request observable with the updated task\n   */\n  public update(projectId: number, task: TaskWithAdditionalData): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${task.id}`, { body: task }).pipe(\n      switchMap((newTask) => {\n        if (task.connectWithPullRequestOnGitHub) {\n          return this.gitIntegrationService.connectGitHubPull(projectId, newTask.id, task.pull);\n        } else return of(null);\n      }),\n      switchMap((newTask) => {\n        if (task.connectWithIssueOnGitHub) {\n          return this.gitIntegrationService.connectGitHubIssue(projectId, newTask.id, task.issue);\n        } else return of(null);\n      }),\n    );\n  }\n\n  /**\n   * Deletes task\n   * @param taskId Task id to delete\n   * @param projectId Project id needed to delete task\n   * @returns Request observable\n   */\n  public delete(projectId: number, taskId: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}`);\n  }\n\n  /**\n   * Opens dialog to delete specific task\n   * @param projectId Project id needed to delete task\n   * @param task Task to delete\n   * @returns Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)\n   */\n  public deleteWithConfirmation(projectId: number, task: Task): Observable {\n    return this.dialogService\n      .confirm({\n        title: $localize`Delete task \"${task.name}\"`,\n        message: $localize`Are you sure you want to delete this task \"${task.name}\"?`,\n        confirmText: $localize`Delete`,\n        cancelText: $localize`Cancel`,\n        variant: AlertDialogVariant.IMPORTANT,\n      })\n      .pipe(\n        switchMap((confirmed) => {\n          if (confirmed) {\n            return this.delete(projectId, task.id).pipe(switchMap(() => of(true)));\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to edit specific task\n   * @param projectId Project id needed to update task\n   * @param task Task to update\n   * @returns Observable with updated task, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openEditTaskDialog(projectId: number, task: Task): Observable {\n    return this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.EDIT,\n        projectId,\n        task,\n      })\n      .afterClosed()\n      .pipe(\n        tap((data) => {\n          console.log(data);\n        }),\n        switchMap((updatedTask: any) => {\n          if (updatedTask) {\n            return this.update(projectId, updatedTask);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to create new task\n   * @returns created task, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openCreateNewTaskDialog() {\n    return this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n      } as TaskDialogData)\n      .afterClosed()\n      .pipe(\n        switchMap((task: TaskWithAdditionalData) => {\n          if (task) {\n            return this.create(task.projectId, task);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to create new subtask\n   * @param projectId Project id needed to update subtask\n   * @param parentTask Parent task id to which attach subtask\n   * @returns created subtask, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openCreateSubtaskDialog(projectId: number, parentTask: Task): Observable {\n    return this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: projectId,\n        subtask: true,\n        task: {\n          parentTaskId: parentTask.id,\n        },\n      })\n      .afterClosed()\n      .pipe(\n        switchMap((newTask: any) => {\n          if (newTask) {\n            return this.create(projectId, newTask);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Generates schedule object for specific project\n   * @param projectId Project id to generate schedule from\n   * @returns Schedule object with all tasks\n   */\n  public schedule(projectId: number): Observable {\n    return combineLatest([\n      this.list(projectId).pipe(take(1)),\n      this.memberService.list(projectId).pipe(take(1)),\n    ]).pipe(\n      map(([tasks, members]: [tasks: Task[], members: ProjectMember[]]) => {\n        const schedules = [];\n\n        for (const { user } of members) {\n          schedules.push({ user, tasks: new Map() });\n        }\n\n        for (const task of tasks) {\n          const schedule = schedules.find((s) => s.user.id === task.assigneeId);\n\n          if (!schedule) continue;\n\n          if (task.estimatedDate) {\n            schedule.tasks.set(dayjs(task.estimatedDate).format('YYYY-MM-DD'), task);\n          } else {\n            if (!schedule.tasks.has(null)) schedule.tasks.set(null, []);\n\n            schedule.tasks.get(null).push(task);\n          }\n        }\n\n        return schedules;\n      }),\n    );\n  }\n\n  /**\n   * Assign task to specific user\n   * @param userId user to assign task to (if null, task will be unassigned)\n   * @param taskId task to assign\n   * @param projectId project id needed to assign task\n   * @returns Updated task object\n   */\n  public assign(userId: number | null, taskId: number, projectId: number): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${taskId}`, {\n      body: { assigneeId: userId },\n    });\n  }\n\n  /**\n   * Change status of specific task\n   * @param statusId status to change task to\n   * @param taskId task to change status of\n   * @param projectId project id needed to change status\n   * @returns Updated task object\n   */\n  public changeStatus(statusId: number, taskId: number, projectId: number): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${taskId}`, {\n      body: { statusId },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskTypeIconPipe.html":{"url":"pipes/TaskTypeIconPipe.html","title":"pipe - TaskTypeIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskTypeIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-type-icon.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskTypeIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type-icon.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskTypeIcon',\n})\nexport class TaskTypeIconPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'TASK':\n        return 'cuTask';\n      case 'ISSUE':\n        return 'cuIssue';\n      case 'EPIC':\n        return 'cuEpic';\n      case 'USER_STORY':\n        return 'cuUserStory';\n      case 'SUBTASK':\n        return 'cuSubtask';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskTypePipe.html":{"url":"pipes/TaskTypePipe.html","title":"pipe - TaskTypePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskTypePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-type.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskType\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskType',\n})\nexport class TaskTypePipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'TASK':\n        return $localize`Task`;\n      case 'USER_STORY':\n        return $localize`User story`;\n      case 'ISSUE':\n        return $localize`Issue`;\n      case 'EPIC':\n        return $localize`Epic`;\n      case 'SUBTASK':\n        return $localize`Subtask`;\n      default:\n        console.warn('Unknown task type:', value);\n        return value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskWithAdditionalData.html":{"url":"interfaces/TaskWithAdditionalData.html","title":"interface - TaskWithAdditionalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskWithAdditionalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/task.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Extended project task interface\n\n            \n\n            \n                Extends\n            \n            \n                    Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connectWithIssueOnGitHub\n                                        \n                                \n                                \n                                        \n                                            connectWithPullRequestOnGitHub\n                                        \n                                \n                                \n                                        \n                                            issue\n                                        \n                                \n                                \n                                        \n                                            issueAttachGithub\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            pull\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectWithIssueOnGitHub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectWithIssueOnGitHub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task is connected to GitHub issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connectWithPullRequestOnGitHub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectWithPullRequestOnGitHub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task is connected to GitHub pull request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issue:         GitIssue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitIssue\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub issue to which the task is connected to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueAttachGithub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueAttachGithub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Project identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pull\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pull:         GitPull\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitPull\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub pull to which the task is connected to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace identifier\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\n\n/**\n * Project task interface\n */\nexport interface Task {\n  /**\n   * Task id (unique per project)\n   */\n  id: number;\n\n  /**\n   * Task name\n   */\n  name: string;\n\n  /**\n   * Task description\n   */\n  description: string;\n\n  /**\n   * Task deadline to be completed\n   */\n  deadline: Date;\n\n  /**\n   * Task estimated date to work on it\n   */\n  estimatedDate: Date;\n\n  /**\n   * Status id (unique per database)\n   */\n  statusId?: number;\n\n  /**\n   * Parent task id\n   */\n  parentTaskId?: number;\n\n  /**\n   * List of subtasks\n   */\n  subTasks?: Task[];\n\n  /**\n   * Optional link to the GitHub issue\n   */\n  issue?: string;\n\n  /**\n   * Optional link to the GitHub pull request\n   */\n  pull?: string;\n\n  /**\n   * Optional merged pull requests list\n   */\n  mergedPullList?: String[];\n\n  /**\n   * Optional user id who is assigned to task\n   */\n  assigneeId?: number;\n}\n\n/**\n * Extended project task interface\n */\nexport interface TaskWithAdditionalData extends Omit {\n  /**\n   * Project identifier\n   */\n  projectId: number;\n\n  /**\n   * Workspace identifier\n   */\n  workspaceId: string;\n\n  /**\n   * Boolean to determine if task is connected to GitHub issue\n   */\n  connectWithIssueOnGitHub: boolean;\n\n  /**\n   * Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n   */\n  issueAttachGithub: boolean;\n\n  /**\n   * Boolean to determine if task is connected to GitHub pull request\n   */\n  connectWithPullRequestOnGitHub: boolean;\n\n  /**\n   * GitHub pull to which the task is connected to\n   */\n  pull: GitPull;\n\n  /**\n   * GitHub issue to which the task is connected to\n   */\n  issue: GitIssue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_declarations\n\n\n\n\nBoardPage\n\nBoardPage\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nBoardPage->TasksModule\n\n\n\n\n\nBoardTaskComponent\n\nBoardTaskComponent\n\nTasksModule -->\n\nBoardTaskComponent->TasksModule\n\n\n\n\n\nInputAssigneeComponent\n\nInputAssigneeComponent\n\nTasksModule -->\n\nInputAssigneeComponent->TasksModule\n\n\n\n\n\nSchedulePage\n\nSchedulePage\n\nTasksModule -->\n\nSchedulePage->TasksModule\n\n\n\n\n\nStatusColorPipe\n\nStatusColorPipe\n\nTasksModule -->\n\nStatusColorPipe->TasksModule\n\n\n\n\n\nStatusLabelComponent\n\nStatusLabelComponent\n\nTasksModule -->\n\nStatusLabelComponent->TasksModule\n\n\n\n\n\nTaskDialog\n\nTaskDialog\n\nTasksModule -->\n\nTaskDialog->TasksModule\n\n\n\n\n\nTaskListPage\n\nTaskListPage\n\nTasksModule -->\n\nTaskListPage->TasksModule\n\n\n\n\n\nTaskPriorityIconPipe\n\nTaskPriorityIconPipe\n\nTasksModule -->\n\nTaskPriorityIconPipe->TasksModule\n\n\n\n\n\nTaskPriorityPipe\n\nTaskPriorityPipe\n\nTasksModule -->\n\nTaskPriorityPipe->TasksModule\n\n\n\n\n\nTaskTypeIconPipe\n\nTaskTypeIconPipe\n\nTasksModule -->\n\nTaskTypeIconPipe->TasksModule\n\n\n\n\n\nTaskTypePipe\n\nTaskTypePipe\n\nTasksModule -->\n\nTaskTypePipe->TasksModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nTasksModule -->\n\nMainModule->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardPage\n                        \n                        \n                            BoardTaskComponent\n                        \n                        \n                            InputAssigneeComponent\n                        \n                        \n                            SchedulePage\n                        \n                        \n                            StatusColorPipe\n                        \n                        \n                            StatusLabelComponent\n                        \n                        \n                            TaskDialog\n                        \n                        \n                            TaskListPage\n                        \n                        \n                            TaskPriorityIconPipe\n                        \n                        \n                            TaskPriorityPipe\n                        \n                        \n                            TaskTypeIconPipe\n                        \n                        \n                            TaskTypePipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainModule\n                        \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { BoardTaskComponent } from './components/board-task/board-task.component';\nimport { InputAssigneeComponent } from './components/input-assignee/input-assignee.component';\nimport { StatusLabelComponent } from './components/status-label/status-label.component';\nimport { ViewOptionsComponent } from './components/view-options/view-options.component';\nimport { TaskDialog } from './dialogs/task/task.dialog';\nimport { BoardPage } from './pages/board/board.page';\nimport { SchedulePage } from './pages/schedule/schedule.page';\nimport { TaskListPage } from './pages/task-list/task-list.page';\nimport { StatusColorPipe } from './pipes/status-color.pipe';\nimport { TaskPriorityIconPipe } from './pipes/task-priority-icon.pipe';\nimport { TaskPriorityPipe } from './pipes/task-priority.pipe';\nimport { TaskTypeIconPipe } from './pipes/task-type-icon.pipe';\nimport { TaskTypePipe } from './pipes/task-type.pipe';\nimport { TasksRoutingModule } from './tasks.routing';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, MainModule, TasksRoutingModule],\n  declarations: [\n    BoardPage,\n    BoardTaskComponent,\n    TaskListPage,\n    TaskDialog,\n    TaskTypePipe,\n    TaskPriorityPipe,\n    TaskPriorityIconPipe,\n    TaskTypeIconPipe,\n    ViewOptionsComponent,\n    SchedulePage,\n    InputAssigneeComponent,\n    StatusLabelComponent,\n    StatusColorPipe,\n  ],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BoardPage } from './pages/board/board.page';\nimport { SchedulePage } from './pages/schedule/schedule.page';\nimport { TaskListPage } from './pages/task-list/task-list.page';\n\n/**\n * Tasks routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'board',\n  },\n  {\n    path: 'board',\n    component: BoardPage,\n  },\n  {\n    path: 'list',\n    component: TaskListPage,\n  },\n  {\n    path: 'schedule',\n    component: SchedulePage,\n  },\n];\n\n/**\n * Tasks routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TasksRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestNgControl.html":{"url":"classes/TestNgControl.html","title":"class - TestNgControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestNgControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/helpers/ng-control-testing-provider.helper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NgControl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _control\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                viewToModelUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    control\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        viewToModelUpdate\n                        \n                    \n                \n            \n            \n                \nviewToModelUpdate(newValue: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n\n                \n                    \n                        getcontrol()\n                    \n                \n                            \n                                \n                                    Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { AbstractControl, FormControl, NgControl } from '@angular/forms';\n\nexport class TestNgControl extends NgControl {\n  private _control = new FormControl('');\n  viewToModelUpdate(newValue: any): void {\n    this._control = newValue;\n  }\n  get control(): AbstractControl | null {\n    return this._control;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextareaComponent.html":{"url":"components/TextareaComponent.html","title":"component - TextareaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/textarea/textarea.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-textarea\n            \n\n            \n                styleUrls\n                ./textarea.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./textarea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cols\n                            \n                            \n                                floatingLabel\n                            \n                            \n                                hint\n                            \n                            \n                                placeholder\n                            \n                            \n                                rows\n                            \n                            \n                                staticLabel\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cols\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:13\n                            \n                        \n                \n                    \n                        Floating label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:28\n                            \n                        \n                \n                    \n                        Hint to display beneath the input to provide additional information of how to use the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:23\n                            \n                        \n                \n                    \n                        Input placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        staticLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:18\n                            \n                        \n                \n                    \n                        Static label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:77\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss'],\n})\nexport class TextareaComponent extends ControlAccessor {\n  /**\n   * Floating label text to display\n   */\n  @Input() floatingLabel?: string;\n\n  /**\n   * Static label text to display\n   */\n  @Input() staticLabel?: string;\n\n  /**\n   * Input placeholder text\n   */\n  @Input() placeholder: string = '';\n\n  /**\n   * Hint to display beneath the input to provide additional information of how to use the input\n   */\n  @Input() hint?: string;\n\n  @Input() rows?: number = 4;\n\n  @Input() cols?: number = 50;\n}\n\n    \n\n    \n        \n  {{ staticLabel }}\n  \n    {{ floatingLabel }}\n    \n    {{ ngControl.control?.errors | validationError }}\n    {{ hint }}\n  \n\n\n    \n\n    \n                \n                    ./textarea.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ staticLabel }}      {{ floatingLabel }}        {{ ngControl.control?.errors | validationError }}    {{ hint }}  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpperNavigationComponent.html":{"url":"components/UpperNavigationComponent.html","title":"component - UpperNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpperNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/upper-navigation/upper-navigation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-upper-navigation\n            \n\n            \n                styleUrls\n                ./upper-navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./upper-navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _isButtonDisabled\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                faCog\n                            \n                            \n                                faSignOut\n                            \n                            \n                                faUser\n                            \n                            \n                                openBelow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeProfile\n                            \n                            \n                                createNewTask\n                            \n                            \n                                    Public\n                                isButtonDisabled\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openProfile\n                            \n                            \n                                    Public\n                                toggleProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, taskService: TaskService, workspaceService: WorkspaceService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTask\n                        \n                    \n                \n            \n            \n                \ncreateNewTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isButtonDisabled\n                        \n                    \n                \n            \n            \n                \n                    \n                    isButtonDisabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _isButtonDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCog\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faSignOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faSignOut\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faUser\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openBelow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('openBelow')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { faAngleDown, faCog, faSignOut, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { TaskService } from '@tasks/services/task.service';\nimport { fromEvent, map, skip, take } from 'rxjs';\n\n@Component({\n  selector: 'app-upper-navigation',\n  templateUrl: './upper-navigation.component.html',\n  styleUrls: ['./upper-navigation.component.scss'],\n})\nexport class UpperNavigationComponent implements OnInit {\n  constructor(\n    private dialogService: DialogService,\n    private taskService: TaskService,\n    private workspaceService: WorkspaceService,\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.workspaceService.list().pipe(\n      map((workspaces) => {\n        if (workspaces.length === 0) {\n          this._isButtonDisabled = false;\n        } else if (\n          workspaces.filter((workspace) => workspace.projectsWithPrivileges.length).length === 0\n        ) {\n          this._isButtonDisabled = false;\n        } else {\n          this._isButtonDisabled = true;\n        }\n      }),\n    );\n  }\n\n  @ViewChild('openBelow') openBelow!: ElementRef;\n\n  faAngleDown = faAngleDown;\n  faUser = faUser;\n  faCog = faCog;\n  faSignOut = faSignOut;\n\n  public active: boolean = false;\n  public _isButtonDisabled = true;\n\n  createNewTask() {\n    this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n      } as TaskDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.taskService.create(result.projectId, result).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  logout() {\n    this.authService.logout().subscribe(() => {\n      this.router.navigate(['/', 'auth', 'login']);\n    });\n  }\n\n  public isButtonDisabled() {\n    return this._isButtonDisabled;\n  }\n  public openProfile() {\n    this.active = true;\n    fromEvent(document, 'click')\n      .pipe(skip(1), take(1))\n      .subscribe(() => {\n        this.closeProfile();\n      });\n  }\n\n  public closeProfile() {\n    this.active = false;\n  }\n  public toggleProfile() {\n    if (!this.active) {\n      this.openProfile();\n    } else {\n      this.closeProfile();\n    }\n  }\n}\n\n    \n\n    \n        New task\n\n\n\n  \n  \n    \n    \n    \n      \n    \n  \n\n\n  \n    \n      \n        \n        Profile\n      \n    \n    \n      \n        \n        Settings\n      \n    \n    \n      \n        \n        Log out\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./upper-navigation.component.scss\n                \n                :host {\n  display: flex;\n  width: 100%;\n  height: 62px;\n\n  // flex-shrink: 0;\n  align-items: center;\n  background-color: var(--color-secondary-800);\n  color: var(--color-text);\n}\n\napp-button {\n  align-items: center;\n  justify-content: center;\n  padding: 10px 20px;\n  margin: 0;\n}\n\n.flex-end-position {\n  position: absolute;\n  right: 0;\n  display: flex;\n  height: 62px;\n\n  .profile {\n    width: 200px;\n\n    .open-below {\n      position: absolute;\n      right: 0;\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 10px;\n      cursor: pointer;\n\n      app-icon {\n        display: flex;\n        align-items: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n  }\n}\n\n.options {\n  position: absolute;\n  z-index: 2;\n  top: 62px;\n  right: 0;\n  display: none;\n  width: 200px;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    background-color: var(--color-secondary-600);\n    color: var(--color-text);\n\n    a {\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 12px 10px;\n      border-radius: var(--border-radius);\n      color: var(--color-text);\n      transition: background-color 0.2s ease-in-out;\n\n      app-icon {\n        margin-right: 1rem;\n        margin-left: 2rem;\n      }\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New task                                                        Profile                                    Settings                                    Log out            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpperNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMyself\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMyself\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyself()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(modUser: ModifyUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modUser\n                                    \n                                                ModifyUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ModifyUser } from '@auth/interfaces/user.interface';\nimport { ApiService } from '@main/services/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private apiService: ApiService) {}\n\n  public update(modUser: ModifyUser): Observable {\n    return this.apiService.put(`/auth/edit`, { body: modUser });\n  }\n\n  public getMyself() {\n    return this.apiService.get(`/auth/me`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserSession.html":{"url":"interfaces/UserSession.html","title":"interface - UserSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/interfaces/session.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            geoip\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ip\n                                        \n                                \n                                \n                                        \n                                            lastUsed\n                                        \n                                \n                                \n                                        \n                                            remembered\n                                        \n                                \n                                \n                                        \n                                            userAgent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geoip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geoip:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastUsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remembered\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remembered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserSession {\n  id: number;\n  userAgent: string;\n  ip: string;\n  lastUsed: number;\n  remembered: boolean;\n  geoip: {\n    city: string;\n    country: string;\n  };\n  current: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUtils.html":{"url":"classes/UserUtils.html","title":"class - UserUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/classes/user.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getColorById\n                            \n                            \n                                    Static\n                                getColorByUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getColorById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/classes/user.class.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getColorByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/classes/user.class.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Random } from '@main/classes/random.class';\nimport * as Color from 'color';\n\nexport class UserUtils {\n  public static getColorById(id: number): Color {\n    const random = new Random(id);\n    const randomNumber = random.random();\n    const hue = randomNumber * 255;\n    return Color.hsl(hue, 95, 41);\n  }\n\n  /**\n   * @unsupported\n   */\n  public static getColorByUsername(username: string): Color {\n    let numberRepresentation = username\n      .split('')\n      .map((c) => c.charCodeAt(0))\n      .reduce((sum, n) => sum * 10 ** 6 + n, 0);\n\n    // This requires some tweaks to make the number smaller.\n    numberRepresentation = numberRepresentation / 10000000;\n\n    const random = new Random(numberRepresentation);\n    const randomNumber = random.random();\n    const hue = randomNumber * 255;\n    return Color.hsl(hue, 95, 41);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserWithPrivileges.html":{"url":"interfaces/UserWithPrivileges.html","title":"interface - UserWithPrivileges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserWithPrivileges\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            privileges\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        privileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        privileges:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/utils.class.ts\n        \n\n\n            \n                Description\n            \n            \n                Utilities class with some useful methods not available in any libraries.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                has\n                            \n                            \n                                    Static\n                                isLetter\n                            \n                            \n                                    Static\n                                regexIndexOf\n                            \n                            \n                                    Static\n                                snakeCase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        has\n                        \n                    \n                \n            \n            \n                \n                    \n                    has(object: any, keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:45\n                \n            \n\n\n            \n                \n                    Check if object has all the properties from array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to check\n\n                                    \n                                \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        keys to search for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if object has all of the specified properties, false otherwise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isLetter\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLetter(char: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:59\n                \n            \n\n\n            \n                \n                    Checks if passed character is a letter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    char\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Character to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        regexIndexOf\n                        \n                    \n                \n            \n            \n                \n                    \n                    regexIndexOf(string: string, regex: RegExp, startPos: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:12\n                \n            \n\n\n            \n                \n                    Function to find first occurrence of regex in string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        String to search in\n\n                                    \n                                \n                                \n                                    regex\n                                    \n                                            RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Regex to search for\n\n                                    \n                                \n                                \n                                    startPos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Optional starting position in the string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The index of the first match\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        snakeCase\n                        \n                    \n                \n            \n            \n                \n                    \n                    snakeCase(inputString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:22\n                \n            \n\n\n            \n                \n                    Converts string from camelCase and PascalCase to snake_case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string in snake_case\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utils {\n  /**\n   * Function to find first occurrence of regex in string\n   * @param string String to search in\n   * @param regex Regex to search for\n   * @param startPos Optional starting position in the string\n   * @returns The index of the first match\n   */\n  public static regexIndexOf(string: string, regex: RegExp, startPos: number = 0) {\n    var indexOf = string.substring(startPos).search(regex);\n    return indexOf >= 0 ? indexOf + startPos : indexOf;\n  }\n\n  /**\n   * Converts string from camelCase and PascalCase to snake_case\n   * @param inputString String to convert\n   * @returns string in snake_case\n   */\n  public static snakeCase(inputString: string) {\n    return inputString\n      .split('')\n      .map((character, index) => {\n        if (Utils.isLetter(character) && character == character.toUpperCase()) {\n          if (index > 0) {\n            return '_' + character.toLowerCase();\n          } else {\n            return character.toLowerCase();\n          }\n        } else {\n          return character;\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Check if object has all the properties from array\n   * @param object Object to check\n   * @param keys keys to search for\n   * @returns true if object has all of the specified properties, false otherwise.\n   */\n  public static has(object: any, keys: string[]) {\n    for (const key of keys) {\n      if (!object.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Checks if passed character is a letter\n   * @param char Character to check\n   * @returns\n   */\n  public static isLetter(char: String) {\n    if (char.length > 1) return false;\n    return (char >= 'A' && char = 'a' && char \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationError.html":{"url":"interfaces/ValidationError.html","title":"interface - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/validation-error.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error interface. Used with form controls to specify what validators returned errors.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Human readable error message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of the error. For example 'required', 'minlength', 'maxlength', 'pattern', 'email', etc.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ValidationError {\n  /**\n   * Type of the error. For example 'required', 'minlength', 'maxlength', 'pattern', 'email', etc.\n   */\n  type: string;\n  /**\n   * Human readable error message.\n   */\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ValidationErrorPipe.html":{"url":"pipes/ValidationErrorPipe.html","title":"pipe - ValidationErrorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ValidationErrorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/_main/pipes/validation-error.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to transform validation errors to a human readable string\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        validationError\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/pipes/validation-error.pipe.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe value to be transformed\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        message from validation error\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe to transform validation errors to a human readable string\n */\n@Pipe({\n  name: 'validationError',\n})\nexport class ValidationErrorPipe implements PipeTransform {\n  /**\n   *\n   * @param value - The value to be transformed\n   * @returns message from validation error\n   */\n  transform(value: any): any {\n    return value?.message || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOptionsComponent.html":{"url":"components/ViewOptionsComponent.html","title":"component - ViewOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/view-options/view-options.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-options\n            \n\n            \n                styleUrls\n                ./view-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                penToSquare\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/view-options/view-options.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/view-options/view-options.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFilter\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        penToSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPenToSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { faFilter, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-view-options',\n  templateUrl: './view-options.component.html',\n  styleUrls: ['./view-options.component.scss'],\n})\nexport class ViewOptionsComponent {\n  penToSquare = faPenToSquare;\n  filter = faFilter;\n\n  public workspaceId: number;\n  public projectId: number;\n\n  @Input()\n  project!: Project;\n\n  @Input()\n  title!: string;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{title}}\n      {{title}} {{project.name}}\n    \n    \n      \n        General\n      \n      \n        Members\n      \n    \n    \n      \n        General\n      \n      \n        Members\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./view-options.component.scss\n                \n                :host {\n  width: 100%;\n  align-items: center;\n  color: var(--color-text);\n}\n\nsection {\n  position: relative;\n  display: flex;\n  margin-bottom: 1rem;\n\n  .tabs {\n    display: flex;\n\n    .project-name {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      margin-right: 10px;\n    }\n\n    a {\n      position: relative;\n      display: block;\n      padding: 10px;\n      margin-right: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      &.active {\n        color: var(--color-text);\n\n        &::before {\n          position: absolute;\n          bottom: 10px;\n          left: 5px;\n          width: calc(100% - 10px);\n          height: 2px;\n          background-color: var(--color-primary-700);\n          border-radius: var(--border-radius);\n          content: '';\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}      {{title}} {{project.name}}                      General                    Members                            General                    Members            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOptionsComponent-1.html":{"url":"components/ViewOptionsComponent-1.html","title":"component - ViewOptionsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/view-options/view-options.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-options\n            \n\n            \n                styleUrls\n                ./view-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faGithub\n                            \n                            \n                                filter\n                            \n                            \n                                    Public\n                                isFiltersOpen\n                            \n                            \n                                penToSquare\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                filtersControl\n                            \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersControl\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faGithub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGithub\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFilter\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isFiltersOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        penToSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPenToSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faFilter, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport { Filter } from '@main/interfaces/filters.interface';\n\n@Component({\n  selector: 'app-view-options',\n  templateUrl: './view-options.component.html',\n  styleUrls: ['./view-options.component.scss'],\n})\nexport class ViewOptionsComponent {\n  penToSquare = faPenToSquare;\n  faGithub = faGithub;\n  filter = faFilter;\n\n  public workspaceId: number;\n  public projectId: number;\n\n  @Input()\n  project!: Project;\n\n  @Input()\n  filters: Filter[] = [];\n\n  @Input()\n  public filtersControl = new FormControl();\n\n  public isFiltersOpen = false;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{project.name}}\n      \n        \n      \n    \n    \n      Board\n    \n    \n      List\n    \n    \n      Schedule\n    \n    \n      Calendar\n    \n    \n      Backlog\n    \n  \n  \n    \n      \n      Edit\n    \n    \n      \n      Filters\n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./view-options.component.scss\n                \n                :host {\n  width: 100%;\n  align-items: center;\n  color: var(--color-text);\n}\n\nsection {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n\n  .tabs {\n    display: flex;\n\n    .project-name {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      margin-right: 10px;\n\n      a {\n        padding: 0;\n        margin-left: 1rem;\n      }\n    }\n\n    a {\n      position: relative;\n      display: block;\n      padding: 10px 10px 15px 10px;\n      margin-right: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      &.active {\n        color: var(--color-text);\n\n        &::before {\n          position: absolute;\n          bottom: 10px;\n          left: 5px;\n          width: calc(100% - 10px);\n          height: 2px;\n          background-color: var(--color-primary-700);\n          border-radius: var(--border-radius);\n          content: '';\n        }\n      }\n    }\n  }\n\n  .options {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options-element {\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      app-icon {\n        display: flex;\n        align-items: center;\n        padding-right: 10px;\n      }\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      .overlay {\n        position: absolute;\n        z-index: 150;\n        right: 0;\n        bottom: 0;\n        width: 200px;\n        padding: 1rem;\n        background-color: var(--color-secondary-600);\n        border-radius: var(--border-radius);\n        transform: translateY(100%);\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{project.name}}                                  Board              List              Schedule              Calendar              Backlog                        Edit                    Filters                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewOptionsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Workspace.html":{"url":"interfaces/Workspace.html","title":"interface - Workspace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Workspace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/workspace.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Main workspace (projects/spaces grouping entity) interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            projectsWithPrivileges\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectsWithPrivileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectsWithPrivileges:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Project } from './project.interface';\n/**\n * Main workspace (projects/spaces grouping entity) interface\n */\nexport interface Workspace {\n  /**\n   * Workspace ID\n   */\n  id: number;\n  /**\n   * Workspace name\n   */\n  name: string;\n\n  projectsWithPrivileges: {\n    project: Project;\n    privileges: number;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspaceService.html":{"url":"injectables/WorkspaceService.html","title":"injectable - WorkspaceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkspaceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/workspace.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Workspaces management service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/workspace.service.ts:13\n                            \n                        \n\n                \n                    \n                            Default constructor with ApiService dependency.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Api service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:61\n                \n            \n\n\n            \n                \n                    Creates a new workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace to modify\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:35\n                \n            \n\n\n            \n                \n                    Deletes the workspace by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the workspace to delete from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:26\n                \n            \n\n\n            \n                \n                    Gets a workspace by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the workspace to get from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:52\n                \n            \n\n\n            \n                \n                    Lists all available workspaces.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:44\n                \n            \n\n\n            \n                \n                    Updates a workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace object to update in the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        list$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/services/workspace.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Workspace } from '../interfaces/workspace.interface';\n\n/**\n * Workspaces management service\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class WorkspaceService {\n  list$ = new Subject();\n\n  /**\n   * Default constructor with `ApiService` dependency.\n   * @param apiService Api service\n   */\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Gets a workspace by its ID.\n   * @param id identifier of the workspace to get from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(id: number): Observable {\n    return this.apiService.get(`/workspace/${id}`);\n  }\n\n  /**\n   * Deletes the workspace by its ID.\n   * @param id identifier of the workspace to delete from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(id: number): Observable {\n    return this.apiService.delete(`/workspace/${id}`);\n  }\n\n  /**\n   * Updates a workspace.\n   * @param workspace workspace object to update in the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public update(workspace: Workspace): Observable {\n    return this.apiService.put(`/workspace/${workspace.id}`, { body: workspace });\n  }\n\n  /**\n   * Lists all available workspaces.\n   * @returns Request observable, which completes when request is finished\n   */\n  public list(): Observable {\n    return this.apiService.get(`/workspace`);\n  }\n\n  /**\n   * Creates a new workspace.\n   * @param workspace workspace to modify\n   * @returns Request observable, which completes when request is finished\n   */\n  public create(workspace: Workspace): Observable {\n    return this.apiService.post(`/workspace`, { body: workspace });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspacesListPage.html":{"url":"components/WorkspacesListPage.html","title":"component - WorkspacesListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WorkspacesListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts\n\n\n\n    \n        Description\n    \n    \n        Workspaces list page component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-workspaces-list-page\n            \n\n            \n                styleUrls\n                ./workspaces-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./workspaces-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                faPlus\n                            \n                            \n                                    Public\n                                    Optional\n                                workspaces$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteWorkspace\n                            \n                            \n                                editWorkspace\n                            \n                            \n                                loadWorkspaces\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openWorkspace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:20\n                            \n                        \n\n                \n                    \n                            Default constructor with dependency injection.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteWorkspace\n                        \n                    \n                \n            \n            \n                \ndeleteWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:62\n                \n            \n\n\n            \n                \n                    Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editWorkspace\n                        \n                    \n                \n            \n            \n                \neditWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:75\n                \n            \n\n\n            \n                \n                    Navigates to the workspace edit page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadWorkspaces\n                        \n                    \n                \n            \n            \n                \nloadWorkspaces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:54\n                \n            \n\n\n            \n                \n                    Loads the workspaces list from the workspace service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:47\n                \n            \n\n\n            \n                \n                    Lifecycle hook to load workspaces at the start of the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \nopenWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:37\n                        \n                    \n\n            \n                \n                    Plus icon to display on the add button\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        workspaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:42\n                        \n                    \n\n            \n                \n                    Workspaces list observable to use in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Observable } from 'rxjs';\nimport { Page } from 'src/app/_main/decorators/page.decorator';\nimport { DialogService } from 'src/app/_main/services/dialog.service';\nimport { Workspace } from '../../interfaces/workspace.interface';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Workspaces list page component.\n */\n@Page()\n@Component({\n  selector: 'app-workspaces-list-page',\n  templateUrl: './workspaces-list.page.html',\n  styleUrls: ['./workspaces-list.page.scss'],\n})\nexport class WorkspacesListPage implements OnInit {\n  /**\n   * Default constructor with dependency injection.\n   * @param workspaceService Workspace service\n   * @param dialogService Dialog service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private router: Router,\n  ) {}\n\n  /**\n   * Plus icon to display on the add button\n   */\n  public faPlus = faPlus;\n\n  /**\n   * Workspaces list observable to use in the template.\n   */\n  public workspaces$?: Observable;\n\n  /**\n   * Lifecycle hook to load workspaces at the start of the page.\n   */\n  ngOnInit() {\n    this.loadWorkspaces();\n  }\n\n  /**\n   * Loads the workspaces list from the workspace service.\n   */\n  loadWorkspaces() {\n    this.workspaces$ = this.workspaceService.list();\n  }\n\n  /**\n   * Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\n   * @param workspace Workspace to delete\n   */\n  deleteWorkspace(workspace: Workspace) {\n    this.dialogService.confirmWorkspaceDelete(workspace).subscribe(() => {\n      this.workspaceService.delete(workspace.id).subscribe(() => {\n        // this.loadWorkspaces();\n        window.location.reload();\n      });\n    });\n  }\n\n  /**\n   * Navigates to the workspace edit page.\n   * @param workspace Workspace to edit\n   */\n  editWorkspace(workspace: Workspace) {\n    this.router.navigate(['/', workspace.id, 'edit']);\n  }\n\n  openWorkspace(workspace: Workspace) {\n    this.router.navigate(['/', workspace.id]);\n  }\n}\n\n    \n\n    \n        \n\n  Workspaces\n  New workspace\n\n\n\n\n\n  \n  \n    Name\n     {{ row.name }} \n  \n\n  \n  \n    Statistics\n     - \n  \n\n  \n  \n    Last update\n     - \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Edit workspace\n        \n        \n          Delete workspace\n        \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./workspaces-list.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Workspaces  New workspace        Name     {{ row.name }}           Statistics     -           Last update     -                                                           Edit workspace                          Delete workspace                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkspacesListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/_main/_main.module.ts\n            \n            variable\n            ngModuleConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/classes/control-accessor.class.ts\n            \n            component\n            ControlAccessor\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/_main/classes/e-set.class.ts\n            \n            class\n            ESet\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/classes/enum.class.ts\n            \n            class\n            Enum\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/_main/classes/filters.class.ts\n            \n            class\n            Filters\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/classes/random.class.ts\n            \n            class\n            Random\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/_main/classes/utils.class.ts\n            \n            class\n            Utils\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/_main/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/_main/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_main/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/_main/components/filters/filters.component.ts\n            \n            component\n            FiltersComponent\n            \n                57 %\n                (11/19)\n            \n        \n        \n            \n                \n                src/app/_main/components/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/_main/components/input-date-time/input-date-time.component.ts\n            \n            component\n            InputDateTimeComponent\n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                src/app/_main/components/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                70 %\n                (17/24)\n            \n        \n        \n            \n                \n                src/app/_main/components/main-view/main-view.component.ts\n            \n            component\n            MainViewComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts\n            \n            component\n            NavElementWorkspaceComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/_main/components/nav-element/nav-element.component.ts\n            \n            component\n            NavElementComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/_main/components/option/option.component.ts\n            \n            component\n            OptionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/_main/components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts\n            \n            component\n            SidebarNavigationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts\n            \n            component\n            SnackbarOutletComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/components/snackbar/snackbar.component.ts\n            \n            component\n            SnackbarComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/_main/components/snackbar/snackbar.interface.ts\n            \n            interface\n            SnackbarData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/components/textarea/textarea.component.ts\n            \n            component\n            TextareaComponent\n            \n                84 %\n                (16/19)\n            \n        \n        \n            \n                \n                src/app/_main/components/upper-navigation/upper-navigation.component.ts\n            \n            component\n            UpperNavigationComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/debug.decorator.ts\n            \n            function\n            Debug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/page.decorator.ts\n            \n            function\n            Page\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/service-validator.decorator.ts\n            \n            interface\n            ErrorValidationTree\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/service-validator.decorator.ts\n            \n            function\n            ServiceValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/service.decorator.ts\n            \n            function\n            Service\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/dialogs/alert/alert.dialog.ts\n            \n            component\n            AlertDialog\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/_main/dialogs/alert/alert.dialog.ts\n            \n            interface\n            AlertDialogData\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/_main/directives/click-stop-propagation.directive.ts\n            \n            directive\n            ClickStopPropagationDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_main/directives/focus-initial.directive.ts\n            \n            directive\n            FocusInitialDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_main/directives/let.directive.ts\n            \n            directive\n            LetDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/directives/let.directive.ts\n            \n            interface\n            LetContext\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/interfaces/filters.interface.ts\n            \n            interface\n            FilterCheckbox\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/_main/interfaces/request-options.interface.ts\n            \n            interface\n            RequestOptions\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/_main/interfaces/validation-error.interface.ts\n            \n            interface\n            ValidationError\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_main/operators/apply-filters.operator.ts\n            \n            function\n            applyFilters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/operators/catch-response.operator.ts\n            \n            function\n            catchResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/pipes/validation-error.pipe.ts\n            \n            pipe\n            ValidationErrorPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/_main/services/dialog.service.ts\n            \n            injectable\n            DialogService\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/_main/services/router-extensions.service.ts\n            \n            injectable\n            RouterExtensionsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/services/snackbar.service.ts\n            \n            injectable\n            SnackbarService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/_main/validators/email.validator.ts\n            \n            function\n            emailValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/max-length.validator.ts\n            \n            function\n            maxLengthValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/password.validator.ts\n            \n            function\n            passwordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/required.validator.ts\n            \n            function\n            requiredValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/same-as.validator.ts\n            \n            function\n            sameAsValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/guard/logged-in-users.guard.ts\n            \n            guard\n            LoggedInUsersGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            ModifyUser\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            UserWithPrivileges\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/pages/change-password/change-password.page.ts\n            \n            component\n            ChangePasswordPage\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/auth/pages/delete-account/delete-account.page.ts\n            \n            component\n            DeleteAccountPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/pages/forgot-password/forgot-password.page.ts\n            \n            component\n            ForgotPasswordPage\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/auth/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/auth/pages/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/auth/pages/restore-account/restore-account.page.ts\n            \n            component\n            RestoreAccountPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/auth/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/classes/user.class.ts\n            \n            class\n            UserUtils\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/components/integration-github/integration-github.component.ts\n            \n            component\n            IntegrationGithubComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/components/member-list/member-list.component.ts\n            \n            component\n            MemberListComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/components/view-options/view-options.component.ts\n            \n            component\n            ViewOptionsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n            \n            component\n            AddMemberDialog\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n            \n            interface\n            AddMemberDialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitAccount\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitIntegration\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitIssue\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitPull\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/project-member.interface.ts\n            \n            interface\n            ProjectMember\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/project.interface.ts\n            \n            interface\n            Project\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/workspace.interface.ts\n            \n            interface\n            Workspace\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/create-project-members/create-project-members.page.ts\n            \n            component\n            CreateProjectMembersPage\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/create-project/create-project.page.ts\n            \n            component\n            CreateProjectPage\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/create-workspace/create-workspace.page.ts\n            \n            component\n            CreateWorkspacePage\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts\n            \n            component\n            EditProjectMembersPage\n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/edit-project/edit-project.page.ts\n            \n            component\n            EditProjectPage\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts\n            \n            component\n            EditWorkspacePage\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/github-integration/github-integration.page.ts\n            \n            component\n            GithubIntegrationPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/projects-list/projects-list.page.ts\n            \n            component\n            ProjectsListPage\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts\n            \n            component\n            WorkspacesListPage\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/git-integration.service.ts\n            \n            injectable\n            GitIntegrationService\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/member.service.ts\n            \n            injectable\n            MemberService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/workspace.service.ts\n            \n            injectable\n            WorkspaceService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/settings/components/integration-entry/integration-entry.component.ts\n            \n            component\n            IntegrationEntryComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/settings/components/list-group/list-group.component.ts\n            \n            component\n            ListGroupComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/settings/interfaces/session.interface.ts\n            \n            interface\n            UserSession\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-account/settings-account.page.ts\n            \n            component\n            SettingsAccountPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n            \n            component\n            SettingsIntegrationsPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n            \n            interface\n            GitAccountWithUsage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-localization/settings-localization.page.ts\n            \n            component\n            SettingsLocalizationPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-sessions/settings-sessions.page.ts\n            \n            component\n            SettingsSessionsPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings/settings.page.ts\n            \n            component\n            SettingsPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/services/sessions.service.ts\n            \n            injectable\n            SessionsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/components/board-task/board-task.component.ts\n            \n            component\n            BoardTaskComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tasks/components/input-assignee/input-assignee.component.ts\n            \n            component\n            InputAssigneeComponent\n            \n                40 %\n                (11/27)\n            \n        \n        \n            \n                \n                src/app/tasks/components/status-label/status-label.component.ts\n            \n            component\n            StatusLabelComponent\n            \n                42 %\n                (11/26)\n            \n        \n        \n            \n                \n                src/app/tasks/components/view-options/view-options.component.ts\n            \n            component\n            ViewOptionsComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/tasks/dialogs/task/task.dialog.ts\n            \n            component\n            TaskDialog\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/tasks/dialogs/task/task.dialog.ts\n            \n            interface\n            TaskDialogData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/schedule.interface.ts\n            \n            interface\n            SinglePersonSchedule\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/status.interface.ts\n            \n            interface\n            Status\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/status.interface.ts\n            \n            interface\n            StatusWithTasks\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/task.interface.ts\n            \n            interface\n            Task\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/task.interface.ts\n            \n            interface\n            TaskWithAdditionalData\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/tasks/pages/board/board.page.ts\n            \n            component\n            BoardPage\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/tasks/pages/schedule/schedule.page.ts\n            \n            component\n            SchedulePage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tasks/pages/task-list/task-list.page.ts\n            \n            component\n            TaskListPage\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/status-color.pipe.ts\n            \n            pipe\n            StatusColorPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-priority-icon.pipe.ts\n            \n            pipe\n            TaskPriorityIconPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-priority.pipe.ts\n            \n            pipe\n            TaskPriorityPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-type-icon.pipe.ts\n            \n            pipe\n            TaskTypeIconPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-type.pipe.ts\n            \n            pipe\n            TaskTypePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/services/status.service.ts\n            \n            injectable\n            StatusService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/tasks/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/_main.mocks.prod.ts\n            \n            function\n            initMocks\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/_main.mocks.ts\n            \n            function\n            initMocks\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/helpers/response.mock.helper.ts\n            \n            variable\n            NO_CONTENT_PROVIDED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/helpers/response.mock.helper.ts\n            \n            variable\n            SUCCESS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/workspaces.mocks.ts\n            \n            function\n            workspacesMock\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/workspaces.mocks.ts\n            \n            function\n            workspacesSeed\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tests/helpers/mat-dialog-testing-provider.helper.ts\n            \n            variable\n            MatDialogTestingProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers/ng-control-testing-provider.helper.ts\n            \n            class\n            TestNgControl\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tests/helpers/validator-testing.helper.ts\n            \n            function\n            expectToFail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers/validator-testing.helper.ts\n            \n            function\n            expectToPass\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/test.ts\n            \n            variable\n            context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tests/test.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/typings/typings.ts\n            \n            interface\n            FormGroup\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/cdk : ^13.3.0\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/material : ^13.3.0\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @fortawesome/angular-fontawesome : ^0.10.2\n        \n            @fortawesome/fontawesome-svg-core : ^6.1.0\n        \n            @fortawesome/free-brands-svg-icons : ^6.1.0\n        \n            @fortawesome/free-regular-svg-icons : ^6.1.0\n        \n            @fortawesome/free-solid-svg-icons : ^6.1.0\n        \n            color : ^4.2.3\n        \n            concurrently : ^7.1.0\n        \n            dayjs : ^1.11.2\n        \n            miragejs : ^0.1.43\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            ua-parser-js : ^1.0.2\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AlertDialogVariant   (src/.../alert.dialog.ts)\n                        \n                        \n                            RegisterStage   (src/.../register.page.ts)\n                        \n                        \n                            SubTaskType   (src/.../task-type.enum.ts)\n                        \n                        \n                            TaskDialogVariant   (src/.../task.dialog.ts)\n                        \n                        \n                            TaskPriority   (src/.../task-priority.enum.ts)\n                        \n                        \n                            TaskType   (src/.../task-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/dialogs/alert/alert.dialog.ts\n    \n        \n            \n                \n                    \n                        \n                        AlertDialogVariant\n                    \n                \n                    \n                        \n                            Type of the dialog variant. Used to specify what dialog styling should be used.\n\n                        \n                    \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 IMPORTANT\n                            \n                        \n                        \n                            \n                                Value : important\n                            \n                        \n            \n        \n\n    src/app/auth/pages/register/register.page.ts\n    \n        \n            \n                \n                    \n                        \n                        RegisterStage\n                    \n                \n                        \n                            \n                                 IMPORTANT_DATA\n                            \n                        \n                        \n                            \n                                 PERSONAL_DATA\n                            \n                        \n            \n        \n\n    src/app/tasks/enums/task-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        SubTaskType\n                    \n                \n                        \n                            \n                                 SUBTASK\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TaskType\n                    \n                \n                        \n                            \n                                 TASK\n                            \n                        \n                        \n                            \n                                 USER_STORY\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 EPIC\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/tasks/dialogs/task/task.dialog.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDialogVariant\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n                        \n                            \n                                Value : edit\n                            \n                        \n            \n        \n\n    src/app/tasks/enums/task-priority.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskPriority\n                    \n                \n                        \n                            \n                                 HIGHEST\n                            \n                        \n                        \n                            \n                                Value : highest\n                            \n                        \n                        \n                            \n                                 HIGH\n                            \n                        \n                        \n                            \n                                Value : high\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                Value : medium\n                            \n                        \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                Value : low\n                            \n                        \n                        \n                            \n                                 LOWEST\n                            \n                        \n                        \n                            \n                                Value : lowest\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applyFilters   (src/.../apply-filters.operator.ts)\n                        \n                        \n                            catchResponse   (src/.../catch-response.operator.ts)\n                        \n                        \n                            Debug   (src/.../debug.decorator.ts)\n                        \n                        \n                            emailValidator   (src/.../email.validator.ts)\n                        \n                        \n                            expectToFail   (src/.../validator-testing.helper.ts)\n                        \n                        \n                            expectToPass   (src/.../validator-testing.helper.ts)\n                        \n                        \n                            initMocks   (src/.../_main.mocks.prod.ts)\n                        \n                        \n                            initMocks   (src/.../_main.mocks.ts)\n                        \n                        \n                            maxLengthValidator   (src/.../max-length.validator.ts)\n                        \n                        \n                            Page   (src/.../page.decorator.ts)\n                        \n                        \n                            passwordValidator   (src/.../password.validator.ts)\n                        \n                        \n                            requiredValidator   (src/.../required.validator.ts)\n                        \n                        \n                            sameAsValidator   (src/.../same-as.validator.ts)\n                        \n                        \n                            Service   (src/.../service.decorator.ts)\n                        \n                        \n                            ServiceValidator   (src/.../service-validator.decorator.ts)\n                        \n                        \n                            workspacesMock   (src/.../workspaces.mocks.ts)\n                        \n                        \n                            workspacesSeed   (src/.../workspaces.mocks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/operators/apply-filters.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters(filters?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/operators/catch-response.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        catchResponse\n                        \n                    \n                \n            \n            \n                \ncatchResponse(message: string, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/debug.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Debug\n                        \n                    \n                \n            \n            \n                \nDebug()\n                \n            \n\n\n\n\n        \n    \n    src/app/_main/validators/email.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailValidator\n                        \n                    \n                \n            \n            \n                \nemailValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if email is valid\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/tests/helpers/validator-testing.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        expectToFail\n                        \n                    \n                \n            \n            \n                \nexpectToFail(val: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expectToPass\n                        \n                    \n                \n            \n            \n                \nexpectToPass(val: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/mocks/_main.mocks.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initMocks\n                        \n                    \n                \n            \n            \n                \ninitMocks()\n                \n            \n\n\n\n\n            \n                \n                    Production version of mocking initializer\nThis file need to be in file replacements in angular.json\n{\n \"replace\": \"src/mocks/_main.mocks.ts\",\n \"with\": \"src/mocks/_main.mocks.prod.ts\"\n}\n\n                \n            \n        \n    \n    src/mocks/_main.mocks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initMocks\n                        \n                    \n                \n            \n            \n                \ninitMocks()\n                \n            \n\n\n\n\n            \n                \n                    Function to initialize mocking server with all routes\n\n\n                \n            \n        \n    \n    src/app/_main/validators/max-length.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        maxLengthValidator\n                        \n                    \n                \n            \n            \n                \nmaxLengthValidator(length: number)\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if the length is not greater than specyfic number\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/page.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Page\n                        \n                    \n                \n            \n            \n                \nPage()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to mark component or directive as a page.\n(@)Page()\n(@)Component({\n  selector: 'app-example-page',\n  templateUrl: './example.page.html',\n  styleUrls: ['./example.page.scss'],\n})\nexport class CreateWorkspacePage { ... }\n\n                \n            \n        \n    \n    src/app/_main/validators/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if password is valid\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/validators/required.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        requiredValidator\n                        \n                    \n                \n            \n            \n                \nrequiredValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if value was provided\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/validators/same-as.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sameAsValidator\n                        \n                    \n                \n            \n            \n                \nsameAsValidator(compareWith: string, message: string)\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if password is valid\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    compareWith\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/service.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Service\n                        \n                    \n                \n            \n            \n                \nService()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to mark class as a service and store theirs instances in global variable.\n\n\n                \n            \n        \n    \n    src/app/_main/decorators/service-validator.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ServiceValidator\n                        \n                    \n                \n            \n            \n                \nServiceValidator(errorValidationTree: ErrorValidationTree)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorValidationTree\n                                    \n                                                ErrorValidationTree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/mocks/workspaces.mocks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        workspacesMock\n                        \n                    \n                \n            \n            \n                \nworkspacesMock(server: Server)\n                \n            \n\n\n\n\n            \n                \n                    Function to create mocking routes for workspaces.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    server\n                                    \n                                            Server\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Miragejs server\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workspacesSeed\n                        \n                    \n                \n            \n            \n                \nworkspacesSeed(server: Server)\n                \n            \n\n\n\n\n            \n                \n                    Function to seed data into the mocking server\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    server\n                                    \n                                            Server\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Miragejs server\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWorkflow - Clean and powerful work management app.\n\n\n  \n  \n  Workflow is a task management app with multiple independent modules to speed up work.\n    tasks / mail / messages\n  \n\n\n\n  DEVELOPMENT SERVER\n  \n\n\n\n  \n  \n  \n  \n\n\n\n\n\nGetting started\nAt first install node.js and npm from https://nodejs.org/en/. In the second step run command:\nnpm installAnd you are ready to go. It's highly recommended to use yarn instead of npm.\nnpm install -g yarn\nyarn install\n\nDevelopment server\nFor a dev server run:\nyarn startNavigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\n\n\nBuild\nTo build the project run:\nyarn buildThe build artifacts will be stored in the dist/ directory.\n\n\nRunning unit tests\nTo execute the unit tests via Karma run:\nyarn start:test\n\nRunning end-to-end tests\nTo execute the end-to-end tests via Cypress run:\nyarn e2e\n\nBuilding documentation\nTo build documentation via compodoc run:\nyarn start:docsAPI Documentation and repository\nEndpoints documentation is shared using Swagger library here. The repository is in other GitHub account here.\nRecommended Versions\nnode - 16.13.0\nyarn - 1.22.17\nAngular CLI - 13.2.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBasic License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_imports\n\n\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nMainModule->AuthModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nMainModule->DashboardModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nMainModule->SettingsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nMainModule->TasksModule\n\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\nAuthModule -->\n\nChangePasswordPage->AuthModule\n\n\n\n\n\nDeleteAccountPage\n\nDeleteAccountPage\n\nAuthModule -->\n\nDeleteAccountPage->AuthModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\nAuthModule -->\n\nForgotPasswordPage->AuthModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAuthModule -->\n\nLoginPage->AuthModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nAuthModule -->\n\nRegisterPage->AuthModule\n\n\n\n\n\nRestoreAccountPage\n\nRestoreAccountPage\n\nAuthModule -->\n\nRestoreAccountPage->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAddMemberDialog\n\nAddMemberDialog\n\nDashboardModule -->\n\nAddMemberDialog->DashboardModule\n\n\n\n\n\nCreateProjectMembersPage\n\nCreateProjectMembersPage\n\nDashboardModule -->\n\nCreateProjectMembersPage->DashboardModule\n\n\n\n\n\nCreateProjectPage\n\nCreateProjectPage\n\nDashboardModule -->\n\nCreateProjectPage->DashboardModule\n\n\n\n\n\nCreateWorkspacePage\n\nCreateWorkspacePage\n\nDashboardModule -->\n\nCreateWorkspacePage->DashboardModule\n\n\n\n\n\nEditProjectMembersPage\n\nEditProjectMembersPage\n\nDashboardModule -->\n\nEditProjectMembersPage->DashboardModule\n\n\n\n\n\nEditProjectPage\n\nEditProjectPage\n\nDashboardModule -->\n\nEditProjectPage->DashboardModule\n\n\n\n\n\nEditWorkspacePage\n\nEditWorkspacePage\n\nDashboardModule -->\n\nEditWorkspacePage->DashboardModule\n\n\n\n\n\nIntegrationGithubComponent\n\nIntegrationGithubComponent\n\nDashboardModule -->\n\nIntegrationGithubComponent->DashboardModule\n\n\n\n\n\nMemberListComponent\n\nMemberListComponent\n\nDashboardModule -->\n\nMemberListComponent->DashboardModule\n\n\n\n\n\nProjectsListPage\n\nProjectsListPage\n\nDashboardModule -->\n\nProjectsListPage->DashboardModule\n\n\n\n\n\nViewOptionsComponent\n\nViewOptionsComponent\n\nDashboardModule -->\n\nViewOptionsComponent->DashboardModule\n\n\n\n\n\nWorkspacesListPage\n\nWorkspacesListPage\n\nDashboardModule -->\n\nWorkspacesListPage->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nGitIntegrationService\n\nGitIntegrationService\n\nDashboardModule -->\n\nGitIntegrationService->DashboardModule\n\n\n\n\n\nEmailsRoutingModule\n\nEmailsRoutingModule\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nEmailsRoutingModule->EmailsModule\n\n\n\n\n\nMessagesRoutingModule\n\nMessagesRoutingModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nMessagesRoutingModule->MessagesModule\n\n\n\n\n\nIntegrationEntryComponent\n\nIntegrationEntryComponent\n\nSettingsModule -->\n\nIntegrationEntryComponent->SettingsModule\n\n\n\n\n\nListGroupComponent\n\nListGroupComponent\n\nSettingsModule -->\n\nListGroupComponent->SettingsModule\n\n\n\n\n\nSettingsAccountPage\n\nSettingsAccountPage\n\nSettingsModule -->\n\nSettingsAccountPage->SettingsModule\n\n\n\n\n\nSettingsIntegrationsPage\n\nSettingsIntegrationsPage\n\nSettingsModule -->\n\nSettingsIntegrationsPage->SettingsModule\n\n\n\n\n\nSettingsLocalizationPage\n\nSettingsLocalizationPage\n\nSettingsModule -->\n\nSettingsLocalizationPage->SettingsModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\nSettingsModule -->\n\nSettingsPage->SettingsModule\n\n\n\n\n\nSettingsSessionsPage\n\nSettingsSessionsPage\n\nSettingsModule -->\n\nSettingsSessionsPage->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\nBoardPage\n\nBoardPage\n\nTasksModule -->\n\nBoardPage->TasksModule\n\n\n\n\n\nBoardTaskComponent\n\nBoardTaskComponent\n\nTasksModule -->\n\nBoardTaskComponent->TasksModule\n\n\n\n\n\nInputAssigneeComponent\n\nInputAssigneeComponent\n\nTasksModule -->\n\nInputAssigneeComponent->TasksModule\n\n\n\n\n\nSchedulePage\n\nSchedulePage\n\nTasksModule -->\n\nSchedulePage->TasksModule\n\n\n\n\n\nStatusColorPipe\n\nStatusColorPipe\n\nTasksModule -->\n\nStatusColorPipe->TasksModule\n\n\n\n\n\nStatusLabelComponent\n\nStatusLabelComponent\n\nTasksModule -->\n\nStatusLabelComponent->TasksModule\n\n\n\n\n\nTaskDialog\n\nTaskDialog\n\nTasksModule -->\n\nTaskDialog->TasksModule\n\n\n\n\n\nTaskListPage\n\nTaskListPage\n\nTasksModule -->\n\nTaskListPage->TasksModule\n\n\n\n\n\nTaskPriorityIconPipe\n\nTaskPriorityIconPipe\n\nTasksModule -->\n\nTaskPriorityIconPipe->TasksModule\n\n\n\n\n\nTaskPriorityPipe\n\nTaskPriorityPipe\n\nTasksModule -->\n\nTaskPriorityPipe->TasksModule\n\n\n\n\n\nTaskTypeIconPipe\n\nTaskTypeIconPipe\n\nTasksModule -->\n\nTaskTypeIconPipe->TasksModule\n\n\n\n\n\nTaskTypePipe\n\nTaskTypePipe\n\nTasksModule -->\n\nTaskTypePipe->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    55 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    29 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        77 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            color   (src/.../color.interface.ts)\n                        \n                        \n                            Filter   (src/.../filters.interface.ts)\n                        \n                        \n                            FilterType   (src/.../filters.interface.ts)\n                        \n                        \n                            Schedule   (src/.../schedule.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/interfaces/color.interface.ts\n    \n    \n        \n            \n                \n                    \n                    color\n                \n            \n            \n                \n                            number\n\n                \n            \n        \n    \n    src/app/_main/interfaces/filters.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                            FilterCheckbox\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/tasks/interfaces/schedule.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Schedule\n                \n            \n            \n                \n                            SinglePersonSchedule[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            MatDialogTestingProvider   (src/.../mat-dialog-testing-provider.helper.ts)\n                        \n                        \n                            ngModuleConfig   (src/.../_main.module.ts)\n                        \n                        \n                            NO_CONTENT_PROVIDED   (src/.../response.mock.helper.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            SUCCESS   (src/.../response.mock.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tests/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('../', true, /\\.spec\\.ts$/)\n                    \n                \n\n            \n                \n                    Context for searching for tests\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n            \n                \n                    Context builder form karma tests\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Whether the application is running in production mode.\n   */\n  production: false,\n\n  /**\n   * API URL for the backend.\n   */\n  apiURL: '/api',\n\n  /**\n   * Whether to disable console logging.\n   */\n  disableConsoleLog: false,\n}\n                    \n                \n\n            \n                \n                    Global environment configuration object, replaced in configurations other than development. Stores build specific data.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiURL: '/api',\n  disableConsoleLog: true,\n}\n                    \n                \n\n            \n                \n                    Variant of global environment file for production.\n\n                \n            \n\n        \n    \n\n    src/tests/helpers/mat-dialog-testing-provider.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MatDialogTestingProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  MatDialogModule,\n  { provide: MAT_DIALOG_DATA, useValue: {} },\n  { provide: MatDialogRef, useValue: {} },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/_main/_main.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ngModuleConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  imports: [\n    /*=============================================\n    =             Local dependencies              =\n    =============================================*/\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n    ObserversModule,\n  ],\n  importExports: [\n    /*=============================================\n      =                Dependencies                 =\n      =============================================*/\n    DragDropModule,\n    PlatformModule,\n    OverlayModule,\n\n    /*=============================================\n      =              Material modules               =\n      =============================================*/\n    MatDialogModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n\n    /*=============================================\n      =              External modules               =\n      =============================================*/\n    FontAwesomeModule,\n  ],\n  declarations: [\n    /*=============================================\n    =         Local custom components             =\n    =============================================*/\n  ],\n  exportDeclarations: [\n    /*=============================================\n    =         Exported custom components          =\n    =============================================*/\n    InputComponent,\n    ButtonComponent,\n    ValidationErrorPipe,\n    AlertDialog,\n    IconComponent,\n    FocusInitialDirective,\n    SidebarNavigationComponent,\n    NavElementComponent,\n    NavElementWorkspaceComponent,\n    UpperNavigationComponent,\n    SelectComponent,\n    OptionComponent,\n    MainViewComponent,\n    TextareaComponent,\n    CheckboxComponent,\n    CardComponent,\n    ClickStopPropagationDirective,\n    InputDateTimeComponent,\n    LetDirective,\n    FiltersComponent,\n    SnackbarComponent,\n    SnackbarOutletComponent,\n  ],\n  providers: [\n    DialogService,\n    ApiService,\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    MatCheckboxModule,\n    MatDatepickerModule,\n  ],\n}\n                    \n                \n\n            \n                \n                    Main module configuration object\n\n                \n            \n\n        \n    \n\n    src/mocks/helpers/response.mock.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NO_CONTENT_PROVIDED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 400,\n  body: {\n    message: 'No data provided',\n  },\n}\n                    \n                \n\n            \n                \n                    Object to mock no content provided response. Mainly used when request checks\nfor data in body, but nothing is provided.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SUCCESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  body: {\n    message: 'Success',\n  },\n}\n                    \n                \n\n            \n                \n                    Object to mock success response. Used often to notify app that request was\nsuccessful.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture.html":{"url":"additional-documentation/architecture.html","title":"additional-page - Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nArchitecture of the application is maintained with base Angular methodologies. For more information's about Angular methodologies see Angular documentation.\nNaming conventions\nEach file should be named using only lower case letters and  - to replace spaces. Filename should be .. where  is the name of the file (ex. hello-world),  is the type of the file (ex. module or component) and the  is the extension of the file (ex. .ts).\nSingle responsibility principle\nEach file should have only one responsibility. For example, src/app/hello-world/hello-world.module.ts should have only one responsibility to create the module. For more information's about the Single Responsibility Principle see Wikipedia.\nModules\nApp is splitter into separated modules. Each module has it's own folder in src/app directory. In this dedicated space each module has it's own .module.ts file and optionally .routing.ts file.\nClasses\nIf project is using some additional classes logic like class grouped utility functions or abstract control classes, then they should be placed in dedicated folder in classes/ directory.\nComponents\nComponents are the main building blocks of the application. They are the most important part of the architecture. Each component has it's own folder in components/ directory. In this dedicated space each component has it's own .component.ts file.\nDecorators\nDecorators are used to add additional functionality to the components. For example, @Component decorator is used to mark the component as a component. Each decorator has it's own file in decorators/ directory. In this dedicated space each pipe has it's own .decorator.ts file. For more information's about decorators see Angular documentation.\nDialogs\nDialogs are used to display information to the user. Dialogs are located in dialogs/ directory. For more information's about dialogs see Angular documentation.\nDirectives\nDirectives are used to add additional functionality to the components. For example, @Directive decorator is used to mark the directive as a directive. Each decorator has it's own file in directives/ directory. In this dedicated space each directive has it's own .directive.ts file. For more information's about directives see Angular documentation.\nEnums\nEnums are used to define the values of the enumeration. Each enumerable value has it's own enum.ts file in enums/ directory.\nGuards\nGuards are used to protect routes from unauthorized access. Each guard has it's own folder in guards/ directory. In this dedicated space each guard has it's own .guard.ts file. For more information's about guards see Angular documentation.\nInterfaces\nInterfaces are used to structure the code. They are used to describe the shape of the object. For more information's about interfaces see Angular documentation.\nPipes\nPipes are used to transform data. Each pipe has it's own folder in pipes/ directory. In this dedicated space each pipe has it's own .pipe.ts file. For more information's about pipes see Angular documentation.\nServices\nServices are used to share data between components. Each service has it's own .service.ts file located in services/ directory in one of the modules.\nValidators\nValidators are used to validate the data (mainly in forms). Each validator has it's own .validator.ts file located in validators/ directory in one of the modules.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/localization.html":{"url":"additional-documentation/localization.html","title":"additional-page - Localization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocalization\nApp is localized using angular/localize. At the current stage of the project app is translated in:\nde-DE -> German (Germany)\nen-GB -> English (United Kingdom)\nen-US -> English (United States, Default app language)\nes-ES -> Spanish (Spain)\nit-IT -> Italian (Italy)\npl-PL -> Polish (Poland)\nuk-UA -> Ukrainian (Ukraine)Configuration\nEach language is listed in angular.json file in i18n section.\nFor polish language for example:\n\"i18n\": {\n  ...\n  \"locales\": {\n    \"pl-PL\": {\n      \"translation\": \"src/locales/messages.pl-PL.xlf\"\n    },\n    ...\n  }\n}Languages also requires separated file in src/locales folder to be created before build.\nIn the future adding new language will need some more work to do. For example adding new element in language selection list.\nMaking translations\nBefore translating strings first what you need to do is to extract all translatable strings from the app. To do this run the command:\nyarn extract:i18nEach language translations are located in src/locales folder, for example src/locales/messages.pl-PL.xlf file. This files can be edited using any text editor, but more convenient is to use external tools.\nIn Visual Studio Code there is an extension named Angular I18n Editor. This extension is used to make translations in more human readable way. It serves an UI interface to edit translations. To open this extension press F1 and search for Angular I18n Editor: Open command.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/continuos-integration.html":{"url":"additional-documentation/continuos-integration.html","title":"additional-page - Continuos integration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCI/CD pipeline\nContinuos integration was resolved using tool named GitHub Actions. Actions are located in .github/workflows/ directory. At this moment there is only one pipeline to deploy application named deploy.yml. This action after every push to the master branch rebuild the application and deploy it to the production environment using ftp server. This action also build documentation page and runs tests. There is also included a small script to create badges to use them in Readme.md and documentation files. This file is named badge-generator.js and is located in the root directory.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
