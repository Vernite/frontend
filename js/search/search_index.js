var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddMemberDialog.html",[0,0.226,1,0.989]],["body/components/AddMemberDialog.html",[0,0.314,1,1.51,2,1.185,3,0.071,4,0.06,5,0.787,6,0.87,7,0.855,8,0.855,9,0.055,10,7.868,11,6.069,12,3.429,13,1.636,14,2.51,15,0.712,16,1.736,17,1.949,18,1.759,19,1.561,20,1.307,21,1.165,22,5.891,23,1.165,24,4.994,25,0.189,26,0.52,27,1.291,28,3.138,29,2.547,30,4.544,31,4.342,32,0.69,33,6.472,34,4.713,35,5.561,36,2.757,37,0.843,38,3.153,39,5.911,40,3.867,41,4.576,42,5.062,43,4.992,44,0.86,45,3.848,46,0.474,47,0.007,48,0.582,49,0.309,50,0.381,51,3.848,52,0.812,53,1.321,54,3.848,55,3.848,56,3.848,57,1.625,58,3.852,59,3.848,60,0.676,61,0.579,62,1.561,63,3.147,64,2.218,65,2.562,66,3.069,67,3.848,68,2.655,69,3.848,70,3.848,71,0.418,72,2.645,73,0.373,74,1.228,75,2.527,76,2.251,77,1.264,78,2.176,79,2.946,80,2.946,81,1.036,82,2.527,83,1.047,84,2.946,85,0.095,86,0.6,87,3.29,88,1.127,89,3,90,0.099,91,1.072,92,2.946,93,1.494,94,2.946,95,2.782,96,2.946,97,4.292,98,2.782,99,4.292,100,2.782,101,2.946,102,2.946,103,1.931,104,1.931,105,2.176,106,0.61,107,3.429,108,2.645,109,3.07,110,1.185,111,1.376,112,1.931,113,1.103,114,1.228,115,0.855,116,1.205,117,1.398,118,0.712,119,1.588,120,0.855,121,1.469,122,0.8,123,0.827,124,0.814,125,0.855,126,0.8,127,0.855,128,0.814,129,0.827,130,0.855,131,0.827,132,0.855,133,0.827,134,0.855,135,0.8,136,0.827,137,0.855,138,0.827,139,0.855,140,0.841,141,0.8,142,1.264,143,0.936,144,1.246,145,0.8,146,1.246,147,0.787,148,1.963,149,0.8,150,0.654,151,0.855,152,0.827,153,1.246,154,0.8,155,1.307,156,0.8,157,0.8,158,0.827,159,0.855,160,0.8,161,0.855,162,0.827,163,0.748,164,1.375,165,0.827,166,0.855,167,0.814,168,1.165,169,0.855,170,0.827,171,0.855,172,0.827,173,0.814,174,0.855,175,0.814,176,0.855,177,0.814,178,0.855,179,0.8,180,0.827,181,0.814,182,0.92,183,0.855,184,0.8,185,0.855,186,0.814,187,0.814,188,0.855,189,0.814,190,1.469,191,0.774,192,0.855,193,0.827,194,1.246,195,0.855,196,0.827,197,0.855,198,0.827,199,0.855,200,0.8,201,0.814,202,0.8,203,0.855,204,0.8,205,0.841,206,1.127,207,0.8,208,0.8,209,0.827,210,0.855,211,0.8,212,1.659,213,0.787,214,0.855,215,0.8,216,0.814,217,0.8,218,0.8,219,0.855,220,0.827,221,0.855,222,1.246,223,0.827,224,0.855,225,0.827,226,0.855,227,0.814,228,0.855,229,0.787,230,1.002,231,0.8,232,0.827,233,0.855,234,0.827,235,0.855,236,1.146,237,1.445,238,1.246,239,0.8,240,0.841,241,0.688,242,0.774,243,0.814,244,0.841,245,0.814,246,0.855,247,0.814,248,0.855,249,0.8,250,0.855,251,0.814,252,0.841,253,0.855,254,0.004,255,0.004]],["title/interfaces/AddMemberDialogData.html",[39,3.643,86,0.741]],["body/interfaces/AddMemberDialogData.html",[0,0.363,1,1.262,3,0.112,4,0.095,9,0.086,10,5.41,11,4.172,12,5.41,13,1.772,14,2.901,16,1.049,17,1.181,18,1.627,19,1.305,20,1.201,21,1.262,22,5.41,23,1.262,24,5.41,25,0.298,26,0.709,27,1.253,28,2.623,29,2.129,30,4.172,31,3.987,33,5.41,34,3.551,35,4.648,36,2.304,37,0.914,39,6.405,40,3.551,41,4.815,42,4.648,43,5.253,47,0.007,49,0.325,50,0.756,58,4.172,62,1.643,63,3.638,64,2.402,65,2.962,66,3.547,68,2.877,71,0.465,72,4.172,73,0.588,74,1.938,75,3.987,76,3.551,77,1.161,78,3.433,79,4.648,80,4.648,81,1.123,82,3.987,83,1.652,84,4.648,85,0.13,86,0.946,87,4.247,88,1.858,89,3.874,90,0.156,91,1.462,92,4.648,93,1.89,94,4.648,95,4.389,96,4.648,97,5.852,98,4.389,99,5.852,100,4.389,101,4.648,102,4.648,103,3.047,104,3.047,105,3.433,106,0.963,107,5.41,108,4.172,254,0.005,255,0.005,256,1.938]],["title/components/AlertDialog.html",[0,0.226,122,0.989]],["body/components/AlertDialog.html",[0,0.355,1,0.741,2,1.119,3,0.066,4,0.056,5,0.728,6,0.805,7,0.792,8,0.792,9,0.051,15,0.659,16,1.73,17,1.942,18,0.693,19,1.138,20,1.943,21,1.101,23,1.101,25,0.175,26,0.491,27,1.118,28,3.849,32,0.652,34,4.375,37,1.053,38,2.918,40,4.093,41,4.409,44,0.803,46,0.439,47,0.007,48,0.563,49,0.334,50,0.352,52,0.876,53,0.963,57,2.237,58,3.639,60,1.427,61,0.951,71,0.26,72,2.448,73,0.345,75,2.339,76,2.083,77,1.013,81,0.659,85,0.108,86,0.825,90,0.092,91,0.681,108,2.448,111,1.273,115,0.792,116,1.138,117,1.336,118,0.659,119,1.53,120,0.792,121,1.405,122,1.455,123,1.685,124,0.753,125,0.792,126,0.741,127,0.792,128,0.753,129,0.766,130,0.792,131,0.766,132,0.792,133,0.766,134,0.792,135,0.741,136,0.766,137,0.792,138,0.766,139,0.792,140,0.779,141,0.741,142,1.209,143,0.884,144,1.177,145,0.741,146,1.177,147,0.728,148,1.927,149,0.741,150,0.605,151,0.792,152,0.766,153,1.177,154,0.741,155,1.25,156,0.741,157,0.741,158,0.766,159,0.792,160,0.741,161,0.792,162,0.766,163,0.693,164,1.314,165,0.766,166,0.792,167,0.753,168,1.101,169,0.792,170,0.766,171,0.792,172,0.766,173,0.753,174,0.792,175,0.753,176,0.792,177,0.753,178,0.792,179,0.741,180,0.766,181,0.753,182,0.869,183,0.792,184,0.741,185,0.792,186,0.753,187,0.753,188,0.792,189,0.753,190,1.405,191,0.716,192,0.792,193,0.766,194,1.177,195,0.792,196,0.766,197,0.792,198,0.766,199,0.792,200,0.741,201,0.753,202,0.741,203,0.792,204,0.741,205,0.779,206,1.065,207,0.741,208,0.741,209,0.766,210,0.792,211,0.741,212,1.608,213,0.728,214,0.792,215,0.741,216,0.753,217,0.741,218,0.741,219,0.792,220,0.766,221,0.792,222,1.177,223,0.766,224,0.792,225,0.766,226,0.792,227,0.753,228,0.792,229,0.728,230,0.947,231,0.741,232,0.766,233,0.792,234,0.766,235,0.792,236,1.083,237,1.381,238,1.177,239,0.741,240,0.779,241,0.637,242,0.716,243,0.753,244,0.779,245,0.753,246,0.792,247,0.753,248,0.792,249,0.741,250,0.792,251,0.753,252,0.779,253,0.792,254,0.003,255,0.003,257,2.918,258,1.237,259,4.718,260,2.898,261,3.248,262,4.718,263,3.477,264,5.632,265,4.718,266,5.867,267,5.253,268,4.911,269,4.054,270,5.295,271,5.726,272,5.295,273,3.336,274,5.058,275,3.358,276,5.178,277,4.054,278,1.911,279,5.632,280,4.839,281,5.295,282,2.174,283,5.178,284,2.795,285,3.562,286,6.235,287,2.095,288,6.235,289,5.733,290,4.338,291,6.235,292,3.562,293,1.601,294,4.718,295,4.338,296,4.096,297,4.338,298,3.562,299,4.718,300,2.448,301,3.248,302,4.054,303,4.338,304,2.16,305,3.174,306,2.727,307,4.054,308,1.016,309,2.575,310,2.458,311,1.97,312,2.575,313,2.448,314,2.095,315,3.174,316,3.174,317,3.174,318,5.295,319,5.295,320,5.295,321,6.998]],["title/interfaces/AlertDialogData.html",[86,0.741,271,3.643]],["body/interfaces/AlertDialogData.html",[0,0.37,3,0.097,4,0.082,9,0.074,16,0.905,17,1.018,20,1.971,21,1.089,23,1.089,25,0.257,26,0.645,27,0.991,28,3.975,34,4.559,37,1.045,40,4.063,41,4.376,47,0.007,49,0.392,50,0.93,52,0.777,58,3.598,60,1.37,71,0.341,72,3.598,73,0.507,75,3.439,76,3.063,85,0.133,86,1.215,90,0.135,91,1.001,108,3.598,111,2.483,122,1.089,123,1.784,254,0.005,255,0.005,256,1.671,257,4.29,258,1.224,259,4.666,260,3.608,261,4.205,262,4.666,263,3.439,264,4.666,265,4.666,266,6.418,267,5.23,268,5.119,271,5.968,273,3.299,274,5.021,275,2.782,276,4.29,277,4.009,278,1.583,279,4.666,280,4.009,282,1.801,283,4.29,284,2.316,286,6.189,287,2.072,288,6.189,289,5.691,290,4.29,291,6.189,293,1.583,294,4.666,295,4.29,296,5.039,297,4.29,299,4.666,300,3.598,301,4.121,302,5.968,303,6.386,304,3.175,305,6.189,306,5.318,307,6.356,308,1.386,309,5.021,310,3.853,311,3.088,312,6.001,313,5.705,314,2.748,315,4.666,316,4.666,317,4.666]],["title/injectables/ApiService.html",[322,1.77,323,2.606]],["body/injectables/ApiService.html",[3,0.072,4,0.061,9,0.095,25,0.192,26,0.526,27,1.349,32,0.698,37,1.004,44,0.847,46,1.128,47,0.007,48,0.63,49,0.393,50,0.827,52,1.015,60,1.173,61,0.588,68,3.122,71,0.381,73,0.379,85,0.067,90,0.1,91,1.276,106,1.285,150,1.243,254,0.004,255,0.004,258,1.953,293,1.182,308,1.399,314,3.625,322,2.109,323,3.106,324,2.018,325,3.91,326,3.347,327,4.646,328,4.972,329,6.672,330,6.521,331,6.521,332,7.318,333,5.683,334,3.91,335,7.629,336,5.671,337,3.897,338,5.671,339,5.123,340,7.78,341,3.91,342,6.204,343,8.087,344,6.763,345,8.087,346,4.74,347,8.087,348,8.087,349,6.949,350,6.561,351,5.671,352,3.91,353,5.671,354,3.91,355,5.671,356,3.91,357,5.671,358,3.91,359,5.671,360,3.91,361,4.009,362,5.671,363,2.846,364,5.671,365,4.342,366,5.466,367,5.053,368,2.994,369,3.484,370,3.484,371,3.91,372,3.91,373,2.018,374,1.91,375,1.32,376,3.91,377,3.91,378,3.204,379,3.484,380,3.484,381,3.91,382,3.91,383,3.91,384,3.91,385,3.91]],["title/components/AppComponent.html",[0,0.226,124,1.006]],["body/components/AppComponent.html",[0,0.393,1,0.965,2,1.354,3,0.086,4,0.072,5,0.949,6,1.049,7,1.032,8,1.032,9,0.066,15,0.858,16,1.748,17,1.964,18,0.903,19,1.376,20,0.918,21,1.331,23,1.331,25,0.228,26,0.594,27,1.046,37,1.103,44,0.634,47,0.006,48,0.595,49,0.198,60,0.816,61,0.699,71,0.228,73,0.45,77,1.224,81,0.858,85,0.079,90,0.119,113,1.331,114,1.482,115,1.032,116,1.376,117,1.549,118,0.858,119,1.812,120,1.032,121,1.629,122,0.965,123,0.998,124,1.67,125,1.032,126,0.965,127,1.032,128,0.981,129,0.998,130,1.032,131,0.998,132,1.032,133,0.998,134,1.032,135,0.965,136,0.998,137,1.032,138,0.998,139,1.032,140,1.015,141,0.965,142,1.402,143,1.069,144,1.423,145,0.965,146,1.423,147,0.949,148,2.043,149,0.965,150,0.789,151,1.032,152,0.998,153,1.423,154,0.965,155,1.449,156,0.965,157,0.965,158,0.998,159,1.032,160,0.965,161,1.032,162,0.998,163,0.903,164,1.524,165,0.998,166,1.032,167,0.981,168,1.331,169,1.032,170,0.998,171,1.032,172,0.998,173,0.981,174,1.032,175,0.981,176,1.032,177,0.981,178,1.032,179,0.965,180,0.998,181,0.981,182,1.051,183,1.032,184,0.965,185,1.032,186,0.981,187,1.752,188,1.032,189,0.981,190,1.629,191,0.934,192,1.032,193,0.998,194,1.423,195,1.032,196,0.998,197,1.032,198,0.998,199,1.032,200,0.965,201,0.981,202,0.965,203,1.032,204,0.965,205,1.015,206,1.288,207,0.965,208,0.965,209,0.998,210,1.032,211,0.965,212,1.782,213,0.949,214,1.032,215,0.965,216,0.981,217,0.965,218,0.965,219,1.032,220,0.998,221,1.032,222,1.423,223,0.998,224,1.032,225,0.998,226,1.032,227,0.981,228,1.032,229,0.949,230,1.145,231,0.965,232,0.998,233,1.032,234,0.998,235,1.032,236,1.309,237,1.602,238,1.423,239,0.965,240,1.015,241,1.31,242,0.934,243,0.981,244,1.015,245,0.981,246,1.032,247,0.981,248,1.032,249,0.965,250,1.032,251,0.981,252,1.015,253,1.032,254,0.004,255,0.004,258,1.085,260,3.212,282,1.597,308,0.674,374,3.128,386,4.643,387,6.403,388,6.403,389,2.767,390,4.629,391,7.33,392,6.403,393,6.403,394,5.706,395,4.643,396,4.643,397,1.628,398,1.868,399,2.053,400,2.396]],["title/modules/AppModule.html",[401,1.965,402,3.643]],["body/modules/AppModule.html",[3,0.123,4,0.104,9,0.095,47,0.007,71,0.464,73,0.648,85,0.114,90,0.172,124,2.086,179,1.967,180,1.439,254,0.005,255,0.005,402,7.582,403,2.892,404,4.591,405,5.964,406,5.964,407,5.964,408,5.964,409,6.839,410,5.351,411,4.922,412,3.556,413,3.106,414,6.693,415,5.114,416,3.768,417,8.118,418,4.074,419,6.651,420,5.125,421,5.483,422,6.693,423,6.693,424,6.651,425,5.964,426,5.125,427,4.058]],["title/modules/AppRoutingModule.html",[401,1.965,409,3.439]],["body/modules/AppRoutingModule.html",[0,0.381,3,0.121,4,0.103,9,0.093,47,0.007,64,2.601,71,0.454,73,0.637,85,0.112,90,0.169,93,1.486,179,1.67,180,1.726,186,1.698,241,1.175,254,0.005,255,0.005,403,2.841,409,5.805,416,3.051,418,4.03,424,6.579,425,5.858,428,6.575,429,5.059,430,4.903,431,2.061,432,6.579,433,6.575,434,6.575,435,6.575,436,5.386,437,5.858,438,5.935,439,5.386,440,8.046,441,6.575,442,6.575,443,5.858,444,5.386,445,6.575,446,6.575,447,4.753,448,6.575,449,6.575,450,6.575,451,6.575,452,6.575,453,6.575,454,5.858,455,6.575,456,6.575,457,4.142]],["title/modules/AuthModule.html",[401,1.965,458,3.643]],["body/modules/AuthModule.html",[3,0.115,4,0.098,9,0.089,47,0.007,71,0.478,73,0.606,74,1.995,85,0.106,90,0.161,135,1.935,149,1.935,160,1.935,184,1.935,202,1.935,204,1.935,254,0.005,255,0.005,403,2.701,404,4.403,410,5.263,411,4.72,412,3.322,413,2.902,415,4.904,416,3.613,418,3.907,426,4.787,458,7.649,459,5.57,460,5.57,461,5.57,462,6.727,463,6.252,464,5.112,465,3.939,466,5.627,467,6.252,468,5.57,469,5.122,470,6.937,471,5.57,472,5.122,473,5.627,474,5.57,475,5.122,476,5.57,477,5.57,478,5.57,479,5.122]],["title/modules/AuthRoutingModule.html",[401,1.965,462,3.439]],["body/modules/AuthRoutingModule.html",[0,0.451,3,0.12,4,0.101,9,0.092,47,0.007,62,1.394,71,0.471,73,0.628,85,0.11,90,0.167,93,1.466,135,1.656,149,1.656,150,1.102,160,1.656,182,1.065,184,1.792,202,1.656,204,1.656,205,1.418,206,1.601,254,0.005,255,0.005,284,2.869,401,2.68,403,2.803,412,3.446,416,3.011,418,3.997,429,5.018,430,5.217,431,2.033,438,5.993,439,6.525,457,4.087,462,5.757,468,5.78,469,5.314,470,7.096,471,5.78,472,5.314,473,5.757,474,5.78,475,5.314,476,5.78,477,5.78,478,5.78,479,5.314,480,6.486,481,4.26,482,4.966,483,4.966,484,4.232,485,4.458]],["title/injectables/AuthService.html",[322,1.77,486,2.691]],["body/injectables/AuthService.html",[3,0.094,4,0.08,9,0.073,25,0.251,27,1.418,32,0.842,37,0.77,44,0.926,46,1.086,47,0.007,48,0.698,49,0.405,50,0.873,52,1.036,64,3.667,71,0.378,73,0.495,85,0.087,90,0.131,106,1.485,254,0.004,255,0.004,278,2.067,287,2.024,293,1.546,308,1.414,322,2.543,323,4.831,324,2.639,326,2.825,373,2.639,374,2.498,375,1.726,481,5.059,482,6.297,483,5.898,484,4.975,486,3.867,487,5.114,488,7.328,489,6.838,490,8.224,491,8.224,492,6.311,493,6.093,494,3.101,495,5.114,496,5.114,497,6.838,498,5.114,499,5.945,500,5.114,501,5.114,502,5.347,503,5.114,504,5.114,505,5.114,506,5.114,507,5.114,508,5.114,509,5.114,510,6.838,511,5.114,512,3.697,513,3.515,514,4.67,515,4.22,516,5.114,517,4.723,518,6.864,519,5.114,520,4.557,521,5.114,522,5.114,523,5.114,524,5.114,525,5.114,526,5.114,527,4.557]],["title/components/BoardPage.html",[0,0.226,126,0.989]],["body/components/BoardPage.html",[0,0.234,1,0.502,2,0.828,3,0.045,4,0.038,5,0.494,6,0.546,7,0.537,8,0.537,9,0.034,13,1.143,14,1.874,15,0.447,16,1.694,17,1.908,18,0.47,19,0.842,20,0.478,21,0.814,23,0.814,25,0.119,26,0.363,27,1.273,30,5.033,32,0.482,36,2.155,37,0.589,44,0.883,46,0.768,47,0.007,48,0.57,49,0.345,50,0.696,52,0.786,53,1.032,60,1.236,61,1.058,62,0.842,68,2.603,71,0.42,73,0.234,77,0.749,81,1.05,83,0.658,85,0.041,87,1.095,88,1.522,89,2.759,90,0.062,91,1.447,93,1.655,106,0.989,109,2.704,110,2.164,112,1.213,113,1.789,114,1.991,115,0.537,116,0.842,117,1.412,118,0.447,119,1.654,120,0.537,121,1.097,122,0.502,123,1.061,124,0.511,125,0.537,126,1.18,127,0.537,128,0.511,129,1.709,130,0.537,131,0.52,132,0.537,133,0.52,134,0.537,135,0.502,136,0.52,137,0.537,138,0.52,139,0.537,140,0.528,141,0.502,142,0.944,143,1.115,144,0.87,145,0.502,146,0.87,147,0.494,148,1.728,149,0.502,150,0.411,151,0.537,152,0.52,153,0.87,154,0.502,155,0.976,156,0.502,157,0.502,158,0.52,159,0.537,160,0.502,161,0.537,162,0.52,163,0.47,164,1.026,165,0.52,166,0.537,167,0.511,168,0.814,169,0.537,170,0.52,171,0.537,172,0.52,173,0.511,174,0.537,175,0.511,176,0.537,177,0.511,178,0.537,179,0.502,180,0.52,181,0.511,182,0.932,183,0.537,184,0.502,185,0.537,186,0.511,187,0.511,188,0.537,189,0.511,190,1.097,191,0.486,192,0.537,193,0.52,194,0.87,195,0.537,196,0.52,197,0.537,198,0.52,199,0.537,200,0.502,201,0.511,202,0.502,203,0.537,204,0.502,205,0.528,206,0.787,207,0.502,208,0.502,209,0.52,210,0.537,211,0.502,212,1.341,213,0.494,214,0.537,215,0.502,216,0.511,217,0.502,218,0.502,219,0.537,220,0.52,221,0.537,222,0.87,223,0.52,224,0.537,225,0.52,226,0.537,227,0.511,228,0.537,229,0.801,230,1.531,231,0.502,232,0.52,233,0.537,234,0.52,235,0.537,236,0.801,237,1.241,238,0.87,239,0.502,240,0.528,241,0.432,242,0.486,243,0.511,244,0.528,245,0.511,246,0.537,247,0.511,248,0.537,249,0.502,250,0.537,251,0.511,252,0.528,253,0.537,254,0.003,255,0.003,260,1.913,261,1.818,282,0.831,296,1.324,308,1.021,311,1.457,312,2.831,313,2.691,333,2.792,339,1.247,397,0.847,398,2.137,399,1.732,431,0.758,528,2.417,529,4.045,530,4.937,531,3.916,532,5.471,533,5.95,534,5.471,535,5.471,536,4.385,537,4.937,538,4.937,539,5.058,540,3.916,541,3.916,542,3.916,543,4.347,544,5.677,545,1.587,546,3.262,547,4.113,548,4.833,549,3.347,550,3.629,551,4.263,552,3.916,553,3.916,554,5.677,555,2.417,556,1.747,557,3.916,558,4.045,559,2.417,560,2.417,561,3.916,562,2.417,563,1.465,564,3.916,565,2.417,566,4.937,567,2.417,568,2.417,569,2.417,570,2.417,571,2.417,572,2.417,573,2.417,574,2.417,575,2.417,576,2.417,577,2.417,578,2.417,579,3.569,580,2.417,581,2.417,582,2.792,583,3.78,584,3.208,585,2.417,586,2.417,587,3.916,588,2.154,589,1.414,590,1.587,591,1.523,592,1.324,593,1.587,594,1.851,595,1.044,596,1.457,597,0.998,598,1.044,599,2.417,600,2.417,601,2.417,602,2.831,603,1.587,604,2.154,605,2.154,606,1.747,607,2.417,608,2.417,609,1.367,610,2.291,611,1.851,612,2.154,613,2.417,614,2.417,615,3.78,616,2.417,617,2.417,618,3.916,619,2.154,620,2.417,621,2.154,622,1.98,623,2.417,624,2.417,625,2.417,626,2.417,627,2.417,628,2.417,629,3.916,630,2.417,631,2.417,632,2.417,633,2.417,634,5.677,635,2.417,636,3.49,637,3.916,638,3.916,639,4.937,640,5.677,641,2.154,642,2.417,643,2.417,644,2.417,645,2.417,646,2.417,647,2.417,648,2.417,649,3.393,650,0.956,651,2.417,652,3.78,653,4.937,654,2.412,655,2.154,656,3.916,657,3.242,658,3.208,659,3.208,660,3.916,661,1.851,662,1.98,663,1.747,664,2.417,665,3.208,666,3.78,667,3.242,668,2.417,669,2.417,670,2.417,671,1.851,672,1.851,673,1.465,674,1.98,675,2.417,676,1.523,677,2.417,678,2.417,679,2.417,680,2.417,681,3.208,682,3.208,683,2.999,684,2.291,685,1.976,686,2.448,687,2.616,688,2.571,689,2.96,690,2.993,691,2.481,692,3.629,693,2.329,694,1.414,695,2.417,696,2.374,697,2.97,698,3.093,699,2.417,700,2.154,701,2.478,702,2.453,703,1.98,704,1.98,705,1.587,706,2.825,707,1.661,708,3.208,709,2.236,710,2.417,711,3.916,712,1.523,713,2.412,714,1.747,715,2.572,716,1.661,717,1.457,718,1.487,719,1.487,720,0.899,721,1.205,722,1.284,723,1.247,724,1.8,725,1.98,726,2.154,727,2.183,728,2.133,729,1.414,730,2.085,731,1.692,732,2.417,733,3.916,734,4.937,735,2.999,736,3.548,737,2.417,738,3.916,739,3.916,740,3.916,741,3.916,742,1.836,743,2.417,744,2.417,745,2.417,746,1.465,747,0.771,748,0.864,749,1.732,750,3.11,751,1.213,752,1.247,753,1.095,754,1.523,755,1.414,756,1.851,757,3.916,758,1.414,759,1.367,760,1.747]],["title/components/BoardTaskComponent.html",[0,0.226,128,1.006]],["body/components/BoardTaskComponent.html",[0,0.277,1,0.651,2,1.015,3,0.058,4,0.049,5,0.64,6,0.707,7,0.696,8,0.696,9,0.044,15,0.579,16,1.72,17,1.929,18,0.609,19,1.032,20,0.619,21,0.999,23,0.999,25,0.154,26,0.446,27,0.834,32,0.592,37,0.471,44,0.844,46,0.592,47,0.007,48,0.585,49,0.318,50,0.475,52,0.733,53,1.063,60,1.152,61,1.064,62,1.032,71,0.403,73,0.303,77,0.919,81,0.579,85,0.053,88,0.966,89,2.708,90,0.08,91,0.599,106,0.762,109,3.201,110,1.478,111,1.717,113,2.027,114,1.533,115,0.696,116,1.032,117,1.235,118,0.579,119,1.893,120,0.696,121,1.299,122,0.651,123,0.673,124,0.662,125,0.696,126,0.651,127,0.696,128,1.386,129,1.803,130,0.696,131,0.673,132,0.696,133,0.673,134,0.696,135,0.651,136,0.673,137,0.696,138,0.673,139,0.696,140,0.684,141,0.651,142,1.352,143,0.802,144,1.068,145,0.651,146,1.068,147,0.64,148,1.864,149,0.651,150,1.32,151,0.696,152,0.673,153,1.068,154,0.651,155,1.625,156,0.651,157,0.651,158,0.673,159,0.696,160,0.651,161,0.696,162,0.673,163,0.609,164,1.215,165,0.673,166,0.696,167,0.662,168,1.551,169,0.696,170,0.673,171,0.696,172,0.673,173,1.642,174,0.696,175,0.662,176,0.696,177,0.662,178,0.696,179,0.651,180,0.673,181,0.662,182,0.788,183,0.696,184,0.651,185,0.696,186,0.662,187,0.662,188,0.696,189,0.662,190,1.299,191,0.629,192,0.696,193,0.673,194,1.068,195,0.696,196,0.673,197,0.696,198,0.673,199,0.696,200,0.651,201,0.662,202,0.651,203,0.696,204,0.651,205,0.684,206,0.966,207,0.651,208,0.651,209,0.673,210,0.696,211,0.651,212,1.52,213,0.64,214,0.696,215,0.651,216,0.662,217,0.651,218,0.651,219,0.696,220,0.673,221,0.696,222,1.068,223,0.673,224,0.696,225,0.673,226,0.696,227,0.662,228,0.696,229,0.982,230,1.662,231,0.651,232,0.673,233,0.696,234,0.673,235,0.696,236,0.982,237,1.277,238,1.068,239,0.651,240,0.684,241,0.56,242,0.629,243,0.662,244,0.684,245,0.662,246,0.696,247,0.662,248,0.696,249,0.651,250,0.696,251,0.662,252,0.684,253,0.696,254,0.003,255,0.003,260,1.861,282,1.077,293,0.946,296,1.715,311,2.63,339,1.616,375,1.057,397,2.616,398,2.669,517,2.479,532,6.112,534,6.112,535,6.112,547,4.544,549,3.551,589,1.831,590,2.056,591,1.972,595,1.353,596,1.164,597,1.293,598,1.353,603,2.056,606,2.263,610,1.831,652,2.397,657,2.056,671,2.397,672,2.397,673,1.898,674,2.565,676,3.682,682,3.935,685,2.089,686,2.492,687,1.787,688,1.418,689,1.265,691,2.381,693,2.176,697,2.029,698,2.986,706,2.647,709,2.968,713,2.855,717,1.787,718,1.823,719,2.218,720,2.174,721,1.799,724,1.141,727,2.584,728,2.075,730,2.768,731,2.832,736,4.127,742,1.787,747,0.999,748,1.717,749,2.584,750,3.682,752,3.016,753,2.968,754,1.972,755,2.81,756,2.397,761,8.659,762,7.715,763,3.131,764,5.844,765,4.803,766,3.678,767,5.84,768,1.901,769,2.397,770,4.803,771,2.832,772,3.131,773,3.131,774,3.131,775,3.678,776,3.131,777,3.131,778,3.131,779,3.131,780,3.131,781,3.131,782,1.77,783,2.565,784,2.151,785,3.026,786,2.789,787,4.803,788,2.789,789,3.682,790,2.056,791,3.131,792,2.789,793,2.789,794,2.397,795,2.397,796,2.565,797,2.263,798,2.263,799,2.789,800,4.803,801,4.28,802,4.803,803,1.77,804,1.984,805,1.663,806,2.912,807,3.935,808,3.131,809,2.789,810,2.397,811,1.972,812,1.571,813,3.131,814,2.565,815,3.838,816,3.131,817,3.707,818,3.707,819,2.789,820,2.789,821,3.131,822,3.131,823,2.056,824,2.151,825,1.616,826,3.131,827,3.131,828,2.411,829,3.131,830,2.056,831,4.28,832,2.263]],["title/components/ButtonComponent.html",[0,0.226,131,1.023]],["body/components/ButtonComponent.html",[0,0.336,1,0.654,2,1.019,3,0.058,4,0.049,5,0.643,6,0.711,7,0.699,8,0.699,9,0.045,13,1.407,15,0.582,16,1.72,17,1.932,18,0.612,19,1.036,20,0.622,21,1.002,23,1.002,25,0.154,26,0.447,29,1.69,32,0.594,44,0.74,47,0.007,48,0.495,49,0.342,52,0.352,53,0.572,57,1.328,60,1.03,61,0.882,71,0.322,73,0.305,77,0.922,81,0.582,85,0.054,90,0.081,110,0.968,111,1.124,113,1.884,115,0.699,116,1.036,117,1.645,118,0.582,119,2.001,120,0.699,121,1.303,122,0.654,123,0.676,124,0.665,125,0.699,126,0.654,127,0.699,128,0.665,129,0.676,130,0.699,131,1.412,132,0.699,133,0.676,134,0.699,135,0.654,136,0.676,137,0.699,138,0.676,139,0.699,140,0.687,141,0.654,142,1.121,143,0.805,144,1.071,145,0.654,146,1.071,147,0.643,148,1.867,149,0.654,150,0.534,151,0.699,152,0.676,153,1.071,154,0.654,155,1.159,156,0.654,157,0.654,158,0.676,159,0.699,160,0.654,161,0.699,162,0.676,163,0.612,164,1.218,165,0.676,166,0.699,167,0.665,168,1.618,169,0.699,170,0.676,171,0.699,172,0.676,173,0.665,174,0.699,175,0.665,176,0.699,177,0.665,178,0.699,179,0.654,180,0.676,181,0.665,182,0.791,183,0.699,184,0.654,185,0.699,186,0.665,187,0.665,188,0.699,189,0.665,190,1.303,191,0.632,192,0.699,193,0.676,194,1.071,195,0.699,196,0.676,197,0.699,198,0.676,199,0.699,200,0.654,201,0.665,202,0.654,203,0.699,204,0.654,205,0.687,206,0.969,207,0.654,208,0.654,209,0.676,210,0.699,211,0.654,212,1.523,213,0.643,214,0.699,215,0.654,216,0.665,217,0.654,218,0.654,219,0.699,220,0.676,221,0.699,222,1.071,223,0.676,224,0.699,225,0.676,226,0.699,227,0.665,228,0.699,229,0.643,230,0.862,231,0.654,232,0.676,233,0.699,234,0.676,235,0.699,236,0.986,237,1.281,238,1.071,239,0.654,240,0.687,241,1.048,242,0.632,243,0.665,244,1.548,245,0.665,246,0.699,247,0.665,248,0.699,249,0.654,250,0.699,251,0.665,252,0.687,253,0.699,254,0.003,255,0.003,258,0.735,260,1.219,267,5.057,274,3.484,278,1.457,284,2.905,287,1.907,296,3.88,308,0.7,310,4.529,311,1.17,397,3.229,398,2.749,399,3.639,556,3.484,595,1.359,596,2.444,597,1.299,598,1.359,685,1.67,686,1.432,687,1.793,691,1.871,693,2.63,697,1.328,701,4.13,702,1.359,706,2.976,709,2.183,712,1.981,717,1.793,718,1.83,719,2.494,720,1.793,721,1.804,724,1.147,728,1.359,730,3.548,731,2.839,736,3.971,742,1.793,749,2.905,751,2.419,752,3.391,753,3.385,758,2.819,768,1.907,803,1.779,804,2.714,805,2.561,806,2.922,807,3.949,809,4.295,817,1.779,818,1.779,825,2.488,832,4.236,833,3.145,834,4.82,835,4.295,836,4.82,837,4.82,838,5.861,839,5.861,840,4.82,841,4.227,842,6.933,843,7.78,844,4.801,845,3.145,846,3.145,847,3.037,848,4.82,849,4.82,850,6.881,851,3.145,852,4.82,853,2.64,854,4.82,855,4.295,856,3.691,857,4.82,858,5.109,859,3.145,860,3.691,861,3.145,862,6.57,863,4.82,864,3.145,865,3.145,866,1.84,867,1.981,868,3.145,869,2.802,870,3.691,871,2.802,872,3.145,873,3.145,874,3.145,875,2.802,876,3.949,877,3.145,878,3.145,879,1.907,880,3.145,881,3.145,882,3.145,883,4.295,884,3.145,885,2.408,886,3.764,887,6.312,888,3.145,889,3.145,890,2.408,891,2.161,892,3.145,893,5.092,894,4.028]],["title/components/CardComponent.html",[0,0.226,133,1.023]],["body/components/CardComponent.html",[0,0.342,1,0.936,2,1.326,3,0.083,4,0.07,5,0.921,6,1.018,7,1.001,8,1.001,9,0.064,15,0.833,16,1.747,17,1.962,18,0.876,19,1.348,20,0.891,21,1.304,23,1.304,37,1.085,44,0.446,47,0.006,48,0.588,71,0.308,73,0.436,77,1.199,81,0.833,85,0.077,90,0.116,110,1.386,115,1.001,116,1.348,117,1.525,118,0.833,119,2.018,120,1.001,121,1.603,122,0.936,123,0.968,124,0.952,125,1.001,126,0.936,127,1.001,128,0.952,129,0.968,130,1.001,131,0.968,132,1.001,133,1.676,134,1.001,135,0.936,136,0.968,137,1.001,138,0.968,139,1.001,140,0.985,141,0.936,142,1.379,143,1.047,144,1.394,145,0.936,146,1.394,147,0.921,148,2.03,149,0.936,150,0.765,151,1.001,152,0.968,153,1.394,154,0.936,155,1.426,156,0.936,157,0.936,158,0.968,159,1.001,160,0.936,161,1.001,162,0.968,163,0.876,164,1.5,165,0.968,166,1.001,167,0.952,168,1.304,169,1.001,170,0.968,171,1.001,172,0.968,173,0.952,174,1.001,175,0.952,176,1.001,177,0.952,178,1.001,179,0.936,180,0.968,181,0.952,182,1.029,183,1.001,184,0.936,185,1.001,186,0.952,187,0.952,188,1.001,189,0.952,190,1.603,191,0.906,192,1.001,193,0.968,194,1.394,195,1.001,196,0.968,197,1.001,198,0.968,199,1.001,200,0.936,201,0.952,202,0.936,203,1.001,204,0.936,205,0.985,206,1.261,207,0.936,208,0.936,209,0.968,210,1.001,211,0.936,212,1.762,213,0.921,214,1.001,215,0.936,216,0.952,217,0.936,218,0.936,219,1.001,220,0.968,221,1.001,222,1.394,223,0.968,224,1.001,225,0.968,226,1.001,227,0.952,228,1.001,229,0.921,230,1.121,231,0.936,232,0.968,233,1.001,234,0.968,235,1.001,236,1.282,237,1.577,238,1.394,239,0.936,240,0.985,241,0.805,242,0.906,243,0.952,244,0.985,245,0.952,246,1.001,247,0.952,248,1.001,249,0.936,250,1.001,251,0.952,252,0.985,253,1.001,254,0.004,255,0.004,260,1.745,267,2.838,282,1.549,311,2.683,398,2.666,399,1.992,400,3.236,517,3.236,596,2.332,685,1.145,686,1.862,688,2.04,689,1.821,691,2.001,716,4.309,721,1.386,724,2.286,730,3.294,731,2.709,736,2.393,758,3.668,759,2.547,803,2.547,817,4.079,818,4.079,830,2.958,895,4.504,896,8.882,897,7.213,898,6.27,899,4.504,900,5.587,901,6.949,902,4.014,903,4.504,904,3.449,905,4.504]],["title/components/ChangePasswordPage.html",[0,0.226,135,0.989]],["body/components/ChangePasswordPage.html",[0,0.284,1,0.677,2,1.047,3,0.06,4,0.051,5,0.666,6,0.736,7,0.724,8,0.724,9,0.046,13,1.445,14,2.273,15,0.602,16,1.723,17,1.936,18,0.633,19,1.064,20,0.644,21,1.029,23,1.029,25,0.16,26,0.459,27,0.854,29,3.021,32,0.61,36,2.539,37,0.745,44,0.75,46,0.401,47,0.007,48,0.542,49,0.255,50,0.712,52,0.554,53,0.9,60,0.573,61,0.49,62,1.878,63,2.851,65,2.788,66,3.34,71,0.398,73,0.316,74,1.04,77,0.947,81,0.602,83,0.887,85,0.055,90,0.084,91,1.59,93,0.736,103,1.635,104,1.635,106,0.517,110,1.003,111,1.164,113,2.64,114,2.591,115,0.724,116,1.064,117,1.266,118,0.602,119,1.722,120,0.724,121,1.331,122,0.677,123,0.7,124,0.689,125,0.724,126,0.677,127,0.724,128,0.689,129,0.7,130,0.724,131,0.7,132,0.724,133,0.7,134,0.724,135,1.391,136,1.745,137,0.724,138,0.7,139,0.724,140,0.712,141,0.677,142,1.145,143,0.827,144,1.1,145,0.677,146,1.1,147,0.666,148,1.884,149,0.677,150,0.553,151,0.724,152,0.7,153,1.1,154,0.677,155,1.184,156,0.677,157,0.677,158,0.7,159,0.724,160,0.677,161,0.724,162,0.7,163,0.633,164,1.245,165,0.7,166,0.724,167,0.689,168,1.245,169,0.724,170,0.7,171,0.724,172,0.7,173,0.689,174,0.724,175,0.689,176,0.724,177,0.689,178,0.724,179,0.677,180,0.7,181,0.689,182,0.813,183,0.724,184,0.677,185,0.724,186,0.689,187,1.602,188,0.724,189,0.689,190,1.331,191,0.655,192,0.724,193,0.7,194,1.1,195,0.724,196,0.7,197,0.724,198,0.7,199,0.724,200,0.677,201,0.689,202,0.677,203,0.724,204,0.677,205,0.712,206,0.996,207,0.677,208,0.677,209,0.7,210,0.724,211,0.677,212,1.547,213,0.666,214,0.724,215,0.677,216,0.689,217,0.677,218,0.677,219,0.724,220,0.7,221,0.724,222,1.1,223,0.7,224,0.724,225,0.7,226,0.724,227,0.689,228,0.724,229,0.666,230,0.885,231,0.677,232,0.7,233,0.724,234,0.7,235,0.724,236,1.012,237,1.309,238,1.1,239,0.677,240,0.712,241,0.582,242,0.655,243,0.689,244,0.712,245,0.689,246,0.724,247,0.689,248,0.724,249,0.677,250,0.724,251,0.689,252,0.712,253,0.724,254,0.003,255,0.003,284,2.189,308,0.719,310,1.512,389,3.403,397,2.657,398,2.211,400,1.681,412,2.631,431,1.021,469,6.453,484,4.642,486,4.286,493,5.961,499,5.202,546,3.848,582,3.387,685,1.701,686,2.411,687,3.092,688,2.242,689,2.001,691,1.912,693,1.843,712,2.052,713,1.591,717,2.489,718,2.273,719,2.539,720,2.228,721,1.843,722,1.731,723,1.681,724,1.805,727,1.44,728,1.407,729,2.896,804,1.346,806,4.363,812,1.635,828,1.635,879,1.975,906,7.876,907,2.902,908,5.336,909,4.411,910,5.336,911,2.238,912,4.951,913,2.902,914,3.257,915,5.895,916,4.411,917,4.411,918,4.411,919,4.411,920,4.411,921,3.257,922,2.712,923,4.951,924,3.257,925,2.902,926,2.354,927,2.668,928,2.902,929,2.902,930,2.354,931,2.668,932,4.951,933,4.411,934,2.902,935,2.494,936,2.668,937,3.257,938,3.257,939,1.975,940,2.668,941,3.791,942,2.139,943,1.905,944,2.052,945,1.731,946,4.151,947,2.238,948,3.251,949,2.238,950,1.905,951,5.826,952,3.002,953,2.052,954,1.905,955,1.975,956,1.975,957,2.139,958,2.354,959,4.598,960,2.238,961,4.726,962,4.598,963,2.238,964,2.238,965,2.238,966,2.139,967,2.238,968,2.238,969,2.238,970,2.238]],["title/components/CheckboxComponent.html",[0,0.226,138,1.023]],["body/components/CheckboxComponent.html",[0,0.319,1,0.826,2,1.212,3,0.073,4,0.062,5,0.812,6,0.898,7,0.883,8,0.883,9,0.056,15,0.734,16,1.738,17,1.952,18,0.772,19,1.233,20,0.785,21,1.192,23,1.192,25,0.195,26,0.532,27,0.818,29,2.36,32,0.706,44,0.806,46,0.908,47,0.006,48,0.648,49,0.347,50,0.729,52,0.824,53,1.34,60,0.698,61,1.226,62,1.233,64,1.571,71,0.281,73,0.385,77,1.097,81,0.734,85,0.068,90,0.102,115,0.883,116,1.233,117,1.653,118,0.734,119,1.611,120,0.883,121,1.496,122,0.826,123,0.854,124,0.84,125,0.883,126,0.826,127,0.883,128,0.84,129,0.854,130,0.883,131,0.854,132,0.883,133,0.854,134,0.883,135,0.826,136,0.854,137,0.883,138,1.584,139,0.883,140,1.944,141,0.826,142,1.287,143,0.958,144,1.275,145,0.826,146,1.275,147,0.812,148,1.977,149,0.826,150,0.675,151,0.883,152,0.854,153,1.275,154,0.826,155,1.331,156,0.826,157,0.826,158,0.854,159,0.883,160,0.826,161,0.883,162,0.854,163,0.772,164,1.399,165,0.854,166,0.883,167,0.84,168,1.192,169,0.883,170,0.854,171,0.883,172,0.854,173,0.84,174,0.883,175,0.84,176,0.883,177,0.84,178,0.883,179,0.826,180,0.854,181,0.84,182,0.941,183,0.883,184,0.826,185,0.883,186,0.84,187,0.84,188,0.883,189,0.84,190,1.496,191,0.799,192,0.883,193,0.854,194,1.275,195,0.883,196,0.854,197,0.883,198,0.854,199,0.883,200,0.826,201,0.84,202,0.826,203,0.883,204,0.826,205,0.868,206,1.153,207,0.826,208,0.826,209,0.854,210,0.883,211,0.826,212,1.68,213,0.812,214,0.883,215,0.826,216,0.84,217,0.826,218,0.826,219,0.883,220,0.854,221,0.883,222,1.275,223,0.854,224,0.883,225,0.854,226,0.883,227,0.84,228,0.883,229,0.812,230,1.025,231,0.826,232,0.854,233,0.883,234,0.854,235,0.883,236,1.173,237,1.78,238,1.275,239,0.826,240,0.868,241,0.71,242,0.799,243,0.84,244,0.868,245,0.84,246,0.883,247,0.84,248,0.883,249,0.826,250,0.883,251,0.84,252,0.868,253,0.883,254,0.004,255,0.004,258,1.722,278,1.734,282,1.366,284,3.26,293,1.201,301,2.662,328,3.576,361,3.141,650,2.269,654,2.802,685,1.458,694,2.323,697,1.677,724,1.448,748,1.42,751,1.993,755,2.323,768,2.269,804,2.369,805,2.11,815,2.608,825,2.05,853,3.687,870,5.644,891,3.941,971,3.971,972,2.597,973,4.698,974,6.731,975,5.735,976,3.687,977,3.477,978,3.477,979,3.477,980,3.477,981,3.477,982,4.939,983,2.502,984,2.408,985,3.243,986,2.408,987,2.408,988,1.756,989,2.323,990,2.175,991,2.175,992,2.408,993,2.502,994,3.477,995,4.469,996,2.73,997,4.765,998,2.408,999,3.807,1000,2.323,1001,3.477,1002,2.662,1003,4.038,1004,2.246,1005,2.408,1006,3.477,1007,4.204,1008,2.408,1009,2.502,1010,2.408,1011,3.477,1012,2.408,1013,2.502,1014,3.477,1015,2.408,1016,2.408,1017,2.608,1018,2.502,1019,2.502,1020,2.502,1021,2.502,1022,3.254,1023,3.041,1024,2.608,1025,2.502,1026,5.735,1027,3.941,1028,3.971,1029,3.971,1030,3.474,1031,3.041,1032,3.539,1033,3.971,1034,2.502,1035,3.254]],["title/directives/ClickStopPropagationDirective.html",[118,0.88,243,1.006]],["body/directives/ClickStopPropagationDirective.html",[3,0.127,4,0.108,9,0.098,15,1.278,16,1.43,25,0.339,27,1.264,32,1.02,44,0.819,46,0.851,47,0.007,48,0.521,49,0.294,50,0.684,52,0.773,53,1.505,57,2.92,62,1.486,71,0.339,73,0.67,85,0.118,90,0.178,118,1.531,242,1.39,243,1.75,244,2.007,245,1.985,254,0.005,255,0.005,293,2.503,556,6.639,1036,8.861,1037,6.913,1038,8.278,1039,8.278,1040,8.278,1041,6.913,1042,8.278,1043,8.278,1044,8.278,1045,6.913,1046,6.913,1047,6.913,1048,6.913,1049,6.913,1050,6.913]],["title/components/ControlAccessor.html",[0,0.226,140,1.04]],["body/components/ControlAccessor.html",[0,0.345,1,0.61,2,0.966,3,0.054,4,0.046,5,0.6,7,1.015,8,0.652,9,0.042,13,1.333,16,1.712,17,1.919,18,0.57,19,0.982,20,0.58,25,0.144,26,0.424,27,1.119,29,2.889,32,0.563,37,0.953,44,0.844,46,0.845,47,0.007,48,0.642,49,0.323,50,0.679,52,0.877,53,1.498,60,0.516,61,1.341,62,1.631,64,1.807,65,2.658,68,1.929,71,0.275,73,0.284,74,0.936,77,0.873,81,0.542,83,0.798,85,0.05,90,0.163,91,1.39,93,0.663,106,1.152,115,0.652,116,0.982,117,1.604,118,0.542,119,1.384,120,0.652,121,1.247,122,0.61,123,0.63,124,0.62,125,0.652,126,0.61,127,0.652,128,0.62,129,0.63,130,0.652,131,0.63,132,0.652,133,0.63,134,0.652,135,0.61,136,0.63,137,0.652,138,0.63,139,0.652,140,1.384,141,0.61,142,1.073,143,0.763,144,1.015,145,0.61,146,1.015,147,0.6,148,1.831,149,0.61,150,0.498,151,0.652,152,0.63,153,1.015,154,0.61,155,1.109,156,0.61,157,0.61,158,0.63,159,0.652,160,0.61,161,0.652,162,0.63,163,0.57,164,1.166,165,0.63,166,0.652,167,0.62,168,1.316,169,0.652,170,0.63,171,0.652,172,0.63,173,0.62,174,0.652,175,0.62,176,0.652,177,0.62,178,0.652,179,0.61,180,0.63,181,0.62,182,0.75,183,0.652,184,0.61,185,0.652,186,0.62,187,0.62,188,0.652,189,0.62,190,1.247,191,0.59,192,0.652,193,0.63,194,1.015,195,0.652,196,0.63,197,0.652,198,0.63,199,0.652,200,0.61,201,0.62,202,0.61,203,0.652,204,0.61,205,0.641,206,0.918,207,0.61,208,0.61,209,0.63,210,0.652,211,0.61,212,1.475,213,0.6,214,0.652,215,0.61,216,0.62,217,0.61,218,0.61,219,0.652,220,0.63,221,0.652,222,1.015,223,0.63,224,0.652,225,0.63,226,0.652,227,0.62,228,0.652,229,0.6,230,0.817,231,0.61,232,0.63,233,0.652,234,0.63,235,0.652,236,0.934,237,1.762,238,1.015,239,0.61,240,0.641,241,0.524,242,0.59,243,0.62,244,0.641,245,0.62,246,0.652,247,0.62,248,0.652,249,0.61,250,0.652,251,0.62,252,0.641,253,0.652,254,0.003,255,0.003,258,1.698,278,1.914,284,3.355,287,1.161,293,1.914,301,3.521,306,2.246,314,2.715,328,3.861,361,3.468,365,2.246,427,1.778,529,4.595,543,2.246,650,2.505,654,3.093,715,2.999,751,3.443,754,1.848,768,2.505,847,1.848,853,3.98,976,4.67,977,2.769,978,2.769,979,2.769,980,2.769,981,3.401,984,2.769,985,3.88,986,2.769,987,3.401,988,2.02,989,2.672,990,2.502,991,2.502,992,2.769,994,3.838,995,4.757,996,3.014,997,4.987,998,2.769,999,4.109,1000,2.672,1001,3.838,1002,2.938,1003,4.298,1004,2.583,1005,2.769,1006,3.838,1007,4.946,1008,2.769,1010,2.769,1011,4.16,1012,2.769,1014,3.838,1015,3.401,1016,2.769,1018,2.877,1019,2.877,1020,2.877,1021,2.877,1023,5.253,1051,8.641,1052,2.933,1053,3.742,1054,3.742,1055,3.497,1056,2.938,1057,4.567,1058,3.497,1059,5.609,1060,6.172,1061,5.621,1062,2.016,1063,2.933,1064,4.07,1065,3.742,1066,1.973,1067,2.933,1068,2.933,1069,2.933,1070,2.933,1071,2.933,1072,2.933,1073,2.933,1074,2.933,1075,4.07,1076,2.933,1077,2.933,1078,2.403,1079,2.933,1080,2.933,1081,2.933,1082,2.933,1083,2.933,1084,5.609,1085,2.02,1086,4.96,1087,1.926,1088,2.246,1089,2.12,1090,2.613,1091,2.246,1092,2.246,1093,2.016,1094,2.246,1095,2.933,1096,2.933,1097,4.567,1098,2.933,1099,5.953,1100,2.933,1101,2.933,1102,4.07,1103,2.933,1104,2.403,1105,2.613,1106,2.933,1107,2.613,1108,2.933,1109,2.933,1110,2.933,1111,2.403,1112,2.933,1113,5.609,1114,2.933,1115,2.403,1116,2.933,1117,2.933,1118,2.933,1119,2.12,1120,2.613,1121,2.403,1122,2.933,1123,4.567,1124,4.567,1125,2.933,1126,2.933,1127,2.933,1128,2.933,1129,2.933,1130,2.933]],["title/components/CreateProjectMembersPage.html",[0,0.226,141,0.989]],["body/components/CreateProjectMembersPage.html",[0,0.285,1,1.036,2,1.053,3,0.061,4,0.051,5,0.671,6,0.742,7,0.73,8,0.73,9,0.047,11,2.257,15,0.607,16,1.724,17,1.937,18,1.17,19,1.552,20,0.649,21,1.036,23,1.036,25,0.161,26,0.462,27,1.249,28,2.152,29,2.979,32,0.614,37,1.011,44,0.824,46,0.404,47,0.007,48,0.595,49,0.308,50,0.715,52,0.557,53,1.094,60,1.181,61,0.75,62,1.698,63,2.865,65,2.332,66,2.793,68,2.07,71,0.435,73,0.318,74,1.048,77,1.763,78,1.857,81,0.607,83,0.894,85,0.056,87,3.271,88,1.002,90,0.084,91,1.674,93,0.742,103,1.648,104,1.648,105,1.857,106,0.79,109,2.729,110,1.853,111,1.781,112,2.5,113,0.942,114,1.048,115,0.73,116,1.071,117,1.272,118,0.607,119,1.468,120,0.73,121,1.338,122,0.683,123,0.706,124,0.694,125,0.73,126,0.683,127,0.73,128,0.694,129,0.706,130,0.73,131,0.706,132,0.73,133,0.706,134,0.73,135,0.683,136,0.706,137,0.73,138,0.706,139,0.73,140,0.718,141,1.397,142,1.625,143,1.611,144,1.107,145,0.683,146,1.107,147,0.671,148,1.888,149,0.683,150,0.558,151,0.73,152,0.706,153,1.107,154,0.683,155,1.19,156,0.683,157,0.683,158,0.706,159,0.73,160,0.683,161,0.73,162,0.706,163,0.639,164,1.251,165,0.706,166,0.73,167,0.694,168,1.036,169,0.73,170,0.706,171,0.73,172,0.706,173,0.694,174,0.73,175,0.694,176,0.73,177,0.694,178,0.73,179,0.683,180,0.706,181,0.694,182,1.186,183,0.73,184,0.683,185,0.73,186,0.694,187,0.694,188,0.73,189,0.694,190,1.338,191,0.66,192,0.73,193,0.706,194,1.107,195,0.73,196,0.706,197,0.73,198,0.706,199,0.73,200,0.683,201,0.694,202,0.683,203,0.73,204,0.683,205,0.718,206,1.002,207,0.683,208,0.683,209,0.706,210,0.73,211,0.683,212,1.552,213,0.671,214,0.73,215,0.683,216,0.694,217,0.683,218,0.683,219,0.73,220,0.706,221,0.73,222,1.107,223,0.706,224,0.73,225,0.706,226,0.73,227,0.694,228,0.73,229,0.671,230,0.891,231,0.683,232,0.706,233,0.73,234,0.706,235,0.73,236,1.019,237,1.316,238,1.107,239,0.683,240,0.718,241,0.587,242,0.66,243,0.694,244,0.718,245,0.694,246,0.73,247,0.694,248,0.73,249,0.683,250,0.73,251,0.694,252,0.718,253,0.73,254,0.003,255,0.003,258,0.767,261,2.312,273,3.138,282,1.129,308,0.724,310,2.312,314,1.971,326,3.361,389,3.782,431,1.029,536,4.992,546,3.859,549,3.76,550,4.076,551,4.789,582,4.084,593,2.156,595,1.419,596,1.221,597,1.357,598,1.419,609,1.857,657,2.156,666,2.514,667,2.156,673,1.991,685,1.53,686,1.788,691,1.921,692,2.571,697,2.104,720,1.221,721,1.011,724,1.197,748,1.174,782,1.857,828,1.648,922,2.729,945,1.745,1030,2.571,1131,6.96,1132,6.96,1133,2.926,1134,5.363,1135,4.439,1136,4.931,1137,4.931,1138,5.504,1139,5.504,1140,1.991,1141,3.964,1142,4.981,1143,3.284,1144,3.138,1145,3.423,1146,3.271,1147,3.271,1148,3.02,1149,3.423,1150,3.284,1151,3.284,1152,5.504,1153,3.284,1154,3.423,1155,3.284,1156,2.926,1157,3.284,1158,2.69,1159,2.514,1160,2.156,1161,2.257,1162,2.257,1163,2.069,1164,2.257,1165,2.069,1166,2.156,1167,2.514,1168,2.69,1169,2.69,1170,2.69,1171,2.69,1172,4.081,1173,2.69,1174,4.081,1175,2.926,1176,2.926,1177,2.926,1178,4.439,1179,3.271,1180,2.926]],["title/components/CreateProjectPage.html",[0,0.226,145,0.989]],["body/components/CreateProjectPage.html",[0,0.284,1,1.027,2,1.044,3,0.06,4,0.051,5,0.664,6,0.734,7,0.722,8,0.722,9,0.046,11,2.232,15,0.601,16,1.723,17,1.934,18,1.163,19,1.545,20,0.642,21,1.027,23,1.027,25,0.159,26,0.458,27,1.313,28,2.135,29,2.97,32,0.609,34,2.89,37,1.005,44,0.822,46,0.4,47,0.007,48,0.593,49,0.306,50,0.592,52,0.552,53,1.087,60,1.263,61,0.9,62,1.691,63,2.846,65,2.317,66,2.775,68,2.056,71,0.434,73,0.315,74,1.037,77,1.795,78,1.837,81,0.601,83,0.884,85,0.055,87,3.255,88,0.993,90,0.083,91,1.448,93,0.734,103,1.63,104,1.63,105,1.837,106,0.784,109,3.275,110,2.056,111,1.766,112,2.48,113,1.417,114,1.577,115,0.722,116,1.062,117,1.264,118,0.601,119,1.46,120,0.722,121,1.329,122,0.675,123,0.698,124,0.687,125,0.722,126,0.675,127,0.722,128,0.687,129,0.698,130,0.722,131,0.698,132,0.722,133,0.698,134,0.722,135,0.675,136,0.698,137,0.722,138,0.698,139,0.722,140,0.71,141,0.675,142,1.62,143,1.264,144,1.098,145,1.389,146,1.098,147,0.664,148,1.883,149,0.675,150,0.552,151,0.722,152,0.698,153,1.098,154,0.675,155,1.182,156,0.675,157,0.675,158,0.698,159,0.722,160,0.675,161,0.722,162,0.698,163,0.632,164,1.243,165,0.698,166,0.722,167,0.687,168,1.027,169,0.722,170,0.698,171,0.722,172,0.698,173,0.687,174,0.722,175,0.687,176,0.722,177,0.687,178,0.722,179,0.675,180,0.698,181,0.687,182,1.18,183,0.722,184,0.675,185,0.722,186,0.687,187,0.687,188,0.722,189,0.687,190,1.329,191,0.653,192,0.722,193,0.698,194,1.098,195,0.722,196,0.698,197,0.722,198,0.698,199,0.722,200,0.675,201,0.687,202,0.675,203,0.722,204,0.675,205,0.71,206,0.993,207,0.675,208,0.675,209,0.698,210,0.722,211,0.675,212,1.545,213,0.664,214,0.722,215,0.675,216,0.687,217,0.675,218,0.675,219,0.722,220,0.698,221,0.722,222,1.098,223,0.698,224,0.722,225,0.698,226,0.722,227,0.687,228,0.722,229,0.664,230,0.883,231,0.675,232,0.698,233,0.722,234,0.698,235,0.722,236,1.01,237,1.307,238,1.098,239,0.675,240,0.71,241,0.581,242,0.653,243,0.687,244,0.71,245,0.687,246,0.722,247,0.687,248,0.722,249,0.675,250,0.722,251,0.687,252,0.71,253,0.722,254,0.003,255,0.003,258,0.759,261,2.293,263,2.133,273,3.113,282,1.117,308,0.718,310,1.508,314,1.955,326,3.35,389,3.773,431,1.018,536,4.971,546,3.844,549,3.746,550,4.061,551,4.771,582,4.065,593,2.133,595,1.404,596,1.208,597,1.342,598,1.404,609,1.837,657,2.133,666,2.487,667,2.133,673,1.969,685,1.827,686,1.984,691,1.908,692,1.676,693,1,697,2.087,698,2.087,717,1.208,718,1.233,719,1.233,720,1.208,721,1,748,1.766,749,1.437,782,1.837,828,1.63,922,2.706,945,1.726,955,1.969,1030,2.55,1131,6.94,1136,4.898,1137,4.898,1138,5.474,1139,5.474,1140,1.969,1141,3.949,1144,3.113,1145,3.395,1146,3.245,1147,3.245,1148,2.996,1149,3.395,1152,5.474,1154,3.395,1158,2.661,1159,2.487,1160,2.133,1161,2.232,1162,2.232,1163,2.047,1164,2.232,1165,2.047,1166,2.133,1167,2.487,1168,2.661,1169,2.661,1170,2.661,1171,2.661,1172,4.898,1173,2.661,1174,4.048,1175,2.894,1176,2.894,1177,2.894,1178,4.402,1179,3.245,1181,6.94,1182,2.894,1183,5.328,1184,4.402,1185,4.941,1186,3.248,1187,3.248,1188,3.248,1189,2.894,1190,3.248,1191,3.248,1192,3.248,1193,4.048,1194,3.245]],["title/components/CreateWorkspacePage.html",[0,0.226,147,0.973]],["body/components/CreateWorkspacePage.html",[0,0.365,1,0.793,2,1.177,3,0.07,4,0.06,5,0.78,6,0.862,7,0.848,8,0.848,9,0.054,15,0.705,16,1.735,17,1.949,18,0.742,19,1.197,20,0.754,21,1.158,23,1.158,25,0.187,26,0.517,27,1.237,28,2.407,29,3.09,32,0.686,34,3.258,37,0.99,44,0.716,46,0.47,47,0.007,48,0.625,49,0.237,50,0.651,52,0.427,53,1.013,60,1.156,61,0.574,62,1.828,63,3.131,65,2.549,66,3.053,71,0.417,73,0.37,74,1.218,77,1.831,81,0.705,83,1.038,85,0.065,90,0.098,91,0.73,103,1.915,104,1.915,105,2.157,106,0.883,110,1.174,111,1.364,115,0.848,116,1.197,117,1.391,118,0.705,119,1.581,120,0.848,121,1.462,122,0.793,123,0.82,124,0.806,125,0.848,126,0.793,127,0.848,128,0.806,129,0.82,130,0.848,131,0.82,132,0.848,133,0.82,134,0.848,135,0.793,136,0.82,137,0.848,138,0.82,139,0.848,140,0.834,141,0.793,142,1.758,143,0.93,144,1.238,145,0.793,146,1.238,147,1.479,148,1.959,149,0.793,150,0.648,151,0.848,152,0.82,153,1.238,154,0.793,155,1.301,156,0.793,157,0.793,158,0.82,159,0.848,160,0.793,161,0.848,162,0.82,163,0.742,164,1.368,165,0.82,166,0.848,167,0.806,168,1.158,169,0.848,170,0.82,171,0.848,172,0.82,173,0.806,174,0.848,175,0.806,176,0.848,177,0.806,178,0.848,179,0.793,180,0.82,181,0.806,182,1.187,183,0.848,184,0.793,185,0.848,186,0.806,187,0.806,188,0.848,189,0.806,190,1.462,191,0.767,192,0.848,193,0.82,194,1.238,195,0.848,196,0.82,197,0.848,198,0.82,199,0.848,200,0.793,201,0.806,202,0.793,203,0.848,204,0.793,205,0.834,206,1.12,207,0.793,208,0.793,209,0.82,210,0.848,211,0.793,212,1.654,213,0.78,214,0.848,215,0.793,216,0.806,217,0.793,218,0.793,219,0.848,220,0.82,221,0.848,222,1.238,223,0.82,224,0.848,225,0.82,226,0.848,227,0.806,228,0.848,229,0.78,230,0.996,231,0.793,232,0.82,233,0.848,234,0.82,235,0.848,236,1.139,237,1.438,238,1.238,239,0.793,240,0.834,241,1.483,242,0.767,243,0.806,244,0.834,245,0.806,246,0.848,247,0.806,248,0.848,249,0.793,250,0.848,251,0.806,252,0.834,253,0.848,254,0.004,255,0.004,258,1.302,261,2.585,263,2.505,273,3.509,314,2.204,326,3.513,375,1.287,389,3.902,431,1.196,582,4.351,685,1.416,686,1.133,691,1.778,698,2.353,748,1.364,749,1.687,922,3.051,954,2.231,1030,2.874,1131,6.303,1136,5.389,1139,5.926,1140,2.313,1141,4.163,1144,3.509,1145,3.828,1146,3.658,1147,3.658,1148,3.377,1149,3.828,1152,5.926,1154,3.828,1160,2.505,1161,2.622,1162,2.622,1163,2.403,1165,2.403,1173,3.125,1174,4.563,1179,2.505,1194,3.658,1195,6.303,1196,3.399,1197,5.862,1198,4.963,1199,5.57,1200,3.815,1201,3.815,1202,3.399,1203,3.815,1204,3.399]],["title/modules/DashboardModule.html",[401,1.965,1205,3.643]],["body/modules/DashboardModule.html",[1,1.866,3,0.1,4,0.085,9,0.077,11,3.74,47,0.007,71,0.482,73,0.527,74,1.737,85,0.093,90,0.14,141,1.866,143,1.407,145,1.866,147,1.835,154,1.866,156,1.866,157,1.866,177,1.897,189,1.897,200,1.866,236,1.835,239,1.866,254,0.005,255,0.005,403,2.351,404,4.029,410,5.076,411,4.32,412,2.892,413,2.526,415,4.489,416,3.307,418,3.576,426,4.167,427,4.32,464,4.679,465,3.429,466,5.15,1132,4.459,1159,4.167,1181,4.459,1195,4.459,1205,7.695,1206,4.849,1207,4.849,1208,4.849,1209,4.849,1210,6.488,1211,5.076,1212,5.442,1213,4.849,1214,4.849,1215,5.442,1216,5.442,1217,4.849,1218,5.442,1219,4.849,1220,4.167,1221,4.849,1222,5.442,1223,5.442,1224,7.078,1225,6.349,1226,6.349,1227,6.349,1228,7.078,1229,4.459,1230,4.459,1231,4.459,1232,4.849,1233,4.459,1234,5.455,1235,4.849,1236,4.459,1237,5.442,1238,3.429]],["title/modules/DashboardRoutingModule.html",[401,1.965,1210,3.439]],["body/modules/DashboardRoutingModule.html",[0,0.453,3,0.105,4,0.089,9,0.081,28,3.179,47,0.007,71,0.474,73,0.554,85,0.097,87,2.59,89,2.363,90,0.147,93,1.292,141,1.53,142,1.407,143,1.434,145,1.53,147,1.504,154,1.53,155,1.131,156,1.53,157,1.53,162,1.582,163,1.112,182,0.939,191,1.48,200,1.53,212,1.229,239,1.53,254,0.005,255,0.005,293,1.729,401,2.363,403,2.471,416,2.654,418,3.693,429,4.636,430,5.026,431,1.792,438,6.168,440,6.556,444,4.686,457,3.603,485,3.93,946,3.133,1132,4.686,1181,4.686,1195,4.686,1210,5.319,1224,7.249,1225,6.556,1226,6.556,1227,6.556,1228,7.249,1229,4.686,1230,4.686,1231,4.686,1232,5.096,1233,4.686,1234,5.634,1235,5.096,1236,4.686,1239,5.719,1240,4.379,1241,5.719,1242,5.096,1243,5.719,1244,7.249,1245,5.634,1246,5.634,1247,5.719,1248,5.719,1249,5.719,1250,5.719,1251,6.556,1252,7.358,1253,5.719,1254,5.719,1255,7.358,1256,5.719,1257,5.719,1258,5.719]],["title/components/DeleteAccountPage.html",[0,0.226,149,0.989]],["body/components/DeleteAccountPage.html",[0,0.302,1,0.749,2,1.129,3,0.066,4,0.056,5,0.737,6,0.815,7,0.801,8,0.801,9,0.051,13,1.559,14,2.416,15,0.666,16,1.731,17,1.945,18,0.701,19,1.148,20,0.713,21,1.111,23,1.111,25,0.177,29,2.635,32,0.658,36,2.672,37,0.804,44,0.63,46,0.658,47,0.007,48,0.593,49,0.227,50,0.529,52,0.597,53,0.971,71,0.312,73,0.349,77,1.022,81,0.666,85,0.061,90,0.093,91,1.217,93,0.815,110,1.109,111,1.289,113,2.665,114,2.513,115,0.801,116,1.148,117,1.346,118,0.666,119,1.868,120,0.801,121,1.415,122,0.749,123,0.775,124,0.762,125,0.801,126,0.749,127,0.801,128,0.762,129,0.775,130,0.801,131,0.775,132,0.801,133,0.775,134,0.801,135,0.749,136,0.775,137,0.801,138,0.775,139,0.801,140,0.788,141,0.749,142,1.217,143,0.892,144,1.187,145,0.749,146,1.187,147,0.737,148,1.933,149,1.463,150,1.421,151,0.801,152,0.775,153,1.187,154,0.749,155,1.259,156,0.749,157,0.749,158,0.775,159,0.801,160,0.749,161,0.801,162,0.775,163,0.701,164,1.323,165,0.775,166,0.801,167,0.762,168,1.323,169,0.801,170,0.775,171,0.801,172,0.775,173,0.762,174,0.801,175,0.762,176,0.801,177,0.762,178,0.801,179,0.749,180,0.775,181,0.762,182,0.877,183,0.801,184,0.749,185,0.801,186,0.762,187,1.664,188,0.801,189,0.762,190,1.415,191,0.725,192,0.801,193,0.775,194,1.187,195,0.801,196,0.775,197,0.801,198,0.775,199,0.801,200,0.749,201,0.762,202,0.749,203,0.801,204,0.749,205,0.788,206,1.682,207,0.749,208,0.749,209,0.775,210,0.801,211,0.749,212,1.616,213,0.737,214,0.801,215,0.749,216,0.762,217,0.749,218,0.749,219,0.801,220,0.775,221,0.801,222,1.187,223,0.775,224,0.801,225,0.775,226,0.801,227,0.762,228,0.801,229,0.737,230,0.955,231,0.749,232,0.775,233,0.801,234,0.775,235,0.801,236,1.092,237,1.391,238,1.187,239,0.749,240,0.788,241,0.644,242,0.725,243,0.762,244,1.391,245,0.762,246,0.801,247,0.762,248,0.801,249,0.749,250,0.801,251,0.762,252,0.788,253,0.801,254,0.004,255,0.004,308,0.924,310,1.673,389,3.52,397,2.76,398,2.574,400,1.86,431,1.13,472,5.766,473,3.862,486,4.452,488,4.76,499,4.601,546,3.98,685,1.618,686,2.232,687,3.112,688,1.632,689,1.457,691,2.032,693,1.959,706,1.632,709,1.632,712,2.271,713,1.761,717,2.367,718,2.028,719,2.416,720,1.341,721,1.109,724,1.948,727,2.362,728,2.308,729,3.125,752,1.86,753,2.419,804,1.489,806,4.557,812,1.809,828,1.809,879,2.185,911,2.477,930,2.605,931,2.953,942,2.367,943,2.108,944,2.271,945,1.915,946,4.312,947,2.477,948,3.508,949,2.477,950,2.108,951,5.976,952,3.239,954,2.108,955,2.185,956,2.185,957,2.367,958,2.605,959,4.837,960,2.477,961,4.936,962,4.837,963,2.477,964,2.477,965,2.477,966,2.367,967,2.477,968,2.477,969,2.477,970,2.477,1259,7.039,1260,2.953,1261,5.214,1262,4.377,1263,3.212,1264,5.342,1265,3.212,1266,3.212,1267,3.604,1268,3.604,1269,3.671,1270,5.342,1271,5.342,1272,4.837,1273,4.09,1274,2.681]],["title/components/DialogOutletComponent.html",[0,0.226,152,1.023]],["body/components/DialogOutletComponent.html",[0,0.354,1,0.735,2,1.113,3,0.065,4,0.055,5,0.723,6,0.799,7,0.786,8,0.786,9,0.05,15,0.654,16,1.73,17,1.942,18,0.688,19,1.132,20,1.681,21,1.095,23,1.095,25,0.174,26,0.489,28,3.221,32,0.649,37,0.532,40,5.35,41,3.318,44,0.88,46,0.918,47,0.007,48,0.641,49,0.362,50,0.738,52,0.905,53,1.356,57,2.224,60,0.926,61,0.792,62,0.76,71,0.384,73,0.343,75,3.458,76,2.068,77,1.007,81,0.654,83,0.962,85,0.06,90,0.091,91,1.761,93,1.685,106,0.835,113,2.241,114,1.129,115,0.786,116,1.132,117,1.33,118,0.654,119,1.524,120,0.786,121,1.399,122,0.735,123,0.76,124,0.747,125,0.786,126,0.735,127,0.786,128,0.747,129,0.76,130,0.786,131,0.76,132,0.786,133,0.76,134,0.786,135,0.735,136,0.76,137,0.786,138,0.76,139,0.786,140,0.773,141,0.735,142,1.203,143,0.879,144,1.17,145,0.735,146,1.17,147,0.723,148,1.924,149,0.735,150,0.601,151,0.786,152,1.499,153,1.17,154,0.735,155,1.244,156,0.735,157,0.735,158,0.76,159,0.786,160,0.735,161,0.786,162,0.76,163,0.688,164,1.308,165,0.76,166,0.786,167,0.747,168,1.45,169,0.786,170,0.76,171,0.786,172,0.76,173,0.747,174,0.786,175,0.747,176,0.786,177,0.747,178,0.786,179,0.735,180,0.76,181,0.747,182,0.865,183,0.786,184,0.735,185,0.786,186,0.747,187,0.747,188,0.786,189,0.747,190,1.399,191,0.711,192,0.786,193,0.76,194,1.17,195,0.786,196,0.76,197,0.786,198,0.76,199,0.786,200,0.735,201,0.747,202,0.735,203,0.786,204,0.735,205,0.773,206,1.059,207,0.735,208,0.735,209,0.76,210,0.786,211,0.735,212,1.603,213,0.723,214,0.786,215,0.735,216,0.747,217,0.735,218,0.735,219,0.786,220,0.76,221,0.786,222,1.17,223,0.76,224,0.786,225,0.76,226,0.786,227,0.747,228,0.786,229,0.723,230,0.941,231,0.735,232,0.76,233,0.786,234,0.76,235,0.786,236,1.077,237,1.375,238,1.17,239,0.735,240,0.773,241,0.632,242,0.711,243,0.747,244,0.773,245,0.747,246,0.786,247,0.747,248,0.786,249,0.735,250,0.786,251,1.474,252,0.773,253,0.786,254,0.003,255,0.003,269,4.032,282,2.398,284,1.564,293,1.592,300,2.43,308,0.765,375,1.193,390,6.015,427,2.144,549,3.721,685,0.899,686,1.05,687,1.315,690,2.144,693,1.937,696,3.193,705,2.322,706,1.601,709,1.601,730,1.493,731,1.528,748,1.264,759,2,768,2.084,769,2.707,782,2,866,2.068,867,2.228,939,2.144,966,3.458,1056,2.444,1087,3.458,1275,8.989,1276,8.009,1277,3.151,1278,5.607,1279,4.693,1280,6.973,1281,5.266,1282,6.973,1283,5.266,1284,5.266,1285,6.213,1286,4.693,1287,7.546,1288,6.293,1289,5.389,1290,4.693,1291,6.973,1292,3.536,1293,5.266,1294,3.536,1295,3.536,1296,5.266,1297,3.536,1298,5.266,1299,3.536,1300,3.536,1301,5.266,1302,2.718,1303,3.536,1304,4.693,1305,3.536,1306,3.151,1307,3.151,1308,3.536,1309,3.151,1310,2.228,1311,3.536,1312,3.536,1313,3.536,1314,3.151,1315,3.536,1316,3.536,1317,3.536,1318,4.032,1319,5.266,1320,5.266,1321,3.536,1322,3.536,1323,3.536,1324,3.536,1325,3.536,1326,5.266,1327,2.707,1328,3.536,1329,5.266,1330,2.556,1331,3.536,1332,2.897]],["title/classes/DialogRef.html",[40,2.783,90,0.122]],["body/classes/DialogRef.html",[3,0.079,4,0.067,9,0.061,18,1.174,20,1.824,25,0.209,26,0.56,32,0.743,40,3.53,44,0.932,46,0.99,47,0.007,48,0.605,49,0.342,50,0.795,52,0.959,53,1.097,60,1.338,61,1.146,62,2.07,68,3.323,71,0.296,76,2.495,83,1.161,85,0.073,90,0.206,91,1.764,106,1.208,113,2.392,254,0.004,255,0.004,258,1.41,295,6.835,308,1.389,314,2.771,346,4.454,350,5.505,390,5.809,654,3.926,673,5.2,687,3.259,804,3.446,890,4.621,997,4.7,1055,6.153,1066,3.706,1086,6.2,1102,6.785,1314,7.642,1333,9.475,1334,4.266,1335,8.577,1336,6.035,1337,7.615,1338,4.148,1339,7.615,1340,7.615,1341,6.035,1342,6.035,1343,6.035,1344,4.266,1345,4.266,1346,4.266,1347,6.035,1348,4.266,1349,6.035,1350,4.266,1351,6.785,1352,6.239,1353,6.388,1354,7.615,1355,4.266,1356,7.557,1357,8.343,1358,7.615,1359,4.266,1360,6.035,1361,4.266,1362,6.035,1363,6.035,1364,6.035,1365,4.266,1366,4.148,1367,6.035,1368,7.004,1369,4.266,1370,4.266,1371,4.266,1372,4.945,1373,4.363,1374,7.004,1375,4.266,1376,6.035,1377,6.035,1378,6.035,1379,4.266,1380,4.945,1381,6.035,1382,7.615,1383,4.266,1384,4.798,1385,6.035,1386,4.266,1387,2.586,1388,4.266,1389,4.266,1390,4.266,1391,4.266,1392,4.266,1393,4.266,1394,4.266,1395,4.266,1396,4.266,1397,4.266,1398,4.266,1399,4.266,1400,6.835,1401,8.036,1402,5.809,1403,4.266,1404,4.266,1405,4.266]],["title/injectables/DialogService.html",[322,1.77,549,2.265]],["body/injectables/DialogService.html",[0,0.427,3,0.073,4,0.062,9,0.056,20,1.922,25,0.195,26,0.532,27,0.567,28,4.094,32,0.707,37,1.013,40,4.766,41,4.646,44,0.909,46,1.059,47,0.007,48,0.648,49,0.379,50,0.851,52,1.007,53,1.043,60,1.374,61,1.013,62,1.806,71,0.43,73,0.385,76,2.325,77,1.606,78,2.248,83,1.082,85,0.098,90,0.102,91,1.701,93,1.522,106,1.332,113,1.14,122,0.826,123,1.233,143,1.403,150,0.975,254,0.004,255,0.004,258,1.827,260,2.609,261,3.126,266,2.873,268,4.843,271,6.585,274,5.89,275,4.329,276,6.676,277,4.394,280,5.156,296,3.689,304,2.41,308,0.978,312,4.148,313,4.628,314,3.094,322,2.134,324,2.051,326,3.046,337,3.943,346,2.325,370,3.542,373,2.051,374,1.942,375,1.341,390,6.072,549,2.731,592,2.177,636,3.542,658,4.701,659,4.701,665,4.701,667,2.61,673,2.41,693,1.223,771,3.186,1030,3.806,1031,4.394,1056,2.663,1287,6.882,1289,6.072,1306,3.542,1307,3.542,1387,4.083,1400,3.256,1406,3.542,1407,4.701,1408,6.968,1409,6.734,1410,6.734,1411,6.571,1412,5.738,1413,5.738,1414,3.357,1415,5.738,1416,6.734,1417,6.734,1418,3.975,1419,9.008,1420,3.975,1421,5.738,1422,3.975,1423,6.676,1424,5.738,1425,8.148,1426,7.26,1427,3.975,1428,5.738,1429,3.975,1430,5.738,1431,3.975,1432,5.738,1433,3.975,1434,5.738,1435,3.975,1436,5.738,1437,5.738,1438,4.148,1439,5.113,1440,5.738,1441,3.975,1442,5.738,1443,3.975,1444,5.738,1445,3.975,1446,3.975,1447,3.975,1448,3.975,1449,3.975,1450,2.248,1451,3.542,1452,5.517,1453,3.542,1454,5.113,1455,3.975,1456,5.738,1457,3.975,1458,3.256,1459,2.732,1460,3.542,1461,3.975,1462,3.975,1463,3.542,1464,3.043,1465,3.975,1466,3.975,1467,3.975,1468,5.738,1469,3.975,1470,3.975,1471,3.975,1472,3.975,1473,3.975,1474,3.975,1475,5.738,1476,5.738,1477,6.571,1478,4.394,1479,4.394]],["title/classes/ESet.html",[90,0.122,1480,3.898]],["body/classes/ESet.html",[3,0.135,4,0.114,9,0.104,25,0.36,32,1.056,44,0.726,46,0.903,47,0.007,48,0.552,49,0.312,50,0.726,52,0.82,53,1.333,85,0.125,90,0.188,254,0.006,255,0.006,284,3.791,972,3.882,1066,3.168,1480,7.022,1481,8.571,1482,7.332,1483,6.563,1484,8.571,1485,7.332,1486,4.815,1487,7.332,1488,7.332,1489,7.332]],["title/components/EditProjectMembersPage.html",[0,0.226,154,0.989]],["body/components/EditProjectMembersPage.html",[0,0.26,1,0.922,2,0.937,3,0.052,4,0.044,5,0.577,6,0.638,7,0.628,8,0.628,9,0.04,11,1.94,15,0.522,16,1.71,17,1.921,18,1.064,19,1.449,20,0.558,21,0.922,23,0.922,25,0.139,26,0.411,27,1.344,28,2.679,29,2.858,31,3.595,32,0.546,37,0.933,39,3.394,44,0.867,46,0.674,47,0.007,48,0.6,49,0.339,50,0.74,52,0.8,53,1.36,60,1.184,61,0.824,62,1.665,63,2.605,65,2.121,66,2.54,68,2.318,71,0.426,73,0.274,74,0.901,77,1.751,78,1.597,81,0.522,83,0.768,85,0.048,87,3.052,88,1.671,89,2.954,90,0.073,91,1.615,93,0.638,103,1.417,104,1.417,105,1.597,106,0.703,109,2.428,110,1.685,111,1.585,112,2.225,113,0.81,114,0.901,115,0.628,116,0.953,117,1.157,118,0.522,119,1.355,120,0.628,121,1.217,122,0.587,123,0.607,124,0.597,125,0.628,126,0.587,127,0.628,128,0.597,129,0.607,130,0.628,131,0.607,132,0.628,133,0.607,134,0.628,135,0.587,136,0.607,137,0.628,138,0.607,139,0.628,140,0.617,141,0.587,142,1.047,143,1.637,144,0.985,145,0.587,146,0.985,147,0.577,148,1.812,149,0.587,150,0.48,151,0.628,152,0.607,153,0.985,154,1.289,155,1.612,156,0.587,157,0.587,158,0.607,159,0.628,160,0.587,161,0.628,162,0.607,163,0.549,164,1.138,165,0.607,166,0.628,167,0.597,168,0.922,169,0.628,170,0.607,171,0.628,172,0.607,173,0.597,174,0.628,175,0.597,176,0.628,177,0.597,178,0.628,179,0.587,180,0.607,181,0.597,182,1.106,183,0.628,184,0.587,185,0.628,186,0.597,187,0.597,188,0.628,189,0.597,190,1.217,191,0.568,192,0.628,193,0.607,194,0.985,195,0.628,196,0.607,197,0.628,198,0.607,199,0.628,200,0.587,201,0.597,202,0.587,203,0.628,204,0.587,205,0.617,206,0.891,207,0.587,208,0.587,209,0.607,210,0.628,211,0.587,212,1.449,213,0.577,214,0.628,215,0.587,216,0.597,217,0.587,218,0.587,219,0.628,220,0.607,221,0.628,222,0.985,223,0.607,224,0.628,225,0.607,226,0.628,227,0.597,228,0.628,229,0.577,230,0.793,231,0.587,232,0.607,233,0.628,234,0.607,235,0.628,236,0.906,237,1.196,238,0.985,239,0.587,240,0.617,241,0.505,242,0.568,243,0.597,244,0.617,245,0.597,246,0.628,247,0.597,248,0.628,249,0.587,250,0.628,251,0.597,252,0.617,253,0.628,254,0.003,255,0.003,258,1.036,261,2.058,273,2.793,282,0.971,310,2.058,314,2.454,326,3.582,389,3.65,431,0.885,536,4.697,543,4.748,546,4.127,549,3.56,550,3.86,551,4.535,582,4.505,592,1.547,593,1.854,595,1.22,596,1.05,597,1.166,598,1.22,609,1.597,610,2.593,611,2.162,657,1.854,666,2.162,667,1.854,673,1.712,676,1.779,685,1.391,686,1.626,691,1.747,692,2.288,697,1.873,720,1.05,721,0.869,724,1.029,747,1.979,748,1.009,782,1.597,828,1.417,922,2.428,939,1.712,945,1.5,1030,2.288,1085,1.249,1133,2.516,1134,4.877,1135,3.95,1138,5.08,1140,1.712,1141,3.754,1145,3.047,1146,2.911,1147,2.911,1148,2.688,1149,3.047,1154,3.047,1156,2.516,1158,2.313,1159,2.162,1160,1.854,1161,1.94,1162,1.94,1163,1.779,1164,1.94,1165,1.779,1166,3.595,1169,2.313,1170,2.313,1171,2.313,1180,2.516,1229,7.248,1373,3.205,1384,2.793,1490,7.248,1491,4.484,1492,4.484,1493,5.08,1494,4.433,1495,3.95,1496,5.08,1497,4.433,1498,2.823,1499,4.433,1500,2.823,1501,6.346,1502,3.95,1503,2.823,1504,3.394,1505,2.823,1506,3.205,1507,3.394,1508,3.95,1509,3.95,1510,2.823,1511,2.823,1512,2.823,1513,3.047,1514,2.823,1515,3.632,1516,2.823,1517,3.047,1518,2.823,1519,3.632,1520,2.823,1521,3.047,1522,2.823,1523,2.516,1524,2.516,1525,2.516,1526,2.516,1527,2.516,1528,3.632,1529,2.823,1530,2.516,1531,2.313,1532,5.521,1533,2.823,1534,2.823,1535,2.823,1536,2.313,1537,2.823,1538,4.433,1539,2.688,1540,2.823,1541,2.823,1542,2.516,1543,2.516]],["title/components/EditProjectPage.html",[0,0.226,156,0.989]],["body/components/EditProjectPage.html",[0,0.279,1,0.658,2,1.024,3,0.058,4,0.049,5,0.647,6,0.715,7,0.703,8,0.703,9,0.045,13,1.413,15,0.585,16,1.721,17,1.93,18,0.615,19,1.041,20,0.626,21,1.007,23,1.007,25,0.155,26,0.449,27,1.345,28,2.847,29,2.95,31,3.863,32,0.596,34,2.832,37,0.992,44,0.847,46,0.596,47,0.007,48,0.606,49,0.342,50,0.741,52,0.658,53,1.198,60,1.158,61,0.729,62,1.676,63,2.8,65,2.279,66,3.297,68,2.443,71,0.42,73,0.306,74,1.01,77,1.796,78,1.789,81,0.585,83,0.861,85,0.054,87,3.393,88,1.568,89,2.722,90,0.081,91,1.491,93,1.094,95,2.287,98,2.287,100,2.287,103,1.588,104,1.588,105,1.789,106,0.768,110,1.49,111,1.131,112,1.588,115,0.703,116,1.041,117,1.243,118,0.585,119,1.44,120,0.703,121,1.307,122,0.658,123,0.68,124,0.669,125,0.703,126,0.658,127,0.703,128,0.669,129,0.68,130,0.703,131,0.68,132,0.703,133,0.68,134,0.703,135,0.658,136,0.68,137,0.703,138,0.68,139,0.703,140,0.691,141,0.658,142,1.125,143,1.483,144,1.076,145,0.658,146,1.076,147,0.647,148,1.87,149,0.658,150,0.537,151,0.703,152,0.68,153,1.076,154,0.658,155,1.664,156,1.37,157,0.658,158,0.68,159,0.703,160,0.658,161,0.703,162,0.68,163,0.615,164,1.223,165,0.68,166,0.703,167,0.669,168,1.007,169,0.703,170,0.68,171,0.703,172,0.68,173,0.669,174,0.703,175,0.669,176,0.703,177,0.669,178,0.703,179,0.658,180,0.68,181,0.669,182,1.082,183,0.703,184,0.658,185,0.703,186,0.669,187,0.669,188,0.703,189,0.669,190,1.307,191,0.636,192,0.703,193,0.68,194,1.076,195,0.703,196,0.68,197,0.703,198,0.68,199,0.703,200,0.658,201,0.669,202,0.658,203,0.703,204,0.658,205,0.691,206,0.974,207,0.658,208,0.658,209,0.68,210,0.703,211,0.658,212,1.527,213,0.647,214,0.703,215,0.658,216,0.669,217,0.658,218,0.658,219,0.703,220,0.68,221,0.703,222,1.076,223,0.68,224,0.703,225,0.68,226,0.703,227,0.669,228,0.703,229,0.647,230,0.866,231,0.658,232,0.68,233,0.703,234,0.68,235,0.703,236,0.99,237,1.286,238,1.076,239,0.658,240,0.691,241,0.566,242,0.636,243,0.669,244,0.691,245,0.669,246,0.703,247,0.669,248,0.703,249,0.658,250,0.703,251,0.669,252,0.691,253,0.703,254,0.003,255,0.003,258,1.131,261,2.247,263,2.077,273,3.05,282,1.088,314,2.608,326,3.669,389,3.75,403,2.092,431,0.991,529,4.819,543,5.046,546,4.24,550,4.024,582,4.662,592,1.733,609,1.789,610,1.85,611,2.422,685,1.495,686,0.94,691,1.545,692,1.633,697,1.336,698,2.045,747,2.103,748,1.731,749,1.399,922,2.652,939,1.918,1030,2.499,1104,2.592,1140,1.918,1141,3.913,1145,3.327,1146,3.18,1147,3.18,1148,2.936,1149,3.327,1154,3.327,1160,2.077,1161,2.174,1162,2.174,1163,1.993,1164,2.174,1165,1.993,1166,3.863,1182,2.819,1183,5.241,1184,4.314,1189,2.819,1194,3.18,1230,7.111,1373,3.5,1384,3.05,1479,3.707,1490,7.111,1491,4.819,1492,4.819,1495,4.314,1496,5.399,1501,2.592,1502,4.314,1504,3.707,1506,3.5,1507,3.707,1508,4.314,1509,4.314,1513,3.327,1515,3.967,1517,3.327,1519,3.967,1521,3.327,1524,2.819,1525,2.819,1526,2.819,1527,2.819,1528,3.967,1531,2.592,1532,4.819,1536,2.592,1539,1.918,1542,2.819,1543,2.819,1544,4.842,1545,3.163,1546,3.163,1547,3.163,1548,3.163,1549,3.163,1550,3.163,1551,3.163,1552,3.163,1553,3.163,1554,2.819,1555,3.163,1556,3.163,1557,3.163,1558,3.163,1559,4.314,1560,3.163,1561,3.163]],["title/components/EditWorkspacePage.html",[0,0.226,157,0.989]],["body/components/EditWorkspacePage.html",[0,0.35,1,0.716,2,1.091,3,0.063,4,0.054,5,0.704,6,0.778,7,0.765,8,0.765,9,0.049,15,0.637,16,1.728,17,1.939,18,0.669,19,1.11,20,0.681,21,1.073,23,1.073,25,0.169,26,0.479,27,1.299,28,2.973,29,3.015,32,0.636,34,3.02,37,1.035,44,0.794,46,0.636,47,0.007,48,0.622,49,0.314,50,0.766,52,0.577,53,0.939,60,1.089,61,0.518,62,1.664,63,2.948,65,2.856,66,2.875,68,2.13,71,0.405,73,0.334,74,1.099,77,1.869,78,1.947,81,0.637,83,0.937,85,0.059,87,1.559,88,1.245,90,0.088,91,1.48,93,0.778,103,1.728,104,1.728,105,1.947,106,0.819,110,1.06,111,1.231,115,0.765,116,1.11,117,1.309,118,0.637,119,1.504,120,0.765,121,1.376,122,0.716,123,0.74,124,0.728,125,0.765,126,0.716,127,0.765,128,0.728,129,0.74,130,0.765,131,0.74,132,0.765,133,0.74,134,0.765,135,0.716,136,0.74,137,0.765,138,0.74,139,0.765,140,0.752,141,0.716,142,1.184,143,0.862,144,1.147,145,0.716,146,1.147,147,0.704,148,1.911,149,0.716,150,0.585,151,0.765,152,0.74,153,1.147,154,0.716,155,1.785,156,0.716,157,1.431,158,0.74,159,0.765,160,0.716,161,0.765,162,0.74,163,0.669,164,1.288,165,0.74,166,0.765,167,0.728,168,1.073,169,0.765,170,0.74,171,0.765,172,0.74,173,0.728,174,0.765,175,0.728,176,0.765,177,0.728,178,0.765,179,0.716,180,0.74,181,0.728,182,1.13,183,0.765,184,0.716,185,0.765,186,0.728,187,0.728,188,0.765,189,0.728,190,1.376,191,0.692,192,0.765,193,0.74,194,1.147,195,0.765,196,0.74,197,0.765,198,0.74,199,0.765,200,0.716,201,0.728,202,0.716,203,0.765,204,0.716,205,0.752,206,1.038,207,0.716,208,0.716,209,0.74,210,0.765,211,0.716,212,1.585,213,0.704,214,0.765,215,0.716,216,0.728,217,0.716,218,0.716,219,0.765,220,0.74,221,0.765,222,1.147,223,0.74,224,0.765,225,0.74,226,0.765,227,0.728,228,0.765,229,0.704,230,0.923,231,0.716,232,0.74,233,0.765,234,0.74,235,0.765,236,1.055,237,1.354,238,1.147,239,0.716,240,0.752,241,1.318,242,0.692,243,0.728,244,0.752,245,0.728,246,0.765,247,0.728,248,0.765,249,0.716,250,0.765,251,0.728,252,0.752,253,0.765,254,0.003,255,0.003,258,1.447,261,2.396,263,2.261,273,3.252,314,2.723,326,3.729,389,3.821,431,1.079,546,4.32,582,4.774,609,1.947,685,1.312,686,1.022,691,1.648,698,2.18,742,1.92,747,2.47,748,1.231,749,1.522,922,2.828,954,2.014,1030,2.664,1140,2.087,1141,4.028,1145,3.548,1146,3.39,1147,3.39,1148,3.13,1149,3.548,1154,3.548,1160,2.261,1161,2.366,1162,2.366,1163,2.169,1165,2.169,1167,2.636,1179,2.261,1193,4.229,1194,3.39,1196,3.068,1197,5.519,1198,4.6,1204,3.068,1231,6.763,1384,3.252,1490,6.763,1491,5.074,1492,5.074,1496,5.637,1504,3.953,1515,4.229,1517,3.548,1519,4.229,1523,3.068,1528,2.82,1530,3.068,1531,2.82,1532,4.229,1562,5.162,1563,5.162,1564,5.162,1565,3.443,1566,3.443,1567,3.443,1568,3.443,1569,3.443,1570,3.443,1571,3.443,1572,3.443]],["title/modules/EmailsModule.html",[401,1.965,1573,3.643]],["body/modules/EmailsModule.html",[3,0.134,4,0.113,9,0.103,47,0.007,71,0.444,73,0.704,85,0.124,90,0.187,254,0.006,255,0.006,403,3.14,404,4.822,411,5.169,412,3.861,413,3.373,415,4.578,416,3.957,418,4.279,464,5.599,465,4.578,1573,7.381,1574,6.475,1575,6.475,1576,6.969,1577,7.266,1578,7.266]],["title/modules/EmailsRoutingModule.html",[401,1.965,1576,3.439]],["body/modules/EmailsRoutingModule.html",[0,0.338,3,0.131,4,0.111,9,0.101,28,3.079,47,0.007,71,0.44,73,0.69,85,0.121,90,0.183,93,1.611,182,1.17,191,1.695,254,0.006,255,0.006,401,2.944,403,3.079,416,3.308,418,4.23,429,5.311,430,5.354,431,2.234,438,4.49,457,4.49,485,4.898,946,3.904,991,4.617,1240,5.457,1245,5.457,1246,5.457,1576,6.093,1579,7.127,1580,7.127]],["title/classes/Emoji.html",[90,0.122,1581,3.27]],["body/classes/Emoji.html",[3,0.109,4,0.129,9,0.084,25,0.29,26,0.697,27,1.24,32,0.925,44,0.888,46,1.071,47,0.007,48,0.655,49,0.37,50,0.86,52,0.972,53,1.074,60,1.038,61,0.889,62,1.615,71,0.405,85,0.101,90,0.152,91,1.58,93,1.698,106,1.423,254,0.005,255,0.005,293,2.628,308,1.41,597,2.441,815,3.88,1053,4.84,1066,2.553,1302,5.071,1581,5.974,1582,5.908,1583,8.26,1584,7.513,1585,7.513,1586,7.513,1587,7.513,1588,9.321,1589,7.513,1590,7.513,1591,7.513,1592,7.513,1593,7.513,1594,5.908,1595,7.513,1596,5.908,1597,7.513,1598,7.513,1599,5.908,1600,7.513,1601,5.908,1602,5.908,1603,7.513,1604,5.908,1605,4.523,1606,7.513,1607,5.264,1608,5.908,1609,5.908,1610,5.908,1611,5.908,1612,5.908,1613,4.523,1614,5.908,1615,5.908,1616,5.908,1617,5.908]],["title/interfaces/EmojiToken.html",[86,0.741,1618,4.239]],["body/interfaces/EmojiToken.html",[3,0.109,4,0.117,9,0.084,25,0.291,26,0.767,47,0.007,48,0.567,49,0.406,71,0.406,85,0.101,86,0.923,93,2.075,106,1.424,245,1.252,254,0.005,255,0.005,256,1.89,308,1.395,311,2.203,363,2.972,499,5.439,754,3.731,953,3.731,1055,4.535,1581,6.732,1607,5.277,1618,7.369,1619,5.922,1620,5.922,1621,9.18,1622,9.18,1623,8.701,1624,8.982,1625,5.922,1626,5.922,1627,5.922,1628,5.978,1629,4.535,1630,4.852,1631,5.922,1632,5.922,1633,5.922,1634,7.524,1635,6.164,1636,5.922,1637,5.922,1638,5.922,1639,4.852,1640,5.922,1641,7.129,1642,5.922,1643,5.922,1644,5.922,1645,5.922,1646,5.277,1647,5.277,1648,5.922,1649,5.922,1650,7.524,1651,5.922,1652,5.922,1653,5.922,1654,5.277,1655,5.277,1656,5.922,1657,5.922,1658,5.922,1659,3.731,1660,4.07,1661,5.922,1662,5.922,1663,5.922,1664,5.922,1665,5.922,1666,7.524,1667,5.922,1668,5.922,1669,5.922]],["title/classes/Enum.html",[90,0.122,304,2.885]],["body/classes/Enum.html",[3,0.081,4,0.068,9,0.062,25,0.215,27,1.1,32,0.758,44,0.763,46,0.949,47,0.007,48,0.581,49,0.328,50,0.763,52,0.987,61,1.16,85,0.075,88,1.238,90,0.113,93,0.991,106,1.371,254,0.004,255,0.004,258,1.897,278,1.861,287,2.813,293,2.15,304,6.027,308,1.033,314,3.05,693,2.373,742,3.519,823,6.214,988,3.723,996,4.007,1004,5.139,1066,1.895,1107,5.484,1302,4.784,1352,6.896,1438,4.449,1486,4.669,1670,4.386,1671,3.908,1672,3.358,1673,4.386,1674,6.445,1675,6.155,1676,7.862,1677,6.155,1678,4.386,1679,8.967,1680,6.839,1681,9.343,1682,9.343,1683,7.752,1684,7.11,1685,8.823,1686,6.155,1687,6.155,1688,6.155,1689,6.155,1690,4.386,1691,5.042,1692,7.709,1693,6.155,1694,5.484,1695,6.155,1696,5.484,1697,6.155,1698,4.386,1699,7.11,1700,6.155,1701,4.386,1702,7.11,1703,4.386,1704,4.386,1705,4.386,1706,4.386,1707,3.358,1708,6.155,1709,6.155,1710,4.386,1711,6.155,1712,3.593,1713,4.386,1714,6.155,1715,3.593,1716,6.155,1717,6.155,1718,4.386,1719,4.386]],["title/interceptors/ErrorInterceptor.html",[1720,4.758,1721,3.898]],["body/interceptors/ErrorInterceptor.html",[3,0.115,4,0.097,9,0.088,13,1.815,25,0.305,26,0.72,32,0.956,37,0.936,44,0.837,46,0.956,47,0.007,48,0.585,49,0.36,50,0.768,52,0.695,60,1.093,61,0.936,68,2.909,71,0.447,73,0.603,83,1.693,85,0.106,88,1.251,90,0.16,91,1.694,106,1.445,206,1.251,254,0.005,255,0.005,322,2.886,368,4.762,375,2.099,389,4.073,431,1.949,520,6.914,527,5.542,549,4.424,650,2.461,693,2.389,742,2.313,769,4.762,782,3.517,940,5.095,1092,6.476,1269,4.274,1721,6.357,1722,6.219,1723,6.219,1724,8.458,1725,7.76,1726,6.219,1727,7.76,1728,8.856,1729,8.856,1730,6.219,1731,6.219,1732,6.219,1733,6.219,1734,7.76,1735,5.095,1736,6.402,1737,7.76,1738,6.219,1739,5.095,1740,6.219,1741,6.219,1742,6.219,1743,7.76,1744,6.219,1745,6.219,1746,6.219,1747,6.219,1748,6.219,1749,6.219,1750,6.219]],["title/interfaces/ErrorValidationTree.html",[86,0.741,1751,3.898]],["body/interfaces/ErrorValidationTree.html",[3,0.111,4,0.119,9,0.086,44,0.597,47,0.007,49,0.257,52,0.675,62,1.636,68,2.869,71,0.374,81,1.542,83,1.642,85,0.13,86,0.94,88,1.213,93,2.116,106,1.485,254,0.005,255,0.005,256,1.926,260,2.338,261,3.533,308,1.34,313,4.146,363,3.028,378,6.237,502,3.658,549,3.624,667,3.962,754,5.255,782,3.412,996,4.17,1030,4.305,1085,2.668,1486,5.478,1613,4.619,1641,6.237,1647,5.376,1751,6.834,1752,6.784,1753,5.376,1754,6.033,1755,6.033,1756,5.376,1757,6.033,1758,6.033,1759,7.613,1760,6.033,1761,6.033,1762,6.03,1763,6.033,1764,2.668,1765,6.033,1766,6.784,1767,6.033,1768,6.033,1769,6.033,1770,6.033,1771,6.033,1772,6.784,1773,6.033,1774,6.033,1775,6.033,1776,6.033,1777,6.033,1778,6.033,1779,6.033,1780,6.033,1781,6.033,1782,6.033,1783,8.76,1784,6.033,1785,7.613,1786,6.033,1787,6.033,1788,6.033,1789,6.033,1790,6.033]],["title/interfaces/ExtendedMeta.html",[86,0.741,1791,3.643]],["body/interfaces/ExtendedMeta.html",[3,0.105,4,0.089,9,0.081,15,1.587,16,1.535,25,0.28,26,0.754,27,1.225,47,0.007,49,0.313,50,0.728,57,2.413,71,0.454,74,1.823,85,0.125,86,0.89,90,0.147,91,1.555,93,1.94,106,1.467,150,1.381,241,1.021,254,0.005,255,0.005,256,1.823,260,2.213,287,2.26,293,1.727,308,1.321,410,4.158,416,2.651,419,6.024,420,4.374,421,4.68,427,3.463,751,2.867,956,4.458,972,3.33,976,4.027,996,2.719,1007,2.948,1085,2.526,1091,4.374,1119,5.315,1791,6.573,1792,4.68,1793,4.68,1794,7.45,1795,5.638,1796,4.68,1797,5.09,1798,3.926,1799,5.09,1800,5.09,1801,3.926,1802,3.463,1803,3.231,1804,6.024,1805,5.09,1806,5.09,1807,6.551,1808,5.09,1809,3.926,1810,4.68,1811,4.68,1812,6.551,1813,7.65,1814,5.09,1815,5.09,1816,5.09,1817,4.68,1818,6.551,1819,5.09,1820,5.09,1821,6.551,1822,5.09,1823,5.09,1824,4.68,1825,5.09,1826,3.231,1827,4.027,1828,6.551,1829,4.374,1830,4.829,1831,4.68,1832,5.09,1833,4.129,1834,5.09,1835,5.09,1836,4.68,1837,5.09,1838,4.68,1839,5.09,1840,5.09,1841,5.09]],["title/interfaces/FilterCheckbox.html",[86,0.741,1842,3.643]],["body/interfaces/FilterCheckbox.html",[3,0.125,4,0.106,9,0.096,25,0.333,26,0.76,32,1.008,44,0.672,46,0.836,47,0.007,48,0.511,49,0.421,50,0.672,52,0.759,61,1.374,85,0.15,86,1.058,168,1.411,254,0.005,255,0.005,256,2.166,308,1.277,339,4.711,342,7.351,502,4.964,693,2.81,694,5.339,742,3.395,973,6.707,1085,3.62,1120,7.295,1450,3.838,1842,6.731,1843,6.047,1844,8.187,1845,6.042,1846,6.787,1847,6.047]],["title/classes/Filters.html",[90,0.122,1848,3.124]],["body/classes/Filters.html",[3,0.127,4,0.108,9,0.098,25,0.339,27,0.986,32,1.02,44,0.684,46,0.851,47,0.007,48,0.521,49,0.353,50,0.684,52,0.773,61,1.04,71,0.406,85,0.118,90,0.178,106,1.313,230,1.48,254,0.005,255,0.005,308,1.334,339,3.568,684,4.044,693,2.548,694,4.044,742,2.571,973,5.664,1066,2.987,1302,4.573,1842,6.785,1845,4.751,1848,5.436,1849,6.913,1850,8.278,1851,8.278,1852,6.913,1853,8.278,1854,4.997,1855,5.664,1856,6.913,1857,6.338,1858,6.913,1859,6.16,1860,6.16,1861,6.913]],["title/components/FiltersComponent.html",[0,0.226,158,1.023]],["body/components/FiltersComponent.html",[0,0.295,1,0.72,2,1.096,3,0.064,4,0.054,5,0.708,6,0.782,7,0.77,8,0.77,9,0.049,15,0.64,16,1.728,17,1.941,18,0.673,19,1.114,20,0.685,21,1.078,23,1.078,25,0.305,26,0.481,27,1.263,29,2.719,32,0.639,37,0.521,44,0.894,46,0.99,47,0.007,48,0.659,49,0.385,50,0.837,52,0.899,53,1.41,60,0.911,61,1.21,62,1.588,64,1.37,65,2.674,71,0.339,73,0.335,74,1.105,77,0.991,81,0.64,85,0.059,88,1.25,90,0.089,91,1.188,93,1.404,106,1.094,113,1.782,114,1.984,115,0.77,116,1.114,117,1.562,118,0.64,119,1.508,120,0.77,121,1.381,122,0.72,123,0.744,124,0.732,125,0.77,126,0.72,127,0.77,128,0.732,129,0.744,130,0.77,131,0.744,132,0.77,133,0.744,134,0.77,135,0.72,136,0.744,137,0.77,138,0.744,139,0.77,140,1.882,141,0.72,142,1.188,143,0.866,144,1.152,145,0.72,146,1.152,147,0.708,148,1.914,149,0.72,150,0.588,151,0.77,152,0.744,153,1.152,154,0.72,155,1.229,156,0.72,157,0.72,158,1.483,159,0.77,160,0.72,161,0.77,162,0.744,163,0.673,164,1.292,165,0.744,166,0.77,167,0.732,168,1.435,169,0.77,170,0.744,171,0.77,172,0.744,173,0.732,174,0.77,175,0.732,176,0.77,177,0.732,178,0.77,179,0.72,180,0.744,181,0.732,182,0.851,183,0.77,184,0.72,185,0.77,186,0.732,187,0.732,188,0.77,189,0.732,190,1.381,191,0.696,192,0.77,193,0.744,194,1.152,195,0.77,196,0.744,197,0.77,198,0.744,199,0.77,200,0.72,201,0.732,202,0.72,203,0.77,204,0.72,205,0.757,206,1.042,207,0.72,208,0.72,209,0.744,210,0.77,211,0.72,212,1.588,213,0.708,214,0.77,215,0.72,216,0.732,217,0.72,218,0.72,219,0.77,220,0.744,221,0.77,222,1.152,223,0.744,224,0.77,225,0.744,226,0.77,227,0.732,228,0.77,229,0.708,230,0.927,231,0.72,232,0.744,233,0.77,234,0.744,235,0.77,236,1.06,237,1.695,238,1.152,239,0.72,240,0.757,241,0.619,242,0.696,243,0.732,244,0.757,245,0.732,246,0.77,247,0.732,248,0.77,249,0.72,250,0.77,251,0.732,252,0.757,253,0.77,254,0.003,255,0.003,258,1.612,278,1.567,284,3.052,293,1.047,301,1.607,310,2.406,328,3.302,361,2.84,650,2.051,654,2.533,693,1.066,742,1.288,751,1.738,768,2.051,853,3.404,972,2.348,976,4.631,977,3.143,978,3.143,979,3.143,980,3.143,981,3.143,982,4.702,983,2.181,984,2.099,985,2.932,986,2.099,987,2.099,988,1.531,989,2.025,990,1.897,991,1.897,992,2.099,993,2.181,994,3.143,995,4.184,996,2.468,997,4.537,998,2.099,999,3.515,1000,2.025,1001,3.143,1002,2.406,1003,3.78,1004,1.958,1005,2.099,1006,3.143,1007,4.15,1008,2.099,1009,2.181,1010,2.099,1011,2.099,1012,2.099,1013,2.181,1014,3.143,1015,2.099,1016,2.099,1017,2.274,1018,2.181,1019,2.181,1020,2.181,1021,2.181,1024,2.274,1025,2.181,1056,2.406,1062,2.379,1078,4.247,1194,3.405,1450,4.944,1848,5.815,1854,2.503,1862,3.462,1863,6.215,1864,5.184,1865,6.215,1866,6.9,1867,5.184,1868,5.184,1869,5.184,1870,3.462,1871,3.462,1872,3.462,1873,6.9,1874,3.462,1875,3.462,1876,3.462,1877,3.462,1878,3.462,1879,5.184,1880,3.462,1881,3.462,1882,5.184,1883,2.379,1884,2.274,1885,2.503,1886,3.462,1887,3.462,1888,3.462,1889,5.184,1890,3.462,1891,3.462,1892,3.462,1893,3.462,1894,5.184,1895,3.97,1896,5.184,1897,2.837,1898,2.837]],["title/directives/FocusInitialDirective.html",[118,0.88,247,1.006]],["body/directives/FocusInitialDirective.html",[3,0.123,4,0.104,9,0.095,13,2.363,15,1.232,16,1.399,25,0.327,32,0.997,37,1.313,44,0.801,46,0.821,47,0.007,48,0.502,49,0.284,50,0.659,52,0.745,53,1.472,60,1.423,71,0.327,73,0.646,85,0.113,90,0.171,117,1.918,118,1.785,168,1.684,241,1.448,242,1.34,247,1.712,254,0.005,255,0.005,258,1.892,274,5.854,314,2.637,375,2.249,661,6.2,714,5.854,841,5.131,842,7.215,1064,7.215,1373,5.854,1507,6.2,1899,8.722,1900,6.665,1901,6.305,1902,8.098,1903,6.558,1904,6.665,1905,6.665,1906,8.722,1907,6.665,1908,6.665]],["title/components/ForgotPasswordPage.html",[0,0.226,160,0.989]],["body/components/ForgotPasswordPage.html",[0,0.284,1,0.676,2,1.045,3,0.06,4,0.051,5,0.665,6,0.735,7,0.722,8,0.722,9,0.046,15,0.601,16,1.723,17,1.938,18,0.632,19,1.063,20,0.643,21,1.028,23,1.028,25,0.16,26,0.459,27,0.853,29,3.02,32,0.609,37,0.489,44,0.711,46,0.4,47,0.007,48,0.542,49,0.211,50,0.592,52,0.363,53,0.591,60,0.869,61,0.744,62,1.437,63,2.847,64,2.996,65,2.318,66,2.776,71,0.386,73,0.315,74,1.038,77,0.945,81,0.601,83,0.885,85,0.055,90,0.084,91,1.278,103,1.631,104,1.631,106,0.784,110,1.001,111,1.162,113,2.639,114,2.589,115,0.722,116,1.063,117,1.264,118,0.601,119,1.883,120,0.722,121,1.329,122,0.676,123,0.699,124,0.687,125,0.722,126,0.676,127,0.722,128,0.687,129,0.699,130,0.722,131,0.699,132,0.722,133,0.699,134,0.722,135,0.676,136,0.699,137,0.722,138,0.699,139,0.722,140,0.71,141,0.676,142,1.144,143,0.826,144,1.099,145,0.676,146,1.099,147,0.665,148,1.883,149,0.676,150,0.552,151,0.722,152,0.699,153,1.099,154,0.676,155,1.183,156,0.676,157,0.676,158,0.699,159,0.722,160,1.39,161,1.803,162,0.699,163,0.632,164,1.244,165,0.699,166,0.722,167,0.687,168,1.244,169,0.722,170,0.699,171,0.722,172,0.699,173,0.687,174,0.722,175,0.687,176,0.722,177,0.687,178,0.722,179,0.676,180,0.699,181,0.687,182,0.811,183,0.722,184,0.676,185,0.722,186,0.687,187,1.601,188,0.722,189,0.687,190,1.329,191,0.654,192,0.722,193,0.699,194,1.099,195,0.722,196,0.699,197,0.722,198,0.699,199,0.722,200,0.676,201,0.687,202,0.676,203,0.722,204,0.676,205,0.71,206,0.994,207,0.676,208,0.676,209,0.699,210,0.722,211,0.676,212,1.545,213,0.665,214,0.722,215,0.676,216,0.687,217,0.676,218,0.676,219,0.722,220,0.699,221,0.722,222,1.099,223,0.699,224,0.722,225,0.699,226,0.722,227,0.687,228,0.722,229,0.665,230,0.884,231,0.676,232,0.699,233,0.722,234,0.699,235,0.722,236,1.011,237,1.307,238,1.099,239,0.676,240,0.71,241,1.285,242,0.654,243,0.687,244,0.71,245,0.687,246,0.722,247,0.687,248,0.722,249,0.676,250,0.722,251,0.687,252,0.71,253,0.722,254,0.003,255,0.003,310,2.294,375,1.097,389,3.401,397,2.655,398,2.629,400,1.678,412,4.31,431,1.019,475,6.203,481,3.246,484,4.31,486,4.282,492,5.476,582,3.383,595,1.404,596,1.209,597,1.343,598,1.404,685,2.001,686,2.558,687,3.09,688,2.239,689,1.998,691,2.295,693,2.331,701,2.481,702,1.404,703,2.663,706,1.472,709,1.472,712,2.048,713,1.588,717,2.928,718,2.729,719,2.988,720,2.486,721,2.057,722,1.727,723,1.678,724,1.802,727,2.186,728,2.136,729,2.892,746,1.971,748,1.162,749,1.438,752,1.678,753,2.709,755,1.901,804,2.042,805,1.727,806,4.359,812,1.631,828,1.631,879,1.971,907,2.896,908,5.33,909,4.405,910,5.33,911,2.234,913,2.896,922,2.708,926,2.35,930,2.35,933,4.405,934,2.896,935,2.489,941,3.785,942,2.135,943,1.901,944,2.048,945,1.727,946,4.148,947,2.234,948,3.246,949,2.234,950,1.901,951,5.823,952,2.997,953,3.114,954,1.901,955,1.971,956,1.971,957,2.135,958,3.573,959,4.593,960,2.234,961,4.721,962,4.593,963,2.234,964,2.234,965,2.234,966,2.135,967,2.234,968,2.234,969,2.234,970,2.234,1274,3.8,1635,2.663,1909,7.572,1910,5.798,1911,3.251,1912,3.251,1913,3.251,1914,3.251,1915,3.251,1916,4.05,1917,4.943,1918,4.943]],["title/classes/FormControlStoryPageConfig.html",[90,0.122,1919,4.239]],["body/classes/FormControlStoryPageConfig.html",[3,0.113,4,0.095,9,0.087,25,0.3,26,0.713,27,1.321,32,0.946,37,0.921,44,0.929,46,1.084,47,0.007,48,0.663,49,0.375,50,0.871,52,1.014,53,1.112,57,2.584,71,0.432,85,0.104,90,0.157,91,1.77,93,1.382,150,1.039,241,1.501,254,0.005,255,0.005,260,2.37,308,1.279,751,3.07,972,3.478,982,5.612,1007,3.963,1066,2.643,1791,6.944,1793,5.012,1794,7.783,1795,4.017,1798,4.204,1801,4.204,1802,3.709,1803,3.459,1809,6.586,1810,6.292,1811,6.292,1817,6.877,1830,4.017,1831,5.012,1836,5.012,1838,5.012,1919,6.843,1920,7.68,1921,6.068,1922,6.843,1923,6.843,1924,6.843,1925,6.117,1926,6.117,1927,6.117,1928,6.117,1929,6.117,1930,6.117,1931,6.117,1932,7.68,1933,6.117,1934,6.117,1935,5.012,1936,7.68,1937,6.117,1938,6.117]],["title/interfaces/GitAccount.html",[86,0.741,1939,2.885]],["body/interfaces/GitAccount.html",[3,0.125,4,0.106,9,0.096,25,0.333,26,0.759,47,0.007,49,0.374,85,0.159,86,1.456,88,1.908,91,1.296,254,0.005,255,0.005,256,2.163,258,1.911,260,3.17,278,2.758,308,1.451,326,3.379,344,5.621,654,3.996,747,3.064,1274,3.401,1939,4.959,1940,4.899,1941,4.899,1942,6.27,1943,6.27,1944,5.372,1945,4.899,1946,4.451,1947,4.899,1948,3.833,1949,3.833,1950,4.658]],["title/interfaces/GitAccountWithUsage.html",[86,0.741,1951,3.898]],["body/interfaces/GitAccountWithUsage.html",[0,0.374,3,0.118,4,0.1,9,0.091,13,1.865,14,2.996,16,1.105,17,1.243,21,1.329,23,1.329,25,0.314,26,0.732,27,1.276,36,2.426,47,0.007,49,0.336,53,1.435,68,3.218,71,0.439,73,0.619,83,1.74,85,0.109,86,0.996,90,0.164,106,1.358,206,1.847,212,1.841,213,1.307,254,0.005,255,0.005,256,2.04,375,2.157,771,2.762,1211,4.843,1238,4.027,1274,3.208,1310,4.027,1939,5.673,1951,6.466,1952,4.621,1953,4.894,1954,5.696,1955,8.186,1956,4.027,1957,4.027,1958,4.198,1959,4.894,1960,5.696,1961,5.696,1962,5.696,1963,5.696,1964,5.696,1965,5.696,1966,5.696,1967,5.237,1968,5.237,1969,5.696,1970,5.696,1971,5.696,1972,5.696,1973,4.894,1974,5.696,1975,5.237,1976,5.237,1977,5.696,1978,5.696,1979,5.696]],["title/interfaces/GitIntegration.html",[86,0.741,1946,3.124]],["body/interfaces/GitIntegration.html",[3,0.126,4,0.107,9,0.097,25,0.336,26,0.764,47,0.007,49,0.35,85,0.159,86,1.459,88,1.841,91,1.309,254,0.005,255,0.005,256,2.185,258,1.923,260,3.188,278,2.488,308,1.452,326,3.399,344,5.655,654,4.02,747,2.922,1274,4.594,1939,4.15,1940,4.948,1941,4.948,1942,4.704,1943,4.704,1944,6.012,1945,4.948,1946,5.404,1947,6.617,1948,3.871,1949,3.871,1950,4.704]],["title/injectables/GitIntegrationService.html",[322,1.77,1211,2.691]],["body/injectables/GitIntegrationService.html",[3,0.062,4,0.052,9,0.048,25,0.165,27,1.411,32,0.623,37,0.505,44,0.91,46,1.106,47,0.007,48,0.688,49,0.383,50,0.889,52,1.04,62,1.311,68,3.229,71,0.39,73,0.325,83,0.913,85,0.057,88,1.976,89,3.463,90,0.086,91,0.641,93,1.144,106,1.458,143,1.018,150,0.86,163,1.747,164,1.703,182,0.551,206,1.887,241,1.37,254,0.003,255,0.003,258,1.425,275,3.608,278,1.531,289,4.995,293,2.053,308,1.217,314,2.413,322,1.883,323,4.198,324,1.731,326,2.806,327,4.147,346,2.961,361,2.773,363,2.541,373,1.731,374,1.639,375,1.132,481,3.324,494,2.034,512,2.425,517,3.147,550,4.106,592,1.837,649,4.667,650,2.003,663,5.54,742,1.248,747,1.616,771,2.187,953,4.279,988,3.003,989,3.973,1211,2.863,1274,2.541,1310,2.113,1400,2.748,1414,3.973,1423,4.147,1426,4.511,1438,4.909,1450,1.897,1536,2.748,1613,5.2,1694,4.511,1764,2.239,1939,4.966,1942,2.305,1946,2.203,1948,3.841,1949,3.841,1956,2.113,1957,2.113,1967,2.748,1968,2.748,1973,2.568,1976,4.147,1980,9.248,1981,3.354,1982,5.062,1983,3.876,1984,7.664,1985,6.791,1986,4.668,1987,5.062,1988,5.062,1989,5.062,1990,5.062,1991,5.062,1992,5.062,1993,5.062,1994,6.791,1995,5.062,1996,6.791,1997,5.062,1998,5.062,1999,5.062,2000,5.062,2001,5.062,2002,3.354,2003,5.062,2004,7.664,2005,3.354,2006,5.062,2007,6.357,2008,4.279,2009,3.354,2010,5.062,2011,3.354,2012,5.062,2013,3.354,2014,4.511,2015,5.062,2016,3.876,2017,5.062,2018,5.062,2019,3.354,2020,5.062,2021,3.354,2022,5.062,2023,3.354,2024,3.354,2025,3.354,2026,3.354,2027,5.062,2028,3.354,2029,5.062,2030,3.354,2031,5.062,2032,3.354,2033,5.062,2034,3.354,2035,4.511,2036,6.791,2037,3.876,2038,3.876,2039,3.354,2040,4.511,2041,5.062,2042,3.354,2043,5.062,2044,3.354,2045,5.062,2046,5.062,2047,5.062,2048,5.062,2049,5.062,2050,2.989,2051,3.354,2052,3.354,2053,3.354,2054,3.354,2055,3.354,2056,3.354,2057,3.354,2058,5.062,2059,3.354,2060,3.354,2061,2.989,2062,2.989,2063,3.354,2064,3.354,2065,3.354,2066,2.568,2067,3.354,2068,2.748,2069,3.354,2070,3.354,2071,3.354,2072,3.354,2073,3.354,2074,3.354,2075,3.354,2076,3.354,2077,5.062,2078,3.354,2079,5.564,2080,3.354,2081,3.354,2082,3.354,2083,3.354,2084,3.354,2085,3.354,2086,3.354,2087,5.062,2088,3.354,2089,3.354,2090,2.989,2091,3.354,2092,3.354,2093,3.354]],["title/interfaces/GitIssue.html",[86,0.741,1948,2.691]],["body/interfaces/GitIssue.html",[3,0.121,4,0.103,9,0.094,25,0.323,26,0.746,47,0.007,49,0.401,85,0.158,86,1.444,88,1.895,91,1.259,254,0.005,255,0.005,256,2.101,258,2.165,260,3.59,278,2.43,308,1.464,326,3.827,344,6.367,654,4.526,747,3.046,1274,3.304,1939,3.992,1940,4.759,1941,4.759,1942,4.524,1943,4.524,1944,5.278,1945,4.759,1946,4.323,1947,4.759,1948,4.545,1949,3.723,1950,4.524]],["title/interfaces/GitPull.html",[86,0.741,1949,2.691]],["body/interfaces/GitPull.html",[3,0.12,4,0.102,9,0.093,25,0.32,26,0.741,47,0.007,49,0.406,85,0.157,86,1.44,88,1.891,91,1.247,254,0.005,255,0.005,256,2.082,258,2.159,260,3.58,278,2.416,308,1.465,326,3.817,344,6.35,654,4.514,747,3.04,1274,3.273,1939,3.954,1940,4.714,1941,4.714,1942,4.482,1943,4.482,1944,5.247,1945,4.714,1946,4.283,1947,4.714,1948,3.688,1949,4.519,1950,6.188]],["title/interfaces/GitRepository.html",[86,0.741,1944,3.124]],["body/interfaces/GitRepository.html",[3,0.125,4,0.106,9,0.096,25,0.333,26,0.759,47,0.007,49,0.374,85,0.159,86,1.456,88,1.908,91,1.745,254,0.005,255,0.005,256,2.163,258,1.911,260,3.17,278,2.758,308,1.451,326,3.379,344,5.621,654,3.996,747,3.064,1274,3.401,1939,4.109,1940,4.899,1941,4.899,1942,4.658,1943,4.658,1944,5.77,1945,6.595,1946,4.451,1947,4.899,1948,3.833,1949,3.833,1950,4.658]],["title/components/GithubIntegrationPage.html",[0,0.226,162,1.023]],["body/components/GithubIntegrationPage.html",[0,0.336,1,0.904,2,1.294,3,0.08,4,0.068,5,0.889,6,0.983,7,0.967,8,0.967,9,0.062,13,1.786,14,2.687,15,0.804,16,1.744,17,1.959,18,0.846,19,1.315,20,0.86,21,1.272,23,1.272,25,0.213,32,0.754,36,2.916,37,0.921,44,0.606,46,0.536,47,0.007,48,0.61,49,0.185,50,0.43,52,0.486,53,0.791,71,0.347,73,0.421,77,1.17,81,0.804,85,0.074,90,0.112,91,1.17,93,0.983,114,1.389,115,0.967,116,1.315,117,1.497,118,0.804,119,1.835,120,0.967,121,1.573,122,0.904,123,0.935,124,0.92,125,0.967,126,0.904,127,0.967,128,0.92,129,0.935,130,0.967,131,0.935,132,0.967,133,0.935,134,0.967,135,0.904,136,0.935,137,0.967,138,0.935,139,0.967,140,0.951,141,0.904,142,1.354,143,1.022,144,1.36,145,0.904,146,1.36,147,0.889,148,2.016,149,0.904,150,0.739,151,0.967,152,0.935,153,1.36,154,0.904,155,1.4,156,0.904,157,0.904,158,0.935,159,0.967,160,0.904,161,0.967,162,1.651,163,1.764,164,1.683,165,0.935,166,0.967,167,0.92,168,1.272,169,0.967,170,0.935,171,0.967,172,0.935,173,0.92,174,0.967,175,0.92,176,0.967,177,0.92,178,0.967,179,0.904,180,0.935,181,0.92,182,1.005,183,0.967,184,0.904,185,0.967,186,0.92,187,0.92,188,0.967,189,0.92,190,1.573,191,0.875,192,0.967,193,0.935,194,1.36,195,0.967,196,0.935,197,0.967,198,0.935,199,0.967,200,0.904,201,0.92,202,0.904,203,0.967,204,0.904,205,0.951,206,1.23,207,0.904,208,0.904,209,0.935,210,0.967,211,0.904,212,1.74,213,0.889,214,0.967,215,0.904,216,0.92,217,0.904,218,0.904,219,0.967,220,0.935,221,0.967,222,1.36,223,0.935,224,0.967,225,0.935,226,0.967,227,0.92,228,0.967,229,0.889,230,1.094,231,0.904,232,0.935,233,0.967,234,0.935,235,0.967,236,1.251,237,1.547,238,1.36,239,0.904,240,0.951,241,1.447,242,0.875,243,0.92,244,0.951,245,0.92,246,0.967,247,0.92,248,0.967,249,0.904,250,0.967,251,0.92,252,0.951,253,0.967,254,0.004,255,0.004,282,1.496,311,2.276,398,2.241,431,1.363,545,2.857,546,4.102,685,1.106,686,1.818,687,1.618,688,1.97,689,1.758,717,1.618,718,1.651,719,2.323,720,1.618,721,1.339,736,2.311,815,2.857,931,3.564,955,2.638,956,2.638,957,2.857,1002,2.84,1034,2.741,1211,4.878,1238,2.741,1242,6.308,1338,4.206,1772,5.453,1958,2.857,2014,5.453,2094,7.079,2095,4.35,2096,7.079,2097,6.12,2098,4.35,2099,4.35,2100,6.12,2101,8.095,2102,4.35,2103,4.35,2104,5.453,2105,3.876]],["title/components/IconComponent.html",[0,0.226,165,1.023]],["body/components/IconComponent.html",[0,0.334,1,0.644,2,1.007,3,0.057,4,0.048,5,0.633,6,0.7,7,0.688,8,0.688,9,0.044,15,0.573,16,1.719,17,1.928,18,0.602,19,1.024,20,0.612,21,0.99,23,0.99,25,0.152,26,0.442,27,1.193,44,0.875,46,0.381,47,0.007,48,0.651,49,0.34,50,0.306,52,0.831,53,0.563,60,1.145,61,1.164,71,0.32,73,0.3,77,0.911,81,0.573,85,0.053,90,0.08,91,1.345,93,0.7,106,1.299,113,2.29,115,0.688,116,1.401,117,1.227,118,0.573,119,1.424,120,0.688,121,1.29,122,0.644,123,0.666,124,0.655,125,0.688,126,0.644,127,0.688,128,0.655,129,0.666,130,0.688,131,0.666,132,0.688,133,0.666,134,0.688,135,0.644,136,0.666,137,0.688,138,0.666,139,0.688,140,0.677,141,0.644,142,1.11,143,0.795,144,1.059,145,0.644,146,1.059,147,0.633,148,1.859,149,0.644,150,0.526,151,0.688,152,0.666,153,1.059,154,0.644,155,1.148,156,0.644,157,0.644,158,0.666,159,0.688,160,0.644,161,0.688,162,0.666,163,0.602,164,1.207,165,1.401,166,0.688,167,0.655,168,1.769,169,0.688,170,0.666,171,0.688,172,0.666,173,0.655,174,0.688,175,0.655,176,0.688,177,0.655,178,0.688,179,0.644,180,0.666,181,0.655,182,0.782,183,0.688,184,0.644,185,0.688,186,0.655,187,0.655,188,0.688,189,0.655,190,1.29,191,0.623,192,0.688,193,0.666,194,1.059,195,0.688,196,0.666,197,0.688,198,0.666,199,0.688,200,0.644,201,0.655,202,0.644,203,0.688,204,0.644,205,0.677,206,0.958,207,0.644,208,0.644,209,0.666,210,0.688,211,0.644,212,1.512,213,0.633,214,0.688,215,0.644,216,0.655,217,0.644,218,0.644,219,0.688,220,0.666,221,0.688,222,1.059,223,0.666,224,0.688,225,0.666,226,0.688,227,0.655,228,0.688,229,0.633,230,0.852,231,0.644,232,0.666,233,0.688,234,0.666,235,0.688,236,0.974,237,1.269,238,1.059,239,0.644,240,0.677,241,0.554,242,0.623,243,0.655,244,0.677,245,0.655,246,0.688,247,0.655,248,0.688,249,0.644,250,0.688,251,0.655,252,0.677,253,0.688,254,0.003,255,0.003,258,0.724,269,3.647,282,1.996,283,6.544,284,2.567,300,2.128,308,1.317,363,4.438,595,1.338,596,1.152,597,1.968,598,3.04,685,1.788,686,1.415,687,3.047,693,0.953,701,4.877,717,1.772,718,1.808,719,2.474,720,1.772,721,1.466,768,1.885,815,5.912,844,7.314,860,5.386,870,4.444,875,6.268,876,6.339,988,3.422,996,2.267,1034,4.432,1056,2.211,1058,3.647,1093,2.128,1286,4.244,1304,2.759,1351,4.244,1824,3.902,1827,2.609,2106,3.097,2107,6.517,2108,4.244,2109,4.763,2110,5.804,2111,4.763,2112,5.804,2113,4.763,2114,7.035,2115,4.763,2116,7.035,2117,7.738,2118,7.738,2119,4.755,2120,3.097,2121,4.763,2122,6.517,2123,4.763,2124,4.763,2125,7.428,2126,7.428,2127,4.763,2128,3.097,2129,4.244,2130,8.637,2131,4.763,2132,3.128,2133,7.987,2134,3.097,2135,7.035,2136,4.763,2137,3.097,2138,3.097,2139,3.097,2140,3.097,2141,3.097,2142,3.097,2143,3.097,2144,3.097,2145,4.763,2146,3.097,2147,3.097,2148,3.097,2149,3.097,2150,4.763,2151,4.763,2152,4.763,2153,2.759,2154,2.759,2155,2.537,2156,3.097,2157,4.244,2158,3.097,2159,6.517,2160,4.763,2161,3.097,2162,2.238,2163,4.763,2164,3.097,2165,4.763,2166,3.097,2167,3.097,2168,3.097,2169,7.428,2170,3.097,2171,3.097,2172,4.763]],["title/components/InputAssigneeComponent.html",[0,0.226,167,1.006]],["body/components/InputAssigneeComponent.html",[0,0.238,1,0.515,2,0.845,3,0.046,4,0.039,5,0.507,6,0.56,7,0.551,8,0.551,9,0.035,15,0.458,16,1.697,17,1.902,18,0.482,19,1.527,20,0.49,21,0.831,23,0.831,25,0.122,26,0.371,27,1.312,29,1.76,32,0.492,37,0.373,44,0.906,46,0.94,47,0.007,48,0.625,49,0.374,50,0.793,52,0.896,53,1.457,57,1.047,60,1.012,61,1.148,62,1.452,64,0.98,71,0.385,73,0.24,74,0.791,77,0.764,81,0.458,83,0.674,85,0.042,88,1.158,89,2.074,90,0.064,91,1.101,93,1.135,106,0.913,109,4.388,110,1.545,111,0.886,113,1.651,115,0.551,116,0.859,117,1.336,118,0.458,119,1.882,120,0.551,121,1.116,122,0.515,123,0.533,124,0.524,125,0.551,126,0.515,127,0.551,128,0.524,129,0.533,130,0.551,131,0.533,132,0.551,133,0.533,134,0.551,135,0.515,136,0.533,137,0.551,138,0.533,139,0.551,140,1.713,141,0.515,142,0.96,143,0.667,144,0.888,145,0.515,146,0.888,147,0.507,148,1.742,149,0.515,150,0.421,151,0.551,152,0.533,153,0.888,154,0.515,155,0.993,156,0.515,157,0.515,158,0.533,159,0.551,160,0.515,161,0.551,162,0.533,163,0.482,164,1.044,165,0.533,166,0.551,167,1.218,168,1.749,169,0.551,170,0.533,171,0.551,172,0.533,173,0.524,174,0.551,175,0.524,176,0.551,177,0.524,178,0.551,179,0.515,180,0.533,181,0.524,182,0.656,183,0.551,184,0.515,185,0.551,186,0.524,187,0.524,188,0.551,189,0.524,190,1.116,191,0.498,192,0.551,193,0.533,194,0.888,195,0.551,196,0.533,197,0.551,198,0.533,199,0.551,200,0.515,201,0.524,202,0.515,203,0.551,204,0.515,205,0.542,206,0.803,207,0.515,208,0.515,209,0.533,210,0.551,211,0.515,212,1.358,213,0.507,214,0.551,215,0.515,216,0.524,217,0.515,218,0.515,219,0.551,220,0.533,221,0.551,222,0.888,223,0.533,224,0.551,225,0.533,226,0.551,227,0.524,228,0.551,229,0.507,230,0.714,231,0.515,232,0.533,233,0.551,234,0.533,235,0.551,236,0.817,237,1.476,238,0.888,239,0.515,240,0.542,241,0.443,242,0.498,243,0.524,244,0.873,245,0.524,246,0.551,247,0.524,248,0.551,249,0.515,250,0.551,251,0.524,252,0.542,253,0.551,254,0.003,255,0.003,258,1.346,260,1.548,278,1.91,284,2.987,293,0.749,301,1.15,311,2.142,328,2.668,361,2.189,397,2.676,398,2.704,399,2.987,427,2.422,515,1.357,547,4.156,589,4.921,590,1.627,591,1.561,610,2.337,650,1.581,654,1.952,676,1.561,685,1.606,686,2.006,687,2.142,688,1.122,689,1.002,691,1.275,692,1.279,693,1.545,697,1.047,698,2.121,706,1.81,709,1.81,713,1.21,717,2.142,718,2.186,719,2.697,720,1.868,721,1.773,727,1.767,728,1.726,730,2.668,731,2.73,736,2.668,746,2.422,749,1.767,750,2.517,751,1.243,753,1.122,758,2.337,759,2.839,768,1.581,771,2.489,784,1.703,803,1.401,804,1.651,805,1.316,806,1.502,807,2.03,810,1.897,812,2.52,814,6.979,817,2.26,818,2.26,825,1.279,841,2.839,853,2.75,858,1.627,866,1.449,867,1.561,885,1.897,886,1.316,939,2.422,972,1.81,976,4.388,977,2.422,978,2.422,979,2.422,980,2.422,981,2.422,982,4.095,983,1.561,984,1.502,985,2.26,986,1.502,987,1.502,988,1.096,989,1.449,990,1.357,991,1.357,992,1.502,993,1.561,994,2.422,995,3.492,996,1.902,997,3.951,998,1.502,999,2.839,1000,1.449,1001,2.422,1002,1.854,1003,3.155,1004,1.401,1005,1.502,1006,2.422,1007,3.486,1008,1.502,1009,1.561,1010,1.502,1011,1.502,1012,1.502,1013,1.561,1014,2.422,1015,1.502,1016,1.502,1017,1.627,1018,1.561,1019,1.561,1020,1.561,1021,1.561,1024,1.627,1025,1.561,1056,1.854,1062,1.703,1085,3.669,1087,2.624,1088,3.059,1089,3.629,1093,1.703,1310,1.561,1338,3.958,1353,4.41,1380,4.719,1387,3.044,1414,3.369,1450,1.401,1483,4.41,1660,1.703,1715,2.03,1764,1.096,1830,3.297,1883,1.703,1884,1.627,1885,1.791,2007,3.629,2066,1.897,2105,2.208,2173,8.906,2174,7.935,2175,2.478,2176,5.021,2177,3.995,2178,5.021,2179,5.021,2180,6.018,2181,3.059,2182,2.478,2183,3.995,2184,3.995,2185,2.478,2186,2.478,2187,2.478,2188,2.478,2189,3.995,2190,2.478,2191,2.478,2192,2.478,2193,2.478,2194,3.059,2195,2.478,2196,2.478,2197,2.478,2198,3.56,2199,2.478,2200,2.478,2201,2.478,2202,2.478,2203,2.478,2204,2.208,2205,2.478,2206,2.208,2207,2.478,2208,2.03,2209,2.03,2210,2.478,2211,2.208,2212,2.03,2213,2.208,2214,2.03,2215,2.478,2216,3.995,2217,3.995,2218,2.478,2219,2.478,2220,2.478,2221,3.995,2222,3.995,2223,2.478,2224,3.995,2225,2.478,2226,2.478,2227,2.208,2228,2.208,2229,2.208,2230,2.03,2231,2.208,2232,1.897,2233,4.113,2234,2.208,2235,2.208,2236,2.208,2237,2.208,2238,3.56,2239,2.478,2240,2.478,2241,3.995,2242,3.995,2243,3.995,2244,3.995,2245,3.995,2246,3.059,2247,3.059,2248,2.478,2249,2.478,2250,1.449,2251,1.561,2252,4.474,2253,2.478,2254,2.478,2255,2.03,2256,2.478,2257,2.478,2258,2.208,2259,2.03,2260,2.478,2261,2.624,2262,5.76,2263,2.478]],["title/components/InputComponent.html",[0,0.226,170,1.023]],["body/components/InputComponent.html",[0,0.312,1,0.557,2,0.899,3,0.049,4,0.042,5,0.548,6,0.606,7,0.596,8,0.596,9,0.038,15,0.495,16,1.705,17,1.912,18,0.521,19,0.914,20,0.53,21,0.884,23,0.884,25,0.209,26,0.395,27,0.607,29,2.452,32,0.524,37,0.403,44,0.825,46,0.809,47,0.007,48,0.59,49,0.376,50,0.65,52,0.674,53,1.095,60,1.155,61,1.179,62,1.137,64,2.093,71,0.322,73,0.26,74,0.855,77,0.813,81,0.495,85,0.046,88,0.855,90,0.069,91,0.512,110,1.854,111,2.349,113,2.246,114,2.097,115,0.596,116,0.914,117,1.389,118,0.495,119,2.015,120,0.596,121,1.176,122,0.557,123,0.576,124,0.566,125,0.596,126,0.557,127,0.596,128,0.566,129,0.576,130,0.596,131,0.576,132,0.596,133,0.576,134,0.596,135,0.557,136,0.576,137,0.596,138,0.576,139,0.596,140,1.754,141,0.557,142,1.012,143,0.71,144,0.945,145,0.557,146,0.945,147,0.548,148,1.784,149,0.557,150,0.455,151,0.596,152,0.576,153,0.945,154,0.557,155,1.046,156,0.557,157,0.557,158,0.576,159,0.596,160,0.557,161,0.596,162,0.576,163,0.521,164,1.1,165,0.576,166,0.596,167,0.566,168,1.987,169,0.596,170,1.295,171,0.596,172,0.576,173,0.566,174,0.596,175,0.566,176,0.596,177,0.566,178,0.596,179,0.557,180,0.576,181,0.566,182,0.698,183,0.596,184,0.557,185,0.596,186,0.566,187,0.566,188,0.596,189,0.566,190,1.176,191,0.539,192,0.596,193,0.576,194,0.945,195,0.596,196,0.576,197,0.596,198,0.576,199,0.596,200,0.557,201,0.566,202,0.557,203,0.596,204,0.557,205,0.586,206,0.855,207,0.557,208,0.557,209,0.576,210,0.596,211,0.557,212,1.412,213,0.548,214,0.596,215,0.557,216,0.566,217,0.557,218,0.557,219,0.596,220,0.576,221,0.596,222,0.945,223,0.576,224,0.596,225,0.576,226,0.596,227,0.566,228,0.596,229,0.548,230,0.76,231,0.557,232,0.576,233,0.596,234,0.576,235,0.596,236,0.87,237,1.529,238,0.945,239,0.557,240,0.586,241,0.479,242,0.539,243,0.566,244,0.586,245,0.566,246,0.596,247,0.566,248,0.596,249,0.557,250,0.596,251,0.566,252,0.586,253,0.596,254,0.003,255,0.003,258,1.535,260,1.648,278,1.286,284,2.339,287,1.683,293,1.286,300,1.841,301,1.244,308,1.105,311,3.312,328,2.811,361,2.33,363,2.135,397,2.667,398,2.74,413,1.244,484,2.26,517,2.195,596,0.997,650,1.683,654,2.078,685,1.991,686,1.951,687,2.727,688,1.214,689,1.083,691,2.428,692,1.383,693,2.341,694,4.695,697,3.661,702,1.838,706,1.927,707,1.841,709,2.396,713,2.078,717,0.997,718,1.017,719,1.017,721,1.628,724,2.55,728,1.158,730,3.836,731,3.601,735,5.031,736,1.424,742,1.582,749,3.363,751,1.345,752,2.73,753,1.927,759,3.407,768,1.683,803,1.515,804,2.488,805,2.26,815,3.474,817,3.407,818,3.407,823,1.76,825,2.195,841,2.406,847,2.68,853,2.898,858,1.76,866,1.567,890,2.052,891,1.841,894,1.841,900,4.714,901,2.388,972,1.927,976,4.291,977,2.579,978,2.579,979,2.579,980,2.579,981,2.579,982,4.24,983,1.688,984,1.625,985,3.955,986,1.625,987,1.625,988,1.185,989,1.567,990,1.468,991,1.468,992,1.625,993,1.688,994,2.579,995,3.652,996,2.025,997,4.091,998,1.625,999,2.992,1000,1.567,1001,2.579,1002,1.974,1003,3.299,1004,1.515,1005,1.625,1006,2.579,1007,3.391,1008,1.625,1009,1.688,1010,1.625,1011,1.625,1012,1.625,1013,1.688,1014,2.579,1015,1.625,1016,1.625,1017,1.76,1018,1.688,1019,1.688,1020,1.688,1021,1.688,1025,1.688,1027,2.923,1030,1.383,1034,3.333,1035,2.195,1060,2.052,1062,1.841,1087,2.794,1093,1.841,1099,4.935,1302,3.391,1463,2.388,1639,5.383,1659,2.68,1883,1.841,1884,1.76,1885,1.937,2162,1.937,2264,2.679,2265,5.29,2266,4.254,2267,5.031,2268,5.854,2269,7.33,2270,2.679,2271,2.679,2272,6.231,2273,2.679,2274,3.79,2275,2.679,2276,2.679,2277,2.679,2278,2.679,2279,2.679,2280,2.679,2281,2.679,2282,2.388,2283,2.195,2284,2.679,2285,4.254,2286,2.679,2287,4.254,2288,6.57,2289,4.254,2290,4.714,2291,2.679,2292,2.679,2293,8.46,2294,6.57,2295,2.052,2296,2.679,2297,2.388,2298,4.254,2299,2.679,2300,2.679,2301,2.679,2302,2.679,2303,2.679,2304,2.679,2305,2.679,2306,4.254,2307,2.679]],["title/components/InputDateTimeComponent.html",[0,0.226,172,1.023]],["body/components/InputDateTimeComponent.html",[0,0.291,1,0.703,2,1.077,3,0.062,4,0.053,5,0.692,6,0.764,7,0.752,8,0.752,9,0.048,13,1.487,14,2.326,15,0.625,16,1.726,17,1.937,18,0.658,19,1.095,20,0.669,21,1.059,23,1.059,25,0.166,26,0.473,27,1.044,29,2.797,32,0.627,36,2.589,37,0.509,44,0.882,46,0.947,47,0.007,48,0.645,49,0.375,50,0.761,52,0.86,53,1.451,57,1.429,60,1.077,61,1.157,62,1.095,64,1.338,65,2.835,71,0.335,73,0.328,74,1.08,77,0.974,81,0.625,85,0.058,88,1.232,90,0.087,106,0.536,115,0.752,116,1.095,117,1.295,118,0.625,119,1.68,120,0.752,121,1.362,122,0.703,123,0.727,124,0.715,125,0.752,126,0.703,127,0.752,128,0.715,129,0.727,130,0.752,131,0.727,132,0.752,133,0.727,134,0.752,135,0.703,136,1.573,137,0.752,138,0.727,139,0.752,140,1.871,141,0.703,142,1.172,143,0.851,144,1.132,145,0.703,146,1.132,147,0.692,148,1.902,149,0.703,150,0.575,151,0.752,152,0.727,153,1.132,154,0.703,155,1.212,156,0.703,157,0.703,158,0.727,159,0.752,160,0.703,161,0.752,162,0.727,163,0.658,164,1.274,165,0.727,166,0.752,167,0.715,168,1.832,169,0.752,170,0.727,171,0.752,172,1.466,173,2.027,174,0.752,175,0.715,176,0.752,177,0.715,178,0.752,179,0.703,180,0.727,181,0.715,182,0.836,183,0.752,184,0.703,185,0.752,186,0.715,187,0.715,188,0.752,189,0.715,190,1.362,191,0.68,192,0.752,193,0.727,194,1.132,195,0.752,196,0.727,197,0.752,198,0.727,199,0.752,200,0.703,201,0.715,202,0.703,203,0.752,204,0.703,205,0.739,206,1.024,207,0.703,208,0.703,209,0.727,210,0.752,211,0.703,212,1.573,213,0.692,214,0.752,215,0.703,216,0.715,217,0.703,218,0.703,219,0.752,220,0.727,221,0.752,222,1.132,223,0.727,224,0.752,225,0.727,226,0.752,227,0.715,228,0.752,229,0.692,230,0.911,231,0.703,232,0.727,233,0.752,234,0.727,235,0.752,236,1.042,237,1.491,238,1.132,239,0.703,240,0.739,241,0.605,242,0.68,243,0.715,244,0.739,245,0.715,246,0.752,247,0.715,248,0.752,249,0.703,250,0.752,251,0.715,252,0.739,253,0.752,254,0.003,255,0.003,258,1.432,267,4.609,278,1.54,284,2.71,287,1.338,293,1.023,301,1.57,308,0.991,328,2.707,361,1.853,397,1.786,398,2.537,650,2.016,654,2.489,694,3.989,735,4.692,751,1.698,766,3.901,768,2.016,775,3.901,785,3.209,794,2.59,795,2.59,796,2.771,797,2.445,798,2.445,841,3.466,853,2.79,866,1.979,870,5.222,972,2.307,976,4.602,977,3.089,978,3.089,979,3.089,980,3.089,981,3.089,982,4.661,983,2.131,984,2.051,985,4.348,986,2.051,987,2.051,988,1.496,989,1.979,990,1.853,991,1.853,992,2.051,993,2.131,994,3.089,995,4.135,996,2.425,997,4.279,998,2.051,999,2.881,1000,1.979,1001,3.089,1002,2.364,1003,3.357,1004,1.913,1005,2.051,1006,3.089,1007,3.776,1008,2.051,1009,2.131,1010,2.051,1011,2.051,1012,2.051,1013,2.131,1014,3.089,1015,2.051,1016,3.089,1024,2.221,1025,2.131,1062,2.325,1483,2.59,1883,2.325,1884,3.345,1885,2.445,1897,5.588,1898,4.174,2250,2.98,2267,5.601,2282,4.539,2283,4.174,2308,8.211,2309,7.316,2310,3.382,2311,6.077,2312,6.128,2313,5.094,2314,6.128,2315,6.128,2316,5.094,2317,3.382,2318,3.382,2319,3.382,2320,3.382,2321,3.382,2322,3.382,2323,3.382,2324,3.382,2325,3.382,2326,3.382,2327,3.382,2328,6.128,2329,5.094,2330,5.46,2331,4.174,2332,3.382,2333,3.382]],["title/components/IntegrationEntryComponent.html",[0,0.226,175,1.006]],["body/components/IntegrationEntryComponent.html",[0,0.329,1,0.869,2,1.258,3,0.077,4,0.065,5,0.855,6,0.945,7,0.929,8,0.929,9,0.059,13,1.736,14,2.629,15,0.773,16,1.742,17,1.956,18,0.813,19,1.279,20,0.827,21,1.237,23,1.237,25,0.205,32,0.733,36,2.865,37,1.042,44,0.844,47,0.007,48,0.568,49,0.34,52,0.467,53,0.76,60,0.735,61,0.629,62,0.899,71,0.205,73,0.405,77,1.138,81,0.773,85,0.071,90,0.107,110,1.831,113,1.199,114,1.335,115,0.929,116,1.279,117,1.464,118,0.773,119,1.812,120,0.929,121,1.54,122,0.869,123,0.899,124,0.884,125,0.929,126,0.869,127,0.929,128,0.884,129,0.899,130,0.929,131,0.899,132,0.929,133,0.899,134,0.929,135,0.869,136,0.899,137,0.929,138,0.899,139,0.929,140,0.914,141,0.869,142,1.325,143,0.994,144,1.322,145,0.869,146,1.322,147,0.855,148,1.999,149,0.869,150,0.71,151,0.929,152,0.899,153,1.322,154,0.869,155,1.37,156,0.869,157,0.869,158,0.899,159,0.929,160,0.869,161,0.929,162,0.899,163,0.813,164,1.941,165,0.899,166,0.929,167,0.884,168,1.773,169,0.929,170,0.899,171,0.929,172,0.899,173,0.884,174,0.929,175,1.595,176,0.929,177,0.884,178,0.929,179,0.869,180,0.899,181,0.884,182,0.977,183,0.929,184,0.869,185,0.929,186,0.884,187,0.884,188,0.929,189,0.884,190,1.54,191,0.841,192,0.929,193,0.899,194,1.322,195,0.929,196,0.899,197,0.929,198,0.899,199,0.929,200,0.869,201,0.884,202,0.869,203,0.929,204,0.869,205,0.914,206,1.196,207,0.869,208,0.869,209,0.899,210,0.929,211,0.869,212,1.714,213,0.855,214,0.929,215,0.869,216,0.884,217,0.869,218,0.869,219,0.929,220,0.899,221,0.929,222,1.322,223,0.899,224,0.929,225,0.899,226,0.929,227,0.884,228,0.929,229,0.855,230,1.064,231,0.869,232,0.899,233,0.929,234,0.899,235,0.929,236,1.217,237,1.514,238,1.322,239,0.869,240,0.914,241,0.747,242,0.841,243,0.884,244,0.914,245,0.884,246,0.929,247,0.884,248,0.929,249,0.869,250,0.929,251,0.884,252,0.914,253,0.929,254,0.004,255,0.004,258,1.937,278,1.799,287,2.354,308,1.096,398,1.22,399,1.849,596,1.555,685,1.761,686,1.767,691,1.335,693,1.287,694,4.665,697,1.766,713,2.043,717,2.213,718,2.259,719,2.259,720,1.555,721,1.287,722,2.222,723,2.158,724,1.524,730,2.926,731,2.571,736,3.161,748,1.495,750,3.749,758,2.446,768,2.354,904,3.201,1085,2.631,1943,5.186,2250,2.446,2259,5.675,2334,8.716,2335,7.766,2336,4.181,2337,6.927,2338,5.95,2339,5.95,2340,7.106,2341,5.95,2342,4.181,2343,4.181,2344,4.181,2345,4.181,2346,6.927,2347,4.181,2348,5.302,2349,3.201]],["title/components/IntegrationGithubComponent.html",[0,0.226,177,1.006]],["body/components/IntegrationGithubComponent.html",[0,0.314,1,0.803,2,1.188,3,0.071,4,0.06,5,0.789,6,0.872,7,0.858,8,0.858,9,0.055,13,1.639,14,2.514,15,0.714,16,1.736,17,1.95,18,1.288,19,1.208,20,0.763,21,1.168,23,1.168,25,0.189,26,0.521,27,1.151,29,2.322,32,0.692,36,2.761,37,0.581,44,0.861,46,0.475,47,0.007,48,0.582,49,0.282,50,0.382,52,0.813,53,1.323,60,1.164,61,0.997,62,1.564,63,3.153,65,1.496,66,3.074,71,0.379,73,0.374,74,1.232,77,1.074,81,0.714,85,0.066,88,1.13,89,2.736,90,0.099,110,1.188,113,1.611,114,1.793,115,0.858,116,1.208,117,1.4,118,0.714,119,1.865,120,0.858,121,1.472,122,0.803,123,0.83,124,0.816,125,0.858,126,0.803,127,0.858,128,0.816,129,0.83,130,0.858,131,0.83,132,0.858,133,0.83,134,0.858,135,0.803,136,0.83,137,0.858,138,0.83,139,0.858,140,0.844,141,0.803,142,1.267,143,0.938,144,1.249,145,0.803,146,1.249,147,0.789,148,1.964,149,0.803,150,0.656,151,0.858,152,0.83,153,1.249,154,0.803,155,1.31,156,0.803,157,0.803,158,0.83,159,0.858,160,0.803,161,0.858,162,0.83,163,1.659,164,1.837,165,0.83,166,0.858,167,0.816,168,1.512,169,0.858,170,0.83,171,0.858,172,0.83,173,0.816,174,0.858,175,0.816,176,0.858,177,1.538,178,0.858,179,0.803,180,0.83,181,0.816,182,0.922,183,0.858,184,0.803,185,0.858,186,0.816,187,1.188,188,0.858,189,0.816,190,1.472,191,0.776,192,0.858,193,0.83,194,1.249,195,0.858,196,0.83,197,0.858,198,0.83,199,0.858,200,0.803,201,0.816,202,0.803,203,0.858,204,0.803,205,0.844,206,1.13,207,0.803,208,0.803,209,0.83,210,0.858,211,0.803,212,1.662,213,0.789,214,0.858,215,0.803,216,0.816,217,0.803,218,0.803,219,0.858,220,0.83,221,0.858,222,1.249,223,0.83,224,0.858,225,0.83,226,0.858,227,0.816,228,0.858,229,0.789,230,1.004,231,0.803,232,0.83,233,0.858,234,0.83,235,0.858,236,1.149,237,1.448,238,1.249,239,0.803,240,0.844,241,0.69,242,0.776,243,0.816,244,0.844,245,0.816,246,0.858,247,0.816,248,0.858,249,0.803,250,0.858,251,0.816,252,0.844,253,0.858,254,0.004,255,0.004,287,2.621,293,1.167,310,1.792,311,2.09,375,1.303,397,1.354,398,2.354,399,1.707,663,5.258,685,0.981,686,1.669,688,1.748,689,1.56,691,1.232,717,1.436,718,1.465,719,2.133,720,2.09,721,1.729,722,2.051,723,1.992,724,1.408,730,2.373,731,2.427,768,2.223,811,2.432,926,2.791,939,2.341,945,2.985,1211,4.562,1214,7.874,1238,2.432,1513,3.861,1944,4.35,1956,2.432,1957,2.432,1958,2.535,1975,3.163,2251,2.432,2350,8.837,2351,3.861,2352,6.623,2353,5.618,2354,6.623,2355,6.623,2356,7.274,2357,7.274,2358,7.274,2359,3.44,2360,5.618,2361,3.861,2362,3.861,2363,3.861,2364,3.861,2365,3.861,2366,3.861,2367,3.861,2368,3.861,2369,5.618,2370,5.618,2371,3.861,2372,3.861,2373,3.861,2374,3.861,2375,3.861,2376,5.006,2377,5.618]],["title/components/LandingPageComponent.html",[0,0.226,179,0.989]],["body/components/LandingPageComponent.html",[0,0.357,1,1.014,2,1.4,3,0.09,4,0.076,5,0.997,6,1.102,7,1.084,8,1.084,9,0.069,15,0.902,16,1.751,17,1.968,18,0.948,19,1.424,20,0.964,21,1.377,23,1.377,37,1.132,44,0.483,47,0.006,48,0.608,71,0.239,73,0.472,77,1.266,81,0.902,85,0.083,90,0.125,115,1.084,116,1.424,117,1.59,118,0.902,119,1.763,120,1.084,121,1.671,122,1.014,123,1.048,124,1.031,125,1.084,126,1.014,127,1.084,128,1.031,129,1.048,130,1.084,131,1.048,132,1.084,133,1.048,134,1.084,135,1.014,136,1.048,137,1.084,138,1.048,139,1.084,140,1.066,141,1.014,142,1.438,143,1.106,144,1.472,145,1.014,146,1.472,147,0.997,148,2.062,149,1.014,150,0.829,151,1.084,152,1.048,153,1.472,154,1.014,155,1.487,156,1.014,157,1.014,158,1.048,159,1.084,160,1.014,161,1.084,162,1.048,163,0.948,164,1.563,165,1.048,166,1.084,167,1.031,168,1.377,169,1.084,170,1.048,171,1.084,172,1.048,173,1.031,174,1.084,175,1.031,176,1.084,177,1.031,178,1.084,179,1.677,180,1.946,181,1.031,182,1.087,183,1.084,184,1.014,185,1.084,186,1.031,187,1.031,188,1.084,189,1.031,190,1.671,191,0.981,192,1.084,193,1.048,194,1.472,195,1.084,196,1.048,197,1.084,198,1.048,199,1.084,200,1.014,201,1.031,202,1.014,203,1.084,204,1.014,205,1.066,206,1.332,207,1.014,208,1.014,209,1.048,210,1.084,211,1.014,212,1.813,213,0.997,214,1.084,215,1.014,216,1.031,217,1.014,218,1.014,219,1.084,220,1.048,221,1.084,222,1.472,223,1.048,224,1.084,225,1.048,226,1.084,227,1.031,228,1.084,229,0.997,230,1.184,231,1.014,232,1.048,233,1.084,234,1.048,235,1.084,236,1.354,237,1.644,238,1.472,239,1.014,240,1.066,241,1.344,242,0.981,243,1.031,244,1.066,245,1.031,246,1.084,247,1.031,248,1.084,249,1.014,250,1.084,251,1.031,252,1.066,253,1.084,254,0.004,255,0.004,424,6.608,2378,6.622,2379,4.877,2380,7.52,2381,6.622,2382,4.877]],["title/interfaces/LetContext.html",[86,0.741,2383,3.898]],["body/interfaces/LetContext.html",[3,0.131,4,0.111,9,0.101,16,1.23,25,0.349,26,0.782,47,0.007,49,0.303,61,1.071,71,0.349,73,0.689,85,0.121,86,1.109,90,0.183,91,1.361,118,1.557,168,1.751,249,1.48,254,0.006,255,0.006,256,2.272,284,3.147,342,7.1,1085,3.147,1318,6.449,2383,7.349,2384,6.341,2385,8.55,2386,7.504,2387,6.341,2388,6.341,2389,6.341,2390,6.341,2391,6.341,2392,6.341,2393,6.341]],["title/directives/LetDirective.html",[118,0.88,249,0.989]],["body/directives/LetDirective.html",[3,0.121,4,0.103,9,0.094,15,1.217,16,1.389,25,0.323,26,0.746,37,0.991,44,0.894,46,0.99,47,0.007,48,0.605,49,0.385,50,0.795,52,0.736,53,1.197,60,1.157,61,1.305,71,0.323,73,0.638,85,0.112,86,1.026,90,0.169,91,1.659,118,1.486,168,1.671,242,1.324,249,1.671,254,0.005,255,0.005,284,2.911,342,7.093,768,3.18,1056,3.73,1085,3.554,1318,6.917,2383,7.108,2384,5.866,2385,8.646,2386,8.05,2387,7.73,2388,7.161,2389,7.73,2390,5.866,2391,5.866,2392,5.866,2393,5.866,2394,8.037,2395,6.584,2396,8.037,2397,6.584]],["title/components/ListGroupComponent.html",[0,0.226,181,1.006]],["body/components/ListGroupComponent.html",[0,0.345,1,0.952,2,1.34,3,0.084,4,0.071,5,0.936,6,1.034,7,1.017,8,1.017,9,0.065,13,1.85,14,2.761,15,0.846,16,1.748,17,1.963,18,0.89,19,1.363,20,0.905,21,1.318,23,1.318,25,0.225,32,0.781,36,2.981,37,1.095,44,0.72,47,0.006,48,0.592,49,0.195,52,0.512,53,0.832,71,0.225,73,0.443,77,1.212,81,0.846,85,0.078,90,0.118,110,1.409,113,1.312,114,1.461,115,1.017,116,1.363,117,1.538,118,0.846,119,1.865,120,1.017,121,1.617,122,0.952,123,0.984,124,0.968,125,1.017,126,0.952,127,1.017,128,0.968,129,0.984,130,1.017,131,0.984,132,1.017,133,0.984,134,1.017,135,0.952,136,0.984,137,1.017,138,0.984,139,1.017,140,1,141,0.952,142,1.391,143,1.059,144,1.409,145,0.952,146,1.409,147,0.936,148,2.037,149,0.952,150,0.778,151,1.017,152,0.984,153,1.409,154,0.952,155,1.438,156,0.952,157,0.952,158,0.984,159,1.017,160,0.952,161,1.017,162,0.984,163,0.89,164,1.512,165,0.984,166,1.017,167,0.968,168,1.633,169,1.017,170,0.984,171,1.017,172,0.984,173,0.968,174,1.017,175,0.968,176,1.017,177,0.968,178,1.017,179,0.952,180,0.984,181,1.66,182,1.486,183,1.017,184,0.952,185,1.017,186,0.968,187,0.968,188,1.017,189,0.968,190,1.617,191,0.92,192,1.017,193,0.984,194,1.409,195,1.017,196,0.984,197,1.017,198,0.984,199,1.017,200,0.952,201,0.968,202,0.952,203,1.017,204,0.952,205,1,206,1.275,207,0.952,208,0.952,209,0.984,210,1.017,211,0.952,212,1.773,213,0.936,214,1.017,215,0.952,216,0.968,217,0.952,218,0.952,219,1.017,220,0.984,221,1.017,222,1.409,223,0.984,224,1.017,225,0.984,226,1.017,227,0.968,228,1.017,229,0.936,230,1.133,231,0.952,232,0.984,233,1.017,234,0.984,235,1.017,236,1.296,237,1.59,238,1.409,239,0.952,240,1,241,0.818,242,0.92,243,0.968,244,1,245,0.968,246,1.017,247,0.968,248,1.017,249,0.952,250,1.017,251,0.968,252,1,253,1.017,254,0.004,255,0.004,308,0.921,398,2.123,399,2.804,596,1.702,685,1.163,693,1.409,694,4.824,724,1.669,730,1.933,748,1.636,755,2.677,758,2.677,768,2.509,922,3.473,1034,2.883,2250,3.709,2398,7.853,2399,6.997,2400,4.577,2401,7.274,2402,6.34,2403,6.34,2404,4.577,2405,4.078,2406,3.75,2407,3.75]],["title/guards/LoggedInUsersGuard.html",[432,3.898,2408,3.898]],["body/guards/LoggedInUsersGuard.html",[3,0.128,4,0.108,9,0.098,13,2.02,25,0.34,32,1.02,37,1.042,44,0.82,46,0.853,47,0.007,48,0.522,49,0.295,50,0.685,52,0.774,71,0.435,73,0.671,85,0.118,90,0.178,91,1.324,106,1.314,254,0.005,255,0.005,278,2.093,287,2.739,293,2.093,322,3.082,373,3.573,374,3.382,375,2.336,389,4.12,431,2.17,432,6.788,443,8.497,486,5.452,940,5.672,2409,6.169,2410,8.866,2411,6.923,2412,6.169,2413,6.923,2414,6.923,2415,5.301,2416,6.923]],["title/components/LoginPage.html",[0,0.226,184,0.989]],["body/components/LoginPage.html",[0,0.277,1,0.651,2,1.015,3,0.058,4,0.049,5,0.64,6,0.707,7,0.696,8,0.696,9,0.044,13,1.402,14,2.218,15,0.579,16,1.72,17,1.932,18,0.609,19,1.032,20,0.619,21,0.999,23,0.999,25,0.154,26,0.446,27,1.064,29,2.992,32,0.592,36,2.488,37,0.723,44,0.769,46,0.592,47,0.007,48,0.562,49,0.279,50,0.738,52,0.653,53,1.063,60,0.55,61,0.471,62,1.723,63,2.782,64,1.901,65,3.01,66,3.281,71,0.381,73,0.303,74,0.999,77,0.919,81,0.579,83,0.852,85,0.053,90,0.08,91,1.427,103,1.571,104,1.571,106,0.762,110,0.964,111,1.119,113,2.623,114,2.558,115,0.696,116,1.032,117,1.235,118,0.579,119,1.796,120,0.696,121,1.299,122,0.651,123,0.673,124,0.662,125,0.696,126,0.651,127,0.696,128,0.662,129,0.673,130,0.696,131,0.673,132,0.696,133,0.673,134,0.696,135,0.651,136,0.673,137,0.696,138,0.673,139,0.696,140,0.684,141,0.651,142,1.118,143,0.802,144,1.068,145,0.651,146,1.068,147,0.64,148,1.864,149,0.651,150,0.532,151,0.696,152,0.673,153,1.068,154,0.651,155,1.156,156,0.651,157,0.651,158,0.673,159,0.696,160,0.651,161,1.299,162,0.673,163,0.609,164,1.215,165,0.673,166,0.696,167,0.662,168,1.215,169,0.696,170,0.673,171,0.696,172,0.673,173,0.662,174,0.696,175,0.662,176,0.696,177,0.662,178,0.696,179,0.651,180,0.673,181,0.662,182,0.788,183,0.696,184,1.363,185,0.696,186,0.662,187,1.577,188,0.696,189,0.662,190,1.299,191,0.629,192,0.696,193,0.673,194,1.068,195,0.696,196,0.673,197,0.696,198,0.673,199,0.696,200,0.651,201,0.662,202,0.651,203,0.696,204,0.651,205,0.684,206,1.175,207,0.651,208,0.651,209,0.673,210,0.696,211,0.651,212,1.52,213,0.64,214,0.696,215,0.651,216,0.662,217,0.651,218,0.651,219,0.696,220,0.673,221,0.696,222,1.068,223,0.673,224,0.696,225,0.673,226,0.696,227,0.662,228,0.696,229,0.64,230,0.859,231,0.651,232,0.673,233,0.696,234,0.673,235,0.696,236,0.982,237,1.277,238,1.068,239,0.651,240,0.684,241,0.56,242,0.629,243,0.662,244,1.277,245,0.662,246,0.696,247,0.662,248,0.696,249,0.651,250,0.696,251,0.662,252,0.684,253,0.696,254,0.003,255,0.003,293,1.452,308,0.698,310,1.453,389,3.356,397,2.616,398,2.49,400,1.616,412,2.552,431,0.981,481,5.686,483,3.678,484,4.127,486,4.219,515,1.715,518,6.299,582,3.305,685,1.666,686,2.381,687,3.057,688,2.175,689,1.942,691,2.092,693,1.799,706,1.418,709,1.418,712,1.972,713,1.529,717,2.438,718,2.218,719,2.488,720,2.174,721,1.799,722,1.663,723,1.616,724,2.131,727,2.124,728,2.075,729,2.81,752,1.616,753,2.175,804,1.293,806,4.286,812,1.571,828,1.571,847,3.026,879,1.898,911,2.151,922,2.631,930,2.263,935,2.397,936,2.565,941,5.018,942,2.056,943,1.831,944,1.972,945,1.663,946,4.087,947,2.151,948,3.154,949,2.151,950,1.831,951,5.765,952,2.912,953,1.972,954,1.831,955,1.898,956,1.898,957,3.154,958,2.263,959,4.504,960,2.151,961,4.643,962,4.504,963,2.151,964,2.151,965,2.151,966,2.056,967,2.151,968,2.151,969,2.151,970,2.151,1030,3.851,1119,3.472,1163,1.972,1272,3.301,1273,3.678,1274,2.411,1539,2.912,1735,2.565,1736,3.472,1739,2.565,1764,1.384,1826,1.77,1827,2.631,2417,3.131,2418,5.844,2419,4.803,2420,5.844,2421,4.28,2422,5.615,2423,3.131,2424,4.28,2425,3.131,2426,3.131,2427,3.131,2428,3.131,2429,3.131,2430,3.131,2431,2.565,2432,3.131,2433,4.803,2434,4.803,2435,3.131,2436,3.131,2437,2.789,2438,3.131,2439,3.131,2440,3.131,2441,2.789,2442,3.131,2443,4.28,2444,2.789,2445,2.789,2446,3.131,2447,2.789,2448,3.131,2449,4.28,2450,4.28,2451,4.28,2452,4.28]],["title/modules/MainModule.html",[401,1.965,410,2.691]],["body/modules/MainModule.html",[2,1.593,3,0.077,4,0.065,9,0.059,47,0.007,71,0.493,73,0.404,74,1.33,76,2.437,85,0.118,90,0.178,93,0.942,117,1.255,122,1.234,131,1.276,133,1.276,138,1.276,152,1.276,158,1.276,165,1.276,170,1.276,172,1.276,173,1.255,186,1.255,187,1.462,191,1.193,193,1.276,196,1.276,198,1.276,209,1.276,220,1.276,223,1.276,225,1.276,232,1.276,234,1.276,243,1.255,245,0.881,247,1.255,249,1.234,251,1.255,254,0.004,255,0.004,258,0.974,275,2.214,293,1.26,323,3.251,337,4.079,367,3.713,368,3.19,401,3.29,403,3.441,404,4.261,410,4.682,411,3.599,412,2.214,413,1.934,415,4.747,416,3.696,418,3.47,427,3.599,429,3.739,431,1.306,436,3.414,437,3.713,457,2.625,464,3.898,465,2.625,466,4.291,539,3.713,549,2.825,588,3.713,871,3.713,985,2.356,988,1.843,1055,4.545,1060,4.545,1087,2.736,1088,3.19,1276,3.713,1287,6.782,1302,2.15,1309,3.713,1453,3.713,1605,4.545,1613,3.19,1721,4.863,1983,4.545,2016,4.545,2108,3.713,2309,3.713,2453,4.167,2454,5.935,2455,5.935,2456,4.167,2457,5.935,2458,5.935,2459,5.935,2460,4.167,2461,5.935,2462,4.167,2463,5.935,2464,4.167,2465,5.935,2466,5.935,2467,5.935,2468,5.935,2469,4.167,2470,5.935,2471,4.167,2472,6.914,2473,4.167,2474,5.935,2475,4.167,2476,6.914,2477,4.167,2478,5.935,2479,5.935,2480,4.167,2481,5.935,2482,4.167,2483,5.935,2484,4.167,2485,5.935,2486,4.167,2487,5.935,2488,4.167,2489,5.935,2490,4.167,2491,5.935,2492,4.167,2493,5.935,2494,4.167,2495,5.935,2496,4.167,2497,5.935,2498,3.713,2499,3.713,2500,4.167,2501,4.167,2502,4.167,2503,4.167,2504,5.935,2505,4.167,2506,4.167,2507,3.713,2508,4.167,2509,4.167,2510,4.167,2511,5.935,2512,3.713,2513,4.167,2514,3.713,2515,4.167,2516,4.167,2517,4.167,2518,4.167,2519,3.713,2520,5.935,2521,4.167,2522,3.713,2523,4.167,2524,4.167,2525,4.167,2526,3.713,2527,4.167,2528,4.167,2529,4.167,2530,4.167,2531,4.167,2532,4.167,2533,4.167,2534,4.167,2535,4.863,2536,4.167,2537,3.713,2538,4.167,2539,4.167,2540,3.713,2541,4.167,2542,5.289,2543,4.167,2544,3.713,2545,4.167,2546,4.167,2547,4.167,2548,4.167,2549,4.167,2550,5.935,2551,4.167,2552,5.935,2553,4.167,2554,4.167,2555,4.167,2556,4.167]],["title/components/MainViewComponent.html",[0,0.226,186,1.006]],["body/components/MainViewComponent.html",[0,0.333,1,0.889,2,1.278,3,0.079,4,0.067,5,0.875,6,0.967,7,0.951,8,0.951,9,0.061,13,1.764,14,2.662,15,0.791,16,1.743,17,1.958,18,0.832,19,1.3,20,0.846,21,1.257,23,1.257,25,0.21,26,0.561,27,1.191,32,0.745,36,2.894,37,1.055,44,0.754,47,0.007,48,0.574,52,0.478,53,0.778,60,1.063,61,0.91,71,0.344,73,0.414,77,1.156,81,0.791,85,0.073,90,0.11,113,2.011,114,2.74,115,0.951,116,1.3,117,1.483,118,0.791,119,1.825,120,0.951,121,1.559,122,0.889,123,0.919,124,0.904,125,0.951,126,0.889,127,0.951,128,0.904,129,0.919,130,0.951,131,0.919,132,0.951,133,0.919,134,0.951,135,0.889,136,0.919,137,0.951,138,0.919,139,0.951,140,0.935,141,0.889,142,1.341,143,1.01,144,1.344,145,0.889,146,1.344,147,0.875,148,2.009,149,0.889,150,0.727,151,0.951,152,0.919,153,1.344,154,0.889,155,1.387,156,0.889,157,0.889,158,0.919,159,0.951,160,0.889,161,0.951,162,0.919,163,0.832,164,1.458,165,0.919,166,0.951,167,0.904,168,1.257,169,0.951,170,0.919,171,0.951,172,0.919,173,0.904,174,0.951,175,0.904,176,0.951,177,0.904,178,0.951,179,0.889,180,0.919,181,0.904,182,0.993,183,0.951,184,0.889,185,0.951,186,1.612,187,1.885,188,0.951,189,0.904,190,1.559,191,0.86,192,0.951,193,0.919,194,1.344,195,0.951,196,0.919,197,0.951,198,0.919,199,0.951,200,0.889,201,0.904,202,0.889,203,0.951,204,0.889,205,0.935,206,1.216,207,0.889,208,0.889,209,0.919,210,0.951,211,0.889,212,1.729,213,0.875,214,0.951,215,0.889,216,0.904,217,0.889,218,0.889,219,0.951,220,0.919,221,0.951,222,1.344,223,0.919,224,0.951,225,0.919,226,0.951,227,0.904,228,0.951,229,0.875,230,1.081,231,0.889,232,0.919,233,0.951,234,0.919,235,0.951,236,1.236,237,1.758,238,1.344,239,0.889,240,0.935,241,0.765,242,0.86,243,0.904,244,0.935,245,0.904,246,0.951,247,0.904,248,0.951,249,0.889,250,0.951,251,0.904,252,0.935,253,0.951,254,0.004,255,0.004,282,1.471,311,1.591,366,3.504,369,3.811,397,1.5,398,2.225,399,1.892,400,2.207,436,6.59,685,1.783,686,2.48,687,2.836,688,2.739,689,1.729,690,2.593,696,4.253,697,1.807,698,1.807,705,3.971,721,1.317,724,1.559,725,3.504,736,2.273,742,1.591,750,2.695,760,3.092,782,2.419,804,1.767,811,2.695,825,2.207,1289,6.036,1332,3.504,2295,3.275,2557,8.044,2558,4.277,2559,7.014,2560,6.047,2561,7.44,2562,6.047,2563,4.277,2564,6.047,2565,4.277,2566,5.388]],["title/classes/Marked.html",[90,0.122,1628,3.439]],["body/classes/Marked.html",[3,0.125,4,0.106,9,0.096,25,0.333,26,0.759,27,1.167,32,1.007,44,0.869,47,0.007,52,0.915,53,1.232,60,1.191,61,1.02,62,1.457,71,0.431,85,0.115,90,0.174,91,1.68,106,1.297,254,0.005,255,0.005,287,3.237,293,2.049,1066,2.928,1302,5.031,1581,6.038,1628,6.595,1629,5.189,2567,6.777,2568,7.829,2569,9.124,2570,7.475,2571,6.777,2572,6.777,2573,6.777,2574,7.652,2575,6.777,2576,6.039,2577,6.777,2578,8.18,2579,6.777,2580,6.777,2581,6.039]],["title/components/MemberListComponent.html",[0,0.226,189,1.006]],["body/components/MemberListComponent.html",[0,0.32,1,0.827,2,1.214,3,0.073,4,0.062,5,0.813,6,0.899,7,0.884,8,0.884,9,0.056,13,1.675,14,2.557,15,0.736,16,1.738,17,1.952,18,0.774,19,1.937,20,0.787,21,1.194,23,1.194,25,0.195,26,0.533,27,1.163,32,0.707,36,2.8,37,0.599,44,0.851,46,0.707,47,0.007,48,0.648,49,0.379,50,0.568,52,0.642,53,1.044,60,0.699,61,0.599,64,2.919,68,2.317,71,0.384,73,0.385,77,1.098,81,0.736,83,1.083,85,0.068,87,1.802,88,1.573,89,3.231,90,0.102,91,0.761,93,0.899,115,0.884,116,1.234,117,1.424,118,0.736,119,1.612,120,0.884,121,1.497,122,0.827,123,0.855,124,0.841,125,0.884,126,0.827,127,0.884,128,0.841,129,0.855,130,0.884,131,0.855,132,0.884,133,0.855,134,0.884,135,0.827,136,0.855,137,0.884,138,0.855,139,0.884,140,0.869,141,0.827,142,1.496,143,0.959,144,1.276,145,0.827,146,1.276,147,0.813,148,1.977,149,0.827,150,1.145,151,0.884,152,0.855,153,1.276,154,0.827,155,1.662,156,0.827,157,0.827,158,0.855,159,0.884,160,0.827,161,0.884,162,0.855,163,0.774,164,1.401,165,0.855,166,0.884,167,0.841,168,1.695,169,0.884,170,0.855,171,0.884,172,0.855,173,0.841,174,0.884,175,0.841,176,0.884,177,0.841,178,0.884,179,0.827,180,0.855,181,0.841,182,1.211,183,0.884,184,0.827,185,0.884,186,0.841,187,0.841,188,0.884,189,1.559,190,1.497,191,0.8,192,0.884,193,0.855,194,1.276,195,0.884,196,0.855,197,0.884,198,0.855,199,0.884,200,0.827,201,0.841,202,0.827,203,0.884,204,0.827,205,0.869,206,1.155,207,0.827,208,0.827,209,0.855,210,0.884,211,0.827,212,1.681,213,0.813,214,0.884,215,0.827,216,0.841,217,0.827,218,0.827,219,0.884,220,0.855,221,0.884,222,1.276,223,0.855,224,0.884,225,0.855,226,0.884,227,0.841,228,0.884,229,0.813,230,1.026,231,0.827,232,0.855,233,0.884,234,0.855,235,0.884,236,1.174,237,1.473,238,1.276,239,0.827,240,0.869,241,0.711,242,0.8,243,0.841,244,0.869,245,0.841,246,0.884,247,0.841,248,0.884,249,0.827,250,0.884,251,0.841,252,0.869,253,0.884,254,0.004,255,0.004,308,0.834,375,1.343,431,1.247,514,3.481,515,4.041,546,4.105,551,4.942,589,3.941,590,2.612,591,2.506,593,2.612,609,2.25,610,2.327,676,2.506,747,1.27,760,4.15,768,2.272,1137,6.678,1172,3.259,1217,7.808,2582,8.763,2583,3.978,2584,6.737,2585,5.742,2586,5.742,2587,6.737,2588,3.978,2589,5.742,2590,3.978,2591,3.978,2592,5.742,2593,3.978,2594,3.978,2595,3.978,2596,3.978,2597,3.978,2598,3.978,2599,3.978,2600,5.742,2601,5.742,2602,5.742,2603,5.742]],["title/injectables/MemberService.html",[322,1.77,551,2.885]],["body/injectables/MemberService.html",[3,0.086,4,0.072,9,0.066,18,1.611,19,1.923,25,0.228,27,1.361,32,0.788,37,0.698,44,0.848,46,1.055,47,0.007,48,0.645,49,0.365,50,0.848,52,1.028,62,0.997,68,3.352,71,0.407,73,0.449,83,1.262,85,0.079,88,1.96,89,3.696,90,0.119,106,1.359,109,5.248,143,1.623,182,1.297,201,1.856,254,0.004,255,0.004,258,1.936,308,1.064,314,3.54,322,2.38,323,4.693,324,2.394,326,2.643,333,5.497,349,7.036,350,6.643,373,2.394,374,2.266,375,1.565,494,2.812,512,3.353,513,3.188,517,3.781,551,3.88,589,3.743,590,3.046,591,2.922,747,2.988,771,3.793,991,4.693,1144,4.031,1380,6.471,1438,5.709,2604,4.638,2605,8.567,2606,4.638,2607,4.638,2608,4.638,2609,6.399,2610,6.528,2611,6.399,2612,4.638,2613,5.242,2614,4.638,2615,5.242,2616,6.399,2617,4.638,2618,6.399,2619,4.638,2620,6.399,2621,6.399,2622,4.638,2623,4.638,2624,4.638,2625,3.8,2626,4.638,2627,4.638,2628,4.638,2629,4.133,2630,4.133,2631,4.133,2632,3.8]],["title/modules/MessagesModule.html",[401,1.965,2633,3.643]],["body/modules/MessagesModule.html",[3,0.134,4,0.113,9,0.103,47,0.007,71,0.444,73,0.704,85,0.124,90,0.187,254,0.006,255,0.006,403,3.14,404,4.822,411,5.169,412,3.861,413,3.373,415,4.578,416,3.957,418,4.279,464,5.599,465,4.578,2633,7.381,2634,6.475,2635,6.475,2636,6.969,2637,7.266,2638,7.266]],["title/modules/MessagesRoutingModule.html",[401,1.965,2636,3.439]],["body/modules/MessagesRoutingModule.html",[0,0.338,3,0.131,4,0.111,9,0.101,28,3.079,47,0.007,71,0.44,73,0.69,85,0.121,90,0.183,93,1.611,182,1.17,191,1.695,254,0.006,255,0.006,401,2.944,403,3.079,416,3.308,418,4.23,429,5.311,430,5.354,431,2.234,438,4.49,447,6.093,457,4.49,485,4.898,946,3.904,1240,5.457,1245,5.457,1246,5.457,2636,6.093,2639,7.127,2640,7.127]],["title/components/MockPage.html",[0,0.226,191,0.957]],["body/components/MockPage.html",[0,0.338,1,0.917,2,1.306,3,0.081,4,0.069,5,0.902,6,0.997,7,0.98,8,0.98,9,0.063,13,1.803,14,2.707,15,0.815,16,1.745,17,1.96,18,0.858,19,1.328,20,0.872,21,1.284,23,1.284,25,0.216,26,0.573,27,1.017,32,0.761,36,2.933,37,0.664,44,0.706,46,0.543,47,0.007,48,0.613,49,0.263,50,0.436,52,0.493,53,0.802,60,0.775,61,0.664,71,0.303,73,0.427,77,1.181,81,0.815,85,0.075,90,0.113,110,1.357,111,1.576,113,1.264,114,1.408,115,0.98,116,1.328,117,1.508,118,0.815,119,1.778,120,0.98,121,1.585,122,0.917,123,0.948,124,0.932,125,0.98,126,0.917,127,0.98,128,0.932,129,0.948,130,0.98,131,0.948,132,0.98,133,0.948,134,0.98,135,0.917,136,0.948,137,0.98,138,0.948,139,0.98,140,0.964,141,0.917,142,1.364,143,1.032,144,1.373,145,0.917,146,1.373,147,0.902,148,2.022,149,0.917,150,0.749,151,0.98,152,0.948,153,1.373,154,0.917,155,1.41,156,0.917,157,0.917,158,0.948,159,0.98,160,0.917,161,0.98,162,0.948,163,0.858,164,1.483,165,0.948,166,0.98,167,0.932,168,1.284,169,0.98,170,0.948,171,0.98,172,0.948,173,0.932,174,0.98,175,0.932,176,0.98,177,0.932,178,0.98,179,0.917,180,0.948,181,0.932,182,1.014,183,0.98,184,0.917,185,0.98,186,0.932,187,0.932,188,0.98,189,0.932,190,1.585,191,1.554,192,0.98,193,0.948,194,1.373,195,0.98,196,0.948,197,0.98,198,0.948,199,0.98,200,0.917,201,0.932,202,0.917,203,0.98,204,0.917,205,0.964,206,1.242,207,0.917,208,0.917,209,0.948,210,0.98,211,0.917,212,1.749,213,0.902,214,0.98,215,0.917,216,0.932,217,0.917,218,0.917,219,0.98,220,0.948,221,0.98,222,1.373,223,0.948,224,0.98,225,0.948,226,0.98,227,0.932,228,0.98,229,0.902,230,1.104,231,0.917,232,0.948,233,0.98,234,0.948,235,0.98,236,1.263,237,1.559,238,1.373,239,0.917,240,0.964,241,0.788,242,0.887,243,0.932,244,0.964,245,0.932,246,0.98,247,0.932,248,0.98,249,0.917,250,0.98,251,0.932,252,0.964,253,0.98,254,0.004,255,0.004,282,1.517,308,0.897,311,2.298,375,1.488,397,1.546,398,1.803,431,1.382,545,2.896,546,4.12,596,1.64,685,1.571,697,1.863,698,1.863,702,1.905,717,2.298,719,2.345,721,1.357,730,3.012,731,2.669,748,2.209,804,2.552,805,2.343,812,3.878,825,2.276,832,3.188,946,4.456,954,2.579,1034,2.778,2406,3.613,2407,3.613,2641,4.41,2642,6.178,2643,7.131,2644,6.178,2645,4.41,2646,4.41,2647,4.41,2648,4.41,2649,4.41,2650,4.41,2651,5.505,2652,4.41,2653,2.896,2654,3.188,2655,4.41]],["title/interfaces/ModifyUser.html",[86,0.741,2656,3.27]],["body/interfaces/ModifyUser.html",[3,0.126,4,0.107,9,0.097,25,0.335,26,0.762,47,0.007,48,0.716,49,0.389,64,2.701,85,0.156,86,1.425,88,1.772,254,0.005,255,0.005,256,2.179,308,1.464,484,4.972,514,5.762,515,4.5,650,3.487,747,2.622,2261,6.242,2656,5.645,2657,5.226,2658,4.934,2659,4.691,2660,4.691]],["title/classes/Monaco.html",[90,0.122,2661,3.27]],["body/classes/Monaco.html",[3,0.123,4,0.104,9,0.095,25,0.328,26,0.753,27,1.158,32,1,44,0.899,47,0.007,52,0.908,53,1.476,60,1.176,61,1.007,71,0.398,85,0.114,90,0.172,91,1.809,93,1.975,106,1.287,254,0.005,255,0.005,277,5.125,287,3.212,1056,3.768,1066,2.892,1302,5.05,2568,7.786,2570,7.443,2661,6.005,2662,6.693,2663,9.085,2664,8.738,2665,6.693,2666,6.693,2667,6.693,2668,6.693,2669,6.693,2670,5.483,2671,6.693,2672,6.693,2673,5.114,2674,6.693,2675,6.693,2676,6.693,2677,6.693,2678,6.693,2679,6.693,2680,5.964,2681,6.693,2682,6.693]],["title/classes/MonacoExtended.html",[90,0.122,2683,3.898]],["body/classes/MonacoExtended.html",[3,0.067,4,0.057,9,0.052,18,1.047,25,0.179,27,1.244,32,0.663,44,0.863,46,1.074,47,0.007,48,0.657,49,0.385,50,0.863,52,0.975,53,1.487,60,1.126,61,0.964,71,0.179,85,0.062,86,0.568,88,1.883,90,0.094,93,1.999,106,1.253,150,1.088,155,0.721,254,0.004,255,0.004,308,1.428,311,3.554,689,3.052,742,2.004,886,1.937,1003,2.951,1066,1.575,1085,1.612,1302,5.017,2661,3.702,2673,5.977,2683,4.413,2684,7.245,2685,2.986,2686,5.387,2687,5.387,2688,5.709,2689,5.709,2690,5.709,2691,5.709,2692,5.709,2693,5.387,2694,5.387,2695,5.709,2696,4.8,2697,7.979,2698,7.023,2699,5.419,2700,3.645,2701,4.8,2702,7.104,2703,3.645,2704,3.645,2705,6.728,2706,3.645,2707,3.645,2708,7.245,2709,8.128,2710,8.128,2711,3.645,2712,3.645,2713,3.645,2714,3.645,2715,7.023,2716,7.023,2717,7.023,2718,7.023,2719,3.645,2720,3.645,2721,3.645,2722,4.8,2723,3.645,2724,4.8,2725,3.645,2726,3.645,2727,3.645,2728,2.986,2729,2.986,2730,2.986,2731,2.635,2732,2.635,2733,2.635,2734,6.186,2735,6.476,2736,3.248,2737,3.248,2738,4.8,2739,3.248,2740,3.248,2741,3.248,2742,3.248,2743,3.248,2744,3.248,2745,4.8,2746,6.186,2747,6.306,2748,6.186,2749,6.306,2750,3.248,2751,3.248,2752,2.986,2753,4.8,2754,3.248,2755,5.798,2756,4.8,2757,4.8,2758,4.8,2759,3.248,2760,3.248,2761,3.248,2762,3.248,2763,3.248,2764,4.8,2765,4.8,2766,4.8,2767,4.8,2768,3.248,2769,3.248,2770,2.986,2771,4.8,2772,3.248,2773,4.413,2774,3.248,2775,3.248]],["title/components/NavElementComponent.html",[0,0.226,193,1.023]],["body/components/NavElementComponent.html",[0,0.298,1,0.735,2,1.113,3,0.065,4,0.055,5,0.723,6,0.799,7,0.786,8,0.786,9,0.05,13,1.537,15,0.654,16,1.73,17,1.943,18,0.688,19,1.132,20,0.699,21,1.095,23,1.095,25,0.174,26,0.489,27,1.322,32,0.649,37,0.947,44,0.869,47,0.007,48,0.525,49,0.317,50,0.521,52,0.78,53,1.356,57,1.493,60,1.106,61,0.947,62,1.132,71,0.342,73,0.343,77,1.007,81,0.654,83,0.962,85,0.06,90,0.091,110,2.146,113,1.804,114,2.584,115,0.786,116,1.132,117,1.652,118,0.654,119,1.77,120,0.786,121,1.399,122,0.735,123,0.76,124,0.747,125,0.786,126,0.735,127,0.786,128,0.747,129,0.76,130,0.786,131,0.76,132,0.786,133,0.76,134,0.786,135,0.735,136,0.76,137,0.786,138,0.76,139,0.786,140,0.773,141,0.735,142,1.203,143,0.879,144,1.17,145,0.735,146,1.17,147,0.723,148,1.924,149,0.735,150,0.601,151,0.786,152,0.76,153,1.17,154,0.735,155,1.244,156,0.735,157,0.735,158,0.76,159,0.786,160,0.735,161,0.786,162,0.76,163,0.688,164,1.308,165,0.76,166,0.786,167,0.747,168,1.55,169,0.786,170,0.76,171,0.786,172,0.76,173,0.747,174,0.786,175,0.747,176,0.786,177,0.747,178,0.786,179,0.735,180,0.76,181,0.747,182,1.033,183,0.786,184,0.735,185,0.786,186,0.747,187,0.747,188,0.786,189,0.747,190,1.399,191,0.711,192,0.786,193,1.499,194,1.89,195,0.786,196,0.76,197,0.786,198,0.76,199,0.786,200,0.735,201,0.747,202,0.735,203,0.786,204,0.735,205,0.773,206,1.059,207,0.735,208,0.735,209,0.76,210,0.786,211,0.735,212,1.603,213,0.723,214,0.786,215,0.735,216,0.747,217,0.735,218,0.735,219,0.786,220,0.76,221,0.786,222,1.17,223,0.76,224,0.786,225,0.76,226,0.786,227,0.747,228,0.786,229,0.723,230,0.941,231,0.735,232,0.76,233,0.786,234,0.76,235,0.786,236,1.077,237,1.375,238,1.17,239,0.735,240,0.773,241,0.632,242,0.711,243,0.747,244,0.773,245,0.747,246,0.786,247,0.747,248,0.786,249,0.735,250,0.786,251,0.747,252,0.773,253,0.786,254,0.003,255,0.003,260,1.37,278,2.108,282,1.216,287,2.49,293,1.069,308,0.765,309,2.556,310,1.641,311,1.315,339,2.718,397,1.24,398,2.363,399,1.564,413,1.641,595,1.528,596,1.315,597,1.461,598,2.275,685,2.2,686,2.525,687,2.773,688,1.601,689,1.429,690,2.144,693,2.561,696,2.144,701,1.775,702,1.528,705,3.458,706,1.601,709,1.601,717,2.907,718,2.967,719,3.285,720,2.773,721,2.295,722,1.879,723,1.825,727,2.329,728,2.275,742,1.315,748,1.264,752,1.825,753,1.601,755,3.681,768,2.084,803,2,811,2.228,817,2,818,2,841,3.559,866,2.068,867,2.228,891,2.43,893,4.52,945,1.879,950,2.068,1332,2.897,1387,3.815,1414,2.068,1901,4.549,1903,5.04,1910,5.985,2194,4.032,2250,2.068,2251,2.228,2514,7.924,2776,7.924,2777,3.536,2778,6.293,2779,5.266,2780,5.607,2781,5.607,2782,6.973,2783,6.973,2784,6.973,2785,5.607,2786,6.293,2787,5.266,2788,3.536,2789,3.536,2790,3.536,2791,3.536,2792,3.536,2793,3.536,2794,3.536,2795,4.693,2796,3.536,2797,3.536,2798,5.607,2799,3.536,2800,3.536,2801,3.151,2802,4.693,2803,3.151,2804,2.897,2805,3.151]],["title/components/NavElementWorkspaceComponent.html",[0,0.226,196,1.023]],["body/components/NavElementWorkspaceComponent.html",[0,0.242,1,0.529,2,0.863,3,0.047,4,0.04,5,0.52,6,0.575,7,0.565,8,0.565,9,0.036,13,1.191,15,0.47,16,1.7,17,1.907,18,0.495,19,0.877,20,0.503,21,0.849,23,0.849,25,0.125,26,0.379,27,1.247,32,0.503,37,0.614,44,0.891,46,0.884,47,0.007,48,0.608,49,0.35,50,0.762,52,0.947,53,1.558,57,1.075,60,1.028,61,0.88,62,0.877,71,0.388,73,0.246,77,1.672,81,0.47,83,0.692,85,0.043,90,0.065,91,1.118,110,1.971,113,1.836,114,2.577,115,0.565,116,0.877,117,2.068,118,0.47,119,1.826,120,0.565,121,1.136,122,0.529,123,0.547,124,0.538,125,0.565,126,0.529,127,0.565,128,0.538,129,0.547,130,0.565,131,0.547,132,0.565,133,0.547,134,0.565,135,0.529,136,0.547,137,0.565,138,0.547,139,0.565,140,0.556,141,0.529,142,1.307,143,1.581,144,0.907,145,0.529,146,0.907,147,0.52,148,1.756,149,0.529,150,1.088,151,0.565,152,0.547,153,0.907,154,0.529,155,1.523,156,0.529,157,0.529,158,0.547,159,0.565,160,0.529,161,0.565,162,0.547,163,0.495,164,1.063,165,0.547,166,0.565,167,0.538,168,1.331,169,0.565,170,0.547,171,0.565,172,0.547,173,0.538,174,0.565,175,0.538,176,0.565,177,0.538,178,0.565,179,0.529,180,0.547,181,0.538,182,0.67,183,0.565,184,0.529,185,0.565,186,0.538,187,0.538,188,0.565,189,0.538,190,1.136,191,0.512,192,0.565,193,0.547,194,1.712,195,0.565,196,1.257,197,0.565,198,0.547,199,0.565,200,0.529,201,1.08,202,0.529,203,0.565,204,0.529,205,0.556,206,0.821,207,0.529,208,0.529,209,0.547,210,0.565,211,0.529,212,1.376,213,0.52,214,0.565,215,0.529,216,0.538,217,0.529,218,0.529,219,0.565,220,0.547,221,0.565,222,0.907,223,0.547,224,0.565,225,0.547,226,0.565,227,0.538,228,0.565,229,0.52,230,0.73,231,0.529,232,0.547,233,0.565,234,0.547,235,0.565,236,0.835,237,1.117,238,0.907,239,0.529,240,0.556,241,0.455,242,0.512,243,0.538,244,0.556,245,0.538,246,0.565,247,0.538,248,0.565,249,0.529,250,0.565,251,0.538,252,0.556,253,0.565,254,0.003,255,0.003,260,0.986,278,1.234,282,0.875,287,2.022,293,2.066,308,0.593,309,1.839,310,1.894,339,2.106,389,3.103,397,2.518,398,2.527,399,2.832,400,1.313,413,1.894,431,0.797,549,3.418,550,3.706,595,1.099,596,0.946,597,1.051,598,2.208,685,2.123,686,2.398,687,2.776,693,2.571,701,1.277,702,1.099,705,2.68,706,1.849,709,1.849,717,2.864,718,2.923,719,3.17,720,2.542,721,2.104,722,2.169,723,2.106,727,1.805,728,1.764,730,2.47,731,2.527,742,1.901,746,1.542,747,1.303,748,0.91,752,2.106,753,1.849,755,2.99,759,2.308,768,1.615,803,1.439,817,1.439,818,1.439,841,2.89,866,1.488,867,1.603,891,1.748,893,2.475,950,2.387,1140,1.542,1141,3.43,1179,2.68,1387,3.099,1407,3.344,1414,4.201,1493,3.344,1539,3.882,1895,3.125,1901,3.695,1903,4.228,1910,5.233,1973,3.913,2062,3.637,2194,3.125,2250,2.387,2251,2.571,2255,3.344,2512,8.07,2540,2.267,2776,8.07,2780,4.554,2781,4.554,2785,4.554,2795,3.637,2801,2.267,2802,5.211,2803,3.637,2804,2.084,2805,2.267,2806,2.544,2807,5.111,2808,4.082,2809,5.111,2810,5.849,2811,5.849,2812,3.637,2813,5.211,2814,5.211,2815,4.082,2816,4.082,2817,4.082,2818,5.211,2819,4.082,2820,5.849,2821,5.849,2822,4.082,2823,2.544,2824,2.544,2825,2.544,2826,2.544,2827,3.637,2828,2.544,2829,2.544,2830,3.637,2831,2.544,2832,2.544,2833,2.544,2834,4.082,2835,2.544,2836,4.082,2837,2.544,2838,4.082,2839,2.544,2840,2.544,2841,4.082,2842,2.544,2843,2.544,2844,2.544,2845,2.544,2846,2.544,2847,2.544,2848,2.544,2849,2.267,2850,2.544,2851,2.267,2852,5.111,2853,2.544,2854,2.544,2855,6.403,2856,6.403,2857,6.403,2858,6.403,2859,3.637,2860,2.267,2861,2.267,2862,2.544,2863,2.544,2864,2.544,2865,2.544,2866,2.544,2867,2.544,2868,4.082,2869,4.082,2870,5.211,2871,5.211,2872,3.685,2873,4.082,2874,2.267,2875,2.544]],["title/components/OptionComponent.html",[0,0.226,198,1.023]],["body/components/OptionComponent.html",[0,0.346,1,0.955,2,1.344,3,0.085,4,0.072,5,0.939,6,1.038,7,1.021,8,1.021,9,0.065,15,0.85,16,1.748,17,1.964,18,0.893,19,1.366,20,0.908,21,1.322,23,1.322,25,0.225,26,0.59,27,0.655,37,0.691,44,0.817,46,0.566,47,0.006,48,0.622,49,0.31,50,0.455,60,0.808,61,1.184,71,0.312,73,0.445,77,1.216,81,0.85,85,0.078,90,0.118,106,0.729,115,1.021,116,1.366,117,1.541,118,0.85,119,1.719,120,1.021,121,1.62,122,0.955,123,0.988,124,0.971,125,1.021,126,0.955,127,1.021,128,0.971,129,0.988,130,1.021,131,0.988,132,1.021,133,0.988,134,1.021,135,0.955,136,0.988,137,1.021,138,0.988,139,1.021,140,1.004,141,0.955,142,1.394,143,1.062,144,1.413,145,0.955,146,1.413,147,0.939,148,2.039,149,0.955,150,0.78,151,1.021,152,0.988,153,1.413,154,0.955,155,1.441,156,0.955,157,0.955,158,0.988,159,1.021,160,0.955,161,1.021,162,0.988,163,0.893,164,1.515,165,0.988,166,1.021,167,0.971,168,1.717,169,1.021,170,0.988,171,1.021,172,0.988,173,0.971,174,1.021,175,0.971,176,1.021,177,0.971,178,1.021,179,0.955,180,0.988,181,0.971,182,1.044,183,1.021,184,0.955,185,1.021,186,0.971,187,0.971,188,1.021,189,0.971,190,1.62,191,0.924,192,1.021,193,0.988,194,1.413,195,1.021,196,0.988,197,1.021,198,1.691,199,1.021,200,0.955,201,0.971,202,0.955,203,1.021,204,0.955,205,1.004,206,1.278,207,0.955,208,0.955,209,0.988,210,1.021,211,0.955,212,1.775,213,0.939,214,1.021,215,0.955,216,0.971,217,0.955,218,0.955,219,1.021,220,0.988,221,1.021,222,1.413,223,0.988,224,1.021,225,0.988,226,1.021,227,0.971,228,1.021,229,0.939,230,1.136,231,0.955,232,0.988,233,1.021,234,0.988,235,1.021,236,1.3,237,1.593,238,1.413,239,0.955,240,1.004,241,0.821,242,0.924,243,0.971,244,1.004,245,0.971,246,1.021,247,0.971,248,1.021,249,0.955,250,1.021,251,0.971,252,1.004,253,1.021,254,0.004,255,0.004,308,1.059,375,1.55,595,1.985,596,1.709,597,1.898,598,1.985,701,3.658,768,2.515,841,4.448,844,5.972,1056,2.95,1845,4.369,2157,7.611,2876,4.594,2877,7.289,2878,6.357,2879,6.495,2880,4.594,2881,4.594,2882,6.357,2883,4.594,2884,4.594,2885,4.594,2886,4.594,2887,4.594,2888,4.594]],["title/classes/PersistentMap.html",[90,0.122,583,3.643]],["body/classes/PersistentMap.html",[3,0.11,4,0.093,9,0.085,25,0.292,26,0.701,32,0.93,37,1.137,44,0.91,46,1.021,47,0.007,48,0.625,49,0.371,50,0.821,52,0.927,53,1.508,60,1.047,61,1.354,85,0.129,86,0.929,90,0.153,91,1.758,93,1.707,106,1.315,150,1.283,254,0.005,255,0.005,278,2.284,284,3.34,308,1.097,346,3.486,583,5.784,584,7.533,771,3.264,972,3.421,1066,2.575,1085,3.668,1459,4.095,1486,4.961,1674,6.677,1707,7.151,1712,7.145,1830,4.961,1845,4.095,1884,5.446,2889,8.321,2890,5.31,2891,7.39,2892,7.77,2893,7.77,2894,5.959,2895,7.145,2896,7.554,2897,5.959,2898,6.731,2899,5.959,2900,5.959,2901,6.731,2902,5.959,2903,5.31,2904,5.31,2905,7.77,2906,5.31,2907,6.731,2908,5.31,2909,5.31,2910,5.31,2911,5.31,2912,5.31,2913,5.31,2914,5.31,2915,5.31]],["title/interfaces/PersistentMapOptions.html",[86,0.741,2895,3.898]],["body/interfaces/PersistentMapOptions.html",[3,0.123,4,0.104,9,0.095,25,0.327,26,0.751,37,1.002,47,0.007,49,0.283,53,1.21,61,1.218,85,0.138,86,1.037,90,0.171,91,1.547,93,1.828,106,1.382,254,0.005,255,0.005,256,2.125,278,2.012,308,1.266,583,5.096,584,7.964,771,2.876,972,3.015,1085,2.944,1459,4.574,1674,6.195,1707,6.675,1712,6.629,1830,5.313,1845,4.574,1884,5.725,2889,5.931,2890,5.931,2891,5.931,2892,5.931,2893,5.931,2895,7.142,2898,5.931,2901,5.931,2903,5.931,2904,5.931,2905,8.08,2906,5.931,2907,7.209,2908,5.931,2909,5.931,2910,5.931,2911,5.931,2912,5.931,2913,5.931,2914,5.931,2915,5.931]],["title/interfaces/Project.html",[86,0.741,143,0.795]],["body/interfaces/Project.html",[3,0.126,4,0.106,9,0.097,25,0.334,26,0.761,47,0.007,48,0.73,49,0.389,50,0.811,71,0.334,85,0.116,86,1.061,88,1.77,109,4.492,143,1.47,163,1.595,182,1.346,201,1.734,254,0.005,255,0.005,256,2.172,308,1.38,589,5.344,591,4.288,663,5.928,747,3.032,988,3.01,2916,6.806,2917,9.137,2918,9.137,2919,8.201,2920,9.137]],["title/interfaces/ProjectMember.html",[86,0.741,589,2.783]],["body/interfaces/ProjectMember.html",[3,0.134,4,0.114,9,0.104,25,0.358,26,0.793,47,0.006,48,0.549,49,0.398,64,2.884,85,0.124,86,1.136,88,1.879,254,0.006,255,0.006,256,2.326,308,1.383,502,5.178,514,4.419,515,3.992,589,4.996,650,3.697,747,2.326,2261,4.786,2659,6.422,2921,7.288,2922,7.288]],["title/injectables/ProjectService.html",[322,1.77,550,2.455]],["body/injectables/ProjectService.html",[3,0.087,4,0.074,9,0.067,18,1.259,25,0.231,27,1.381,32,0.797,37,0.71,44,0.873,46,1.06,47,0.007,48,0.664,49,0.382,50,0.852,52,1.041,62,1.391,68,3.171,71,0.423,73,0.457,77,1.743,78,2.667,83,1.283,85,0.08,87,2.136,88,1.9,89,3.557,90,0.121,106,1.398,142,1.238,143,1.661,150,1.351,182,1.413,201,1.562,254,0.004,255,0.004,258,1.948,275,3.439,308,0.685,314,3.407,322,2.407,323,4.716,324,2.433,326,2.674,328,4.575,333,5.506,349,7.059,350,6.664,373,2.433,374,2.304,375,1.591,494,2.859,502,3.924,512,3.408,513,3.24,517,3.34,550,3.34,652,4.955,747,2.539,771,2.037,999,3.66,1002,3.691,1144,4.077,1356,5.302,1384,4.077,1438,4.678,1501,6.516,1762,5.749,2079,3.863,2923,4.715,2924,6.472,2925,4.715,2926,6.472,2927,4.715,2928,6.472,2929,6.472,2930,4.715,2931,5.302,2932,4.715,2933,4.678,2934,5.767,2935,4.715,2936,4.715,2937,6.472,2938,4.715,2939,4.201,2940,4.715,2941,4.715,2942,4.715,2943,4.715,2944,4.715,2945,4.715,2946,4.201,2947,4.715,2948,4.715,2949,4.715]],["title/components/ProjectsListPage.html",[0,0.226,200,0.989]],["body/components/ProjectsListPage.html",[0,0.31,1,0.784,2,1.167,3,0.07,4,0.059,5,0.771,6,0.852,7,0.838,8,0.838,9,0.054,15,0.697,16,1.735,17,1.947,18,0.733,19,1.187,20,0.746,21,1.148,23,1.148,25,0.185,26,0.512,27,1.141,32,0.68,37,0.831,44,0.839,46,0.886,47,0.007,48,0.662,49,0.352,50,0.712,52,0.731,53,1.188,60,0.663,61,0.567,62,1.187,68,2.633,71,0.424,73,0.365,77,1.621,81,0.697,83,1.026,85,0.064,87,3.468,88,1.11,90,0.097,91,1.621,93,0.852,110,1.16,115,0.838,116,1.187,117,1.381,118,0.697,119,1.572,120,0.838,121,1.452,122,0.784,123,0.81,124,0.797,125,0.838,126,0.784,127,0.838,128,0.797,129,0.81,130,0.838,131,0.81,132,0.838,133,0.81,134,0.838,135,0.784,136,0.81,137,0.838,138,0.81,139,0.838,140,0.824,141,0.784,142,1.249,143,1.591,144,1.227,145,0.784,146,1.227,147,0.771,148,1.953,149,0.784,150,1.11,151,0.838,152,0.81,153,1.227,154,0.784,155,1.582,156,0.784,157,0.784,158,0.81,159,0.838,160,0.784,161,0.838,162,0.81,163,0.733,164,1.358,165,0.81,166,0.838,167,0.797,168,1.148,169,0.838,170,0.81,171,0.838,172,0.81,173,0.797,174,0.838,175,0.797,176,0.838,177,0.797,178,0.838,179,0.784,180,0.81,181,0.797,182,1.181,183,0.838,184,0.784,185,0.838,186,0.797,187,0.797,188,0.838,189,0.797,190,1.452,191,0.758,192,0.838,193,0.81,194,1.227,195,0.838,196,0.81,197,0.838,198,0.81,199,0.838,200,1.495,201,1.883,202,0.784,203,0.838,204,0.784,205,0.824,206,1.11,207,0.784,208,0.784,209,0.81,210,0.838,211,0.784,212,1.646,213,0.771,214,0.838,215,0.784,216,0.797,217,0.784,218,0.784,219,0.838,220,0.81,221,0.838,222,1.227,223,0.81,224,0.838,225,0.81,226,0.838,227,0.797,228,0.838,229,0.771,230,0.987,231,0.784,232,0.81,233,0.838,234,0.81,235,0.838,236,1.129,237,1.428,238,1.227,239,0.784,240,0.824,241,0.674,242,0.758,243,0.797,244,0.824,245,0.797,246,0.838,247,0.797,248,0.838,249,0.784,250,0.838,251,0.797,252,0.824,253,0.838,254,0.004,255,0.004,282,1.297,389,3.571,431,1.182,536,5.254,545,2.476,546,3.908,549,3.934,550,4.265,595,1.629,596,1.402,597,1.557,598,1.629,609,2.132,685,0.958,692,1.946,748,1.348,771,1.629,990,3.025,1002,2.563,1141,4.148,1164,2.591,1165,2.375,1166,4.291,1167,2.887,1168,3.089,1179,2.476,1193,4.524,1233,7.084,1493,4.524,1539,3.348,2812,4.92,2827,4.92,2830,4.92,2859,4.92,2860,3.359,2861,3.359,2939,3.359,2950,8.647,2951,3.089,2952,5.353,2953,4.524,2954,5.522,2955,5.522,2956,3.77,2957,3.77,2958,5.522,2959,3.359,2960,3.359,2961,3.77,2962,3.77,2963,3.089,2964,3.359,2965,3.77,2966,3.77,2967,3.77,2968,3.089,2969,3.089,2970,4.92,2971,4.92]],["title/classes/Random.html",[90,0.122,2972,3.898]],["body/classes/Random.html",[3,0.111,4,0.094,9,0.085,25,0.295,26,0.705,27,1.189,32,0.936,37,0.906,44,0.893,46,0.741,47,0.007,48,0.453,49,0.373,50,0.824,52,0.85,60,1.464,61,1.254,62,1.294,85,0.102,88,1.958,90,0.214,91,1.827,106,0.954,254,0.005,255,0.005,258,1.406,314,2.381,363,3.815,667,5.471,693,2.34,723,3.106,1066,2.6,2972,7.887,2973,6.018,2974,8.332,2975,8.332,2976,8.332,2977,7.601,2978,7.601,2979,8.752,2980,9.469,2981,8.332,2982,6.018,2983,8.332,2984,6.018,2985,7.601,2986,6.018,2987,6.018,2988,8.752,2989,8.752,2990,9.026,2991,6.018,2992,6.018,2993,6.018,2994,6.018,2995,6.018,2996,7.601,2997,7.601,2998,6.018,2999,6.018]],["title/components/RegisterPage.html",[0,0.226,202,0.989]],["body/components/RegisterPage.html",[0,0.261,1,0.592,2,0.944,3,0.053,4,0.044,5,0.582,6,0.644,7,0.633,8,0.633,9,0.04,15,0.527,16,1.711,17,1.922,18,0.554,19,0.96,20,0.563,21,0.928,23,0.928,25,0.14,26,0.414,27,1.14,29,2.92,32,0.55,37,0.429,44,0.809,46,0.55,47,0.007,48,0.585,49,0.288,50,0.769,52,0.697,53,1.133,60,0.968,61,0.828,62,1.905,63,2.62,64,2.466,65,3.402,66,4.075,71,0.392,73,0.276,74,0.909,77,0.854,81,0.527,83,0.775,85,0.048,90,0.073,91,1.192,103,1.43,104,1.43,106,0.708,110,0.877,111,1.018,113,2.599,114,2.55,115,0.633,116,0.96,117,1.164,118,0.527,119,1.746,120,0.633,121,1.223,122,0.592,123,0.612,124,0.602,125,0.633,126,0.592,127,0.633,128,0.602,129,0.612,130,0.633,131,0.612,132,0.633,133,0.612,134,0.633,135,0.592,136,0.612,137,0.633,138,0.612,139,0.633,140,0.623,141,0.592,142,1.053,143,0.745,144,0.992,145,0.592,146,0.992,147,0.582,148,1.816,149,0.592,150,0.484,151,0.633,152,0.612,153,0.992,154,0.592,155,1.089,156,0.592,157,0.592,158,0.612,159,0.633,160,0.592,161,0.633,162,0.612,163,0.554,164,1.144,165,0.612,166,0.633,167,0.602,168,1.144,169,0.633,170,0.612,171,0.633,172,0.612,173,0.602,174,0.633,175,0.602,176,0.633,177,0.602,178,0.633,179,0.592,180,0.612,181,0.602,182,0.733,183,0.633,184,0.592,185,0.633,186,0.602,187,1.518,188,0.633,189,0.602,190,1.223,191,0.573,192,0.633,193,0.612,194,0.992,195,0.633,196,0.612,197,0.633,198,0.612,199,0.633,200,0.592,201,0.602,202,1.295,203,0.633,204,0.592,205,0.623,206,1.253,207,0.592,208,0.592,209,0.612,210,0.633,211,0.592,212,1.455,213,0.582,214,0.633,215,0.592,216,0.602,217,0.592,218,0.592,219,0.633,220,0.612,221,0.633,222,0.992,223,0.612,224,0.633,225,0.612,226,0.633,227,0.602,228,0.633,229,0.582,230,0.798,231,0.592,232,0.612,233,0.633,234,0.612,235,0.633,236,0.913,237,1.203,238,0.992,239,0.592,240,0.623,241,0.509,242,0.573,243,0.602,244,1.203,245,0.602,246,0.633,247,0.602,248,0.633,249,0.592,250,0.633,251,0.602,252,0.623,253,0.633,254,0.003,255,0.003,263,1.871,278,0.861,287,1.127,293,0.861,304,1.727,308,0.8,310,1.322,375,0.961,389,3.242,397,2.517,398,2.431,400,1.47,431,0.893,481,2.932,483,6.652,484,2.925,486,4.06,514,2.706,515,3.015,582,3.113,650,1.766,685,1.825,686,2.427,687,2.971,688,2.022,689,1.804,691,1.757,693,1.694,706,1.29,709,1.29,712,1.795,713,1.392,717,2.318,718,2.089,719,2.365,720,2.318,721,1.918,722,2.372,723,2.304,724,1.628,727,1.974,728,1.929,729,2.611,752,1.47,753,2.022,804,1.177,806,4.103,812,1.43,828,2.763,847,2.812,879,1.727,911,1.958,915,5.544,916,4.905,917,3.978,918,3.978,919,3.978,920,3.978,922,2.445,925,2.538,927,2.334,928,2.538,929,2.538,930,2.059,935,2.181,936,2.334,939,1.727,941,3.418,942,1.871,943,1.666,944,1.795,945,1.513,946,3.932,947,1.958,948,2.932,949,1.958,950,1.666,951,5.616,952,2.706,953,1.795,954,1.666,955,1.727,956,1.727,957,1.871,958,2.059,959,4.282,960,1.958,961,4.444,962,4.282,963,1.958,964,1.958,965,1.958,966,1.871,967,1.958,968,1.958,969,1.958,970,1.958,985,1.611,1030,3.705,1092,3.418,1119,3.227,1163,1.795,1273,3.418,1274,2.24,1539,1.727,1735,2.334,1736,3.227,1739,2.334,1764,1.26,1826,2.525,1827,3.015,1916,3.657,2421,3.978,2424,3.978,2437,2.538,2441,2.538,2443,3.978,2445,6.396,2450,3.978,2451,3.978,2452,3.978,3000,2.538,3001,5.505,3002,4.464,3003,6.922,3004,5.505,3005,4.905,3006,6.231,3007,6.231,3008,2.848,3009,2.848,3010,2.848,3011,2.848,3012,2.848,3013,2.848,3014,4.905,3015,6.231,3016,2.848,3017,2.848,3018,2.848,3019,5.505,3020,2.848,3021,2.848,3022,2.538,3023,2.538,3024,4.464,3025,5.505,3026,2.848,3027,2.848,3028,2.848,3029,4.464,3030,2.848,3031,4.464,3032,2.848,3033,2.848,3034,2.848,3035,2.848,3036,6.231,3037,2.848,3038,2.848,3039,4.464,3040,3.657,3041,4.464,3042,4.464,3043,4.464]],["title/interfaces/RequestOptions.html",[86,0.741,340,3.898]],["body/interfaces/RequestOptions.html",[3,0.092,4,0.078,9,0.108,18,1.307,25,0.245,26,0.623,47,0.007,49,0.406,50,0.957,60,1.181,71,0.245,85,0.085,86,1.324,88,1.002,106,1.388,150,1.141,254,0.004,255,0.004,256,1.59,258,1.164,275,4.324,278,2.705,293,2.031,301,4.063,308,1.299,311,3.16,314,1.971,328,3.57,330,5.987,331,5.987,333,5.355,335,5.987,339,4.2,340,5.505,343,5.987,345,7.799,348,5.987,363,3.372,368,3.815,378,6.667,379,8.214,380,7.799,438,4.233,499,4.857,502,4.934,517,4.757,716,3.424,890,5.145,988,2.971,1031,5.145,1058,5.145,1459,4.618,1460,7.251,1506,4.857,1659,4.233,1766,7.251,1916,5.505,2068,7.453,2654,5.882,3044,4.982,3045,4.982,3046,9.097,3047,8.753,3048,8.753,3049,8.137,3050,6.719,3051,4.857,3052,8.137,3053,8.137,3054,5.987,3055,8.137,3056,6.719,3057,6.719,3058,6.719,3059,6.719,3060,7.602,3061,8.947,3062,6.719,3063,5.987,3064,6.719,3065,6.719,3066,6.719,3067,6.719,3068,6.719,3069,4.982]],["title/components/RestoreAccountPage.html",[0,0.226,204,0.989]],["body/components/RestoreAccountPage.html",[0,0.304,1,0.758,2,1.139,3,0.067,4,0.057,5,0.746,6,0.824,7,0.811,8,0.811,9,0.052,15,0.675,16,1.732,17,1.944,18,0.709,19,1.159,20,0.721,21,1.121,23,1.121,25,0.179,29,2.772,32,0.664,37,0.549,44,0.634,46,0.449,47,0.007,48,0.569,49,0.155,50,0.361,52,0.603,53,0.98,71,0.315,73,0.353,77,1.031,81,0.675,85,0.062,90,0.094,91,0.698,110,1.123,111,1.304,113,2.685,114,2.68,115,0.811,116,1.159,117,1.355,118,0.675,119,1.788,120,0.811,121,1.425,122,0.758,123,0.784,124,0.771,125,0.811,126,0.758,127,0.811,128,0.771,129,0.784,130,0.811,131,0.784,132,0.811,133,0.784,134,0.811,135,0.758,136,0.784,137,0.811,138,0.784,139,0.811,140,0.797,141,0.758,142,1.226,143,0.9,144,1.198,145,0.758,146,1.198,147,0.746,148,1.938,149,0.758,150,0.62,151,0.811,152,0.784,153,1.198,154,0.758,155,1.267,156,0.758,157,0.758,158,0.784,159,0.811,160,0.758,161,0.811,162,0.784,163,0.709,164,1.333,165,0.784,166,0.811,167,0.771,168,1.121,169,0.811,170,0.784,171,0.811,172,0.784,173,0.771,174,0.811,175,0.771,176,0.811,177,0.771,178,0.811,179,0.758,180,0.784,181,0.771,182,0.885,183,0.811,184,0.758,185,0.811,186,0.771,187,1.671,188,0.811,189,0.771,190,1.425,191,0.734,192,0.811,193,0.784,194,1.198,195,0.811,196,0.784,197,0.811,198,0.784,199,0.811,200,0.758,201,0.771,202,0.758,203,0.811,204,1.472,205,2.047,206,1.754,207,0.758,208,0.758,209,0.784,210,0.811,211,0.758,212,1.624,213,0.746,214,0.811,215,0.758,216,0.771,217,0.758,218,0.758,219,0.811,220,0.784,221,0.811,222,1.198,223,0.784,224,0.811,225,0.784,226,0.811,227,0.771,228,0.811,229,0.746,230,0.964,231,0.758,232,0.784,233,0.811,234,0.784,235,0.811,236,1.102,237,1.401,238,1.198,239,0.758,240,0.797,241,1.146,242,0.734,243,0.771,244,0.797,245,0.771,246,0.811,247,0.771,248,0.811,249,0.758,250,0.811,251,0.771,252,0.797,253,0.811,254,0.004,255,0.004,375,1.231,389,3.534,397,2.772,398,2.307,400,1.883,413,2.501,431,1.143,479,5.8,482,5.421,486,4.471,685,1.92,686,2.546,687,3.189,688,2.441,689,2.179,691,2.411,693,1.973,698,2.276,712,2.298,713,1.782,715,2.396,717,2.384,718,2.433,719,2.687,720,2.633,721,2.179,722,1.938,723,1.883,724,2.337,727,1.613,728,1.576,729,3.153,749,1.613,804,1.507,806,4.58,812,1.831,828,1.831,830,2.396,879,2.212,911,2.507,942,2.396,943,2.134,944,2.298,945,1.938,946,4.331,947,2.507,948,3.539,949,2.507,950,2.134,951,5.993,952,3.268,953,2.298,954,2.134,955,2.212,956,2.212,957,2.396,959,4.865,960,2.507,961,4.96,962,4.865,963,2.507,964,2.507,965,2.507,966,2.396,967,2.507,968,2.507,969,2.507,970,2.507,1260,2.989,1261,5.251,1262,4.416,1263,3.25,1266,3.25,1269,3.704,1272,3.704,2415,2.793,3070,7.08,3071,3.648,3072,2.989,3073,3.648,3074,5.39,3075,4.802,3076,4.802,3077,4.416,3078,2.793]],["title/injectables/RouterExtensionsService.html",[43,3.27,322,1.77]],["body/injectables/RouterExtensionsService.html",[3,0.13,4,0.11,9,0.1,25,0.346,27,1.005,37,1.06,43,5.753,44,0.828,46,0.868,47,0.007,48,0.531,49,0.3,50,0.697,71,0.411,73,0.682,85,0.12,90,0.181,106,1.117,254,0.005,255,0.005,322,3.114,324,3.635,373,3.635,374,3.441,375,2.377,389,4.136,431,2.208,1056,3.885,2068,5.771,2232,6.409,2412,6.276,3079,8.932,3080,7.044,3081,8.932,3082,7.044,3083,7.044,3084,7.044,3085,7.044,3086,7.044,3087,8.371,3088,7.044]],["title/components/SchedulePage.html",[0,0.226,207,0.989]],["body/components/SchedulePage.html",[0,0.289,1,0.696,2,1.069,3,0.062,4,0.052,5,0.685,6,0.757,7,0.744,8,0.744,9,0.048,13,1.476,14,2.312,15,0.619,16,1.725,17,1.936,18,0.651,19,1.087,20,0.662,21,1.051,23,1.051,25,0.164,26,0.469,27,1.302,32,0.623,36,2.312,37,0.504,44,0.81,46,0.413,47,0.007,48,0.549,49,0.31,50,0.331,52,0.375,53,0.609,60,1.071,61,0.917,68,2.506,71,0.411,73,0.324,77,0.967,81,0.619,83,0.912,85,0.057,88,1.225,90,0.086,93,1.143,110,1.875,111,1.808,112,2.538,113,2.347,114,2.674,115,0.744,116,1.087,117,1.288,118,0.619,119,2.009,120,0.744,121,1.354,122,0.696,123,0.72,124,0.708,125,0.744,126,0.696,127,0.744,128,0.708,129,0.72,130,0.744,131,0.72,132,0.744,133,0.72,134,0.744,135,0.696,136,0.72,137,0.744,138,0.72,139,0.744,140,0.732,141,0.696,142,1.165,143,1.279,144,1.124,145,0.696,146,1.124,147,0.685,148,1.898,149,0.696,150,0.569,151,0.744,152,0.72,153,1.124,154,0.696,155,1.205,156,0.696,157,0.696,158,0.72,159,0.744,160,0.696,161,0.744,162,0.72,163,0.651,164,1.267,165,0.72,166,0.744,167,0.708,168,1.051,169,0.744,170,0.72,171,0.744,172,0.72,173,1.54,174,0.744,175,0.708,176,0.744,177,0.708,178,0.744,179,0.696,180,0.72,181,0.708,182,0.83,183,0.744,184,0.696,185,0.744,186,0.708,187,0.708,188,0.744,189,0.708,190,1.354,191,0.674,192,0.744,193,0.72,194,1.124,195,0.744,196,0.72,197,0.744,198,0.72,199,0.744,200,0.696,201,0.708,202,0.696,203,0.744,204,0.696,205,0.732,206,1.017,207,1.411,208,1.702,209,0.72,210,0.744,211,0.696,212,1.566,213,0.685,214,0.744,215,0.696,216,0.708,217,0.696,218,0.696,219,0.744,220,0.72,221,0.744,222,1.124,223,0.72,224,0.744,225,0.72,226,0.744,227,0.708,228,0.744,229,0.685,230,1.089,231,0.696,232,0.72,233,0.744,234,0.72,235,0.744,236,1.034,237,1.332,238,1.124,239,0.696,240,0.732,241,1.089,242,0.674,243,0.708,244,0.732,245,0.708,246,0.744,247,0.708,248,0.744,249,0.696,250,0.744,251,0.708,252,0.732,253,0.744,254,0.003,255,0.003,260,1.959,282,1.152,311,2.524,397,2.379,398,2.682,399,3.222,431,1.05,517,1.729,546,3.559,547,3.97,550,3.76,556,4.906,592,1.835,594,2.565,596,2.266,683,3.872,685,2.081,686,2.576,687,3.045,688,1.517,689,1.354,690,2.031,691,1.069,692,1.729,693,2.242,696,2.031,697,1.415,698,1.415,702,1.447,716,4.187,717,1.881,718,1.92,719,2.576,720,1.881,721,1.557,727,3.387,729,2.958,730,3.607,731,3.436,742,2.266,746,3.066,748,1.197,749,2.236,758,3.563,759,2.86,760,5.918,784,2.302,785,3.186,803,1.894,812,1.681,817,3.838,818,3.838,819,2.985,820,2.985,858,3.321,879,2.031,922,3.337,944,2.11,1056,2.347,1330,3.656,2251,3.838,2261,2.2,2295,2.565,2566,2.985,2610,2.985,2874,2.985,3089,3.35,3090,6.092,3091,5.057,3092,6.787,3093,6.787,3094,6.787,3095,3.35,3096,3.35,3097,3.35,3098,5.057,3099,3.35,3100,5.057,3101,3.35,3102,3.35,3103,3.35,3104,3.35,3105,3.35,3106,3.35,3107,2.985,3108,3.35,3109,5.057,3110,3.35,3111,3.35,3112,3.35,3113,3.35,3114,6.047,3115,3.35,3116,5.428,3117,6.092,3118,2.985,3119,3.35,3120,3.35,3121,3.35,3122,2.985,3123,3.35,3124,3.35,3125,3.35]],["title/components/SelectComponent.html",[0,0.226,209,1.023]],["body/components/SelectComponent.html",[0,0.294,1,0.716,2,1.091,3,0.063,4,0.054,5,0.704,6,0.778,7,0.765,8,0.765,9,0.049,13,1.506,14,2.351,15,0.637,16,1.728,17,1.939,18,0.669,19,1.11,20,0.681,21,1.073,23,1.073,25,0.169,26,0.479,27,0.737,29,2.172,32,0.636,36,2.612,44,0.907,46,0.847,47,0.007,48,0.622,49,0.377,50,0.851,52,0.897,53,1.535,57,1.454,60,1.296,61,1.331,62,1.664,64,1.362,71,0.338,73,0.334,77,0.987,81,0.637,83,0.937,85,0.059,90,0.088,93,1.167,106,0.819,115,0.765,116,1.11,117,1.558,118,0.637,119,1.504,120,0.765,121,1.376,122,0.716,123,0.74,124,0.728,125,0.765,126,0.716,127,0.765,128,0.728,129,0.74,130,0.765,131,0.74,132,0.765,133,0.74,134,0.765,135,0.716,136,0.74,137,0.765,138,0.74,139,0.765,140,1.879,141,0.716,142,1.184,143,0.862,144,1.147,145,0.716,146,1.147,147,0.704,148,1.911,149,0.716,150,0.585,151,0.765,152,0.74,153,1.147,154,0.716,155,1.225,156,0.716,157,0.716,158,0.74,159,0.765,160,0.716,161,0.765,162,0.74,163,0.669,164,1.288,165,0.74,166,0.765,167,0.728,168,1.431,169,0.765,170,0.74,171,0.765,172,0.74,173,0.728,174,0.765,175,0.728,176,0.765,177,0.728,178,0.765,179,0.716,180,0.74,181,0.728,182,0.847,183,0.765,184,0.716,185,0.765,186,0.728,187,0.728,188,0.765,189,0.728,190,1.376,191,0.692,192,0.765,193,0.74,194,1.147,195,0.765,196,0.74,197,0.765,198,1.11,199,0.765,200,0.716,201,0.728,202,0.716,203,0.765,204,0.716,205,0.752,206,1.038,207,0.716,208,0.716,209,1.479,210,0.765,211,0.716,212,1.585,213,0.704,214,0.765,215,0.716,216,0.728,217,0.716,218,0.716,219,0.765,220,0.74,221,0.765,222,1.147,223,0.74,224,0.765,225,0.74,226,0.765,227,0.728,228,0.765,229,0.704,230,0.923,231,0.716,232,0.74,233,0.765,234,0.74,235,0.765,236,1.055,237,1.692,238,1.147,239,0.716,240,0.752,241,0.615,242,0.692,243,0.728,244,0.752,245,0.728,246,0.765,247,0.728,248,0.765,249,0.716,250,0.765,251,0.728,252,0.752,253,0.765,254,0.003,255,0.003,258,1.608,278,2.08,284,2.739,287,2.451,293,1.561,301,2.396,308,0.75,328,3.291,339,3.196,361,2.828,650,2.043,654,2.522,701,1.728,751,1.728,768,2.043,771,2.973,853,3.393,867,2.169,972,2.338,976,3.393,977,3.13,978,3.13,979,3.13,980,3.13,981,3.13,982,4.692,983,2.169,984,2.087,985,2.919,986,2.087,987,2.087,988,1.522,989,2.014,990,1.886,991,1.886,992,2.087,993,2.169,994,3.13,995,4.172,996,2.457,997,4.527,998,2.087,999,3.503,1000,2.014,1001,3.13,1002,2.396,1003,3.769,1004,1.947,1005,2.087,1006,3.13,1007,3.994,1008,2.087,1009,2.169,1010,2.087,1011,2.087,1012,2.087,1013,2.169,1014,3.13,1015,2.087,1016,2.087,1017,2.261,1018,2.169,1019,2.169,1020,2.169,1021,2.169,1022,2.82,1023,2.636,1024,2.261,1025,2.169,1056,2.396,1086,5.329,1486,3.39,1845,4.256,1901,4.477,1903,4.974,2181,3.953,2267,5.644,2879,3.068,3126,3.443,3127,6.193,3128,5.162,3129,6.193,3130,6.193,3131,8.442,3132,6.881,3133,3.443,3134,3.443,3135,3.443,3136,3.443,3137,3.443,3138,3.443,3139,6.193,3140,5.162,3141,3.443,3142,3.443,3143,3.443,3144,3.443,3145,3.443,3146,3.443,3147,3.443,3148,3.443,3149,3.443,3150,3.443,3151,3.443,3152,3.443,3153,3.443,3154,5.162,3155,5.162,3156,3.443,3157,3.443,3158,3.443,3159,3.443,3160,3.443,3161,3.443,3162,3.443,3163,5.162,3164,5.162]],["title/interfaces/SelectionEditOperation.html",[86,0.741,2731,3.439]],["body/interfaces/SelectionEditOperation.html",[3,0.084,4,0.071,9,0.064,18,1.224,25,0.222,26,0.584,27,1.305,47,0.007,49,0.371,50,0.88,71,0.222,85,0.077,86,0.706,88,1.71,90,0.116,93,2.088,106,1.349,150,1.229,155,0.896,254,0.004,255,0.004,256,1.446,308,1.419,311,3.493,689,2.924,742,2.341,886,4.154,1003,3.448,1085,2.003,1302,4.72,2661,4.326,2673,5.822,2683,3.711,2684,3.711,2685,3.711,2688,4.036,2689,4.036,2690,4.036,2691,4.036,2692,4.036,2695,4.036,2696,4.036,2697,7.571,2698,7.146,2699,4.82,2701,4.036,2702,6.935,2705,6.446,2708,7.146,2709,7.925,2710,7.925,2715,7.146,2716,7.146,2717,7.146,2718,7.146,2722,4.036,2724,4.036,2728,3.711,2729,3.711,2730,3.711,2731,4.55,2732,5.651,2733,5.651,2734,6.731,2735,6.967,2736,4.036,2737,4.036,2738,5.609,2739,4.036,2740,4.036,2741,4.036,2742,4.036,2743,4.036,2744,4.036,2745,5.609,2746,6.731,2747,6.966,2748,6.731,2749,6.966,2750,4.036,2751,4.036,2752,3.711,2753,5.609,2754,4.036,2755,6.405,2756,5.609,2757,5.609,2758,5.609,2759,4.036,2760,4.036,2761,4.036,2762,4.036,2763,4.036,2764,5.609,2765,5.609,2766,5.609,2767,5.609,2768,4.036,2769,4.036,2770,3.711,2771,5.609,2772,4.036,2773,5.157,2774,4.036,2775,4.036]],["title/classes/SelectionEditPlugin.html",[90,0.122,2670,3.898]],["body/classes/SelectionEditPlugin.html",[3,0.082,4,0.069,9,0.063,25,0.217,27,1.02,32,0.763,44,0.707,46,0.88,47,0.007,48,0.539,49,0.33,50,0.707,52,0.799,53,1.127,61,1.385,62,1.332,71,0.304,85,0.132,90,0.114,93,2.204,106,1.459,254,0.004,255,0.004,304,2.686,308,1.322,311,2.88,346,2.591,689,3.413,693,1.364,742,3.343,823,2.909,886,3.799,887,6.899,996,2.95,1003,3.395,1066,1.914,1093,5.321,1302,4.639,1486,4.695,1674,4.746,1683,3.629,1707,4.746,1802,2.686,1803,2.505,2570,5.078,2670,5.078,2673,6,2680,3.947,2698,6.677,2699,6.882,2702,6.915,2708,5.857,2715,6.344,2716,6.344,2717,6.344,2718,6.344,2731,6.497,2732,4.48,2733,4.48,2734,3.629,2735,6.344,2746,6.344,2748,6.344,2752,3.629,2770,3.629,3165,6.344,3166,3.629,3167,7.149,3168,6.198,3169,4.43,3170,8.445,3171,7.261,3172,4.43,3173,6.198,3174,4.43,3175,6.198,3176,4.43,3177,3.947,3178,4.43,3179,6.899,3180,3.947,3181,3.947,3182,7.149,3183,3.392,3184,4.43,3185,4.43,3186,4.43,3187,4.43,3188,4.43,3189,6.198,3190,8.445,3191,6.198,3192,6.198,3193,6.198,3194,6.198,3195,6.198,3196,6.198,3197,4.43,3198,4.43,3199,4.43,3200,4.43,3201,4.43,3202,4.43,3203,4.43,3204,8.445,3205,4.43,3206,4.43,3207,4.43,3208,4.43,3209,4.43,3210,4.43,3211,4.43,3212,4.43,3213,4.43,3214,4.43]],["title/injectables/SessionsService.html",[322,1.77,3215,3.898]],["body/injectables/SessionsService.html",[3,0.126,4,0.106,9,0.097,25,0.334,27,1.355,32,1.01,37,1.024,44,0.871,46,1.01,47,0.007,48,0.618,49,0.349,50,0.811,52,0.917,68,3.027,71,0.448,73,0.659,83,1.852,85,0.116,88,1.77,90,0.175,106,1.3,150,1.393,182,1.5,254,0.005,255,0.005,322,3.05,323,5.203,324,3.513,373,3.513,374,3.325,375,2.297,494,4.126,513,4.677,747,2.172,3215,6.719,3216,6.806,3217,6.806,3218,7.307,3219,6.806,3220,6.806,3221,5.211,3222,6.806,3223,6.806,3224,6.806]],["title/components/SettingsAccountPage.html",[0,0.226,211,0.989]],["body/components/SettingsAccountPage.html",[0,0.308,1,0.776,2,1.159,3,0.069,4,0.058,5,0.763,6,0.843,7,0.83,8,0.83,9,0.053,13,1.599,14,2.466,15,0.69,16,1.734,17,1.947,18,0.726,19,1.178,20,0.738,21,1.14,23,1.14,25,0.183,26,0.509,27,0.927,29,2.278,32,0.675,36,2.717,37,0.562,44,0.789,46,0.46,47,0.007,48,0.621,49,0.159,50,0.369,52,0.8,53,1.302,60,0.656,61,0.562,62,1.885,63,3.092,64,2.169,65,3.342,66,4.003,71,0.374,73,0.362,74,1.191,77,1.048,81,0.69,85,0.064,90,0.096,91,0.714,103,1.873,104,1.873,105,2.111,106,0.592,113,1.572,114,1.75,115,0.83,116,1.178,117,1.373,118,0.69,119,1.565,120,0.83,121,1.444,122,0.776,123,0.802,124,0.789,125,0.83,126,0.776,127,0.83,128,0.789,129,0.802,130,0.83,131,0.802,132,0.83,133,0.802,134,0.83,135,0.776,136,1.771,137,0.83,138,0.802,139,0.83,140,0.816,141,0.776,142,1.242,143,0.915,144,1.218,145,0.776,146,1.218,147,0.763,148,1.949,149,0.776,150,1.4,151,0.83,152,0.802,153,1.218,154,0.776,155,1.285,156,0.776,157,0.776,158,0.802,159,0.83,160,0.776,161,0.83,162,0.802,163,0.726,164,1.351,165,0.802,166,0.83,167,0.789,168,1.14,169,0.83,170,0.802,171,0.83,172,0.802,173,0.789,174,0.83,175,0.789,176,0.83,177,0.789,178,0.83,179,0.776,180,0.802,181,0.789,182,0.9,183,0.83,184,0.776,185,0.83,186,0.789,187,0.789,188,0.83,189,0.789,190,1.444,191,0.75,192,0.83,193,0.802,194,1.218,195,0.83,196,0.802,197,0.83,198,0.802,199,0.83,200,0.776,201,1.373,202,0.776,203,0.83,204,0.776,205,0.816,206,1.889,207,0.776,208,0.776,209,0.802,210,0.83,211,1.488,212,1.933,213,0.763,214,0.83,215,0.776,216,0.789,217,0.776,218,0.776,219,0.83,220,0.802,221,0.83,222,1.218,223,0.802,224,0.83,225,0.802,226,0.83,227,0.789,228,0.83,229,0.763,230,0.98,231,0.776,232,0.802,233,0.83,234,0.802,235,0.83,236,1.121,237,1.42,238,1.218,239,0.776,240,0.816,241,1.161,242,0.75,243,0.789,244,0.816,245,0.789,246,0.83,247,0.789,248,0.83,249,0.776,250,0.83,251,0.789,252,0.816,253,0.83,254,0.004,255,0.004,282,1.284,375,1.26,484,4.235,486,4.659,492,5.865,514,3.323,515,3.002,685,1.393,686,1.628,691,1.191,692,1.926,720,1.388,721,1.149,724,1.361,748,1.334,828,1.873,830,2.451,850,5.865,856,4.197,926,2.698,1002,2.544,1260,3.058,1261,5.322,1262,4.491,1265,3.326,1269,3.767,1272,3.767,1274,1.873,1459,3.767,1952,5.955,2037,2.858,2040,4.884,2311,4.884,2415,2.858,2422,5.762,2431,3.058,3072,4.491,3075,5.788,3076,6.378,3077,4.491,3225,6.75,3226,7.158,3227,3.732,3228,3.732,3229,3.732,3230,3.732,3231,3.732,3232,3.732,3233,3.732,3234,3.732,3235,3.732,3236,3.732,3237,3.732,3238,3.732,3239,3.732,3240,3.732,3241,6.496,3242,3.732,3243,3.732,3244,3.732,3245,3.732,3246,3.732,3247,3.732,3248,3.732,3249,3.732,3250,5.481,3251,3.732,3252,3.732,3253,3.732,3254,3.732,3255,3.732,3256,3.732,3257,3.732,3258,3.732,3259,3.732,3260,3.732,3261,4.884,3262,4.884,3263,4.884,3264,5.481,3265,5.481,3266,5.481,3267,5.481,3268,4.884,3269,5.481,3270,5.481,3271,5.481,3272,3.732]],["title/components/SettingsIntegrationsPage.html",[0,0.226,213,0.973]],["body/components/SettingsIntegrationsPage.html",[0,0.324,1,0.849,2,1.237,3,0.075,4,0.064,5,0.835,6,0.923,7,0.908,8,0.908,9,0.058,13,1.708,14,2.596,15,0.755,16,1.74,17,1.954,18,0.795,19,1.258,20,0.808,21,1.217,23,1.217,25,0.2,26,0.543,27,1.306,32,0.721,36,2.835,37,0.615,44,0.814,46,0.842,47,0.007,48,0.638,49,0.318,50,0.677,52,0.835,53,1.437,68,2.829,71,0.366,73,0.396,77,1.119,81,0.755,83,1.112,85,0.07,86,0.637,90,0.105,106,1.085,111,1.461,115,0.908,116,1.258,117,1.446,118,0.755,119,1.632,120,0.908,121,1.52,122,0.849,123,0.878,124,0.864,125,0.908,126,0.849,127,0.908,128,0.864,129,0.878,130,0.908,131,0.878,132,0.908,133,0.878,134,0.908,135,0.849,136,0.878,137,0.908,138,0.878,139,0.908,140,0.893,141,0.849,142,1.308,143,0.977,144,1.301,145,0.849,146,1.301,147,0.835,148,1.989,149,0.849,150,0.694,151,0.908,152,0.878,153,1.301,154,0.849,155,1.352,156,0.849,157,0.849,158,0.878,159,0.908,160,0.849,161,0.908,162,0.878,163,0.795,164,1.422,165,0.878,166,0.908,167,0.864,168,1.217,169,0.908,170,0.878,171,0.908,172,0.878,173,0.864,174,0.908,175,0.864,176,0.908,177,0.864,178,0.908,179,0.849,180,0.878,181,0.864,182,1.123,183,0.908,184,0.849,185,0.908,186,0.864,187,0.864,188,0.908,189,0.864,190,1.52,191,0.822,192,0.908,193,0.878,194,1.301,195,0.908,196,0.878,197,0.908,198,0.878,199,0.908,200,0.849,201,0.864,202,0.849,203,0.908,204,0.849,205,0.893,206,1.654,207,0.849,208,0.849,209,0.878,210,0.908,211,0.849,212,1.967,213,1.527,214,0.908,215,0.849,216,0.864,217,0.849,218,0.849,219,0.908,220,0.878,221,0.908,222,1.301,223,0.878,224,0.908,225,0.878,226,0.908,227,0.864,228,0.908,229,0.835,230,1.046,231,0.849,232,0.878,233,0.908,234,0.878,235,0.908,236,1.197,237,1.495,238,1.301,239,0.849,240,0.893,241,0.73,242,0.822,243,0.864,244,0.893,245,0.864,246,0.908,247,0.864,248,0.908,249,0.849,250,0.908,251,0.864,252,0.893,253,0.908,254,0.004,255,0.004,375,1.379,685,1.039,691,1.304,698,1.726,748,1.461,771,1.765,1211,4.651,1238,2.574,1274,2.05,1310,2.574,1939,5.252,1951,3.347,1952,6.122,1953,6.485,1954,3.64,1955,5.215,1956,2.574,1957,2.574,1958,2.683,1959,5.718,1960,5.215,1961,6.094,1962,6.094,1963,3.64,1964,6.654,1965,3.64,1966,3.64,1967,3.347,1968,3.347,1969,3.64,1970,5.215,1971,3.64,1972,3.64,1973,3.128,1974,5.215,1975,3.347,1976,3.347,1977,3.64,1978,3.64,1979,3.64,2340,5.215,2359,3.64,3273,5.853,3274,5.853,3275,4.086,3276,4.086,3277,4.086,3278,4.086]],["title/components/SettingsLocalizationPage.html",[0,0.226,215,0.989]],["body/components/SettingsLocalizationPage.html",[0,0.311,1,0.791,2,1.175,3,0.07,4,0.059,5,0.778,6,0.859,7,0.845,8,0.845,9,0.054,15,0.703,16,1.735,17,1.948,18,0.74,19,1.194,20,0.752,21,1.155,23,1.155,25,0.187,26,0.516,27,0.937,29,2.302,32,0.684,37,0.988,44,0.794,47,0.007,48,0.709,49,0.162,52,0.621,53,1.01,60,1.154,61,0.988,62,1.725,63,3.126,65,2.977,66,3.048,71,0.354,73,0.368,74,1.214,77,1.063,81,0.703,85,0.065,90,0.098,113,1.593,114,1.774,115,0.845,116,1.194,117,1.388,118,0.703,119,1.579,120,0.845,121,1.459,122,0.791,123,0.817,124,0.804,125,0.845,126,0.791,127,0.845,128,0.804,129,0.817,130,0.845,131,0.817,132,0.845,133,0.817,134,0.845,135,0.791,136,0.817,137,0.845,138,0.817,139,0.845,140,0.831,141,0.791,142,1.256,143,0.928,144,1.235,145,0.791,146,1.235,147,0.778,148,1.957,149,0.791,150,0.646,151,0.845,152,0.817,153,1.235,154,0.791,155,1.298,156,0.791,157,0.791,158,0.817,159,0.845,160,0.791,161,0.845,162,0.817,163,0.74,164,1.365,165,0.817,166,0.845,167,0.804,168,1.155,169,0.845,170,0.817,171,0.845,172,0.817,173,0.804,174,0.845,175,0.804,176,0.845,177,0.804,178,0.845,179,0.791,180,0.817,181,0.804,182,0.912,183,0.845,184,0.791,185,0.845,186,0.804,187,0.804,188,0.845,189,0.804,190,1.459,191,0.765,192,0.845,193,0.817,194,1.235,195,0.845,196,0.817,197,0.845,198,0.817,199,0.845,200,0.791,201,0.804,202,0.791,203,0.845,204,0.791,205,0.831,206,1.117,207,0.791,208,0.791,209,0.817,210,0.845,211,0.791,212,1.975,213,0.778,214,0.845,215,1.502,216,1.624,217,0.791,218,0.791,219,0.845,220,0.817,221,0.845,222,1.235,223,0.817,224,0.845,225,0.817,226,0.845,227,0.804,228,0.845,229,0.778,230,0.993,231,0.791,232,0.817,233,0.845,234,0.817,235,0.845,236,1.136,237,1.435,238,1.235,239,0.791,240,0.831,241,1.174,242,0.765,243,0.804,244,0.831,245,0.804,246,0.845,247,0.804,248,0.845,249,0.791,250,0.845,251,0.804,252,0.831,253,0.845,254,0.004,255,0.004,282,1.308,685,1.413,686,1.65,691,1.214,698,1.606,720,1.414,721,1.171,724,1.387,748,1.359,785,3.501,797,5.221,798,4.017,828,1.909,830,2.497,850,5.917,926,2.749,988,2.457,1194,3.649,1803,4.085,1952,5.99,2872,5.79,3279,6.789,3280,3.803,3281,6.566,3282,5.557,3283,6.566,3284,5.38,3285,7.223,3286,3.803,3287,3.803,3288,3.803,3289,5.557,3290,5.557,3291,5.557,3292,5.557,3293,5.557,3294,5.557,3295,5.557,3296,5.557,3297,3.803,3298,4.017,3299,5.557,3300,3.803,3301,6.436,3302,5.557,3303,6.436,3304,4.951,3305,6.436,3306,5.557,3307,5.557,3308,5.557,3309,6.436,3310,5.557,3311,5.557,3312,4.951,3313,4.255,3314,3.803,3315,3.803,3316,3.803,3317,3.803,3318,5.557,3319,5.557]],["title/modules/SettingsModule.html",[401,1.965,3320,3.643]],["body/modules/SettingsModule.html",[3,0.113,4,0.095,9,0.087,47,0.007,71,0.479,73,0.593,74,1.952,85,0.104,90,0.157,175,1.957,181,1.957,211,1.924,213,1.892,215,1.924,217,1.924,218,1.924,254,0.005,255,0.005,403,2.643,404,4.343,410,5.234,411,4.656,412,3.25,413,2.839,415,4.838,416,3.564,418,3.854,464,5.043,465,3.854,466,5.551,473,4.422,1213,5.451,1796,5.012,1953,4.684,2335,5.451,2399,5.451,3225,5.012,3279,5.012,3320,7.658,3321,5.451,3322,5.451,3323,5.451,3324,6.691,3325,6.117,3326,6.117,3327,6.117,3328,6.117,3329,6.117,3330,7.845,3331,5.451,3332,5.451,3333,5.012,3334,5.451,3335,6.117]],["title/components/SettingsPage.html",[0,0.226,217,0.989]],["body/components/SettingsPage.html",[0,0.325,1,0.854,2,1.242,3,0.076,4,0.064,5,0.84,6,0.928,7,0.913,8,0.913,9,0.058,13,1.714,14,2.603,15,0.759,16,1.741,17,1.956,18,0.799,19,1.263,20,0.812,21,1.221,23,1.221,25,0.202,26,0.545,32,0.723,36,2.841,37,1.032,44,0.815,47,0.007,48,0.564,52,0.459,53,0.747,60,1.316,61,1.126,71,0.337,73,0.398,77,1.123,81,0.759,85,0.07,90,0.106,110,2.111,111,1.468,112,2.948,113,2.146,114,1.875,115,0.913,116,1.263,117,1.45,118,0.759,119,1.958,120,0.913,121,1.524,122,0.854,123,0.883,124,0.868,125,0.913,126,0.854,127,0.913,128,0.868,129,0.883,130,0.913,131,0.883,132,0.913,133,0.883,134,0.913,135,0.854,136,0.883,137,0.913,138,0.883,139,0.913,140,0.898,141,0.854,142,1.312,143,0.981,144,1.306,145,0.854,146,1.306,147,0.84,148,1.991,149,0.854,150,0.698,151,0.913,152,0.883,153,1.306,154,0.854,155,1.356,156,0.854,157,0.854,158,0.883,159,0.913,160,0.854,161,0.913,162,0.883,163,0.799,164,1.426,165,0.883,166,0.913,167,0.868,168,1.221,169,0.913,170,0.883,171,0.913,172,0.883,173,0.868,174,0.913,175,0.868,176,0.913,177,0.868,178,0.913,179,0.854,180,0.883,181,0.868,182,0.964,183,0.913,184,0.854,185,0.913,186,0.868,187,0.868,188,0.913,189,0.868,190,1.524,191,0.826,192,0.913,193,0.883,194,1.306,195,0.913,196,0.883,197,0.913,198,0.883,199,0.913,200,0.854,201,0.868,202,0.854,203,0.913,204,0.854,205,0.898,206,1.505,207,0.854,208,0.854,209,0.883,210,0.913,211,0.854,212,1.823,213,0.84,214,0.913,215,0.854,216,1.45,217,1.556,218,0.854,219,0.913,220,0.883,221,1.306,222,1.306,223,0.883,224,0.913,225,0.883,226,0.913,227,0.868,228,0.913,229,0.84,230,1.05,231,0.854,232,0.883,233,0.913,234,0.883,235,0.913,236,1.201,237,1.499,238,1.306,239,0.854,240,0.898,241,1.226,242,0.826,243,0.868,244,0.898,245,0.868,246,0.913,247,0.868,248,0.913,249,0.854,250,0.913,251,0.868,252,0.898,253,0.913,254,0.004,255,0.004,311,1.527,397,2.624,398,2.577,399,2.598,400,2.119,413,1.906,517,2.119,595,1.774,596,1.527,597,1.696,598,1.774,685,1.493,686,1.745,687,2.185,691,1.875,697,1.734,698,1.734,701,2.061,706,1.86,707,2.822,709,1.86,717,1.527,718,1.559,719,2.23,720,1.527,721,2.111,724,1.497,730,3.162,731,3.234,746,3.561,749,1.816,752,2.119,753,1.86,759,3.322,803,2.322,804,2.427,805,2.182,810,3.144,811,2.587,817,2.322,818,2.322,825,2.119,832,2.968,858,2.697,886,2.182,893,2.49,1959,4.498,2258,3.659,3336,4.106,3337,6.858,3338,5.874,3339,8.238,3340,8.238,3341,8.238,3342,7.341,3343,5.874,3344,4.106,3345,4.106,3346,4.106,3347,4.106,3348,4.813,3349,4.106,3350,4.106,3351,4.106,3352,4.106]],["title/modules/SettingsRoutingModule.html",[401,1.965,3324,3.439]],["body/modules/SettingsRoutingModule.html",[0,0.441,3,0.123,4,0.104,9,0.095,47,0.007,71,0.469,73,0.645,85,0.113,90,0.171,93,1.504,182,1.093,206,1.338,211,1.682,213,1.654,215,1.682,216,1.407,217,1.682,218,1.682,254,0.005,255,0.005,401,2.75,403,2.876,416,3.089,418,4.061,429,5.097,430,5.255,431,2.086,438,5.855,444,5.453,447,5.849,457,4.193,473,4.811,485,4.574,1953,5.096,1959,5.096,3225,5.453,3279,5.453,3324,5.849,3330,8.08,3331,5.931,3332,5.931,3333,5.453,3334,5.931,3348,5.453,3353,6.656,3354,6.656]],["title/components/SettingsSessionsPage.html",[0,0.226,218,0.989]],["body/components/SettingsSessionsPage.html",[0,0.302,1,0.751,2,1.131,3,0.067,4,0.056,5,0.739,6,0.816,7,0.803,8,0.803,9,0.051,13,1.561,14,2.419,15,0.668,16,1.731,17,1.944,18,0.702,19,1.15,20,0.714,21,1.112,23,1.112,25,0.177,26,0.497,27,0.909,32,0.659,36,2.675,37,0.544,44,0.78,46,0.868,47,0.007,48,0.631,49,0.357,50,0.697,52,0.788,53,0.973,62,0.777,68,2.192,71,0.387,73,0.35,77,1.023,81,0.668,83,0.983,85,0.061,88,1.584,90,0.093,106,1.249,110,1.647,111,1.291,113,1.036,114,1.153,115,0.803,116,1.15,117,1.347,118,0.668,119,1.782,120,0.803,121,1.416,122,0.751,123,0.777,124,0.764,125,0.803,126,0.751,127,0.803,128,0.764,129,0.777,130,0.803,131,0.777,132,0.803,133,0.777,134,0.803,135,0.751,136,0.777,137,0.803,138,0.777,139,0.803,140,0.79,141,0.751,142,1.219,143,0.894,144,1.189,145,0.751,146,1.189,147,0.739,148,1.934,149,0.751,150,0.614,151,0.803,152,0.777,153,1.189,154,0.751,155,1.26,156,0.751,157,0.751,158,0.777,159,0.803,160,0.751,161,0.803,162,0.777,163,0.702,164,1.325,165,0.777,166,0.803,167,0.764,168,1.112,169,0.803,170,0.777,171,0.803,172,0.777,173,1.131,174,0.803,175,0.764,176,0.803,177,0.764,178,0.803,179,0.751,180,0.777,181,0.764,182,1.046,183,0.803,184,0.751,185,0.803,186,0.764,187,0.764,188,0.803,189,0.764,190,1.416,191,0.726,192,0.803,193,0.777,194,1.189,195,0.803,196,0.777,197,0.803,198,0.777,199,0.803,200,0.751,201,0.764,202,0.751,203,0.803,204,0.751,205,0.79,206,1.076,207,0.751,208,0.751,209,0.777,210,0.803,211,0.751,212,1.92,213,0.739,214,0.803,215,0.751,216,0.764,217,0.751,218,1.465,219,0.803,220,0.777,221,0.803,222,1.189,223,0.777,224,0.803,225,0.777,226,0.803,227,0.764,228,0.803,229,0.739,230,0.957,231,0.751,232,0.777,233,0.803,234,0.777,235,0.803,236,1.094,237,1.393,238,1.189,239,0.751,240,0.79,241,0.646,242,0.726,243,0.764,244,0.79,245,0.764,246,0.803,247,0.764,248,0.803,249,0.751,250,0.803,251,0.764,252,0.79,253,0.803,254,0.004,255,0.004,258,0.844,308,1.144,375,1.219,397,1.267,398,2.056,399,1.598,413,2.483,596,1.344,685,2.003,686,2.34,688,1.636,689,1.46,691,2.034,693,1.962,697,2.26,698,1.526,713,2.614,717,1.344,718,1.371,719,1.371,720,1.344,721,1.112,722,1.919,723,1.864,724,1.317,730,2.692,731,2.312,736,1.919,742,1.344,747,1.153,748,2.278,750,2.276,758,2.113,766,4.097,775,4.097,785,4.015,794,2.766,795,2.766,830,2.372,893,3.244,904,2.766,1272,3.677,1330,2.611,1605,2.766,1630,2.96,1895,4.097,1952,5.894,1986,5.76,2104,4.768,2250,3.13,2259,2.96,2295,2.766,2297,3.219,2331,2.96,2349,2.766,2449,3.219,2542,3.219,3215,5.773,3221,2.766,3313,2.766,3333,6.68,3348,6.163,3355,3.612,3356,6.373,3357,5.351,3358,6.373,3359,5.351,3360,5.351,3361,3.612,3362,5.351,3363,5.351,3364,5.351,3365,7.046,3366,3.612,3367,3.612,3368,5.351,3369,3.612,3370,3.612,3371,5.351,3372,3.612,3373,3.612,3374,3.612,3375,3.612,3376,3.612,3377,3.612,3378,3.612,3379,3.612,3380,3.612,3381,3.612,3382,3.612,3383,3.612,3384,3.612,3385,3.612,3386,3.612,3387,6.373,3388,3.612,3389,3.612,3390,3.612,3391,3.612,3392,5.351,3393,7.046,3394,5.351,3395,5.351,3396,5.351,3397,5.351,3398,2.96]],["title/components/SidebarNavigationComponent.html",[0,0.226,220,1.023]],["body/components/SidebarNavigationComponent.html",[0,0.328,1,0.868,2,1.257,3,0.077,4,0.065,5,0.854,6,0.944,7,0.928,8,0.928,9,0.059,15,0.772,16,1.742,17,1.956,18,0.812,19,1.278,20,0.826,21,1.236,23,1.236,25,0.205,26,0.552,27,1.076,31,4.547,32,0.732,37,0.629,44,0.746,46,0.514,47,0.006,48,0.601,49,0.295,50,0.685,52,0.467,53,0.76,68,2.381,71,0.391,73,0.405,77,1.524,81,0.772,85,0.071,90,0.107,91,0.799,112,2.097,113,1.705,114,1.333,115,0.928,116,1.278,117,1.464,118,0.772,119,1.742,120,0.928,121,1.539,122,0.868,123,0.898,124,0.883,125,0.928,126,0.868,127,0.928,128,0.883,129,0.898,130,0.928,131,0.898,132,0.928,133,0.898,134,0.928,135,0.868,136,0.898,137,0.928,138,0.898,139,0.928,140,0.913,141,0.868,142,1.584,143,0.993,144,1.322,145,0.868,146,1.322,147,0.854,148,1.999,149,0.868,150,0.71,151,0.928,152,0.898,153,1.322,154,0.868,155,1.369,156,0.868,157,0.868,158,0.898,159,0.928,160,0.868,161,0.928,162,0.898,163,0.812,164,1.439,165,0.898,166,0.928,167,0.883,168,1.568,169,0.928,170,0.898,171,0.928,172,0.898,173,0.883,174,0.928,175,0.883,176,0.928,177,0.883,178,0.928,179,0.868,180,0.898,181,0.883,182,0.976,183,0.928,184,0.868,185,0.928,186,0.883,187,0.883,188,0.928,189,0.883,190,1.539,191,0.84,192,0.928,193,0.898,194,1.322,195,0.928,196,0.898,197,0.928,198,0.898,199,0.928,200,0.868,201,0.883,202,0.868,203,0.928,204,0.868,205,0.913,206,1.196,207,0.868,208,0.868,209,0.898,210,0.928,211,0.868,212,1.714,213,0.854,214,0.928,215,0.868,216,0.883,217,0.868,218,0.868,219,0.928,220,1.622,221,1.937,222,1.322,223,0.898,224,0.928,225,0.898,226,0.928,227,0.883,228,0.928,229,0.854,230,1.063,231,0.868,232,0.898,233,0.928,234,0.898,235,0.928,236,1.216,237,1.513,238,1.322,239,0.868,240,1.742,241,0.747,242,0.84,243,0.883,244,0.913,245,0.883,246,0.928,247,0.883,248,0.928,249,0.868,250,0.928,251,0.883,252,0.913,253,0.928,254,0.004,255,0.004,282,1.437,308,0.864,375,1.41,389,3.683,397,2.645,398,1.735,399,1.847,431,1.309,447,3.02,685,1.062,686,2.056,687,2.212,688,1.892,689,1.689,691,1.333,693,2.131,701,3.475,702,2.992,706,1.892,709,1.892,727,1.847,728,1.805,729,2.444,752,2.156,753,1.892,768,2.353,804,1.726,812,2.984,879,2.533,883,3.722,942,2.743,943,2.444,944,2.632,945,2.22,946,2.288,948,3.905,991,2.288,1140,2.533,1141,4.158,1244,5.298,1330,3.02,1407,4.872,1479,4.553,1521,2.871,1539,2.533,2519,7.103,2849,3.722,2851,3.722,3399,7.972,3400,3.722,3401,5.298,3402,6.169,3403,5.298,3404,7.544,3405,4.177,3406,4.177,3407,4.177,3408,4.177,3409,4.177,3410,3.422,3411,3.422,3412,4.177,3413,4.177,3414,4.177,3415,4.177]],["title/interfaces/SinglePersonSchedule.html",[86,0.741,3416,3.898]],["body/interfaces/SinglePersonSchedule.html",[3,0.136,4,0.115,9,0.104,25,0.361,26,0.797,47,0.006,49,0.387,71,0.361,85,0.146,86,1.146,208,1.529,254,0.006,255,0.006,256,2.348,650,3.708,684,5.482,771,3.929,2660,6.44,3416,7.451,3417,6.553,3418,6.553]],["title/components/SnackbarComponent.html",[0,0.226,223,1.023]],["body/components/SnackbarComponent.html",[0,0.303,1,0.753,2,1.133,3,0.067,4,0.057,5,0.74,6,0.818,7,0.805,8,0.805,9,0.051,13,1.564,14,2.422,15,0.669,16,1.732,17,1.944,18,0.704,19,1.152,20,0.716,21,1.114,23,1.114,25,0.178,26,0.497,27,1.195,32,0.66,36,2.678,37,0.545,44,0.884,46,0.66,47,0.007,48,0.673,49,0.321,50,0.53,52,0.714,53,1.16,57,1.529,60,1.324,61,1.133,71,0.346,73,0.351,77,1.025,81,0.669,85,0.062,90,0.093,106,0.85,110,1.114,111,1.916,113,1.537,115,0.805,116,1.152,117,1.349,118,0.669,119,1.87,120,0.805,121,1.418,122,0.753,123,0.778,124,0.765,125,0.805,126,0.753,127,0.805,128,0.765,129,0.778,130,0.805,131,0.778,132,0.805,133,0.778,134,0.805,135,0.753,136,0.778,137,0.805,138,0.778,139,0.805,140,0.791,141,0.753,142,1.22,143,0.895,144,1.191,145,0.753,146,1.191,147,0.74,148,1.935,149,0.753,150,0.615,151,0.805,152,0.778,153,1.191,154,0.753,155,1.262,156,0.753,157,0.753,158,0.778,159,0.805,160,0.753,161,0.805,162,0.778,163,0.704,164,1.327,165,0.778,166,0.805,167,0.765,168,1.696,169,0.805,170,0.778,171,0.805,172,0.778,173,0.765,174,0.805,175,0.765,176,0.805,177,0.765,178,0.805,179,0.753,180,0.778,181,0.765,182,0.88,183,0.805,184,0.753,185,0.805,186,0.765,187,0.765,188,0.805,189,0.765,190,1.418,191,0.728,192,0.805,193,0.778,194,1.191,195,0.805,196,0.778,197,0.805,198,0.778,199,0.805,200,0.753,201,0.765,202,0.753,203,0.805,204,0.753,205,0.791,206,1.078,207,0.753,208,0.753,209,0.778,210,0.805,211,0.753,212,1.619,213,0.74,214,0.805,215,0.753,216,0.765,217,0.753,218,0.753,219,0.805,220,0.778,221,0.805,222,1.191,223,1.516,224,0.805,225,0.778,226,1.418,227,0.765,228,0.805,229,0.74,230,0.958,231,0.753,232,0.778,233,0.805,234,0.778,235,0.805,236,1.096,237,1.395,238,1.191,239,0.753,240,0.791,241,0.647,242,0.728,243,0.765,244,0.791,245,0.765,246,0.805,247,0.765,248,0.805,249,0.753,250,0.805,251,0.765,252,0.791,253,0.805,254,0.004,255,0.004,261,3.66,269,4.104,282,1.245,300,2.488,308,1.243,310,1.68,311,2.374,375,1.222,397,1.879,398,2.577,413,1.68,595,1.564,596,1.347,597,1.496,598,1.564,685,1.622,686,1.075,687,1.994,691,1.711,693,1.964,696,2.195,697,1.529,698,2.264,702,3.407,706,1.64,709,2.427,721,1.65,727,1.601,728,1.564,730,2.695,731,2.757,736,3.748,742,1.994,748,1.916,749,1.601,758,2.118,759,2.048,768,2.121,804,2.214,805,1.924,812,2.69,825,1.869,867,3.377,876,4.391,885,2.772,886,2.848,952,4.277,1056,2.488,1338,5.419,1414,4.405,1464,4.886,1826,2.048,1827,2.936,2233,2.966,2247,2.772,3419,3.621,3420,6.382,3421,5.36,3422,6.382,3423,7.885,3424,5.36,3425,5.228,3426,5.36,3427,6.382,3428,3.226,3429,5.7,3430,3.621,3431,3.621,3432,4.776,3433,3.621,3434,3.621,3435,3.621,3436,5.36,3437,3.621,3438,3.621,3439,5.36,3440,3.621,3441,5.36,3442,3.621,3443,3.621,3444,3.621,3445,2.966,3446,2.617,3447,3.621,3448,3.621,3449,3.621,3450,3.621,3451,3.621,3452,2.966,3453,3.621,3454,3.621,3455,3.621,3456,3.621,3457,3.621,3458,3.621,3459,3.621,3460,3.621,3461,3.621,3462,3.621,3463,3.226,3464,3.621,3465,3.621,3466,3.621,3467,5.36,3468,5.36,3469,5.36]],["title/interfaces/SnackbarData.html",[86,0.741,3446,3.439]],["body/interfaces/SnackbarData.html",[3,0.135,4,0.114,9,0.104,25,0.358,26,0.793,47,0.006,49,0.386,85,0.124,86,1.138,88,1.823,254,0.006,255,0.006,256,2.33,261,4.339,308,1.317,398,2.728,952,5.497,3425,7.659,3446,6.18,3452,7.427,3470,7.299]],["title/components/SnackbarOutletComponent.html",[0,0.226,225,1.023]],["body/components/SnackbarOutletComponent.html",[0,0.338,1,0.916,2,1.305,3,0.081,4,0.069,5,0.901,6,0.996,7,0.979,8,0.979,9,0.063,15,0.815,16,1.745,17,1.961,18,0.857,19,1.327,20,0.871,21,1.284,23,1.284,25,0.303,26,0.573,27,1.017,32,0.76,37,0.663,44,0.705,46,0.76,47,0.006,48,0.635,49,0.263,50,0.611,52,0.493,60,0.774,61,0.663,71,0.35,73,0.427,77,1.181,81,0.815,85,0.075,88,1.433,90,0.113,106,0.699,110,1.356,111,1.575,112,2.211,115,0.979,116,1.327,117,1.507,118,0.815,119,1.688,120,0.979,121,1.584,122,0.916,123,0.947,124,0.931,125,0.979,126,0.916,127,0.979,128,0.931,129,0.947,130,0.979,131,0.947,132,0.979,133,0.947,134,0.979,135,0.916,136,0.947,137,0.979,138,0.947,139,0.979,140,0.963,141,0.916,142,1.363,143,1.031,144,1.372,145,0.916,146,1.372,147,0.901,148,2.021,149,0.916,150,0.748,151,0.979,152,0.947,153,1.372,154,0.916,155,1.41,156,0.916,157,0.916,158,0.947,159,0.979,160,0.916,161,0.979,162,0.947,163,0.857,164,1.482,165,0.947,166,0.979,167,0.931,168,1.284,169,0.979,170,0.947,171,0.979,172,0.947,173,0.931,174,0.979,175,0.931,176,0.979,177,0.931,178,0.979,179,0.916,180,0.947,181,0.931,182,1.014,183,0.979,184,0.916,185,0.979,186,0.931,187,0.931,188,0.979,189,0.931,190,1.584,191,0.886,192,0.979,193,0.947,194,1.372,195,0.979,196,0.947,197,0.979,198,0.947,199,0.979,200,0.916,201,0.931,202,0.916,203,0.979,204,0.916,205,0.963,206,1.241,207,0.916,208,0.916,209,0.947,210,0.979,211,0.916,212,1.748,213,0.901,214,0.979,215,0.916,216,0.931,217,0.916,218,0.916,219,0.979,220,0.947,221,0.979,222,1.372,223,0.947,224,0.979,225,1.66,226,1.963,227,0.931,228,0.979,229,0.901,230,1.104,231,0.916,232,0.947,233,0.979,234,0.947,235,0.979,236,1.262,237,1.558,238,1.372,239,0.916,240,0.963,241,0.788,242,0.886,243,0.931,244,0.963,245,0.931,246,0.979,247,0.931,248,0.979,249,0.916,250,0.979,251,0.931,252,0.963,253,0.979,254,0.004,255,0.004,282,1.515,308,1.122,375,1.487,390,4.463,685,1.12,686,2.117,688,1.995,689,1.781,691,1.406,693,1.356,696,2.671,705,2.893,713,2.152,715,2.893,717,1.639,718,1.672,724,1.606,749,2.73,804,1.82,812,2.211,825,2.274,828,2.211,1277,3.926,1278,6.351,1279,5.501,1290,3.926,1464,4.727,1660,3.028,1833,3.185,2162,3.185,2522,6.883,3428,3.926,3429,6.094,3445,3.61,3446,5.584,3471,7.724,3472,6.351,3473,6.174,3474,6.174,3475,6.174,3476,4.406,3477,6.174,3478,4.406,3479,4.406,3480,4.406]],["title/injectables/SnackbarService.html",[322,1.77,3429,3.439]],["body/injectables/SnackbarService.html",[3,0.112,4,0.095,9,0.086,25,0.297,26,0.708,27,1.39,28,3.297,32,0.94,37,1.257,44,0.895,46,0.94,47,0.007,48,0.575,49,0.325,50,0.755,52,0.934,53,1.519,60,1.341,61,1.148,62,1.64,71,0.444,73,0.587,83,1.648,85,0.103,88,1.68,90,0.156,93,1.982,254,0.005,255,0.005,261,3.542,308,1.341,322,2.838,324,3.125,326,3.152,373,3.125,374,2.958,398,2.56,512,4.378,771,3.907,952,5.482,1285,6.8,1338,5.244,1387,3.672,1411,7.816,1451,5.396,1452,6.846,1464,5.843,3425,7.187,3429,5.516,3432,6.8,3446,4.378,3452,6.846,3472,7.445,3481,6.056,3482,6.056,3483,7.631,3484,6.056,3485,6.056,3486,7.631,3487,6.056,3488,7.631,3489,6.056,3490,6.056,3491,7.631,3492,6.056,3493,6.056,3494,6.056,3495,6.056]],["title/interfaces/Status.html",[81,0.88,86,0.741]],["body/interfaces/Status.html",[3,0.112,4,0.095,9,0.086,25,0.297,26,0.708,47,0.007,48,0.695,49,0.385,71,0.374,81,1.822,85,0.13,86,1.409,88,1.68,111,2.728,230,1.733,254,0.005,255,0.005,256,1.933,258,1.415,278,2.791,293,2.307,301,4.285,307,5.843,308,1.214,397,2.676,398,2.812,579,4.378,684,4.464,685,1.94,689,2.448,704,6.252,716,5.244,747,2.947,972,2.743,1366,5.244,2349,6.717,2653,5.011,2654,5.516,3496,5.396,3497,6.8,3498,8.448,3499,8.226,3500,6.717,3501,6.252,3502,5.843,3503,5.843,3504,5.843,3505,5.396,3506,5.396]],["title/pipes/StatusColorPipe.html",[1764,2.104,3507,3.643]],["body/pipes/StatusColorPipe.html",[3,0.128,4,0.109,9,0.099,13,2.032,15,1.288,32,0.858,44,0.689,46,0.858,47,0.007,48,0.67,49,0.297,50,0.689,52,0.779,60,1.224,61,1.251,71,0.408,73,0.675,81,1.288,82,4.573,85,0.118,90,0.179,106,1.46,254,0.005,255,0.005,702,3.008,756,5.331,1660,6.108,1764,3.677,1826,3.938,1827,5.23,2651,6.204,2654,6.01,3501,6.811,3507,6.365,3508,4.387,3509,8.313,3510,6.963,3511,8.313,3512,5.713,3513,6.963,3514,5.713,3515,6.963,3516,8.313]],["title/components/StatusLabelComponent.html",[0,0.226,227,1.006]],["body/components/StatusLabelComponent.html",[0,0.258,1,0.582,2,0.931,3,0.052,4,0.044,5,0.573,6,0.633,7,0.622,8,0.622,9,0.04,15,0.518,16,1.71,17,1.917,18,0.545,19,0.947,20,0.554,21,0.916,23,0.916,25,0.137,26,0.409,27,1.312,29,1.909,32,0.543,37,0.421,44,0.914,46,0.951,47,0.007,48,0.635,49,0.376,50,0.764,52,0.909,53,1.479,57,1.183,60,1.397,61,1.224,62,1.708,64,1.108,71,0.379,73,0.271,74,0.894,77,0.842,81,1.682,82,1.839,83,0.762,85,0.048,88,1.433,89,2.249,90,0.072,91,0.536,106,0.979,110,2.066,113,1.77,114,1.738,115,0.622,116,0.947,117,1.419,118,0.518,119,1.842,120,0.622,121,1.21,122,0.582,123,0.602,124,0.592,125,0.622,126,0.582,127,0.622,128,0.592,129,0.602,130,0.622,131,0.602,132,0.622,133,0.602,134,0.622,135,0.582,136,0.602,137,0.622,138,0.602,139,0.622,140,1.778,141,0.582,142,1.041,143,0.736,144,0.979,145,0.582,146,0.979,147,0.573,148,1.807,149,0.582,150,0.476,151,0.622,152,0.602,153,0.979,154,0.582,155,1.077,156,0.582,157,0.582,158,0.602,159,0.622,160,0.582,161,0.622,162,0.602,163,0.545,164,1.132,165,0.602,166,0.622,167,0.592,168,1.606,169,0.622,170,0.602,171,0.622,172,0.602,173,0.592,174,0.622,175,0.592,176,0.622,177,0.592,178,0.622,179,0.582,180,0.602,181,0.592,182,0.723,183,0.622,184,0.582,185,0.622,186,0.592,187,0.592,188,0.622,189,0.592,190,1.21,191,0.563,192,0.622,193,0.602,194,0.979,195,0.622,196,0.602,197,0.622,198,0.602,199,0.622,200,0.582,201,0.592,202,0.582,203,0.622,204,0.582,205,0.612,206,0.886,207,0.582,208,0.582,209,0.602,210,0.622,211,0.582,212,1.443,213,0.573,214,0.622,215,0.582,216,0.592,217,0.582,218,0.582,219,0.622,220,0.602,221,0.622,222,0.979,223,0.602,224,0.622,225,0.602,226,0.622,227,1.305,228,0.622,229,0.573,230,0.788,231,0.582,232,0.602,233,0.622,234,0.602,235,0.622,236,0.901,237,1.558,238,0.979,239,0.582,240,0.612,241,0.501,242,0.563,243,0.592,244,0.963,245,0.592,246,0.622,247,0.592,248,0.622,249,0.582,250,0.622,251,0.592,252,0.612,253,0.622,254,0.003,255,0.003,258,1.443,260,1.085,278,2.029,282,0.963,284,2.968,293,0.847,296,2.982,301,1.3,311,2.025,328,2.893,361,2.413,397,2.353,398,2.42,399,2.73,427,2.671,547,4.362,563,3.301,610,1.638,650,1.743,654,2.152,676,1.764,681,3.609,685,1.384,686,1.308,687,2.296,690,2.671,691,1.406,693,1.356,694,2.577,698,2.608,702,1.903,706,1.268,707,1.925,709,1.268,713,2.66,715,1.839,717,1.638,718,1.672,719,2.343,720,1.638,721,1.356,724,1.021,727,1.239,728,1.21,730,3.01,731,3.08,746,2.671,748,1.001,751,1.406,753,1.268,759,2.491,768,1.743,771,2.353,784,1.925,803,1.584,817,1.584,818,1.584,841,3.079,853,2.982,866,1.638,867,1.764,885,2.144,939,1.698,972,1.995,976,4.542,977,2.671,978,2.671,979,2.671,980,2.671,981,2.671,982,4.321,983,1.764,984,1.698,985,2.491,986,1.698,987,1.698,988,1.239,989,1.638,990,1.534,991,1.534,992,1.698,993,1.764,994,2.671,995,3.743,996,2.097,997,4.169,998,1.698,999,3.079,1000,1.638,1001,2.671,1002,2.045,1003,3.382,1004,1.584,1005,1.698,1006,2.671,1007,3.678,1008,1.698,1009,1.764,1010,1.698,1011,1.698,1012,1.698,1013,1.764,1014,2.671,1015,1.698,1016,1.698,1017,1.839,1018,1.764,1019,1.764,1020,1.764,1021,1.764,1024,1.839,1025,1.764,1034,1.764,1056,2.045,1062,1.925,1087,2.893,1088,3.373,1089,3.936,1310,1.764,1338,4.243,1353,4.727,1387,3.301,1414,3.611,1450,1.584,1483,4.727,1715,2.294,1764,1.239,1830,3.576,1883,1.925,1884,1.839,1885,2.024,2007,3.936,2066,2.144,2180,6.351,2181,3.373,2194,3.373,2198,3.925,2204,2.495,2206,2.495,2208,2.294,2211,2.495,2212,2.294,2213,2.495,2214,2.294,2227,2.495,2228,2.495,2229,2.495,2230,2.294,2231,2.495,2232,2.144,2233,4.461,2234,2.495,2235,2.495,2236,2.495,2237,2.495,2238,3.925,2246,3.373,2247,2.144,2255,2.294,2406,2.294,2407,2.294,2632,2.294,3078,2.144,3122,3.925,3411,2.294,3463,2.495,3517,8.976,3518,7.998,3519,2.801,3520,5.445,3521,4.405,3522,7.08,3523,5.445,3524,4.405,3525,2.801,3526,4.405,3527,2.801,3528,2.801,3529,4.852,3530,2.801,3531,2.801,3532,2.801,3533,4.405,3534,2.801,3535,2.801,3536,2.801,3537,2.801,3538,2.801,3539,2.801,3540,2.801,3541,2.801,3542,2.801,3543,2.801,3544,2.801,3545,2.801,3546,2.801,3547,2.801,3548,2.801,3549,2.801,3550,4.405]],["title/injectables/StatusService.html",[322,1.77,548,3.27]],["body/injectables/StatusService.html",[3,0.075,4,0.064,9,0.058,25,0.201,27,1.372,32,0.722,37,0.616,44,0.858,46,1.067,47,0.007,48,0.653,49,0.369,50,0.858,52,1.024,62,1.26,68,3.344,71,0.404,73,0.396,81,1.861,83,1.114,85,0.07,88,1.95,89,3.782,90,0.105,91,0.783,93,1.689,106,1.399,129,1.607,142,1.751,143,1.495,150,1.27,182,1.351,230,1.224,254,0.004,255,0.004,258,1.848,308,0.851,314,3.491,322,2.18,323,4.508,324,2.112,333,5.063,373,2.112,374,1.999,375,1.381,494,2.481,513,2.813,517,3.024,547,4.957,548,4.027,563,4.531,579,5.403,605,3.647,622,5.608,641,5.221,684,4.627,747,2.97,771,1.768,847,4.709,1002,3.469,1144,3.692,1384,3.692,1855,3.353,1859,3.647,2613,4.801,2931,4.801,2933,4.236,2934,5.221,3522,7.048,3551,4.093,3552,5.86,3553,4.093,3554,5.86,3555,4.093,3556,5.221,3557,4.093,3558,8.157,3559,4.801,3560,4.093,3561,4.093,3562,4.093,3563,5.86,3564,4.093,3565,5.221,3566,4.093,3567,5.221,3568,3.647,3569,4.093,3570,4.093,3571,4.093,3572,4.093,3573,4.093,3574,4.093,3575,5.86,3576,5.86,3577,5.86,3578,4.093,3579,4.093,3580,4.093,3581,4.093,3582,4.093,3583,5.86,3584,4.093,3585,4.093,3586,4.093,3587,4.093,3588,4.093,3589,5.86,3590,4.093,3591,4.093]],["title/interfaces/StatusWithTasks.html",[86,0.741,579,3.439]],["body/interfaces/StatusWithTasks.html",[3,0.12,4,0.102,9,0.093,25,0.32,26,0.742,47,0.007,48,0.602,49,0.278,71,0.392,81,1.819,85,0.136,86,1.44,88,1.313,111,2.334,230,1.743,254,0.005,255,0.005,256,2.084,258,1.526,278,2.418,293,1.974,301,4.012,307,5,308,0.948,397,2.29,398,2.629,579,5.781,684,5.502,685,1.66,689,3.233,704,5.35,716,4.488,747,2.553,972,3.622,1366,4.488,2349,6.123,2653,4.288,2654,4.72,3496,5.819,3497,5.819,3498,7.703,3499,7.126,3500,6.123,3501,5.35,3502,5,3503,5,3504,5,3505,5.819,3506,5.819]],["title/classes/Story.html",[90,0.122,1921,3.439]],["body/classes/Story.html",[0,0.226,3,0.088,4,0.116,5,1.71,9,0.068,16,0.823,25,0.234,26,0.605,27,1.398,32,0.802,37,0.717,44,0.923,46,1.125,47,0.007,48,0.651,49,0.397,50,0.854,52,0.989,53,1.57,57,2.752,65,2.878,71,0.442,74,1.52,85,0.126,86,0.742,90,0.122,91,1.651,106,1.033,116,1.597,241,0.851,254,0.004,255,0.004,258,1.866,308,1.383,339,2.457,690,3.95,721,2.286,1056,3.024,1066,2.057,1795,3.127,1798,4.478,1801,4.478,1802,2.887,1803,2.693,1809,4.478,1921,6.601,1935,3.901,2132,6.066,2872,5.269,3298,4.71,3592,3.901,3593,6.618,3594,6.618,3595,6.515,3596,7.116,3597,6.515,3598,6.515,3599,6.515,3600,6.515,3601,5.805,3602,7.075,3603,6.515,3604,6.404,3605,4.762,3606,7.116,3607,5.805,3608,4.762,3609,4.762,3610,5.805,3611,4.762,3612,5.805,3613,4.762,3614,5.805,3615,4.762,3616,5.805,3617,4.762,3618,4.762,3619,4.243,3620,4.762,3621,5.338,3622,3.442,3623,5.805,3624,4.243,3625,4.989,3626,4.243,3627,3.901,3628,4.243,3629,4.243,3630,3.901,3631,4.243,3632,4.243,3633,6.618,3634,4.243,3635,5.805,3636,4.243,3637,4.243,3638,4.243,3639,4.243,3640,4.243,3641,4.243,3642,4.243,3643,4.243,3644,4.243,3645,4.243,3646,4.243,3647,4.243,3648,4.243,3649,7.452,3650,6.618,3651,3.901,3652,3.901,3653,4.243,3654,4.243,3655,4.243,3656,4.243]],["title/interfaces/StoryConfig.html",[86,0.741,3602,3.898]],["body/interfaces/StoryConfig.html",[0,0.247,3,0.096,4,0.121,5,1.849,9,0.074,16,0.899,25,0.255,26,0.642,27,1.311,46,0.957,47,0.007,49,0.406,50,0.929,57,2.921,65,3.01,71,0.451,74,1.66,85,0.132,86,0.811,90,0.134,91,1.323,106,1.097,116,1.905,241,0.93,254,0.005,255,0.005,256,1.66,258,2.071,308,1.4,339,2.685,502,4.193,690,4.193,721,2.391,1795,3.416,1798,4.753,1801,4.753,1802,3.154,1803,2.942,1809,5.69,1921,6.231,1935,4.262,2132,6.167,2872,5.698,3298,4.999,3592,4.262,3593,4.635,3594,4.635,3596,4.635,3601,4.635,3602,6.784,3604,6.786,3606,6.163,3607,4.635,3610,4.635,3612,4.635,3614,4.635,3616,4.635,3621,5.666,3622,3.76,3623,6.163,3624,4.635,3625,6.34,3626,4.635,3627,4.262,3628,4.635,3629,4.635,3630,6.784,3631,4.635,3632,4.635,3633,6.923,3634,4.635,3635,6.163,3636,4.635,3637,4.635,3638,4.635,3639,4.635,3640,4.635,3641,4.635,3642,4.635,3643,4.635,3644,4.635,3645,4.635,3646,4.635,3647,4.635,3648,4.635,3649,7.681,3650,6.923,3651,4.262,3652,4.262,3653,4.635,3654,4.635,3655,4.635,3656,4.635]],["title/classes/StoryPageConfig.html",[90,0.122,1809,3.27]],["body/classes/StoryPageConfig.html",[3,0.094,4,0.08,9,0.073,15,0.946,16,1.421,25,0.251,26,0.715,27,1.336,32,0.842,37,0.77,44,0.905,46,1.013,47,0.007,48,0.62,49,0.35,50,0.814,52,0.958,53,0.93,57,2.888,71,0.442,74,1.632,85,0.116,86,0.797,90,0.131,91,1.772,93,1.858,106,1.428,150,1.397,241,1.657,254,0.004,255,0.004,260,2.65,287,2.024,293,1.546,308,1.329,410,3.867,416,2.374,419,5.602,420,3.916,421,4.19,427,3.101,751,3.432,956,4.146,972,2.316,976,3.745,996,2.434,1007,2.639,1056,3.174,1066,2.21,1085,2.262,1091,3.916,1119,4.943,1791,6.753,1792,7.592,1793,4.19,1794,7.67,1795,4.49,1796,4.19,1797,4.557,1798,3.515,1799,4.557,1800,4.557,1801,3.515,1802,3.101,1803,2.892,1804,5.602,1805,4.557,1806,4.557,1807,6.093,1808,4.557,1809,4.699,1810,6.311,1811,5.602,1812,6.093,1813,7.328,1814,4.557,1815,4.557,1816,4.557,1817,6.738,1818,6.093,1819,4.557,1820,4.557,1821,6.093,1822,4.557,1823,4.557,1824,4.19,1825,4.557,1826,2.892,1827,3.745,1828,6.093,1829,3.916,1830,5.059,1831,5.602,1832,4.557,1833,3.697,1834,4.557,1835,4.557,1836,5.602,1837,4.557,1838,5.602,1839,4.557,1840,4.557,1841,4.557,1922,6.093,1923,6.093,1924,6.093,3657,6.838,3658,5.114,3659,5.114,3660,5.114,3661,5.114,3662,5.114,3663,5.114,3664,5.114]],["title/classes/StoryTemplate.html",[90,0.122,3625,3.643]],["body/classes/StoryTemplate.html",[3,0.123,4,0.104,5,1.854,9,0.095,25,0.327,26,0.751,27,1.294,32,0.996,37,1.002,44,0.897,46,0.82,47,0.007,48,0.501,49,0.345,50,0.659,52,0.744,65,2.579,71,0.397,85,0.113,90,0.171,91,1.667,93,1.504,106,1.283,254,0.005,255,0.005,1056,3.755,1066,2.876,1792,7.613,1801,5.991,1802,4.036,1803,3.764,2132,6.421,3619,5.931,3625,6.195,3651,7.429,3665,6.656,3666,8.717,3667,8.091,3668,8.091,3669,6.656,3670,6.656,3671,6.656,3672,8.091,3673,8.091,3674,8.091,3675,5.931,3676,6.656]],["title/interfaces/Task.html",[86,0.741,230,0.851]],["body/interfaces/Task.html",[3,0.089,4,0.075,9,0.069,25,0.237,26,0.61,47,0.007,48,0.653,49,0.414,50,0.97,62,1.038,71,0.237,77,0.923,81,1.216,85,0.112,86,1.31,87,2.187,88,1.907,89,1.995,143,1.448,163,1.781,173,1.909,182,1.319,230,1.774,254,0.004,255,0.004,256,1.541,258,2.074,278,2.622,308,1.414,333,4.231,563,4.87,649,6.425,650,2.603,661,3.697,662,5.389,747,3.007,790,5.275,824,5.96,972,2.187,1054,3.956,1065,3.956,1274,4.031,1327,5.036,1458,5.389,1680,3.49,1762,4.755,1857,6.15,1948,3.72,1949,3.72,1956,3.042,1957,3.042,2008,5.835,2038,5.036,2653,4.319,3051,4.755,3500,5.728,3502,6.15,3503,6.15,3504,5.036,3622,3.49,3677,4.302,3678,6.15,3679,7.157,3680,7.105,3681,5.861,3682,5.861,3683,4.755,3684,5.036,3685,3.697,3686,7.157,3687,3.697,3688,4.302,3689,3.956,3690,3.697,3691,3.697]],["title/components/TaskDialog.html",[0,0.226,229,0.973]],["body/components/TaskDialog.html",[0,0.253,1,0.563,2,0.906,3,0.05,4,0.042,5,0.553,6,0.612,7,0.602,8,0.602,9,0.038,13,1.251,14,2.021,15,0.5,16,1.706,17,1.915,18,0.526,19,0.922,20,1.053,21,0.891,23,0.891,25,0.133,26,0.398,27,1.356,28,2.617,29,2.124,30,3.659,31,3.497,32,0.528,34,4.108,35,4.638,36,2.299,37,0.645,38,2.217,40,3.115,41,3.816,42,4.077,43,4.163,44,0.895,46,0.656,47,0.007,48,0.592,49,0.356,50,0.527,52,0.823,53,1.338,57,1.143,58,2.947,60,1.293,61,1.149,62,2.078,63,2.535,65,2.558,66,3.936,68,2.825,71,0.434,72,1.86,73,0.262,74,0.864,75,1.777,76,1.583,77,1.018,78,1.531,79,2.072,80,2.072,81,0.793,82,1.777,83,0.737,84,2.072,85,0.091,86,0.422,87,3.457,88,1.535,89,3.153,90,0.07,91,1.263,92,2.072,93,1.369,94,2.072,95,3.849,96,2.072,97,3.283,98,1.956,99,3.283,100,1.956,101,2.072,102,2.072,103,1.358,104,1.358,105,1.531,106,0.68,108,1.86,113,0.776,114,0.864,115,0.602,116,0.922,117,1.126,118,0.5,119,1.324,120,0.602,121,1.183,122,0.563,123,0.582,124,0.572,125,0.602,126,0.563,127,0.602,128,0.572,129,0.582,130,0.602,131,0.582,132,0.602,133,0.582,134,0.602,135,0.563,136,0.582,137,0.602,138,0.582,139,0.602,140,0.592,141,0.563,142,1.643,143,0.889,144,0.953,145,0.563,146,0.953,147,0.553,148,1.789,149,0.563,150,0.46,151,0.602,152,0.582,153,0.953,154,0.563,155,1.455,156,0.563,157,0.563,158,0.582,159,0.602,160,0.563,161,0.602,162,0.582,163,1.528,164,1.53,165,0.582,166,0.602,167,0.572,168,0.891,169,0.602,170,0.582,171,0.602,172,0.582,173,0.572,174,0.602,175,0.572,176,0.602,177,0.572,178,0.602,179,0.563,180,0.582,181,0.572,182,0.704,183,0.602,184,0.563,185,0.602,186,0.572,187,0.572,188,0.602,189,0.572,190,1.183,191,0.544,192,0.602,193,0.582,194,0.953,195,0.602,196,0.582,197,0.602,198,0.582,199,0.602,200,0.563,201,0.572,202,0.563,203,0.602,204,0.563,205,0.592,206,0.862,207,0.563,208,0.563,209,0.582,210,0.602,211,0.563,212,1.419,213,0.553,214,0.602,215,0.563,216,0.572,217,0.563,218,0.563,219,0.602,220,0.582,221,0.602,222,0.953,223,0.582,224,0.602,225,0.582,226,0.602,227,0.572,228,0.602,229,1.239,230,1.469,231,0.563,232,0.582,233,0.602,234,0.582,235,0.602,236,0.877,237,1.164,238,0.953,239,0.563,240,0.592,241,0.484,242,0.544,243,0.572,244,0.592,245,0.572,246,0.602,247,0.572,248,0.602,249,0.563,250,0.602,251,0.572,252,0.592,253,0.602,254,0.003,255,0.003,258,1.002,268,3.978,278,1.61,287,2.612,293,0.818,296,1.482,304,2.6,333,2.425,548,5.057,563,4.003,592,1.482,602,4.773,603,4.833,606,1.956,615,2.072,649,4.827,681,3.513,691,0.864,692,1.397,724,0.987,747,1.369,771,1.169,789,3.355,790,2.816,824,2.947,999,2.425,1085,1.197,1121,4.963,1141,3.693,1194,2.816,1211,4.162,1238,1.705,1387,4.003,1478,3.283,1479,3.283,1506,4.379,1513,6.131,1521,1.86,1795,1.777,1948,1.531,1949,1.531,1956,1.705,1957,1.705,1958,1.777,2008,4.425,2376,3.821,2625,4.363,2968,2.217,2969,2.217,3051,3.1,3410,2.217,3678,3.283,3687,4.077,3690,4.077,3691,3.283,3692,2.217,3693,4.745,3694,3.821,3695,4.745,3696,4.745,3697,4.745,3698,4.745,3699,4.745,3700,4.745,3701,5.397,3702,4.288,3703,4.288,3704,2.706,3705,2.706,3706,2.706,3707,2.706,3708,2.706,3709,2.706,3710,3.821,3711,2.706,3712,3.821,3713,2.706,3714,2.706,3715,3.821,3716,4.638,3717,3.821,3718,6.258,3719,2.706,3720,2.706,3721,2.706,3722,2.706,3723,2.706,3724,2.706,3725,3.821,3726,2.706,3727,2.706,3728,3.821,3729,2.706,3730,3.821,3731,2.706,3732,2.706,3733,2.217,3734,2.412,3735,4.077,3736,3.513,3737,2.412,3738,2.072,3739,4.077,3740,2.217,3741,2.217,3742,2.412,3743,2.412,3744,2.412,3745,2.412,3746,2.412,3747,3.821,3748,2.412,3749,2.412,3750,2.412,3751,2.217,3752,2.412,3753,2.412,3754,2.412,3755,2.412,3756,2.412,3757,3.821,3758,3.821,3759,2.412,3760,3.821,3761,2.412,3762,2.412,3763,2.412,3764,2.412,3765,3.821,3766,2.412,3767,2.412,3768,4.288,3769,4.288,3770,4.288,3771,4.288,3772,4.288,3773,2.412,3774,2.706]],["title/interfaces/TaskDialogData.html",[86,0.741,602,3.439]],["body/interfaces/TaskDialogData.html",[0,0.294,3,0.082,4,0.069,9,0.063,13,1.29,14,2.35,16,0.764,17,0.86,20,0.874,21,0.919,23,0.919,25,0.217,26,0.574,27,1.313,28,1.911,29,1.55,30,3.039,31,2.904,34,2.587,35,3.386,36,1.678,37,0.665,40,2.587,41,3.9,42,3.386,43,4.254,47,0.007,48,0.333,49,0.359,50,0.835,58,3.039,61,0.665,62,2.079,63,2.946,65,2.767,66,4.022,68,2.903,71,0.469,72,3.039,73,0.428,74,1.411,75,2.904,76,2.587,77,0.846,78,2.501,79,3.386,80,3.386,81,0.818,82,2.904,83,1.204,84,3.386,85,0.122,86,0.689,87,4.069,88,1.778,89,3.711,90,0.114,91,1.557,92,3.386,93,1.748,94,3.386,95,5.163,96,3.386,97,4.74,98,3.196,99,4.74,100,3.196,101,3.386,102,3.386,103,2.219,104,2.219,105,2.501,106,0.982,108,3.039,142,1.184,143,0.738,155,1.224,163,1.204,164,1.287,229,0.904,230,1.581,254,0.004,255,0.004,256,1.411,258,1.033,268,2.904,278,2.339,287,3.061,293,1.337,296,4.238,304,3.753,548,4.908,563,4.691,592,2.422,602,5.163,603,5.543,606,3.196,615,3.386,649,4.254,747,1.411,771,1.911,789,4.874,790,2.904,824,3.039,1085,1.956,1121,5.071,1141,3.584,1211,4.039,1238,2.786,1387,4.691,1513,6.174,1521,3.039,1795,4.69,1948,2.501,1949,2.501,1956,2.786,1957,2.786,1958,2.904,2008,3.9,2625,3.623,2968,3.623,2969,3.623,3051,3.196,3410,3.623,3678,3.386,3687,4.74,3690,4.74,3691,3.386,3692,3.623,3693,3.94,3694,3.94,3695,3.94,3696,3.94,3697,3.94,3698,3.94,3699,3.94,3700,3.94,3701,3.94,3710,3.94,3712,3.94,3715,3.94,3716,3.386,3717,3.94,3718,6.364,3725,3.94,3728,3.94,3730,3.94,3733,3.623,3734,3.94,3735,3.386,3736,5.071,3737,3.94,3738,3.386,3739,3.386,3740,3.623,3741,3.623,3742,3.94,3743,3.94,3744,3.94,3745,3.94,3746,3.94,3747,5.516,3748,3.94,3749,3.94,3750,3.94,3751,3.623,3752,3.94,3753,3.94,3754,3.94,3755,3.94,3756,3.94,3757,5.516,3758,5.516,3759,3.94,3760,5.516,3761,3.94,3762,3.94,3763,3.94,3764,3.94,3765,5.516,3766,3.94,3767,3.94]],["title/components/TaskListPage.html",[0,0.226,231,0.989]],["body/components/TaskListPage.html",[0,0.229,1,0.486,2,0.806,3,0.043,4,0.036,5,0.478,6,0.528,7,0.52,8,0.52,9,0.033,15,0.432,16,1.691,17,1.896,18,0.455,19,1.196,20,0.462,21,0.792,23,0.792,25,0.115,26,0.354,27,1.321,30,4.518,32,0.469,37,0.574,44,0.898,46,0.89,47,0.007,48,0.605,49,0.362,50,0.715,52,0.808,53,1.012,60,1.384,61,1.185,62,1.49,65,1.87,68,2.572,71,0.435,73,0.226,74,0.746,77,0.729,81,1.282,82,1.535,83,0.636,85,0.04,87,1.059,88,1.504,89,2.716,90,0.06,91,1.326,93,1.258,106,1.1,109,2.643,110,1.887,111,1.362,112,1.173,113,2.144,114,1.957,115,0.52,116,0.819,117,1.39,118,0.432,119,1.58,120,0.52,121,1.072,122,0.486,123,0.502,124,0.494,125,0.52,126,0.486,127,0.52,128,0.494,129,0.502,130,0.52,131,0.502,132,0.52,133,0.502,134,0.52,135,0.486,136,0.502,137,0.52,138,0.502,139,0.52,140,0.511,141,0.486,142,1.326,143,1.098,144,0.847,145,0.486,146,0.847,147,0.478,148,1.709,149,0.486,150,1.041,151,0.52,152,0.502,153,0.847,154,0.486,155,1.371,156,0.486,157,0.486,158,0.502,159,0.52,160,0.486,161,0.52,162,0.502,163,0.455,164,1.003,165,0.502,166,0.52,167,0.494,168,0.792,169,0.52,170,0.502,171,0.52,172,0.502,173,1.39,174,0.52,175,0.494,176,0.52,177,0.494,178,0.52,179,0.486,180,0.502,181,0.494,182,1.006,183,0.52,184,0.486,185,0.52,186,0.494,187,0.494,188,0.52,189,0.494,190,1.072,191,0.47,192,0.52,193,0.502,194,0.847,195,0.52,196,0.502,197,0.52,198,0.502,199,0.52,200,0.486,201,0.494,202,0.486,203,0.52,204,0.486,205,0.511,206,0.766,207,0.486,208,0.486,209,0.502,210,0.52,211,0.486,212,1.318,213,0.478,214,0.52,215,0.486,216,0.494,217,0.486,218,0.486,219,0.52,220,0.502,221,0.52,222,0.847,223,0.502,224,0.52,225,0.502,226,0.52,227,0.494,228,0.52,229,0.779,230,1.705,231,1.157,232,0.502,233,0.52,234,0.502,235,0.52,236,0.779,237,1.055,238,0.847,239,0.486,240,0.511,241,0.418,242,0.47,243,0.494,244,0.511,245,0.494,246,0.52,247,0.494,248,0.52,249,0.486,250,0.52,251,0.494,252,0.511,253,0.52,254,0.002,255,0.002,260,2.548,275,1.242,282,0.804,293,1.152,296,1.28,308,0.34,326,1.993,346,1.367,361,2.643,363,1.173,397,1.336,398,1.919,399,2.134,431,0.733,532,5.387,533,5.858,534,5.387,535,5.387,536,4.318,545,1.535,546,3.212,547,4.056,548,4.765,549,3.3,550,3.579,551,4.204,558,3.953,563,1.417,589,2.229,590,1.535,591,1.473,592,1.28,593,1.535,594,1.79,595,1.01,596,1.418,597,0.966,598,1.01,603,1.535,609,1.322,610,2.229,611,1.79,612,2.083,615,2.918,619,2.083,621,2.083,622,1.915,652,2.918,657,1.535,671,1.79,672,1.79,673,1.417,674,1.915,676,3.04,682,3.953,683,2.918,684,2.229,685,1.838,686,1.653,687,2.689,691,2.308,692,1.206,693,2.024,696,1.417,697,2.929,698,3.159,700,2.083,701,1.913,702,1.647,703,1.915,705,1.535,706,2.185,707,3.316,708,1.915,709,2.185,713,1.142,715,1.535,717,1.418,718,1.447,719,1.832,720,0.869,721,1.173,724,1.39,727,1.685,728,1.647,730,2.929,731,2.405,736,3.493,742,0.869,746,1.417,747,1.216,748,1.99,749,2.711,750,3.507,751,1.173,752,1.206,753,1.059,754,1.473,755,1.367,756,1.79,760,4.023,766,2.918,767,3.396,771,2.085,775,2.918,782,1.322,783,1.915,784,1.606,785,2.401,786,2.083,788,2.083,789,4.555,790,1.535,792,2.083,793,4.3,794,1.79,795,1.79,796,1.915,797,1.69,798,1.69,799,2.083,801,3.396,803,1.322,804,1.993,805,2.025,812,1.173,814,3.122,817,1.322,818,1.322,824,2.619,825,1.206,831,3.396,832,1.69,886,1.242,894,2.619,943,1.367,954,1.367,990,1.28,1450,2.729,1480,3.953,1513,2.619,1829,2.918,1848,4.026,1854,1.69,1855,1.915,2007,1.69,2246,3.695,2247,1.79,2422,5.012,2431,1.915,2629,2.083,2630,2.083,2631,2.083,2632,1.915,2951,1.915,2952,3.953,2953,3.122,2959,2.083,3078,1.79,3114,2.083,3411,1.915,3680,1.915,3741,1.915,3751,1.915,3775,9.118,3776,7.47,3777,4.825,3778,4.825,3779,4.3,3780,4.825,3781,5.566,3782,3.811,3783,3.811,3784,3.811,3785,3.811,3786,5.566,3787,3.811,3788,3.396,3789,2.337,3790,3.811,3791,2.337,3792,4.825,3793,3.811,3794,2.337,3795,3.811,3796,2.337,3797,3.811,3798,2.337,3799,3.811,3800,2.337,3801,2.337,3802,3.811,3803,2.337,3804,2.337,3805,2.337,3806,2.337,3807,2.337,3808,2.083,3809,2.337,3810,2.337,3811,2.337,3812,2.337,3813,2.337,3814,2.337,3815,2.337,3816,2.337,3817,2.083,3818,2.337,3819,2.337,3820,2.337,3821,2.337,3822,2.337,3823,3.811,3824,3.811,3825,2.337,3826,2.337,3827,2.337,3828,2.337,3829,2.337,3830,3.811,3831,2.337,3832,2.337,3833,2.337,3834,2.337,3835,2.337,3836,2.337,3837,2.337,3838,2.337,3839,2.337,3840,2.337,3841,3.811,3842,3.811,3843,3.811,3844,2.337,3845,2.337,3846,3.811,3847,2.337]],["title/pipes/TaskPriorityIconPipe.html",[1764,2.104,3848,3.643]],["body/pipes/TaskPriorityIconPipe.html",[3,0.13,4,0.11,9,0.1,13,2.058,15,1.304,32,0.869,44,0.698,46,0.869,47,0.007,48,0.673,49,0.3,50,0.698,52,0.789,61,1.261,71,0.346,73,0.683,85,0.12,90,0.181,106,1.497,254,0.005,255,0.005,702,3.048,1764,3.705,1826,3.989,1827,5.172,3508,4.444,3512,5.758,3514,5.758,3716,6.415,3848,6.415,3849,6.415,3850,6.286,3851,8.378,3852,7.054,3853,5.779,3854,7.054,3855,5.779,3856,7.054,3857,5.779,3858,7.054,3859,5.779,3860,7.054,3861,5.779,3862,7.054]],["title/pipes/TaskPriorityPipe.html",[1764,2.104,3863,3.643]],["body/pipes/TaskPriorityPipe.html",[3,0.13,4,0.11,9,0.1,13,2.064,15,1.308,32,0.871,44,0.7,46,0.871,47,0.007,48,0.674,49,0.301,50,0.7,52,0.791,61,1.263,71,0.347,73,0.685,85,0.12,90,0.182,106,1.498,254,0.005,255,0.005,702,3.057,1764,3.712,1826,4.001,1827,5.176,3508,4.457,3512,5.768,3514,5.768,3735,6.426,3849,6.426,3853,5.796,3855,5.796,3857,5.796,3859,5.796,3861,5.796,3863,6.426,3864,7.075,3865,7.075,3866,7.075,3867,7.075,3868,7.075,3869,7.075,3870,7.075]],["title/injectables/TaskService.html",[322,1.77,547,2.783]],["body/injectables/TaskService.html",[3,0.046,4,0.039,9,0.035,20,1.706,25,0.123,26,0.373,27,1.344,32,0.495,37,0.871,44,0.823,46,0.989,47,0.007,48,0.605,49,0.342,50,0.795,52,1.01,60,0.887,61,0.376,62,1.689,68,3.24,71,0.427,73,0.242,81,1.371,83,0.68,85,0.043,88,1.939,89,3.818,90,0.064,91,1.464,93,1.308,106,1.471,109,2.765,136,1.594,142,1.502,143,1.516,150,1.412,155,0.795,182,1.217,208,1.67,229,1.032,230,1.788,254,0.003,255,0.003,258,1.876,260,0.968,261,1.159,266,1.806,268,1.641,275,3.94,280,1.913,293,1.526,296,3.17,312,1.806,313,1.717,314,3.552,322,1.496,323,4.192,324,1.289,333,4.193,337,2.764,346,1.461,373,1.289,374,1.22,494,1.515,517,2.987,547,2.353,549,3.393,550,3.679,551,4.322,563,3.061,589,2.353,590,1.641,591,1.574,592,1.368,593,1.641,594,1.913,602,3.65,603,1.641,606,1.806,650,3.336,655,3.584,657,3.801,658,2.047,659,2.047,665,2.047,671,1.913,672,3.08,673,3.061,683,3.08,684,4.697,747,2.912,771,2.501,782,1.413,783,2.047,785,2.534,789,4.822,790,1.641,797,1.806,798,1.806,1002,3.797,1031,1.913,1085,2.806,1086,4.183,1144,2.534,1148,4.495,1211,4.031,1238,1.574,1269,2.764,1289,1.806,1310,1.574,1327,3.08,1384,2.534,1414,2.353,1423,6.074,1450,3.273,1477,3.584,1506,2.907,1654,3.584,1736,6.009,1764,3.152,1848,3.316,1854,1.806,1857,1.913,1860,2.226,1958,1.641,2007,5.914,2613,3.295,2615,4.136,2931,3.295,2933,2.907,3107,2.226,3429,5.153,3445,2.047,3556,3.584,3558,7.829,3559,5.84,3565,3.584,3567,6.607,3568,3.584,3685,5.677,3871,2.498,3872,7.856,3873,4.022,3874,4.022,3875,5.787,3876,4.022,3877,4.022,3878,4.022,3879,3.584,3880,4.022,3881,2.498,3882,7.856,3883,5.049,3884,4.022,3885,4.022,3886,2.498,3887,2.498,3888,2.498,3889,4.022,3890,2.498,3891,7.414,3892,2.498,3893,2.498,3894,4.022,3895,5.787,3896,2.498,3897,4.022,3898,2.498,3899,4.022,3900,2.498,3901,4.022,3902,2.498,3903,2.498,3904,2.226,3905,2.498,3906,2.498,3907,5.049,3908,2.498,3909,4.022,3910,2.498,3911,2.498,3912,2.498,3913,2.498,3914,2.498,3915,2.498,3916,2.498,3917,2.498,3918,6.344,3919,4.022,3920,4.022,3921,5.787,3922,5.787,3923,4.022,3924,5.049,3925,4.022,3926,2.498,3927,2.498,3928,2.498,3929,2.498,3930,2.498,3931,2.226,3932,2.498,3933,2.498,3934,2.498,3935,2.498,3936,4.022,3937,2.498,3938,2.498,3939,2.498,3940,4.022,3941,2.498,3942,2.498,3943,2.498,3944,2.498,3945,4.022,3946,2.498,3947,2.498,3948,2.498,3949,2.498,3950,4.022,3951,2.498,3952,2.498,3953,2.498,3954,2.498,3955,2.498,3956,2.498,3957,2.498,3958,2.498,3959,2.498,3960,4.022]],["title/pipes/TaskTypeIconPipe.html",[1764,2.104,3961,3.643]],["body/pipes/TaskTypeIconPipe.html",[3,0.129,4,0.109,9,0.1,13,2.047,15,1.297,32,0.864,44,0.694,46,0.864,47,0.007,48,0.672,49,0.38,50,0.694,52,0.784,61,1.256,71,0.344,73,0.679,85,0.119,90,0.18,106,1.495,230,1.254,254,0.005,255,0.005,702,3.03,789,4.418,1764,3.692,1826,3.966,1827,5.164,2008,4.418,2079,5.746,3508,4.418,3512,5.738,3514,5.738,3683,5.07,3684,5.37,3849,6.393,3850,6.249,3961,6.393,3962,8.349,3963,7.013,3964,6.249,3965,6.249,3966,6.249,3967,6.249,3968,6.249]],["title/pipes/TaskTypePipe.html",[1764,2.104,3969,3.643]],["body/pipes/TaskTypePipe.html",[3,0.106,4,0.09,9,0.082,13,1.677,15,1.063,32,0.708,44,0.807,46,1.004,47,0.007,48,0.744,49,0.421,50,0.807,52,0.912,60,1.297,61,1.394,71,0.4,73,0.557,85,0.098,90,0.148,106,1.444,230,1.319,254,0.005,255,0.005,308,1.25,346,3.361,398,2.858,650,2.274,701,4.828,702,3.523,789,3.62,1764,3.264,1826,3.25,1827,4.875,1895,4.4,1921,5.335,2008,3.62,2444,5.12,3508,3.62,3512,6.259,3514,5.072,3683,4.154,3736,4.708,3738,5.651,3739,6.588,3740,4.708,3849,6.588,3964,5.12,3965,5.12,3966,5.12,3967,5.12,3968,5.12,3969,5.651,3970,5.746,3971,5.746,3972,5.746,3973,5.746,3974,5.746,3975,5.746,3976,5.746,3977,5.746,3978,5.746,3979,5.746,3980,5.746,3981,5.746,3982,5.746,3983,5.746,3984,5.746,3985,5.746,3986,5.746,3987,5.746,3988,5.746,3989,5.746,3990,5.746,3991,5.746,3992,5.746,3993,5.746,3994,5.746,3995,5.746,3996,5.746,3997,5.746,3998,5.746]],["title/interfaces/TaskWithAdditionalData.html",[86,0.741,3685,3.643]],["body/interfaces/TaskWithAdditionalData.html",[3,0.095,4,0.081,9,0.073,25,0.254,26,0.639,47,0.007,48,0.519,49,0.396,50,0.818,62,1.481,71,0.254,77,1.318,81,0.957,85,0.117,86,1.341,87,3.742,88,1.816,89,3.413,143,1.478,163,1.852,173,1.638,182,1.131,230,1.768,254,0.005,255,0.005,256,1.652,258,1.811,278,2.925,308,1.349,333,4.382,563,3.137,649,6.501,650,2.047,661,5.277,662,4.239,747,2.747,790,3.398,824,4.736,972,3.121,1054,5.646,1065,5.646,1274,3.459,1327,3.962,1458,4.239,1680,4.982,1762,5.973,1857,3.962,1948,4.673,1949,4.673,1956,3.26,1957,3.26,2008,6.001,2038,3.962,2653,3.398,3051,3.74,3500,6.776,3502,5.277,3503,5.277,3504,3.962,3622,4.982,3677,4.611,3678,3.962,3679,4.611,3680,5.646,3681,4.611,3682,4.611,3683,3.74,3684,3.962,3685,5.277,3686,8.175,3687,6.326,3688,6.141,3689,5.646,3690,6.326,3691,6.326]],["title/modules/TasksModule.html",[401,1.965,3999,3.643]],["body/modules/TasksModule.html",[3,0.103,4,0.087,9,0.079,47,0.007,49,0.238,71,0.483,73,0.541,74,1.781,85,0.095,90,0.143,126,1.879,128,1.91,167,1.91,207,1.879,227,1.91,229,1.848,231,1.879,236,1.481,254,0.005,255,0.005,403,2.411,404,4.096,410,5.111,411,4.391,412,2.965,413,2.59,415,4.563,416,3.361,418,3.635,426,4.273,464,4.756,465,3.516,466,5.235,604,4.972,762,4.972,1219,4.972,1220,4.273,1221,4.972,1234,4.273,2174,4.972,2507,4.972,3507,6.919,3518,4.972,3716,4.273,3776,4.572,3848,6.919,3863,6.919,3961,6.919,3969,6.919,3999,7.693,4000,4.972,4001,4.972,4002,4.972,4003,6.532,4004,5.58,4005,5.58,4006,5.58,4007,5.58,4008,5.58,4009,5.58,4010,4.972,4011,4.972,4012,4.972,4013,5.58,4014,5.58,4015,8.51,4016,7.242,4017,5.58,4018,5.58,4019,5.58]],["title/modules/TasksRoutingModule.html",[401,1.965,4003,3.439]],["body/modules/TasksRoutingModule.html",[0,0.432,3,0.124,4,0.105,9,0.095,28,2.904,47,0.007,71,0.465,73,0.651,85,0.114,90,0.173,93,1.519,126,1.692,129,1.749,182,1.336,191,1.636,207,1.692,208,1.397,231,1.692,254,0.005,255,0.005,401,2.776,403,2.904,416,3.119,418,4.084,429,5.127,430,5.27,431,2.106,438,5.87,457,4.234,485,4.619,684,4.761,946,3.681,1234,5.146,1240,5.146,1245,5.146,1246,5.146,1251,5.989,3776,5.506,4003,5.883,4010,5.989,4011,5.989,4012,5.989,4020,6.721,4021,5.989,4022,6.721]],["title/interfaces/TemplateDecoratorConfig.html",[86,0.741,4023,3.898]],["body/interfaces/TemplateDecoratorConfig.html",[3,0.112,4,0.095,5,1.796,9,0.086,16,1.564,25,0.298,26,0.71,47,0.007,49,0.356,50,0.869,71,0.411,85,0.16,86,0.947,93,2.144,106,1.505,254,0.005,255,0.005,256,1.94,278,2.531,308,1.422,721,2.947,860,4.654,996,4.399,1798,4.177,1802,3.685,1803,3.438,1833,4.394,2132,5.497,3604,4.654,3621,4.98,3622,4.394,3652,4.98,4023,6.857,4024,5.416,4025,5.416,4026,7.827,4027,6.079,4028,5.416,4029,6.079,4030,6.079,4031,6.079,4032,6.079,4033,6.079,4034,7.649,4035,6.816,4036,7.458,4037,6.079,4038,6.816,4039,6.079,4040,6.816,4041,6.079,4042,6.079,4043,6.079,4044,6.079,4045,6.079,4046,5.416,4047,5.416,4048,6.079,4049,5.416,4050,6.079,4051,6.079,4052,5.416]],["title/classes/TestNgControl.html",[90,0.122,1089,3.439]],["body/classes/TestNgControl.html",[3,0.126,4,0.107,9,0.097,25,0.336,26,0.764,32,1.013,44,0.873,46,0.843,47,0.007,48,0.516,49,0.291,50,0.677,52,0.765,53,1.496,60,1.203,61,1.03,62,1.769,65,3.419,71,0.336,74,2.185,85,0.116,90,0.176,91,1.687,106,1.085,254,0.005,255,0.005,972,3.727,976,4.833,1007,4.964,1056,3.819,1066,2.957,1078,5.608,1085,3.027,1089,5.948,2212,7.5,4053,9.154,4054,6.845,4055,8.823,4056,8.229,4057,6.845,4058,8.229,4059,6.845,4060,8.229,4061,6.845,4062,8.229,4063,8.229]],["title/components/TextareaComponent.html",[0,0.226,232,1.023]],["body/components/TextareaComponent.html",[0,0.225,1,0.474,2,0.79,3,0.042,4,0.036,5,0.466,6,0.515,7,0.507,8,0.507,9,0.032,13,1.09,14,1.8,15,0.422,16,1.688,17,1.891,18,0.443,19,0.803,20,0.451,21,0.776,23,0.776,25,0.112,26,0.347,27,0.863,29,1.923,32,0.46,36,2.082,44,0.91,46,0.675,47,0.007,48,0.539,49,0.36,50,0.543,52,0.955,53,1.582,57,1.577,60,1.142,61,1.2,62,0.803,64,0.902,71,0.364,73,0.221,77,0.714,81,0.422,85,0.039,88,1.103,90,0.059,91,1.049,93,1.469,110,2.204,112,1.144,113,1.071,115,0.507,116,0.803,117,1.279,118,0.422,119,1.774,120,0.507,121,1.054,122,0.474,123,0.49,124,0.482,125,0.507,126,0.474,127,0.507,128,0.482,129,0.49,130,0.507,131,0.49,132,0.507,133,0.49,134,0.507,135,0.474,136,0.49,137,0.507,138,0.49,139,0.507,140,1.667,141,0.474,142,0.907,143,0.624,144,0.83,145,0.474,146,0.83,147,0.466,148,1.695,149,0.474,150,0.387,151,0.507,152,0.49,153,0.83,154,0.474,155,0.938,156,0.474,157,0.474,158,0.49,159,0.507,160,0.474,161,0.507,162,0.49,163,0.443,164,0.986,165,0.49,166,0.507,167,0.482,168,1.823,169,0.507,170,0.49,171,0.507,172,0.49,173,0.482,174,0.507,175,0.482,176,0.507,177,0.482,178,0.507,179,0.474,180,0.49,181,0.482,182,0.9,183,0.507,184,0.474,185,0.507,186,0.482,187,0.482,188,0.507,189,0.482,190,1.054,191,0.458,192,0.507,193,0.49,194,0.83,195,0.507,196,0.49,197,0.507,198,0.49,199,0.507,200,0.474,201,0.482,202,0.474,203,0.507,204,0.474,205,0.498,206,0.751,207,0.474,208,0.474,209,0.49,210,0.507,211,0.474,212,1.301,213,0.466,214,0.507,215,0.474,216,0.482,217,0.474,218,0.474,219,0.507,220,0.49,221,0.507,222,0.83,223,0.49,224,0.507,225,0.49,226,0.507,227,0.482,228,0.507,229,0.466,230,0.668,231,0.474,232,1.179,233,0.507,234,0.49,235,0.507,236,0.764,237,1.42,238,0.83,239,0.474,240,0.498,241,0.408,242,0.458,243,0.482,244,0.498,245,0.482,246,0.507,247,0.482,248,0.507,249,0.474,250,0.507,251,0.482,252,0.816,253,0.507,254,0.002,255,0.002,258,1.281,267,1.437,278,1.129,282,0.784,284,2.098,287,2.394,293,1.129,301,1.733,308,1.04,311,2.663,328,2.52,347,2.032,361,2.046,363,1.874,397,2.121,398,2.405,399,2.425,400,1.177,416,1.058,558,1.868,595,0.985,596,2.04,597,0.942,598,0.985,650,1.478,654,1.825,685,2.027,686,0.677,687,1.389,690,1.382,691,2.074,693,2.112,694,3.208,696,1.382,697,2.316,698,2.316,706,1.033,707,1.567,708,1.868,709,1.033,713,2.317,715,2.453,724,0.831,725,4.957,726,2.032,727,1.008,728,0.985,730,3.024,731,2.369,735,4.633,736,2.52,742,0.848,746,1.382,748,2.163,749,1.652,750,2.353,751,1.144,753,1.033,758,1.334,768,1.478,812,1.874,815,4.267,841,3.422,847,2.353,853,2.598,860,2.86,866,1.334,869,2.032,886,3.805,893,1.382,894,2.567,902,2.032,955,1.382,961,1.497,972,1.691,976,2.598,977,2.264,978,2.264,979,2.264,980,2.264,981,2.264,982,3.94,983,1.437,984,1.382,985,2.683,986,1.382,987,1.382,988,1.008,989,1.334,990,1.249,991,1.249,992,1.382,993,1.437,994,2.264,995,3.325,996,1.778,997,3.801,998,1.382,999,2.683,1000,1.334,1001,2.264,1002,1.733,1003,3.004,1004,1.29,1005,1.382,1006,2.264,1007,3.354,1008,1.382,1009,1.437,1010,1.382,1011,1.382,1012,1.382,1013,1.437,1014,2.264,1015,1.382,1016,1.382,1017,1.497,1018,1.437,1019,1.437,1020,1.437,1021,1.437,1022,1.868,1023,1.746,1024,1.497,1025,1.437,1027,2.567,1034,4.094,1085,1.652,1087,2.453,1090,2.032,1091,1.746,1092,1.746,1093,2.567,1099,6.249,1105,2.032,1302,1.927,1581,1.567,1628,3.429,1635,3.886,1639,5.621,1659,2.353,1826,1.29,1829,1.746,1897,3.06,1898,3.06,1901,3.429,1903,3.964,2250,1.334,2251,2.353,2252,2.032,2267,4.633,2268,5.391,2272,3.328,2274,3.328,2283,3.06,2290,2.032,2330,2.032,2331,1.868,2348,4.226,2405,2.032,2574,5.866,2661,2.567,2673,4.805,2732,3.429,2733,2.7,2773,3.886,2872,2.353,3078,2.86,3118,4.226,3183,2.86,3284,1.868,3298,1.648,3773,3.328,4064,2.28,4065,4.743,4066,3.735,4067,5.484,4068,5.484,4069,5.484,4070,5.484,4071,5.484,4072,5.484,4073,5.484,4074,5.484,4075,5.484,4076,5.484,4077,5.484,4078,4.743,4079,2.28,4080,2.28,4081,2.28,4082,2.28,4083,2.28,4084,2.28,4085,2.28,4086,2.28,4087,2.28,4088,2.28,4089,2.28,4090,2.28,4091,2.28,4092,2.28,4093,2.28,4094,2.28,4095,2.28,4096,2.28,4097,2.28,4098,2.28,4099,6.861,4100,2.28,4101,3.735,4102,2.28,4103,3.735,4104,2.28,4105,2.28,4106,3.735,4107,2.28,4108,2.28,4109,2.032,4110,4.743,4111,4.743,4112,4.743,4113,4.743,4114,4.743,4115,4.743,4116,4.743,4117,4.743,4118,4.743,4119,2.28,4120,2.28,4121,2.28,4122,2.28,4123,2.28,4124,2.28,4125,2.28,4126,3.735,4127,2.28,4128,2.28,4129,2.28,4130,2.28,4131,2.28,4132,2.28,4133,2.28,4134,2.28,4135,2.28,4136,2.28,4137,2.28,4138,4.743,4139,3.735,4140,3.735,4141,2.28,4142,2.28,4143,3.735,4144,2.28,4145,2.28,4146,2.28,4147,2.28,4148,2.28,4149,2.28,4150,2.28,4151,2.28,4152,2.28,4153,2.28,4154,2.28,4155,2.28,4156,2.28,4157,3.735,4158,2.28,4159,2.28,4160,2.28,4161,2.28,4162,2.28,4163,2.28,4164,7.412,4165,7.412,4166,2.28,4167,5.391,4168,2.28,4169,3.735,4170,2.28,4171,2.28,4172,2.28,4173,2.28,4174,2.28,4175,2.28,4176,2.28,4177,2.28,4178,2.28,4179,2.28,4180,2.28,4181,2.28,4182,3.735,4183,2.28,4184,2.28,4185,2.28,4186,2.28,4187,2.28,4188,2.28,4189,3.735,4190,2.032,4191,2.032]],["title/components/UpperNavigationComponent.html",[0,0.226,234,1.023]],["body/components/UpperNavigationComponent.html",[0,0.277,1,0.652,2,1.016,3,0.058,4,0.049,5,0.641,6,0.708,7,0.697,8,0.697,9,0.045,13,1.403,14,2.22,15,0.58,16,1.72,17,1.933,18,0.61,19,1.034,20,0.62,21,1,23,1,25,0.236,26,0.446,27,1.305,32,0.592,36,2.49,37,0.724,44,0.885,46,0.386,47,0.007,48,0.533,49,0.249,50,0.31,52,0.869,53,1.357,57,1.324,60,1.312,61,1.123,62,1.034,71,0.393,73,0.304,77,0.919,81,0.58,83,0.853,85,0.053,90,0.081,91,1.353,106,0.497,110,1.8,111,1.121,112,2.935,113,1.677,114,1.535,115,0.697,116,1.034,117,1.236,118,0.58,119,1.866,120,0.697,121,1.3,122,0.652,123,0.674,124,0.663,125,0.697,126,0.652,127,0.697,128,0.663,129,0.674,130,0.697,131,0.674,132,0.697,133,0.674,134,0.697,135,0.652,136,0.674,137,0.697,138,0.674,139,0.697,140,0.685,141,0.652,142,1.118,143,0.803,144,1.069,145,0.652,146,1.069,147,0.641,148,1.865,149,0.652,150,0.533,151,0.697,152,0.674,153,1.069,154,0.652,155,1.157,156,0.652,157,0.652,158,0.674,159,0.697,160,0.652,161,0.697,162,0.674,163,0.61,164,1.216,165,0.674,166,0.697,167,0.663,168,1,169,0.697,170,0.674,171,0.697,172,0.674,173,0.663,174,0.697,175,0.663,176,0.697,177,0.663,178,0.697,179,0.652,180,0.674,181,0.663,182,0.789,183,0.697,184,0.652,185,0.697,186,0.663,187,0.663,188,0.697,189,0.663,190,1.3,191,0.63,192,0.697,193,0.674,194,1.069,195,0.697,196,0.674,197,0.697,198,0.674,199,0.697,200,0.652,201,0.663,202,0.652,203,0.697,204,0.652,205,0.685,206,0.967,207,0.652,208,0.652,209,0.674,210,0.697,211,0.652,212,1.671,213,0.641,214,0.697,215,0.652,216,0.663,217,0.652,218,0.652,219,0.697,220,0.674,221,0.697,222,1.069,223,0.674,224,0.697,225,0.674,226,0.697,227,0.663,228,0.697,229,0.641,230,1.173,231,0.652,232,0.674,233,0.697,234,1.41,235,1.782,236,0.983,237,1.278,238,1.069,239,0.652,240,0.685,241,0.56,242,0.63,243,0.663,244,1.051,245,0.663,246,0.697,247,0.663,248,0.697,249,0.652,250,0.697,251,0.663,252,0.685,253,0.697,254,0.003,255,0.003,278,1.768,282,1.078,287,2.799,293,1.983,309,2.266,310,1.455,311,2.176,339,1.618,389,3.358,397,2.3,398,2.559,399,2.587,413,2.715,431,0.982,439,2.568,481,2.059,482,5.022,486,4.395,547,4.546,549,3.553,595,1.354,596,1.166,597,1.295,598,1.354,676,1.975,685,1.976,686,2.308,687,2.176,691,1.867,692,1.618,693,2.392,697,1.324,698,1.324,701,2.413,702,1.354,706,1.42,709,1.42,717,2.631,718,2.685,719,2.833,720,1.166,721,0.965,727,2.126,728,2.077,729,1.834,730,2.031,731,2.077,742,1.166,748,1.121,749,2.9,752,1.618,753,1.42,759,1.773,769,2.4,771,1.354,782,1.773,784,2.154,804,2.922,805,1.666,823,2.059,825,3.019,828,1.573,841,3.308,866,1.834,891,2.154,893,4.289,939,1.901,945,1.666,1035,2.568,1141,3.9,1272,3.304,1310,1.975,1330,2.266,1414,1.834,1539,1.901,1910,5.715,2066,2.4,2162,2.266,2214,2.568,2230,2.568,2251,1.975,2415,2.4,2526,8.04,2798,5.212,2804,2.568,2946,2.793,3072,2.568,3261,5.212,3342,6.651,3400,2.793,3401,4.284,3402,5.212,3403,4.284,3733,2.568,4192,9.023,4193,5.849,4194,7.465,4195,7.465,4196,5.849,4197,6.559,4198,6.559,4199,6.559,4200,6.559,4201,6.559,4202,3.135,4203,3.135,4204,3.135,4205,3.135,4206,3.135,4207,3.135,4208,3.135,4209,3.135,4210,3.135,4211,3.135,4212,3.135,4213,3.135,4214,3.135,4215,3.135,4216,4.808,4217,3.135,4218,3.135,4219,3.135,4220,3.135,4221,6.559,4222,3.135,4223,3.135,4224,3.135,4225,3.135,4226,4.808,4227,3.135,4228,5.849,4229,4.284]],["title/interfaces/User.html",[86,0.741,650,1.883]],["body/interfaces/User.html",[3,0.122,4,0.103,9,0.094,25,0.325,26,0.749,47,0.007,48,0.711,49,0.407,64,3.583,85,0.154,86,1.411,88,1.866,254,0.005,255,0.005,256,2.116,308,1.467,484,4.932,514,5.723,515,5.084,650,3.583,747,2.963,2261,6.199,2656,4.555,2657,5.075,2658,4.792,2659,4.555,2660,4.555]],["title/interfaces/UserData.html",[86,0.741,2660,3.27]],["body/interfaces/UserData.html",[3,0.125,4,0.105,9,0.096,25,0.332,26,0.758,47,0.007,48,0.714,49,0.397,64,2.674,85,0.155,86,1.421,88,1.877,254,0.005,255,0.005,256,2.157,308,1.463,484,4.339,514,5.749,515,5.112,650,3.472,747,2.979,2261,6.227,2656,4.645,2657,5.175,2658,4.885,2659,4.645,2660,5.612]],["title/injectables/UserService.html",[322,1.77,2422,3.439]],["body/injectables/UserService.html",[3,0.125,4,0.106,9,0.096,25,0.332,27,1.353,32,1.007,37,1.018,44,0.869,46,1.007,47,0.007,48,0.616,49,0.348,50,0.809,52,0.914,68,3.02,71,0.448,73,0.656,83,1.842,85,0.115,90,0.174,106,1.296,254,0.005,255,0.005,322,3.04,323,5.196,324,3.493,373,3.493,374,3.306,375,2.284,494,4.103,517,3.493,1002,3.793,2050,6.03,2422,5.908,2656,6.267,3418,6.03,4230,6.768,4231,9.12,4232,6.768,4233,6.768,4234,8.173,4235,6.768,4236,8.173,4237,6.768,4238,6.768]],["title/interfaces/UserSession.html",[86,0.741,3221,3.643]],["body/interfaces/UserSession.html",[3,0.127,4,0.108,9,0.098,25,0.339,26,0.768,47,0.007,49,0.416,85,0.118,86,1.077,88,1.917,254,0.005,255,0.005,256,2.207,278,2.882,308,1.411,502,5.019,747,2.932,1372,7.525,3221,6.338,4239,6.913,4240,9.185,4241,9.185,4242,9.185,4243,9.185,4244,9.185,4245,6.913,4246,6.913]],["title/classes/UserUtils.html",[90,0.122,2209,3.898]],["body/classes/UserUtils.html",[3,0.117,4,0.099,9,0.09,25,0.312,27,1.123,32,0.97,44,0.779,46,0.97,47,0.007,48,0.593,49,0.335,50,0.779,52,0.88,62,1.692,71,0.386,85,0.108,88,1.796,90,0.164,93,2.113,106,1.249,254,0.005,255,0.005,308,1.242,398,2.728,515,4.313,693,1.96,747,2.032,810,4.875,1066,2.751,1302,4.825,2209,6.451,2972,7.003,4167,7.016,4247,6.367,4248,7.873,4249,7.873,4250,7.873,4251,6.367,4252,7.873,4253,6.367,4254,6.367,4255,6.367,4256,8.93,4257,7.873,4258,7.873,4259,7.873,4260,7.873,4261,7.873,4262,7.873,4263,6.367,4264,8.548,4265,5.673,4266,6.367,4267,6.367,4268,6.367,4269,6.367,4270,5.673,4271,5.673,4272,6.367,4273,5.673,4274,6.367,4275,6.367,4276,6.367]],["title/interfaces/UserWithPrivileges.html",[86,0.741,2658,3.439]],["body/interfaces/UserWithPrivileges.html",[3,0.128,4,0.109,9,0.099,25,0.342,26,0.771,47,0.006,48,0.67,49,0.354,64,2.755,85,0.157,86,1.435,88,1.892,254,0.005,255,0.005,256,2.222,308,1.448,484,4.417,514,5.389,515,4.554,650,3.85,747,2.654,2261,5.837,2656,4.785,2657,5.331,2658,6.01,2659,6.327,2660,4.785]],["title/classes/Utils.html",[90,0.122,2155,3.898]],["body/classes/Utils.html",[3,0.093,4,0.079,9,0.072,25,0.419,26,0.76,27,1.168,32,0.944,44,0.81,46,1.009,47,0.007,48,0.617,49,0.349,50,0.87,52,1.021,60,0.889,61,0.762,85,0.086,88,1.541,90,0.174,93,1.144,106,1.466,119,1.106,254,0.004,255,0.004,258,1.996,275,4.851,278,2.053,287,3.24,293,2.317,306,5.199,308,1.441,314,3.554,693,2.521,714,5.92,742,1.882,754,5.54,804,2.805,855,6.05,996,3.232,1066,2.187,1148,4.117,1302,4.899,1352,5.563,1486,3.323,1641,5.563,1646,8.135,1676,8.003,1833,3.658,2035,6.05,2090,6.828,2119,7.204,2155,5.563,3177,6.05,4046,4.509,4265,4.509,4277,5.061,4278,5.061,4279,5.061,4280,4.146,4281,5.061,4282,6.79,4283,6.79,4284,6.79,4285,5.061,4286,6.79,4287,5.061,4288,8.793,4289,6.79,4290,8.541,4291,6.79,4292,8.541,4293,5.061,4294,6.79,4295,6.79,4296,6.79,4297,6.79,4298,5.061,4299,6.79,4300,6.79,4301,6.79,4302,8.189,4303,7.663,4304,6.79,4305,8.189,4306,5.061,4307,5.061,4308,5.061,4309,5.061,4310,6.79,4311,5.061,4312,5.061]],["title/interfaces/ValidationError.html",[86,0.741,1027,3.27]],["body/interfaces/ValidationError.html",[3,0.129,4,0.109,9,0.099,25,0.343,26,0.773,29,2.452,47,0.007,49,0.415,64,3.298,85,0.119,86,1.299,254,0.005,255,0.005,256,2.232,258,1.634,261,4.436,301,3.246,302,5.354,308,1.388,988,3.686,1027,5.728,1030,4.861,1058,6.382,1060,6.382,1061,5.729,1111,5.729,4313,6.993,4314,6.993,4315,6.231,4316,6.993,4317,6.993,4318,6.829,4319,6.829,4320,8.335,4321,8.335,4322,8.335]],["title/pipes/ValidationErrorPipe.html",[1764,2.104,2535,3.898]],["body/pipes/ValidationErrorPipe.html",[3,0.127,4,0.107,9,0.098,13,2.009,15,1.273,32,0.848,44,0.681,46,0.848,47,0.007,48,0.666,49,0.293,50,0.681,52,0.923,61,1.38,71,0.338,73,0.667,85,0.117,90,0.177,106,1.092,254,0.005,255,0.005,258,1.929,261,3.832,308,1.199,314,2.724,702,3.822,1027,5.674,1030,4.261,1061,6.764,1085,3.044,1764,4.056,2535,6.764,2537,7.357,3508,4.337,3512,5.674,3514,5.674,4315,8.172,4318,6.764,4319,6.764,4323,8.257,4324,6.883,4325,6.883,4326,8.257,4327,6.883]],["title/directives/ViewContainerDirective.html",[118,0.88,251,1.006]],["body/directives/ViewContainerDirective.html",[3,0.133,4,0.112,9,0.102,15,1.33,16,1.464,25,0.353,26,0.786,27,1.209,37,1.082,44,0.838,46,0.886,47,0.006,48,0.542,49,0.361,50,0.711,71,0.353,73,0.697,85,0.122,90,0.185,118,1.567,237,1.852,242,1.446,251,1.791,252,1.852,254,0.006,255,0.006,1318,7.534,1883,4.942,4328,9.01,4329,7.191,4330,7.191,4331,7.191,4332,7.191]],["title/components/ViewOptionsComponent.html",[0,0.226,236,0.973]],["body/components/ViewOptionsComponent.html",[0,0.317,1,0.816,2,1.202,3,0.072,4,0.061,5,0.803,6,0.887,7,0.873,8,0.873,9,0.056,15,0.726,16,1.737,17,1.951,18,0.764,19,1.223,20,0.776,21,1.182,23,1.182,25,0.193,26,0.528,27,1.158,37,0.591,44,0.828,46,0.484,47,0.007,48,0.611,49,0.331,50,0.388,60,1,61,0.856,71,0.36,73,0.38,77,1.088,81,0.726,85,0.067,87,3.525,88,1.474,89,3.215,90,0.101,93,0.887,109,4.016,110,1.751,112,4.072,113,1.631,114,1.253,115,0.873,116,1.223,117,1.414,118,0.726,119,1.939,120,0.873,121,1.486,122,0.816,123,0.844,124,0.83,125,0.873,126,0.816,127,0.873,128,0.83,129,0.844,130,0.873,131,0.844,132,0.873,133,0.844,134,0.873,135,0.816,136,0.844,137,0.873,138,0.844,139,0.873,140,0.858,141,0.816,142,1.279,143,1.459,144,1.264,145,0.816,146,1.264,147,0.803,148,1.972,149,0.816,150,0.667,151,0.873,152,0.844,153,1.264,154,0.816,155,1.322,156,0.816,157,0.816,158,0.844,159,0.873,160,0.816,161,0.873,162,0.844,163,0.764,164,1.39,165,0.844,166,0.873,167,0.83,168,1.618,169,0.873,170,0.844,171,0.873,172,0.844,173,0.83,174,0.873,175,0.83,176,0.873,177,0.83,178,0.873,179,0.816,180,0.844,181,0.83,182,0.934,183,0.873,184,0.816,185,0.873,186,0.83,187,0.83,188,0.873,189,0.83,190,1.486,191,0.79,192,0.873,193,0.844,194,1.264,195,0.873,196,0.844,197,0.873,198,0.844,199,0.873,200,0.816,201,0.83,202,0.816,203,0.873,204,0.816,205,0.858,206,1.144,207,0.816,208,0.816,209,0.844,210,0.873,211,0.816,212,1.673,213,0.803,214,0.873,215,0.816,216,0.83,217,0.816,218,0.816,219,0.873,220,0.844,221,0.873,222,1.264,223,0.844,224,0.873,225,0.844,226,0.873,227,0.83,228,0.873,229,0.803,230,1.017,231,0.816,232,0.844,233,0.873,234,0.844,235,0.873,236,1.591,237,1.939,238,1.264,239,0.816,240,0.858,241,0.702,242,0.79,243,0.83,244,0.858,245,0.83,246,0.873,247,0.83,248,0.873,249,0.816,250,0.873,251,0.83,252,0.858,253,0.873,254,0.004,255,0.004,260,3.243,282,1.35,308,0.826,311,2.487,339,2.935,375,1.325,397,1.377,398,2.589,400,2.026,431,1.231,545,2.578,546,3.964,592,2.151,595,1.696,596,1.46,597,1.622,598,1.696,609,2.22,610,2.297,685,1.864,686,1.986,687,1.46,691,2.135,697,1.658,698,1.658,717,2.116,718,2.159,719,2.159,721,1.209,724,2.074,727,1.736,728,1.696,730,2.402,731,2.457,748,1.404,749,2.515,753,1.778,755,2.297,768,2.25,804,2.763,805,3.022,811,2.474,825,2.026,835,6.533,858,2.578,886,2.086,893,2.381,894,2.698,943,2.297,950,2.297,1166,2.578,1220,6.563,1450,3.782,1478,4.355,2250,2.297,4333,8.571,4334,3.499,4335,5.959,4336,5.068,4337,5.959,4338,5.688,4339,3.499,4340,5.959,4341,3.926,4342,5.959,4343,3.926,4344,3.499,4345,3.499,4346,3.499]],["title/components/ViewOptionsComponent-1.html",[0,0.188,236,0.811,742,1.475]],["body/components/ViewOptionsComponent-1.html",[0,0.295,1,0.719,2,1.095,3,0.064,4,0.054,5,0.707,6,0.781,7,0.768,8,0.768,9,0.049,15,0.639,16,1.728,17,1.941,18,0.672,19,1.113,20,0.684,21,1.077,23,1.077,25,0.254,26,0.481,27,1.228,37,0.52,44,0.852,46,0.426,47,0.007,48,0.584,49,0.33,50,0.342,60,1.363,61,1.167,62,1.113,65,2.406,71,0.394,73,0.335,74,1.104,77,0.99,81,0.639,85,0.059,87,3.345,88,1.387,89,3.051,90,0.089,93,0.781,110,2.386,112,4.32,113,1.78,114,1.653,115,0.768,116,1.113,117,1.458,118,0.639,119,1.975,120,0.768,121,1.38,122,0.719,123,0.743,124,0.731,125,0.768,126,0.719,127,0.768,128,0.731,129,1.335,130,0.768,131,0.743,132,0.768,133,0.743,134,0.768,135,0.719,136,0.743,137,0.768,138,0.743,139,0.768,140,0.756,141,0.719,142,1.187,143,1.411,144,1.151,145,0.719,146,1.151,147,0.707,148,1.913,149,0.719,150,0.587,151,0.768,152,0.743,153,1.151,154,0.719,155,1.46,156,0.719,157,0.719,158,0.743,159,0.768,160,0.719,161,0.768,162,0.743,163,0.672,164,1.291,165,0.743,166,0.768,167,0.731,168,1.612,169,0.768,170,0.743,171,0.768,172,0.743,173,0.731,174,0.768,175,0.731,176,0.768,177,0.731,178,0.768,179,0.719,180,0.743,181,0.731,182,1.132,183,0.768,184,0.719,185,0.768,186,0.731,187,0.731,188,0.768,189,0.731,190,1.38,191,0.695,192,0.768,193,0.743,194,1.151,195,0.768,196,0.743,197,0.768,198,0.743,199,0.768,200,0.719,201,0.731,202,0.719,203,0.768,204,0.719,205,0.756,206,1.041,207,0.719,208,1.291,209,0.743,210,0.768,211,0.719,212,1.587,213,0.707,214,0.768,215,0.719,216,0.731,217,0.719,218,0.719,219,0.768,220,0.743,221,0.768,222,1.151,223,0.743,224,0.768,225,0.743,226,0.768,227,0.731,228,0.768,229,0.707,230,0.926,231,0.719,232,0.743,233,0.768,234,0.743,235,0.768,236,1.51,237,1.881,238,1.151,239,0.719,240,0.756,241,0.618,242,0.695,243,0.731,244,0.756,245,0.731,246,0.768,247,0.731,248,0.768,249,0.719,250,0.768,251,0.731,252,0.756,253,0.768,254,0.003,255,0.003,282,1.189,287,2.049,311,2.565,339,3.559,375,1.167,397,1.816,398,2.678,399,1.529,400,1.784,431,1.084,545,2.271,546,3.787,592,1.894,595,2.238,596,1.286,597,2.139,598,2.238,609,1.955,610,2.022,685,2.043,686,2.302,687,1.926,691,2.201,693,1.911,697,2.187,698,2.623,701,1.735,702,1.494,717,2.747,718,2.803,719,2.803,720,1.286,721,1.594,722,1.837,723,1.784,724,2.264,727,2.29,728,2.238,730,2.913,731,2.979,742,1.286,748,1.236,749,3.049,753,2.346,755,2.022,768,2.049,804,3.051,805,3.299,811,2.178,825,2.673,858,2.271,886,1.837,893,2.096,894,2.376,904,2.647,943,2.022,950,3.029,1166,2.271,1220,6.691,1353,2.647,1450,4.384,1478,3.965,1848,4.85,1854,2.499,2162,2.499,2250,3.029,2251,2.178,3779,5.533,4021,4.615,4229,3.081,4334,3.081,4335,5.533,4336,4.615,4337,5.533,4339,3.081,4340,5.533,4342,5.533,4344,3.081,4345,3.081,4346,3.081,4347,8.739,4348,7.752,4349,6.209,4350,5.179,4351,3.457,4352,3.457,4353,3.457,4354,3.457,4355,3.457,4356,3.081,4357,5.179,4358,3.457,4359,3.457]],["title/interfaces/Workspace.html",[77,0.91,86,0.741]],["body/interfaces/Workspace.html",[3,0.128,4,0.108,9,0.098,25,0.34,26,0.769,47,0.007,48,0.718,49,0.4,71,0.34,77,1.859,85,0.118,86,1.382,88,1.848,143,1.481,187,1.751,254,0.005,255,0.005,256,2.21,258,1.618,308,1.288,502,5.023,747,3.044,2659,4.758,4360,6.923,4361,8.285,4362,8.285,4363,8.285,4364,9.189,4365,6.923]],["title/injectables/WorkspaceService.html",[322,1.77,1141,2.388]],["body/injectables/WorkspaceService.html",[3,0.086,4,0.073,9,0.066,25,0.229,26,0.597,27,1.362,32,0.792,37,1.106,44,0.887,46,1.057,47,0.007,48,0.647,49,0.366,50,0.849,52,1.039,57,1.972,60,1.292,61,0.703,62,1.703,68,3.354,71,0.408,73,0.452,77,1.893,83,1.271,85,0.079,88,1.726,90,0.12,91,1.406,106,1.317,142,1.229,150,1.411,182,1.444,240,1.815,254,0.004,255,0.004,258,2.006,275,3.416,308,1.068,314,3.287,322,2.391,323,4.981,324,2.41,326,3.272,328,4.761,333,5.501,337,4.418,349,7.046,350,6.652,373,2.41,374,2.281,375,1.576,494,2.831,513,3.209,517,3.318,747,2.902,1002,3.676,1086,5.314,1141,3.226,1144,4.05,1269,3.209,1356,5.267,1384,4.05,1660,4.418,1736,4.647,1762,6.004,2246,3.575,2447,4.161,2615,5.267,2933,4.647,2963,3.826,3218,5.728,4280,5.267,4366,4.67,4367,5.728,4368,5.728,4369,6.429,4370,6.429,4371,4.67,4372,6.429,4373,4.67,4374,6.429,4375,4.67,4376,4.67,4377,6.429,4378,4.67,4379,6.429,4380,4.67,4381,4.67,4382,5.728,4383,4.67,4384,4.67,4385,4.67,4386,4.67,4387,4.67,4388,4.67,4389,4.67,4390,6.429,4391,4.67]],["title/components/WorkspacesListPage.html",[0,0.226,239,0.989]],["body/components/WorkspacesListPage.html",[0,0.35,1,0.715,2,1.091,3,0.063,4,0.054,5,1.266,6,0.777,7,0.765,8,0.765,9,0.049,13,1.506,14,2.35,15,0.636,16,1.728,17,1.939,18,1.204,19,1.109,20,1.457,21,1.073,23,1.073,25,0.169,26,0.479,27,1.104,32,0.635,36,2.611,37,1.035,44,0.817,46,0.847,47,0.007,48,0.648,49,0.314,50,0.766,52,0.824,53,1.34,60,1.088,61,0.518,62,1.109,68,2.535,71,0.414,73,0.333,77,1.871,81,0.636,83,0.936,85,0.059,90,0.088,91,1.315,110,1.059,115,0.765,116,1.109,117,1.309,118,0.636,119,1.503,120,0.765,121,1.376,122,0.715,123,1.331,124,0.727,125,0.765,126,0.715,127,0.765,128,0.727,129,0.739,130,0.765,131,0.739,132,0.765,133,0.739,134,0.765,135,0.715,136,0.739,137,0.765,138,0.739,139,0.765,140,0.752,141,0.715,142,1.184,143,0.862,144,1.147,145,0.715,146,1.147,147,0.703,148,1.911,149,0.715,150,1.252,151,0.765,152,0.739,153,1.147,154,0.715,155,1.7,156,0.715,157,0.715,158,0.739,159,0.765,160,0.715,161,0.765,162,0.739,163,0.669,164,1.287,165,0.739,166,0.765,167,0.727,168,1.073,169,0.765,170,0.739,171,0.765,172,0.739,173,0.727,174,0.765,175,0.727,176,0.765,177,0.727,178,0.765,179,0.715,180,0.739,181,0.727,182,1.411,183,0.765,184,0.715,185,0.765,186,0.727,187,0.727,188,0.765,189,0.727,190,1.376,191,0.692,192,0.765,193,0.739,194,1.147,195,0.765,196,0.739,197,0.765,198,0.739,199,0.765,200,0.715,201,0.727,202,0.715,203,0.765,204,0.715,205,0.752,206,1.037,207,0.715,208,0.715,209,0.739,210,0.765,211,0.715,212,1.584,213,0.703,214,0.765,215,0.715,216,0.727,217,0.715,218,0.715,219,0.765,220,0.739,221,0.765,222,1.147,223,0.739,224,0.765,225,0.739,226,0.765,227,0.727,228,0.765,229,0.703,230,0.922,231,0.715,232,0.739,233,0.765,234,0.739,235,0.765,236,1.055,237,1.353,238,1.147,239,1.43,240,2.059,241,1.56,242,0.692,243,0.727,244,0.752,245,0.727,246,0.765,247,0.727,248,0.765,249,0.715,250,0.765,251,0.727,252,0.752,253,0.765,254,0.003,255,0.003,258,1.607,268,3.388,282,1.183,310,2.395,314,2.916,326,3.409,337,3.546,363,2.589,389,3.714,431,1.078,536,5.081,549,3.928,550,4.141,595,1.486,596,1.28,597,1.421,598,1.486,685,1.574,692,1.775,701,2.589,748,1.23,953,3.251,990,2.826,1002,2.395,1140,2.086,1141,4.027,1146,3.388,1164,2.364,1165,2.167,1179,2.259,1202,3.065,1236,6.915,1373,3.73,1439,4.597,1504,3.95,1507,3.95,1521,2.364,1539,3.128,1559,4.597,2813,4.597,2814,4.597,2818,4.597,2933,3.73,2951,2.818,2952,5.072,2953,4.227,2960,3.065,2963,2.818,2964,3.065,2970,4.597,2971,4.597,3077,4.227,3788,3.065,3808,3.065,3817,3.065,3879,4.597,3931,4.597,4392,8.44,4393,6.878,4394,5.16,4395,3.44,4396,5.16,4397,5.16,4398,3.44,4399,3.44,4400,5.16,4401,3.44,4402,5.16,4403,5.16,4404,3.44,4405,3.44,4406,3.44]],["title/dependencies.html",[404,3.239,4407,3.532]],["body/dependencies.html",[47,0.007,73,0.637,74,2.099,83,1.789,254,0.005,255,0.005,398,1.918,404,3.718,420,6.149,431,2.061,465,4.142,595,3.746,596,2.445,597,3.73,598,3.746,785,5.059,1104,5.386,1452,5.386,1554,5.858,1581,4.518,1605,6.149,1628,4.753,1630,5.386,1802,3.986,1803,3.718,1986,6.149,2153,5.858,2154,5.858,2498,5.858,2499,5.858,2661,4.518,2673,4.142,3313,5.034,4109,5.858,4356,5.858,4408,6.575,4409,9.63,4410,6.575,4411,8.03,4412,6.575,4413,6.575,4414,6.575,4415,6.575,4416,6.575,4417,6.575,4418,9.03,4419,6.575,4420,6.575,4421,6.575,4422,6.575,4423,6.575,4424,6.575,4425,6.575,4426,6.575,4427,6.575,4428,6.575,4429,6.575,4430,6.575,4431,6.575,4432,6.575,4433,6.575,4434,6.575,4435,6.575,4436,6.575,4437,6.575,4438,6.575,4439,6.575,4440,6.575,4441,6.575]],["title/miscellaneous/enumerations.html",[4442,2.724,4443,5.103]],["body/miscellaneous/enumerations.html",[20,1.552,25,0.311,47,0.007,49,0.27,60,1.379,61,1.511,142,1.501,155,1.552,230,1.132,254,0.005,255,0.005,257,5.189,266,5.673,267,4.944,275,4.17,278,2.373,296,3.469,301,3.642,302,4.849,303,5.189,311,2.919,603,5.154,742,2.356,789,3.99,823,5.154,886,4.17,1289,5.673,1406,5.643,1454,6.993,1683,5.189,2008,4.944,2181,6.009,2732,4.578,2733,4.578,3000,5.643,3003,6.993,3022,5.643,3023,5.643,3165,5.189,3166,6.43,3179,6.993,3180,5.643,3181,5.643,3183,4.849,3683,4.578,3684,4.849,3692,5.189,3735,6.009,3738,6.009,3739,6.009,3853,6.43,3855,6.43,3857,6.43,3859,6.43,3861,6.43,4442,4.353,4443,5.643,4444,6.333,4445,7.848,4446,6.333,4447,7.848,4448,6.333,4449,6.333,4450,5.643,4451,8.528,4452,8.528,4453,6.333,4454,7.848,4455,6.333,4456,7.848]],["title/miscellaneous/functions.html",[1672,4.385,4442,2.724]],["body/miscellaneous/functions.html",[0,0.325,5,1.896,16,1.184,17,0.998,21,1.067,23,1.067,25,0.252,46,1.19,47,0.007,48,0.728,49,0.408,50,0.956,52,0.959,61,0.772,64,2.03,66,3.581,85,0.087,88,1.551,90,0.176,118,0.949,147,1.049,241,1.578,254,0.004,255,0.004,261,3.581,308,1.409,326,3.402,346,3.001,365,3.928,484,3.641,721,2.109,754,5.406,856,5.247,915,6.321,927,5.614,988,2.269,1115,7.03,1147,5.067,1160,4.5,1660,3.526,1672,3.928,1751,6.321,1752,4.571,1753,6.106,1756,4.571,1804,5.614,1848,3.369,2129,4.571,2132,5.797,2208,5.614,2574,6.321,2576,6.106,2581,4.571,2755,5.614,3014,6.875,3398,5.614,3604,5.247,3627,5.614,3904,6.106,4023,5.614,4024,4.571,4025,8.031,4026,6.106,4028,4.571,4035,4.571,4036,6.106,4038,4.571,4040,4.571,4047,4.571,4049,4.571,4382,6.106,4442,3.526,4457,5.13,4458,6.852,4459,6.852,4460,8.828,4461,6.852,4462,6.852,4463,5.13,4464,6.852,4465,6.852,4466,7.716,4467,5.13,4468,5.13,4469,6.852,4470,6.852,4471,7.716,4472,6.852,4473,6.852,4474,5.13,4475,6.852,4476,5.13,4477,5.13,4478,6.852,4479,5.13,4480,5.13,4481,5.13,4482,5.13,4483,6.852,4484,5.13,4485,5.13,4486,5.13,4487,5.13,4488,5.13,4489,5.13,4490,5.13,4491,5.13,4492,5.13,4493,8.58,4494,5.13,4495,5.13,4496,5.13,4497,5.13,4498,5.13,4499,5.13,4500,5.13,4501,5.13,4502,5.13,4503,5.13,4504,5.13,4505,5.13,4506,6.106,4507,5.13,4508,5.13,4509,5.13,4510,5.13,4511,5.13,4512,5.13,4513,5.13,4514,5.13,4515,5.13,4516,5.13,4517,5.13,4518,5.13]],["title/index.html",[25,0.195,1366,2.724,1517,2.724]],["body/index.html",[4,0.101,17,1.675,47,0.006,136,1.392,143,1.082,163,1.26,206,1.303,230,1.158,254,0.005,255,0.005,363,3.251,394,7.091,403,2.799,447,4.683,454,5.772,663,5.752,684,3.789,714,4.683,828,4.509,1094,4.96,1273,6.093,1366,4.452,1402,4.683,1517,4.452,1691,7.36,1983,7.188,2037,4.96,2232,4.96,2653,5.226,3063,7.675,3262,5.772,3263,7.091,3268,5.772,3630,5.307,3689,5.307,4052,5.772,4367,7.091,4519,6.478,4520,6.478,4521,6.478,4522,6.478,4523,6.478,4524,6.478,4525,7.958,4526,8.614,4527,6.478,4528,8.984,4529,6.478,4530,6.478,4531,6.478,4532,5.772,4533,6.478,4534,6.478,4535,6.478,4536,8.623,4537,6.478,4538,6.478,4539,6.478,4540,6.478,4541,5.307,4542,7.36,4543,6.478,4544,6.478,4545,6.478,4546,6.478,4547,5.307,4548,7.958,4549,7.958,4550,7.958,4551,8.614,4552,6.478,4553,6.478,4554,6.478,4555,6.478,4556,5.772,4557,6.879,4558,6.478,4559,6.478,4560,6.478,4561,6.478,4562,6.478,4563,6.478,4564,6.478,4565,6.478,4566,6.478,4567,6.478]],["title/license.html",[1366,2.724,1517,2.724,3040,3.248]],["body/license.html",[4,0.126,28,2.852,29,2.315,47,0.005,182,1.322,254,0.005,255,0.005,290,5.408,363,4.359,365,6.651,413,3.064,556,4.772,823,4.335,853,3.616,1148,4.002,1655,7.173,1696,5.882,2872,4.159,3040,5.408,3675,5.882,4557,5.055,4568,6.602,4569,6.602,4570,9.271,4571,6.602,4572,6.602,4573,6.602,4574,6.602,4575,6.602,4576,6.602,4577,6.602,4578,6.602,4579,6.602,4580,6.602,4581,8.05,4582,6.602,4583,6.602,4584,8.686,4585,8.686,4586,6.602,4587,8.05,4588,6.602,4589,8.05,4590,8.05,4591,6.602,4592,6.602,4593,6.602,4594,6.602,4595,8.05,4596,6.602,4597,8.05,4598,6.602,4599,8.05,4600,8.05,4601,8.686,4602,8.05,4603,6.602,4604,6.602,4605,6.602,4606,6.602,4607,6.602,4608,6.602,4609,6.602,4610,6.602,4611,6.602,4612,6.602,4613,6.602,4614,6.602,4615,6.602,4616,6.602,4617,6.602,4618,6.602,4619,6.602,4620,6.602,4621,5.882,4622,6.602,4623,6.602,4624,6.602,4625,6.602,4626,6.602,4627,6.602,4628,8.05,4629,6.602,4630,6.602,4631,6.602,4632,6.602,4633,6.602,4634,5.882,4635,6.602,4636,6.602,4637,6.602,4638,6.602,4639,6.602]],["title/modules.html",[403,2.814]],["body/modules.html",[47,0.005,254,0.005,255,0.005,402,5.409,403,3.052,409,5.107,410,3.995,458,5.409,462,5.107,597,4.029,1205,5.409,1210,5.107,1573,5.409,1576,5.107,1986,7.468,2061,8.691,2633,5.409,2636,5.107,3320,5.409,3324,5.107,3999,5.409,4003,5.107,4280,7.929,4640,10.007,4641,9.678]],["title/overview.html",[4642,5.802]],["body/overview.html",[1,1.568,2,1.037,47,0.007,124,1.884,126,1.568,128,1.595,135,1.568,141,1.568,145,1.568,147,1.542,149,1.568,154,1.568,156,1.568,157,1.568,160,1.568,167,1.595,175,1.595,177,1.595,179,1.568,181,1.595,184,1.568,189,1.595,200,1.568,202,1.568,204,1.568,207,1.568,211,1.568,213,1.542,215,1.568,217,1.568,218,1.568,227,1.595,229,1.542,231,1.568,236,1.542,239,1.568,242,0.987,254,0.004,255,0.004,256,1.566,324,2.532,402,7.178,403,2.12,404,3.761,405,4.372,406,4.372,407,4.372,408,4.372,409,5.453,410,5.04,411,4.032,412,2.607,413,2.277,430,2.775,458,7.442,459,4.372,460,4.372,461,4.372,462,5.453,742,1.825,1066,2.12,1205,7.634,1206,4.372,1207,4.372,1208,4.372,1209,4.372,1210,5.453,1211,4.266,1573,6.191,1574,4.372,1575,4.372,1576,5.453,2408,4.02,2633,6.191,2634,4.372,2635,4.372,2636,5.453,3183,3.757,3320,7.485,3321,4.372,3322,4.372,3323,4.372,3324,5.453,3507,5.775,3508,3.091,3848,5.775,3863,5.775,3961,5.775,3969,5.775,3999,7.617,4000,4.372,4001,4.372,4002,4.372,4003,5.453,4270,4.372,4642,4.372,4643,4.907,4644,4.907,4645,4.907,4646,4.907,4647,4.907,4648,4.907]],["title/properties.html",[26,0.531,4407,3.532]],["body/properties.html",[26,0.724,47,0.006,254,0.006,255,0.006,2561,6.955,4649,7.806]],["title/routes.html",[430,3.683]],["body/routes.html",[47,0.006,254,0.006,255,0.006,430,4.436]],["title/miscellaneous/typealiases.html",[4442,2.724,4650,5.727]],["body/miscellaneous/typealiases.html",[25,0.348,47,0.006,49,0.302,88,1.427,208,1.748,254,0.006,255,0.006,398,2.453,1450,4.755,1842,5.433,1843,6.323,1847,7.491,2132,5.521,2673,5.297,2684,5.813,2685,7.59,2697,6.888,2699,7.093,2702,6.696,2728,6.888,2729,6.888,2730,6.888,2731,6.077,3165,5.813,3166,6.888,3171,7.491,3416,5.813,3417,6.323,3592,5.813,4442,4.876,4450,6.323,4651,7.096,4652,7.096,4653,9.264,4654,8.96,4655,8.407,4656,7.096,4657,7.096,4658,7.096,4659,7.096,4660,7.096]],["title/additional-documentation/architecture.html",[241,0.709,1659,2.498,4661,3.532]],["body/additional-documentation/architecture.html",[0,0.42,2,1.871,9,0.138,17,1.006,18,1.34,28,3.348,47,0.005,48,0.39,49,0.22,57,3.49,61,0.779,90,0.133,118,1.528,142,0.99,143,0.864,187,1.094,242,1.661,254,0.005,255,0.005,256,2.473,267,3.26,275,2.749,297,4.239,301,4.421,326,2.138,327,4.239,401,3.413,403,3.57,430,2.926,650,2.047,685,1.315,702,2.236,722,4.702,723,2.67,847,3.26,853,2.834,988,3.427,1004,2.926,1007,2.67,1032,8.175,1053,4.239,1066,3.57,1075,4.611,1094,7.112,1111,6.348,1115,4.239,1402,4.982,1408,7.667,1629,3.962,1659,4.882,1671,4.611,1672,3.962,1680,5.973,1764,3.427,1827,2.834,2016,5.277,2037,7.407,2038,5.933,2408,5.646,2409,7.362,2872,3.26,3054,4.611,3116,6.141,3398,5.646,3508,5.205,4368,4.611,4506,7.362,4547,7.75,4556,4.611,4557,6.916,4621,6.904,4661,6.904,4662,5.174,4663,6.891,4664,8.175,4665,9.175,4666,5.174,4667,5.174,4668,8.683,4669,4.239,4670,5.174,4671,5.174,4672,5.174,4673,5.174,4674,5.174,4675,5.174,4676,5.174,4677,5.174,4678,8.262,4679,6.891,4680,5.174,4681,5.174,4682,5.174,4683,5.174,4684,5.174,4685,4.611,4686,7.667,4687,5.174,4688,9.032,4689,5.174,4690,5.174,4691,5.174,4692,5.174,4693,5.174,4694,5.174,4695,5.174,4696,5.174,4697,5.174,4698,6.891,4699,5.174,4700,6.348,4701,5.174,4702,7.749,4703,5.174,4704,5.174,4705,5.174,4706,5.174,4707,5.174,4708,5.174,4709,5.174,4710,5.174,4711,5.174,4712,5.174,4713,5.174,4714,5.174,4715,5.174]],["title/additional-documentation/localization.html",[216,0.838,241,0.709,1659,2.498]],["body/additional-documentation/localization.html",[9,0.12,17,1.725,47,0.006,60,1.097,62,1.672,86,0.973,117,1.32,143,1.043,155,1.235,182,1.025,216,1.32,254,0.005,255,0.005,301,2.898,311,2.322,363,3.133,714,4.513,811,3.933,886,4.133,988,3.747,1000,3.652,1094,5.956,1372,5.115,1402,5.623,1414,4.55,1459,5.346,1629,6.487,1803,4.399,1983,4.78,2119,5.115,2544,5.563,2653,4.1,2673,5.338,2702,4.513,2870,5.563,2871,5.563,2872,3.933,3005,5.563,3284,5.115,3298,6.725,3301,6.931,3303,6.931,3304,5.563,3305,6.931,3309,7.902,3312,5.563,3313,4.78,3559,5.115,4190,5.563,4271,5.563,4273,5.563,4318,5.115,4319,5.115,4532,6.931,4536,5.563,4541,5.115,4542,5.115,4634,5.563,4664,7.55,4668,5.563,4669,5.115,4685,5.563,4686,6.931,4700,5.115,4716,6.243,4717,6.243,4718,6.243,4719,6.243,4720,6.243,4721,7.778,4722,6.243,4723,6.243,4724,6.243,4725,6.243,4726,6.243,4727,6.243,4728,7.778,4729,6.243,4730,6.243,4731,6.243,4732,6.243,4733,6.243,4734,8.869,4735,6.243,4736,6.243,4737,7.778,4738,7.778,4739,7.778,4740,6.243,4741,7.778,4742,6.243,4743,8.869,4744,6.243,4745,7.778,4746,6.243,4747,6.243,4748,6.243,4749,6.243,4750,6.243,4751,6.243,4752,6.243,4753,6.243]],["title/additional-documentation/continuos-integration.html",[164,0.706,241,0.607,1659,2.141,4754,3.027]],["body/additional-documentation/continuos-integration.html",[9,0.102,47,0.006,142,1.377,163,1.4,164,1.497,241,1.287,254,0.006,255,0.006,363,3.614,366,5.9,374,3.518,830,5.57,856,6.494,1402,6.131,1680,5.206,1691,5.9,1950,4.949,2016,6.494,3529,6.417,4191,6.417,4541,5.9,4542,5.9,4547,6.948,4557,6.494,4669,7.386,4700,6.948,4754,6.417,4755,7.201,4756,8.481,4757,7.201,4758,7.201,4759,7.201,4760,8.481,4761,7.201,4762,7.201,4763,7.201,4764,7.201,4765,7.201,4766,7.201,4767,7.201,4768,7.201,4769,7.201,4770,7.201,4771,7.201,4772,7.201,4773,7.201,4774,7.201,4775,7.201]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["0",{"_index":693,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{}}}],["0.0.14",{"_index":4649,"title":{},"body":{"properties.html":{}}}],["0.01rem",{"_index":808,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0.1",{"_index":2254,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["0.1.43",{"_index":4433,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":4417,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":4441,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":4189,"title":{},"body":{"components/TextareaComponent.html":{}}}],["0.1s",{"_index":892,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.2",{"_index":741,"title":{},"body":{"components/BoardPage.html":{}}}],["0.25rem",{"_index":3463,"title":{},"body":{"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["0.2rem",{"_index":2290,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["0.2s",{"_index":752,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["0.33.0",{"_index":4434,"title":{},"body":{"dependencies.html":{}}}],["0.35rem",{"_index":3351,"title":{},"body":{"components/SettingsPage.html":{}}}],["0.4rem",{"_index":2288,"title":{},"body":{"components/InputComponent.html":{}}}],["0.4s",{"_index":2247,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["0.5",{"_index":750,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/MainViewComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["0.5rem",{"_index":713,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["0.5s",{"_index":829,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0.7",{"_index":905,"title":{},"body":{"components/CardComponent.html":{}}}],["0.75",{"_index":2105,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{}}}],["0.75em",{"_index":2299,"title":{},"body":{"components/InputComponent.html":{}}}],["0.75rem",{"_index":885,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["0.8125rem",{"_index":881,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.8rem",{"_index":2307,"title":{},"body":{"components/InputComponent.html":{}}}],["00b300",{"_index":3453,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["0a95d0",{"_index":821,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0px",{"_index":1291,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["0xffffffff",{"_index":2985,"title":{},"body":{"classes/Random.html":{}}}],["1",{"_index":742,"title":{"components/ViewOptionsComponent-1.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputComponent.html":{},"components/MainViewComponent.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":2992,"title":{},"body":{"classes/Random.html":{}}}],["1.0.2",{"_index":4438,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":4423,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":4416,"title":{},"body":{"dependencies.html":{}}}],["1.11.2",{"_index":4427,"title":{},"body":{"dependencies.html":{}}}],["1.22.17",{"_index":4565,"title":{},"body":{"index.html":{}}}],["1.25rem",{"_index":882,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1.2em",{"_index":4177,"title":{},"body":{"components/TextareaComponent.html":{}}}],["1.4em",{"_index":4175,"title":{},"body":{"components/TextareaComponent.html":{}}}],["1.5",{"_index":889,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1.5em",{"_index":2122,"title":{},"body":{"components/IconComponent.html":{}}}],["1.5rem",{"_index":957,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["1.6em",{"_index":4174,"title":{},"body":{"components/TextareaComponent.html":{}}}],["1.8em",{"_index":4173,"title":{},"body":{"components/TextareaComponent.html":{}}}],["10",{"_index":810,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SettingsPage.html":{},"classes/UserUtils.html":{}}}],["100",{"_index":114,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["1000",{"_index":3457,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["10000000",{"_index":4275,"title":{},"body":{"classes/UserUtils.html":{}}}],["100px",{"_index":3119,"title":{},"body":{"components/SchedulePage.html":{}}}],["100vh",{"_index":949,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["10px",{"_index":112,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["11.5.1",{"_index":4429,"title":{},"body":{"dependencies.html":{}}}],["113",{"_index":3982,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["123456789",{"_index":2981,"title":{},"body":{"classes/Random.html":{}}}],["1240px",{"_index":968,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["12px",{"_index":1035,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["13",{"_index":4645,"title":{},"body":{"overview.html":{}}}],["13.2.0",{"_index":4409,"title":{},"body":{"dependencies.html":{}}}],["13.2.5",{"_index":4567,"title":{},"body":{"index.html":{}}}],["13.3.0",{"_index":4411,"title":{},"body":{"dependencies.html":{}}}],["130px",{"_index":3115,"title":{},"body":{"components/SchedulePage.html":{}}}],["15",{"_index":4643,"title":{},"body":{"overview.html":{}}}],["150",{"_index":4358,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["152",{"_index":3977,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["15px",{"_index":904,"title":{},"body":{"components/CardComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{}}}],["16",{"_index":2997,"title":{},"body":{"classes/Random.html":{}}}],["16.13.0",{"_index":4564,"title":{},"body":{"index.html":{}}}],["16px",{"_index":831,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["16x16",{"_index":1615,"title":{},"body":{"classes/Emoji.html":{}}}],["16}px",{"_index":680,"title":{},"body":{"components/BoardPage.html":{}}}],["18",{"_index":4646,"title":{},"body":{"overview.html":{}}}],["18000",{"_index":2998,"title":{},"body":{"classes/Random.html":{}}}],["182",{"_index":3992,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["183",{"_index":3996,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["189",{"_index":3997,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["1em",{"_index":725,"title":{},"body":{"components/BoardPage.html":{},"components/MainViewComponent.html":{},"components/TextareaComponent.html":{}}}],["1px",{"_index":758,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TextareaComponent.html":{}}}],["1rem",{"_index":698,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/InputAssigneeComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["1s",{"_index":3461,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["2",{"_index":823,"title":{},"body":{"components/BoardTaskComponent.html":{},"classes/Enum.html":{},"components/InputComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/UpperNavigationComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["2.3.0",{"_index":4437,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":3844,"title":{},"body":{"components/TaskListPage.html":{}}}],["20",{"_index":3100,"title":{},"body":{"components/SchedulePage.html":{}}}],["200",{"_index":869,"title":{},"body":{"components/ButtonComponent.html":{},"components/TextareaComponent.html":{}}}],["200px",{"_index":4229,"title":{},"body":{"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["2022",{"_index":4571,"title":{},"body":{"license.html":{}}}],["204",{"_index":3981,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["20px",{"_index":945,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["219",{"_index":3978,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["222",{"_index":2652,"title":{},"body":{"components/MockPage.html":{}}}],["24px",{"_index":876,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"components/SnackbarComponent.html":{}}}],["25",{"_index":883,"title":{},"body":{"components/ButtonComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["250ms",{"_index":738,"title":{},"body":{"components/BoardPage.html":{}}}],["250px",{"_index":3411,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["255",{"_index":4259,"title":{},"body":{"classes/UserUtils.html":{}}}],["25px",{"_index":902,"title":{},"body":{"components/CardComponent.html":{},"components/TextareaComponent.html":{}}}],["28px",{"_index":1033,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["29px",{"_index":3846,"title":{},"body":{"components/TaskListPage.html":{}}}],["2ecc71",{"_index":756,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"pipes/StatusColorPipe.html":{},"components/TaskListPage.html":{}}}],["2em",{"_index":4172,"title":{},"body":{"components/TextareaComponent.html":{}}}],["2px",{"_index":894,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["2rem",{"_index":692,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["2s",{"_index":708,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["3",{"_index":1683,"title":{},"body":{"classes/Enum.html":{},"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{}}}],["3.7.0",{"_index":4428,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":3264,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["300",{"_index":2250,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["300px",{"_index":711,"title":{},"body":{"components/BoardPage.html":{}}}],["30px",{"_index":2874,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{}}}],["315px",{"_index":3349,"title":{},"body":{"components/SettingsPage.html":{}}}],["32px",{"_index":816,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["34",{"_index":4647,"title":{},"body":{"overview.html":{}}}],["36969",{"_index":2995,"title":{},"body":{"classes/Random.html":{}}}],["36px",{"_index":2262,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["39;one&#39",{"_index":1686,"title":{},"body":{"classes/Enum.html":{}}}],["39;three&#39",{"_index":1688,"title":{},"body":{"classes/Enum.html":{}}}],["39;two&#39",{"_index":1687,"title":{},"body":{"classes/Enum.html":{}}}],["3px",{"_index":2252,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/TextareaComponent.html":{}}}],["4",{"_index":3183,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["4.0.17",{"_index":4431,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":4430,"title":{},"body":{"dependencies.html":{}}}],["4.2.3",{"_index":4424,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":2246,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/WorkspaceService.html":{}}}],["4000",{"_index":3432,"title":{},"body":{"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{}}}],["400px",{"_index":1463,"title":{},"body":{"injectables/DialogService.html":{},"components/InputComponent.html":{}}}],["401",{"_index":1742,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":2442,"title":{},"body":{"components/LoginPage.html":{}}}],["404",{"_index":2447,"title":{},"body":{"components/LoginPage.html":{},"injectables/WorkspaceService.html":{}}}],["40px",{"_index":746,"title":{},"body":{"components/BoardPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["41",{"_index":4262,"title":{},"body":{"classes/UserUtils.html":{}}}],["422",{"_index":3034,"title":{},"body":{"components/RegisterPage.html":{}}}],["4294967296",{"_index":2999,"title":{},"body":{"classes/Random.html":{}}}],["42px",{"_index":880,"title":{},"body":{"components/ButtonComponent.html":{}}}],["44px",{"_index":2291,"title":{},"body":{"components/InputComponent.html":{}}}],["450px",{"_index":966,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["45deg",{"_index":3466,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["46px",{"_index":2803,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["4a5465",{"_index":3516,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["4px",{"_index":832,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{},"components/TaskListPage.html":{}}}],["4rem",{"_index":954,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/TaskListPage.html":{}}}],["4s",{"_index":1331,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["5",{"_index":820,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/SchedulePage.html":{}}}],["50",{"_index":812,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["500",{"_index":759,"title":{},"body":{"components/BoardPage.html":{},"components/CardComponent.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["500px",{"_index":961,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/TextareaComponent.html":{}}}],["520px",{"_index":969,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["57",{"_index":4644,"title":{},"body":{"overview.html":{}}}],["5px",{"_index":755,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/ForgotPasswordPage.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["6",{"_index":4270,"title":{},"body":{"classes/UserUtils.html":{},"overview.html":{}}}],["6.1.0",{"_index":4418,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3987,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["600",{"_index":2251,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["60px",{"_index":1180,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["62px",{"_index":4228,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["64px",{"_index":944,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{}}}],["65535",{"_index":2996,"title":{},"body":{"classes/Random.html":{}}}],["7",{"_index":3075,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["7.1.0",{"_index":4426,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":4435,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["720px",{"_index":970,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["74px",{"_index":3479,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["76",{"_index":3986,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["770px",{"_index":962,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["7px",{"_index":903,"title":{},"body":{"components/CardComponent.html":{}}}],["8.3.2",{"_index":4439,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2258,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SettingsPage.html":{}}}],["800",{"_index":729,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["800px",{"_index":3352,"title":{},"body":{"components/SettingsPage.html":{}}}],["80px",{"_index":879,"title":{},"body":{"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{}}}],["84",{"_index":4648,"title":{},"body":{"overview.html":{}}}],["89",{"_index":3991,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["8px",{"_index":3350,"title":{},"body":{"components/SettingsPage.html":{}}}],["9.2.1",{"_index":4420,"title":{},"body":{"dependencies.html":{}}}],["95",{"_index":4261,"title":{},"body":{"classes/UserUtils.html":{}}}],["950px",{"_index":965,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["987654321",{"_index":2983,"title":{},"body":{"classes/Random.html":{}}}],["_",{"_index":1833,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"components/SnackbarOutletComponent.html":{},"classes/StoryPageConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/Utils.html":{}}}],["_args",{"_index":3666,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["_assignee",{"_index":2178,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["_blank",{"_index":1973,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["_checkifisrequired",{"_index":1112,"title":{},"body":{"components/ControlAccessor.html":{}}}],["_componentref",{"_index":1321,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["_config",{"_index":3593,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["_context",{"_index":2387,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["_control",{"_index":4055,"title":{},"body":{"classes/TestNgControl.html":{}}}],["_editor",{"_index":4126,"title":{},"body":{"components/TextareaComponent.html":{}}}],["_editor.getcontentheight",{"_index":4142,"title":{},"body":{"components/TextareaComponent.html":{}}}],["_editor.getmodel()?.ondidchangecontent",{"_index":4154,"title":{},"body":{"components/TextareaComponent.html":{}}}],["_editor.layout",{"_index":4151,"title":{},"body":{"components/TextareaComponent.html":{}}}],["_editor.ondidcontentsizechange(updateheight",{"_index":4153,"title":{},"body":{"components/TextareaComponent.html":{}}}],["_edits",{"_index":3204,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["_emojiconvertor",{"_index":1583,"title":{},"body":{"classes/Emoji.html":{}}}],["_filters",{"_index":1865,"title":{},"body":{"components/FiltersComponent.html":{}}}],["_icon",{"_index":2112,"title":{},"body":{"components/IconComponent.html":{}}}],["_index",{"_index":3476,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["_initcheckfortouch",{"_index":1122,"title":{},"body":{"components/ControlAccessor.html":{}}}],["_initialized",{"_index":2568,"title":{},"body":{"classes/Marked.html":{},"classes/Monaco.html":{}}}],["_isbuttondisabled",{"_index":4193,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["_key",{"_index":3210,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["_main/_main.module",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["_main/components/main",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["_main/interfaces/color.interface",{"_index":3505,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["_main/services/api.service",{"_index":3910,"title":{},"body":{"injectables/TaskService.html":{}}}],["_main/services/dialog.service",{"_index":601,"title":{},"body":{"components/BoardPage.html":{}}}],["_main/validators/required.validator",{"_index":84,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["_meta",{"_index":1810,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["_persistentkey",{"_index":2891,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["_required",{"_index":1100,"title":{},"body":{"components/ControlAccessor.html":{}}}],["_story",{"_index":3594,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["_templateref",{"_index":2389,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["_tokens",{"_index":1643,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["_viewcontainer",{"_index":2395,"title":{},"body":{"directives/LetDirective.html":{}}}],["_viewcontainer.createembeddedview(_templateref",{"_index":2390,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["ability",{"_index":2045,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["above",{"_index":1655,"title":{},"body":{"interfaces/EmojiToken.html":{},"license.html":{}}}],["absolute",{"_index":825,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["abstract",{"_index":4694,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["abstractcontrol",{"_index":4062,"title":{},"body":{"classes/TestNgControl.html":{}}}],["acc",{"_index":2632,"title":{},"body":{"injectables/MemberService.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["acc.set(member.user.id",{"_index":2631,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["acc.set(status.id",{"_index":3547,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["access",{"_index":327,"title":{},"body":{"injectables/ApiService.html":{},"injectables/GitIntegrationService.html":{},"additional-documentation/architecture.html":{}}}],["accessor",{"_index":1023,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["accessor.class",{"_index":1025,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["accessor.class.ts",{"_index":1052,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:127",{"_index":1071,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:135",{"_index":1068,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:142",{"_index":1069,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:148",{"_index":1070,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:18",{"_index":1067,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:24",{"_index":1074,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:28",{"_index":1077,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:42",{"_index":1079,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:63",{"_index":1081,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:70",{"_index":1083,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:72",{"_index":1063,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:82",{"_index":1072,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessors",{"_index":1056,"title":{},"body":{"components/ControlAccessor.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"directives/LetDirective.html":{},"classes/Monaco.html":{},"components/OptionComponent.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"classes/TestNgControl.html":{}}}],["account",{"_index":206,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["account.githubusername",{"_index":2073,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["account.githubusername.replace",{"_index":2088,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["account.page",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DeleteAccountPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["account.page'},{'name",{"_index":151,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["account.page.html",{"_index":1262,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.scss",{"_index":1261,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts",{"_index":1260,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts:10",{"_index":1263,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{}}}],["account.page.ts:12",{"_index":3228,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:13",{"_index":3071,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["account.page.ts:15",{"_index":3232,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:17",{"_index":1266,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{}}}],["account.page.ts:22",{"_index":1265,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts:28",{"_index":3231,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:36",{"_index":3230,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:42",{"_index":3229,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account/delete",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DeleteAccountPage.html":{}}}],["account/restore",{"_index":479,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/RestoreAccountPage.html":{}}}],["account/settings",{"_index":3225,"title":{},"body":{"components/SettingsAccountPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["accounts.map((account",{"_index":1968,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["action",{"_index":856,"title":{},"body":{"components/ButtonComponent.html":{},"components/SettingsAccountPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/continuos-integration.html":{}}}],["actions",{"_index":830,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"additional-documentation/continuos-integration.html":{}}}],["activatedroute",{"_index":546,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/GithubIntegrationPage.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["active",{"_index":893,"title":{},"body":{"components/ButtonComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["activeworkspace",{"_index":2809,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["actual_component",{"_index":253,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["adapter",{"_index":4422,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":18,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["add(emails",{"_index":2607,"title":{},"body":{"injectables/MemberService.html":{}}}],["addcode",{"_index":3595,"title":{},"body":{"classes/Story.html":{}}}],["addcode(code",{"_index":3607,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["adddecorators",{"_index":1922,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["adddecorators(decorators",{"_index":1838,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["adddefaulttemplate",{"_index":3596,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["adddescription",{"_index":3597,"title":{},"body":{"classes/Story.html":{}}}],["adddescription(description",{"_index":3610,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["added",{"_index":2626,"title":{},"body":{"injectables/MemberService.html":{}}}],["addedmembers",{"_index":2587,"title":{},"body":{"components/MemberListComponent.html":{}}}],["adding",{"_index":4741,"title":{},"body":{"additional-documentation/localization.html":{}}}],["additional",{"_index":1659,"title":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}},"body":{"interfaces/EmojiToken.html":{},"components/InputComponent.html":{},"interfaces/RequestOptions.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["addmemberdialog",{"_index":1,"title":{"components/AddMemberDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["addmemberdialogdata",{"_index":39,"title":{"interfaces/AddMemberDialogData.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectMembersPage.html":{}}}],["addmembers",{"_index":33,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["addpanelclass",{"_index":1336,"title":{},"body":{"classes/DialogRef.html":{}}}],["addpanelclass(classes",{"_index":1349,"title":{},"body":{"classes/DialogRef.html":{}}}],["addprops",{"_index":3598,"title":{},"body":{"classes/Story.html":{}}}],["addprops(props",{"_index":3612,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["addrepository",{"_index":2356,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["address",{"_index":1917,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["adds",{"_index":2609,"title":{},"body":{"injectables/MemberService.html":{}}}],["addtemplate",{"_index":3599,"title":{},"body":{"classes/Story.html":{}}}],["addtemplate(template",{"_index":3614,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["adrian",{"_index":4578,"title":{},"body":{"license.html":{}}}],["advanced",{"_index":347,"title":{},"body":{"injectables/ApiService.html":{},"components/TextareaComponent.html":{}}}],["advised",{"_index":4636,"title":{},"body":{"license.html":{}}}],["after_each_line",{"_index":3181,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{}}}],["afterclosed",{"_index":673,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["aftereachline",{"_index":2733,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["afteropened",{"_index":1335,"title":{},"body":{"classes/DialogRef.html":{}}}],["afterselectiontext",{"_index":2710,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["afterselectiontext.match(/\\n/g",{"_index":2754,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["afterselectiontext.replace(/\\n[^]*$/g",{"_index":2763,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["afterselectiontextlinescount",{"_index":2753,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["afterselectiontextlinescount).length",{"_index":2762,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["afterviewinit",{"_index":1901,"title":{},"body":{"directives/FocusInitialDirective.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["agent",{"_index":3365,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype",{"_index":3359,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(\"browser",{"_index":3394,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(\"os",{"_index":3392,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(type",{"_index":3364,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agree",{"_index":3039,"title":{},"body":{"components/RegisterPage.html":{}}}],["agreement",{"_index":3041,"title":{},"body":{"components/RegisterPage.html":{}}}],["agreements",{"_index":3015,"title":{},"body":{"components/RegisterPage.html":{}}}],["aleksandra",{"_index":4572,"title":{},"body":{"license.html":{}}}],["alert",{"_index":123,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["alert(data",{"_index":1421,"title":{},"body":{"injectables/DialogService.html":{}}}],["alert.dialog.html",{"_index":265,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alert.dialog.scss",{"_index":264,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alert/information",{"_index":1424,"title":{},"body":{"injectables/DialogService.html":{}}}],["alertdialog",{"_index":122,"title":{"components/AlertDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["alertdialogdata",{"_index":271,"title":{"interfaces/AlertDialogData.html":{}},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{}}}],["alertdialogvariant",{"_index":266,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{},"miscellaneous/enumerations.html":{}}}],["alertdialogvariant.default",{"_index":316,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alertdialogvariant.important",{"_index":280,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["aliases",{"_index":4651,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":717,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["already",{"_index":2445,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["always",{"_index":456,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["american",{"_index":3311,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["anchor",{"_index":1648,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["and/or",{"_index":4592,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1094,"title":{},"body":{"components/ControlAccessor.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["angular.json",{"_index":4733,"title":{},"body":{"additional-documentation/localization.html":{}}}],["angular/animations",{"_index":4408,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4410,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":865,"title":{},"body":{"components/ButtonComponent.html":{}}}],["angular/cdk/drag",{"_index":588,"title":{},"body":{"components/BoardPage.html":{},"modules/MainModule.html":{}}}],["angular/cdk/observers",{"_index":2460,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/overlay",{"_index":2462,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/platform",{"_index":2464,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/text",{"_index":2279,"title":{},"body":{"components/InputComponent.html":{}}}],["angular/common",{"_index":465,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":368,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"modules/MainModule.html":{},"interfaces/RequestOptions.html":{}}}],["angular/compiler",{"_index":4412,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":74,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AuthModule.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"classes/TestNgControl.html":{},"components/ViewOptionsComponent-1.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":4717,"title":{},"body":{"additional-documentation/localization.html":{}}}],["angular/material",{"_index":4413,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2469,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/badge",{"_index":2471,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/checkbox",{"_index":2473,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/core",{"_index":2475,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/datepicker",{"_index":2477,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/dialog",{"_index":76,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["angular/material/form",{"_index":2480,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/icon",{"_index":2482,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/input",{"_index":2484,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/menu",{"_index":2486,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/progress",{"_index":2488,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/select",{"_index":2490,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/table",{"_index":2492,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tabs",{"_index":2494,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tooltip",{"_index":2496,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/platform",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{},"dependencies.html":{}}}],["angular/router",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["animating",{"_index":737,"title":{},"body":{"components/BoardPage.html":{}}}],["animation",{"_index":3460,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["animationname",{"_index":3422,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["antkowiak",{"_index":4579,"title":{},"body":{"license.html":{}}}],["any)._markastouched",{"_index":1123,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any)._rawvalidators",{"_index":1114,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any)._root",{"_index":3086,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["any).color",{"_index":2221,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["any).control._rawvalidators",{"_index":1117,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any).endcolumn",{"_index":2739,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["any).endlinenumber",{"_index":2743,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["any).id",{"_index":677,"title":{},"body":{"components/BoardPage.html":{}}}],["any).injector",{"_index":2556,"title":{},"body":{"modules/MainModule.html":{}}}],["any).injector.get(dialogservice",{"_index":1773,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["any).subscribe",{"_index":644,"title":{},"body":{"components/BoardPage.html":{}}}],["any).twemoji.parse(source",{"_index":1614,"title":{},"body":{"classes/Emoji.html":{}}}],["any)[a[0",{"_index":3208,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["any)[b[0",{"_index":3209,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["any)[charactersequence",{"_index":1612,"title":{},"body":{"classes/Emoji.html":{}}}],["any[]).concat",{"_index":2750,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["any[]).concat(this._meta.decorators",{"_index":1840,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["api",{"_index":328,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"injectables/WorkspaceService.html":{}}}],["apiservice",{"_index":323,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["apiurl",{"_index":329,"title":{},"body":{"injectables/ApiService.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["app.component",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["app/main/main.module",{"_index":2548,"title":{},"body":{"modules/MainModule.html":{}}}],["app/main/main.module';(@)ngmodule",{"_index":2456,"title":{},"body":{"modules/MainModule.html":{}}}],["appcomponent",{"_index":124,"title":{"components/AppComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["appfocusinitial",{"_index":1902,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["appfocusinitial]'},{'name",{"_index":248,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["application",{"_index":2016,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["apply",{"_index":1120,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/FilterCheckbox.html":{}}}],["apply(input",{"_index":1844,"title":{},"body":{"interfaces/FilterCheckbox.html":{}}}],["apply(tasks",{"_index":1858,"title":{},"body":{"classes/Filters.html":{}}}],["applybold",{"_index":4067,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applycode",{"_index":4068,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applycodeblock",{"_index":4069,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applyfilters",{"_index":3904,"title":{},"body":{"injectables/TaskService.html":{},"miscellaneous/functions.html":{}}}],["applyfilters(filters",{"_index":4487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applyitalic",{"_index":4070,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applylink",{"_index":4071,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applylist",{"_index":4072,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applylistnumeric",{"_index":4073,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applyquote",{"_index":4074,"title":{},"body":{"components/TextareaComponent.html":{}}}],["applyunderline",{"_index":4075,"title":{},"body":{"components/TextareaComponent.html":{}}}],["appmodule",{"_index":402,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":409,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":4661,"title":{"additional-documentation/architecture.html":{}},"body":{"additional-documentation/architecture.html":{}}}],["arg",{"_index":1933,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["args",{"_index":3651,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryTemplate.html":{}}}],["args.formcontrol",{"_index":3673,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["argtypes",{"_index":1937,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["arguments",{"_index":1041,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["arising",{"_index":4633,"title":{},"body":{"license.html":{}}}],["array",{"_index":1352,"title":{},"body":{"classes/DialogRef.html":{},"classes/Enum.html":{},"classes/Utils.html":{}}}],["array(difference).keys()].map((k",{"_index":3195,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["array.isarray(members",{"_index":2220,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["arraybuffer",{"_index":3060,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["artifacts",{"_index":4544,"title":{},"body":{"index.html":{}}}],["as.validator",{"_index":929,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["as.validator.ts",{"_index":4483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assets/mocks/calendar.svg",{"_index":4022,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["assets/mocks/dashboard.svg",{"_index":1250,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["assets/mocks/inbox.svg",{"_index":1580,"title":{},"body":{"modules/EmailsRoutingModule.html":{}}}],["assets/mocks/messages.svg",{"_index":2640,"title":{},"body":{"modules/MessagesRoutingModule.html":{}}}],["assign",{"_index":3872,"title":{},"body":{"injectables/TaskService.html":{}}}],["assign(member?.user.id",{"_index":2240,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assign(userid",{"_index":3880,"title":{},"body":{"injectables/TaskService.html":{}}}],["assigned",{"_index":1458,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["assignee",{"_index":814,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/TaskListPage.html":{}}}],["assignee'},{'name",{"_index":169,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["assignee(assignee",{"_index":2215,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component",{"_index":4007,"title":{},"body":{"modules/TasksModule.html":{}}}],["assignee.component.html",{"_index":2177,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.scss",{"_index":2176,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts",{"_index":2175,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:18",{"_index":2183,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:27",{"_index":2201,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:31",{"_index":2184,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:45",{"_index":2186,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:46",{"_index":2185,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:48",{"_index":2199,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:50",{"_index":2192,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:52",{"_index":2196,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:53",{"_index":2195,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:54",{"_index":2193,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:56",{"_index":2207,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:60",{"_index":2205,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:62",{"_index":2182,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:68",{"_index":2188,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:80",{"_index":2187,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:84",{"_index":2191,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:91",{"_index":2190,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.user.name[0",{"_index":2241,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee/input",{"_index":2174,"title":{},"body":{"components/InputAssigneeComponent.html":{},"modules/TasksModule.html":{}}}],["assigneecolor",{"_index":2179,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assigneecontrol",{"_index":3777,"title":{},"body":{"components/TaskListPage.html":{}}}],["assigneeid",{"_index":1857,"title":{},"body":{"classes/Filters.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["assignees",{"_index":813,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["async)?.name",{"_index":1193,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{}}}],["attach",{"_index":1506,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"interfaces/RequestOptions.html":{},"components/TaskDialog.html":{},"injectables/TaskService.html":{}}}],["attached",{"_index":661,"title":{},"body":{"components/BoardPage.html":{},"directives/FocusInitialDirective.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["attachgithubintegration",{"_index":1987,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["attachgithubintegration(projectid",{"_index":2003,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["attachgithubintegration(this.projectid",{"_index":2374,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["attribute",{"_index":2126,"title":{},"body":{"components/IconComponent.html":{}}}],["auth",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/UpperNavigationComponent.html":{}}}],["auth.routing",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/guard/logged",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/interfaces/user.interface",{"_index":3418,"title":{},"body":{"interfaces/SinglePersonSchedule.html":{},"injectables/UserService.html":{}}}],["auth/services/auth.service",{"_index":2415,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["auth/services/user.service",{"_index":2431,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{}}}],["authentication",{"_index":3066,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["authmodule",{"_index":458,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":462,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":486,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["auto",{"_index":690,"title":{},"body":{"components/BoardPage.html":{},"components/DialogOutletComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TextareaComponent.html":{}}}],["autocomplete",{"_index":981,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["autofillmonitor",{"_index":2269,"title":{},"body":{"components/InputComponent.html":{}}}],["automatically",{"_index":4540,"title":{},"body":{"index.html":{}}}],["available",{"_index":4280,"title":{},"body":{"classes/Utils.html":{},"injectables/WorkspaceService.html":{},"modules.html":{}}}],["avatar",{"_index":2261,"title":{},"body":{"components/InputAssigneeComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/SchedulePage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["awesome",{"_index":2109,"title":{},"body":{"components/IconComponent.html":{}}}],["b",{"_index":3207,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["back",{"_index":1916,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{}}}],["backdrop",{"_index":1363,"title":{},"body":{"classes/DialogRef.html":{}}}],["backdropclick",{"_index":1337,"title":{},"body":{"classes/DialogRef.html":{}}}],["background",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["backlog",{"_index":4357,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["badge",{"_index":4774,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["badges",{"_index":4772,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["banner",{"_index":757,"title":{},"body":{"components/BoardPage.html":{}}}],["bartosz",{"_index":4576,"title":{},"body":{"license.html":{}}}],["base",{"_index":1053,"title":{},"body":{"components/ControlAccessor.html":{},"classes/Emoji.html":{},"additional-documentation/architecture.html":{}}}],["based",{"_index":1695,"title":{},"body":{"classes/Enum.html":{}}}],["basic",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["before",{"_index":886,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/localization.html":{}}}],["before_each_line",{"_index":3180,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{}}}],["beforeclosed",{"_index":1314,"title":{},"body":{"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{}}}],["beforeeachline",{"_index":2732,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["beforeselectiontext",{"_index":2709,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["beforeselectiontext.match(/\\n/g",{"_index":2759,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["beforeselectiontext.replace(/.*\\n/g",{"_index":2760,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["begin",{"_index":3498,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["behavior",{"_index":852,"title":{},"body":{"components/ButtonComponent.html":{}}}],["behaviorsubject",{"_index":1387,"title":{},"body":{"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["behaviorsubject(false",{"_index":2194,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{}}}],["behaviorsubject(matdialogstate.closed",{"_index":1347,"title":{},"body":{"classes/DialogRef.html":{}}}],["behaviorsubject>(new",{"_index":3488,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["below",{"_index":309,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["beneath",{"_index":2274,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["between",{"_index":723,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["bezier(0",{"_index":740,"title":{},"body":{"components/BoardPage.html":{}}}],["binary",{"_index":4581,"title":{},"body":{"license.html":{}}}],["bind",{"_index":3676,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["binding",{"_index":283,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/IconComponent.html":{}}}],["blob",{"_index":3061,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["block",{"_index":748,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["blockquote",{"_index":4180,"title":{},"body":{"components/TextareaComponent.html":{}}}],["blocks",{"_index":4696,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["blur",{"_index":1010,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["board",{"_index":129,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["board'},{'name",{"_index":127,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["board(projectid",{"_index":3554,"title":{},"body":{"injectables/StatusService.html":{}}}],["board.page.html",{"_index":531,"title":{},"body":{"components/BoardPage.html":{}}}],["board.page.scss",{"_index":530,"title":{},"body":{"components/BoardPage.html":{}}}],["board.push([task",{"_index":3587,"title":{},"body":{"injectables/StatusService.html":{}}}],["board.push(other",{"_index":3591,"title":{},"body":{"injectables/StatusService.html":{}}}],["boardpage",{"_index":126,"title":{"components/BoardPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["boards",{"_index":695,"title":{},"body":{"components/BoardPage.html":{}}}],["boardtaskcomponent",{"_index":128,"title":{"components/BoardTaskComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["body",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["bold",{"_index":2407,"title":{},"body":{"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/StatusLabelComponent.html":{}}}],["boolean",{"_index":278,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/UserSession.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["boolean(repositoryname.match(new",{"_index":2089,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["bootstrap",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":730,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["bottom",{"_index":724,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["box",{"_index":806,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["branch",{"_index":1950,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"additional-documentation/continuos-integration.html":{}}}],["brands",{"_index":4356,"title":{},"body":{"components/ViewOptionsComponent-1.html":{},"dependencies.html":{}}}],["break",{"_index":1119,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/ExtendedMeta.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"classes/StoryPageConfig.html":{}}}],["british",{"_index":3306,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["browse",{"_index":4640,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1986,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["browseranimationsmodule",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["bsd",{"_index":4568,"title":{},"body":{"license.html":{}}}],["bubbles",{"_index":1049,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["build",{"_index":4542,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["building",{"_index":4556,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{}}}],["buildpropsstring",{"_index":4459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildpropsstring(props",{"_index":4035,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["buildtemplate",{"_index":4461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildtemplate(selector",{"_index":4038,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["buildthe",{"_index":4543,"title":{},"body":{"index.html":{}}}],["business",{"_index":4624,"title":{},"body":{"license.html":{}}}],["button",{"_index":310,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["button'},{'name",{"_index":132,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["button.component.html",{"_index":840,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":839,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button:not(.button",{"_index":877,"title":{},"body":{"components/ButtonComponent.html":{}}}],["buttoncomponent",{"_index":131,"title":{"components/ButtonComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["buttons",{"_index":263,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/RegisterPage.html":{}}}],["c",{"_index":3675,"title":{},"body":{"classes/StoryTemplate.html":{},"license.html":{}}}],["c.charcodeat(0",{"_index":4267,"title":{},"body":{"classes/UserUtils.html":{}}}],["calc($padding",{"_index":2296,"title":{},"body":{"components/InputComponent.html":{}}}],["calc($size",{"_index":822,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["calc(100",{"_index":943,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["calc(50",{"_index":2257,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["calc(var",{"_index":888,"title":{},"body":{"components/ButtonComponent.html":{}}}],["calendar",{"_index":4021,"title":{},"body":{"modules/TasksRoutingModule.html":{},"components/ViewOptionsComponent-1.html":{}}}],["call",{"_index":1460,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/RequestOptions.html":{}}}],["callback",{"_index":995,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["called",{"_index":997,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/DialogRef.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["camelcase",{"_index":4300,"title":{},"body":{"classes/Utils.html":{}}}],["canactivate",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoggedInUsersGuard.html":{}}}],["cancel",{"_index":34,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["cancelable",{"_index":1050,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["cancels",{"_index":3891,"title":{},"body":{"injectables/TaskService.html":{}}}],["canceltext",{"_index":313,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"injectables/DialogService.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/TaskService.html":{}}}],["card",{"_index":896,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":134,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["card.component.html",{"_index":898,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":897,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":133,"title":{"components/CardComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["case",{"_index":1827,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"components/IconComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"classes/StoryPageConfig.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"additional-documentation/architecture.html":{}}}],["catch",{"_index":648,"title":{},"body":{"components/BoardPage.html":{}}}],["catcherror",{"_index":1735,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["catcherror((e",{"_index":1739,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["catchresponse",{"_index":4462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["catchresponse(message",{"_index":4490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["caused",{"_index":4626,"title":{},"body":{"license.html":{}}}],["cdk",{"_index":733,"title":{},"body":{"components/BoardPage.html":{}}}],["cdkdragdrop",{"_index":554,"title":{},"body":{"components/BoardPage.html":{}}}],["cell",{"_index":3114,"title":{},"body":{"components/SchedulePage.html":{},"components/TaskListPage.html":{}}}],["center",{"_index":719,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["change",{"_index":136,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["changedate",{"_index":766,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["changedate(date",{"_index":775,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["changedate(session.lastused",{"_index":3397,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["changedate(subtask.deadline",{"_index":3843,"title":{},"body":{"components/TaskListPage.html":{}}}],["changedate(task.deadline",{"_index":801,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["changeddate",{"_index":2314,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["changelanguage",{"_index":3285,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["changepasswordpage",{"_index":135,"title":{"components/ChangePasswordPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["changes",{"_index":999,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TextareaComponent.html":{}}}],["changestatus",{"_index":3873,"title":{},"body":{"injectables/TaskService.html":{}}}],["changestatus(statusid",{"_index":3885,"title":{},"body":{"injectables/TaskService.html":{}}}],["changeworkspace",{"_index":2924,"title":{},"body":{"injectables/ProjectService.html":{}}}],["changeworkspace(projectid",{"_index":2926,"title":{},"body":{"injectables/ProjectService.html":{}}}],["changeworkspace(this.projectid",{"_index":1537,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["char",{"_index":4290,"title":{},"body":{"classes/Utils.html":{}}}],["char.length",{"_index":4312,"title":{},"body":{"classes/Utils.html":{}}}],["character",{"_index":4288,"title":{},"body":{"classes/Utils.html":{}}}],["character.tolowercase",{"_index":4310,"title":{},"body":{"classes/Utils.html":{}}}],["character.touppercase",{"_index":4309,"title":{},"body":{"classes/Utils.html":{}}}],["charactersequence",{"_index":1597,"title":{},"body":{"classes/Emoji.html":{}}}],["charactersequencetounicode",{"_index":1584,"title":{},"body":{"classes/Emoji.html":{}}}],["charactersequencetounicode(charactersequence",{"_index":1595,"title":{},"body":{"classes/Emoji.html":{}}}],["check",{"_index":754,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ControlAccessor.html":{},"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"components/TaskListPage.html":{},"classes/Utils.html":{},"miscellaneous/functions.html":{}}}],["checkbox",{"_index":973,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{}}}],["checkbox'},{'name",{"_index":139,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["checkbox.component.html",{"_index":975,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":974,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.ng",{"_index":1028,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":138,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["checkboxes",{"_index":1057,"title":{},"body":{"components/ControlAccessor.html":{}}}],["checks",{"_index":2035,"title":{},"body":{"injectables/GitIntegrationService.html":{},"classes/Utils.html":{}}}],["child",{"_index":715,"title":{},"body":{"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/RestoreAccountPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["child)::before",{"_index":3845,"title":{},"body":{"components/TaskListPage.html":{}}}],["children",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["choose",{"_index":2046,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["ci/cd",{"_index":4755,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["city",{"_index":4245,"title":{},"body":{"interfaces/UserSession.html":{}}}],["class",{"_index":90,"title":{"classes/DialogRef.html":{},"classes/ESet.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Marked.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"classes/PersistentMap.html":{},"classes/Random.html":{},"classes/SelectionEditPlugin.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"classes/TestNgControl.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ExtendedMeta.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["class.important",{"_index":270,"title":{},"body":{"components/AlertDialog.html":{}}}],["classes",{"_index":1066,"title":{},"body":{"components/ControlAccessor.html":{},"classes/DialogRef.html":{},"classes/ESet.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Marked.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"classes/PersistentMap.html":{},"classes/Random.html":{},"classes/SelectionEditPlugin.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"classes/TestNgControl.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["classes/control",{"_index":2280,"title":{},"body":{"components/InputComponent.html":{}}}],["classes/story.class",{"_index":4027,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["classes/utils.class",{"_index":2156,"title":{},"body":{"components/IconComponent.html":{}}}],["clause",{"_index":4569,"title":{},"body":{"license.html":{}}}],["clean",{"_index":4519,"title":{},"body":{"index.html":{}}}],["clear",{"_index":2892,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["clearcomponent",{"_index":1280,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["cleargithubintegrationfields",{"_index":3701,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["cli",{"_index":4566,"title":{},"body":{"index.html":{}}}],["click",{"_index":244,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["clickable",{"_index":836,"title":{},"body":{"components/ButtonComponent.html":{}}}],["clicked",{"_index":1364,"title":{},"body":{"classes/DialogRef.html":{}}}],["clickstoppropagationdirective",{"_index":243,"title":{"directives/ClickStopPropagationDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["close",{"_index":1338,"title":{},"body":{"classes/DialogRef.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{}}}],["close(dialogresult",{"_index":1367,"title":{},"body":{"classes/DialogRef.html":{}}}],["close(uid",{"_index":3483,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["closeall",{"_index":1411,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{}}}],["closed",{"_index":289,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/GitIntegrationService.html":{}}}],["closenavelement",{"_index":2782,"title":{},"body":{"components/NavElementComponent.html":{}}}],["closeprofile",{"_index":4197,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["closes",{"_index":286,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["closeworkspace",{"_index":2810,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["closing",{"_index":1358,"title":{},"body":{"classes/DialogRef.html":{}}}],["cluster_appmodule",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":1206,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":1207,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":1208,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_providers",{"_index":1209,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_emailsmodule",{"_index":1574,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_emailsmodule_imports",{"_index":1575,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_messagesmodule",{"_index":2634,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_messagesmodule_imports",{"_index":2635,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":3321,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":3322,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":3323,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":4000,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":4001,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":4002,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["code",{"_index":2872,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SettingsLocalizationPage.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TextareaComponent.html":{},"license.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["collapsed",{"_index":710,"title":{},"body":{"components/BoardPage.html":{}}}],["colon",{"_index":1624,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["colonstounicode",{"_index":1585,"title":{},"body":{"classes/Emoji.html":{}}}],["colonstounicode(source",{"_index":1598,"title":{},"body":{"classes/Emoji.html":{}}}],["color",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["color.hsl(hue",{"_index":4260,"title":{},"body":{"classes/UserUtils.html":{}}}],["color.pipe",{"_index":4014,"title":{},"body":{"modules/TasksModule.html":{}}}],["color.pipe.ts",{"_index":3510,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["color.pipe.ts:8",{"_index":3513,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["color.rgb(155",{"_index":3990,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(231",{"_index":3985,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(46",{"_index":3980,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(52",{"_index":3976,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(88",{"_index":3995,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["colorstyle",{"_index":3427,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["cols",{"_index":4078,"title":{},"body":{"components/TextareaComponent.html":{}}}],["column",{"_index":689,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["columns",{"_index":704,"title":{},"body":{"components/BoardPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["combinelatest",{"_index":3568,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["combinelatest([this.list(projectid",{"_index":3575,"title":{},"body":{"injectables/StatusService.html":{}}}],["combinepropsstring",{"_index":4465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["combinepropsstring(...propsstrings",{"_index":4049,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["combinepropsstring(defpropsstring",{"_index":4037,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["command",{"_index":4532,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{}}}],["commit",{"_index":827,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["commonmodule",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["comparewith",{"_index":4513,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complete",{"_index":1647,"title":{},"body":{"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{}}}],["completed",{"_index":3681,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["completes",{"_index":349,"title":{},"body":{"injectables/ApiService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["compodoc",{"_index":4558,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":4415,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["component.ts",{"_index":4697,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["component_template",{"_index":120,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["components/board",{"_index":4005,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/button/button.component",{"_index":2500,"title":{},"body":{"modules/MainModule.html":{}}}],["components/card/card.component",{"_index":2501,"title":{},"body":{"modules/MainModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":2502,"title":{},"body":{"modules/MainModule.html":{}}}],["components/dialog",{"_index":2503,"title":{},"body":{"modules/MainModule.html":{}}}],["components/filters/filters.component",{"_index":2505,"title":{},"body":{"modules/MainModule.html":{}}}],["components/icon/icon.component",{"_index":2506,"title":{},"body":{"modules/MainModule.html":{}}}],["components/input",{"_index":2507,"title":{},"body":{"modules/MainModule.html":{},"modules/TasksModule.html":{}}}],["components/input/input.component",{"_index":2509,"title":{},"body":{"modules/MainModule.html":{}}}],["components/integration",{"_index":1213,"title":{},"body":{"modules/DashboardModule.html":{},"modules/SettingsModule.html":{}}}],["components/list",{"_index":3328,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/main",{"_index":2510,"title":{},"body":{"modules/MainModule.html":{}}}],["components/member",{"_index":1216,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/nav",{"_index":2511,"title":{},"body":{"modules/MainModule.html":{}}}],["components/option/option.component",{"_index":2516,"title":{},"body":{"modules/MainModule.html":{}}}],["components/select/select.component",{"_index":2517,"title":{},"body":{"modules/MainModule.html":{}}}],["components/sidebar",{"_index":2518,"title":{},"body":{"modules/MainModule.html":{}}}],["components/snackbar",{"_index":2521,"title":{},"body":{"modules/MainModule.html":{}}}],["components/snackbar/snackbar.component",{"_index":2523,"title":{},"body":{"modules/MainModule.html":{}}}],["components/status",{"_index":4008,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/textarea/textarea.component",{"_index":2524,"title":{},"body":{"modules/MainModule.html":{}}}],["components/upper",{"_index":2525,"title":{},"body":{"modules/MainModule.html":{}}}],["components/view",{"_index":1219,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["componenttemplatedecorator",{"_index":3627,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"miscellaneous/functions.html":{}}}],["componenttemplatedecorator(props",{"_index":4028,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["componenttemplatedecorator(this.props",{"_index":3653,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["componentwrapperdecorator",{"_index":3621,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{}}}],["componentwrapperdecorator((deftemplate",{"_index":4029,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["concurrently",{"_index":4425,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":4585,"title":{},"body":{"license.html":{}}}],["config",{"_index":3604,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["config.class",{"_index":1935,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.class.ts",{"_index":1793,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["config.class.ts:12",{"_index":1925,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["config.class.ts:22",{"_index":3657,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:31",{"_index":3659,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:54",{"_index":3661,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:60",{"_index":3662,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:65",{"_index":3658,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:74",{"_index":3664,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.class.ts:78",{"_index":3660,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["config.code",{"_index":3641,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.config.selector",{"_index":3636,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.description",{"_index":3639,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.html",{"_index":3643,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.multiple",{"_index":3635,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.multiple.options",{"_index":3638,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.multiple.prop",{"_index":3637,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.selector",{"_index":4031,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["config.template.template",{"_index":3634,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["config.wrapwithdiv",{"_index":4039,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["configurable",{"_index":262,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["configuration",{"_index":367,"title":{},"body":{"injectables/ApiService.html":{},"modules/MainModule.html":{}}}],["configure",{"_index":348,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["confirm",{"_index":268,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["confirm(data",{"_index":1428,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmation",{"_index":291,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["confirmed",{"_index":3931,"title":{},"body":{"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["confirmprojectdelete",{"_index":1412,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmprojectdelete(project",{"_index":1430,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmtext",{"_index":312,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["confirmworkspacedelete",{"_index":1413,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmworkspacedelete(workspace",{"_index":1432,"title":{},"body":{"injectables/DialogService.html":{}}}],["connect",{"_index":2376,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"components/TaskDialog.html":{}}}],["connected",{"_index":3686,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["connectgithubissue",{"_index":1988,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubissue(projectid",{"_index":2006,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubpull",{"_index":1989,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubpull(projectid",{"_index":2010,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connection",{"_index":2014,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{}}}],["connecttogithub",{"_index":2357,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["connectwithissueongithub",{"_index":3687,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["connectwithpullrequestongithub",{"_index":3691,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["consequential",{"_index":4616,"title":{},"body":{"license.html":{}}}],["console.error('persistentmap",{"_index":2914,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["console.log",{"_index":636,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{}}}],["console.log(_edits",{"_index":3214,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["console.log(data",{"_index":3938,"title":{},"body":{"injectables/TaskService.html":{}}}],["console.log(editor",{"_index":3203,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["console.log(formvalues",{"_index":3766,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["console.log(installation_id",{"_index":2102,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["console.log(properties",{"_index":1820,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["console.log(selections",{"_index":3205,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["console.warn('unknown",{"_index":3998,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["const",{"_index":93,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["constructor(_viewcontainer",{"_index":2388,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["constructor(activatedroute",{"_index":545,"title":{},"body":{"components/BoardPage.html":{},"components/GithubIntegrationPage.html":{},"components/MockPage.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["constructor(apiservice",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["constructor(args",{"_index":3667,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["constructor(authservice",{"_index":911,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["constructor(config",{"_index":3601,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["constructor(data",{"_index":38,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/TaskDialog.html":{}}}],["constructor(dialogservice",{"_index":769,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/DialogOutletComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/UpperNavigationComponent.html":{}}}],["constructor(el",{"_index":1904,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["constructor(gitintegrationservice",{"_index":2359,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["constructor(httpclient",{"_index":334,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(injector",{"_index":2554,"title":{},"body":{"modules/MainModule.html":{}}}],["constructor(matdialog",{"_index":1418,"title":{},"body":{"injectables/DialogService.html":{}}}],["constructor(memberservice",{"_index":2588,"title":{},"body":{"components/MemberListComponent.html":{}}}],["constructor(meta",{"_index":1811,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["constructor(ngcontrol",{"_index":1062,"title":{},"body":{"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["constructor(private",{"_index":375,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"interceptors/ErrorInterceptor.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{}}}],["constructor(public",{"_index":1883,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{},"directives/ViewContainerDirective.html":{}}}],["constructor(ref",{"_index":2880,"title":{},"body":{"components/OptionComponent.html":{}}}],["constructor(router",{"_index":2412,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"injectables/RouterExtensionsService.html":{}}}],["constructor(seed",{"_index":2977,"title":{},"body":{"classes/Random.html":{}}}],["constructor(sessionservice",{"_index":3361,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["constructor(snackbarservice",{"_index":3428,"title":{},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["constructor(taskservice",{"_index":3095,"title":{},"body":{"components/SchedulePage.html":{}}}],["constructor(undefined",{"_index":2894,"title":{},"body":{"classes/PersistentMap.html":{}}}],["constructor(userservice",{"_index":3227,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["constructor(viewcontainerref",{"_index":4330,"title":{},"body":{"directives/ViewContainerDirective.html":{}}}],["constructor(workspaceservice",{"_index":1140,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["consume",{"_index":1657,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["container",{"_index":252,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["container.directive",{"_index":1309,"title":{},"body":{"components/DialogOutletComponent.html":{},"modules/MainModule.html":{}}}],["container.directive.ts",{"_index":4329,"title":{},"body":{"directives/ViewContainerDirective.html":{}}}],["container.directive.ts:6",{"_index":4331,"title":{},"body":{"directives/ViewContainerDirective.html":{}}}],["container.directive.ts:7",{"_index":4332,"title":{},"body":{"directives/ViewContainerDirective.html":{}}}],["container.scrollwidth",{"_index":4145,"title":{},"body":{"components/TextareaComponent.html":{}}}],["container.style.height",{"_index":4148,"title":{},"body":{"components/TextareaComponent.html":{}}}],["container.style.width",{"_index":4146,"title":{},"body":{"components/TextareaComponent.html":{}}}],["containerwidth",{"_index":4143,"title":{},"body":{"components/TextareaComponent.html":{}}}],["containerwidth}px",{"_index":4147,"title":{},"body":{"components/TextareaComponent.html":{}}}],["containing",{"_index":1437,"title":{},"body":{"injectables/DialogService.html":{}}}],["contains",{"_index":1107,"title":{},"body":{"components/ControlAccessor.html":{},"classes/Enum.html":{}}}],["content",{"_index":721,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TaskListPage.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/functions.html":{}}}],["content.cdk",{"_index":743,"title":{},"body":{"components/BoardPage.html":{}}}],["content_right",{"_index":1454,"title":{},"body":{"injectables/DialogService.html":{},"miscellaneous/enumerations.html":{}}}],["contentchildren",{"_index":3146,"title":{},"body":{"components/SelectComponent.html":{}}}],["contentchildren(optioncomponent",{"_index":3140,"title":{},"body":{"components/SelectComponent.html":{}}}],["contentheight",{"_index":4140,"title":{},"body":{"components/TextareaComponent.html":{}}}],["contentheight}px",{"_index":4149,"title":{},"body":{"components/TextareaComponent.html":{}}}],["context",{"_index":3047,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["continue",{"_index":3954,"title":{},"body":{"injectables/TaskService.html":{}}}],["continuos",{"_index":4754,"title":{"additional-documentation/continuos-integration.html":{}},"body":{"additional-documentation/continuos-integration.html":{}}}],["contract",{"_index":4629,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":4597,"title":{},"body":{"license.html":{}}}],["control",{"_index":1007,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["control's",{"_index":998,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["control.errors",{"_index":1026,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["control?.errors",{"_index":2287,"title":{},"body":{"components/InputComponent.html":{}}}],["controlaccessor",{"_index":140,"title":{"components/ControlAccessor.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["controlaccessor:127",{"_index":1017,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:135",{"_index":993,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:142",{"_index":1009,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:148",{"_index":1013,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:18",{"_index":983,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:22",{"_index":2323,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["controlaccessor:28",{"_index":1874,"title":{},"body":{"components/FiltersComponent.html":{}}}],["controlaccessor:30",{"_index":3537,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["controlaccessor:32",{"_index":2321,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["controlaccessor:46",{"_index":2278,"title":{},"body":{"components/InputComponent.html":{}}}],["controlaccessor:64",{"_index":2197,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["controlaccessor:82",{"_index":1022,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["controlobject",{"_index":3672,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["controls",{"_index":4316,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["controltype",{"_index":4445,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controlvalueaccessor",{"_index":1059,"title":{},"body":{"components/ControlAccessor.html":{}}}],["convenient",{"_index":4750,"title":{},"body":{"additional-documentation/localization.html":{}}}],["conventions",{"_index":4667,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["convert",{"_index":4304,"title":{},"body":{"classes/Utils.html":{}}}],["convertedemoji",{"_index":1666,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["convertfunction",{"_index":1662,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["convertfunction(token.emoji",{"_index":1667,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["converts",{"_index":4299,"title":{},"body":{"classes/Utils.html":{}}}],["cookie",{"_index":3065,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["copyright",{"_index":4570,"title":{},"body":{"license.html":{}}}],["core",{"_index":2154,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{}}}],["correctdata",{"_index":3025,"title":{},"body":{"components/RegisterPage.html":{}}}],["country",{"_index":4246,"title":{},"body":{"interfaces/UserSession.html":{}}}],["create",{"_index":142,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["create(project",{"_index":2929,"title":{},"body":{"injectables/ProjectService.html":{}}}],["create(projectid",{"_index":3556,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["create(workspace",{"_index":4370,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["create/general",{"_index":1252,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["create/members",{"_index":1253,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["created",{"_index":3559,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{},"additional-documentation/localization.html":{}}}],["createinjector",{"_index":1281,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["createinjector(data",{"_index":1293,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["createnewtask",{"_index":4198,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["createproject",{"_index":2811,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["createprojectmemberspage",{"_index":141,"title":{"components/CreateProjectMembersPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["createprojectpage",{"_index":145,"title":{"components/CreateProjectPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["creates",{"_index":1144,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["createsubscription",{"_index":1136,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["createsubtask",{"_index":767,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["createsubtask(task",{"_index":3790,"title":{},"body":{"components/TaskListPage.html":{}}}],["createworkspace",{"_index":3404,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["createworkspacepage",{"_index":147,"title":{"components/CreateWorkspacePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["creating",{"_index":1054,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["creation",{"_index":1152,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["credentials",{"_index":3064,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["css",{"_index":1351,"title":{},"body":{"classes/DialogRef.html":{},"components/IconComponent.html":{}}}],["cubic",{"_index":739,"title":{},"body":{"components/BoardPage.html":{}}}],["cuepic",{"_index":3966,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cuissue",{"_index":3965,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cupriorityhigh",{"_index":3860,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cupriorityhighest",{"_index":3862,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritylow",{"_index":3856,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritylowest",{"_index":3854,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritymedium",{"_index":3858,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["current",{"_index":1372,"title":{},"body":{"classes/DialogRef.html":{},"interfaces/UserSession.html":{},"additional-documentation/localization.html":{}}}],["currentdate",{"_index":3376,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentdate.diff(sessiondate",{"_index":3379,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentdate.year",{"_index":3377,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentuserid",{"_index":1853,"title":{},"body":{"classes/Filters.html":{}}}],["cursor",{"_index":727,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["cursorstatecomputer",{"_index":3171,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["custom",{"_index":1055,"title":{},"body":{"components/ControlAccessor.html":{},"classes/DialogRef.html":{},"interfaces/EmojiToken.html":{},"modules/MainModule.html":{}}}],["cusubtask",{"_index":3968,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cutask",{"_index":3964,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cuuserstory",{"_index":3967,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cypress",{"_index":4554,"title":{},"body":{"index.html":{}}}],["czemar/cli",{"_index":2085,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["czerniak",{"_index":4575,"title":{},"body":{"license.html":{}}}],["czy",{"_index":3240,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["d",{"_index":3384,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["damage",{"_index":4639,"title":{},"body":{"license.html":{}}}],["damages",{"_index":4617,"title":{},"body":{"license.html":{}}}],["dark",{"_index":4136,"title":{},"body":{"components/TextareaComponent.html":{}}}],["dashboard",{"_index":1244,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/SidebarNavigationComponent.html":{}}}],["dashboard.routing",{"_index":1222,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard/classes/user.class",{"_index":2210,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["dashboard/dialogs/add",{"_index":1158,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["dashboard/interfaces/git",{"_index":1956,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["dashboard/interfaces/project",{"_index":590,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/interfaces/project.interface",{"_index":592,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/SchedulePage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["dashboard/interfaces/workspace.interface",{"_index":78,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/ProjectService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["dashboard/services/git",{"_index":1958,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/member.service",{"_index":593,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/MemberListComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/project.service",{"_index":594,"title":{},"body":{"components/BoardPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/workspace.service",{"_index":3733,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{}}}],["dashboardmodule",{"_index":1205,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardroutingmodule",{"_index":1210,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":28,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"injectables/SnackbarService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"modules/TasksRoutingModule.html":{},"license.html":{},"additional-documentation/architecture.html":{}}}],["data.canceltext",{"_index":320,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.confirmtext",{"_index":321,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.message",{"_index":319,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.task?.name",{"_index":3768,"title":{},"body":{"components/TaskDialog.html":{}}}],["data.title",{"_index":318,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.variant",{"_index":315,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["database",{"_index":3504,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["date",{"_index":173,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["date().gettime",{"_index":2987,"title":{},"body":{"classes/Random.html":{}}}],["date:'d",{"_index":3110,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:'eee",{"_index":3111,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:'mmmm",{"_index":3108,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'d",{"_index":3124,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'eee",{"_index":3125,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'mmmm",{"_index":3123,"title":{},"body":{"components/SchedulePage.html":{}}}],["dateformat",{"_index":3299,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dateformat.example",{"_index":3319,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dateformats",{"_index":3283,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["datepicker",{"_index":2333,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["dates",{"_index":3094,"title":{},"body":{"components/SchedulePage.html":{}}}],["day",{"_index":3120,"title":{},"body":{"components/SchedulePage.html":{}}}],["dayjs",{"_index":785,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SchedulePage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["dayjs().format(format",{"_index":3296,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dayjs().todate",{"_index":3098,"title":{},"body":{"components/SchedulePage.html":{}}}],["dayjs(date",{"_index":795,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["days",{"_index":3076,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["dd",{"_index":798,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["de",{"_index":3301,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["deadline",{"_index":824,"title":{},"body":{"components/BoardTaskComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["debug",{"_index":4466,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decimal",{"_index":4185,"title":{},"body":{"components/TextareaComponent.html":{}}}],["declarations",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["decoration",{"_index":4186,"title":{},"body":{"components/TextareaComponent.html":{}}}],["decorator",{"_index":4506,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["decorator.function",{"_index":3629,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["decorator.function.ts",{"_index":4025,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["decorator.helper",{"_index":3624,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["decorator.ts",{"_index":4699,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["decorators",{"_index":57,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/ButtonComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/DialogOutletComponent.html":{},"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"additional-documentation/architecture.html":{}}}],["decorators/service.decorator",{"_index":370,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DialogService.html":{}}}],["dedicated",{"_index":4688,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["deep",{"_index":1898,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TextareaComponent.html":{}}}],["deep.mat",{"_index":2329,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["default",{"_index":60,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/localization.html":{}}}],["default_config",{"_index":1936,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["default_metadata",{"_index":1807,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["defaults",{"_index":2121,"title":{},"body":{"components/IconComponent.html":{}}}],["define",{"_index":4703,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["defines",{"_index":984,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["definition",{"_index":2116,"title":{},"body":{"components/IconComponent.html":{}}}],["defpropsstring",{"_index":4032,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["delete",{"_index":150,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["delete(id",{"_index":3218,"title":{},"body":{"injectables/SessionsService.html":{},"injectables/WorkspaceService.html":{}}}],["delete(key",{"_index":2898,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["delete(projectid",{"_index":2931,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["delete(url",{"_index":338,"title":{},"body":{"injectables/ApiService.html":{}}}],["deleteaccount",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"components/DeleteAccountPage.html":{}}}],["deleteaccount(token",{"_index":1264,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["deleteaccountconfirmation",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccountconfirmation(token",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccountmailcheck",{"_index":3226,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["deleteaccountpage",{"_index":149,"title":{"components/DeleteAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["deleteconnectedgithubaccount",{"_index":1990,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deleteconnectedgithubaccount(githubaccountid",{"_index":2012,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deleted",{"_index":1269,"title":{},"body":{"components/DeleteAccountPage.html":{},"interceptors/ErrorInterceptor.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["deletegithubintegration",{"_index":1991,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deletegithubintegration(projectid",{"_index":2018,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deletemember",{"_index":2586,"title":{},"body":{"components/MemberListComponent.html":{}}}],["deletemember(id",{"_index":2592,"title":{},"body":{"components/MemberListComponent.html":{}}}],["deleteproject",{"_index":2812,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["deleteproject(project",{"_index":2827,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["deletes",{"_index":2933,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["deletesession",{"_index":3360,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["deletesession(id",{"_index":3368,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["deletetask",{"_index":3782,"title":{},"body":{"components/TaskListPage.html":{}}}],["deletetask(task",{"_index":3793,"title":{},"body":{"components/TaskListPage.html":{}}}],["deletewithconfirmation",{"_index":3874,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletewithconfirmation(projectid",{"_index":3889,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleteworkspace",{"_index":2813,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["deleteworkspace(workspace",{"_index":4394,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["deletion",{"_index":3077,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/WorkspacesListPage.html":{}}}],["dependencies",{"_index":404,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":337,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["deploy",{"_index":4760,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["deploy.yml",{"_index":4761,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["deprecated",{"_index":2079,"title":{},"body":{"injectables/GitIntegrationService.html":{},"injectables/ProjectService.html":{},"pipes/TaskTypeIconPipe.html":{}}}],["describe",{"_index":1075,"title":{},"body":{"components/ControlAccessor.html":{},"additional-documentation/architecture.html":{}}}],["description",{"_index":258,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"modules/MainModule.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["descriptor",{"_index":1759,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["descriptor.value",{"_index":1761,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["destroy",{"_index":1104,"title":{},"body":{"components/ControlAccessor.html":{},"components/EditProjectPage.html":{},"dependencies.html":{}}}],["destroyed",{"_index":1103,"title":{},"body":{"components/ControlAccessor.html":{}}}],["detached",{"_index":669,"title":{},"body":{"components/BoardPage.html":{}}}],["details",{"_index":2263,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["determine",{"_index":3500,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["deutsch",{"_index":3302,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dev",{"_index":4537,"title":{},"body":{"index.html":{}}}],["development",{"_index":4525,"title":{},"body":{"index.html":{}}}],["dezaktywujacy",{"_index":3254,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["dialog",{"_index":20,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{}}}],["dialog's",{"_index":295,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"classes/DialogRef.html":{}}}],["dialog'},{'name",{"_index":121,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["dialog.afterclosed().subscribe",{"_index":1466,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialog.close",{"_index":1470,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogoutlet",{"_index":1289,"title":{},"body":{"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/MainViewComponent.html":{},"injectables/TaskService.html":{},"miscellaneous/enumerations.html":{}}}],["dialogoutlet.content_right",{"_index":3936,"title":{},"body":{"injectables/TaskService.html":{}}}],["dialogoutletcomponent",{"_index":152,"title":{"components/DialogOutletComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["dialogposition",{"_index":1382,"title":{},"body":{"classes/DialogRef.html":{}}}],["dialogref",{"_index":40,"title":{"classes/DialogRef.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["dialogresult",{"_index":1370,"title":{},"body":{"classes/DialogRef.html":{}}}],["dialogs",{"_index":1408,"title":{},"body":{"injectables/DialogService.html":{},"additional-documentation/architecture.html":{}}}],["dialogs/add",{"_index":1223,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dialogs/alert/alert.dialog",{"_index":1453,"title":{},"body":{"injectables/DialogService.html":{},"modules/MainModule.html":{}}}],["dialogs/task/task.dialog",{"_index":604,"title":{},"body":{"components/BoardPage.html":{},"modules/TasksModule.html":{}}}],["dialogservice",{"_index":549,"title":{"injectables/DialogService.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["dialogservice.alert",{"_index":1774,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["dialogsmap",{"_index":1409,"title":{},"body":{"injectables/DialogService.html":{}}}],["difference",{"_index":3191,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["direct",{"_index":4611,"title":{},"body":{"license.html":{}}}],["direction",{"_index":688,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["directive",{"_index":118,"title":{"directives/ClickStopPropagationDirective.html":{},"directives/FocusInitialDirective.html":{},"directives/LetDirective.html":{},"directives/ViewContainerDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["directive.ts",{"_index":4701,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["directives",{"_index":242,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["directives/click",{"_index":2527,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/focus",{"_index":2529,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/let.directive",{"_index":2531,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/view",{"_index":2532,"title":{},"body":{"modules/MainModule.html":{}}}],["directory",{"_index":4547,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["disable",{"_index":1091,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{},"components/TextareaComponent.html":{}}}],["disabled",{"_index":1014,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["disableeditingfunctions",{"_index":1817,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["disclaimed",{"_index":4607,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4590,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2340,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["disconnect(account",{"_index":1970,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["disconnectgithubissue",{"_index":1992,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubissue(projectid",{"_index":2020,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubpull",{"_index":1993,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubpull(projectid",{"_index":2022,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["display",{"_index":685,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["display:flex;gap:1rem",{"_index":4041,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["displayed",{"_index":307,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["displays",{"_index":1149,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["dist",{"_index":4546,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":4594,"title":{},"body":{"license.html":{}}}],["dni",{"_index":3260,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["docs",{"_index":3650,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["docs_preset_control_accessor",{"_index":1932,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["document.addeventlistener('domcontentloaded",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["document.body.classlist.remove('preload",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('div",{"_index":2678,"title":{},"body":{"classes/Monaco.html":{}}}],["documentation",{"_index":4557,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["dodac",{"_index":3238,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["done",{"_index":3501,"title":{},"body":{"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"interfaces/StatusWithTasks.html":{}}}],["download",{"_index":3058,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["drag",{"_index":734,"title":{},"body":{"components/BoardPage.html":{}}}],["dragdropmodule",{"_index":2458,"title":{},"body":{"modules/MainModule.html":{}}}],["dragging",{"_index":744,"title":{},"body":{"components/BoardPage.html":{}}}],["drop",{"_index":539,"title":{},"body":{"components/BoardPage.html":{},"modules/MainModule.html":{}}}],["drop(event",{"_index":553,"title":{},"body":{"components/BoardPage.html":{}}}],["due",{"_index":800,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["dummy",{"_index":2677,"title":{},"body":{"classes/Monaco.html":{}}}],["duration",{"_index":3425,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["dynamic",{"_index":4414,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1750,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e.error.message",{"_index":1745,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e.status",{"_index":1741,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e2e",{"_index":4555,"title":{},"body":{"index.html":{}}}],["e[0",{"_index":1719,"title":{},"body":{"classes/Enum.html":{}}}],["e[1",{"_index":1717,"title":{},"body":{"classes/Enum.html":{}}}],["each",{"_index":4668,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["ease",{"_index":709,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["edit",{"_index":155,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/localization.html":{}}}],["edit.plugin",{"_index":2672,"title":{},"body":{"classes/Monaco.html":{}}}],["edit.plugin.ts",{"_index":3166,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["edit.plugin.ts:109",{"_index":3176,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["edit.plugin.ts:122",{"_index":3174,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["edit.plugin.ts:154",{"_index":3172,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["edit.range",{"_index":2738,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range.startcolumn",{"_index":2740,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range.startlinenumber",{"_index":2744,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range?.endcolumn",{"_index":2737,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range?.endlinenumber",{"_index":2742,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range?.startcolumn",{"_index":2736,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edit.range?.startlinenumber",{"_index":2741,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edited",{"_index":4749,"title":{},"body":{"additional-documentation/localization.html":{}}}],["editing",{"_index":1515,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["editoperation",{"_index":2699,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["editor",{"_index":2673,"title":{},"body":{"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/localization.html":{}}}],["editor.create(container",{"_index":4127,"title":{},"body":{"components/TextareaComponent.html":{}}}],["editor.create(dummy",{"_index":2679,"title":{},"body":{"classes/Monaco.html":{}}}],["editor.executeedits",{"_index":2734,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["editor.getmodel",{"_index":2752,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["editor.getmodel()?.getlinelength(selection.endlinenumber",{"_index":3187,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["editor.getselections",{"_index":2770,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["editor.istandalonecodeeditor",{"_index":4121,"title":{},"body":{"components/TextareaComponent.html":{}}}],["editproject",{"_index":1493,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["editproject(project",{"_index":2830,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["editprojectmemberspage",{"_index":154,"title":{"components/EditProjectMembersPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["editprojectpage",{"_index":156,"title":{"components/EditProjectPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["editprojectwithworkspace",{"_index":1494,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["editprojectwithworkspace(newworkspaceid",{"_index":1499,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["edits",{"_index":2698,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["edits.push",{"_index":2758,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["edittask",{"_index":3783,"title":{},"body":{"components/TaskListPage.html":{}}}],["edittask(task",{"_index":3795,"title":{},"body":{"components/TaskListPage.html":{}}}],["editworkspace",{"_index":2814,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["editworkspace(workspace",{"_index":4397,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["editworkspacepage",{"_index":157,"title":{"components/EditWorkspacePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["el",{"_index":1906,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["element",{"_index":117,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/localization.html":{}}}],["element'},{'name",{"_index":195,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["element.component",{"_index":2515,"title":{},"body":{"modules/MainModule.html":{}}}],["element.component.html",{"_index":2779,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.scss",{"_index":2778,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts",{"_index":2777,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:12",{"_index":2788,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:15",{"_index":2789,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:17",{"_index":2794,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:19",{"_index":2797,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:22",{"_index":2796,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:24",{"_index":2787,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:28",{"_index":2792,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:31",{"_index":2790,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:34",{"_index":2793,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:42",{"_index":2791,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.scrollheight",{"_index":679,"title":{},"body":{"components/BoardPage.html":{}}}],["element.scrollheight}px",{"_index":3840,"title":{},"body":{"components/TaskListPage.html":{}}}],["element/nav",{"_index":2514,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementComponent.html":{}}}],["elementref",{"_index":841,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FocusInitialDirective.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["elements",{"_index":837,"title":{},"body":{"components/ButtonComponent.html":{}}}],["email",{"_index":64,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["emails",{"_index":991,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/MemberService.html":{},"components/SelectComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["emails.routing",{"_index":1578,"title":{},"body":{"modules/EmailsModule.html":{}}}],["emailsmessages",{"_index":3415,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["emailsmodule",{"_index":1573,"title":{"modules/EmailsModule.html":{}},"body":{"modules/EmailsModule.html":{},"modules.html":{},"overview.html":{}}}],["emailsroutingmodule",{"_index":1576,"title":{"modules/EmailsRoutingModule.html":{}},"body":{"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["emailvalidator",{"_index":3014,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["emitevent",{"_index":2326,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["emits",{"_index":1102,"title":{},"body":{"components/ControlAccessor.html":{},"classes/DialogRef.html":{}}}],["emoji",{"_index":1581,"title":{"classes/Emoji.html":{}},"body":{"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Marked.html":{},"components/TextareaComponent.html":{},"dependencies.html":{}}}],["emoji._emojiconvertor.replace_colons(source",{"_index":1611,"title":{},"body":{"classes/Emoji.html":{}}}],["emoji.aliases",{"_index":1609,"title":{},"body":{"classes/Emoji.html":{}}}],["emoji.charactersequencetounicode",{"_index":1665,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["emoji.colonstounicode(`:${emojiname",{"_index":1610,"title":{},"body":{"classes/Emoji.html":{}}}],["emoji.emojinametounicode",{"_index":1664,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["emoji_aliases",{"_index":1608,"title":{},"body":{"classes/Emoji.html":{}}}],["emoji_sequence_aliases",{"_index":1606,"title":{},"body":{"classes/Emoji.html":{}}}],["emoji_sequence_regex",{"_index":1625,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["emoji_sequence_regex.exec(src",{"_index":1651,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["emojiconvertor",{"_index":1588,"title":{},"body":{"classes/Emoji.html":{}}}],["emojiconvertor.addaliases(emoji_aliases",{"_index":1593,"title":{},"body":{"classes/Emoji.html":{}}}],["emojiconvertor.allow_caps",{"_index":1592,"title":{},"body":{"classes/Emoji.html":{}}}],["emojiconvertor.allow_native",{"_index":1591,"title":{},"body":{"classes/Emoji.html":{}}}],["emojiconvertor.replace_mode",{"_index":1589,"title":{},"body":{"classes/Emoji.html":{}}}],["emojiname",{"_index":1602,"title":{},"body":{"classes/Emoji.html":{}}}],["emojinametounicode",{"_index":1586,"title":{},"body":{"classes/Emoji.html":{}}}],["emojinametounicode(emojiname",{"_index":1600,"title":{},"body":{"classes/Emoji.html":{}}}],["emojitoken",{"_index":1618,"title":{"interfaces/EmojiToken.html":{}},"body":{"interfaces/EmojiToken.html":{}}}],["emojitype",{"_index":1621,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["empty",{"_index":1736,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["en",{"_index":3303,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["enabled",{"_index":4133,"title":{},"body":{"components/TextareaComponent.html":{}}}],["end",{"_index":828,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SnackbarOutletComponent.html":{},"components/UpperNavigationComponent.html":{},"index.html":{}}}],["endcolumn",{"_index":2718,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["endcursorstate",{"_index":3170,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["endline",{"_index":3190,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["endlinenumber",{"_index":2717,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["endpoints",{"_index":4560,"title":{},"body":{"index.html":{}}}],["english",{"_index":3305,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["enter",{"_index":941,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["entity",{"_index":4363,"title":{},"body":{"interfaces/Workspace.html":{}}}],["entries",{"_index":1674,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"classes/SelectionEditPlugin.html":{}}}],["entries(enumtype",{"_index":1677,"title":{},"body":{"classes/Enum.html":{}}}],["entry",{"_index":2259,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["entry'},{'name",{"_index":176,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["entry.component",{"_index":3327,"title":{},"body":{"modules/SettingsModule.html":{}}}],["entry.component.html",{"_index":2338,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.scss",{"_index":2337,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts",{"_index":2336,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:10",{"_index":2344,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:11",{"_index":2342,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:12",{"_index":2345,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:14",{"_index":2341,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:18",{"_index":2347,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:9",{"_index":2343,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry/integration",{"_index":2335,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"modules/SettingsModule.html":{}}}],["enum",{"_index":304,"title":{"classes/Enum.html":{}},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"classes/Enum.html":{},"components/RegisterPage.html":{},"classes/SelectionEditPlugin.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(subtasktype",{"_index":3725,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(tasktype",{"_index":3730,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(testenum",{"_index":1684,"title":{},"body":{"classes/Enum.html":{}}}],["enum.isnumeric(enumtype",{"_index":1708,"title":{},"body":{"classes/Enum.html":{}}}],["enum.keys(testenum",{"_index":1699,"title":{},"body":{"classes/Enum.html":{}}}],["enum.ts",{"_index":4705,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enum.values(testenum",{"_index":1702,"title":{},"body":{"classes/Enum.html":{}}}],["enumerable",{"_index":297,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"additional-documentation/architecture.html":{}}}],["enumeration",{"_index":4704,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enumerations",{"_index":4443,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":4702,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enumtype",{"_index":1685,"title":{},"body":{"classes/Enum.html":{}}}],["environment",{"_index":366,"title":{},"body":{"injectables/ApiService.html":{},"components/MainViewComponent.html":{},"additional-documentation/continuos-integration.html":{}}}],["environment.apiurl",{"_index":364,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment.version",{"_index":2564,"title":{},"body":{"components/MainViewComponent.html":{}}}],["epic",{"_index":3683,"title":{},"body":{"interfaces/Task.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"miscellaneous/enumerations.html":{}}}],["error",{"_index":1030,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["error('method",{"_index":1403,"title":{},"body":{"classes/DialogRef.html":{}}}],["error('this",{"_index":2060,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["error(`method",{"_index":1401,"title":{},"body":{"classes/DialogRef.html":{}}}],["error(error",{"_index":1787,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["error.error.message",{"_index":3035,"title":{},"body":{"components/RegisterPage.html":{}}}],["error.interface.ts",{"_index":4314,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["error.pipe",{"_index":2538,"title":{},"body":{"modules/MainModule.html":{}}}],["error.pipe.ts",{"_index":4324,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["error.pipe.ts:15",{"_index":4325,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["error.status",{"_index":2441,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["error/validation",{"_index":2537,"title":{},"body":{"modules/MainModule.html":{},"pipes/ValidationErrorPipe.html":{}}}],["errorinterceptor",{"_index":1721,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"modules/MainModule.html":{}}}],["errors",{"_index":1061,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["errorvalidationtree",{"_index":1751,"title":{"interfaces/ErrorValidationTree.html":{}},"body":{"interfaces/ErrorValidationTree.html":{},"miscellaneous/functions.html":{}}}],["errorvalidationtree[identifier",{"_index":1767,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["errorvalidationtree[identifier][status",{"_index":1770,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["es",{"_index":1803,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsLocalizationPage.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/TemplateDecoratorConfig.html":{},"dependencies.html":{},"additional-documentation/localization.html":{}}}],["eset",{"_index":1480,"title":{"classes/ESet.html":{}},"body":{"classes/ESet.html":{},"components/TaskListPage.html":{}}}],["eslint",{"_index":1090,"title":{},"body":{"components/ControlAccessor.html":{},"components/TextareaComponent.html":{}}}],["eslint/component",{"_index":1095,"title":{},"body":{"components/ControlAccessor.html":{}}}],["español",{"_index":3307,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["estimated",{"_index":3682,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["estimateddate",{"_index":3678,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["etc",{"_index":1058,"title":{},"body":{"components/ControlAccessor.html":{},"components/IconComponent.html":{},"interfaces/RequestOptions.html":{},"interfaces/ValidationError.html":{}}}],["even",{"_index":4635,"title":{},"body":{"license.html":{}}}],["event",{"_index":556,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/SchedulePage.html":{},"license.html":{}}}],["event('click",{"_index":1048,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["event.container",{"_index":646,"title":{},"body":{"components/BoardPage.html":{}}}],["event.container.data",{"_index":638,"title":{},"body":{"components/BoardPage.html":{}}}],["event.currentindex",{"_index":639,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer",{"_index":645,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.data",{"_index":637,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.data[previoustaskindex",{"_index":635,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.element.nativeelement.dataset['index",{"_index":626,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previousindex",{"_index":634,"title":{},"body":{"components/BoardPage.html":{}}}],["event.stoppropagation",{"_index":1046,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["eventemitter",{"_index":2346,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["events",{"_index":890,"title":{},"body":{"components/ButtonComponent.html":{},"classes/DialogRef.html":{},"components/InputComponent.html":{},"interfaces/RequestOptions.html":{}}}],["ex",{"_index":2038,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"additional-documentation/architecture.html":{}}}],["example",{"_index":988,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"interfaces/Project.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["example.page.html",{"_index":4507,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example.page.scss",{"_index":4508,"title":{},"body":{"miscellaneous/functions.html":{}}}],["examplemodule",{"_index":2457,"title":{},"body":{"modules/MainModule.html":{}}}],["exclusive",{"_index":2993,"title":{},"body":{"classes/Random.html":{}}}],["execute",{"_index":4550,"title":{},"body":{"index.html":{}}}],["executed",{"_index":857,"title":{},"body":{"components/ButtonComponent.html":{}}}],["executeedits",{"_index":2686,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["executeedits(editor",{"_index":2696,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["executeselectionedits",{"_index":3167,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["executeselectionedits(edits",{"_index":3169,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["exemplary",{"_index":4615,"title":{},"body":{"license.html":{}}}],["exist",{"_index":4391,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["existing",{"_index":3688,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["expanded",{"_index":3847,"title":{},"body":{"components/TaskListPage.html":{}}}],["expandedsubtasks",{"_index":3778,"title":{},"body":{"components/TaskListPage.html":{}}}],["expect",{"_index":3062,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["expecttofail",{"_index":4469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expecttofail(val",{"_index":4495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expecttopass",{"_index":4472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expecttopass(val",{"_index":4496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expired",{"_index":1749,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["exportdeclarations",{"_index":2545,"title":{},"body":{"modules/MainModule.html":{}}}],["exported",{"_index":2546,"title":{},"body":{"modules/MainModule.html":{}}}],["exports",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["exposeallpossibilities",{"_index":3623,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["express",{"_index":4598,"title":{},"body":{"license.html":{}}}],["ext",{"_index":1616,"title":{},"body":{"classes/Emoji.html":{}}}],["extended",{"_index":1065,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["extended.class.ts",{"_index":2685,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["extended.class.ts:110",{"_index":2721,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:15",{"_index":2706,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:154",{"_index":2725,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:161",{"_index":2723,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:168",{"_index":2727,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:34",{"_index":2700,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:44",{"_index":2719,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:64",{"_index":2713,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:72",{"_index":2703,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extended.class.ts:76",{"_index":2711,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["extendedmeta",{"_index":1791,"title":{"interfaces/ExtendedMeta.html":{}},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["extends",{"_index":972,"title":{},"body":{"components/CheckboxComponent.html":{},"classes/ESet.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"classes/StoryPageConfig.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{}}}],["extension",{"_index":1629,"title":{},"body":{"interfaces/EmojiToken.html":{},"classes/Marked.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["extension.ts",{"_index":1620,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["extensions",{"_index":2580,"title":{},"body":{"classes/Marked.html":{}}}],["extensions.service",{"_index":80,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["extensions.service.ts",{"_index":3080,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["extensions.service.ts:7",{"_index":3082,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["extensions.service.ts:9",{"_index":3084,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["extensions/marked",{"_index":2575,"title":{},"body":{"classes/Marked.html":{}}}],["external",{"_index":2544,"title":{},"body":{"modules/MainModule.html":{},"additional-documentation/localization.html":{}}}],["extract",{"_index":4746,"title":{},"body":{"additional-documentation/localization.html":{}}}],["extract:i18neach",{"_index":4748,"title":{},"body":{"additional-documentation/localization.html":{}}}],["extractpropsstring",{"_index":4473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractpropsstring(deftemplate",{"_index":4033,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["extractpropsstring(template",{"_index":4047,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["f1",{"_index":4753,"title":{},"body":{"additional-documentation/localization.html":{}}}],["f39c12",{"_index":2651,"title":{},"body":{"components/MockPage.html":{},"pipes/StatusColorPipe.html":{}}}],["fa",{"_index":2117,"title":{},"body":{"components/IconComponent.html":{}}}],["faaddresscard",{"_index":3339,"title":{},"body":{"components/SettingsPage.html":{}}}],["faangledown",{"_index":1910,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["fabold",{"_index":4110,"title":{},"body":{"components/TextareaComponent.html":{}}}],["facheck",{"_index":532,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["fachevronright",{"_index":533,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["facirclenodes",{"_index":3340,"title":{},"body":{"components/SettingsPage.html":{}}}],["faclose",{"_index":3423,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["facode",{"_index":4111,"title":{},"body":{"components/TextareaComponent.html":{}}}],["facodecommit",{"_index":534,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["facodepullrequest",{"_index":535,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["facog",{"_index":4194,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["fafilecode",{"_index":4112,"title":{},"body":{"components/TextareaComponent.html":{}}}],["fafilter",{"_index":4340,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["fagithub",{"_index":4348,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["faglobe",{"_index":3341,"title":{},"body":{"components/SettingsPage.html":{}}}],["faitalic",{"_index":4113,"title":{},"body":{"components/TextareaComponent.html":{}}}],["falink",{"_index":4114,"title":{},"body":{"components/TextareaComponent.html":{}}}],["falist",{"_index":4115,"title":{},"body":{"components/TextareaComponent.html":{}}}],["falistnumeric",{"_index":4116,"title":{},"body":{"components/TextareaComponent.html":{}}}],["false",{"_index":287,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"interfaces/ExtendedMeta.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"classes/Marked.html":{},"classes/Monaco.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{}}}],["fapentosquare",{"_index":4342,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["faplus",{"_index":536,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["faquestion",{"_index":2157,"title":{},"body":{"components/IconComponent.html":{},"components/OptionComponent.html":{}}}],["faquoteleft",{"_index":4117,"title":{},"body":{"components/TextareaComponent.html":{}}}],["fas",{"_index":2136,"title":{},"body":{"components/IconComponent.html":{}}}],["fasignout",{"_index":4195,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["faunderline",{"_index":4118,"title":{},"body":{"components/TextareaComponent.html":{}}}],["fauser",{"_index":3342,"title":{},"body":{"components/SettingsPage.html":{},"components/UpperNavigationComponent.html":{}}}],["fff",{"_index":826,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["field",{"_index":985,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["fields",{"_index":1121,"title":{},"body":{"components/ControlAccessor.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["filename",{"_index":4674,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["files",{"_index":4541,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["fill",{"_index":987,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["filter",{"_index":1450,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["filter((closed",{"_index":2065,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["filter((e",{"_index":1715,"title":{},"body":{"classes/Enum.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["filter((v",{"_index":1710,"title":{},"body":{"classes/Enum.html":{}}}],["filter.label",{"_index":1894,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filter.type",{"_index":1896,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filter.value",{"_index":1891,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtercheckbox",{"_index":1842,"title":{"interfaces/FilterCheckbox.html":{}},"body":{"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"miscellaneous/typealiases.html":{}}}],["filteredprops",{"_index":4042,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["filters",{"_index":1848,"title":{"classes/Filters.html":{}},"body":{"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/functions.html":{}}}],["filters'},{'name",{"_index":159,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["filters(filters",{"_index":1878,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.html",{"_index":1864,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":1863,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.map((filter",{"_index":1880,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.operator",{"_index":3906,"title":{},"body":{"injectables/TaskService.html":{}}}],["filters.operator.ts",{"_index":4458,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filterscomponent",{"_index":158,"title":{"components/FiltersComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["filterscontrol",{"_index":3779,"title":{},"body":{"components/TaskListPage.html":{},"components/ViewOptionsComponent-1.html":{}}}],["filtertype",{"_index":1847,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"miscellaneous/typealiases.html":{}}}],["filtervalue",{"_index":1889,"title":{},"body":{"components/FiltersComponent.html":{}}}],["final",{"_index":3499,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["finally",{"_index":4152,"title":{},"body":{"components/TextareaComponent.html":{}}}],["find",{"_index":4294,"title":{},"body":{"classes/Utils.html":{}}}],["finished",{"_index":350,"title":{},"body":{"injectables/ApiService.html":{},"classes/DialogRef.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["finishing",{"_index":653,"title":{},"body":{"components/BoardPage.html":{}}}],["first",{"_index":714,"title":{},"body":{"components/BoardPage.html":{},"directives/FocusInitialDirective.html":{},"classes/Utils.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["fitness",{"_index":4604,"title":{},"body":{"license.html":{}}}],["flex",{"_index":686,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["floating",{"_index":2272,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["floatinglabel",{"_index":2267,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["fn",{"_index":1006,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["focus",{"_index":842,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FocusInitialDirective.html":{}}}],["focusableoption",{"_index":838,"title":{},"body":{"components/ButtonComponent.html":{}}}],["focused",{"_index":2282,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["focusinitialdirective",{"_index":247,"title":{"directives/FocusInitialDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["folder",{"_index":4686,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["following",{"_index":4584,"title":{},"body":{"license.html":{}}}],["font",{"_index":1034,"title":{},"body":{"components/CheckboxComponent.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["fontawesome",{"_index":2499,"title":{},"body":{"modules/MainModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":2497,"title":{},"body":{"modules/MainModule.html":{}}}],["foreach((c",{"_index":4162,"title":{},"body":{"components/TextareaComponent.html":{}}}],["forgot",{"_index":161,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["forgotpasswordpage",{"_index":160,"title":{"components/ForgotPasswordPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["form",{"_index":29,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"license.html":{}}}],["formarray",{"_index":1873,"title":{},"body":{"components/FiltersComponent.html":{}}}],["format",{"_index":3295,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["formcontrol",{"_index":65,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"classes/TestNgControl.html":{},"components/ViewOptionsComponent-1.html":{}}}],["formcontrol(false",{"_index":3718,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(filter.value",{"_index":1881,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formcontrol(null",{"_index":1513,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/IntegrationGithubComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["formcontrol(projectid",{"_index":1525,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["formcontrol(tasktype.task",{"_index":3715,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(this.taskpriorities[2",{"_index":3717,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(workspaceid",{"_index":1170,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["formcontrolstorypageconfig",{"_index":1919,"title":{"classes/FormControlStoryPageConfig.html":{}},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["formfields",{"_index":3024,"title":{},"body":{"components/RegisterPage.html":{}}}],["formgroup",{"_index":63,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["forms",{"_index":853,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"license.html":{},"additional-documentation/architecture.html":{}}}],["formsmodule",{"_index":2467,"title":{},"body":{"modules/MainModule.html":{}}}],["formvalue",{"_index":1887,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formvalue.push(filter",{"_index":1892,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formvalues",{"_index":101,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.connectwithissueongithub",{"_index":3763,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.createissue",{"_index":3765,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.issueattachgithub",{"_index":3764,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["fortawesome/angular",{"_index":2498,"title":{},"body":{"modules/MainModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":2153,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":595,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["forwards",{"_index":3462,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["found",{"_index":2145,"title":{},"body":{"components/IconComponent.html":{}}}],["fragment",{"_index":2293,"title":{},"body":{"components/InputComponent.html":{}}}],["fragments",{"_index":2292,"title":{},"body":{"components/InputComponent.html":{}}}],["fromevent",{"_index":2214,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["fromevent(document",{"_index":2230,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["full",{"_index":1246,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["fullname",{"_index":1945,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["function",{"_index":996,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{}}}],["functionality",{"_index":4698,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["functions",{"_index":1672,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Enum.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["functions/component",{"_index":3628,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["functions/get",{"_index":1805,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["future",{"_index":4740,"title":{},"body":{"additional-documentation/localization.html":{}}}],["g",{"_index":4052,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"index.html":{}}}],["gb",{"_index":3304,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["general",{"_index":835,"title":{},"body":{"components/ButtonComponent.html":{},"components/ViewOptionsComponent.html":{}}}],["generate",{"_index":1654,"title":{},"body":{"interfaces/EmojiToken.html":{},"injectables/TaskService.html":{}}}],["generates",{"_index":3901,"title":{},"body":{"injectables/TaskService.html":{}}}],["generation",{"_index":2979,"title":{},"body":{"classes/Random.html":{}}}],["generator.js",{"_index":4775,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["geoip",{"_index":4240,"title":{},"body":{"interfaces/UserSession.html":{}}}],["german",{"_index":4719,"title":{},"body":{"additional-documentation/localization.html":{}}}],["germany",{"_index":4720,"title":{},"body":{"additional-documentation/localization.html":{}}}],["get('/user/integration/github",{"_index":2072,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["get(id",{"_index":4374,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["get(projectid",{"_index":2934,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{}}}],["get(url",{"_index":351,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(workspaceid",{"_index":3749,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["getallproperties",{"_index":1804,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{},"miscellaneous/functions.html":{}}}],["getallproperties(obj",{"_index":4498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getallproperties(this._meta.component.prototype",{"_index":1819,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["getassignee",{"_index":2200,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["getcolorbyid",{"_index":4248,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyid(id",{"_index":4250,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyusername",{"_index":4249,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyusername(username",{"_index":4252,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorstyle",{"_index":3443,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["getcolumnscontainerheight",{"_index":540,"title":{},"body":{"components/BoardPage.html":{}}}],["getcolumnscontainerheight(mapkey",{"_index":557,"title":{},"body":{"components/BoardPage.html":{}}}],["getconnectedgithubaccounts",{"_index":1994,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getconnectedprojects",{"_index":3273,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["getconnectedprojects(account",{"_index":1974,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["getcontrol",{"_index":1078,"title":{},"body":{"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"classes/TestNgControl.html":{}}}],["getcontrol(index",{"_index":1869,"title":{},"body":{"components/FiltersComponent.html":{}}}],["getdates",{"_index":3105,"title":{},"body":{"components/SchedulePage.html":{}}}],["geterrors",{"_index":1082,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getfilters",{"_index":1875,"title":{},"body":{"components/FiltersComponent.html":{}}}],["getgithubaccountconnectedprojects",{"_index":1995,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getgithubaccountconnectedprojects(account",{"_index":1976,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["getgithubintegration",{"_index":1996,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getheight",{"_index":2142,"title":{},"body":{"components/IconComponent.html":{}}}],["geticon",{"_index":2138,"title":{},"body":{"components/IconComponent.html":{}}}],["geticondefinition",{"_index":2143,"title":{},"body":{"components/IconComponent.html":{}}}],["getinitialized",{"_index":2668,"title":{},"body":{"classes/Monaco.html":{}}}],["getisanydialogopen",{"_index":1448,"title":{},"body":{"injectables/DialogService.html":{}}}],["getisopen",{"_index":2204,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["getmodel",{"_index":2765,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["getmyself",{"_index":4231,"title":{},"body":{"injectables/UserService.html":{}}}],["getname",{"_index":1076,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getprops",{"_index":3619,"title":{},"body":{"classes/Story.html":{},"classes/StoryTemplate.html":{}}}],["getrenderer",{"_index":2569,"title":{},"body":{"classes/Marked.html":{}}}],["getrequired",{"_index":1073,"title":{},"body":{"components/ControlAccessor.html":{}}}],["gets",{"_index":1356,"title":{},"body":{"classes/DialogRef.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["getselected",{"_index":3144,"title":{},"body":{"components/SelectComponent.html":{}}}],["getselectionedits",{"_index":3168,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["getselectionedits(edits",{"_index":3173,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["getselector",{"_index":3663,"title":{},"body":{"classes/StoryPageConfig.html":{}}}],["getsnakecasename",{"_index":2148,"title":{},"body":{"components/IconComponent.html":{}}}],["getsnapshot",{"_index":3083,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["getstate",{"_index":1339,"title":{},"body":{"classes/DialogRef.html":{}}}],["getstatus",{"_index":3784,"title":{},"body":{"components/TaskListPage.html":{}}}],["getstatus(statusid",{"_index":3797,"title":{},"body":{"components/TaskListPage.html":{}}}],["getstyle",{"_index":2146,"title":{},"body":{"components/IconComponent.html":{}}}],["getsubscription",{"_index":1491,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["getsubtaskscontainerheight",{"_index":3785,"title":{},"body":{"components/TaskListPage.html":{}}}],["getsubtaskscontainerheight(taskid",{"_index":3799,"title":{},"body":{"components/TaskListPage.html":{}}}],["gettasksfromstatus",{"_index":541,"title":{},"body":{"components/BoardPage.html":{}}}],["gettasksfromstatus(statusid",{"_index":561,"title":{},"body":{"components/BoardPage.html":{}}}],["getter",{"_index":2130,"title":{},"body":{"components/IconComponent.html":{}}}],["getting",{"_index":1517,"title":{"index.html":{},"license.html":{}},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"index.html":{}}}],["getvalue",{"_index":1080,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getvalueinrange(selection",{"_index":2766,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["getviewvalue",{"_index":2886,"title":{},"body":{"components/OptionComponent.html":{}}}],["getwidth",{"_index":2141,"title":{},"body":{"components/IconComponent.html":{}}}],["git",{"_index":1982,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["gitaccount",{"_index":1939,"title":{"interfaces/GitAccount.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/SettingsIntegrationsPage.html":{}}}],["gitaccountwithusage",{"_index":1951,"title":{"interfaces/GitAccountWithUsage.html":{}},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["github",{"_index":163,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"additional-documentation/continuos-integration.html":{}}}],["github'},{'name",{"_index":178,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["github.component",{"_index":1215,"title":{},"body":{"modules/DashboardModule.html":{}}}],["github.component.html",{"_index":2353,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.scss",{"_index":2352,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts",{"_index":2351,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:14",{"_index":2361,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:16",{"_index":2367,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:17",{"_index":2360,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:21",{"_index":2366,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:25",{"_index":2363,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:31",{"_index":2364,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:39",{"_index":2362,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:45",{"_index":2365,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.dev",{"_index":2869,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["github/integration",{"_index":1214,"title":{},"body":{"modules/DashboardModule.html":{},"components/IntegrationGithubComponent.html":{}}}],["github/workflows",{"_index":4758,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["githubaccountid",{"_index":2015,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubaccounts",{"_index":1962,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["githubintegration",{"_index":2917,"title":{},"body":{"interfaces/Project.html":{}}}],["githubintegrationpage",{"_index":162,"title":{"components/GithubIntegrationPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["githubissuelist",{"_index":1997,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubissuelist(projectid",{"_index":2027,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubpulllist",{"_index":1998,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubpulllist(projectid",{"_index":2029,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubusername",{"_index":1942,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitintegration",{"_index":1946,"title":{"interfaces/GitIntegration.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitintegrationservice",{"_index":1211,"title":{"injectables/GitIntegrationService.html":{}},"body":{"modules/DashboardModule.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["gitissue",{"_index":1948,"title":{"interfaces/GitIssue.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["gitpull",{"_index":1949,"title":{"interfaces/GitPull.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["gitrepositories",{"_index":1947,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitrepository",{"_index":1944,"title":{"interfaces/GitRepository.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IntegrationGithubComponent.html":{}}}],["give",{"_index":989,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["given",{"_index":1438,"title":{},"body":{"injectables/DialogService.html":{},"classes/Enum.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{}}}],["global",{"_index":4518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["go",{"_index":4535,"title":{},"body":{"index.html":{}}}],["going",{"_index":1270,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["goods",{"_index":4620,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4641,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":952,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["greater",{"_index":4503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["green",{"_index":3452,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["group",{"_index":922,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{}}}],["group'},{'name",{"_index":183,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["group.component",{"_index":3329,"title":{},"body":{"modules/SettingsModule.html":{}}}],["group.component.html",{"_index":2402,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.scss",{"_index":2401,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts",{"_index":2400,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts:13",{"_index":2404,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts:9",{"_index":2403,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group/list",{"_index":2399,"title":{},"body":{"components/ListGroupComponent.html":{},"modules/SettingsModule.html":{}}}],["grouped",{"_index":4693,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["grouping",{"_index":4362,"title":{},"body":{"interfaces/Workspace.html":{}}}],["grow",{"_index":2295,"title":{},"body":{"components/InputComponent.html":{},"components/MainViewComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{}}}],["guard",{"_index":2408,"title":{"guards/LoggedInUsersGuard.html":{}},"body":{"overview.html":{},"additional-documentation/architecture.html":{}}}],["guard.ts",{"_index":4708,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["guards",{"_index":2409,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"additional-documentation/architecture.html":{}}}],["h1",{"_index":4171,"title":{},"body":{"components/TextareaComponent.html":{}}}],["h2",{"_index":955,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/TextareaComponent.html":{}}}],["h3",{"_index":726,"title":{},"body":{"components/BoardPage.html":{},"components/TextareaComponent.html":{}}}],["h4",{"_index":2405,"title":{},"body":{"components/ListGroupComponent.html":{},"components/TextareaComponent.html":{}}}],["h5",{"_index":4176,"title":{},"body":{"components/TextareaComponent.html":{}}}],["h6",{"_index":4178,"title":{},"body":{"components/TextareaComponent.html":{}}}],["h:mm",{"_index":3385,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["handleerror",{"_index":2421,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["handleerror(error",{"_index":2424,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["has(object",{"_index":4284,"title":{},"body":{"classes/Utils.html":{}}}],["hasgithubintegration",{"_index":1999,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["hasgithubintegration(projectid",{"_index":2031,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["header",{"_index":716,"title":{},"body":{"components/BoardPage.html":{},"components/CardComponent.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["headers",{"_index":3046,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["heading",{"_index":819,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/SchedulePage.html":{}}}],["height",{"_index":687,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["hello",{"_index":4675,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["here",{"_index":1273,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"index.html":{}}}],["hh:mm",{"_index":799,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["hidden",{"_index":705,"title":{},"body":{"components/BoardPage.html":{},"components/DialogOutletComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{}}}],["hide",{"_index":1282,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["hidenavigation",{"_index":1249,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["high",{"_index":3859,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["highest",{"_index":3861,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["highlight.js",{"_index":4109,"title":{},"body":{"components/TextareaComponent.html":{},"dependencies.html":{}}}],["highly",{"_index":3262,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["hint",{"_index":1639,"title":{},"body":{"interfaces/EmojiToken.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["hljs",{"_index":4108,"title":{},"body":{"components/TextareaComponent.html":{}}}],["hljs.configure",{"_index":4124,"title":{},"body":{"components/TextareaComponent.html":{}}}],["hljs.highlightelement(c",{"_index":4163,"title":{},"body":{"components/TextareaComponent.html":{}}}],["holder",{"_index":4609,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4596,"title":{},"body":{"license.html":{}}}],["hook",{"_index":1507,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"directives/FocusInitialDirective.html":{},"components/WorkspacesListPage.html":{}}}],["host",{"_index":282,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["host.focused",{"_index":2298,"title":{},"body":{"components/InputComponent.html":{}}}],["host.ng",{"_index":2303,"title":{},"body":{"components/InputComponent.html":{}}}],["host:not(.focused",{"_index":2301,"title":{},"body":{"components/InputComponent.html":{}}}],["hostbinding",{"_index":300,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/DialogOutletComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/SnackbarComponent.html":{}}}],["hostbinding('class.focused",{"_index":2281,"title":{},"body":{"components/InputComponent.html":{}}}],["hostbinding('class.important",{"_index":299,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["hostbinding('style.animation",{"_index":3441,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["hostbinding('style.height",{"_index":2170,"title":{},"body":{"components/IconComponent.html":{}}}],["hostbinding('style.width",{"_index":1304,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/IconComponent.html":{}}}],["hostbindings",{"_index":269,"title":{},"body":{"components/AlertDialog.html":{},"components/DialogOutletComponent.html":{},"components/IconComponent.html":{},"components/SnackbarComponent.html":{}}}],["hostlistener",{"_index":1045,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hostlistener('click",{"_index":1044,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hostlisteners",{"_index":1040,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hosts",{"_index":2125,"title":{},"body":{"components/IconComponent.html":{}}}],["hover",{"_index":753,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["hr",{"_index":4179,"title":{},"body":{"components/TextareaComponent.html":{}}}],["html",{"_index":116,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["htmlelement",{"_index":558,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["http",{"_index":362,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://localhost:4200",{"_index":4539,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":2466,"title":{},"body":{"modules/MainModule.html":{}}}],["httpclient",{"_index":335,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["httpclientmodule",{"_index":2465,"title":{},"body":{"modules/MainModule.html":{}}}],["httpcontext",{"_index":3052,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httpevent",{"_index":1733,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":1729,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpheaders",{"_index":3053,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httpinterceptor",{"_index":1734,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpparams",{"_index":3055,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httprequest",{"_index":1728,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["https://google.com",{"_index":4166,"title":{},"body":{"components/TextareaComponent.html":{}}}],["https://nodejs.org/en",{"_index":4529,"title":{},"body":{"index.html":{}}}],["https://twemoji.maxcdn.com",{"_index":1617,"title":{},"body":{"classes/Emoji.html":{}}}],["https://workflow.adiantek.ovh/${this.form.value.language}/settings/localization",{"_index":3316,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["hue",{"_index":4258,"title":{},"body":{"classes/UserUtils.html":{}}}],["human",{"_index":4318,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/localization.html":{}}}],["i18n",{"_index":4734,"title":{},"body":{"additional-documentation/localization.html":{}}}],["icon",{"_index":701,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icon'},{'name",{"_index":166,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icon(value",{"_index":2158,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.html",{"_index":2111,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":2110,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.hide",{"_index":874,"title":{},"body":{"components/ButtonComponent.html":{}}}],["icon.pipe",{"_index":4016,"title":{},"body":{"modules/TasksModule.html":{}}}],["icon.pipe.ts",{"_index":3850,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskTypeIconPipe.html":{}}}],["icon.pipe.ts:10",{"_index":3963,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["icon.pipe.ts:7",{"_index":3852,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["iconcomponent",{"_index":165,"title":{"components/IconComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icondefinition",{"_index":844,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"components/OptionComponent.html":{}}}],["iconname",{"_index":2133,"title":{},"body":{"components/IconComponent.html":{}}}],["iconprefix",{"_index":2135,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":598,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["id",{"_index":747,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"components/NavElementWorkspaceComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{}}}],["id).subscribe",{"_index":2599,"title":{},"body":{"components/MemberListComponent.html":{}}}],["identifier",{"_index":1762,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"injectables/ProjectService.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"injectables/WorkspaceService.html":{}}}],["idof",{"_index":542,"title":{},"body":{"components/BoardPage.html":{}}}],["idof(o",{"_index":564,"title":{},"body":{"components/BoardPage.html":{}}}],["ids",{"_index":2621,"title":{},"body":{"injectables/MemberService.html":{}}}],["ignore",{"_index":1099,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["ignored_properties",{"_index":1808,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["ignored_properties.includes(property",{"_index":1835,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["ignoreevent",{"_index":4138,"title":{},"body":{"components/TextareaComponent.html":{}}}],["image",{"_index":946,"title":{},"body":{"components/ChangePasswordPage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"modules/EmailsRoutingModule.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"modules/TasksRoutingModule.html":{}}}],["img",{"_index":2650,"title":{},"body":{"components/MockPage.html":{}}}],["implemented",{"_index":1404,"title":{},"body":{"classes/DialogRef.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectPage.html":{},"interceptors/ErrorInterceptor.html":{},"directives/FocusInitialDirective.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/WorkspacesListPage.html":{}}}],["implied",{"_index":4599,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["import('../settings/settings.module').then((m",{"_index":1247,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["import('../tasks/tasks.module').then((m",{"_index":1257,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./dashboard/dashboard.module').then((m",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./emails/emails.module').then((m",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./messages/messages.module').then((m",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":267,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/architecture.html":{}}}],["important_data",{"_index":3022,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["importexports",{"_index":2543,"title":{},"body":{"modules/MainModule.html":{}}}],["imports",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"interfaces/ExtendedMeta.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"classes/StoryPageConfig.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{}}}],["imports/no",{"_index":4107,"title":{},"body":{"components/TextareaComponent.html":{}}}],["incidental",{"_index":4613,"title":{},"body":{"license.html":{}}}],["include",{"_index":817,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["included",{"_index":4770,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["including",{"_index":4601,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":2991,"title":{},"body":{"classes/Random.html":{}}}],["increase",{"_index":3265,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["independent",{"_index":4521,"title":{},"body":{"index.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":1754,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["indexes",{"_index":3194,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["indexes.map((line",{"_index":3196,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["indexof",{"_index":4305,"title":{},"body":{"classes/Utils.html":{}}}],["indicate",{"_index":288,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["indicates",{"_index":305,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["indirect",{"_index":4612,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["infomracja",{"_index":3249,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["information",{"_index":847,"title":{},"body":{"components/ButtonComponent.html":{},"components/ControlAccessor.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/StatusService.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["information's",{"_index":4665,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["inherited",{"_index":982,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["init",{"_index":2570,"title":{},"body":{"classes/Marked.html":{},"classes/Monaco.html":{},"classes/SelectionEditPlugin.html":{}}}],["init(prototype",{"_index":3175,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["initassigneechanging",{"_index":3786,"title":{},"body":{"components/TaskListPage.html":{}}}],["initial",{"_index":4184,"title":{},"body":{"components/TextareaComponent.html":{}}}],["initial.directive",{"_index":2530,"title":{},"body":{"modules/MainModule.html":{}}}],["initial.directive.ts",{"_index":1900,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initial.directive.ts:19",{"_index":1907,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initial.directive.ts:9",{"_index":1905,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initialization",{"_index":1001,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["initialize",{"_index":1064,"title":{},"body":{"components/ControlAccessor.html":{},"directives/FocusInitialDirective.html":{}}}],["initialized",{"_index":2664,"title":{},"body":{"classes/Monaco.html":{}}}],["inject",{"_index":72,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["inject(mat_dialog_data",{"_index":58,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["injectable",{"_index":322,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["injectables",{"_index":324,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"overview.html":{}}}],["injection",{"_index":3879,"title":{},"body":{"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["injector",{"_index":1287,"title":{},"body":{"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{}}}],["injector.create",{"_index":1325,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["injects",{"_index":273,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["inline",{"_index":1635,"title":{},"body":{"interfaces/EmojiToken.html":{},"components/ForgotPasswordPage.html":{},"components/TextareaComponent.html":{}}}],["input",{"_index":168,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["input'},{'name",{"_index":171,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["input.component.html",{"_index":2266,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":2265,"title":{},"body":{"components/InputComponent.html":{}}}],["input::placeholder",{"_index":2302,"title":{},"body":{"components/InputComponent.html":{}}}],["inputassigneecomponent",{"_index":167,"title":{"components/InputAssigneeComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["inputcomponent",{"_index":170,"title":{"components/InputComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["inputdatetimecomponent",{"_index":172,"title":{"components/InputDateTimeComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["inputs",{"_index":768,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/DialogOutletComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["inputstring",{"_index":4303,"title":{},"body":{"classes/Utils.html":{}}}],["inserttextafterselection",{"_index":2687,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["inserttextafterselection(editor",{"_index":2701,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["inserttextat",{"_index":2688,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["inserttextat(editor",{"_index":2704,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["inserttextbeforeandaftereachselection",{"_index":2689,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["inserttextbeforeandaftereachselection(editor",{"_index":2707,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["inserttextbeforeselection",{"_index":2690,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["inserttextbeforeselection(editor",{"_index":2712,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["insiders",{"_index":2873,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["insiders://vscode.git/clone?url=https://github.com/${project.githubintegration",{"_index":2867,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["install",{"_index":4526,"title":{},"body":{"index.html":{}}}],["installand",{"_index":4533,"title":{},"body":{"index.html":{}}}],["installation_id",{"_index":2100,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["installationid",{"_index":2043,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["instance",{"_index":277,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"classes/Monaco.html":{}}}],["instance.__proto__",{"_index":2681,"title":{},"body":{"classes/Monaco.html":{}}}],["instances",{"_index":4517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instead",{"_index":3689,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"index.html":{}}}],["int",{"_index":3050,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["integration",{"_index":164,"title":{"additional-documentation/continuos-integration.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/continuos-integration.html":{}}}],["integration.gitrepositories",{"_index":2373,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["integration.interface",{"_index":1957,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["integration.interface.ts",{"_index":1941,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["integration.page",{"_index":1243,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["integration.page.html",{"_index":2097,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.scss",{"_index":2096,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts",{"_index":2095,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts:10",{"_index":2098,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts:16",{"_index":2099,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.service",{"_index":1238,"title":{},"body":{"modules/DashboardModule.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["integration.service.ts",{"_index":1981,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:105",{"_index":2021,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:109",{"_index":2030,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:114",{"_index":2011,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:121",{"_index":2023,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:132",{"_index":2034,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:137",{"_index":2025,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:25",{"_index":2002,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:33",{"_index":2044,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:50",{"_index":2042,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:56",{"_index":2026,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:60",{"_index":2005,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:66",{"_index":2024,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:81",{"_index":2013,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:85",{"_index":2019,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:89",{"_index":2032,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:93",{"_index":2028,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:98",{"_index":2009,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration/github",{"_index":1242,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/GithubIntegrationPage.html":{}}}],["integrationentrycomponent",{"_index":175,"title":{"components/IntegrationEntryComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["integrationgithubcomponent",{"_index":177,"title":{"components/IntegrationGithubComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["integrations",{"_index":1959,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{}}}],["integrations'},{'name",{"_index":214,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["integrations.page",{"_index":3331,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["integrations.page.html",{"_index":1960,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.scss",{"_index":1961,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts",{"_index":1954,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:17",{"_index":3274,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:21",{"_index":3278,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:25",{"_index":3277,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:38",{"_index":3275,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:44",{"_index":3276,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations/settings",{"_index":1953,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["intercept",{"_index":1725,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":1727,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":1720,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1722,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptors/error.interceptor",{"_index":2533,"title":{},"body":{"modules/MainModule.html":{}}}],["interface",{"_index":86,"title":{"interfaces/AddMemberDialogData.html":{},"interfaces/AlertDialogData.html":{},"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"interfaces/ModifyUser.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SelectionEditOperation.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/StoryConfig.html":{},"interfaces/Task.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"interfaces/ModifyUser.html":{},"classes/MonacoExtended.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SelectionEditOperation.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{},"additional-documentation/localization.html":{}}}],["interfaces",{"_index":256,"title":{},"body":{"interfaces/AddMemberDialogData.html":{},"interfaces/AlertDialogData.html":{},"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"interfaces/ModifyUser.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SelectionEditOperation.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/StoryConfig.html":{},"interfaces/Task.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["interfaces/project.interface",{"_index":2939,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{}}}],["interfaces/request",{"_index":371,"title":{},"body":{"injectables/ApiService.html":{}}}],["interfaces/session.interface",{"_index":3372,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["interfaces/status.interface",{"_index":605,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{}}}],["interfaces/task.interface",{"_index":606,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["interfaces/workspace.interface",{"_index":2963,"title":{},"body":{"components/ProjectsListPage.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["interruption",{"_index":4625,"title":{},"body":{"license.html":{}}}],["interval",{"_index":2051,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["interval(100).pipe",{"_index":2063,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["invalid",{"_index":2305,"title":{},"body":{"components/InputComponent.html":{}}}],["invalid.ng",{"_index":1029,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["ip",{"_index":4241,"title":{},"body":{"interfaces/UserSession.html":{}}}],["isanydialogopen",{"_index":1417,"title":{},"body":{"injectables/DialogService.html":{}}}],["isbuttondisabled",{"_index":4199,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["isdisabled",{"_index":1015,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["isfiltersopen",{"_index":4349,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["isgithubintegrationavailable",{"_index":3695,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["isletter",{"_index":4282,"title":{},"body":{"classes/Utils.html":{}}}],["isletter(char",{"_index":4286,"title":{},"body":{"classes/Utils.html":{}}}],["isloggedin",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnumeric",{"_index":1675,"title":{},"body":{"classes/Enum.html":{}}}],["isnumeric(enumtype",{"_index":1689,"title":{},"body":{"classes/Enum.html":{}}}],["isopen",{"_index":2180,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["isopen(val",{"_index":2227,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["isownerofrepository",{"_index":2000,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["isownerofrepository(repositoryname",{"_index":2033,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["issubtasksrow",{"_index":3780,"title":{},"body":{"components/TaskListPage.html":{}}}],["issue",{"_index":2008,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"miscellaneous/enumerations.html":{}}}],["issue.title",{"_index":3771,"title":{},"body":{"components/TaskDialog.html":{}}}],["issueattachgithub",{"_index":3690,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["issuelist",{"_index":3696,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["issuenumbergithub",{"_index":3762,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["it's",{"_index":2037,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsAccountPage.html":{},"index.html":{},"additional-documentation/architecture.html":{}}}],["it\\'s",{"_index":3272,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["italian",{"_index":4726,"title":{},"body":{"additional-documentation/localization.html":{}}}],["italiano",{"_index":3308,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["italy",{"_index":4727,"title":{},"body":{"additional-documentation/localization.html":{}}}],["items",{"_index":718,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["javascript\\n",{"_index":4168,"title":{},"body":{"components/TextareaComponent.html":{}}}],["jego",{"_index":3258,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["jesli",{"_index":3247,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["join",{"_index":4046,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"classes/Utils.html":{}}}],["js",{"_index":1605,"title":{},"body":{"classes/Emoji.html":{},"modules/MainModule.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{}}}],["json",{"_index":379,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["json.parse(localstorage.getitem(persistentkey",{"_index":2913,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["json.stringify([...this.entries",{"_index":2910,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["justify",{"_index":720,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["k",{"_index":1707,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"classes/SelectionEditPlugin.html":{}}}],["karma",{"_index":4552,"title":{},"body":{"index.html":{}}}],["key",{"_index":1486,"title":{},"body":{"classes/ESet.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"classes/PersistentMap.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"classes/Utils.html":{}}}],["keydown",{"_index":1376,"title":{},"body":{"classes/DialogRef.html":{}}}],["keydownevents",{"_index":1340,"title":{},"body":{"classes/DialogRef.html":{}}}],["keyframes",{"_index":3467,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["keys",{"_index":1676,"title":{},"body":{"classes/Enum.html":{},"classes/Utils.html":{}}}],["keys(enumtype",{"_index":1697,"title":{},"body":{"classes/Enum.html":{}}}],["key}]=\"${key",{"_index":4045,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["kingdom",{"_index":4722,"title":{},"body":{"additional-documentation/localization.html":{}}}],["konta",{"_index":3246,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["konto",{"_index":3255,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["label",{"_index":694,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["label'},{'name",{"_index":228,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["label.component",{"_index":4009,"title":{},"body":{"modules/TasksModule.html":{}}}],["label.component.html",{"_index":3521,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.scss",{"_index":3520,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts",{"_index":3519,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:16",{"_index":3530,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:17",{"_index":3525,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:18",{"_index":3527,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:19",{"_index":3528,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:20",{"_index":3526,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:28",{"_index":3524,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:34",{"_index":3538,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:36",{"_index":3539,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:37",{"_index":3536,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:39",{"_index":3542,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:43",{"_index":3541,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:47",{"_index":3532,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:59",{"_index":3531,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:63",{"_index":3535,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:70",{"_index":3534,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label/status",{"_index":3518,"title":{},"body":{"components/StatusLabelComponent.html":{},"modules/TasksModule.html":{}}}],["label::after",{"_index":2306,"title":{},"body":{"components/InputComponent.html":{}}}],["labels",{"_index":2349,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["landing",{"_index":180,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["landingpagecomponent",{"_index":179,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["language",{"_index":3298,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/TextareaComponent.html":{},"additional-documentation/localization.html":{}}}],["language.name",{"_index":3318,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["languages",{"_index":3284,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"components/TextareaComponent.html":{},"additional-documentation/localization.html":{}}}],["last",{"_index":990,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/WorkspacesListPage.html":{}}}],["lastused",{"_index":4242,"title":{},"body":{"interfaces/UserSession.html":{}}}],["layout",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["leas",{"_index":1693,"title":{},"body":{"classes/Enum.html":{}}}],["leave",{"_index":2605,"title":{},"body":{"injectables/MemberService.html":{}}}],["leave(projectid",{"_index":2611,"title":{},"body":{"injectables/MemberService.html":{}}}],["left",{"_index":697,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["legend",{"_index":115,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["length",{"_index":2755,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/functions.html":{}}}],["length.validator",{"_index":1162,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["length.validator.ts",{"_index":4478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letcontext",{"_index":2383,"title":{"interfaces/LetContext.html":{}},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["letdirective",{"_index":249,"title":{"directives/LetDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["letter",{"_index":4289,"title":{},"body":{"classes/Utils.html":{}}}],["letters",{"_index":4671,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["level",{"_index":1634,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["lg",{"_index":964,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["li",{"_index":2255,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{}}}],["liability",{"_index":4628,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4610,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4281,"title":{},"body":{"classes/Utils.html":{}}}],["library",{"_index":4562,"title":{},"body":{"index.html":{}}}],["libs/monaco/monaco.lib",{"_index":4105,"title":{},"body":{"components/TextareaComponent.html":{}}}],["license",{"_index":3040,"title":{"license.html":{}},"body":{"components/RegisterPage.html":{},"license.html":{}}}],["lifecycle",{"_index":1373,"title":{},"body":{"classes/DialogRef.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"directives/FocusInitialDirective.html":{},"components/WorkspacesListPage.html":{}}}],["limitafter",{"_index":3092,"title":{},"body":{"components/SchedulePage.html":{}}}],["limitbefore",{"_index":3093,"title":{},"body":{"components/SchedulePage.html":{}}}],["limited",{"_index":4602,"title":{},"body":{"license.html":{}}}],["line",{"_index":1093,"title":{},"body":{"components/ControlAccessor.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{}}}],["linenumber",{"_index":2705,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["link",{"_index":1274,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["linkoverride",{"_index":2576,"title":{},"body":{"classes/Marked.html":{},"miscellaneous/functions.html":{}}}],["linkoverride(renderer",{"_index":2581,"title":{},"body":{"classes/Marked.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":182,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"license.html":{},"additional-documentation/localization.html":{}}}],["list'},{'name",{"_index":190,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["list(projectid",{"_index":2613,"title":{},"body":{"injectables/MemberService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["list.component",{"_index":1218,"title":{},"body":{"modules/DashboardModule.html":{}}}],["list.component.html",{"_index":2585,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.scss",{"_index":2584,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts",{"_index":2583,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:13",{"_index":2596,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:15",{"_index":2595,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:18",{"_index":2590,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:21",{"_index":2591,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:24",{"_index":2589,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:33",{"_index":2593,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:39",{"_index":2594,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.page",{"_index":1234,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["list.page.html",{"_index":2953,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.scss",{"_index":2952,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts",{"_index":2951,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:105",{"_index":3803,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:123",{"_index":3791,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:143",{"_index":3796,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:149",{"_index":3794,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:155",{"_index":3801,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:159",{"_index":3800,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:17",{"_index":2962,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:18",{"_index":2961,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:20",{"_index":2960,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:22",{"_index":2955,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:34",{"_index":3809,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:35",{"_index":3806,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:36",{"_index":3807,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:37",{"_index":3808,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:38",{"_index":3805,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:40",{"_index":3814,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:41",{"_index":2957,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:42",{"_index":3817,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:43",{"_index":3816,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:44",{"_index":3813,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:45",{"_index":2959,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{}}}],["list.page.ts:46",{"_index":3804,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:47",{"_index":4399,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:48",{"_index":3815,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:49",{"_index":2956,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:50",{"_index":3810,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:51",{"_index":3811,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:53",{"_index":3812,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:54",{"_index":3788,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:62",{"_index":4395,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:75",{"_index":4398,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:79",{"_index":4401,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:95",{"_index":3798,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:99",{"_index":3789,"title":{},"body":{"components/TaskListPage.html":{}}}],["list/member",{"_index":1217,"title":{},"body":{"modules/DashboardModule.html":{},"components/MemberListComponent.html":{}}}],["list/projects",{"_index":1233,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ProjectsListPage.html":{}}}],["list/task",{"_index":3776,"title":{},"body":{"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["list/workspaces",{"_index":1236,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/WorkspacesListPage.html":{}}}],["listed",{"_index":4732,"title":{},"body":{"additional-documentation/localization.html":{}}}],["listelement",{"_index":2780,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["listgroupcomponent",{"_index":181,"title":{"components/ListGroupComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["lists",{"_index":2615,"title":{},"body":{"injectables/MemberService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["listwithtasks",{"_index":3552,"title":{},"body":{"injectables/StatusService.html":{}}}],["listwithtasks(projectid",{"_index":3563,"title":{},"body":{"injectables/StatusService.html":{}}}],["literal",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"interfaces/StoryConfig.html":{},"interfaces/UserSession.html":{},"interfaces/Workspace.html":{}}}],["load",{"_index":1439,"title":{},"body":{"injectables/DialogService.html":{},"components/WorkspacesListPage.html":{}}}],["loadchildren",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["loadcomponent",{"_index":1283,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["loadcomponent(component",{"_index":1296,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["loader",{"_index":848,"title":{},"body":{"components/ButtonComponent.html":{}}}],["loadgithubintegration",{"_index":1964,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["loadparamsfromurl",{"_index":35,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["loadplugins",{"_index":2663,"title":{},"body":{"classes/Monaco.html":{}}}],["loadproject",{"_index":1495,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["loadproject(id",{"_index":1502,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["loadrepositories",{"_index":2358,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["loads",{"_index":1504,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["loadworkspace",{"_index":1562,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["loadworkspace(id",{"_index":1564,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["loadworkspaces",{"_index":4393,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["local",{"_index":2542,"title":{},"body":{"modules/MainModule.html":{},"components/SettingsSessionsPage.html":{}}}],["locales",{"_index":4735,"title":{},"body":{"additional-documentation/localization.html":{}}}],["localization",{"_index":216,"title":{"additional-documentation/localization.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/localization.html":{}}}],["localization.page",{"_index":3332,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["localization.page.html",{"_index":3282,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.scss",{"_index":3281,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts",{"_index":3280,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:12",{"_index":3300,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:17",{"_index":3314,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:48",{"_index":3297,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:56",{"_index":3286,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:60",{"_index":3287,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:64",{"_index":3288,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization/settings",{"_index":3279,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["localize`are",{"_index":658,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`cancel",{"_index":665,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`close",{"_index":1474,"title":{},"body":{"injectables/DialogService.html":{}}}],["localize`dd",{"_index":3290,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localize`dd.mm.yyyy",{"_index":3293,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localize`delete",{"_index":1477,"title":{},"body":{"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`detach",{"_index":670,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`email",{"_index":3037,"title":{},"body":{"components/RegisterPage.html":{}}}],["localize`epic",{"_index":3989,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`given",{"_index":918,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["localize`high",{"_index":3869,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`highest",{"_index":3870,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`if",{"_index":660,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`issue",{"_index":3984,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`low",{"_index":3867,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`lowest",{"_index":3866,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`medium",{"_index":3868,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`merge",{"_index":664,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`mm/dd/yyyy",{"_index":3292,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localize`ok",{"_index":1779,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`only",{"_index":1856,"title":{},"body":{"classes/Filters.html":{}}}],["localize`something",{"_index":1776,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`subtask",{"_index":3994,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`success",{"_index":1775,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`task",{"_index":3975,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`user",{"_index":2444,"title":{},"body":{"components/LoginPage.html":{},"pipes/TaskTypePipe.html":{}}}],["localize`username",{"_index":3038,"title":{},"body":{"components/RegisterPage.html":{}}}],["localize`workspace",{"_index":4390,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["localize`wrong",{"_index":2448,"title":{},"body":{"components/LoginPage.html":{}}}],["localize`yyyy",{"_index":3289,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localized",{"_index":4716,"title":{},"body":{"additional-documentation/localization.html":{}}}],["localstorage.getitem('logged",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["localstorage.getitem(persistentkey",{"_index":2912,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["localstorage.removeitem('logged",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["localstorage.removeitem(this._persistentkey",{"_index":2903,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["localstorage.setitem('logged",{"_index":2433,"title":{},"body":{"components/LoginPage.html":{}}}],["localstorage.setitem(this._persistentkey",{"_index":2909,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["located",{"_index":4700,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["location.href",{"_index":3315,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["location.reload",{"_index":676,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["lodash",{"_index":1802,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/SelectionEditPlugin.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/TemplateDecoratorConfig.html":{},"dependencies.html":{}}}],["log",{"_index":1272,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/LoginPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/UpperNavigationComponent.html":{}}}],["logged",{"_index":2446,"title":{},"body":{"components/LoginPage.html":{}}}],["loggedinusersguard",{"_index":432,"title":{"guards/LoggedInUsersGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoggedInUsersGuard.html":{}}}],["logic",{"_index":4692,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["login",{"_index":481,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/UpperNavigationComponent.html":{}}}],["login'},{'name",{"_index":185,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["login(this.form.value",{"_index":2436,"title":{},"body":{"components/LoginPage.html":{}}}],["login(undefined",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.page.html",{"_index":2419,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":2418,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":184,"title":{"components/LoginPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["loginsubscription",{"_index":2420,"title":{},"body":{"components/LoginPage.html":{}}}],["logo",{"_index":942,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{}}}],["logout",{"_index":482,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/RestoreAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["loss",{"_index":4622,"title":{},"body":{"license.html":{}}}],["low",{"_index":3855,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["lower",{"_index":4670,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["lowest",{"_index":3853,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["m",{"_index":1783,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["m.authmodule",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.dashboardmodule",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.emailsmodule",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.messagesmodule",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingsmodule",{"_index":1248,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["m.tasksmodule",{"_index":1258,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["m_w",{"_index":2974,"title":{},"body":{"classes/Random.html":{}}}],["m_z",{"_index":2975,"title":{},"body":{"classes/Random.html":{}}}],["ma",{"_index":3256,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["mail",{"_index":4524,"title":{},"body":{"index.html":{}}}],["maila",{"_index":3253,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["main",{"_index":187,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["main/_main.module",{"_index":1796,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"modules/SettingsModule.html":{},"classes/StoryPageConfig.html":{}}}],["main/classes/control",{"_index":1024,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["main/classes/dialog",{"_index":1306,"title":{},"body":{"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{}}}],["main/classes/e",{"_index":3818,"title":{},"body":{"components/TaskListPage.html":{}}}],["main/classes/enum.class",{"_index":3734,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["main/classes/filters.class",{"_index":3820,"title":{},"body":{"components/TaskListPage.html":{}}}],["main/classes/persistent",{"_index":599,"title":{},"body":{"components/BoardPage.html":{}}}],["main/classes/random.class",{"_index":4254,"title":{},"body":{"classes/UserUtils.html":{}}}],["main/components/snackbar/snackbar.interface",{"_index":3490,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["main/decorators/service",{"_index":4383,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["main/decorators/service.decorator",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SnackbarService.html":{}}}],["main/dialogs/alert/alert.dialog",{"_index":3903,"title":{},"body":{"injectables/TaskService.html":{}}}],["main/directives/view",{"_index":1308,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["main/interfaces/filters.interface",{"_index":1854,"title":{},"body":{"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent-1.html":{}}}],["main/libs/emoji/emoji",{"_index":1626,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["main/libs/emoji/emoji.lib",{"_index":1627,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["main/libs/marked/marked.lib",{"_index":4119,"title":{},"body":{"components/TextareaComponent.html":{}}}],["main/operators/apply",{"_index":3905,"title":{},"body":{"injectables/TaskService.html":{}}}],["main/pages/mock/mock.page",{"_index":1240,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["main/services/api.service",{"_index":2050,"title":{},"body":{"injectables/GitIntegrationService.html":{},"injectables/UserService.html":{}}}],["main/services/dialog.service",{"_index":782,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/MainViewComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["main/services/router",{"_index":79,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["main/services/snackbar.service",{"_index":3445,"title":{},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/TaskService.html":{}}}],["main/validators/email.validator",{"_index":3021,"title":{},"body":{"components/RegisterPage.html":{}}}],["main/validators/max",{"_index":1161,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["main/validators/password.validator",{"_index":925,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["main/validators/required.validator",{"_index":926,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{}}}],["main/validators/same",{"_index":928,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["mainly",{"_index":4714,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["mainmodule",{"_index":410,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"interfaces/ExtendedMeta.html":{},"modules/MainModule.html":{},"modules/SettingsModule.html":{},"classes/StoryPageConfig.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["mainmodule.injector",{"_index":2555,"title":{},"body":{"modules/MainModule.html":{}}}],["maintained",{"_index":4662,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["mainviewcomponent",{"_index":186,"title":{"components/MainViewComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["make",{"_index":4273,"title":{},"body":{"classes/UserUtils.html":{},"additional-documentation/localization.html":{}}}],["making",{"_index":4742,"title":{},"body":{"additional-documentation/localization.html":{}}}],["manage",{"_index":1407,"title":{},"body":{"injectables/DialogService.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["management",{"_index":4367,"title":{},"body":{"injectables/WorkspaceService.html":{},"index.html":{}}}],["map",{"_index":771,"title":{},"body":{"components/BoardTaskComponent.html":{},"injectables/DialogService.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/SinglePersonSchedule.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["map(([key",{"_index":4044,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["map(([statuses",{"_index":3577,"title":{},"body":{"injectables/StatusService.html":{}}}],["map(([tasks",{"_index":3949,"title":{},"body":{"injectables/TaskService.html":{}}}],["map((accounts",{"_index":1967,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["map((c",{"_index":4266,"title":{},"body":{"classes/UserUtils.html":{}}}],["map((character",{"_index":4307,"title":{},"body":{"classes/Utils.html":{}}}],["map((e",{"_index":1718,"title":{},"body":{"classes/Enum.html":{}}}],["map((format",{"_index":3294,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["map((members",{"_index":2629,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["map((projects",{"_index":2091,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["map((response",{"_index":2055,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["map((v",{"_index":1713,"title":{},"body":{"classes/Enum.html":{}}}],["map((workspace",{"_index":2967,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["map((workspaces",{"_index":2946,"title":{},"body":{"injectables/ProjectService.html":{},"components/UpperNavigationComponent.html":{}}}],["map(projectid",{"_index":2616,"title":{},"body":{"injectables/MemberService.html":{}}}],["map.class",{"_index":600,"title":{},"body":{"components/BoardPage.html":{}}}],["map.class.ts",{"_index":2890,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["map.class.ts:11",{"_index":2899,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:17",{"_index":2902,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:23",{"_index":2900,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:27",{"_index":2896,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:6",{"_index":2897,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.delete(uid",{"_index":3494,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["map.set(uid",{"_index":3492,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["mapkey",{"_index":560,"title":{},"body":{"components/BoardPage.html":{}}}],["marcin",{"_index":4574,"title":{},"body":{"license.html":{}}}],["margin",{"_index":691,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["mark",{"_index":3398,"title":{},"body":{"components/SettingsSessionsPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["markdown",{"_index":4128,"title":{},"body":{"components/TextareaComponent.html":{}}}],["marked",{"_index":1628,"title":{"classes/Marked.html":{}},"body":{"interfaces/EmojiToken.html":{},"classes/Marked.html":{},"components/TextareaComponent.html":{},"dependencies.html":{}}}],["marked._initialized",{"_index":2578,"title":{},"body":{"classes/Marked.html":{}}}],["marked.getrenderer",{"_index":4103,"title":{},"body":{"components/TextareaComponent.html":{}}}],["marked.init",{"_index":4122,"title":{},"body":{"components/TextareaComponent.html":{}}}],["marked.js",{"_index":1640,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["marked.parse(this.editor?.getvalue",{"_index":4159,"title":{},"body":{"components/TextareaComponent.html":{}}}],["marked.rendererextension",{"_index":1669,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["marked.tokenizerextension",{"_index":1668,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["marked.use",{"_index":2579,"title":{},"body":{"classes/Marked.html":{}}}],["mask",{"_index":2976,"title":{},"body":{"classes/Random.html":{}}}],["master",{"_index":4763,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["mat",{"_index":870,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/IconComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["mat_dialog_data",{"_index":75,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/DialogOutletComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["matautocompletemodule",{"_index":2468,"title":{},"body":{"modules/MainModule.html":{}}}],["matbadgemodule",{"_index":2470,"title":{},"body":{"modules/MainModule.html":{}}}],["match",{"_index":1641,"title":{},"body":{"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Utils.html":{}}}],["match(error",{"_index":1788,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["match(value",{"_index":1784,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["match[0",{"_index":1656,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["match[1",{"_index":1658,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["matcheckboxmodule",{"_index":2472,"title":{},"body":{"modules/MainModule.html":{}}}],["matching",{"_index":255,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["matchsequence",{"_index":1650,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["matchsequence[0",{"_index":1652,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["matchsequence[1",{"_index":1653,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["matdatepickermodule",{"_index":2476,"title":{},"body":{"modules/MainModule.html":{}}}],["matdialog",{"_index":1419,"title":{},"body":{"injectables/DialogService.html":{}}}],["matdialogmodule",{"_index":2478,"title":{},"body":{"modules/MainModule.html":{}}}],["matdialogref",{"_index":41,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["matdialogstate",{"_index":1374,"title":{},"body":{"classes/DialogRef.html":{}}}],["material",{"_index":2108,"title":{},"body":{"components/IconComponent.html":{},"modules/MainModule.html":{}}}],["materials",{"_index":4593,"title":{},"body":{"license.html":{}}}],["matformfieldmodule",{"_index":2479,"title":{},"body":{"modules/MainModule.html":{}}}],["math.abs(startline",{"_index":3192,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["math.min(1000",{"_index":4144,"title":{},"body":{"components/TextareaComponent.html":{}}}],["math.min(500",{"_index":4141,"title":{},"body":{"components/TextareaComponent.html":{}}}],["math.min(startline",{"_index":3193,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["math.random",{"_index":2994,"title":{},"body":{"classes/Random.html":{}}}],["maticonmodule",{"_index":2481,"title":{},"body":{"modules/MainModule.html":{}}}],["matinputmodule",{"_index":2483,"title":{},"body":{"modules/MainModule.html":{}}}],["matmenumodule",{"_index":2485,"title":{},"body":{"modules/MainModule.html":{}}}],["matnativedatemodule",{"_index":2474,"title":{},"body":{"modules/MainModule.html":{}}}],["matprogressspinnermodule",{"_index":2487,"title":{},"body":{"modules/MainModule.html":{}}}],["matselectmodule",{"_index":2489,"title":{},"body":{"modules/MainModule.html":{}}}],["mattablemodule",{"_index":2491,"title":{},"body":{"modules/MainModule.html":{}}}],["mattabsmodule",{"_index":2493,"title":{},"body":{"modules/MainModule.html":{}}}],["mattooltipmodule",{"_index":2495,"title":{},"body":{"modules/MainModule.html":{}}}],["max",{"_index":707,"title":{},"body":{"components/BoardPage.html":{},"components/InputComponent.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["maxlength",{"_index":4321,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["maxlengthvalidator",{"_index":1160,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"miscellaneous/functions.html":{}}}],["maxlengthvalidator(50",{"_index":1154,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["maxlengthvalidator(length",{"_index":4502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["md",{"_index":963,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["medium",{"_index":3857,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["member",{"_index":19,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["member.dialog",{"_index":1159,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{}}}],["member.dialog.html",{"_index":24,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.scss",{"_index":22,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.ts",{"_index":12,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.ts:21",{"_index":69,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:22",{"_index":70,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:24",{"_index":67,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:26",{"_index":45,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:29",{"_index":59,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:34",{"_index":56,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:41",{"_index":55,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:47",{"_index":51,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:58",{"_index":54,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.interface",{"_index":591,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["member.interface.ts",{"_index":2922,"title":{},"body":{"interfaces/ProjectMember.html":{}}}],["member.user.name",{"_index":2243,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.name[0",{"_index":2242,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.surname",{"_index":2244,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.username",{"_index":2245,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member/add",{"_index":11,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{}}}],["memberlist",{"_index":1137,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/MemberListComponent.html":{}}}],["memberlistcomponent",{"_index":189,"title":{"components/MemberListComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["members",{"_index":109,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{}}}],["members'},{'name",{"_index":144,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["members(members",{"_index":2219,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["members.page",{"_index":1225,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["members.page.html",{"_index":1135,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.scss",{"_index":1134,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts",{"_index":1133,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts:106",{"_index":1500,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:116",{"_index":1498,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:122",{"_index":1510,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:140",{"_index":1505,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:21",{"_index":1153,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:25",{"_index":1512,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:26",{"_index":1155,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:30",{"_index":1514,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:33",{"_index":1151,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:35",{"_index":1156,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts:36",{"_index":1522,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:37",{"_index":1157,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:39",{"_index":1142,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:42",{"_index":1518,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:46",{"_index":1516,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:48",{"_index":1520,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:49",{"_index":1497,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:65",{"_index":1143,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:74",{"_index":1150,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:80",{"_index":1503,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:91",{"_index":1511,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.reduce((acc",{"_index":2630,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["members.values",{"_index":2225,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["members/create",{"_index":1132,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["members/edit",{"_index":1229,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{}}}],["membersarray",{"_index":2224,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["memberservice",{"_index":551,"title":{"injectables/MemberService.html":{}},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["menu",{"_index":4183,"title":{},"body":{"components/TextareaComponent.html":{}}}],["merchantability",{"_index":4603,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1801,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{}}}],["merge(this._story",{"_index":3648,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["mergeconfig",{"_index":3600,"title":{},"body":{"classes/Story.html":{}}}],["mergeconfig(config",{"_index":3616,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["merged",{"_index":662,"title":{},"body":{"components/BoardPage.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["mergedpulllist",{"_index":3679,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["mergemap",{"_index":2052,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["mergemap((url",{"_index":2057,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["message",{"_index":261,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{},"injectables/TaskService.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"miscellaneous/functions.html":{}}}],["messages",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarNavigationComponent.html":{},"index.html":{}}}],["messages.routing",{"_index":2638,"title":{},"body":{"modules/MessagesModule.html":{}}}],["messagesmodule",{"_index":2633,"title":{"modules/MessagesModule.html":{}},"body":{"modules/MessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesroutingmodule",{"_index":2636,"title":{"modules/MessagesRoutingModule.html":{}},"body":{"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["met",{"_index":4586,"title":{},"body":{"license.html":{}}}],["meta",{"_index":1794,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["meta['decorators",{"_index":1839,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["method",{"_index":361,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["methodologies",{"_index":4663,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["methods",{"_index":32,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["middle",{"_index":2294,"title":{},"body":{"components/InputComponent.html":{}}}],["min",{"_index":712,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["minimap",{"_index":4132,"title":{},"body":{"components/TextareaComponent.html":{}}}],["minlength",{"_index":4320,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["miragejs",{"_index":4432,"title":{},"body":{"dependencies.html":{}}}],["miscellaneous",{"_index":4442,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mm",{"_index":797,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["mock",{"_index":2642,"title":{},"body":{"components/MockPage.html":{}}}],["mock'},{'name",{"_index":192,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["mock.page.html",{"_index":2644,"title":{},"body":{"components/MockPage.html":{}}}],["mock.page.scss",{"_index":2643,"title":{},"body":{"components/MockPage.html":{}}}],["mockpage",{"_index":191,"title":{"components/MockPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["modal",{"_index":1436,"title":{},"body":{"injectables/DialogService.html":{}}}],["mode",{"_index":2773,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"components/TextareaComponent.html":{}}}],["model",{"_index":1003,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"classes/MonacoExtended.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["model.getlinecontent(selection.endlinenumber",{"_index":2761,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["model.getlinelength(line",{"_index":3198,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["modification",{"_index":4582,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4372,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["modifyuser",{"_index":2656,"title":{"interfaces/ModifyUser.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserWithPrivileges.html":{}}}],["module",{"_index":401,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"additional-documentation/architecture.html":{}}}],["module.ts",{"_index":4689,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["modulemetadata",{"_index":1797,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["modulemetadata(merge",{"_index":1814,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["modules",{"_index":403,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectPage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["moduser",{"_index":4236,"title":{},"body":{"injectables/UserService.html":{}}}],["moment",{"_index":4759,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["monaco",{"_index":2661,"title":{"classes/Monaco.html":{}},"body":{"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"components/TextareaComponent.html":{},"dependencies.html":{}}}],["monaco._initialized",{"_index":2675,"title":{},"body":{"classes/Monaco.html":{}}}],["monaco.editor.endoflinepreference.lf",{"_index":2767,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monaco.editor.icursorstatecomputer",{"_index":4660,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["monaco.editor.iidentifiedsingleeditoperation",{"_index":2730,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["monaco.editor.istandalonecodeeditor",{"_index":2728,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["monaco.init",{"_index":4123,"title":{},"body":{"components/TextareaComponent.html":{}}}],["monaco.loadplugins",{"_index":2676,"title":{},"body":{"classes/Monaco.html":{}}}],["monaco.selection",{"_index":2729,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["monacoeditor",{"_index":2697,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["monacoextended",{"_index":2683,"title":{"classes/MonacoExtended.html":{}},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monacoextended.inserttextat(editor",{"_index":2745,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monacoextended.inserttextbeforeandaftereachselection",{"_index":2775,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monacoextended.removetextbeforeandaftereachselection",{"_index":2774,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monacoextended.selectionendswith(editor",{"_index":2757,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["monacoextended.selectionstartwith(editor",{"_index":2756,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["month",{"_index":3380,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["more",{"_index":4664,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["more_vert",{"_index":2802,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["move",{"_index":652,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"injectables/ProjectService.html":{},"components/TaskListPage.html":{}}}],["moved",{"_index":2928,"title":{},"body":{"injectables/ProjectService.html":{}}}],["moveiteminarray",{"_index":586,"title":{},"body":{"components/BoardPage.html":{}}}],["moveiteminarray(event.container.data",{"_index":647,"title":{},"body":{"components/BoardPage.html":{}}}],["mozliwosc",{"_index":3257,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["multi",{"_index":2547,"title":{},"body":{"modules/MainModule.html":{}}}],["multiple",{"_index":3630,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"index.html":{}}}],["n",{"_index":4167,"title":{},"body":{"components/TextareaComponent.html":{},"classes/UserUtils.html":{}}}],["na",{"_index":3241,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["named",{"_index":4669,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["naming",{"_index":4666,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["native",{"_index":862,"title":{},"body":{"components/ButtonComponent.html":{}}}],["nav",{"_index":194,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navelementcomponent",{"_index":193,"title":{"components/NavElementComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navelementworkspacecomponent",{"_index":196,"title":{"components/NavElementWorkspaceComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navigatebyurl",{"_index":2856,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["navigates",{"_index":1146,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["navigation",{"_index":3401,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation'},{'name",{"_index":222,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navigation.component",{"_index":2520,"title":{},"body":{"modules/MainModule.html":{}}}],["navigation.component.html",{"_index":3403,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.scss",{"_index":3402,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts",{"_index":3400,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:14",{"_index":3406,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:15",{"_index":4202,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:16",{"_index":3408,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:18",{"_index":3407,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:20",{"_index":3405,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:24",{"_index":4207,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:40",{"_index":4217,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:42",{"_index":4212,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:43",{"_index":4215,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:44",{"_index":4213,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:45",{"_index":4214,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:47",{"_index":4211,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:48",{"_index":4210,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:50",{"_index":4204,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:56",{"_index":4206,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:62",{"_index":4205,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:65",{"_index":4208,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:74",{"_index":4203,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:77",{"_index":4209,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation/sidebar",{"_index":2519,"title":{},"body":{"modules/MainModule.html":{},"components/SidebarNavigationComponent.html":{}}}],["navigation/upper",{"_index":2526,"title":{},"body":{"modules/MainModule.html":{},"components/UpperNavigationComponent.html":{}}}],["need",{"_index":1459,"title":{},"body":{"injectables/DialogService.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/RequestOptions.html":{},"components/SettingsAccountPage.html":{},"additional-documentation/localization.html":{}}}],["needed",{"_index":3558,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["negligence",{"_index":4632,"title":{},"body":{"license.html":{}}}],["neutral",{"_index":950,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["new",{"_index":62,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"classes/Marked.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/localization.html":{}}}],["newly",{"_index":1425,"title":{},"body":{"injectables/DialogService.html":{}}}],["newpropsstring",{"_index":4034,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["newstatus",{"_index":631,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatus.final",{"_index":656,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatus.id",{"_index":642,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatusindex",{"_index":627,"title":{},"body":{"components/BoardPage.html":{}}}],["newtask",{"_index":3945,"title":{},"body":{"injectables/TaskService.html":{}}}],["newtask.id",{"_index":3921,"title":{},"body":{"injectables/TaskService.html":{}}}],["newvalue",{"_index":4060,"title":{},"body":{"classes/TestNgControl.html":{}}}],["newworkspaceid",{"_index":1501,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/ProjectService.html":{}}}],["next",{"_index":1092,"title":{},"body":{"components/ControlAccessor.html":{},"interceptors/ErrorInterceptor.html":{},"components/RegisterPage.html":{},"components/TextareaComponent.html":{}}}],["next(value",{"_index":1782,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["next.handle(req).pipe",{"_index":1738,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nextstage",{"_index":3006,"title":{},"body":{"components/RegisterPage.html":{}}}],["ng",{"_index":1897,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TextareaComponent.html":{}}}],["ngafterviewinit",{"_index":1903,"title":{},"body":{"directives/FocusInitialDirective.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["ngcontrol",{"_index":976,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{}}}],["ngcontrol.control?.errors",{"_index":4169,"title":{},"body":{"components/TextareaComponent.html":{}}}],["nglet",{"_index":2385,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["nglet(value",{"_index":2392,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["nglet]'},{'name",{"_index":250,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["ngmodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["ngmoduleconfig",{"_index":2541,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.declarations",{"_index":2551,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.exportdeclarations",{"_index":2552,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.importexports",{"_index":2550,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.imports",{"_index":2549,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.providers",{"_index":2553,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmodulemetadata",{"_index":1799,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["ngneat/until",{"_index":1554,"title":{},"body":{"components/EditProjectPage.html":{},"dependencies.html":{}}}],["ngondestroy",{"_index":543,"title":{},"body":{"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["node",{"_index":2232,"title":{},"body":{"components/InputAssigneeComponent.html":{},"injectables/RouterExtensionsService.html":{},"components/StatusLabelComponent.html":{},"index.html":{}}}],["node.children[0",{"_index":3087,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["node.js",{"_index":4527,"title":{},"body":{"index.html":{}}}],["node.value.params",{"_index":3088,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["none",{"_index":891,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["not(.add",{"_index":2248,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(.add):hover",{"_index":2249,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(.collapsed",{"_index":699,"title":{},"body":{"components/BoardPage.html":{}}}],["not(.line",{"_index":2256,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(:last",{"_index":3078,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["notation",{"_index":1633,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["notice",{"_index":4589,"title":{},"body":{"license.html":{}}}],["notified",{"_index":1357,"title":{},"body":{"classes/DialogRef.html":{}}}],["now",{"_index":2104,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/SettingsSessionsPage.html":{}}}],["npm",{"_index":4528,"title":{},"body":{"index.html":{}}}],["null",{"_index":1085,"title":{},"body":{"components/ControlAccessor.html":{},"components/EditProjectMembersPage.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"classes/MonacoExtended.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/SelectionEditOperation.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"pipes/ValidationErrorPipe.html":{}}}],["number",{"_index":88,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"classes/MonacoExtended.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"interfaces/SelectionEditOperation.html":{},"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["number(!this.taskmap.get(mapkey",{"_index":678,"title":{},"body":{"components/BoardPage.html":{}}}],["number(e[1",{"_index":1716,"title":{},"body":{"classes/Enum.html":{}}}],["number(event.container.element.nativeelement.dataset['index",{"_index":628,"title":{},"body":{"components/BoardPage.html":{}}}],["number(k",{"_index":1706,"title":{},"body":{"classes/Enum.html":{}}}],["number(key",{"_index":1704,"title":{},"body":{"classes/Enum.html":{}}}],["number(projectid",{"_index":100,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["number(this.expandedsubtasks.has(taskid",{"_index":3839,"title":{},"body":{"components/TaskListPage.html":{}}}],["number(this.form?.controls[index].value",{"_index":1890,"title":{},"body":{"components/FiltersComponent.html":{}}}],["number(v",{"_index":1711,"title":{},"body":{"classes/Enum.html":{}}}],["number(workspaceid",{"_index":98,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["numberrepresentation",{"_index":4264,"title":{},"body":{"classes/UserUtils.html":{}}}],["numbers",{"_index":4170,"title":{},"body":{"components/TextareaComponent.html":{}}}],["numeric",{"_index":1692,"title":{},"body":{"classes/Enum.html":{}}}],["o",{"_index":566,"title":{},"body":{"components/BoardPage.html":{}}}],["obj",{"_index":4499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":275,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/architecture.html":{}}}],["object.entries(edits).sort((a",{"_index":3206,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["object.entries(enumtype",{"_index":1714,"title":{},"body":{"classes/Enum.html":{}}}],["object.entries(filteredprops",{"_index":4043,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["object.hasownproperty(key",{"_index":4311,"title":{},"body":{"classes/Utils.html":{}}}],["object.keys(enumtype",{"_index":1703,"title":{},"body":{"classes/Enum.html":{}}}],["object.keys(enumtype).filter((k",{"_index":1705,"title":{},"body":{"classes/Enum.html":{}}}],["object.values(enumtype",{"_index":1709,"title":{},"body":{"classes/Enum.html":{}}}],["object.values(taskpriority",{"_index":3728,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["obs",{"_index":1740,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["observable",{"_index":68,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"classes/DialogRef.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"injectables/SessionsService.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["observable((subscriber",{"_index":1780,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["observables",{"_index":1765,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["observe",{"_index":3048,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["observersmodule",{"_index":2459,"title":{},"body":{"modules/MainModule.html":{}}}],["occurrence",{"_index":4295,"title":{},"body":{"classes/Utils.html":{}}}],["of(newtask",{"_index":3922,"title":{},"body":{"injectables/TaskService.html":{}}}],["of(true",{"_index":3934,"title":{},"body":{"injectables/TaskService.html":{}}}],["offset",{"_index":887,"title":{},"body":{"components/ButtonComponent.html":{},"classes/SelectionEditPlugin.html":{}}}],["ol",{"_index":4182,"title":{},"body":{"components/TextareaComponent.html":{}}}],["omit",{"_index":3622,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{}}}],["omit(props",{"_index":3652,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{}}}],["onblur",{"_index":2286,"title":{},"body":{"components/InputComponent.html":{}}}],["onclick",{"_index":1039,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["onclick(event",{"_index":1043,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["ondestroy",{"_index":529,"title":{},"body":{"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/EditProjectPage.html":{}}}],["one",{"_index":1680,"title":{},"body":{"classes/Enum.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["onfocus",{"_index":2284,"title":{},"body":{"components/InputComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["only_my_tasks",{"_index":1850,"title":{},"body":{"classes/Filters.html":{}}}],["only_my_tasks(currentuserid",{"_index":1851,"title":{},"body":{"classes/Filters.html":{}}}],["onprojectidchange",{"_index":3702,"title":{},"body":{"components/TaskDialog.html":{}}}],["onprojectidchange(projectid",{"_index":3710,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["onsameurlnavigation",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["onsuccess",{"_index":640,"title":{},"body":{"components/BoardPage.html":{}}}],["onworkspaceidchange",{"_index":3703,"title":{},"body":{"components/TaskDialog.html":{}}}],["onworkspaceidchange(workspaceid",{"_index":3712,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["opacity",{"_index":736,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/MainViewComponent.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["open",{"_index":1414,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"additional-documentation/localization.html":{}}}],["open(addmemberdialog",{"_index":1171,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["open(component",{"_index":1434,"title":{},"body":{"injectables/DialogService.html":{}}}],["open(taskdialog",{"_index":671,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["openaddmembersdialog",{"_index":1138,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["openbelow",{"_index":4196,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["opencreatenewtaskdialog",{"_index":3875,"title":{},"body":{"injectables/TaskService.html":{}}}],["opencreatesubtaskdialog",{"_index":3876,"title":{},"body":{"injectables/TaskService.html":{}}}],["opencreatesubtaskdialog(projectid",{"_index":3894,"title":{},"body":{"injectables/TaskService.html":{}}}],["opened",{"_index":1426,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{}}}],["openeditor",{"_index":4076,"title":{},"body":{"components/TextareaComponent.html":{}}}],["openedittaskdialog",{"_index":3877,"title":{},"body":{"injectables/TaskService.html":{}}}],["openedittaskdialog(projectid",{"_index":3897,"title":{},"body":{"injectables/TaskService.html":{}}}],["openerrordialog",{"_index":1415,"title":{},"body":{"injectables/DialogService.html":{}}}],["openerrordialog(error",{"_index":1440,"title":{},"body":{"injectables/DialogService.html":{}}}],["opening",{"_index":1360,"title":{},"body":{"classes/DialogRef.html":{}}}],["opennavelement",{"_index":2783,"title":{},"body":{"components/NavElementComponent.html":{}}}],["opennewtaskdialog",{"_index":544,"title":{},"body":{"components/BoardPage.html":{}}}],["openpreview",{"_index":4077,"title":{},"body":{"components/TextareaComponent.html":{}}}],["openprofile",{"_index":4200,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["openproject",{"_index":2954,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["openproject(project",{"_index":2958,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["opens",{"_index":1423,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/TaskService.html":{}}}],["openwithlocalvscode",{"_index":2815,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscode(project",{"_index":2834,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscodeinsiders",{"_index":2816,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscodeinsiders(project",{"_index":2836,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithvscode",{"_index":2817,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithvscode(project",{"_index":2838,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openworkspace",{"_index":2818,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["openworkspace(workspace",{"_index":4400,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["option",{"_index":1845,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/SelectComponent.html":{}}}],["option'},{'name",{"_index":199,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["option.assigneeid",{"_index":1861,"title":{},"body":{"classes/Filters.html":{}}}],["option.component.html",{"_index":2878,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.component.scss",{"_index":2877,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.selected",{"_index":3151,"title":{},"body":{"components/SelectComponent.html":{}}}],["option.viewvalue",{"_index":3164,"title":{},"body":{"components/SelectComponent.html":{}}}],["option/option.component",{"_index":3147,"title":{},"body":{"components/SelectComponent.html":{}}}],["optional",{"_index":50,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":4690,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["optioncomponent",{"_index":198,"title":{"components/OptionComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["options",{"_index":339,"title":{},"body":{"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options'},{'name",{"_index":238,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["options.component",{"_index":1221,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["options.component.html",{"_index":4336,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.scss",{"_index":4335,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts",{"_index":4334,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:12",{"_index":4343,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:13",{"_index":4341,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:15",{"_index":4345,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:16",{"_index":4344,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:17",{"_index":4354,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:19",{"_index":4339,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:20",{"_index":4355,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:22",{"_index":4338,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:23",{"_index":4353,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:26",{"_index":4351,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:29",{"_index":4352,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:31",{"_index":4350,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.interface",{"_index":372,"title":{},"body":{"injectables/ApiService.html":{}}}],["options.interface.ts",{"_index":3045,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["options/view",{"_index":1220,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["optionsmap",{"_index":3129,"title":{},"body":{"components/SelectComponent.html":{}}}],["origin",{"_index":3413,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["originalmethod.apply(this",{"_index":1763,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["os",{"_index":3390,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["osname",{"_index":3387,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["other[1].find((status",{"_index":3588,"title":{},"body":{"injectables/StatusService.html":{}}}],["otherwise",{"_index":1148,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"license.html":{}}}],["out",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RestoreAccountPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"modules/TasksModule.html":{},"components/UpperNavigationComponent.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet'},{'name",{"_index":153,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["outlet(outlet",{"_index":1311,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component",{"_index":2504,"title":{},"body":{"modules/MainModule.html":{}}}],["outlet.component.html",{"_index":1279,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet.component.scss",{"_index":1278,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts",{"_index":1277,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts:11",{"_index":3474,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts:14",{"_index":1303,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:15",{"_index":1290,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts:18",{"_index":1288,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:22",{"_index":1299,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:37",{"_index":1297,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:45",{"_index":1292,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:53",{"_index":1294,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:63",{"_index":1300,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet.component.ts:67",{"_index":1295,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["outlet/dialog",{"_index":1276,"title":{},"body":{"components/DialogOutletComponent.html":{},"modules/MainModule.html":{}}}],["outlet/snackbar",{"_index":2522,"title":{},"body":{"modules/MainModule.html":{},"components/SnackbarOutletComponent.html":{}}}],["outletcomponent",{"_index":1456,"title":{},"body":{"injectables/DialogService.html":{}}}],["outletcomponent.renderdialog(component",{"_index":1461,"title":{},"body":{"injectables/DialogService.html":{}}}],["outlets",{"_index":1410,"title":{},"body":{"injectables/DialogService.html":{}}}],["outline",{"_index":884,"title":{},"body":{"components/ButtonComponent.html":{}}}],["output",{"_index":2348,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"components/TextareaComponent.html":{}}}],["outputs",{"_index":2339,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["overflow",{"_index":696,"title":{},"body":{"components/BoardPage.html":{},"components/DialogOutletComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SchedulePage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["overlay",{"_index":1353,"title":{},"body":{"classes/DialogRef.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["overlay's",{"_index":1362,"title":{},"body":{"classes/DialogRef.html":{}}}],["overlaymodule",{"_index":2461,"title":{},"body":{"modules/MainModule.html":{}}}],["override",{"_index":1884,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/StatusLabelComponent.html":{}}}],["overrides/link.override",{"_index":2577,"title":{},"body":{"classes/Marked.html":{}}}],["overview",{"_index":4642,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviewrulerlanes",{"_index":4134,"title":{},"body":{"components/TextareaComponent.html":{}}}],["owned",{"_index":2040,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsAccountPage.html":{}}}],["owner",{"_index":2036,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["p",{"_index":956,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/ExtendedMeta.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"classes/StoryPageConfig.html":{}}}],["p.project",{"_index":2949,"title":{},"body":{"injectables/ProjectService.html":{}}}],["package",{"_index":4407,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":110,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["page",{"_index":241,"title":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/continuos-integration.html":{}}}],["page'},{'name",{"_index":148,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["page.component",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":2381,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":2380,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":2379,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:8",{"_index":2382,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/landing",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{}}}],["pages/board/board.page",{"_index":4010,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/change",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/create",{"_index":1224,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/delete",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/edit",{"_index":1228,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/forgot",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/github",{"_index":1241,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["pages/login/login.page",{"_index":476,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/mock/mock.page",{"_index":2534,"title":{},"body":{"modules/MainModule.html":{}}}],["pages/projects",{"_index":1232,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/register/register.page",{"_index":477,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/restore",{"_index":478,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/schedule/schedule.page",{"_index":4011,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/settings",{"_index":3330,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["pages/settings/settings.page",{"_index":3354,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["pages/task",{"_index":4012,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/workspaces",{"_index":1235,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pane",{"_index":1354,"title":{},"body":{"classes/DialogRef.html":{}}}],["param",{"_index":314,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"directives/FocusInitialDirective.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2068,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/RequestOptions.html":{},"injectables/RouterExtensionsService.html":{}}}],["paramsinheritancestrategy",{"_index":455,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parent",{"_index":1327,"title":{},"body":{"components/DialogOutletComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["parenttask",{"_index":3895,"title":{},"body":{"injectables/TaskService.html":{}}}],["parenttask.id",{"_index":3944,"title":{},"body":{"injectables/TaskService.html":{}}}],["parenttaskid",{"_index":790,"title":{},"body":{"components/BoardTaskComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["parser",{"_index":1630,"title":{},"body":{"interfaces/EmojiToken.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{}}}],["part",{"_index":3054,"title":{},"body":{"interfaces/RequestOptions.html":{},"additional-documentation/architecture.html":{}}}],["partial",{"_index":1795,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["particular",{"_index":4605,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4301,"title":{},"body":{"classes/Utils.html":{}}}],["pass",{"_index":276,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{}}}],["passable",{"_index":3067,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["passed",{"_index":306,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ControlAccessor.html":{},"classes/Utils.html":{}}}],["passes",{"_index":1145,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["passthrough",{"_index":294,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["password",{"_index":484,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"interfaces/ModifyUser.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"miscellaneous/functions.html":{}}}],["password'},{'name",{"_index":137,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["password.page",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["password.page.html",{"_index":909,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.scss",{"_index":908,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts",{"_index":907,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts:14",{"_index":1911,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:16",{"_index":912,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:17",{"_index":1913,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:19",{"_index":1914,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:24",{"_index":913,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts:28",{"_index":1912,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:29",{"_index":924,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:34",{"_index":921,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:47",{"_index":914,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password/change",{"_index":469,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{}}}],["password/forgot",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ForgotPasswordPage.html":{}}}],["passwords",{"_index":919,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["passwordvalidator",{"_index":915,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["patch",{"_index":330,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["patch(url",{"_index":353,"title":{},"body":{"injectables/ApiService.html":{}}}],["path",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"interfaces/RequestOptions.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pathmatch",{"_index":1245,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pattern",{"_index":4322,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["pending",{"_index":843,"title":{},"body":{"components/ButtonComponent.html":{}}}],["pentosquare",{"_index":4337,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["people",{"_index":2610,"title":{},"body":{"injectables/MemberService.html":{},"components/SchedulePage.html":{}}}],["per",{"_index":3503,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["perform",{"_index":854,"title":{},"body":{"components/ButtonComponent.html":{}}}],["period",{"_index":3270,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["permanently",{"_index":3267,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["permitted",{"_index":4583,"title":{},"body":{"license.html":{}}}],["persistentkey",{"_index":584,"title":{},"body":{"components/BoardPage.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["persistentmap",{"_index":583,"title":{"classes/PersistentMap.html":{}},"body":{"components/BoardPage.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["persistentmapoptions",{"_index":2895,"title":{"interfaces/PersistentMapOptions.html":{}},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["person",{"_index":3117,"title":{},"body":{"components/SchedulePage.html":{}}}],["personal_data",{"_index":3023,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["pewno",{"_index":3242,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["picker",{"_index":2315,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["pipe",{"_index":1764,"title":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}},"body":{"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/architecture.html":{}}}],["pipe(filter((result",{"_index":1473,"title":{},"body":{"injectables/DialogService.html":{}}}],["pipe(map((projects",{"_index":1977,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["pipe(map((workspace",{"_index":3750,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pipe(skip(1",{"_index":4225,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["pipe(take(1",{"_index":1315,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["pipe(untildestroyed(this",{"_index":1561,"title":{},"body":{"components/EditProjectPage.html":{}}}],["pipe.ts",{"_index":4711,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["pipeline",{"_index":4756,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["pipes",{"_index":3508,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["pipes/status",{"_index":4013,"title":{},"body":{"modules/TasksModule.html":{}}}],["pipes/task",{"_index":4015,"title":{},"body":{"modules/TasksModule.html":{}}}],["pipes/validation",{"_index":2536,"title":{},"body":{"modules/MainModule.html":{}}}],["pipetransform",{"_index":3514,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}}}],["pl",{"_index":3309,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["pl.xlf",{"_index":4738,"title":{},"body":{"additional-documentation/localization.html":{}}}],["placed",{"_index":4695,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["placeholder",{"_index":735,"title":{},"body":{"components/BoardPage.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TextareaComponent.html":{}}}],["platformmodule",{"_index":2463,"title":{},"body":{"modules/MainModule.html":{}}}],["please",{"_index":2452,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["plugins/selection",{"_index":2671,"title":{},"body":{"classes/Monaco.html":{}}}],["plus",{"_index":4402,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["pointer",{"_index":728,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["poland",{"_index":4729,"title":{},"body":{"additional-documentation/localization.html":{}}}],["polish",{"_index":4728,"title":{},"body":{"additional-documentation/localization.html":{}}}],["polski",{"_index":3310,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["populatedtasks",{"_index":3830,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatedtasks.push",{"_index":3836,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatedtasks.push(task",{"_index":3833,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatesubtasks",{"_index":3787,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatesubtasks(tasklist",{"_index":3802,"title":{},"body":{"components/TaskListPage.html":{}}}],["popup",{"_index":3239,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["position",{"_index":804,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/DeleteAccountPage.html":{},"classes/DialogRef.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["possibility",{"_index":4637,"title":{},"body":{"license.html":{}}}],["post",{"_index":331,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["post(url",{"_index":355,"title":{},"body":{"injectables/ApiService.html":{}}}],["postgithubintegration",{"_index":2001,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["postgithubintegration(installationid",{"_index":2041,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["powerful",{"_index":4520,"title":{},"body":{"index.html":{}}}],["predicate",{"_index":1821,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["prefix",{"_index":875,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{}}}],["prefix:not(.pending",{"_index":878,"title":{},"body":{"components/ButtonComponent.html":{}}}],["preparedusername",{"_index":2087,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["press",{"_index":4752,"title":{},"body":{"additional-documentation/localization.html":{}}}],["preview",{"_index":4099,"title":{},"body":{"components/TextareaComponent.html":{}}}],["previousstage",{"_index":3007,"title":{},"body":{"components/RegisterPage.html":{}}}],["previousstatus",{"_index":629,"title":{},"body":{"components/BoardPage.html":{}}}],["previousstatusindex",{"_index":625,"title":{},"body":{"components/BoardPage.html":{}}}],["previoustaskindex",{"_index":633,"title":{},"body":{"components/BoardPage.html":{}}}],["primary",{"_index":858,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["principle",{"_index":4679,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["priority",{"_index":3716,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityIconPipe.html":{},"modules/TasksModule.html":{}}}],["priority.enum",{"_index":3737,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["priority.enum.ts",{"_index":4454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["priority.pipe",{"_index":4017,"title":{},"body":{"modules/TasksModule.html":{}}}],["priority.pipe.ts",{"_index":3864,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["priority.pipe.ts:7",{"_index":3865,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["privacy",{"_index":3042,"title":{},"body":{"components/RegisterPage.html":{}}}],["private",{"_index":91,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"classes/Monaco.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["privileges",{"_index":2659,"title":{},"body":{"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/Workspace.html":{}}}],["process",{"_index":1985,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["procurement",{"_index":4618,"title":{},"body":{"license.html":{}}}],["production",{"_index":4765,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["profile",{"_index":3261,"title":{},"body":{"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["profits",{"_index":4623,"title":{},"body":{"license.html":{}}}],["programmatic",{"_index":1020,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["progress",{"_index":2654,"title":{},"body":{"components/MockPage.html":{},"interfaces/RequestOptions.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"interfaces/StatusWithTasks.html":{}}}],["project",{"_index":143,"title":{"interfaces/Project.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["project's",{"_index":2920,"title":{},"body":{"interfaces/Project.html":{}}}],["project'},{'name",{"_index":146,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["project.githubintegration",{"_index":2077,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["project.id",{"_index":2859,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["project.interface",{"_index":4365,"title":{},"body":{"interfaces/Workspace.html":{}}}],["project.name",{"_index":1478,"title":{},"body":{"injectables/DialogService.html":{},"components/TaskDialog.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["project.name).join",{"_index":1979,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["project.page",{"_index":1226,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["project.page.html",{"_index":1184,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.scss",{"_index":1183,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.ts",{"_index":1182,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.ts:105",{"_index":1546,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:22",{"_index":1548,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:24",{"_index":1190,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:27",{"_index":1550,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:28",{"_index":1189,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.ts:32",{"_index":1188,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:33",{"_index":1551,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:34",{"_index":1191,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:36",{"_index":1192,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:37",{"_index":1549,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:38",{"_index":1185,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:39",{"_index":1552,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:40",{"_index":1544,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:59",{"_index":1186,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:68",{"_index":1545,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:72",{"_index":1187,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:88",{"_index":1547,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.project",{"_index":2969,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["project.service",{"_index":2053,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["project/create",{"_index":1181,"title":{},"body":{"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["project/edit",{"_index":1230,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectPage.html":{}}}],["projectid",{"_index":89,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["projectid/edit",{"_index":1254,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectid/edit/general",{"_index":1255,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectid/edit/members",{"_index":1256,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectlist",{"_index":2625,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["projectmember",{"_index":589,"title":{"interfaces/ProjectMember.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["projectmembers",{"_index":2918,"title":{},"body":{"interfaces/Project.html":{}}}],["projects",{"_index":201,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["projects.filter",{"_index":2092,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["projects.map((project",{"_index":1978,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["projects.push(...workspace.projectswithprivileges.map((p",{"_index":2948,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects/spaces",{"_index":4361,"title":{},"body":{"interfaces/Workspace.html":{}}}],["projectservice",{"_index":550,"title":{"injectables/ProjectService.html":{}},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["projectslistpage",{"_index":200,"title":{"components/ProjectsListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["projectswithprivileges",{"_index":4364,"title":{},"body":{"interfaces/Workspace.html":{}}}],["projectwithpriv.project.name",{"_index":2868,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["prompt",{"_index":986,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["prop",{"_index":3631,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["propagate",{"_index":1005,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["propagation",{"_index":1038,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation.directive",{"_index":2528,"title":{},"body":{"modules/MainModule.html":{}}}],["propagation.directive.ts",{"_index":1037,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation.directive.ts:8",{"_index":1042,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation]'},{'name",{"_index":246,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["properly",{"_index":2455,"title":{},"body":{"modules/MainModule.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"properties.html":{}}}],["properties.function",{"_index":1806,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["properties.function.ts",{"_index":4475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties.map",{"_index":1822,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["property",{"_index":751,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["property.startswith('ng",{"_index":1834,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["property[0",{"_index":1832,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["propertydescriptor",{"_index":1760,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["propertykey",{"_index":1758,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["propertypredicate",{"_index":1923,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["propertypredicate(property",{"_index":1831,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["props",{"_index":2132,"title":{},"body":{"components/IconComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["props.content",{"_index":4030,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["propsstring",{"_index":4036,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["propsstrings",{"_index":4488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propsstrings.join",{"_index":4050,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["protect",{"_index":4706,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["protocol",{"_index":4767,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["prototype",{"_index":2680,"title":{},"body":{"classes/Monaco.html":{},"classes/SelectionEditPlugin.html":{}}}],["prototype.executeselectionedits",{"_index":3201,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["prototype.getselectionedits",{"_index":3199,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["provide",{"_index":1087,"title":{},"body":{"components/ControlAccessor.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["provided",{"_index":365,"title":{},"body":{"injectables/ApiService.html":{},"components/ControlAccessor.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["providedin",{"_index":373,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["provider.helper",{"_index":2213,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["provider.helper.ts",{"_index":4054,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:4",{"_index":4057,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:5",{"_index":4059,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:8",{"_index":4061,"title":{},"body":{"classes/TestNgControl.html":{}}}],["providers",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"components/ControlAccessor.html":{},"modules/DashboardModule.html":{},"components/DialogOutletComponent.html":{},"interfaces/ExtendedMeta.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{}}}],["przywrocenia",{"_index":3259,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interfaces/ExtendedMeta.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["publishes",{"_index":4768,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["pull",{"_index":649,"title":{},"body":{"components/BoardPage.html":{},"injectables/GitIntegrationService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["pulllist",{"_index":3697,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pullrequest.title",{"_index":3772,"title":{},"body":{"components/TaskDialog.html":{}}}],["purple",{"_index":2331,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TextareaComponent.html":{}}}],["purpose",{"_index":4606,"title":{},"body":{"license.html":{}}}],["push",{"_index":4762,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["put",{"_index":332,"title":{},"body":{"injectables/ApiService.html":{}}}],["put(url",{"_index":357,"title":{},"body":{"injectables/ApiService.html":{}}}],["query",{"_index":3056,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["querylist",{"_index":3139,"title":{},"body":{"components/SelectComponent.html":{}}}],["queryoptions",{"_index":3130,"title":{},"body":{"components/SelectComponent.html":{}}}],["queryselectorall('pre",{"_index":4161,"title":{},"body":{"components/TextareaComponent.html":{}}}],["question",{"_index":2118,"title":{},"body":{"components/IconComponent.html":{}}}],["question_mark",{"_index":2172,"title":{},"body":{"components/IconComponent.html":{}}}],["r",{"_index":1368,"title":{},"body":{"classes/DialogRef.html":{}}}],["radius",{"_index":731,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["random",{"_index":2972,"title":{"classes/Random.html":{}},"body":{"classes/Random.html":{},"classes/UserUtils.html":{}}}],["random(id",{"_index":4255,"title":{},"body":{"classes/UserUtils.html":{}}}],["random(numberrepresentation",{"_index":4276,"title":{},"body":{"classes/UserUtils.html":{}}}],["random.random",{"_index":4257,"title":{},"body":{"classes/UserUtils.html":{}}}],["randomnumber",{"_index":4256,"title":{},"body":{"classes/UserUtils.html":{}}}],["range",{"_index":2735,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["raw",{"_index":1622,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["reactiveformsmodule",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["readable",{"_index":4319,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/localization.html":{}}}],["readme.md",{"_index":4773,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["readonly",{"_index":1830,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"components/InputAssigneeComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{}}}],["readonlyarray",{"_index":3069,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["ready",{"_index":4534,"title":{},"body":{"index.html":{}}}],["rebuild",{"_index":4764,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["receive",{"_index":1918,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["recommended",{"_index":3263,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["recoveraccount",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["red",{"_index":900,"title":{},"body":{"components/CardComponent.html":{},"components/InputComponent.html":{}}}],["redirectto",{"_index":1251,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["redistribution",{"_index":4580,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":4587,"title":{},"body":{"license.html":{}}}],["reduce((sum",{"_index":4268,"title":{},"body":{"classes/UserUtils.html":{}}}],["ref",{"_index":2882,"title":{},"body":{"components/OptionComponent.html":{}}}],["ref.class",{"_index":1307,"title":{},"body":{"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{}}}],["ref.class.ts",{"_index":1334,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:10",{"_index":1348,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:12",{"_index":1369,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:26",{"_index":1359,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:33",{"_index":1355,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:39",{"_index":1365,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:45",{"_index":1361,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:5",{"_index":1345,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:52",{"_index":1375,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:59",{"_index":1383,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:67",{"_index":1386,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:7",{"_index":1346,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:71",{"_index":1350,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:75",{"_index":1379,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:79",{"_index":1371,"title":{},"body":{"classes/DialogRef.html":{}}}],["ref.class.ts:8",{"_index":1344,"title":{},"body":{"classes/DialogRef.html":{}}}],["reference",{"_index":274,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"injectables/DialogService.html":{},"directives/FocusInitialDirective.html":{}}}],["regex",{"_index":1646,"title":{},"body":{"interfaces/EmojiToken.html":{},"classes/Utils.html":{}}}],["regexindexof",{"_index":4283,"title":{},"body":{"classes/Utils.html":{}}}],["regexindexof(string",{"_index":4291,"title":{},"body":{"classes/Utils.html":{}}}],["regexp",{"_index":2090,"title":{},"body":{"injectables/GitIntegrationService.html":{},"classes/Utils.html":{}}}],["register",{"_index":483,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["register'},{'name",{"_index":203,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["register(this.form.value",{"_index":3033,"title":{},"body":{"components/RegisterPage.html":{}}}],["register(undefined",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.page.html",{"_index":3002,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":3001,"title":{},"body":{"components/RegisterPage.html":{}}}],["registeronchange",{"_index":977,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registeronchange(fn",{"_index":992,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched",{"_index":978,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched(fn",{"_index":1008,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registeroutlet",{"_index":1416,"title":{},"body":{"injectables/DialogService.html":{}}}],["registeroutlet(outlet",{"_index":1442,"title":{},"body":{"injectables/DialogService.html":{}}}],["registerpage",{"_index":202,"title":{"components/RegisterPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["registers",{"_index":994,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerstage",{"_index":3003,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["registerstage.important_data",{"_index":3019,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerstage.personal_data",{"_index":3030,"title":{},"body":{"components/RegisterPage.html":{}}}],["registersubscription",{"_index":3004,"title":{},"body":{"components/RegisterPage.html":{}}}],["regular",{"_index":4419,"title":{},"body":{"dependencies.html":{}}}],["relative",{"_index":805,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["reload",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["remember",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["remembered",{"_index":4243,"title":{},"body":{"interfaces/UserSession.html":{}}}],["removal",{"_index":2017,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["remove",{"_index":1380,"title":{},"body":{"classes/DialogRef.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{}}}],["remove(projectid",{"_index":2618,"title":{},"body":{"injectables/MemberService.html":{}}}],["removepanelclass",{"_index":1341,"title":{},"body":{"classes/DialogRef.html":{}}}],["removepanelclass(classes",{"_index":1378,"title":{},"body":{"classes/DialogRef.html":{}}}],["removes",{"_index":2620,"title":{},"body":{"injectables/MemberService.html":{}}}],["removetextat",{"_index":2691,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["removetextat(editor",{"_index":2714,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["removetextbeforeandaftereachselection",{"_index":2692,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["removetextbeforeandaftereachselection(editor",{"_index":2720,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["renderdialog",{"_index":1284,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["renderdialog(component",{"_index":1298,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["renderer",{"_index":2574,"title":{},"body":{"classes/Marked.html":{},"components/TextareaComponent.html":{},"miscellaneous/functions.html":{}}}],["renderer(token",{"_index":1661,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["repeat",{"_index":948,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{}}}],["repeatpassword",{"_index":916,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["replace",{"_index":4672,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["replaces",{"_index":1631,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["replaysubject",{"_index":3907,"title":{},"body":{"injectables/TaskService.html":{}}}],["report",{"_index":3057,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["reportprogress",{"_index":3049,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["repositories",{"_index":2048,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["repository",{"_index":663,"title":{},"body":{"components/BoardPage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/Project.html":{},"index.html":{}}}],["repository.fullname",{"_index":2377,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositorylist",{"_index":2354,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositorylistloaded",{"_index":2355,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositoryname",{"_index":2004,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["reproduce",{"_index":4591,"title":{},"body":{"license.html":{}}}],["req",{"_index":1731,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["request",{"_index":333,"title":{},"body":{"injectables/ApiService.html":{},"components/BoardPage.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"injectables/WorkspaceService.html":{}}}],["request(method",{"_index":359,"title":{},"body":{"injectables/ApiService.html":{}}}],["requested",{"_index":1021,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["requestoptions",{"_index":340,"title":{"interfaces/RequestOptions.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["requests",{"_index":3051,"title":{},"body":{"interfaces/RequestOptions.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["required",{"_index":1060,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"interfaces/ValidationError.html":{}}}],["required::after",{"_index":2289,"title":{},"body":{"components/InputComponent.html":{}}}],["requiredvalidator",{"_index":66,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/functions.html":{}}}],["requires",{"_index":4271,"title":{},"body":{"classes/UserUtils.html":{},"additional-documentation/localization.html":{}}}],["reset",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"components/SettingsAccountPage.html":{}}}],["resetpassword(undefined",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetsubscription",{"_index":910,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["resolved",{"_index":4757,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["response",{"_index":1766,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"interfaces/RequestOptions.html":{}}}],["response.deleted",{"_index":2439,"title":{},"body":{"components/LoginPage.html":{}}}],["response.id]).subscribe",{"_index":1177,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["response.link",{"_index":2056,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["response.operator.ts",{"_index":4464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["response?.error?.status",{"_index":1768,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["response?.status",{"_index":1769,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["responsetype",{"_index":378,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/RequestOptions.html":{}}}],["responsibility",{"_index":4678,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["restore",{"_index":205,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["restoreaccountpage",{"_index":204,"title":{"components/RestoreAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["result",{"_index":667,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Random.html":{}}}],["result).subscribe",{"_index":675,"title":{},"body":{"components/BoardPage.html":{}}}],["results",{"_index":254,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["retain",{"_index":4588,"title":{},"body":{"license.html":{}}}],["return",{"_index":106,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"classes/Marked.html":{},"injectables/MemberService.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"injectables/RouterExtensionsService.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{}}}],["returned",{"_index":4317,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["returns",{"_index":52,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["reversible",{"_index":3269,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["revert",{"_index":3271,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["revive",{"_index":1271,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["rgb(0",{"_index":809,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{}}}],["rgba(0",{"_index":2253,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["right",{"_index":749,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["ripple",{"_index":2332,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["root",{"_index":374,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"additional-documentation/continuos-integration.html":{}}}],["root'},{'name",{"_index":125,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["rotate",{"_index":3465,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["rotate(45deg",{"_index":3464,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["rotate(90deg",{"_index":703,"title":{},"body":{"components/BoardPage.html":{},"components/ForgotPasswordPage.html":{},"components/TaskListPage.html":{}}}],["router",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["routerextensions",{"_index":42,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["routerextensionsservice",{"_index":43,"title":{"injectables/RouterExtensionsService.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/RouterExtensionsService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["routerlink",{"_index":2785,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["routermodule",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":485,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":430,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"overview.html":{},"routes.html":{},"additional-documentation/architecture.html":{}}}],["routetoproject",{"_index":2819,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routetoproject(project",{"_index":2841,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routetoworkspace",{"_index":2820,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routing.ts",{"_index":4691,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["row",{"_index":760,"title":{},"body":{"components/BoardPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{}}}],["row.hasownproperty('withsubtasks",{"_index":3821,"title":{},"body":{"components/TaskListPage.html":{}}}],["row.name",{"_index":2970,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["row.user.email",{"_index":2601,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.name",{"_index":2602,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.surname",{"_index":2603,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.username",{"_index":2600,"title":{},"body":{"components/MemberListComponent.html":{}}}],["rows",{"_index":3118,"title":{},"body":{"components/SchedulePage.html":{},"components/TextareaComponent.html":{}}}],["rsync",{"_index":4766,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["rule",{"_index":1644,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["rule.exec(src",{"_index":1649,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["run",{"_index":1983,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["running",{"_index":4548,"title":{},"body":{"index.html":{}}}],["runs",{"_index":4769,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["rxjs",{"_index":83,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":3409,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["s",{"_index":3581,"title":{},"body":{"injectables/StatusService.html":{}}}],["s.user.id",{"_index":3953,"title":{},"body":{"injectables/TaskService.html":{}}}],["same",{"_index":920,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["sameasvalidator",{"_index":927,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["sameasvalidator('password",{"_index":917,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["sameasvalidator(comparewith",{"_index":4512,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sampandonte/untitled",{"_index":2919,"title":{},"body":{"interfaces/Project.html":{}}}],["save",{"_index":1194,"title":{},"body":{"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{}}}],["savefilters",{"_index":1866,"title":{},"body":{"components/FiltersComponent.html":{}}}],["savestate",{"_index":2893,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["scale(1",{"_index":872,"title":{},"body":{"components/ButtonComponent.html":{}}}],["scale(1.02",{"_index":3414,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["scaley",{"_index":2804,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["schedule",{"_index":208,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/typealiases.html":{}}}],["schedule(projectid",{"_index":3899,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.page.html",{"_index":3091,"title":{},"body":{"components/SchedulePage.html":{}}}],["schedule.page.scss",{"_index":3090,"title":{},"body":{"components/SchedulePage.html":{}}}],["schedule.tasks.get(null).push(task",{"_index":3959,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.has(null",{"_index":3957,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.set(dayjs(task.estimateddate).format('yyyy",{"_index":3956,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.set(null",{"_index":3958,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedulepage",{"_index":207,"title":{"components/SchedulePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["schedules",{"_index":3950,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedules.find((s",{"_index":3952,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedules.push",{"_index":3951,"title":{},"body":{"injectables/TaskService.html":{}}}],["screen",{"_index":959,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["script",{"_index":4771,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["scrollbeyondlastline",{"_index":4129,"title":{},"body":{"components/TextareaComponent.html":{}}}],["search",{"_index":2119,"title":{},"body":{"components/IconComponent.html":{},"classes/Utils.html":{},"additional-documentation/localization.html":{}}}],["second",{"_index":4530,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["section",{"_index":811,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/localization.html":{}}}],["sections",{"_index":3112,"title":{},"body":{"components/SchedulePage.html":{}}}],["secure",{"_index":2450,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["security",{"_index":3266,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["see",{"_index":1032,"title":{},"body":{"components/CheckboxComponent.html":{},"additional-documentation/architecture.html":{}}}],["seed",{"_index":2980,"title":{},"body":{"classes/Random.html":{}}}],["select",{"_index":2181,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/enumerations.html":{}}}],["select'},{'name",{"_index":210,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["select(member",{"_index":2189,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["select(status",{"_index":3533,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["select.component.html",{"_index":3128,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":3127,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectcomponent",{"_index":209,"title":{"components/SelectComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["selected",{"_index":3131,"title":{},"body":{"components/SelectComponent.html":{}}}],["selecteditem.viewvalue",{"_index":3163,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectedvalue",{"_index":2764,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selectedvalue?.endswith(text",{"_index":2769,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selectedvalue?.startswith(text",{"_index":2768,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selection",{"_index":2702,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/localization.html":{}}}],["selection.endcolumn",{"_index":2749,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selection.endlinenumber",{"_index":2748,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["selection.startcolumn",{"_index":2747,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selection.startlinenumber",{"_index":2746,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperation",{"_index":2731,"title":{"interfaces/SelectionEditOperation.html":{}},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["selectioneditoperationconverter",{"_index":3184,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationconverter[_key",{"_index":3212,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationorder",{"_index":3182,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationtype",{"_index":3179,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{}}}],["selectioneditoperationtype.after",{"_index":3186,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationtype.aftereachline",{"_index":3197,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationtype.before",{"_index":3185,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditoperationtype.beforeeachline",{"_index":3188,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditplugin",{"_index":2670,"title":{"classes/SelectionEditPlugin.html":{}},"body":{"classes/Monaco.html":{},"classes/SelectionEditPlugin.html":{}}}],["selectioneditplugin.executeselectionedits.bind(this)(edits",{"_index":3202,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditplugin.getselectionedits.bind(this)(edits",{"_index":3200,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["selectioneditplugin.init(prototype",{"_index":2682,"title":{},"body":{"classes/Monaco.html":{}}}],["selectionendswith",{"_index":2693,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["selectionendswith(editor",{"_index":2722,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selections",{"_index":2708,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["selections.map((selection",{"_index":2751,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selections.some",{"_index":2772,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selectionstartwith",{"_index":2694,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["selectionstartwith(editor",{"_index":2724,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["self",{"_index":958,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["send",{"_index":345,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["sends",{"_index":343,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["separated",{"_index":4685,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["sequence",{"_index":1623,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["sequence.aliases",{"_index":1607,"title":{},"body":{"classes/Emoji.html":{},"interfaces/EmojiToken.html":{}}}],["serba",{"_index":4573,"title":{},"body":{"license.html":{}}}],["server",{"_index":3063,"title":{},"body":{"interfaces/RequestOptions.html":{},"index.html":{}}}],["serves",{"_index":4751,"title":{},"body":{"additional-documentation/localization.html":{}}}],["service",{"_index":326,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SnackbarService.html":{},"components/TaskListPage.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["service.ts",{"_index":4713,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["services",{"_index":4621,"title":{},"body":{"license.html":{},"additional-documentation/architecture.html":{}}}],["services/api.service",{"_index":2539,"title":{},"body":{"modules/MainModule.html":{}}}],["services/auth.service",{"_index":930,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["services/dialog.service",{"_index":2540,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["services/git",{"_index":1237,"title":{},"body":{"modules/DashboardModule.html":{}}}],["services/project.service",{"_index":1164,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["services/sessions.service",{"_index":3373,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["services/status.service",{"_index":607,"title":{},"body":{"components/BoardPage.html":{}}}],["services/task.service",{"_index":608,"title":{},"body":{"components/BoardPage.html":{}}}],["services/workspace.service",{"_index":1165,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["servicevalidator",{"_index":4382,"title":{},"body":{"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{}}}],["servicevalidator(errorvalidationtree",{"_index":1756,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"miscellaneous/functions.html":{}}}],["servicevalidator({delete",{"_index":4380,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["session",{"_index":1748,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["session.geoip.city",{"_index":3395,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["session.geoip.country",{"_index":3396,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["session.useragent",{"_index":3393,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate",{"_index":794,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["sessiondate.format('ll",{"_index":3381,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('lll",{"_index":3382,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('mmmm",{"_index":3383,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('yyyy",{"_index":796,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TaskListPage.html":{}}}],["sessiondate.year",{"_index":3378,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions",{"_index":3348,"title":{},"body":{"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{}}}],["sessions'},{'name",{"_index":219,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sessions.page",{"_index":3334,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["sessions.page.html",{"_index":3357,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.scss",{"_index":3356,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts",{"_index":3355,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:14",{"_index":3362,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:17",{"_index":3370,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:21",{"_index":3367,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:36",{"_index":3366,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:49",{"_index":3369,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions/settings",{"_index":3333,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{}}}],["sessionservice",{"_index":3363,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessionslist",{"_index":3358,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessionsservice",{"_index":3215,"title":{"injectables/SessionsService.html":{}},"body":{"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{}}}],["set",{"_index":284,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"modules/AuthRoutingModule.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/DialogOutletComponent.html":{},"classes/ESet.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"classes/PersistentMap.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["set(key",{"_index":2901,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["set.class",{"_index":3819,"title":{},"body":{"components/TaskListPage.html":{}}}],["set.class.ts",{"_index":1482,"title":{},"body":{"classes/ESet.html":{}}}],["set.class.ts:2",{"_index":1485,"title":{},"body":{"classes/ESet.html":{}}}],["setanimationname",{"_index":3424,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["setanimationname(name",{"_index":3439,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["setassignee(assignee",{"_index":2202,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["setdisabledstate",{"_index":979,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1012,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["setfilters(filters",{"_index":1877,"title":{},"body":{"components/FiltersComponent.html":{}}}],["seticon(value",{"_index":2140,"title":{},"body":{"components/IconComponent.html":{}}}],["setisopen(val",{"_index":2206,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["setmembers(members",{"_index":2203,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["setnewpassword",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{}}}],["setnewpassword(this.token",{"_index":937,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["setnewpassword(token",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["setnglet(value",{"_index":2397,"title":{},"body":{"directives/LetDirective.html":{}}}],["setoutlet(outlet",{"_index":1305,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["setstatuses(statuses",{"_index":3540,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["setter",{"_index":2131,"title":{},"body":{"components/IconComponent.html":{}}}],["settimeout",{"_index":867,"title":{},"body":{"components/ButtonComponent.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["setting",{"_index":923,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["settings",{"_index":212,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["settings.page.html",{"_index":3338,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":3337,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.routing",{"_index":3335,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settingsaccountpage",{"_index":211,"title":{"components/SettingsAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["settingsintegrationspage",{"_index":213,"title":{"components/SettingsIntegrationsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["settingslocalizationpage",{"_index":215,"title":{"components/SettingsLocalizationPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["settingsmodule",{"_index":3320,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingspage",{"_index":217,"title":{"components/SettingsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["settingsroutingmodule",{"_index":3324,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["settingssessionspage",{"_index":218,"title":{"components/SettingsSessionsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["settitle",{"_index":1924,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["settitle(title",{"_index":1836,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/StoryPageConfig.html":{}}}],["setup_action",{"_index":2101,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["shadow",{"_index":807,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{}}}],["shall",{"_index":4608,"title":{},"body":{"license.html":{}}}],["shape",{"_index":4710,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["share",{"_index":4712,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["shared",{"_index":3268,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["shopping_cart",{"_index":2152,"title":{},"body":{"components/IconComponent.html":{}}}],["shoppingcart",{"_index":2151,"title":{},"body":{"components/IconComponent.html":{}}}],["shoulddelete",{"_index":2771,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["show",{"_index":1285,"title":{},"body":{"components/DialogOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["show(message",{"_index":3486,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["showalert",{"_index":1771,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["showalert(m",{"_index":1785,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["showarrow",{"_index":2781,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["shown",{"_index":849,"title":{},"body":{"components/ButtonComponent.html":{}}}],["showoptions",{"_index":2786,"title":{},"body":{"components/NavElementComponent.html":{}}}],["shows",{"_index":4396,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["shrink",{"_index":1330,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["side",{"_index":951,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["sidebar",{"_index":221,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sidebarnavigationcomponent",{"_index":220,"title":{"components/SidebarNavigationComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sie",{"_index":3244,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["simple",{"_index":259,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["simultaneously",{"_index":3770,"title":{},"body":{"components/TaskDialog.html":{}}}],["single",{"_index":3116,"title":{},"body":{"components/SchedulePage.html":{},"additional-documentation/architecture.html":{}}}],["singlepersonschedule",{"_index":3416,"title":{"interfaces/SinglePersonSchedule.html":{}},"body":{"interfaces/SinglePersonSchedule.html":{},"miscellaneous/typealiases.html":{}}}],["singleschedule.user.name.substring(0",{"_index":3109,"title":{},"body":{"components/SchedulePage.html":{}}}],["site",{"_index":2451,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["size",{"_index":815,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"classes/Emoji.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["skip",{"_index":4218,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["skiplocationchange",{"_index":2857,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["sm",{"_index":960,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["small",{"_index":3529,"title":{},"body":{"components/StatusLabelComponent.html":{},"additional-documentation/continuos-integration.html":{}}}],["smaller",{"_index":4274,"title":{},"body":{"classes/UserUtils.html":{}}}],["smile",{"_index":1632,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["snackbar",{"_index":226,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbar'},{'name",{"_index":224,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbar.component.html",{"_index":3421,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.component.scss",{"_index":3420,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.interface",{"_index":3447,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.interface",{"_index":3478,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["snackbar:not(:last",{"_index":3480,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["snackbarcomponent",{"_index":223,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbardata",{"_index":3446,"title":{"interfaces/SnackbarData.html":{}},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["snackbardata['color",{"_index":3450,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbardata['duration",{"_index":3449,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbardata['message",{"_index":3448,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbaroutletcomponent",{"_index":225,"title":{"components/SnackbarOutletComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbars",{"_index":3472,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["snackbarservice",{"_index":3429,"title":{"injectables/SnackbarService.html":{}},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"injectables/TaskService.html":{}}}],["snake",{"_index":2150,"title":{},"body":{"components/IconComponent.html":{}}}],["snake_case",{"_index":4302,"title":{},"body":{"classes/Utils.html":{}}}],["snakecase",{"_index":3177,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"classes/Utils.html":{}}}],["snakecase(inputstring",{"_index":4297,"title":{},"body":{"classes/Utils.html":{}}}],["snakecase(key).touppercase",{"_index":3211,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["snakecasename",{"_index":2114,"title":{},"body":{"components/IconComponent.html":{}}}],["snapshot",{"_index":3081,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["software",{"_index":4595,"title":{},"body":{"license.html":{}}}],["solid",{"_index":596,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"license.html":{}}}],["source.subscribe",{"_index":1781,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["space",{"_index":722,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["spaces",{"_index":4673,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["spain",{"_index":4725,"title":{},"body":{"additional-documentation/localization.html":{}}}],["span",{"_index":2260,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["spanish",{"_index":4724,"title":{},"body":{"additional-documentation/localization.html":{}}}],["special",{"_index":4614,"title":{},"body":{"license.html":{}}}],["specific",{"_index":3882,"title":{},"body":{"injectables/TaskService.html":{}}}],["specified",{"_index":855,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Utils.html":{}}}],["specify",{"_index":302,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ValidationError.html":{},"miscellaneous/enumerations.html":{}}}],["specyfic",{"_index":4504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["speed",{"_index":4522,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":871,"title":{},"body":{"components/ButtonComponent.html":{},"modules/MainModule.html":{}}}],["spinner.hide",{"_index":873,"title":{},"body":{"components/ButtonComponent.html":{}}}],["split",{"_index":4265,"title":{},"body":{"classes/UserUtils.html":{},"classes/Utils.html":{}}}],["splitindex",{"_index":2160,"title":{},"body":{"components/IconComponent.html":{}}}],["splitter",{"_index":4684,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src.indexof",{"_index":1638,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["src/.../alert.dialog.ts",{"_index":4444,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../apply",{"_index":4457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../catch",{"_index":4463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../color.interface.ts",{"_index":4652,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../component",{"_index":4460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../control",{"_index":4446,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../debug.decorator.ts",{"_index":4467,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../dialog.service.ts",{"_index":4448,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../email.validator.ts",{"_index":4468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../filters.interface.ts",{"_index":4655,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../get",{"_index":4474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../link.override.ts",{"_index":4476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../max",{"_index":4477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../monaco",{"_index":4654,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../page.decorator.ts",{"_index":4479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../password.validator.ts",{"_index":4480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../register.page.ts",{"_index":4449,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../required.validator.ts",{"_index":4481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../same",{"_index":4482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../schedule.interface.ts",{"_index":4657,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../selection",{"_index":4450,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../service",{"_index":4485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../service.decorator.ts",{"_index":4484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../story.class.ts",{"_index":4656,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../task",{"_index":4451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../task.dialog.ts",{"_index":4453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typings.ts",{"_index":4653,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validator",{"_index":4470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app",{"_index":4687,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/app/_main/_main.module.ts",{"_index":2453,"title":{},"body":{"modules/MainModule.html":{}}}],["src/app/_main/classes/control",{"_index":1051,"title":{},"body":{"components/ControlAccessor.html":{}}}],["src/app/_main/classes/dialog",{"_index":1333,"title":{},"body":{"classes/DialogRef.html":{}}}],["src/app/_main/classes/e",{"_index":1481,"title":{},"body":{"classes/ESet.html":{}}}],["src/app/_main/classes/enum.class.ts",{"_index":1670,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:10",{"_index":1690,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:32",{"_index":1698,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:48",{"_index":1701,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:70",{"_index":1678,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/filters.class.ts",{"_index":1849,"title":{},"body":{"classes/Filters.html":{}}}],["src/app/_main/classes/filters.class.ts:5",{"_index":1852,"title":{},"body":{"classes/Filters.html":{}}}],["src/app/_main/classes/monaco",{"_index":2684,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/_main/classes/persistent",{"_index":2889,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["src/app/_main/classes/random.class.ts",{"_index":2973,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:17",{"_index":2986,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:2",{"_index":2982,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:3",{"_index":2984,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:4",{"_index":2978,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/utils.class.ts",{"_index":4277,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:12",{"_index":4293,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:22",{"_index":4298,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:45",{"_index":4285,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:59",{"_index":4287,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/components/button/button.component.ts",{"_index":833,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:17",{"_index":859,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:24",{"_index":851,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:29",{"_index":846,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:34",{"_index":845,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:39",{"_index":864,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:44",{"_index":861,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/card/card.component.ts",{"_index":895,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/_main/components/card/card.component.ts:8",{"_index":899,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/_main/components/checkbox/checkbox.component.ts",{"_index":971,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/_main/components/dialog",{"_index":1275,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts",{"_index":1862,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:12",{"_index":1868,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:21",{"_index":1876,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:25",{"_index":1872,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:26",{"_index":1867,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:32",{"_index":1870,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:37",{"_index":1871,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts",{"_index":2106,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:100",{"_index":2137,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:105",{"_index":2134,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:113",{"_index":2149,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:19",{"_index":2120,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:35",{"_index":2115,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:52",{"_index":2139,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:59",{"_index":2127,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:66",{"_index":2124,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:73",{"_index":2144,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:83",{"_index":2147,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:95",{"_index":2128,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/input",{"_index":2308,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["src/app/_main/components/input/input.component.ts",{"_index":2264,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:18",{"_index":2277,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:23",{"_index":2271,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:28",{"_index":2276,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:33",{"_index":2275,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:38",{"_index":2273,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:44",{"_index":2270,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/main",{"_index":2557,"title":{},"body":{"components/MainViewComponent.html":{}}}],["src/app/_main/components/nav",{"_index":2776,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["src/app/_main/components/option/option.component.ts",{"_index":2876,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:10",{"_index":2884,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:11",{"_index":2883,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:13",{"_index":2885,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:15",{"_index":2887,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:17",{"_index":2881,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/select/select.component.ts",{"_index":3126,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:12",{"_index":3141,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:13",{"_index":3137,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:14",{"_index":3138,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:15",{"_index":3133,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:16",{"_index":3143,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:18",{"_index":3142,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:20",{"_index":3145,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:24",{"_index":3135,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:36",{"_index":3134,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:43",{"_index":3136,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/sidebar",{"_index":3399,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["src/app/_main/components/snackbar",{"_index":3471,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts",{"_index":3419,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:12",{"_index":3442,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:15",{"_index":3435,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:18",{"_index":3434,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:21",{"_index":3433,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:24",{"_index":3431,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:27",{"_index":3436,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:29",{"_index":3444,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:36",{"_index":3430,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:40",{"_index":3438,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:46",{"_index":3437,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:53",{"_index":3440,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.interface.ts",{"_index":3470,"title":{},"body":{"interfaces/SnackbarData.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts",{"_index":4064,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:131",{"_index":4096,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:135",{"_index":4097,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:148",{"_index":4093,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:156",{"_index":4085,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:164",{"_index":4088,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:172",{"_index":4089,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:180",{"_index":4090,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:190",{"_index":4091,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:200",{"_index":4092,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:207",{"_index":4086,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:215",{"_index":4087,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:31",{"_index":4080,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:36",{"_index":4084,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:41",{"_index":4082,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:46",{"_index":4081,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:48",{"_index":4083,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:50",{"_index":4079,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:52",{"_index":4098,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:53",{"_index":4102,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:55",{"_index":4104,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:57",{"_index":4100,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:89",{"_index":4095,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:95",{"_index":4094,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/upper",{"_index":4192,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["src/app/_main/decorators/debug.decorator.ts",{"_index":4491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/page.decorator",{"_index":1202,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["src/app/_main/decorators/page.decorator.ts",{"_index":4505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/service",{"_index":1752,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/service.decorator.ts",{"_index":4514,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts",{"_index":257,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:50",{"_index":272,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:58",{"_index":298,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:67",{"_index":281,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:73",{"_index":285,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:80",{"_index":292,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/directives/click",{"_index":1036,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["src/app/_main/directives/focus",{"_index":1899,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["src/app/_main/directives/let.directive.ts",{"_index":2384,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["src/app/_main/directives/let.directive.ts:11",{"_index":2394,"title":{},"body":{"directives/LetDirective.html":{}}}],["src/app/_main/directives/let.directive.ts:18",{"_index":2396,"title":{},"body":{"directives/LetDirective.html":{}}}],["src/app/_main/directives/view",{"_index":4328,"title":{},"body":{"directives/ViewContainerDirective.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts",{"_index":1723,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:11",{"_index":1732,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:13",{"_index":1730,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:8",{"_index":1726,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interfaces/color.interface.ts",{"_index":4658,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/_main/interfaces/filters.interface.ts",{"_index":1843,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/_main/interfaces/filters.interface.ts:9",{"_index":1846,"title":{},"body":{"interfaces/FilterCheckbox.html":{}}}],["src/app/_main/interfaces/request",{"_index":3044,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["src/app/_main/interfaces/validation",{"_index":4313,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts",{"_index":1582,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts:15",{"_index":1601,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts:19",{"_index":1599,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts:23",{"_index":1596,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts:27",{"_index":1604,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/emoji/emoji.lib.ts:6",{"_index":1594,"title":{},"body":{"classes/Emoji.html":{}}}],["src/app/_main/libs/marked/extensions/marked",{"_index":1619,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["src/app/_main/libs/marked/marked.lib.ts",{"_index":2567,"title":{},"body":{"classes/Marked.html":{}}}],["src/app/_main/libs/marked/marked.lib.ts:18",{"_index":2572,"title":{},"body":{"classes/Marked.html":{}}}],["src/app/_main/libs/marked/marked.lib.ts:6",{"_index":2571,"title":{},"body":{"classes/Marked.html":{}}}],["src/app/_main/libs/marked/marked.lib.ts:8",{"_index":2573,"title":{},"body":{"classes/Marked.html":{}}}],["src/app/_main/libs/marked/overrides/link.override.ts",{"_index":4500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/libs/monaco/monaco.lib.ts",{"_index":2662,"title":{},"body":{"classes/Monaco.html":{}}}],["src/app/_main/libs/monaco/monaco.lib.ts:11",{"_index":2666,"title":{},"body":{"classes/Monaco.html":{}}}],["src/app/_main/libs/monaco/monaco.lib.ts:17",{"_index":2667,"title":{},"body":{"classes/Monaco.html":{}}}],["src/app/_main/libs/monaco/monaco.lib.ts:5",{"_index":2665,"title":{},"body":{"classes/Monaco.html":{}}}],["src/app/_main/libs/monaco/monaco.lib.ts:7",{"_index":2669,"title":{},"body":{"classes/Monaco.html":{}}}],["src/app/_main/libs/monaco/plugins/selection",{"_index":3165,"title":{},"body":{"classes/SelectionEditPlugin.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/_main/libs/monaco/typings.ts",{"_index":4659,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/_main/operators/apply",{"_index":4486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/operators/catch",{"_index":4489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/pages/mock/mock.page.ts",{"_index":2641,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:12",{"_index":2647,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:14",{"_index":2646,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:9",{"_index":2645,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pipes/validation",{"_index":4323,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["src/app/_main/services/api.service",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/WorkspaceService.html":{}}}],["src/app/_main/services/api.service.ts",{"_index":325,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:18",{"_index":336,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:30",{"_index":360,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:44",{"_index":352,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:54",{"_index":356,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:64",{"_index":341,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:74",{"_index":358,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:84",{"_index":354,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/dialog.service",{"_index":2964,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["src/app/_main/services/dialog.service.ts",{"_index":1406,"title":{},"body":{"injectables/DialogService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/_main/services/dialog.service.ts:114",{"_index":1429,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:118",{"_index":1431,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:128",{"_index":1433,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:23",{"_index":1446,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:24",{"_index":1445,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:27",{"_index":1447,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:29",{"_index":1449,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:31",{"_index":1420,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:44",{"_index":1435,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:78",{"_index":1427,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:84",{"_index":1443,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:93",{"_index":1422,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:99",{"_index":1441,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/router",{"_index":3079,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["src/app/_main/services/snackbar.service.ts",{"_index":3481,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:11",{"_index":3482,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:14",{"_index":3489,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:16",{"_index":3487,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:26",{"_index":3484,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:31",{"_index":3485,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/validators/email.validator.ts",{"_index":4492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/validators/max",{"_index":4501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/validators/password.validator.ts",{"_index":4509,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/validators/required.validator",{"_index":1163,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["src/app/_main/validators/required.validator.ts",{"_index":4510,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/_main/validators/same",{"_index":4511,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.ts",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.routing.ts",{"_index":480,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/guard/logged",{"_index":2410,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["src/app/auth/interfaces/user.interface.ts",{"_index":2657,"title":{},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["src/app/auth/pages/change",{"_index":906,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["src/app/auth/pages/delete",{"_index":1259,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["src/app/auth/pages/forgot",{"_index":1909,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["src/app/auth/pages/login/login.page.ts",{"_index":2417,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:14",{"_index":2423,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:21",{"_index":2430,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:22",{"_index":2428,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:27",{"_index":2429,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:33",{"_index":2427,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:40",{"_index":2426,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:66",{"_index":2425,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/register/register.page.ts",{"_index":3000,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/auth/pages/register/register.page.ts:21",{"_index":3008,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:24",{"_index":3018,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:25",{"_index":3020,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:26",{"_index":3017,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:28",{"_index":3013,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:33",{"_index":3016,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:51",{"_index":3010,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:66",{"_index":3011,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:70",{"_index":3012,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:91",{"_index":3009,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/restore",{"_index":3070,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["src/app/auth/services/auth.service.ts",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:12",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:30",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:42",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:47",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:51",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:55",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:59",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:63",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:67",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:9",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/user.service.ts",{"_index":4230,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:12",{"_index":4235,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:16",{"_index":4233,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:9",{"_index":4232,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/dashboard/classes/user.class.ts",{"_index":4247,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/classes/user.class.ts:15",{"_index":4253,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/classes/user.class.ts:5",{"_index":4251,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/components/integration",{"_index":2350,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["src/app/dashboard/components/member",{"_index":2582,"title":{},"body":{"components/MemberListComponent.html":{}}}],["src/app/dashboard/components/view",{"_index":4333,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["src/app/dashboard/dashboard.module.ts",{"_index":1212,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/dashboard.routing.ts",{"_index":1239,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/dashboard/dialogs/add",{"_index":10,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["src/app/dashboard/interfaces/git",{"_index":1940,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["src/app/dashboard/interfaces/project",{"_index":2921,"title":{},"body":{"interfaces/ProjectMember.html":{}}}],["src/app/dashboard/interfaces/project.interface",{"_index":2848,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["src/app/dashboard/interfaces/project.interface.ts",{"_index":2916,"title":{},"body":{"interfaces/Project.html":{}}}],["src/app/dashboard/interfaces/workspace.interface",{"_index":2849,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["src/app/dashboard/interfaces/workspace.interface.ts",{"_index":4360,"title":{},"body":{"interfaces/Workspace.html":{}}}],["src/app/dashboard/pages/create",{"_index":1131,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["src/app/dashboard/pages/edit",{"_index":1490,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["src/app/dashboard/pages/github",{"_index":2094,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["src/app/dashboard/pages/projects",{"_index":2950,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["src/app/dashboard/pages/workspaces",{"_index":4392,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["src/app/dashboard/services/git",{"_index":1980,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["src/app/dashboard/services/member.service.ts",{"_index":2604,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:11",{"_index":2606,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:19",{"_index":2614,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:29",{"_index":2619,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:39",{"_index":2612,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:49",{"_index":2608,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:61",{"_index":2617,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/project.service",{"_index":2850,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["src/app/dashboard/services/project.service.ts",{"_index":2923,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:12",{"_index":2925,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:20",{"_index":2935,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:29",{"_index":2932,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:38",{"_index":2938,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:47",{"_index":2930,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:58",{"_index":2927,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:65",{"_index":2936,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/workspace.service",{"_index":2851,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["src/app/dashboard/services/workspace.service.ts",{"_index":4366,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:14",{"_index":4369,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:27",{"_index":4375,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:36",{"_index":4373,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:45",{"_index":4378,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:53",{"_index":4376,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:62",{"_index":4371,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:74",{"_index":4381,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/emails/emails.module.ts",{"_index":1577,"title":{},"body":{"modules/EmailsModule.html":{}}}],["src/app/emails/emails.routing.ts",{"_index":1579,"title":{},"body":{"modules/EmailsRoutingModule.html":{}}}],["src/app/hello",{"_index":4680,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/app/landing",{"_index":2378,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["src/app/messages/messages.module.ts",{"_index":2637,"title":{},"body":{"modules/MessagesModule.html":{}}}],["src/app/messages/messages.routing.ts",{"_index":2639,"title":{},"body":{"modules/MessagesRoutingModule.html":{}}}],["src/app/settings/components/integration",{"_index":2334,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["src/app/settings/components/list",{"_index":2398,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["src/app/settings/interfaces/session.interface",{"_index":3222,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/interfaces/session.interface.ts",{"_index":4239,"title":{},"body":{"interfaces/UserSession.html":{}}}],["src/app/settings/pages/settings",{"_index":1952,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{}}}],["src/app/settings/pages/settings/settings.page",{"_index":3326,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/settings/pages/settings/settings.page.ts",{"_index":3336,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:10",{"_index":3347,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:11",{"_index":3346,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:12",{"_index":3345,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:13",{"_index":3343,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:17",{"_index":3344,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/services/sessions.service.ts",{"_index":3216,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:12",{"_index":3220,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:16",{"_index":3219,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:9",{"_index":3217,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/settings.module.ts",{"_index":3325,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/settings/settings.routing.ts",{"_index":3353,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/tasks/components/board",{"_index":761,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["src/app/tasks/components/input",{"_index":2173,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["src/app/tasks/components/status",{"_index":3517,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["src/app/tasks/components/view",{"_index":4347,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts",{"_index":3692,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:105",{"_index":3713,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:111",{"_index":3711,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:136",{"_index":3708,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:142",{"_index":3706,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:150",{"_index":3707,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:169",{"_index":3705,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:38",{"_index":3727,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:40",{"_index":3731,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:41",{"_index":3726,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:42",{"_index":3729,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:44",{"_index":3724,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:45",{"_index":3732,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:46",{"_index":3722,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:47",{"_index":3721,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:48",{"_index":3723,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:50",{"_index":3720,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:52",{"_index":3719,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:73",{"_index":3704,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:76",{"_index":3714,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:84",{"_index":3709,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/enums/task",{"_index":4456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/tasks/interfaces/schedule.interface.ts",{"_index":3417,"title":{},"body":{"interfaces/SinglePersonSchedule.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/interfaces/status.interface.ts",{"_index":3496,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["src/app/tasks/interfaces/task.interface.ts",{"_index":3677,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["src/app/tasks/pages/board/board.page.ts",{"_index":528,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:148",{"_index":569,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:164",{"_index":565,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:168",{"_index":559,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:30",{"_index":575,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:31",{"_index":572,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:32",{"_index":573,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:33",{"_index":574,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:34",{"_index":571,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:36",{"_index":585,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:37",{"_index":578,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:39",{"_index":581,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:40",{"_index":570,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:41",{"_index":577,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:42",{"_index":576,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:43",{"_index":580,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:44",{"_index":552,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:66",{"_index":562,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:70",{"_index":568,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:76",{"_index":567,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:80",{"_index":555,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts",{"_index":3089,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:16",{"_index":3104,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:17",{"_index":3103,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:19",{"_index":3099,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:20",{"_index":3101,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:21",{"_index":3102,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:23",{"_index":3106,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:37",{"_index":3096,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:50",{"_index":3097,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/task",{"_index":3775,"title":{},"body":{"components/TaskListPage.html":{}}}],["src/app/tasks/pipes/status",{"_index":3509,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["src/app/tasks/pipes/task",{"_index":3849,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["src/app/tasks/services/status.service.ts",{"_index":3551,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:11",{"_index":3553,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:19",{"_index":3562,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:29",{"_index":3561,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:39",{"_index":3557,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:49",{"_index":3566,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:59",{"_index":3560,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:63",{"_index":3564,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:74",{"_index":3555,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/task.service.ts",{"_index":3871,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:119",{"_index":3888,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:129",{"_index":3890,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:155",{"_index":3898,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:185",{"_index":3893,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:212",{"_index":3896,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:239",{"_index":3900,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:277",{"_index":3881,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:290",{"_index":3886,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:33",{"_index":3878,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:53",{"_index":3892,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:74",{"_index":3887,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:98",{"_index":3902,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/tasks.module.ts",{"_index":4004,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/tasks/tasks.routing.ts",{"_index":4020,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/environments/environment",{"_index":369,"title":{},"body":{"injectables/ApiService.html":{},"components/MainViewComponent.html":{}}}],["src/locales",{"_index":4739,"title":{},"body":{"additional-documentation/localization.html":{}}}],["src/locales/messages.pl",{"_index":4737,"title":{},"body":{"additional-documentation/localization.html":{}}}],["src/stories/helpers/classes/form",{"_index":1920,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["src/stories/helpers/classes/story",{"_index":1792,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{}}}],["src/stories/helpers/classes/story.class.ts",{"_index":3592,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"miscellaneous/typealiases.html":{}}}],["src/stories/helpers/classes/story.class.ts:100",{"_index":3615,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:115",{"_index":3609,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:125",{"_index":3620,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:129",{"_index":3618,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:29",{"_index":3605,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:30",{"_index":3603,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:64",{"_index":3617,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:68",{"_index":3611,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:80",{"_index":3613,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/classes/story.class.ts:86",{"_index":3608,"title":{},"body":{"classes/Story.html":{}}}],["src/stories/helpers/control",{"_index":4455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/stories/helpers/functions/component",{"_index":4024,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["src/stories/helpers/functions/get",{"_index":4497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/tests/helpers/ng",{"_index":4053,"title":{},"body":{"classes/TestNgControl.html":{}}}],["src/tests/helpers/validator",{"_index":4494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stage",{"_index":3005,"title":{},"body":{"components/RegisterPage.html":{},"additional-documentation/localization.html":{}}}],["start",{"_index":953,"title":{},"body":{"components/ChangePasswordPage.html":{},"interfaces/EmojiToken.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/WorkspacesListPage.html":{}}}],["start(src",{"_index":1637,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["start:docsapi",{"_index":4559,"title":{},"body":{"index.html":{}}}],["start:test",{"_index":4553,"title":{},"body":{"index.html":{}}}],["startcolumn",{"_index":2716,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["started",{"_index":1366,"title":{"index.html":{},"license.html":{}},"body":{"classes/DialogRef.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"index.html":{}}}],["startgithubintegration",{"_index":1984,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["starting",{"_index":4296,"title":{},"body":{"classes/Utils.html":{}}}],["startline",{"_index":3189,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["startlinenumber",{"_index":2715,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{}}}],["startnavigate",{"_index":4538,"title":{},"body":{"index.html":{}}}],["startpos",{"_index":4292,"title":{},"body":{"classes/Utils.html":{}}}],["state",{"_index":654,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/DialogRef.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["statement",{"_index":3043,"title":{},"body":{"components/RegisterPage.html":{}}}],["states",{"_index":4723,"title":{},"body":{"additional-documentation/localization.html":{}}}],["static",{"_index":1302,"title":{},"body":{"components/DialogOutletComponent.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"classes/Marked.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/TextareaComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{}}}],["staticlabel",{"_index":2268,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["statistics",{"_index":2971,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["status",{"_index":81,"title":{"interfaces/Status.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["status.begin)?.id",{"_index":3755,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["status.id",{"_index":622,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{}}}],["status.name",{"_index":681,"title":{},"body":{"components/BoardPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{}}}],["status.tasks",{"_index":3589,"title":{},"body":{"injectables/StatusService.html":{}}}],["status.tasks.push(task",{"_index":3590,"title":{},"body":{"injectables/StatusService.html":{}}}],["status/column",{"_index":3497,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["status['name",{"_index":3515,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["statuscolor",{"_index":3511,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["statuscolorpipe",{"_index":3507,"title":{"pipes/StatusColorPipe.html":{}},"body":{"pipes/StatusColorPipe.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["statuses",{"_index":3522,"title":{},"body":{"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{}}}],["statuses(statuses",{"_index":3543,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statuses.find((status",{"_index":3754,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["statuses.foreach((status",{"_index":3578,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.map((s",{"_index":3580,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.map((status",{"_index":3584,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.reduce((acc",{"_index":3546,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statuseswithsubtasks",{"_index":3583,"title":{},"body":{"injectables/StatusService.html":{}}}],["statusid",{"_index":563,"title":{},"body":{"components/BoardPage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["statusid)?.name",{"_index":3829,"title":{},"body":{"components/TaskListPage.html":{}}}],["statusid)?.tasks",{"_index":623,"title":{},"body":{"components/BoardPage.html":{}}}],["statuslabelcomponent",{"_index":227,"title":{"components/StatusLabelComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["statuslist",{"_index":30,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["statuslistsubscription",{"_index":537,"title":{},"body":{"components/BoardPage.html":{}}}],["statusmap",{"_index":3523,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statusmap.get(statusid)?.name",{"_index":3550,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statusservice",{"_index":548,"title":{"injectables/StatusService.html":{}},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["statuswithtasks",{"_index":579,"title":{"interfaces/StatusWithTasks.html":{}},"body":{"components/BoardPage.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{}}}],["statuswithtasks).tasks",{"_index":3579,"title":{},"body":{"injectables/StatusService.html":{}}}],["step",{"_index":4531,"title":{},"body":{"index.html":{}}}],["stop",{"_index":245,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/EmojiToken.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["store",{"_index":4515,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stored",{"_index":4545,"title":{},"body":{"index.html":{}}}],["story",{"_index":1921,"title":{"classes/Story.html":{}},"body":{"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"pipes/TaskTypePipe.html":{}}}],["story.class",{"_index":3671,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["storybook/angular",{"_index":1798,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"interfaces/TemplateDecoratorConfig.html":{}}}],["storybook/angular/dist/ts3.9/client/preview/types",{"_index":1800,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["storyconfig",{"_index":3602,"title":{"interfaces/StoryConfig.html":{}},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["storyfn",{"_index":3606,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["storypageconfig",{"_index":1809,"title":{"classes/StoryPageConfig.html":{}},"body":{"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{}}}],["storypageconfig:22",{"_index":1926,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storypageconfig:31",{"_index":1928,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storypageconfig:54",{"_index":1930,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storypageconfig:60",{"_index":1931,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storypageconfig:65",{"_index":1927,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storypageconfig:78",{"_index":1929,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["storytemplate",{"_index":3625,"title":{"classes/StoryTemplate.html":{}},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryTemplate.html":{}}}],["strict",{"_index":4630,"title":{},"body":{"license.html":{}}}],["string",{"_index":308,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"interfaces/Task.html":{},"components/TaskListPage.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{}}}],["string.substring(startpos).search(regex",{"_index":4306,"title":{},"body":{"classes/Utils.html":{}}}],["strings",{"_index":4745,"title":{},"body":{"additional-documentation/localization.html":{}}}],["structure",{"_index":4709,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["studio",{"_index":2871,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"additional-documentation/localization.html":{}}}],["style",{"_index":860,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{}}}],["style.animation",{"_index":3426,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["style.height",{"_index":2113,"title":{},"body":{"components/IconComponent.html":{}}}],["style.width",{"_index":1286,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/IconComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["styles/typography",{"_index":803,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["styling",{"_index":303,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["sub",{"_index":2875,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["subject",{"_index":1086,"title":{},"body":{"components/ControlAccessor.html":{},"classes/DialogRef.html":{},"components/SelectComponent.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["subject.next(tasks",{"_index":3915,"title":{},"body":{"injectables/TaskService.html":{}}}],["subject.pipe(applyfilters(filters",{"_index":3916,"title":{},"body":{"injectables/TaskService.html":{}}}],["submit",{"_index":850,"title":{},"body":{"components/ButtonComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{}}}],["submitcreate",{"_index":1139,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["submitupdate",{"_index":1496,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["subscribe",{"_index":939,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/RegisterPage.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["subscribe((response",{"_index":2438,"title":{},"body":{"components/LoginPage.html":{}}}],["subscribe((result",{"_index":666,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["subscribe((task",{"_index":792,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["subscriber.complete",{"_index":1790,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscriber.error(error",{"_index":1789,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscriber.next(value",{"_index":1786,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscription",{"_index":582,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["subscriptions",{"_index":1509,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["substitute",{"_index":4619,"title":{},"body":{"license.html":{}}}],["subtask",{"_index":789,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["subtask.id",{"_index":3841,"title":{},"body":{"components/TaskListPage.html":{}}}],["subtask.name",{"_index":3842,"title":{},"body":{"components/TaskListPage.html":{}}}],["subtask.statusid",{"_index":3586,"title":{},"body":{"injectables/StatusService.html":{}}}],["subtasks",{"_index":3680,"title":{},"body":{"interfaces/Task.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["subtasktype",{"_index":3738,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["subtasktype.subtask",{"_index":3993,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["subtasktypes",{"_index":3698,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["success",{"_index":1772,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"components/GithubIntegrationPage.html":{}}}],["successfully",{"_index":3927,"title":{},"body":{"injectables/TaskService.html":{}}}],["such",{"_index":4638,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":1096,"title":{},"body":{"components/ControlAccessor.html":{}}}],["sum",{"_index":4269,"title":{},"body":{"classes/UserUtils.html":{}}}],["super",{"_index":2911,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super(merge",{"_index":1938,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["super(ngcontrol",{"_index":1885,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["super.clear",{"_index":2904,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super.delete(key",{"_index":2906,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super.set(key",{"_index":2908,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["support",{"_index":2061,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules.html":{}}}],["supports",{"_index":2107,"title":{},"body":{"components/IconComponent.html":{}}}],["sure",{"_index":659,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["surname",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["suspended",{"_index":1943,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IntegrationEntryComponent.html":{}}}],["svg",{"_index":597,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"classes/Emoji.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{},"modules.html":{}}}],["swagger",{"_index":4561,"title":{},"body":{"index.html":{}}}],["switch",{"_index":1826,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"classes/StoryPageConfig.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{}}}],["switchmap",{"_index":3908,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((confirmed",{"_index":3930,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((newtask",{"_index":3918,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((task",{"_index":3942,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((updatedtask",{"_index":3939,"title":{},"body":{"injectables/TaskService.html":{}}}],["system",{"_index":2449,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsSessionsPage.html":{}}}],["t",{"_index":342,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["table",{"_index":1829,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["tabs",{"_index":4346,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["tabuckner/material",{"_index":4421,"title":{},"body":{"dependencies.html":{}}}],["tak",{"_index":3248,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["take",{"_index":1310,"title":{},"body":{"components/DialogOutletComponent.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/StatusLabelComponent.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["take(1",{"_index":2066,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["taken",{"_index":3036,"title":{},"body":{"components/RegisterPage.html":{}}}],["tap",{"_index":3909,"title":{},"body":{"injectables/TaskService.html":{}}}],["tap((data",{"_index":3937,"title":{},"body":{"injectables/TaskService.html":{}}}],["target",{"_index":1757,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["targeted",{"_index":1377,"title":{},"body":{"classes/DialogRef.html":{}}}],["task",{"_index":230,"title":{"interfaces/Task.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["task'},{'name",{"_index":130,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["task).subscribe",{"_index":793,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["task.assigneeid",{"_index":1860,"title":{},"body":{"classes/Filters.html":{},"injectables/TaskService.html":{}}}],["task.component",{"_index":4006,"title":{},"body":{"modules/TasksModule.html":{}}}],["task.component.html",{"_index":765,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.scss",{"_index":764,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts",{"_index":763,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:17",{"_index":774,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:20",{"_index":773,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:23",{"_index":772,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:25",{"_index":780,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:26",{"_index":781,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:27",{"_index":770,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:31",{"_index":778,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:37",{"_index":779,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:43",{"_index":777,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:63",{"_index":776,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.connectwithissueongithub",{"_index":3923,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.connectwithpullrequestongithub",{"_index":3919,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.dialog.html",{"_index":3694,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["task.dialog.scss",{"_index":3693,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["task.estimateddate",{"_index":3955,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.id",{"_index":682,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["task.id).pipe(switchmap",{"_index":3933,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.interface",{"_index":3506,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["task.issue",{"_index":3924,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.mergedpulllist",{"_index":668,"title":{},"body":{"components/BoardPage.html":{}}}],["task.name",{"_index":683,"title":{},"body":{"components/BoardPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["task.parenttaskid",{"_index":3832,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.pull",{"_index":655,"title":{},"body":{"components/BoardPage.html":{},"injectables/TaskService.html":{}}}],["task.service",{"_index":3569,"title":{},"body":{"injectables/StatusService.html":{}}}],["task.statusid",{"_index":641,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{}}}],["task.subtasks",{"_index":3834,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.subtasks.length",{"_index":3835,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.subtasks?.filter((subtask",{"_index":3585,"title":{},"body":{"injectables/StatusService.html":{}}}],["task.subtasks?.length",{"_index":3582,"title":{},"body":{"injectables/StatusService.html":{}}}],["task/board",{"_index":762,"title":{},"body":{"components/BoardTaskComponent.html":{},"modules/TasksModule.html":{}}}],["task:last",{"_index":732,"title":{},"body":{"components/BoardPage.html":{}}}],["task:not(.cdk",{"_index":745,"title":{},"body":{"components/BoardPage.html":{}}}],["task?.name",{"_index":802,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["taskcreate",{"_index":3774,"title":{},"body":{"components/TaskDialog.html":{}}}],["taskdialog",{"_index":229,"title":{"components/TaskDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["taskdialogdata",{"_index":602,"title":{"interfaces/TaskDialogData.html":{}},"body":{"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["taskdialogvariant",{"_index":603,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"miscellaneous/enumerations.html":{}}}],["taskdialogvariant.create",{"_index":672,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["taskdialogvariant.edit",{"_index":3935,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskid",{"_index":2007,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["tasklist",{"_index":3781,"title":{},"body":{"components/TaskListPage.html":{}}}],["tasklist.filter((task",{"_index":3831,"title":{},"body":{"components/TaskListPage.html":{}}}],["tasklistpage",{"_index":231,"title":{"components/TaskListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["taskmap",{"_index":538,"title":{},"body":{"components/BoardPage.html":{}}}],["taskpriorities",{"_index":3699,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["taskpriority",{"_index":3735,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["taskpriorityicon",{"_index":3851,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["taskpriorityiconpipe",{"_index":3848,"title":{"pipes/TaskPriorityIconPipe.html":{}},"body":{"pipes/TaskPriorityIconPipe.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["taskprioritypipe",{"_index":3863,"title":{"pipes/TaskPriorityPipe.html":{}},"body":{"pipes/TaskPriorityPipe.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["tasks",{"_index":684,"title":{},"body":{"components/BoardPage.html":{},"classes/Filters.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"index.html":{}}}],["tasks.filter((task",{"_index":1859,"title":{},"body":{"classes/Filters.html":{},"injectables/StatusService.html":{}}}],["tasks.routing",{"_index":4019,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks/dialogs/task/task.dialog",{"_index":783,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["tasks/enums/task",{"_index":3736,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{}}}],["tasks/interfaces/schedule.interface",{"_index":3107,"title":{},"body":{"components/SchedulePage.html":{},"injectables/TaskService.html":{}}}],["tasks/interfaces/status.interface",{"_index":82,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["tasks/interfaces/task.interface",{"_index":1855,"title":{},"body":{"classes/Filters.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{}}}],["tasks/services/status.service",{"_index":3741,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["tasks/services/task.service",{"_index":784,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["taskservice",{"_index":547,"title":{"injectables/TaskService.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["tasksmodule",{"_index":3999,"title":{"modules/TasksModule.html":{}},"body":{"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksroutingmodule",{"_index":4003,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tasktype",{"_index":3739,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["tasktype.epic",{"_index":3988,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["tasktype.issue",{"_index":3983,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["tasktype.task",{"_index":3974,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["tasktype.user_story",{"_index":3979,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["tasktypeicon",{"_index":3962,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["tasktypeiconpipe",{"_index":3961,"title":{"pipes/TaskTypeIconPipe.html":{}},"body":{"pipes/TaskTypeIconPipe.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["tasktypepipe",{"_index":3969,"title":{"pipes/TaskTypePipe.html":{}},"body":{"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["tasktypes",{"_index":3700,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["taskwithadditionaldata",{"_index":3685,"title":{"interfaces/TaskWithAdditionalData.html":{}},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["td",{"_index":4187,"title":{},"body":{"components/TextareaComponent.html":{}}}],["temp",{"_index":2905,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryTemplate.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"interfaces/TemplateDecoratorConfig.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["template.class",{"_index":3626,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["template.class.ts",{"_index":3665,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["template.class.ts:12",{"_index":3670,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["template.class.ts:16",{"_index":3669,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["template.class.ts:5",{"_index":3668,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["template.match(/(?]*(?=>)/g)?.[0",{"_index":4048,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["templatedecoratorconfig",{"_index":4023,"title":{"interfaces/TemplateDecoratorConfig.html":{}},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["templateref",{"_index":2386,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["test",{"_index":1694,"title":{},"body":{"classes/Enum.html":{},"injectables/GitIntegrationService.html":{}}}],["testenum",{"_index":1679,"title":{},"body":{"classes/Enum.html":{}}}],["testing",{"_index":2212,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{}}}],["testing.helper.ts",{"_index":4471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["testngcontrol",{"_index":1089,"title":{"classes/TestNgControl.html":{}},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{}}}],["tests",{"_index":1691,"title":{},"body":{"classes/Enum.html":{},"index.html":{},"additional-documentation/continuos-integration.html":{}}}],["tests/helpers/ng",{"_index":2211,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["text",{"_index":311,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"interfaces/EmojiToken.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/localization.html":{}}}],["textarea",{"_index":3773,"title":{},"body":{"components/TaskDialog.html":{},"components/TextareaComponent.html":{}}}],["textarea'},{'name",{"_index":233,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["textarea.component.html",{"_index":4066,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea.component.scss",{"_index":4065,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea.theme",{"_index":4120,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textareacomponent",{"_index":232,"title":{"components/TextareaComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["th",{"_index":4188,"title":{},"body":{"components/TextareaComponent.html":{}}}],["theirs",{"_index":4516,"title":{},"body":{"miscellaneous/functions.html":{}}}],["theme",{"_index":4135,"title":{},"body":{"components/TextareaComponent.html":{}}}],["theory",{"_index":4627,"title":{},"body":{"license.html":{}}}],["this._args",{"_index":3674,"title":{},"body":{"classes/StoryTemplate.html":{}}}],["this._assignee",{"_index":2216,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this._checkifisrequired",{"_index":1110,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this._config",{"_index":3632,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this._config.config.selector",{"_index":3654,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this._config.props",{"_index":3655,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this._config.template.props",{"_index":3656,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this._context",{"_index":2391,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["this._context.nglet",{"_index":2393,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["this._control",{"_index":4063,"title":{},"body":{"classes/TestNgControl.html":{}}}],["this._filters",{"_index":1882,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this._icon",{"_index":2159,"title":{},"body":{"components/IconComponent.html":{}}}],["this._initcheckfortouch",{"_index":1109,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this._initialized",{"_index":2674,"title":{},"body":{"classes/Monaco.html":{}}}],["this._isbuttondisabled",{"_index":4221,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this._meta",{"_index":1812,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.argtypes",{"_index":1818,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.argtypes[property",{"_index":1828,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.component.prototype[property",{"_index":1825,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.decorators",{"_index":1813,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.metadata",{"_index":1815,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.selector",{"_index":1841,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._meta.title",{"_index":1837,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this._persistentkey",{"_index":2915,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["this._required",{"_index":1097,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this._story",{"_index":3633,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.activatedroute.data.subscribe",{"_index":2648,"title":{},"body":{"components/MockPage.html":{}}}],["this.activatedroute.snapshot.params",{"_index":609,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/MemberListComponent.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.activatedroute.snapshot.queryparams",{"_index":931,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/GithubIntegrationPage.html":{}}}],["this.active",{"_index":2798,"title":{},"body":{"components/NavElementComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["this.activeworkspace",{"_index":2852,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.add(key",{"_index":1489,"title":{},"body":{"classes/ESet.html":{}}}],["this.addcode(config.code",{"_index":3642,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.adddefaulttemplate",{"_index":3645,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.adddescription(config.description",{"_index":3640,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.addprops(this.props",{"_index":3647,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.addtemplate(config.html",{"_index":3644,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.afterclosed",{"_index":1398,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.afterclosed$.complete",{"_index":1392,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.afterclosed$.next(dialogresult",{"_index":1391,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.afteropened",{"_index":1397,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.afteropened$.complete",{"_index":1393,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.alert(data",{"_index":1475,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.animationname",{"_index":3458,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.apiservice",{"_index":2071,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/auth/delete",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.delete(`/auth/delete/confirm",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.delete(`/project/${projectid",{"_index":2941,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/integration/github",{"_index":2075,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/member",{"_index":2624,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/status/${status.id",{"_index":3574,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid",{"_index":3929,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid}/integration/git/issue",{"_index":2081,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid}/integration/git/pull",{"_index":2084,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/session/${id",{"_index":3224,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.apiservice.delete(`/user/integration/github/${githubaccountid",{"_index":2074,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/workspace/${id}`).pipe(this.validate('delete",{"_index":4386,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.get('/user/integration/github/repository",{"_index":2069,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get('/user/integration/github/repository').pipe",{"_index":2054,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get('/workspace').pipe",{"_index":2945,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.get(`/auth/me",{"_index":4238,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.get(`/project/${projectid",{"_index":2940,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.get(`/project/${projectid}/integration/git/issue",{"_index":2078,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get(`/project/${projectid}/integration/git/pull",{"_index":2082,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get(`/project/${projectid}/member",{"_index":2622,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.get(`/project/${projectid}/status",{"_index":3570,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.get(`/project/${projectid}/status/${statusid",{"_index":3571,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.get(`/project/${projectid}/task`).subscribe((tasks",{"_index":3914,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.get(`/session",{"_index":3223,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.apiservice.get(`/workspace",{"_index":4388,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.get(`/workspace/${id",{"_index":4385,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.post('/project",{"_index":2943,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.post(`/auth/delete/recover",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/login",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/logout",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/password/recover",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/password/reset",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/register",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/project/${projectid}/integration/github",{"_index":2070,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/${projectid}/status",{"_index":3572,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task",{"_index":3917,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task/${taskid}/integration/git/issue",{"_index":2080,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task/${taskid}/integration/git/pull",{"_index":2083,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/member",{"_index":2627,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.post(`/user/integration/github",{"_index":2067,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/workspace",{"_index":4389,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.put(`/auth/edit",{"_index":4237,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.put(`/project/${project.id",{"_index":2942,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.put(`/project/${projectid}/member",{"_index":2623,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.put(`/project/${projectid}/status/${status.id",{"_index":3573,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.put(`/project/${projectid}/task/${task.id",{"_index":3928,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.put(`/project/${projectid}/task/${taskid",{"_index":3960,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.put(`/project/${projectid}/workspace/${newworkspaceid",{"_index":2944,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.put(`/workspace/${workspace.id",{"_index":4387,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiurl",{"_index":377,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.assigneecolor",{"_index":2217,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.assigneecontrol.valuechanges.subscribe((assignee",{"_index":3838,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.authservice",{"_index":936,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.authservice.deleteaccount().subscribe",{"_index":3237,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.authservice.deleteaccountconfirmation(token).subscribe",{"_index":1268,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["this.authservice.isloggedin",{"_index":2416,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["this.authservice.logout().subscribe",{"_index":3072,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["this.authservice.recoveraccount().subscribe",{"_index":3073,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["this.authservice.resetpassword(this.form.value).subscribe",{"_index":1915,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["this.authservice.resetpassword(this.form.value.email).subscribe",{"_index":3236,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.beforeclosed",{"_index":1399,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.beforeclosed$.complete",{"_index":1394,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.beforeclosed$.next(dialogresult",{"_index":1389,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.board",{"_index":613,"title":{},"body":{"components/BoardPage.html":{}}}],["this.changeddate.setvalue(this.changedate(value",{"_index":2327,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.changeddate.valuechanges.subscribe((date",{"_index":2324,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.changelanguage",{"_index":3317,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["this.clearcomponent",{"_index":1316,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.cleargithubintegrationfields",{"_index":3752,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.close",{"_index":2233,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.closenavelement",{"_index":2800,"title":{},"body":{"components/NavElementComponent.html":{}}}],["this.closeprofile",{"_index":4226,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.closeworkspace",{"_index":2854,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.color",{"_index":3451,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.confirm",{"_index":1476,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.control",{"_index":1113,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.disable",{"_index":1126,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.enable",{"_index":1127,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.errors",{"_index":1106,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.markastouched",{"_index":1124,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.setvalue(_editor.getvalue",{"_index":4155,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.control.setvalue(formvalue",{"_index":1893,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.control.setvalue(this.changedate(date",{"_index":2325,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.control.value",{"_index":1105,"title":{},"body":{"components/ControlAccessor.html":{},"components/TextareaComponent.html":{}}}],["this.control.valuechanges.subscribe((value",{"_index":3149,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.create(projectid",{"_index":3946,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.create(task.projectid",{"_index":3943,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.createinjector(data",{"_index":1313,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.createsubscription",{"_index":1174,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["this.createsubscription?.closed",{"_index":1173,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["this.data",{"_index":94,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.data.projectid",{"_index":99,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.data.variant",{"_index":279,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["this.data.workspaceid",{"_index":97,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.delete(key",{"_index":1488,"title":{},"body":{"classes/ESet.html":{}}}],["this.delete(projectid",{"_index":3932,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.deleteaccount(token",{"_index":1267,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["this.destroy$.complete",{"_index":1129,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.destroy$.next(null",{"_index":1128,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.dialogref.close([formvalues.email",{"_index":107,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["this.dialogref.close(false",{"_index":108,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.dialogref.close(formvalues",{"_index":3767,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.dialogref.close(true",{"_index":317,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["this.dialogs$.getvalue().size",{"_index":1455,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogs$.next(this.dialogsmap",{"_index":1468,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogservice",{"_index":657,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["this.dialogservice.closeall",{"_index":1744,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.dialogservice.confirmprojectdelete(project).subscribe",{"_index":2860,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["this.dialogservice.confirmworkspacedelete(this.workspace).subscribe",{"_index":2862,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.dialogservice.confirmworkspacedelete(workspace).subscribe",{"_index":4405,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.dialogservice.openerrordialog($localize`your",{"_index":1747,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.dialogservice.registeroutlet(outlet",{"_index":1312,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.dialogsmap",{"_index":1444,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.delete(uid",{"_index":1467,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.foreach((dialog",{"_index":1469,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.set(uid",{"_index":1465,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.disableeditingfunctions",{"_index":1816,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this.duration",{"_index":3454,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.editor",{"_index":4156,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.editor?.executeselectionedits",{"_index":4164,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.editor?.focus",{"_index":4165,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.editproject",{"_index":1535,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.editprojectwithworkspace(newworkspaceid",{"_index":1534,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.el.nativeelement.__ngcontext__[33].focus",{"_index":1908,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["this.elementref.nativeelement.focus",{"_index":868,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.error",{"_index":2443,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.filters.entries",{"_index":1888,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filters.push(filters.only_my_tasks(user.id",{"_index":3827,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.filterscontrol.valuechanges.subscribe((filters",{"_index":3828,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.focused",{"_index":2285,"title":{},"body":{"components/InputComponent.html":{}}}],["this.form",{"_index":1879,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.form.addcontrol('id",{"_index":1524,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.form.addcontrol('workspaceid",{"_index":1169,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["this.form.get('newworkspaceid')?.value",{"_index":1533,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.form.get('projectid')?.valuechanges.subscribe(this.onprojectidchange.bind(this",{"_index":3744,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.get('workspaceid')?.valuechanges.subscribe(this.onworkspaceidchange.bind(this",{"_index":3743,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.get(field)?.invalid",{"_index":3028,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.get(field)?.markastouched",{"_index":3026,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.get(field)?.updatevalueandvalidity",{"_index":3027,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.invalid",{"_index":105,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.markallastouched",{"_index":103,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue",{"_index":95,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue(project",{"_index":1556,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.form.patchvalue(response",{"_index":3234,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.form.patchvalue(task",{"_index":3742,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue(workspace",{"_index":1530,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.form.updatevalueandvalidity",{"_index":104,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.valid",{"_index":935,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.form.value",{"_index":102,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.value.password",{"_index":938,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["this.form.value.repository",{"_index":2375,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.form?.controls[index",{"_index":1886,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.getconnectedprojects(account).pipe(take(1",{"_index":1969,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.getselectionedits(edits",{"_index":3213,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["this.getsubscription",{"_index":1528,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.getsubscription.unsubscribe",{"_index":1542,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.githubaccounts",{"_index":1965,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.githubintegrationservice.isownerofrepository(&#39;@czemar/cli&#39",{"_index":2039,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.githubintegrationservice.isownerofrepository('@czemar/cli",{"_index":2086,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.githubintegrationservice.startgithubintegration",{"_index":2049,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.gitintegrationservice",{"_index":1975,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.connectgithubissue(projectid",{"_index":3925,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.gitintegrationservice.connectgithubpull(projectid",{"_index":3920,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.gitintegrationservice.deleteconnectedgithubaccount(account.id).subscribe",{"_index":1971,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.getconnectedgithubaccounts().pipe",{"_index":1966,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.getgithubintegration().subscribe((integration",{"_index":2371,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.gitintegrationservice.githubissuelist(projectid",{"_index":3759,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.githubpulllist(projectid",{"_index":3761,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.hasgithubintegration(projectid!).subscribe((value",{"_index":3756,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.postgithubintegration(installation_id).subscribe",{"_index":2103,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["this.gitintegrationservice.startgithubintegration().subscribe",{"_index":2368,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.handleerror(e",{"_index":2437,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.has(key",{"_index":1487,"title":{},"body":{"classes/ESet.html":{}}}],["this.hide",{"_index":1324,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.host.viewcontainerref",{"_index":1319,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.httpclient.request(method",{"_index":376,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.image",{"_index":2649,"title":{},"body":{"components/MockPage.html":{}}}],["this.injector",{"_index":1328,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.input.nativeelement",{"_index":4125,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.isgithubintegrationavailable",{"_index":3757,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.isopen",{"_index":2236,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(false",{"_index":2235,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(true",{"_index":2234,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(val",{"_index":2228,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.value",{"_index":2229,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isownerofrepository(project.githubintegration",{"_index":2093,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.issuelist",{"_index":3758,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.list(projectid).pipe",{"_index":2628,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.list(projectid).pipe(take(1",{"_index":3947,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.get(projectid",{"_index":3912,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.has(projectid",{"_index":3911,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.set(projectid",{"_index":3913,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.loadcomponent(component",{"_index":1317,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.loadgithubintegration",{"_index":1963,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.loadparamsfromurl",{"_index":92,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.loadproject(projectid",{"_index":1526,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.loadrepositories",{"_index":2369,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.loadworkspace(workspaceid",{"_index":1570,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.loadworkspaces",{"_index":4403,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.loginsubscription",{"_index":2434,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginsubscription.closed",{"_index":2435,"title":{},"body":{"components/LoginPage.html":{}}}],["this.m_w",{"_index":2988,"title":{},"body":{"classes/Random.html":{}}}],["this.m_z",{"_index":2990,"title":{},"body":{"classes/Random.html":{}}}],["this.mask",{"_index":2989,"title":{},"body":{"classes/Random.html":{}}}],["this.matdialog.open(component",{"_index":1462,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.memberlist",{"_index":1172,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/MemberListComponent.html":{}}}],["this.members",{"_index":619,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.members$.next(members",{"_index":2223,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.members$.next(membersarray",{"_index":2226,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.memberservice.add(result",{"_index":1540,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.memberservice.add(this.memberlist",{"_index":1176,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.memberservice.list(projectid",{"_index":2597,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.memberservice.list(projectid).pipe",{"_index":3822,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.memberservice.list(projectid).pipe(take(1",{"_index":3948,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.memberservice.map(projectid",{"_index":620,"title":{},"body":{"components/BoardPage.html":{}}}],["this.memberservice.remove(this.projectid",{"_index":2598,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.mergeconfig",{"_index":3649,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.mode",{"_index":4157,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.name",{"_index":2165,"title":{},"body":{"components/IconComponent.html":{}}}],["this.ngcontrol",{"_index":1116,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":1108,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol?.control",{"_index":1101,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol?.name?.tostring",{"_index":1098,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.onprojectidchange(projectid",{"_index":3746,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.onworkspaceidchange(workspaceid",{"_index":3745,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.open",{"_index":2237,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.open(alertdialog",{"_index":1472,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.opennavelement",{"_index":2799,"title":{},"body":{"components/NavElementComponent.html":{}}}],["this.openprofile",{"_index":4227,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.openworkspace",{"_index":2853,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.options",{"_index":3156,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap!.set(x.value",{"_index":3161,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap?.foreach((option",{"_index":3150,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap?.get(this.control.value",{"_index":3148,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.outlets.get(outlet",{"_index":1457,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.outlets.set(outlet",{"_index":1471,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.output.nativeelement",{"_index":4160,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.output.nativeelement.innerhtml",{"_index":4158,"title":{},"body":{"components/TextareaComponent.html":{}}}],["this.overlay?.nativeelement.contains(e.target",{"_index":2231,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.prefix",{"_index":2163,"title":{},"body":{"components/IconComponent.html":{}}}],["this.project",{"_index":611,"title":{},"body":{"components/BoardPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/TaskListPage.html":{}}}],["this.project$.subscribe((project",{"_index":1555,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.project$.subscribe((workspace",{"_index":1529,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.projectid",{"_index":610,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.projectid).subscribe",{"_index":3549,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.projectid]).subscribe",{"_index":1541,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.projectlist",{"_index":3747,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.projects",{"_index":2965,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["this.projectservice",{"_index":1536,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{}}}],["this.projectservice.create(this.form.value).subscribe((response",{"_index":1175,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.projectservice.delete(project.id).subscribe",{"_index":2861,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["this.projectservice.get(id",{"_index":1527,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.projectservice.get(projectid",{"_index":612,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.projectservice.get(projectid).pipe(map((project",{"_index":2076,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.projectservice.update(this.form.value).subscribe",{"_index":1538,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.propertypredicate(p",{"_index":1823,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"classes/StoryPageConfig.html":{}}}],["this.props",{"_index":3646,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryConfig.html":{}}}],["this.pulllist",{"_index":3760,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.queryoptions?.changes.subscribe((options",{"_index":3153,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.queryoptions?.map((x",{"_index":3157,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.ref.nativeelement.innertext",{"_index":2888,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.registersubscription",{"_index":3031,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registersubscription.closed",{"_index":3032,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.repositorylist",{"_index":2372,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.repositorylistloaded",{"_index":2370,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.request('delete",{"_index":383,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('get",{"_index":381,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('patch",{"_index":385,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('post",{"_index":382,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('put",{"_index":384,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.resetsubscription",{"_index":933,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["this.resetsubscription.closed",{"_index":934,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["this.router",{"_index":2855,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.router.navigate",{"_index":1539,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/LoginPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["this.router.navigate(['/']).then",{"_index":1204,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["this.router.navigate(['/auth/delete",{"_index":1746,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigate(['/auth/login",{"_index":940,"title":{},"body":{"components/ChangePasswordPage.html":{},"interceptors/ErrorInterceptor.html":{},"guards/LoggedInUsersGuard.html":{}}}],["this.router.navigate(['/auth/restore",{"_index":2440,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigate([this.workspaceid]).then",{"_index":1178,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.router.routerstate.snapshot",{"_index":3085,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["this.routerextensions.snapshot.params",{"_index":96,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.savestate",{"_index":2907,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["this.selected$.next(option",{"_index":3152,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selected$.next(this.optionsmap?.get(this.control.value",{"_index":3162,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.sessionservice.delete(id).subscribe",{"_index":3391,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.sessionservice.list",{"_index":3375,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.sessionslist",{"_index":3374,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.setanimationname('close",{"_index":3455,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.show",{"_index":1323,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.showarrow$.next(boolean(this.listelement?.nativeelement.children.length",{"_index":2801,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["this.size",{"_index":2169,"title":{},"body":{"components/IconComponent.html":{}}}],["this.snackbars$.next(map",{"_index":3493,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbars$.next(new",{"_index":3495,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbars$.value",{"_index":3491,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbarservice.close(this.uid",{"_index":3456,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.snackbarservice.show($localize`task",{"_index":3926,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.snackbarservice.snackbars",{"_index":3477,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["this.stage",{"_index":3029,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.state$.complete",{"_index":1395,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.state$.next(matdialogstate.closed",{"_index":1390,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.state$.next(matdialogstate.closing",{"_index":1388,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.state$.next(matdialogstate.open",{"_index":1396,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.state$.value",{"_index":1405,"title":{},"body":{"classes/DialogRef.html":{}}}],["this.statuses$.next(statuses",{"_index":3544,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.statuslist",{"_index":615,"title":{},"body":{"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["this.statuslist$.subscribe((list",{"_index":3825,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.statuslist$.subscribe((statuses",{"_index":3753,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.statuslist$.subscribe((statuslist",{"_index":618,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslist.find((status",{"_index":621,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.statuslist[newstatusindex",{"_index":632,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslist[previousstatusindex",{"_index":630,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslistsubscription",{"_index":617,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslistsubscription?.unsubscribe",{"_index":624,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statusmap",{"_index":3545,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.statusservice.board(projectid",{"_index":614,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statusservice.list(projectid",{"_index":3751,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["this.statusservice.listwithtasks(projectid",{"_index":616,"title":{},"body":{"components/BoardPage.html":{}}}],["this.task).subscribe",{"_index":787,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["this.task.id",{"_index":791,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["this.taskid",{"_index":2238,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.tasklist",{"_index":3823,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.taskservice",{"_index":2239,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.taskservice.changestatus(status.id",{"_index":3548,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.taskservice.create(this.projectid",{"_index":674,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.deletewithconfirmation(this.projectid",{"_index":786,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.list(projectid",{"_index":3824,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.taskservice.list(projectid)]).pipe",{"_index":3576,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.taskservice.opencreatenewtaskdialog().subscribe",{"_index":4224,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.taskservice.openedittaskdialog(this.projectid",{"_index":788,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.update(this.projectid",{"_index":643,"title":{},"body":{"components/BoardPage.html":{}}}],["this.token",{"_index":932,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["this.touched$.complete",{"_index":1130,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.touched$.next(true",{"_index":1125,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.unauthorizedinarow",{"_index":1743,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.update(projectid",{"_index":3941,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.updateoptions",{"_index":3154,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.updatesubscription",{"_index":1532,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.updatesubscription.unsubscribe",{"_index":1543,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.updatesubscription?.closed",{"_index":1531,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.userservice.getmyself().subscribe",{"_index":2432,"title":{},"body":{"components/LoginPage.html":{}}}],["this.userservice.getmyself().subscribe((response",{"_index":3233,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.userservice.getmyself().subscribe((user",{"_index":3826,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.userservice.update(this.form.value).subscribe",{"_index":3235,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.width",{"_index":1329,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["this.workspace",{"_index":1167,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{}}}],["this.workspace$.pipe",{"_index":2966,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["this.workspace$.subscribe((workspace",{"_index":1571,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.workspace.id",{"_index":2858,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.workspaceid",{"_index":1166,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ProjectsListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.workspacelist",{"_index":3410,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.workspacelist$.subscribe((workspaces",{"_index":1557,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.workspaces",{"_index":4404,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.workspaceservice",{"_index":3748,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.workspaceservice.create(this.form.value).subscribe",{"_index":1203,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["this.workspaceservice.delete(this.workspace.id).subscribe",{"_index":2863,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.workspaceservice.delete(workspace.id).subscribe",{"_index":4406,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.workspaceservice.get(id",{"_index":1523,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.workspaceservice.get(workspaceid",{"_index":1168,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/ProjectsListPage.html":{}}}],["this.workspaceservice.list",{"_index":1521,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/WorkspacesListPage.html":{}}}],["this.workspaceservice.list().pipe",{"_index":4219,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.workspaceservice.update(this.form.value).subscribe",{"_index":1572,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.yet",{"_index":3155,"title":{},"body":{"components/SelectComponent.html":{}}}],["three",{"_index":1682,"title":{},"body":{"classes/Enum.html":{}}}],["through",{"_index":3068,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["throw",{"_index":1400,"title":{},"body":{"classes/DialogRef.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{}}}],["throwerror",{"_index":1737,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["time",{"_index":2311,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/SettingsAccountPage.html":{}}}],["time'},{'name",{"_index":174,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["time.component",{"_index":2508,"title":{},"body":{"modules/MainModule.html":{}}}],["time.component.html",{"_index":2313,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.scss",{"_index":2312,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts",{"_index":2310,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:13",{"_index":2318,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:16",{"_index":2317,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:18",{"_index":2322,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:20",{"_index":2316,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:26",{"_index":2320,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:36",{"_index":2319,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time/input",{"_index":2309,"title":{},"body":{"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{}}}],["timeline",{"_index":3113,"title":{},"body":{"components/SchedulePage.html":{}}}],["title",{"_index":260,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"injectables/DialogService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"classes/StoryPageConfig.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{}}}],["title>app",{"_index":700,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["todo",{"_index":3792,"title":{},"body":{"components/TaskListPage.html":{}}}],["toggle",{"_index":1483,"title":{},"body":{"classes/ESet.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["toggle(key",{"_index":1484,"title":{},"body":{"classes/ESet.html":{}}}],["toggleendandstartofeachselection",{"_index":2695,"title":{},"body":{"classes/MonacoExtended.html":{},"interfaces/SelectionEditOperation.html":{}}}],["toggleendandstartofeachselection(editor",{"_index":2726,"title":{},"body":{"classes/MonacoExtended.html":{}}}],["togglenavelement",{"_index":2784,"title":{},"body":{"components/NavElementComponent.html":{}}}],["toggleprofile",{"_index":4201,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["toggleworkspace",{"_index":2821,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["token",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/EmojiToken.html":{},"interfaces/RequestOptions.html":{}}}],["token.emojitype",{"_index":1663,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["tokenizer",{"_index":1636,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["tokenizer(src",{"_index":1642,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["tool",{"_index":4191,"title":{},"body":{"components/TextareaComponent.html":{},"additional-documentation/continuos-integration.html":{}}}],["tools",{"_index":4190,"title":{},"body":{"components/TextareaComponent.html":{},"additional-documentation/localization.html":{}}}],["top",{"_index":111,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["tort",{"_index":4631,"title":{},"body":{"license.html":{}}}],["touched",{"_index":1011,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["touched.ng",{"_index":2304,"title":{},"body":{"components/InputComponent.html":{}}}],["tracksnackbartuple",{"_index":3473,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["tracksnackbartuple(_index",{"_index":3475,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["transferarrayitem",{"_index":587,"title":{},"body":{"components/BoardPage.html":{}}}],["transform",{"_index":702,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["transform(value",{"_index":3512,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}}}],["transformed",{"_index":4326,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["transition",{"_index":706,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["translatable",{"_index":4747,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translate",{"_index":2655,"title":{},"body":{"components/MockPage.html":{}}}],["translated",{"_index":4718,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translatex(0",{"_index":3469,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["translatex(100",{"_index":3468,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["translatey(100",{"_index":4359,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["translatey(calc($height",{"_index":2300,"title":{},"body":{"components/InputComponent.html":{}}}],["translating",{"_index":4744,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translation",{"_index":4736,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translations",{"_index":4743,"title":{},"body":{"additional-documentation/localization.html":{}}}],["transparent",{"_index":2297,"title":{},"body":{"components/InputComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["trim().replace",{"_index":4051,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{}}}],["true",{"_index":293,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"modules/DashboardRoutingModule.html":{},"components/DialogOutletComponent.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interfaces/ExtendedMeta.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"classes/Marked.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{}}}],["try",{"_index":4150,"title":{},"body":{"components/TextareaComponent.html":{}}}],["trying",{"_index":651,"title":{},"body":{"components/BoardPage.html":{}}}],["ts",{"_index":4677,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["tslib",{"_index":4436,"title":{},"body":{"dependencies.html":{}}}],["tweaks",{"_index":4272,"title":{},"body":{"classes/UserUtils.html":{}}}],["two",{"_index":1681,"title":{},"body":{"classes/Enum.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"interfaces/EmojiToken.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/ExtendedMeta.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"interfaces/SelectionEditOperation.html":{},"classes/SelectionEditPlugin.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"classes/Story.html":{},"interfaces/StoryConfig.html":{},"classes/StoryPageConfig.html":{},"classes/StoryTemplate.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"interfaces/TemplateDecoratorConfig.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/architecture.html":{}}}],["type.enum",{"_index":3740,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{}}}],["type.enum.ts",{"_index":4452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.helper",{"_index":1934,"title":{},"body":{"classes/FormControlStoryPageConfig.html":{}}}],["type.helper.ts",{"_index":4447,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.pipe",{"_index":4018,"title":{},"body":{"modules/TasksModule.html":{}}}],["type.pipe.ts",{"_index":3970,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type.pipe.ts:10",{"_index":3972,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type.pipe.ts:12",{"_index":3973,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type.pipe.ts:9",{"_index":3971,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type[0",{"_index":3769,"title":{},"body":{"components/TaskDialog.html":{}}}],["typealiases",{"_index":4650,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1824,"title":{},"body":{"interfaces/ExtendedMeta.html":{},"components/IconComponent.html":{},"classes/StoryPageConfig.html":{}}}],["typescript",{"_index":1673,"title":{},"body":{"classes/Enum.html":{}}}],["typings",{"_index":3178,"title":{},"body":{"classes/SelectionEditPlugin.html":{}}}],["typo",{"_index":818,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["ua",{"_index":3313,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{},"additional-documentation/localization.html":{}}}],["uaparser",{"_index":3371,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser(agent",{"_index":3386,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser.getbrowser().name",{"_index":3389,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser.getos().name",{"_index":3388,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["ui",{"_index":1000,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/localization.html":{}}}],["uid",{"_index":1464,"title":{},"body":{"injectables/DialogService.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["uk",{"_index":3312,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["ukraine)configuration",{"_index":4731,"title":{},"body":{"additional-documentation/localization.html":{}}}],["ukrainian",{"_index":4730,"title":{},"body":{"additional-documentation/localization.html":{}}}],["ul",{"_index":4181,"title":{},"body":{"components/TextareaComponent.html":{}}}],["unassigned",{"_index":3884,"title":{},"body":{"injectables/TaskService.html":{}}}],["unauthorized",{"_index":4707,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["unauthorizedinarow",{"_index":1724,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["undefined",{"_index":1660,"title":{},"body":{"interfaces/EmojiToken.html":{},"components/InputAssigneeComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{}}}],["underline",{"_index":2330,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/TextareaComponent.html":{}}}],["unicodetotwemoji",{"_index":1587,"title":{},"body":{"classes/Emoji.html":{}}}],["unicodetotwemoji(source",{"_index":1603,"title":{},"body":{"classes/Emoji.html":{}}}],["unified",{"_index":1590,"title":{},"body":{"classes/Emoji.html":{}}}],["unique",{"_index":3502,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["unit",{"_index":4549,"title":{},"body":{"index.html":{}}}],["united",{"_index":4721,"title":{},"body":{"additional-documentation/localization.html":{}}}],["units",{"_index":2123,"title":{},"body":{"components/IconComponent.html":{}}}],["universal",{"_index":2454,"title":{},"body":{"modules/MainModule.html":{}}}],["unknown",{"_index":1895,"title":{},"body":{"components/FiltersComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsSessionsPage.html":{},"pipes/TaskTypePipe.html":{}}}],["unsubscribe",{"_index":1508,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["unsupported",{"_index":4263,"title":{},"body":{"classes/UserUtils.html":{}}}],["untildestroyed",{"_index":1553,"title":{},"body":{"components/EditProjectPage.html":{}}}],["unused",{"_index":4106,"title":{},"body":{"components/TextareaComponent.html":{}}}],["up",{"_index":4523,"title":{},"body":{"index.html":{}}}],["update",{"_index":1002,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["update(moduser",{"_index":4234,"title":{},"body":{"injectables/UserService.html":{}}}],["update(project",{"_index":2937,"title":{},"body":{"injectables/ProjectService.html":{}}}],["update(projectid",{"_index":3565,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["update(this.form.value",{"_index":1560,"title":{},"body":{"components/EditProjectPage.html":{}}}],["update(workspace",{"_index":4377,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["updated",{"_index":3567,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["updatedtask",{"_index":3940,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateheight",{"_index":4139,"title":{},"body":{"components/TextareaComponent.html":{}}}],["updateoptions",{"_index":3132,"title":{},"body":{"components/SelectComponent.html":{}}}],["updateposition",{"_index":1342,"title":{},"body":{"classes/DialogRef.html":{}}}],["updateposition(position",{"_index":1381,"title":{},"body":{"classes/DialogRef.html":{}}}],["updates",{"_index":1384,"title":{},"body":{"classes/DialogRef.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["updatesize",{"_index":1343,"title":{},"body":{"classes/DialogRef.html":{}}}],["updatesize(width",{"_index":1385,"title":{},"body":{"classes/DialogRef.html":{}}}],["updatesubscription",{"_index":1492,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["updating",{"_index":1519,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["upload",{"_index":3059,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["upper",{"_index":235,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["uppercase",{"_index":3122,"title":{},"body":{"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{}}}],["uppernavigationcomponent",{"_index":234,"title":{"components/UpperNavigationComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["url",{"_index":344,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["url('../../../../assets/metadata/logo_with_name.svg",{"_index":3412,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["url('/assets/metadata/logo_with_name.svg",{"_index":947,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["usage",{"_index":1955,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["use",{"_index":363,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/EmojiToken.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"license.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["useclass",{"_index":1088,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{}}}],["used",{"_index":301,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["useful",{"_index":4279,"title":{},"body":{"classes/Utils.html":{}}}],["user",{"_index":650,"title":{"interfaces/User.html":{}},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"additional-documentation/architecture.html":{}}}],["user_story",{"_index":3684,"title":{},"body":{"interfaces/Task.html":{},"pipes/TaskTypeIconPipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":4244,"title":{},"body":{"interfaces/UserSession.html":{}}}],["userdata",{"_index":2660,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["userid",{"_index":3883,"title":{},"body":{"injectables/TaskService.html":{}}}],["username",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{}}}],["users.guard",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users.guard.ts",{"_index":2411,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["users.guard.ts:6",{"_index":2413,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["users.guard.ts:9",{"_index":2414,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["userservice",{"_index":2422,"title":{"injectables/UserService.html":{}},"body":{"components/LoginPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{},"injectables/UserService.html":{}}}],["usersession",{"_index":3221,"title":{"interfaces/UserSession.html":{}},"body":{"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/UserSession.html":{}}}],["userutils",{"_index":2209,"title":{"classes/UserUtils.html":{}},"body":{"components/InputAssigneeComponent.html":{},"classes/UserUtils.html":{}}}],["userutils.getcolorbyid(assignee?.user.id",{"_index":2218,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["userutils.getcolorbyid(member.user.id",{"_index":2222,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["userwithprivileges",{"_index":2658,"title":{"interfaces/UserWithPrivileges.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["usevalue",{"_index":1326,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["using",{"_index":1402,"title":{},"body":{"classes/DialogRef.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["usuniecie",{"_index":3245,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["utilities",{"_index":4278,"title":{},"body":{"classes/Utils.html":{}}}],["utility",{"_index":1671,"title":{},"body":{"classes/Enum.html":{},"additional-documentation/architecture.html":{}}}],["utils",{"_index":2155,"title":{"classes/Utils.html":{}},"body":{"components/IconComponent.html":{},"classes/Utils.html":{}}}],["utils.isletter(character",{"_index":4308,"title":{},"body":{"classes/Utils.html":{}}}],["utils.regexindexof(value",{"_index":2161,"title":{},"body":{"components/IconComponent.html":{}}}],["utils.snakecase(this.name",{"_index":2171,"title":{},"body":{"components/IconComponent.html":{}}}],["uuid",{"_index":1452,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{},"dependencies.html":{}}}],["v",{"_index":1712,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["v4",{"_index":1451,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{}}}],["val",{"_index":2208,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/functions.html":{}}}],["valid",{"_index":1147,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"miscellaneous/functions.html":{}}}],["validate",{"_index":4368,"title":{},"body":{"injectables/WorkspaceService.html":{},"additional-documentation/architecture.html":{}}}],["validate(identifier",{"_index":4379,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["validation",{"_index":4315,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["validationerror",{"_index":1027,"title":{"interfaces/ValidationError.html":{}},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["validationerrorpipe",{"_index":2535,"title":{"pipes/ValidationErrorPipe.html":{}},"body":{"modules/MainModule.html":{},"pipes/ValidationErrorPipe.html":{}}}],["validationerrors",{"_index":1084,"title":{},"body":{"components/ControlAccessor.html":{}}}],["validator",{"_index":1115,"title":{},"body":{"components/ControlAccessor.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["validator.decorator",{"_index":4384,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["validator.decorator.ts",{"_index":1753,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"miscellaneous/functions.html":{}}}],["validator.decorator.ts:4",{"_index":1755,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["validator.name",{"_index":1118,"title":{},"body":{"components/ControlAccessor.html":{}}}],["validator.ts",{"_index":4715,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["validatorfn",{"_index":4493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1111,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/ValidationError.html":{},"additional-documentation/architecture.html":{}}}],["value",{"_index":61,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["value.iconname",{"_index":2168,"title":{},"body":{"components/IconComponent.html":{}}}],["value.prefix",{"_index":2167,"title":{},"body":{"components/IconComponent.html":{}}}],["value.substring(0",{"_index":2164,"title":{},"body":{"components/IconComponent.html":{}}}],["value.substring(splitindex",{"_index":2166,"title":{},"body":{"components/IconComponent.html":{}}}],["value?.message",{"_index":4327,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["values",{"_index":1004,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["values(enumtype",{"_index":1700,"title":{},"body":{"classes/Enum.html":{}}}],["var",{"_index":119,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["variable",{"_index":2129,"title":{},"body":{"components/IconComponent.html":{},"miscellaneous/functions.html":{}}}],["variant",{"_index":296,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"injectables/DialogService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":2561,"title":{},"body":{"components/MainViewComponent.html":{},"properties.html":{}}}],["versions",{"_index":4563,"title":{},"body":{"index.html":{}}}],["via",{"_index":4551,"title":{},"body":{"index.html":{}}}],["view",{"_index":237,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["view'},{'name",{"_index":188,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["view.component",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{}}}],["view.component.html",{"_index":2560,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.scss",{"_index":2559,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts",{"_index":2558,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts:11",{"_index":2565,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts:13",{"_index":2562,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts:17",{"_index":2563,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view/main",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{}}}],["viewchild",{"_index":866,"title":{},"body":{"components/ButtonComponent.html":{},"components/DialogOutletComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["viewchild('btn",{"_index":863,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('elementlist",{"_index":2795,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["viewchild('input",{"_index":2283,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TextareaComponent.html":{}}}],["viewchild('openbelow",{"_index":4216,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["viewchild('output",{"_index":4101,"title":{},"body":{"components/TextareaComponent.html":{}}}],["viewchild('overlay",{"_index":2198,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["viewchild(viewcontainerdirective",{"_index":1301,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["viewcontainerdirective",{"_index":251,"title":{"directives/ViewContainerDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"directives/ViewContainerDirective.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["viewcontainerref",{"_index":1318,"title":{},"body":{"components/DialogOutletComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"directives/ViewContainerDirective.html":{}}}],["viewcontainerref.clear",{"_index":1320,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["viewcontainerref.createcomponent(component",{"_index":1322,"title":{},"body":{"components/DialogOutletComponent.html":{}}}],["viewoptionscomponent",{"_index":236,"title":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["viewtomodelupdate",{"_index":4056,"title":{},"body":{"classes/TestNgControl.html":{}}}],["viewtomodelupdate(newvalue",{"_index":4058,"title":{},"body":{"classes/TestNgControl.html":{}}}],["viewvalue",{"_index":2879,"title":{},"body":{"components/OptionComponent.html":{},"components/SelectComponent.html":{}}}],["visibility",{"_index":2805,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["visible",{"_index":3459,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["visual",{"_index":2870,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"additional-documentation/localization.html":{}}}],["visualize",{"_index":834,"title":{},"body":{"components/ButtonComponent.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Emoji.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"classes/FormControlStoryPageConfig.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"classes/Marked.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"classes/Monaco.html":{},"classes/MonacoExtended.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"classes/SelectionEditPlugin.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"classes/Story.html":{},"classes/StoryPageConfig.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["vscode",{"_index":2866,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["vscode://vscode.git/clone?url=https://github.com/${project.githubintegration",{"_index":2865,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["w",{"_index":1645,"title":{},"body":{"interfaces/EmojiToken.html":{}}}],["want",{"_index":1031,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/DialogService.html":{},"interfaces/RequestOptions.html":{},"injectables/TaskService.html":{}}}],["warranties",{"_index":4600,"title":{},"body":{"license.html":{}}}],["wawrzyniak",{"_index":4577,"title":{},"body":{"license.html":{}}}],["way",{"_index":4634,"title":{},"body":{"license.html":{},"additional-documentation/localization.html":{}}}],["week",{"_index":3121,"title":{},"body":{"components/SchedulePage.html":{}}}],["weight",{"_index":2406,"title":{},"body":{"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/StatusLabelComponent.html":{}}}],["went",{"_index":1777,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["whether",{"_index":1696,"title":{},"body":{"classes/Enum.html":{},"license.html":{}}}],["white",{"_index":2328,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["width",{"_index":113,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["wikipedia",{"_index":4683,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["win",{"_index":2058,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["win.closed",{"_index":2064,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["window",{"_index":1613,"title":{},"body":{"classes/Emoji.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{}}}],["window.document.dispatchevent",{"_index":1047,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["window.location.reload",{"_index":1179,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["window.open",{"_index":2062,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["window.open(`https://github.dev/${project.githubintegration",{"_index":2864,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["window.open(link",{"_index":1972,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["window.open(url",{"_index":2059,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["witch",{"_index":2047,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["withcredentials",{"_index":380,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["within",{"_index":3074,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["without",{"_index":290,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"license.html":{}}}],["withsubtasks",{"_index":3837,"title":{},"body":{"components/TaskListPage.html":{}}}],["wordbasedsuggestions",{"_index":4137,"title":{},"body":{"components/TextareaComponent.html":{}}}],["wordwrap",{"_index":4130,"title":{},"body":{"components/TextareaComponent.html":{}}}],["work",{"_index":2653,"title":{},"body":{"components/MockPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["workflow",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["workspace",{"_index":77,"title":{"interfaces/Workspace.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["workspace'},{'name",{"_index":197,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["workspace.component",{"_index":2513,"title":{},"body":{"modules/MainModule.html":{}}}],["workspace.component.html",{"_index":2808,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.scss",{"_index":2807,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts",{"_index":2806,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:104",{"_index":2839,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:108",{"_index":2835,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:115",{"_index":2837,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:18",{"_index":2823,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:21",{"_index":2824,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:23",{"_index":2846,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:24",{"_index":2845,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:26",{"_index":2847,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:29",{"_index":2822,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:38",{"_index":2840,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:41",{"_index":2825,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:44",{"_index":2844,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:52",{"_index":2833,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:58",{"_index":2843,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:64",{"_index":2842,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:70",{"_index":2826,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:76",{"_index":2831,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:82",{"_index":2828,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:90",{"_index":2832,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:96",{"_index":2829,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.id",{"_index":1559,"title":{},"body":{"components/EditProjectPage.html":{},"components/WorkspacesListPage.html":{}}}],["workspace.name",{"_index":1479,"title":{},"body":{"injectables/DialogService.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{}}}],["workspace.page",{"_index":1227,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["workspace.page.html",{"_index":1198,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.scss",{"_index":1197,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.ts",{"_index":1196,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:22",{"_index":1567,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:23",{"_index":1201,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:27",{"_index":1569,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:30",{"_index":1199,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:32",{"_index":1568,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:36",{"_index":1563,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:43",{"_index":1200,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:58",{"_index":1565,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:69",{"_index":1566,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.projectswithprivileges.length).length",{"_index":4223,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspace.projectswithprivileges.map((project",{"_index":2968,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["workspace/create",{"_index":1195,"title":{},"body":{"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["workspace/edit",{"_index":1231,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditWorkspacePage.html":{}}}],["workspace/nav",{"_index":2512,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["workspaceid",{"_index":87,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/MemberListComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["workspacelist",{"_index":31,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["workspaces",{"_index":240,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["workspaces.filter((workspace",{"_index":4222,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspaces.find((workspace",{"_index":1558,"title":{},"body":{"components/EditProjectPage.html":{}}}],["workspaces.length",{"_index":4220,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspaces.reduce((projects",{"_index":2947,"title":{},"body":{"injectables/ProjectService.html":{}}}],["workspaceservice",{"_index":1141,"title":{"injectables/WorkspaceService.html":{}},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["workspaceslistpage",{"_index":239,"title":{"components/WorkspacesListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/DialogOutletComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{}}}],["world",{"_index":4676,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["world.module.ts",{"_index":4682,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["world/hello",{"_index":4681,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["wrapper",{"_index":901,"title":{},"body":{"components/CardComponent.html":{},"components/InputComponent.html":{}}}],["wrappingstrategy",{"_index":4131,"title":{},"body":{"components/TextareaComponent.html":{}}}],["wrapwithdiv",{"_index":4026,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["wrapwithdiv(template",{"_index":4040,"title":{},"body":{"interfaces/TemplateDecoratorConfig.html":{},"miscellaneous/functions.html":{}}}],["write",{"_index":1019,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writes",{"_index":1018,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue",{"_index":980,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue(value",{"_index":1016,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["wrong",{"_index":1778,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["wyslany",{"_index":3252,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["x",{"_index":2566,"title":{},"body":{"components/MainViewComponent.html":{},"components/SchedulePage.html":{}}}],["x.icon",{"_index":3160,"title":{},"body":{"components/SelectComponent.html":{}}}],["x.value",{"_index":3158,"title":{},"body":{"components/SelectComponent.html":{}}}],["x.viewvalue",{"_index":3159,"title":{},"body":{"components/SelectComponent.html":{}}}],["xl",{"_index":967,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["y",{"_index":1332,"title":{},"body":{"components/DialogOutletComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{}}}],["yarn",{"_index":4536,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{}}}],["yes",{"_index":346,"title":{},"body":{"injectables/ApiService.html":{},"classes/DialogRef.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"classes/PersistentMap.html":{},"classes/SelectionEditPlugin.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/functions.html":{}}}],["yyyy",{"_index":3291,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["z",{"_index":2162,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["ze",{"_index":3250,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["zgadzamy",{"_index":3243,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["zone.js",{"_index":4440,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["zostal",{"_index":3251,"title":{},"body":{"components/SettingsAccountPage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddMemberDialog.html":{"url":"components/AddMemberDialog.html","title":"component - AddMemberDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMemberDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-member-dialog\n            \n\n            \n                styleUrls\n                ./add-member.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-member.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMembers\n                            \n                            \n                                cancel\n                            \n                            \n                                loadParamsFromUrl\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: AddMemberDialogData, dialogRef: MatDialogRef, routerExtensions: RouterExtensionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMemberDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerExtensions\n                                                  \n                                                        \n                                                                        RouterExtensionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMembers\n                        \n                    \n                \n            \n            \n                \naddMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadParamsFromUrl\n                        \n                    \n                \n            \n            \n                \nloadParamsFromUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddMemberDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\n\nexport interface AddMemberDialogData {\n  workspaceId: number;\n  projectId?: number;\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member.dialog.html',\n  styleUrls: ['./add-member.dialog.scss'],\n})\nexport class AddMemberDialog implements OnInit {\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\n    private dialogRef: MatDialogRef,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  addMembers() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close([formValues.email]);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Add members\n\n  \n\n    \n    \n    \n\n  \n\n\n  Cancel\n  Add\n\n\n    \n\n    \n                \n                    ./add-member.dialog.scss\n                \n                form {\n  padding-top: 10px;\n\n  > * {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add members                  Cancel  Add'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddMemberDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddMemberDialogData.html":{"url":"interfaces/AddMemberDialogData.html","title":"interface - AddMemberDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddMemberDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\n\nexport interface AddMemberDialogData {\n  workspaceId: number;\n  projectId?: number;\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member.dialog.html',\n  styleUrls: ['./add-member.dialog.scss'],\n})\nexport class AddMemberDialog implements OnInit {\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\n    private dialogRef: MatDialogRef,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  addMembers() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close([formValues.email]);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertDialog.html":{"url":"components/AlertDialog.html","title":"component - AlertDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/dialogs/alert/alert.dialog.ts\n\n\n\n    \n        Description\n    \n    \n        Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert-dialog\n            \n\n            \n                styleUrls\n                ./alert.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./alert.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                AlertDialogVariant\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                important\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                confirm\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.important-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: AlertDialogData, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:50\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the dialog reference and data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AlertDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Object to pass as data to the dialog\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to dialog instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.important-dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.data.variant === AlertDialogVariant.IMPORTANT\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:67\n                        \n                    \n\n            \n                \n                    Host binding to set if the dialog is important.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/dialogs/alert/alert.dialog.ts:73\n                \n            \n\n\n            \n                \n                    Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/dialogs/alert/alert.dialog.ts:80\n                \n            \n\n\n            \n                \n                    Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        AlertDialogVariant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AlertDialogVariant\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:50\n                        \n                    \n\n            \n                \n                    Passthrough to the dialog's variant enumerable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AlertDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:58\n                        \n                    \n\n            \n                \n                    Object to pass as data to the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        important\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.data.variant === AlertDialogVariant.IMPORTANT\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.important-dialog')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:67\n                        \n                    \n\n            \n                \n                    Host binding to set if the dialog is important.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostBinding, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Type of the dialog variant. Used to specify what dialog styling should be used.\n */\nexport enum AlertDialogVariant {\n  DEFAULT = 'default',\n  IMPORTANT = 'important',\n}\n\n/**\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\n */\nexport interface AlertDialogData {\n  /**\n   * Dialog title. Displayed at the top of the dialog.\n   */\n  title?: string;\n  /**\n   * Dialog message. Displayed below the title.\n   */\n  message?: string;\n  /**\n   * Confirm button text.\n   */\n  confirmText?: string;\n  /**\n   * Cancel button text.\n   */\n  cancelText?: string;\n  /**\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\n   */\n  variant?: AlertDialogVariant;\n}\n\n/**\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n */\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert.dialog.html',\n  styleUrls: ['./alert.dialog.scss'],\n})\nexport class AlertDialog {\n  /**\n   * Passthrough to the dialog's variant enumerable.\n   */\n  public AlertDialogVariant = AlertDialogVariant;\n\n  /**\n   * Default constructor. Injects the dialog reference and data.\n   * @param data Object to pass as data to the dialog\n   * @param dialogRef Reference to dialog instance\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\n    private dialogRef: MatDialogRef,\n  ) {\n    data.variant ||= AlertDialogVariant.DEFAULT;\n  }\n\n  /**\n   * Host binding to set if the dialog is important.\n   */\n  @HostBinding('class.important-dialog') important: boolean =\n    this.data.variant === AlertDialogVariant.IMPORTANT;\n\n  /**\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n   */\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n   */\n  confirm() {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n  {{ data.message }}\n\n\n  {{ data.cancelText }}\n  \n    {{ data.confirmText }}\n  \n  \n    {{ data.confirmText }}\n  \n\n\n    \n\n    \n                \n                    ./alert.dialog.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.message }}  {{ data.cancelText }}      {{ data.confirmText }}        {{ data.confirmText }}  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlertDialogData.html":{"url":"interfaces/AlertDialogData.html","title":"interface - AlertDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AlertDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/dialogs/alert/alert.dialog.ts\n        \n\n\n            \n                Description\n            \n            \n                Alert dialog data interface. Indicates what data will be passed to the dialog.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cancelText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confirmText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            variant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Cancel button text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Confirm button text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dialog message. Displayed below the title.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dialog title. Displayed at the top of the dialog.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         AlertDialogVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AlertDialogVariant\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of the dialog variant. Used to specify what dialog styling should be used.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostBinding, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Type of the dialog variant. Used to specify what dialog styling should be used.\n */\nexport enum AlertDialogVariant {\n  DEFAULT = 'default',\n  IMPORTANT = 'important',\n}\n\n/**\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\n */\nexport interface AlertDialogData {\n  /**\n   * Dialog title. Displayed at the top of the dialog.\n   */\n  title?: string;\n  /**\n   * Dialog message. Displayed below the title.\n   */\n  message?: string;\n  /**\n   * Confirm button text.\n   */\n  confirmText?: string;\n  /**\n   * Cancel button text.\n   */\n  cancelText?: string;\n  /**\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\n   */\n  variant?: AlertDialogVariant;\n}\n\n/**\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n */\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert.dialog.html',\n  styleUrls: ['./alert.dialog.scss'],\n})\nexport class AlertDialog {\n  /**\n   * Passthrough to the dialog's variant enumerable.\n   */\n  public AlertDialogVariant = AlertDialogVariant;\n\n  /**\n   * Default constructor. Injects the dialog reference and data.\n   * @param data Object to pass as data to the dialog\n   * @param dialogRef Reference to dialog instance\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\n    private dialogRef: MatDialogRef,\n  ) {\n    data.variant ||= AlertDialogVariant.DEFAULT;\n  }\n\n  /**\n   * Host binding to set if the dialog is important.\n   */\n  @HostBinding('class.important-dialog') important: boolean =\n    this.data.variant === AlertDialogVariant.IMPORTANT;\n\n  /**\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n   */\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n   */\n  confirm() {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to access the API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/api.service.ts:18\n                            \n                        \n\n                \n                    \n                            Default service constructor with HttpClient dependency\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:64\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends DELETE request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends GET request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends PATCH request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:54\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends POST request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                    \n                    put(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:74\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends PUT request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        request\n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP method to use\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/api.service.ts:18\n                        \n                    \n\n            \n                \n                    URL of the API. Provided in the environment configuration file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Service } from '../decorators/service.decorator';\nimport { RequestOptions } from '../interfaces/request-options.interface';\n\n/**\n * Service to access the API\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  /**\n   * URL of the API. Provided in the environment configuration file.\n   */\n  private apiURL: string = environment.apiURL;\n\n  /** Default service constructor with `HttpClient` dependency */\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * Sends request to the API.\n   * @param method HTTP method to use\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public request(method: string, url: string, options?: RequestOptions) {\n    return this.httpClient.request(method, this.apiURL + url, {\n      responseType: 'json' as any,\n      withCredentials: true,\n      ...options,\n    });\n  }\n\n  /**\n   * Sends GET request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(url: string, options?: RequestOptions) {\n    return this.request('GET', url, options);\n  }\n\n  /**\n   * Sends POST request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public post(url: string, options?: RequestOptions) {\n    return this.request('POST', url, options);\n  }\n\n  /**\n   * Sends DELETE request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(url: string, options?: RequestOptions) {\n    return this.request('DELETE', url, options);\n  }\n\n  /**\n   * Sends PUT request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public put(url: string, options?: RequestOptions) {\n    return this.request('PUT', url, options);\n  }\n\n  /**\n   * Sends PATCH request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public patch(url: string, options?: RequestOptions) {\n    return this.request('PATCH', url, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main Component with basic layout and main router outlet\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'workflow'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the page\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Main Component with basic layout and main router outlet\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  /**\n   * Title of the page\n   */\n  public title = 'workflow';\n\n  constructor() {\n    document.addEventListener('DOMContentLoaded', () => {\n      document.body.classList.remove('preload');\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  width: 100%;\n  background-color: var(--color-secondary-700);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { LandingPageComponent } from './landing-page/landing-page/landing-page.component';\nimport { MainModule } from './_main/_main.module';\n\n@NgModule({\n  declarations: [AppComponent, LandingPageComponent],\n  imports: [AppRoutingModule, BrowserAnimationsModule, MainModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoggedInUsersGuard } from './auth/guard/logged-in-users.guard';\nimport { LandingPageComponent } from './landing-page/landing-page/landing-page.component';\nimport { MainViewComponent } from './_main/components/main-view/main-view.component';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'landing-page',\n    component: LandingPageComponent,\n  },\n  {\n    path: '',\n    component: MainViewComponent,\n    canActivate: [LoggedInUsersGuard],\n    children: [\n      {\n        path: 'email',\n        loadChildren: () => \"import('./emails/emails.module').then((m) => m.EmailsModule)\",\n      },\n      {\n        path: 'messages',\n        loadChildren: () => \"import('./messages/messages.module').then((m) => m.MessagesModule)\",\n      },\n      {\n        path: '',\n        loadChildren: () => \"import('./dashboard/dashboard.module').then((m) => m.DashboardModule)\",\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      onSameUrlNavigation: 'reload',\n      paramsInheritanceStrategy: 'always',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nChangePasswordPage->AuthModule\n\n\n\n\n\nDeleteAccountPage\n\nDeleteAccountPage\n\nAuthModule -->\n\nDeleteAccountPage->AuthModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\nAuthModule -->\n\nForgotPasswordPage->AuthModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAuthModule -->\n\nLoginPage->AuthModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nAuthModule -->\n\nRegisterPage->AuthModule\n\n\n\n\n\nRestoreAccountPage\n\nRestoreAccountPage\n\nAuthModule -->\n\nRestoreAccountPage->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAuthModule -->\n\nMainModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChangePasswordPage\n                        \n                        \n                            DeleteAccountPage\n                        \n                        \n                            ForgotPasswordPage\n                        \n                        \n                            LoginPage\n                        \n                        \n                            RegisterPage\n                        \n                        \n                            RestoreAccountPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { AuthRoutingModule } from './auth.routing';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\nimport { DeleteAccountPage } from './pages/delete-account/delete-account.page';\nimport { ForgotPasswordPage } from './pages/forgot-password/forgot-password.page';\nimport { LoginPage } from './pages/login/login.page';\nimport { RegisterPage } from './pages/register/register.page';\nimport { RestoreAccountPage } from './pages/restore-account/restore-account.page';\n\n@NgModule({\n  imports: [CommonModule, AuthRoutingModule, MainModule, ReactiveFormsModule],\n  declarations: [\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    ChangePasswordPage,\n    RestoreAccountPage,\n    DeleteAccountPage,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\nimport { DeleteAccountPage } from './pages/delete-account/delete-account.page';\nimport { ForgotPasswordPage } from './pages/forgot-password/forgot-password.page';\nimport { LoginPage } from './pages/login/login.page';\nimport { RegisterPage } from './pages/register/register.page';\nimport { RestoreAccountPage } from './pages/restore-account/restore-account.page';\n\n/**\n * Auth routes list\n */\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginPage,\n  },\n  {\n    path: 'logout',\n    component: LoginPage,\n  },\n  {\n    path: 'register',\n    component: RegisterPage,\n  },\n  {\n    path: 'password-reset',\n    component: ForgotPasswordPage,\n  },\n  {\n    path: 'set-new-password',\n    component: ChangePasswordPage,\n  },\n  {\n    path: 'restore-account',\n    component: RestoreAccountPage,\n  },\n  {\n    path: 'delete-account',\n    component: DeleteAccountPage,\n  },\n];\n\n/**\n * Auth routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteAccount\n                            \n                            \n                                    Public\n                                deleteAccountConfirmation\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                recoverAccount\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Public\n                                setNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAccountConfirmation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccountConfirmation(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        recoverAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setNewPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setNewPassword(token: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Service } from '@main/decorators/service.decorator';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private apiService: ApiService) {}\n\n  public register({\n    email,\n    password,\n    name,\n    surname,\n    username,\n  }: {\n    email: string;\n    password: string;\n    name: string;\n    surname: string;\n    username: string;\n  }) {\n    return this.apiService.post(`/auth/register`, {\n      body: { email, password, name, surname, username },\n    });\n  }\n\n  public login({\n    email,\n    password,\n    remember,\n  }: {\n    email: string;\n    password: string;\n    remember: boolean;\n  }) {\n    return this.apiService.post(`/auth/login`, { body: { email, password, remember } });\n  }\n\n  public logout() {\n    localStorage.removeItem('logged');\n    return this.apiService.post(`/auth/logout`, { body: {} });\n  }\n\n  public resetPassword({ email }: { email: string }) {\n    return this.apiService.post(`/auth/password/recover`, { body: { email } });\n  }\n\n  public setNewPassword(token: string, password: string) {\n    return this.apiService.post(`/auth/password/reset`, { body: { token, password } });\n  }\n\n  public deleteAccount() {\n    return this.apiService.delete(`/auth/delete`, { body: {} });\n  }\n\n  public deleteAccountConfirmation(token: string) {\n    return this.apiService.delete(`/auth/delete/confirm`, { body: { token } });\n  }\n\n  public recoverAccount() {\n    return this.apiService.post(`/auth/delete/recover`, { body: {} });\n  }\n\n  public isLoggedIn() {\n    if (localStorage.getItem('logged')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardPage.html":{"url":"components/BoardPage.html","title":"component - BoardPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/board/board.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                ./board.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./board.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board$\n                            \n                            \n                                faCheck\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                statusList\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Private\n                                    Optional\n                                statusListSubscription\n                            \n                            \n                                    Public\n                                taskMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                getColumnsContainerHeight\n                            \n                            \n                                getTasksFromStatus\n                            \n                            \n                                idOf\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNewTaskDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, taskService: TaskService, statusService: StatusService, dialogService: DialogService, projectService: ProjectService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/board/board.page.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnsContainerHeight\n                        \n                    \n                \n            \n            \n                \ngetColumnsContainerHeight(mapKey: string | number, element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapKey\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasksFromStatus\n                        \n                    \n                \n            \n            \n                \ngetTasksFromStatus(statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idOf\n                        \n                    \n                \n            \n            \n                \nidOf(o: Task | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Task | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewTaskDialog\n                        \n                    \n                \n            \n            \n                \nopenNewTaskDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        board$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StatusWithTasks[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        statusListSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PersistentMap({ persistentKey: 'board' })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport {\n  faCheck,\n  faChevronRight,\n  faCodeCommit,\n  faCodePullRequest,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { PersistentMap } from '@main/classes/persistent-map.class';\nimport { Observable, Subscription } from 'rxjs';\nimport { DialogService } from '../../../_main/services/dialog.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '../../dialogs/task/task.dialog';\nimport { StatusWithTasks } from '../../interfaces/status.interface';\nimport { Task } from '../../interfaces/task.interface';\nimport { StatusService } from '../../services/status.service';\nimport { TaskService } from '../../services/task.service';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.page.html',\n  styleUrls: ['./board.page.scss'],\n})\nexport class BoardPage implements OnInit, OnDestroy {\n  faPlus = faPlus;\n  faChevronRight = faChevronRight;\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  public taskMap = new PersistentMap({ persistentKey: 'board' });\n  public projectId!: number;\n\n  public statusList$!: Observable;\n  public board$!: Observable;\n  public project$: Observable;\n  public members$: Observable>;\n  public statusList: StatusWithTasks[] = [];\n  private statusListSubscription?: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private taskService: TaskService,\n    private statusService: StatusService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.projectId = projectId;\n    this.project$ = this.projectService.get(projectId);\n    this.board$ = this.statusService.board(projectId);\n    this.statusList$ = this.statusService.listWithTasks(projectId);\n    this.statusListSubscription = this.statusList$.subscribe((statusList) => {\n      this.statusList = statusList;\n    });\n    this.members$ = this.memberService.map(projectId);\n  }\n\n  getTasksFromStatus(statusId: number) {\n    return this.statusList.find((status) => status.id === statusId)?.tasks;\n  }\n\n  ngOnInit() {\n    this.statusList$.subscribe((statusList) => {\n      this.statusList = statusList;\n    });\n  }\n\n  ngOnDestroy() {\n    this.statusListSubscription?.unsubscribe();\n  }\n\n  drop(event: CdkDragDrop) {\n    const previousStatusIndex = Number(\n      event.previousContainer.element.nativeElement.dataset['index'],\n    );\n    const newStatusIndex = Number(event.container.element.nativeElement.dataset['index']);\n    const previousStatus = this.statusList[previousStatusIndex];\n    const newStatus = this.statusList[newStatusIndex];\n    const previousTaskIndex = event.previousIndex;\n    const task = event.previousContainer.data[previousTaskIndex];\n\n    console.log({ previousStatus, task });\n\n    console.log(\n      event.previousContainer.data,\n      event.container.data,\n      event.previousIndex,\n      event.currentIndex,\n    );\n\n    const onSuccess = () => {\n      task.statusId = newStatus.id;\n      this.taskService.update(this.projectId, task as any).subscribe();\n\n      if (event.previousContainer === event.container) {\n        moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      } else {\n        transferArrayItem(\n          event.previousContainer.data,\n          event.container.data,\n          event.previousIndex,\n          event.currentIndex,\n        );\n      }\n    };\n\n    // Catch if the task has pull request and user is trying to move to finishing state\n    if (task.pull && newStatus.final) {\n      this.dialogService\n        .alert({\n          title: $localize`Are you sure?`,\n          message: $localize`If you will move this task to finishing state, the attached pull request will be merged to the repository.`,\n          confirmText: $localize`Merge`,\n          cancelText: $localize`Cancel`,\n        })\n        .subscribe((result) => {\n          if (!result) return;\n\n          onSuccess();\n        });\n      // } else if (task.mergedPullList && !newStatus.final) {\n      //   this.dialogService\n      //     .alert({\n      //       title: $localize`Are you sure?`,\n      //       message: $localize`If you will move this task to not finishing state, the pull request will be detached.`,\n      //       confirmText: $localize`Detach`,\n      //       cancelText: $localize`Cancel`,\n      //     })\n      //     .subscribe((result) => {\n      //       if (!result) return;\n\n      //       onSuccess();\n      //     });\n      // }\n    } else {\n      onSuccess();\n    }\n  }\n\n  openNewTaskDialog() {\n    this.dialogService\n      .open(TaskDialog, {\n        projectId: this.projectId,\n        variant: TaskDialogVariant.CREATE,\n      } as TaskDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.taskService.create(this.projectId, result).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  idOf(o: Task | string) {\n    return (o as any).id || o;\n  }\n\n  getColumnsContainerHeight(mapKey: string | number, element: HTMLElement) {\n    return `${Number(!this.taskMap.get(mapKey)) * element.scrollHeight + 16}px`;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    {{ status.name }}\n  \n\n\n\n  \n    \n      \n        \n          \n            \n            #{{ task.id }}\n            {{ task.name }}\n            \n              \n            \n            \n              \n            \n            \n              \n              \n            \n            \n            \n          \n          \n            \n            Other tasks\n          \n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./board.page.scss\n                \n                :host {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n}\n\napp-view-options {\n  width: auto;\n  margin: 2rem 2rem 0 2rem;\n}\n\napp-status-label {\n  width: auto;\n}\n\n.boards {\n  display: flex;\n  overflow: auto;\n  flex-direction: column;\n  padding: 0 2rem 2rem 2rem;\n}\n\n.board {\n  display: flex;\n  flex-direction: column;\n  padding-left: 10px;\n  margin-left: -1rem;\n\n  &:not(.collapsed) .task-title>app-icon {\n    transform: rotate(90deg);\n  }\n\n  .columns {\n    display: flex;\n    overflow: hidden;\n    transition: max-height .2s ease;\n\n    // &.collapsed {\n    //   height: 0;\n    // }\n  }\n\n  .column {\n    display: flex;\n    width: 300px;\n    min-height: 100%;\n    flex-direction: column;\n    padding: 1rem 0.5rem 0 0.5rem;\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    .column-header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 1em;\n      color: var(--color-text);\n\n      h3 {\n        margin: 0;\n      }\n\n      app-icon {\n        cursor: pointer;\n      }\n    }\n\n    .column-content {\n      height: 100%;\n      padding: 1rem;\n      background-color: var(--color-secondary-800);\n      border-radius: var(--border-radius);\n\n      app-board-task:last-child {\n        margin-bottom: -1rem;\n      }\n    }\n  }\n}\n\n.cdk-drag-placeholder {\n  opacity: 0;\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.column-content.cdk-drop-list-dragging app-board-task:not(.cdk-drag-placeholder) {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.task-title {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  padding-left: 0.5rem;\n\n  .task-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .task-property {\n    display: flex;\n    margin-left: 1rem;\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.2s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .check {\n      margin-left: 5px;\n      color: #2ecc71;\n    }\n  }\n\n  &>app-icon {\n    margin-right: 1rem;\n    opacity: 0.5;\n    transition: transform .2s ease;\n  }\n}\n\n.status-list-banner {\n  display: flex;\n  padding: 1rem;\n  border-bottom: 1px solid var(--color-secondary-500);\n  margin-left: 2rem;\n\n  .status-banner {\n    width: 300px;\n    color: var(--color-text);\n  }\n}\n\n.row {\n  cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ status.name }}                                                        #{{ task.id }}            {{ task.name }}                                                                                                                                                                                                    Other tasks                                                                                      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoardPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardTaskComponent.html":{"url":"components/BoardTaskComponent.html","title":"component - BoardTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/board-task/board-task.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board-task\n            \n\n            \n                styleUrls\n                ./board-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./board-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faCheck\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                createSubtask\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                members\n                            \n                            \n                                projectId\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { faCheck, faCodeCommit, faCodePullRequest } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskDialog, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { Task } from '../../interfaces/task.interface';\n\n@Component({\n  selector: 'app-board-task',\n  templateUrl: './board-task.component.html',\n  styleUrls: ['./board-task.component.scss'],\n})\nexport class BoardTaskComponent {\n  @Input()\n  public task!: Task;\n\n  @Input()\n  public projectId!: number;\n\n  @Input()\n  public members: Map = new Map();\n\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  constructor(private dialogService: DialogService, private taskService: TaskService) {}\n\n  delete() {\n    this.taskService.deleteWithConfirmation(this.projectId, this.task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  edit() {\n    this.taskService.openEditTaskDialog(this.projectId, this.task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  createSubtask() {\n    this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: this.projectId,\n        subtask: true,\n        task: {\n          parentTaskId: this.task.id,\n        },\n      })\n      .afterClosed()\n      .subscribe((task) => {\n        if (!task) return;\n\n        this.taskService.create(this.projectId, task).subscribe(() => {\n          location.reload();\n        });\n      });\n  }\n\n  changeDate(date: Date) {\n    let sessionDate = dayjs(date);\n    return sessionDate.format('YYYY-MM-DD, hh:mm A');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Due date\n      {{ changeDate(task.deadline) }}\n    \n  \n  \n    \n    #{{ task.id }}\n    {{ task?.name }}\n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n        Edit task\n      \n      \n        Create subtask\n      \n      \n        Delete task\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./board-task.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  cursor: move;\n}\n\n.task {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  background-color: var(--color-board-task-background);\n  border-radius: var(--border-radius);\n  transition: background-color 0.2s ease, box-shadow 0.2s ease;\n\n  &:hover {\n    background-color: var(--color-board-task-background-hover);\n    box-shadow: 0 0 0.5rem 0.01rem rgb(0 0 0 / 10%);\n  }\n\n  .top-section {\n    display: flex;\n\n    >* {\n      width: 50%;\n    }\n\n    .assignees {\n      .assignee {\n        $size: 32px;\n\n        @include typo-heading-5;\n\n        display: flex;\n        width: #{$size};\n        height: #{$size};\n        align-items: center;\n        justify-content: center;\n        background-color: #0a95d0;\n        border-radius: calc($size / 2);\n        color: var(--color-text);\n      }\n    }\n\n    .deadline {\n      color: var(--color-text);\n\n      .title {\n        @include typo-body;\n      }\n\n      .value {\n        @include typo-title;\n      }\n    }\n  }\n\n  .name {\n    @include typo-body;\n    display: flex;\n    align-items: center;\n\n    margin-top: 1rem;\n    color: var(--color-text);\n\n    .task-id {\n      margin-right: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n\n  .options {\n    position: absolute;\n    right: 5px;\n    color: #fff;\n  }\n\n  .commit {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n    padding: 0 0.5rem;\n    color: var(--color-text);\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.5s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  .actions {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n\n    >* {\n      display: flex;\n      margin-left: 1rem;\n      color: var(--color-text);\n      cursor: pointer;\n      opacity: 0.5;\n      transition: opacity 0.2s ease;\n\n      &:hover {\n        opacity: 1;\n      }\n\n      .check {\n        margin-left: 5px;\n        color: #2ecc71;\n      }\n    }\n  }\n}\n\n.task-type {\n  display: block;\n  width: 16px;\n  height: 16px;\n  margin-right: 1rem;\n  border-radius: 4px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Due date      {{ changeDate(task.deadline) }}                #{{ task.id }}    {{ task?.name }}                                                                                        Edit task                    Create subtask                    Delete task            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoardTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/button/button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Button component to visualize the general clickable elements on the page.\n\n    \n\n\n    \n        Implements\n    \n    \n                FocusableOption\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                pending\n                            \n                            \n                                type\n                            \n                            \n                                variant\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:34\n                            \n                        \n                \n                    \n                        Icon to display on the button.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pending\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:29\n                            \n                        \n                \n                    \n                        Information about the pending. If button is pending the loader icon will be shown.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"button\" | \"submit\"\n\n                    \n                \n                \n                    \n                        Default value : 'submit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:24\n                            \n                        \n                \n                    \n                        Button behavior in forms. If this property is set to submit, this button will be able to submit the\nform (perform submit event on click). If set to button, only the specified (click) action will be\nexecuted.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :     \"primary\" | \"secondary\" | \"important\"\n\n                    \n                \n                \n                    \n                        Default value : 'secondary'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:17\n                            \n                        \n                \n                    \n                        Style variant of the button.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        focus\n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/button/button.component.ts:44\n                \n            \n\n\n            \n                \n                    Focus the native button element.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('btn')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/button/button.component.ts:39\n                        \n                    \n\n            \n                \n                    Reference to native button element.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { FocusableOption } from '@angular/cdk/a11y';\nimport { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Button component to visualize the general clickable elements on the page.\n */\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent implements FocusableOption {\n  /**\n   * Style variant of the button.\n   */\n  @Input() variant: 'primary' | 'secondary' | 'important' = 'secondary';\n\n  /**\n   * Button behavior in forms. If this property is set to `submit`, this button will be able to submit the\n   * form (perform submit event on click). If set to `button`, only the specified `(click)` action will be\n   * executed.\n   */\n  @Input() type: 'button' | 'submit' = 'submit';\n\n  /**\n   * Information about the pending. If button is pending the loader icon will be shown.\n   */\n  @Input() pending?: boolean = false;\n\n  /**\n   * Icon to display on the button.\n   */\n  @Input() icon?: string | IconDefinition;\n\n  /**\n   * Reference to native button element.\n   */\n  @ViewChild('btn') elementRef!: ElementRef;\n\n  /**\n   * Focus the native button element.\n   */\n  focus() {\n    setTimeout(() => {\n      this.elementRef.nativeElement.focus();\n    }, 200);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                @import '../../../../styles/typography';\n\nbutton mat-spinner,\nbutton app-icon {\n  opacity: 1;\n  transform: scale(1);\n  transition: opacity 0.2s;\n}\n\nbutton mat-spinner.hide,\nbutton app-icon.hide {\n  opacity: 0;\n}\n\nbutton .prefix {\n  position: relative;\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  transition: width 0.2s, margin-right 0.2s;\n\n  > * {\n    position: absolute;\n  }\n}\n\nbutton:not(.button-with-icon) .prefix:not(.pending) {\n  width: 0;\n  margin-right: 0;\n}\n\nbutton {\n  @include typo-title;\n\n  position: relative;\n  display: flex;\n  min-width: 80px;\n  height: 42px;\n  align-items: center;\n  justify-content: center;\n  padding: 0.8125rem 1.25rem;\n  border-radius: var(--border-radius);\n  box-shadow: 0 4px 4px rgb(0 0 0 / 25%);\n  color: var(--color-text);\n  outline: 0 !important;\n  transition: background-color 0.2s ease;\n\n  > * {\n    margin-right: 0.75rem;\n  }\n\n  &::before {\n    $offset: 4px;\n\n    position: absolute;\n    top: #{-$offset};\n    right: #{-$offset};\n    bottom: #{-$offset};\n    left: #{-$offset};\n    border-radius: calc(var(--border-radius) * 1.5);\n    content: '';\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.1s ease;\n  }\n\n  &:focus {\n    &::before {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    box-shadow: 0 1px 1px rgb(0 0 0 / 25%);\n  }\n\n  &.primary {\n    background-color: var(--color-button-primary-background);\n\n    &::before {\n      border: 2px solid var(--color-button-primary-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-primary-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-primary-background-active);\n    }\n  }\n\n  &.secondary {\n    background-color: var(--color-button-secondary-background);\n\n    &::before {\n      border: 2px solid var(--color-button-secondary-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-secondary-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-secondary-background-active);\n    }\n  }\n\n  &.important {\n    background-color: var(--color-button-important-background);\n\n    &::before {\n      border: 2px solid var(--color-button-important-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-important-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-important-background-active);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/card/card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/card/card.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  &.important {\n    .card {\n      border: 1px solid var(--color-red-700);\n    }\n\n    .card-header-wrapper {\n      color: var(--color-red-700);\n    }\n  }\n}\n\n.card {\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  border: 1px solid var(--color-secondary-500);\n  border-radius: var(--border-radius);\n}\n\n.card-header-wrapper {\n  @include typo-title;\n\n  margin-bottom: 7px;\n  color: var(--color-text);\n}\n\n.card-content-wrapper {\n  @include typo-body;\n\n  margin-bottom: 15px;\n  color: var(--color-text);\n  opacity: 0.7;\n}\n\n.card-actions-wrapper {\n  @include typo-body;\n\n  color: var(--color-text);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordPage.html":{"url":"components/ChangePasswordPage.html","title":"component - ChangePasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/change-password/change-password.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                ./change-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                resetSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/change-password/change-password.page.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNewPassword\n                        \n                    \n                \n            \n            \n                \nsetNewPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/change-password/change-password.page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:34\n                        \n                    \n\n            \n                \n                    Form group for setting new password.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        resetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { passwordValidator } from '@main/validators/password.validator';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport { sameAsValidator } from '@main/validators/same-as.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n  private token?: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const { token } = this.activatedRoute.snapshot.queryParams;\n    this.token = token;\n  }\n\n  private resetSubscription?: Subscription;\n\n  /**\n   * Form group for setting new password.\n   */\n  public form = new FormGroup({\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n  });\n\n  setNewPassword() {\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid && this.token) {\n      this.resetSubscription = this.authService\n        .setNewPassword(this.token, this.form.value.password)\n        .subscribe(() => {\n          this.router.navigate(['/auth/login']);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Reset password\n          Enter your new password.\n        \n\n        \n\n        \n\n        Set new password\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./change-password.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Reset password          Enter your new password.                                Set new password                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/checkbox/checkbox.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:82\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n})\nexport class CheckboxComponent extends ControlAccessor {}\n\n    \n\n    \n        \n  \n\n{{ control.errors | validationError }}\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                :host {\n  position: relative;\n}\n\nmat-checkbox.ng-invalid.ng-touched ~ mat-error {\n  // Set this to 'block' if you want to see mat-error label\n  display: none;\n}\n\nmat-error {\n  position: absolute;\n  bottom: -5px;\n  left: 28px;\n  display: none;\n  font-size: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ control.errors | validationError }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClickStopPropagationDirective.html":{"url":"directives/ClickStopPropagationDirective.html","title":"directive - ClickStopPropagationDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ClickStopPropagationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/click-stop-propagation.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [click-stop-propagation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/directives/click-stop-propagation.directive.ts:8\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/_main/directives/click-stop-propagation.directive.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[click-stop-propagation]',\n})\nexport class ClickStopPropagationDirective {\n  @HostListener('click', ['$event'])\n  public onClick(event: any): void {\n    event.stopPropagation();\n\n    window.document.dispatchEvent(\n      new Event('click', {\n        bubbles: true,\n        cancelable: true,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlAccessor.html":{"url":"components/ControlAccessor.html","title":"component - ControlAccessor","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ControlAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/classes/control-accessor.class.ts\n\n\n\n    \n        Description\n    \n    \n        A base class for creating custom control accessors like inputs, checkboxes, etc.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    ControlValueAccessor\n    \n\n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    required\n                                \n                                \n                                    name\n                                \n                                \n                                    control\n                                \n                                \n                                    value\n                                \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/control-accessor.class.ts:72\n                            \n                        \n\n                \n                    \n                            Accessor constructor to initialize component. Extended by child classes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                control to be used by the accessor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:18\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:135\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:142\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:148\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:127\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:82\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n\n                \n                    \n                        getrequired()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:24\n                                \n                            \n                    \n                        \n                                Property to describe if the control is required.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n\n                \n                    \n                        getcontrol()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:42\n                                \n                            \n                    \n                        \n                                Control that is used by the form.\n\n\n                                \n                                    Returns :         FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:63\n                                \n                            \n                    \n                        \n                                Get the value of the control.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:70\n                                \n                            \n                    \n                        \n                                Get the errors of the control.\n\n\n                                \n                                    Returns :         ValidationErrors | null\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl, ValidationErrors } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n/**\n * A base class for creating custom control accessors like inputs, checkboxes, etc.\n */\n@Component({\n  template: '',\n  // providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ControlAccessor implements OnDestroy, ControlValueAccessor {\n  /**\n   * Property that defines if field should prompt user how to fill it. For example\n   * in a form, if a field is email, it will give the user last used emails\n   */\n  @Input() autocomplete: 'on' | 'off' = 'off';\n\n  /**\n   * Property to describe if the control is required.\n   * @returns true if the control is required to fill in form.\n   */\n  public get required() {\n    return this._required;\n  }\n\n  public get name() {\n    return this.ngControl?.name?.toString() || '';\n  }\n\n  /**\n   * Private property to set field as required\n   *\n   * @ignore\n   */\n  private _required: boolean = false;\n\n  /**\n   * Control that is used by the form.\n   */\n  public get control(): FormControl {\n    return (this.ngControl?.control as FormControl) || new FormControl();\n  }\n\n  /**\n   * Observable that emits when the control is destroyed.\n   *\n   * @ignore\n   */\n  private destroy$: Subject = new Subject();\n\n  /**\n   * Observable that emits when the control is touched.\n   *\n   * @ignore\n   */\n  private touched$: Subject = new Subject();\n\n  /**\n   * Get the value of the control.\n   */\n  public get value(): any {\n    return this.control.value;\n  }\n\n  /**\n   * Get the errors of the control.\n   */\n  public get errors(): ValidationErrors | null {\n    return this.control.errors;\n  }\n\n  /**\n   * Accessor constructor to initialize component. Extended by child classes.\n   * @param ngControl control to be used by the accessor\n   */\n  constructor(\n    /**\n     * Control passed from DOM to the component, contains all the information about form control\n     */\n    public ngControl: NgControl,\n  ) {\n    this.ngControl.valueAccessor = this;\n\n    this._initCheckForTouch();\n    this._checkIfIsRequired();\n  }\n\n  /**\n   * Check if the control is required by provided validators.\n   *\n   * @ignore\n   */\n  private _checkIfIsRequired(): void {\n    if (!(this.control as any)._rawValidators) return;\n\n    for (const validator of (this.ngControl as any).control._rawValidators) {\n      if (validator.name === 'required') {\n        this._required = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Apply the touched observable on ngControl and control fields\n   *\n   * @ignore\n   */\n  private _initCheckForTouch(): void {\n    (this.control as any)._markAsTouched = this.control.markAsTouched;\n    this.control.markAsTouched = () => {\n      (this.control as any)._markAsTouched();\n      this.touched$.next(true);\n    };\n  }\n\n  /**\n   * Writes a new value to the element.\n   *\n   * This method is called by the forms API to write to the view when programmatic\n   * changes from model to view are requested.\n   *\n   * @param value The new value for the element\n   */\n  writeValue(value: any): void {}\n\n  /**\n   * Registers a callback function that is called when the control's value changes in the UI.\n   *\n   * This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n   * @param fn Callback to be called when the control value changes.\n   */\n  registerOnChange(fn: any): void {}\n\n  /**\n   * Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n   *\n   * @param fn Callback to be called when the control is touched.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Set disabled state on the control. If set to true, the control will be disabled.\n   * @param isDisabled State to set to the control\n   */\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.control.disable();\n    } else {\n      this.control.enable();\n    }\n  }\n\n  /** @ignore */\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n    this.touched$.complete();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ControlAccessor'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectMembersPage.html":{"url":"components/CreateProjectMembersPage.html","title":"component - CreateProjectMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-project-members/create-project-members.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project-members\n            \n\n            \n                styleUrls\n                ./create-project-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                memberList\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:39\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:65\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:33\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:26\n                        \n                    \n\n            \n                \n                    Form group for the project creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        memberList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddMemberDialog } from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-create-project-members',\n  templateUrl: './create-project-members.page.html',\n  styleUrls: ['./create-project-members.page.scss'],\n})\nexport class CreateProjectMembersPage {\n  faPlus = faPlus;\n\n  /**\n   * Form group for the project creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  public workspace$!: Observable;\n\n  private workspaceId!: number;\n\n  private memberList?: string[];\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n    this.workspaceId = workspaceId;\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n  }\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {})\n      .afterClosed()\n      .subscribe((result) => {\n        this.memberList = result;\n      });\n  }\n\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.projectService.create(this.form.value).subscribe((response) => {\n      if (this.memberList) {\n        this.memberService.add(this.memberList, [response.id]).subscribe(() => {\n          this.router.navigate([this.workspaceId]).then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        this.router.navigate([this.workspaceId]).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  Add member\n\n\n\n\n    \n\n    \n                \n                    ./create-project-members.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.button {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: -60px;\n  margin-bottom: 20px;\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add member'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectPage.html":{"url":"components/CreateProjectPage.html","title":"component - CreateProjectPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-project/create-project.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project\n            \n\n            \n                styleUrls\n                ./create-project.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                memberList\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:38\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project/create-project.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project/create-project.page.ts:72\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:32\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:24\n                        \n                    \n\n            \n                \n                    Form group for the project creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        memberList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddMemberDialog } from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.page.html',\n  styleUrls: ['./create-project.page.scss'],\n})\nexport class CreateProjectPage {\n  /**\n   * Form group for the project creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  faPlus = faPlus;\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  public workspace$!: Observable;\n\n  public workspaceId!: number;\n\n  public memberList: string[] = [];\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n    this.workspaceId = workspaceId;\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n  }\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {})\n      .afterClosed()\n      .subscribe((result) => {\n        this.memberList = [...this.memberList, ...result];\n      });\n  }\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.projectService.create(this.form.value).subscribe((response) => {\n      if (this.memberList) {\n        this.memberService.add(this.memberList, [response.id]).subscribe(() => {\n          this.router.navigate([this.workspaceId]).then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        this.router.navigate([this.workspaceId]).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Workspace: {{ (workspace$ | async)?.name }}\n    \n  \n\n  \n    Members\n    \n      Add member\n      \n    \n  \n  \n\n  \n    Save\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./create-project.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n.members {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-top: 20px;\n\n  h2 {\n    margin: 0;\n  }\n\n  .button {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n  }\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Workspace: {{ (workspace$ | async)?.name }}            Members          Add member                    Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateWorkspacePage.html":{"url":"components/CreateWorkspacePage.html","title":"component - CreateWorkspacePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateWorkspacePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-workspace/create-workspace.page.ts\n\n\n\n    \n        Description\n    \n    \n        Create workspace page component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-workspace-page\n            \n\n            \n                styleUrls\n                ./create-workspace.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-workspace.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:30\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:43\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:30\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:23\n                        \n                    \n\n            \n                \n                    Form group for the workspace creation.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Subscription } from 'rxjs';\nimport { Page } from 'src/app/_main/decorators/page.decorator';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Create workspace page component.\n */\n@Page()\n@Component({\n  selector: 'app-create-workspace-page',\n  templateUrl: './create-workspace.page.html',\n  styleUrls: ['./create-workspace.page.scss'],\n})\nexport class CreateWorkspacePage {\n  /**\n   * Form group for the workspace creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(private workspaceService: WorkspaceService, private router: Router) {}\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.workspaceService.create(this.form.value).subscribe(() => {\n      this.router.navigate(['/']).then(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  Create new workspace\n  \n\n  \n    Save\n    Cancel\n  \n\n\n\n    \n\n    \n                \n                    ./create-workspace.page.scss\n                \n                form {\n  padding: 4rem;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create new workspace        Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateWorkspacePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nAddMemberDialog\n\nAddMemberDialog\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nAddMemberDialog->DashboardModule\n\n\n\n\n\nCreateProjectMembersPage\n\nCreateProjectMembersPage\n\nDashboardModule -->\n\nCreateProjectMembersPage->DashboardModule\n\n\n\n\n\nCreateProjectPage\n\nCreateProjectPage\n\nDashboardModule -->\n\nCreateProjectPage->DashboardModule\n\n\n\n\n\nCreateWorkspacePage\n\nCreateWorkspacePage\n\nDashboardModule -->\n\nCreateWorkspacePage->DashboardModule\n\n\n\n\n\nEditProjectMembersPage\n\nEditProjectMembersPage\n\nDashboardModule -->\n\nEditProjectMembersPage->DashboardModule\n\n\n\n\n\nEditProjectPage\n\nEditProjectPage\n\nDashboardModule -->\n\nEditProjectPage->DashboardModule\n\n\n\n\n\nEditWorkspacePage\n\nEditWorkspacePage\n\nDashboardModule -->\n\nEditWorkspacePage->DashboardModule\n\n\n\n\n\nIntegrationGithubComponent\n\nIntegrationGithubComponent\n\nDashboardModule -->\n\nIntegrationGithubComponent->DashboardModule\n\n\n\n\n\nMemberListComponent\n\nMemberListComponent\n\nDashboardModule -->\n\nMemberListComponent->DashboardModule\n\n\n\n\n\nProjectsListPage\n\nProjectsListPage\n\nDashboardModule -->\n\nProjectsListPage->DashboardModule\n\n\n\n\n\nViewOptionsComponent\n\nViewOptionsComponent\n\nDashboardModule -->\n\nViewOptionsComponent->DashboardModule\n\n\n\n\n\nWorkspacesListPage\n\nWorkspacesListPage\n\nDashboardModule -->\n\nWorkspacesListPage->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nDashboardModule -->\n\nMainModule->DashboardModule\n\n\n\n\n\nGitIntegrationService\n\nGitIntegrationService\n\nDashboardModule -->\n\nGitIntegrationService->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddMemberDialog\n                        \n                        \n                            CreateProjectMembersPage\n                        \n                        \n                            CreateProjectPage\n                        \n                        \n                            CreateWorkspacePage\n                        \n                        \n                            EditProjectMembersPage\n                        \n                        \n                            EditProjectPage\n                        \n                        \n                            EditWorkspacePage\n                        \n                        \n                            IntegrationGithubComponent\n                        \n                        \n                            MemberListComponent\n                        \n                        \n                            ProjectsListPage\n                        \n                        \n                            ViewOptionsComponent\n                        \n                        \n                            WorkspacesListPage\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GitIntegrationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DashboardRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { IntegrationGithubComponent } from './components/integration-github/integration-github.component';\nimport { MemberListComponent } from './components/member-list/member-list.component';\nimport { ViewOptionsComponent } from './components/view-options/view-options.component';\nimport { DashboardRoutingModule } from './dashboard.routing';\nimport { AddMemberDialog } from './dialogs/add-member/add-member.dialog';\nimport { CreateProjectMembersPage } from './pages/create-project-members/create-project-members.page';\nimport { CreateProjectPage } from './pages/create-project/create-project.page';\nimport { CreateWorkspacePage } from './pages/create-workspace/create-workspace.page';\nimport { EditProjectMembersPage } from './pages/edit-project-members/edit-project-members.page';\nimport { EditProjectPage } from './pages/edit-project/edit-project.page';\nimport { EditWorkspacePage } from './pages/edit-workspace/edit-workspace.page';\nimport { ProjectsListPage } from './pages/projects-list/projects-list.page';\nimport { WorkspacesListPage } from './pages/workspaces-list/workspaces-list.page';\nimport { GitIntegrationService } from './services/git-integration.service';\n\n@NgModule({\n  imports: [CommonModule, MainModule, ReactiveFormsModule, DashboardRoutingModule],\n  declarations: [\n    CreateWorkspacePage,\n    WorkspacesListPage,\n    EditWorkspacePage,\n    ProjectsListPage,\n    CreateProjectPage,\n    EditProjectPage,\n    CreateProjectMembersPage,\n    EditProjectMembersPage,\n    IntegrationGithubComponent,\n    ViewOptionsComponent,\n    MemberListComponent,\n    AddMemberDialog,\n  ],\n  providers: [GitIntegrationService],\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\nimport { CreateProjectMembersPage } from './pages/create-project-members/create-project-members.page';\nimport { CreateProjectPage } from './pages/create-project/create-project.page';\nimport { CreateWorkspacePage } from './pages/create-workspace/create-workspace.page';\nimport { EditProjectMembersPage } from './pages/edit-project-members/edit-project-members.page';\nimport { EditProjectPage } from './pages/edit-project/edit-project.page';\nimport { EditWorkspacePage } from './pages/edit-workspace/edit-workspace.page';\nimport { GithubIntegrationPage } from './pages/github-integration/github-integration.page';\nimport { ProjectsListPage } from './pages/projects-list/projects-list.page';\nimport { WorkspacesListPage } from './pages/workspaces-list/workspaces-list.page';\n\n/**\n * Dashboard routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: WorkspacesListPage,\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('../settings/settings.module').then((m) => m.SettingsModule)\",\n  },\n  {\n    path: 'github',\n    component: GithubIntegrationPage,\n    data: {\n      hideNavigation: true,\n    },\n  },\n  {\n    path: 'dashboard',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/dashboard.svg',\n    },\n  },\n  {\n    path: 'create',\n    component: CreateWorkspacePage,\n  },\n  {\n    path: ':workspaceId',\n    children: [\n      {\n        path: 'edit',\n        component: EditWorkspacePage,\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        component: ProjectsListPage,\n      },\n      {\n        path: 'create',\n        redirectTo: 'create/general',\n      },\n      {\n        path: 'create/general',\n        component: CreateProjectPage,\n      },\n      {\n        path: 'create/members',\n        component: CreateProjectMembersPage,\n      },\n      {\n        path: ':projectId/edit',\n        redirectTo: ':projectId/edit/general',\n      },\n      {\n        path: ':projectId/edit/general',\n        component: EditProjectPage,\n      },\n      {\n        path: ':projectId/edit/members',\n        component: EditProjectMembersPage,\n      },\n      {\n        path: ':projectId',\n        loadChildren: () => \"import('../tasks/tasks.module').then((m) => m.TasksModule)\",\n      },\n    ],\n  },\n];\n\n/**\n * Dashboard routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteAccountPage.html":{"url":"components/DeleteAccountPage.html","title":"component - DeleteAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/delete-account/delete-account.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-account.page\n            \n\n            \n                styleUrls\n                ./delete-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./delete-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccount\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/delete-account/delete-account.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \ndeleteAccount(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/delete-account/delete-account.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/delete-account/delete-account.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-delete-account.page',\n  templateUrl: './delete-account.page.html',\n  styleUrls: ['./delete-account.page.scss'],\n})\nexport class DeleteAccountPage implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const { token } = this.activatedRoute.snapshot.queryParams;\n    this.deleteAccount(token);\n  }\n\n  deleteAccount(token: string) {\n    if (token) {\n      this.authService.deleteAccountConfirmation(token).subscribe(() => {});\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Your account has been deleted.\n        If you are going to revive your account, you can log in to your account click here to log in \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./delete-account.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      padding: 4rem;\n      background-color: var(--color-gray-800);\n\n      h2 {\n        margin-bottom: 0.5rem;\n      }\n\n      p {\n        margin-bottom: 1.5rem;\n      }\n\n      app-input {\n        width: 100%;\n      }\n\n      app-button {\n        align-self: flex-end;\n      }\n\n      a {\n        color: var(--color-link);\n        cursor: pointer;\n        transition: color 0.2s ease;\n\n        &:hover {\n          color: var(--color-link-hover);\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Your account has been deleted.        If you are going to revive your account, you can log in to your account click here to log in                     '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'DeleteAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogOutletComponent.html":{"url":"components/DialogOutletComponent.html","title":"component - DialogOutletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogOutletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/dialog-outlet/dialog-outlet.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-outlet\n            \n\n            \n                styleUrls\n                ./dialog-outlet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog-outlet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                host\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearComponent\n                            \n                            \n                                    Private\n                                createInjector\n                            \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                loadComponent\n                            \n                            \n                                renderDialog\n                            \n                            \n                                    Private\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                outlet\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.width\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    outlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        outlet\n                    \n                \n                \n                    \n                        Type :         DialogOutlet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:15\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0px'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createInjector\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInjector(data: any, dialogRef: DialogRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dialogRef\n                                    \n                                                DialogRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hide\n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadComponent(component: any, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderDialog\n                        \n                    \n                \n            \n            \n                \nrenderDialog(component: any, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        show\n                        \n                    \n                \n            \n            \n                \n                    \n                    show()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewContainerDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ViewContainerDirective, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0px'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.width')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        outlet\n                    \n                \n\n\n                \n                    \n                        setoutlet(outlet: DialogOutlet)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/dialog-outlet/dialog-outlet.component.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            outlet\n                                                    \n                                                            \n                                                                            DialogOutlet\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Injector, Input, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogRef } from '@main/classes/dialog-ref.class';\nimport { ViewContainerDirective } from '@main/directives/view-container.directive';\nimport { DialogOutlet, DialogService } from '@main/services/dialog.service';\nimport { take } from 'rxjs';\n\n@Component({\n  selector: 'app-dialog-outlet',\n  templateUrl: './dialog-outlet.component.html',\n  styleUrls: ['./dialog-outlet.component.scss'],\n})\nexport class DialogOutletComponent {\n  @ViewChild(ViewContainerDirective, { static: true }) host!: ViewContainerDirective;\n  @Input() set outlet(outlet: DialogOutlet) {\n    this.dialogService.registerOutlet(outlet, this);\n  }\n  @HostBinding('style.width') width = '0px';\n\n  constructor(private dialogService: DialogService, private injector: Injector) {}\n\n  renderDialog(component: any, data: any): DialogRef {\n    const dialogRef = new DialogRef();\n    const injector = this.createInjector(data, dialogRef);\n\n    dialogRef\n      .beforeClosed()\n      .pipe(take(1))\n      .subscribe(() => {\n        this.clearComponent();\n      });\n\n    this.loadComponent(component, injector);\n    return dialogRef;\n  }\n\n  private loadComponent(component: any, injector: Injector) {\n    const viewContainerRef = this.host.viewContainerRef;\n    viewContainerRef.clear();\n\n    const _componentRef = viewContainerRef.createComponent(component, { injector });\n    this.show();\n  }\n\n  private clearComponent() {\n    this.hide();\n    setTimeout(() => {\n      const viewContainerRef = this.host.viewContainerRef;\n      viewContainerRef.clear();\n    }, 500);\n  }\n\n  private createInjector(data: any, dialogRef: DialogRef) {\n    return Injector.create({\n      providers: [\n        { provide: MAT_DIALOG_DATA, useValue: data },\n        { provide: MatDialogRef, useValue: dialogRef },\n      ],\n      parent: this.injector,\n    });\n  }\n\n  private show() {\n    this.width = '450px';\n  }\n\n  private hide() {\n    this.width = '0px';\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./dialog-outlet.component.scss\n                \n                :host {\n  display: block;\n  overflow: hidden;\n  width: 0;\n  flex-shrink: 0;\n  transition: width .4s ease;\n}\n\n.dialog-outlet {\n  width: 450px;\n  height: 100%;\n  border-radius: 0;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogOutletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DialogRef.html":{"url":"classes/DialogRef.html","title":"class - DialogRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DialogRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/dialog-ref.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                afterClosed$\n                            \n                            \n                                    Private\n                                afterOpened$\n                            \n                            \n                                    Private\n                                beforeClosed$\n                            \n                            \n                                    Private\n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPanelClass\n                            \n                            \n                                afterClosed\n                            \n                            \n                                afterOpened\n                            \n                            \n                                backdropClick\n                            \n                            \n                                beforeClosed\n                            \n                            \n                                close\n                            \n                            \n                                getState\n                            \n                            \n                                keydownEvents\n                            \n                            \n                                removePanelClass\n                            \n                            \n                                updatePosition\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        afterClosed$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/dialog-ref.class.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        afterOpened$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/dialog-ref.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        beforeClosed$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/dialog-ref.class.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(MatDialogState.CLOSED)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/dialog-ref.class.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPanelClass\n                        \n                    \n                \n            \n            \n                \naddPanelClass(classes: string | string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:71\n                \n            \n\n\n            \n                \n                    Add a CSS class or an array of classes to the overlay pane.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    classes\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterClosed\n                        \n                    \n                \n            \n            \n                \nafterClosed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:33\n                \n            \n\n\n            \n                \n                    Gets an observable that is notified when the dialog is finished closing.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterOpened\n                        \n                    \n                \n            \n            \n                \nafterOpened()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:26\n                \n            \n\n\n            \n                \n                    Gets an observable that is notified when the dialog is finished opening.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        backdropClick\n                        \n                    \n                \n            \n            \n                \nbackdropClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:45\n                \n            \n\n\n            \n                \n                    Gets an observable that emits when the overlay's backdrop has been clicked.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        beforeClosed\n                        \n                    \n                \n            \n            \n                \nbeforeClosed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:39\n                \n            \n\n\n            \n                \n                    Gets an observable that is notified when the dialog has started closing.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(dialogResult?: R)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dialogResult\n                                    \n                                            R\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getState\n                        \n                    \n                \n            \n            \n                \ngetState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:79\n                \n            \n\n\n            \n                \n                    Gets the current state of the dialog's lifecycle.\n\n\n                    \n                        Returns :     MatDialogState\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keydownEvents\n                        \n                    \n                \n            \n            \n                \nkeydownEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:52\n                \n            \n\n\n            \n                \n                    Gets an observable that emits when keydown events are targeted on the overlay.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePanelClass\n                        \n                    \n                \n            \n            \n                \nremovePanelClass(classes: string | string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:75\n                \n            \n\n\n            \n                \n                    Remove a CSS class or an array of classes from the overlay pane.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    classes\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePosition\n                        \n                    \n                \n            \n            \n                \nupdatePosition(position?: DialogPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:59\n                \n            \n\n\n            \n                \n                    Updates the dialog's position.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            DialogPosition\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        New dialog position.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSize\n                        \n                    \n                \n            \n            \n                \nupdateSize(width?: string, height?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/dialog-ref.class.ts:67\n                \n            \n\n\n            \n                \n                    Updates the dialog's width and height.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        New width of the dialog.\n\n                                    \n                                \n                                \n                                    height\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        New height of the dialog.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DialogPosition, MatDialogState } from '@angular/material/dialog';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nexport class DialogRef {\n  private afterOpened$ = new Subject();\n\n  private beforeClosed$ = new Subject();\n  private afterClosed$ = new Subject();\n\n  private state$ = new BehaviorSubject(MatDialogState.CLOSED);\n\n  close(dialogResult?: R): void {\n    this.state$.next(MatDialogState.CLOSING);\n    this.beforeClosed$.next(dialogResult);\n    this.state$.next(MatDialogState.CLOSED);\n    this.afterClosed$.next(dialogResult);\n\n    this.afterClosed$.complete();\n    this.afterOpened$.complete();\n    this.beforeClosed$.complete();\n    this.state$.complete();\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened(): Observable {\n    this.state$.next(MatDialogState.OPEN);\n    return this.afterOpened$;\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed(): Observable {\n    return this.afterClosed$;\n  }\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed(): Observable {\n    return this.beforeClosed$;\n  }\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable {\n    throw new Error(`method should not be called when using custom outlet`);\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents(): Observable {\n    throw new Error('Method not implemented.');\n  }\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position?: DialogPosition): this {\n    throw new Error(`method not be called when using custom outlet`);\n  }\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width?: string, height?: string): this {\n    throw new Error(`method should not be called when using custom outlet`);\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes: string | string[]): this {\n    throw new Error(`method should not be called when using custom outlet`);\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes: string | string[]): this {\n    throw new Error(`method should not be called when using custom outlet`);\n  }\n  /** Gets the current state of the dialog's lifecycle. */\n  getState(): MatDialogState {\n    return this.state$.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/dialog.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage dialogs.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dialogs$\n                            \n                            \n                                    Private\n                                dialogsMap\n                            \n                            \n                                    Private\n                                outlets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alert\n                            \n                            \n                                closeAll\n                            \n                            \n                                confirm\n                            \n                            \n                                confirmProjectDelete\n                            \n                            \n                                confirmWorkspaceDelete\n                            \n                            \n                                open\n                            \n                            \n                                openErrorDialog\n                            \n                            \n                                registerOutlet\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAnyDialogOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialog: MatDialog, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/dialog.service.ts:31\n                            \n                        \n\n                \n                    \n                            Default constructor with MatDialog dependency.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog instance\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        alert\n                        \n                    \n                \n            \n            \n                \nalert(data: AlertDialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:93\n                \n            \n\n\n            \n                \n                    Opens a alert/information dialog.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AlertDialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeAll\n                        \n                    \n                \n            \n            \n                \ncloseAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm(data: AlertDialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:114\n                \n            \n\n\n            \n                \n                    Opens a confirm dialog.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AlertDialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmProjectDelete\n                        \n                    \n                \n            \n            \n                \nconfirmProjectDelete(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmWorkspaceDelete\n                        \n                    \n                \n            \n            \n                \nconfirmWorkspaceDelete(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(component: any, data: any, outlet?: DialogOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:44\n                \n            \n\n\n            \n                \n                    Opens a modal dialog containing the given component.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Type of the component to load into the dialog.\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                                \n                                    outlet\n                                    \n                                                DialogOutlet\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MatDialogRef | DialogRef\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openErrorDialog\n                        \n                    \n                \n            \n            \n                \nopenErrorDialog(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOutlet\n                        \n                    \n                \n            \n            \n                \nregisterOutlet(outlet: DialogOutlet, component: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                DialogOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject | DialogRef>>(\n    this.dialogsMap,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogsMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        outlets\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAnyDialogOpen\n                    \n                \n\n                \n                    \n                        getisAnyDialogOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/services/dialog.service.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { DialogRef } from '@main/classes/dialog-ref.class';\nimport { BehaviorSubject, filter } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\nimport { Service } from '../decorators/service.decorator';\nimport { AlertDialog, AlertDialogData, AlertDialogVariant } from '../dialogs/alert/alert.dialog';\n\nexport enum DialogOutlet {\n  CONTENT_RIGHT = 'CONTENT_RIGHT',\n}\n\n/**\n * Service to manage dialogs.\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogService {\n  private dialogsMap = new Map();\n  private dialogs$ = new BehaviorSubject | DialogRef>>(\n    this.dialogsMap,\n  );\n  private outlets = new Map();\n\n  public get isAnyDialogOpen() {\n    return this.dialogs$.getValue().size > 0;\n  }\n  /**\n   * Default constructor with `MatDialog` dependency.\n   * @param matDialog MatDialog instance\n   */\n  constructor(private matDialog: MatDialog, private injector: Injector) {}\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param component Type of the component to load into the dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  open(component: any, data: any, outlet?: DialogOutlet): MatDialogRef | DialogRef {\n    console.log();\n\n    let dialog: MatDialogRef | DialogRef;\n\n    if (outlet) {\n      const outletComponent = this.outlets.get(outlet);\n\n      if (!outletComponent)\n        throw new Error(\n          `${outlet} is not assigned to any dialog outlet component, you need to call registerOutlet()`,\n        );\n\n      dialog = outletComponent.renderDialog(component, data);\n    } else {\n      dialog = this.matDialog.open(component, {\n        data,\n        width: '400px',\n      });\n    }\n\n    const uid = uuid();\n    this.dialogsMap.set(uid, dialog);\n\n    dialog.afterClosed().subscribe(() => {\n      this.dialogsMap.delete(uid);\n      this.dialogs$.next(this.dialogsMap);\n    });\n\n    this.dialogs$.next(this.dialogsMap);\n\n    return dialog;\n  }\n\n  closeAll() {\n    this.dialogsMap.forEach((dialog) => {\n      dialog.close();\n    });\n  }\n\n  registerOutlet(outlet: DialogOutlet, component: any) {\n    this.outlets.set(outlet, component);\n  }\n\n  /**\n   * Opens a alert/information dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  alert(data: AlertDialogData) {\n    return this.open(AlertDialog, data)\n      .afterClosed()\n      .pipe(filter((result) => result));\n  }\n\n  openErrorDialog(error: string) {\n    const data: AlertDialogData = {\n      title: 'Error',\n      message: error,\n      variant: AlertDialogVariant.IMPORTANT,\n      cancelText: $localize`Close`,\n    };\n    return this.alert(data);\n  }\n\n  /**\n   * Opens a confirm dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  confirm(data: AlertDialogData) {\n    return this.alert(data);\n  }\n\n  confirmProjectDelete(project: Project) {\n    return this.confirm({\n      title: $localize`Delete project \"${project.name}\"`,\n      message: $localize`Are you sure you want to delete project \"${project.name}\"?`,\n      confirmText: $localize`Delete`,\n      cancelText: $localize`Cancel`,\n      variant: AlertDialogVariant.IMPORTANT,\n    });\n  }\n\n  confirmWorkspaceDelete(workspace: Workspace) {\n    return this.confirm({\n      title: $localize`Delete workspace \"${workspace.name}\"`,\n      message: $localize`Are you sure you want to delete this workspace \"${workspace.name}\"?`,\n      confirmText: $localize`Delete`,\n      cancelText: $localize`Cancel`,\n      variant: AlertDialogVariant.IMPORTANT,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ESet.html":{"url":"classes/ESet.html","title":"class - ESet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ESet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/e-set.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Set\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(key: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/e-set.class.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ESet extends Set {\n  toggle(key: any) {\n    if (this.has(key)) {\n      this.delete(key);\n    } else {\n      this.add(key);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProjectMembersPage.html":{"url":"components/EditProjectMembersPage.html","title":"component - EditProjectMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProjectMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-project-members\n            \n\n            \n                styleUrls\n                ./edit-project-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-project-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                editProjectWithWorkspace\n                            \n                            \n                                    Public\n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:49\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProjectWithWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProjectWithWorkspace(newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:80\n                \n            \n\n\n            \n                \n                    Loads project data from the project service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:140\n                \n            \n\n\n            \n                \n                    Attach to lifecycle hook to unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:91\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:30\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:46\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:42\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.workspaceService.list()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  AddMemberDialog,\n  AddMemberDialogData,\n} from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-edit-project-members',\n  templateUrl: './edit-project-members.page.html',\n  styleUrls: ['./edit-project-members.page.scss'],\n})\nexport class EditProjectMembersPage {\n  faPlus = faPlus;\n\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  });\n\n  public project$!: Observable;\n  public workspaceList$: Observable = this.workspaceService.list();\n  // public workspace: Workspace = this.workspaceService.get(id);\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  private workspaceId!: number;\n  public projectId!: number;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n    this.form.addControl('id', new FormControl(projectId));\n\n    this.loadProject(projectId);\n  }\n\n  /**\n   * Loads project data from the project service.\n   * @param id project id\n   */\n  public loadProject(id: number) {\n    this.project$ = this.projectService.get(id);\n    this.getSubscription = this.project$.subscribe((workspace) => {\n      this.form.patchValue(workspace);\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    let newWorkspaceId: number = this.form.get('newWorkspaceId')?.value;\n\n    if (this.workspaceId != newWorkspaceId && newWorkspaceId != null) {\n      this.editProjectWithWorkspace(newWorkspaceId);\n    } else {\n      this.editProject();\n    }\n  }\n\n  public editProjectWithWorkspace(newWorkspaceId: number) {\n    this.updateSubscription = this.projectService\n      .changeWorkspace(this.projectId, newWorkspaceId)\n      .subscribe(() => {\n        this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n          this.router.navigate(['/', newWorkspaceId]);\n        });\n      });\n  }\n\n  public editProject() {\n    this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/', this.workspaceId]);\n    });\n  }\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {\n        projectId: this.projectId,\n      } as AddMemberDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.memberService.add(result, [this.projectId]).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  /**\n   * Attach to lifecycle hook to unsubscribe from all subscriptions.\n   */\n  ngOnDestroy(): void {\n    if (this.getSubscription) this.getSubscription.unsubscribe();\n    if (this.updateSubscription) this.updateSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  Add member\n\n\n\n\n    \n\n    \n                \n                    ./edit-project-members.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.button {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: -60px;\n  margin-bottom: 20px;\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add member'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditProjectMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProjectPage.html":{"url":"components/EditProjectPage.html","title":"component - EditProjectPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProjectPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-project/edit-project.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-project\n            \n\n            \n                styleUrls\n                ./edit-project.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-project.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:40\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:68\n                \n            \n\n\n            \n                \n                    Loads project data from the project service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:105\n                \n            \n\n\n            \n                \n                    Attach to lifecycle hook to unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:88\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:22\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:37\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:33\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.workspaceService.list()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { untilDestroyed } from '@ngneat/until-destroy';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-edit-project',\n  templateUrl: './edit-project.page.html',\n  styleUrls: ['./edit-project.page.scss'],\n})\nexport class EditProjectPage implements OnDestroy {\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n  });\n\n  public project$!: Observable;\n  public workspaceList$: Observable = this.workspaceService.list();\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  public workspaceId!: number;\n  public projectId!: number;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = Number(workspaceId);\n    this.projectId = Number(projectId);\n\n    this.form.addControl('id', new FormControl(projectId));\n\n    this.loadProject(projectId);\n  }\n\n  /**\n   * Loads project data from the project service.\n   * @param id project id\n   */\n  public loadProject(id: number) {\n    this.project$ = this.projectService.get(id);\n    this.getSubscription = this.project$.subscribe((project) => {\n      this.form.patchValue(project);\n    });\n\n    this.workspaceList$.subscribe((workspaces) => {\n      const workspace = workspaces.find((workspace) => workspace.id === this.workspaceId);\n      if (workspace) {\n        this.form.patchValue({\n          newWorkspaceId: workspace.id,\n        });\n      }\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.updateSubscription = this.projectService\n      .update(this.form.value)\n      .pipe(untilDestroyed(this))\n      .subscribe(() => {\n        this.router.navigate(['/', this.workspaceId]);\n      });\n  }\n\n  /**\n   * Attach to lifecycle hook to unsubscribe from all subscriptions.\n   */\n  ngOnDestroy(): void {\n    if (this.getSubscription) this.getSubscription.unsubscribe();\n    if (this.updateSubscription) this.updateSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n  \n    Workspace:\n    \n      {{ workspace.name }}\n      \n    \n  \n\n  \n    Modules\n  \n  \n  \n    Save\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./edit-project.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Workspace:          {{ workspace.name }}                  Modules          Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditProjectPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditWorkspacePage.html":{"url":"components/EditWorkspacePage.html","title":"component - EditWorkspacePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditWorkspacePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts\n\n\n\n    \n        Description\n    \n    \n        Edit workspace page component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-workspace-page\n            \n\n            \n                styleUrls\n                ./edit-workspace.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-workspace.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadWorkspace\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:36\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadWorkspace(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:58\n                \n            \n\n\n            \n                \n                    Loads workspace data from the workspace service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:69\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    id: new FormControl(-1),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:22\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:36\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:32\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Edit workspace page component.\n */\n@Component({\n  selector: 'app-edit-workspace-page',\n  templateUrl: './edit-workspace.page.html',\n  styleUrls: ['./edit-workspace.page.scss'],\n})\nexport class EditWorkspacePage {\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    id: new FormControl(-1),\n  });\n\n  public workspace$!: Observable;\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n\n    this.loadWorkspace(workspaceId);\n  }\n\n  /**\n   * Loads workspace data from the workspace service.\n   * @param id Workspace id\n   */\n  public loadWorkspace(id: number) {\n    this.workspace$ = this.workspaceService.get(id);\n    this.getSubscription = this.workspace$.subscribe((workspace) => {\n      this.form.patchValue(workspace);\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.updateSubscription = this.workspaceService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/']).then(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  Edit workspace: {{ (workspace$ | async)?.name }}\n  \n\n  \n    Save\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./edit-workspace.page.scss\n                \n                form {\n  padding: 4rem;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Edit workspace: {{ (workspace$ | async)?.name }}        Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditWorkspacePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailsModule.html":{"url":"modules/EmailsModule.html","title":"module - EmailsModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_imports\n\n\n\n\nEmailsRoutingModule\n\nEmailsRoutingModule\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nEmailsRoutingModule->EmailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/emails/emails.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            EmailsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmailsRoutingModule } from './emails.routing';\n\n@NgModule({\n  imports: [CommonModule, EmailsRoutingModule],\n  declarations: [],\n})\nexport class EmailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailsRoutingModule.html":{"url":"modules/EmailsRoutingModule.html","title":"module - EmailsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/emails/emails.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\n\n/**\n * Emails routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/inbox.svg',\n    },\n  },\n];\n\n/**\n * Emails routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmailsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Emoji.html":{"url":"classes/Emoji.html","title":"class - Emoji","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Emoji\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/libs/emoji/emoji.lib.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _emojiConvertor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                characterSequenceToUnicode\n                            \n                            \n                                    Static\n                                colonsToUnicode\n                            \n                            \n                                    Static\n                                emojiNameToUnicode\n                            \n                            \n                                    Static\n                                unicodeToTwemoji\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _emojiConvertor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n    const emojiConvertor = new EmojiConvertor();\n    emojiConvertor.replace_mode = 'unified';\n    emojiConvertor.allow_native = true;\n    emojiConvertor.allow_caps = true;\n    emojiConvertor.addAliases(EMOJI_ALIASES);\n    return emojiConvertor;\n  })()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/libs/emoji/emoji.lib.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        characterSequenceToUnicode\n                        \n                    \n                \n            \n            \n                \n                    \n                    characterSequenceToUnicode(characterSequence: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/emoji/emoji.lib.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    characterSequence\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        colonsToUnicode\n                        \n                    \n                \n            \n            \n                \n                    \n                    colonsToUnicode(source: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/emoji/emoji.lib.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        emojiNameToUnicode\n                        \n                    \n                \n            \n            \n                \n                    \n                    emojiNameToUnicode(emojiName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/emoji/emoji.lib.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emojiName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        unicodeToTwemoji\n                        \n                    \n                \n            \n            \n                \n                    \n                    unicodeToTwemoji(source: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/emoji/emoji.lib.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EmojiConvertor } from 'emoji-js';\nimport { EMOJI_SEQUENCE_ALIASES } from './emoji-sequence.aliases';\nimport { EMOJI_ALIASES } from './emoji.aliases';\n\nexport class Emoji {\n  private static _emojiConvertor = (() => {\n    const emojiConvertor = new EmojiConvertor();\n    emojiConvertor.replace_mode = 'unified';\n    emojiConvertor.allow_native = true;\n    emojiConvertor.allow_caps = true;\n    emojiConvertor.addAliases(EMOJI_ALIASES);\n    return emojiConvertor;\n  })();\n\n  public static emojiNameToUnicode(emojiName: string) {\n    return Emoji.colonsToUnicode(`:${emojiName}:`);\n  }\n\n  public static colonsToUnicode(source: string) {\n    return Emoji._emojiConvertor.replace_colons(source);\n  }\n\n  public static characterSequenceToUnicode(characterSequence: string) {\n    return (EMOJI_SEQUENCE_ALIASES as any)[characterSequence] || characterSequence;\n  }\n\n  public static unicodeToTwemoji(source: string) {\n    (window as any).twemoji.parse(source, {\n      size: '16x16',\n      // ext: '.svg',\n      base: 'https://twemoji.maxcdn.com/',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmojiToken.html":{"url":"interfaces/EmojiToken.html","title":"interface - EmojiToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmojiToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/libs/marked/extensions/marked-emoji-extension.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            emoji\n                                        \n                                \n                                \n                                        \n                                            emojiType\n                                        \n                                \n                                \n                                        \n                                            raw\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emoji\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emoji:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emojiType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emojiType:     \"sequence\" | \"colon\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"sequence\" | \"colon\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        raw\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        raw:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EMOJI_SEQUENCE_REGEX } from '@main/libs/emoji/emoji-sequence.aliases';\nimport { Emoji } from '@main/libs/emoji/emoji.lib';\nimport { marked } from 'marked';\n\ninterface EmojiToken {\n  type: 'emoji';\n  raw: string;\n  emoji: string;\n  emojiType: 'sequence' | 'colon';\n}\n\n/**\n * Emoji extension to use with `marked` parser\n *\n * Replaces only `:smile:` notation\n */\nexport const emoji = {\n  name: 'emoji',\n  level: 'inline', // This is an inline-level tokenizer\n  start(src: string) {\n    return src.indexOf(':');\n  }, // Hint to Marked.js to stop and check for a match\n  tokenizer(src: string, _tokens: any) {\n    const rule = /^:(\\w+):/; // Regex for the complete token, anchor to string start\n    const match = rule.exec(src);\n\n    const matchSequence = EMOJI_SEQUENCE_REGEX.exec(src);\n\n    if (matchSequence) {\n      return {\n        type: 'emoji',\n        raw: matchSequence[0],\n        emoji: matchSequence[1],\n        emojiType: 'sequence',\n      };\n    }\n\n    if (match) {\n      return {\n        // Token to generate\n        type: 'emoji', // Should match \"name\" above\n        raw: match[0], // Text to consume from the source\n        emoji: match[1], // Additional custom properties\n        emojiType: 'colon',\n      };\n    }\n\n    return undefined;\n  },\n  renderer(token: EmojiToken): string {\n    const convertFunction =\n      token.emojiType === 'colon' ? Emoji.emojiNameToUnicode : Emoji.characterSequenceToUnicode;\n    const convertedEmoji = convertFunction(token.emoji);\n\n    return `${convertedEmoji}`;\n  },\n} as marked.TokenizerExtension & marked.RendererExtension;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Enum.html":{"url":"classes/Enum.html","title":"class - Enum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Enum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/enum.class.ts\n        \n\n\n            \n                Description\n            \n            \n                Utility enum functions for typescript\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                entries\n                            \n                            \n                                    Static\n                                isNumeric\n                            \n                            \n                                    Static\n                                keys\n                            \n                            \n                                    Static\n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        entries\n                        \n                    \n                \n            \n            \n                \n                    \n                    entries(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:70\n                \n            \n\n\n            \n                \n                    Function to get enum value by key.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.entries(TestEnum) // [['One', 1], ['Two', 2], ['Three', 3]]\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get entries from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.entries(TestEnum) // [[&#39;One&#39;, 1], [&#39;Two&#39;, 2], [&#39;Three&#39;, 3]]\n                        \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        array of enum entries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isNumeric\n                        \n                    \n                \n            \n            \n                \n                    \n                    isNumeric(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:10\n                \n            \n\n\n            \n                \n                    Tests if the given enum is numeric - contains at leas one number as value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to test\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true or false based on whether enum has numeric values\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        keys\n                        \n                    \n                \n            \n            \n                \n                    \n                    keys(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:32\n                \n            \n\n\n            \n                \n                    Function to get enum keys.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.keys(TestEnum) // ['One', 'Two', 'Three']\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get keys from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.keys(TestEnum) // [&#39;One&#39;, &#39;Two&#39;, &#39;Three&#39;]\n                        \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        array of enum keys\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        values\n                        \n                    \n                \n            \n            \n                \n                    \n                    values(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:48\n                \n            \n\n\n            \n                \n                    Function to get enum values.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.values(TestEnum) // [1, 2, 3]\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get values from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.values(TestEnum) // [1, 2, 3]\n                        \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        array of enum values\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Enum {\n  /**\n   * Tests if the given enum is numeric - contains at leas one number as value.\n   * @param enumType enum to test\n   * @returns true or false based on whether enum has numeric values\n   */\n  public static isNumeric(enumType: any): boolean {\n    for (const key of Object.keys(enumType)) {\n      if (Number(key)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Function to get enum keys.\n   * @param enumType enum to get keys from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.keys(TestEnum) // ['One', 'Two', 'Three']\n   * @returns array of enum keys\n   */\n  public static keys(enumType: any): string[] {\n    return Object.keys(enumType).filter((k) => !Number(k) && k != '0');\n  }\n\n  /**\n   * Function to get enum values.\n   * @param enumType enum to get values from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.values(TestEnum) // [1, 2, 3]\n   * @returns array of enum values\n   */\n  public static values(enumType: any): any[] {\n    if (!Enum.isNumeric(enumType)) {\n      return Object.values(enumType);\n    }\n\n    return Object.values(enumType)\n      .filter((v) => Number(v) || v === '0')\n      .map((v) => Number(v));\n  }\n\n  /**\n   * Function to get enum value by key.\n   * @param enumType enum to get entries from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.entries(TestEnum) // [['One', 1], ['Two', 2], ['Three', 3]]\n   * @returns array of enum entries\n   */\n  public static entries(enumType: any): [string, any][] {\n    if (!Enum.isNumeric(enumType)) {\n      return Object.entries(enumType);\n    }\n\n    return Object.entries(enumType)\n      .filter((e) => Number(e[1]) || e[1] === '0' || e[1] === 0)\n      .map((e) => [e[0], Number(e[1])]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                unauthorizedInARow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/interceptors/error.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/interceptors/error.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unauthorizedInARow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/interceptors/error.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DialogService } from '@main/services/dialog.service';\nimport { catchError, EMPTY, Observable, throwError } from 'rxjs';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private dialogService: DialogService, private router: Router) {}\n\n  private unauthorizedInARow = 0;\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((e, obs) => {\n        if (e.status === 401) {\n          this.unauthorizedInARow++;\n\n          if (this.unauthorizedInARow > 1) return EMPTY;\n\n          this.dialogService.closeAll();\n\n          if (e.error.message == 'user deleted') {\n            localStorage.removeItem('logged');\n            this.router.navigate(['/auth/delete-account']);\n            return EMPTY;\n          }\n\n          if (localStorage.getItem('logged')) {\n            localStorage.removeItem('logged');\n            this.dialogService.openErrorDialog($localize`Your session has expired.`);\n          }\n\n          this.router.navigate(['/auth/login']);\n          return EMPTY;\n        }\n\n        return throwError(() => e);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorValidationTree.html":{"url":"interfaces/ErrorValidationTree.html","title":"interface - ErrorValidationTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorValidationTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/decorators/service-validator.decorator.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/decorators/service-validator.decorator.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { DialogService } from '@main/services/dialog.service';\nimport { Observable } from 'rxjs';\n\nexport interface ErrorValidationTree {\n  [key: string]: {\n    [key: number]: string;\n  };\n}\n\nexport function ServiceValidator(errorValidationTree: ErrorValidationTree) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    descriptor.value = function (identifier: string) {\n      // const result = originalMethod.apply(this, identifier);\n\n      // This function returns new observable to use it as a pipe in other observables\n      return (source: Observable) => {\n        // Check for match in response\n        const match = (response: any) => {\n          // identifier check\n          if (!errorValidationTree[identifier]) return;\n\n          // Status check\n          const status = response?.error?.status || response?.status;\n          if (!status) return;\n\n          return errorValidationTree[identifier][status] || null;\n        };\n\n        const showAlert = (message: string, responseType: 'SUCCESS' | 'ERROR') => {\n          const dialogService = (window as any).injector.get(DialogService);\n\n          dialogService.alert({\n            title:\n              responseType === 'SUCCESS' ? $localize`Success` : $localize`Something went wrong`,\n            message,\n            cancelText: $localize`OK`,\n          });\n        };\n\n        return new Observable((subscriber) => {\n          source.subscribe({\n            next(value) {\n              const m = match(value);\n\n              if (m) {\n                showAlert(m, 'ERROR');\n              } else {\n                subscriber.next(value);\n              }\n            },\n            error(error) {\n              const m = match(error);\n\n              if (m) {\n                showAlert(m, 'ERROR');\n              } else {\n                subscriber.error(error);\n              }\n            },\n            complete() {\n              subscriber.complete();\n            },\n          });\n        });\n      };\n    };\n\n    return descriptor;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedMeta.html":{"url":"interfaces/ExtendedMeta.html","title":"interface - ExtendedMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtendedMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/story-page-config.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Meta\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            selector\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selector\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selector:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgControl } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainModule } from '@main/_main.module';\nimport { Meta, moduleMetadata } from '@storybook/angular';\nimport { NgModuleMetadata } from '@storybook/angular/dist/ts3.9/client/preview/types';\nimport { merge } from 'lodash-es';\nimport { getAllProperties } from '../functions/get-all-properties.function';\n\nexport interface ExtendedMeta extends Meta {\n  metadata?: Partial;\n  selector: string;\n}\n\nconst DEFAULT_METADATA: Partial = {\n  imports: [MainModule, BrowserAnimationsModule],\n  providers: [NgControl],\n};\n\nconst IGNORED_PROPERTIES = getAllProperties({});\n\nexport class StoryPageConfig {\n  private _meta: ExtendedMeta;\n\n  constructor(meta: ExtendedMeta) {\n    this._meta = meta;\n\n    this._meta.decorators = [moduleMetadata(merge({}, DEFAULT_METADATA, this._meta.metadata))];\n    this.disableEditingFunctions();\n  }\n\n  private disableEditingFunctions() {\n    if (!this._meta.argTypes) {\n      this._meta.argTypes = {};\n    }\n\n    const properties = getAllProperties(this._meta.component.prototype);\n    console.log(properties);\n    for (const [property, predicate] of properties.map(\n      (p) => [p, this.propertyPredicate(p)] as [string, any],\n    )) {\n      if (typeof this._meta.component.prototype[property] === 'function') {\n        switch (predicate) {\n          case 'delete':\n            this._meta.argTypes[property] = { table: { disable: true } };\n            break;\n          case 'readonly':\n            this._meta.argTypes[property] = { control: false };\n            break;\n        }\n      }\n    }\n  }\n\n  private propertyPredicate(property: string) {\n    if (property[0] === '_') return 'delete';\n    if (property.startsWith('ng')) return 'delete';\n    return !IGNORED_PROPERTIES.includes(property) ? 'readonly' : null;\n  }\n\n  public setTitle(title: string) {\n    this._meta.title = title;\n    return this;\n  }\n\n  public addDecorators(decorators: Meta['decorators']) {\n    if (!this._meta.decorators) {\n      this._meta.decorators = [];\n    }\n\n    this._meta.decorators = ([] as any[]).concat(this._meta.decorators, decorators);\n    return this;\n  }\n\n  public get selector() {\n    return this._meta.selector;\n  }\n\n  public meta() {\n    return this._meta as Meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterCheckbox.html":{"url":"interfaces/FilterCheckbox.html","title":"interface - FilterCheckbox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterCheckbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/filters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        apply\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(input: T, option: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/interfaces/filters.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    option\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     \"1\" | \"0\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"1\" | \"0\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterCheckbox {\n  type: 'checkbox';\n  options: {\n    1: T | null;\n    0: T | null;\n  };\n  value: 1 | 0;\n  label: string;\n  apply(input: T, option: any): T;\n}\n\nexport type Filter = FilterCheckbox;\n\nexport type FilterType = 'checkbox';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filters.html":{"url":"classes/Filters.html","title":"class - Filters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/filters.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ONLY_MY_TASKS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        ONLY_MY_TASKS\n                        \n                    \n                \n            \n            \n                \n                    \n                    ONLY_MY_TASKS(currentUserId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/filters.class.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterCheckbox\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterCheckbox } from '@main/interfaces/filters.interface';\nimport { Task } from '@tasks/interfaces/task.interface';\n\nexport class Filters {\n  public static ONLY_MY_TASKS(currentUserId: string): FilterCheckbox {\n    return {\n      type: 'checkbox',\n      label: $localize`Only my tasks`,\n      options: {\n        1: { assigneeId: currentUserId },\n        0: {},\n      },\n      value: 0,\n      apply(tasks: Task[], option: { assigneeId?: string }) {\n        return tasks.filter((task) => task.assigneeId === option.assigneeId);\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/filters/filters.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                ./filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filters\n                            \n                            \n                                    Public\n                                    Optional\n                                form\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getControl\n                            \n                            \n                                    Public\n                                saveFilters\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filters\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/filters/filters.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/filters/filters.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getControl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getControl(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/filters/filters.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/filters/filters.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/filters/filters.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormArray\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/filters/filters.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:28\n\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n\n                \n                    \n                        getfilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/filters/filters.component.ts:21\n                                \n                            \n\n                \n                    \n                        setfilters(filters: Filter[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/filters/filters.component.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            filters\n                                                    \n                                                            \n                                                                            Filter[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormArray, FormControl, NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Filter } from '@main/interfaces/filters.interface';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss'],\n})\nexport class FiltersComponent extends ControlAccessor {\n  @Input() set filters(filters: Filter[]) {\n    this.form = new FormArray(\n      filters.map((filter) => {\n        return new FormControl(filter.value);\n      }),\n    );\n    this._filters = filters;\n  }\n\n  public get filters() {\n    return this._filters;\n  }\n\n  private _filters: Filter[] = [];\n  public form?: FormArray;\n\n  constructor(public override ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  public getControl(index: number) {\n    const control = (this.form?.controls[index] || new FormControl()) as FormControl;\n    return control;\n  }\n\n  public saveFilters() {\n    if (!this.form) return;\n\n    let formValue: Filter[] = [];\n\n    for (const [index, filter] of this.filters.entries()) {\n      const filterValue = Number(this.form?.controls[index].value) as 0 | 1;\n      filter.value = filterValue;\n      formValue.push(filter);\n    }\n\n    this.control.setValue(formValue);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ filter.label }}\n      \n      Unknown filter type: {{ filter.type }}\n    \n  \n\n  Save filters\n\n    \n\n    \n                \n                    ./filters.component.scss\n                \n                .filters {\n  width: 100%;\n\n  app-button {\n    width: 100%;\n\n    ::ng-deep button {\n      width: 100%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ filter.label }}            Unknown filter type: {{ filter.type }}        Save filters'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusInitialDirective.html":{"url":"directives/FocusInitialDirective.html","title":"directive - FocusInitialDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  FocusInitialDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/focus-initial.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to focus on the first input element on the page\n\n            \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFocusInitial]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/focus-initial.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Default constructor of the directive.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to attached element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/directives/focus-initial.directive.ts:19\n                \n            \n\n\n            \n                \n                    Lifecycle hook to initialize the directive.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n/**\n * Directive to focus on the first input element on the page\n */\n@Directive({\n  selector: '[appFocusInitial]',\n})\nexport class FocusInitialDirective implements AfterViewInit {\n  /**\n   * Default constructor of the directive.\n   * @param el Reference to attached element\n   */\n  constructor(private el: ElementRef) {}\n\n  /**\n   * Lifecycle hook to initialize the directive.\n   */\n  ngAfterViewInit(): void {\n    this.el.nativeElement.__ngContext__[33].focus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordPage.html":{"url":"components/ForgotPasswordPage.html","title":"component - ForgotPasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/forgot-password/forgot-password.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-page\n            \n\n            \n                styleUrls\n                ./forgot-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAngleDown\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                resetSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:24\n                        \n                    \n\n            \n                \n                    Form group for reset password.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        resetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-forgot-page',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  faAngleDown = faAngleDown;\n\n  private resetSubscription?: Subscription;\n\n  /**\n   * Form group for reset password.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n  });\n\n  resetPassword() {\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.resetSubscription = this.authService.resetPassword(this.form.value).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        Back to login page\n      \n      \n        \n          Reset password\n          When you enter your email address, you will receive an email with a link to reset your password.\n        \n\n        \n\n        Reset password\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .return-button {\n      position: relative;\n      display: flex;\n      align-items: center;\n      align-self: flex-start;\n      margin: 0 0 0 40px;\n\n      &:hover {\n        a {\n          color: var(--color-link-hover);\n        }\n\n        app-icon {\n          color: var(--color-link-hover);\n        }\n      }\n\n      app-icon {\n        display: inline-block;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: 5px;\n        color: var(--color-link);\n        transform: rotate(90deg);\n      }\n\n      a {\n        color: var(--color-link);\n        cursor: pointer;\n        transition: color 0.2s ease;\n      }\n    }\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Back to login page                              Reset password          When you enter your email address, you will receive an email with a link to reset your password.                        Reset password                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormControlStoryPageConfig.html":{"url":"classes/FormControlStoryPageConfig.html","title":"class - FormControlStoryPageConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormControlStoryPageConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/form-control-story-page-config.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        StoryPageConfig\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _meta\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addDecorators\n                            \n                            \n                                    Private\n                                disableEditingFunctions\n                            \n                            \n                                    Public\n                                meta\n                            \n                            \n                                    Private\n                                propertyPredicate\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(meta: ExtendedMeta)\n                    \n                \n                        \n                            \n                                Defined in src/stories/helpers/classes/form-control-story-page-config.class.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        ExtendedMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtendedMeta\n\n                    \n                \n                        \n                            \n                                Inherited from         StoryPageConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         StoryPageConfig:22\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addDecorators\n                        \n                    \n                \n            \n            \n                \n                    \n                    addDecorators(decorators)\n                \n            \n\n\n            \n                \n                    Inherited from         StoryPageConfig\n\n                \n            \n            \n                \n                        Defined in         StoryPageConfig:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    decorators\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        disableEditingFunctions\n                        \n                    \n                \n            \n            \n                \n                    \n                    disableEditingFunctions()\n                \n            \n\n\n            \n                \n                    Inherited from         StoryPageConfig\n\n                \n            \n            \n                \n                        Defined in         StoryPageConfig:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        meta\n                        \n                    \n                \n            \n            \n                \n                    \n                    meta()\n                \n            \n\n\n            \n                \n                    Inherited from         StoryPageConfig\n\n                \n            \n            \n                \n                        Defined in         StoryPageConfig:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Meta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        propertyPredicate\n                        \n                    \n                \n            \n            \n                \n                    \n                    propertyPredicate(property: string)\n                \n            \n\n\n            \n                \n                    Inherited from         StoryPageConfig\n\n                \n            \n            \n                \n                        Defined in         StoryPageConfig:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"delete\" | \"readonly\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         StoryPageConfig\n\n                \n            \n            \n                \n                        Defined in         StoryPageConfig:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Meta } from '@storybook/angular';\nimport { merge } from 'lodash-es';\nimport { DOCS_PRESET_CONTROL_ACCESSOR } from '../arg-type.helper';\nimport { ExtendedMeta, StoryPageConfig } from './story-page-config.class';\n\nconst DEFAULT_CONFIG: Partial = {\n  argTypes: {\n    ...DOCS_PRESET_CONTROL_ACCESSOR,\n  },\n} as Meta;\n\nexport class FormControlStoryPageConfig extends StoryPageConfig {\n  constructor(meta: ExtendedMeta) {\n    super(merge({}, DEFAULT_CONFIG, meta));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitAccount.html":{"url":"interfaces/GitAccount.html","title":"interface - GitAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitHubUsername\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            suspended\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitHubUsername\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitHubUsername:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suspended\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suspended:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitAccountWithUsage.html":{"url":"interfaces/GitAccountWithUsage.html","title":"interface - GitAccountWithUsage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitAccountWithUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                                \n                                        \n                                            usage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:         GitAccount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitAccount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usage:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GitAccount } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { map, Observable, take } from 'rxjs';\n\ninterface GitAccountWithUsage {\n  account: GitAccount;\n  usage: Observable;\n}\n\n@Component({\n  selector: 'app-settings-integrations',\n  templateUrl: './settings-integrations.page.html',\n  styleUrls: ['./settings-integrations.page.scss'],\n})\nexport class SettingsIntegrationsPage implements OnInit {\n  public gitHubAccounts$!: Observable;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  ngOnInit() {\n    this.loadGitHubIntegration();\n  }\n\n  public loadGitHubIntegration(): void {\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\n      map((accounts) => {\n        return accounts.map((account) => {\n          return {\n            account,\n            usage: this.getConnectedProjects(account).pipe(take(1)),\n          };\n        });\n      }),\n    );\n  }\n\n  public disconnect(account: GitAccount): void {\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\n      window.open(link, '_blank');\n    });\n  }\n\n  public getConnectedProjects(account: GitAccount): Observable {\n    return this.gitIntegrationService\n      .getGitHubAccountConnectedProjects(account)\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(', ')));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitIntegration.html":{"url":"interfaces/GitIntegration.html","title":"interface - GitIntegration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitIntegration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitRepositories\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitRepositories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitRepositories:         GitRepository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitRepository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GitIntegrationService.html":{"url":"injectables/GitIntegrationService.html","title":"injectable - GitIntegrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GitIntegrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/git-integration.service.ts\n        \n\n\n            \n                Description\n            \n            \n                How to use Git integration service:\n\nRun method startGitHubIntegration() to start the integration process and open the browser to the GitHub login page.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attachGitHubIntegration\n                            \n                            \n                                    Public\n                                connectGitHubIssue\n                            \n                            \n                                    Public\n                                connectGitHubPull\n                            \n                            \n                                    Public\n                                deleteConnectedGitHubAccount\n                            \n                            \n                                    Public\n                                deleteGitHubIntegration\n                            \n                            \n                                    Public\n                                disconnectGitHubIssue\n                            \n                            \n                                    Public\n                                disconnectGitHubPull\n                            \n                            \n                                    Public\n                                getConnectedGitHubAccounts\n                            \n                            \n                                    Public\n                                getGitHubAccountConnectedProjects\n                            \n                            \n                                    Public\n                                getGitHubIntegration\n                            \n                            \n                                    Public\n                                gitHubIssueList\n                            \n                            \n                                    Public\n                                gitHubPullList\n                            \n                            \n                                    Public\n                                hasGitHubIntegration\n                            \n                            \n                                    Public\n                                isOwnerOfRepository\n                            \n                            \n                                    Public\n                                postGitHubIntegration\n                            \n                            \n                                    Public\n                                startGitHubIntegration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/git-integration.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attachGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    attachGitHubIntegration(projectId: number, repositoryName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repositoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectGitHubIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                    connectGitHubIssue(projectId: number, taskId: number, issue?: GitIssue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    issue\n                                    \n                                                GitIssue\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectGitHubPull\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                    connectGitHubPull(projectId: number, taskId: number, pull?: GitPull)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pull\n                                    \n                                                GitPull\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteConnectedGitHubAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteConnectedGitHubAccount(gitHubAccountId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:81\n                \n            \n\n\n            \n                \n                    Delete the given account connection\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gitHubAccountId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GitHub account id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with link to open the GitHub page with application removal\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGitHubIntegration(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnectGitHubIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                    disconnectGitHubIssue(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnectGitHubPull\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                    disconnectGitHubPull(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConnectedGitHubAccounts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConnectedGitHubAccounts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGitHubAccountConnectedProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGitHubAccountConnectedProjects(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gitHubIssueList\n                        \n                    \n                \n            \n            \n                \n                    \n                    gitHubIssueList(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gitHubPullList\n                        \n                    \n                \n            \n            \n                \n                    \n                    gitHubPullList(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hasGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasGitHubIntegration(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isOwnerOfRepository\n                        \n                    \n                \n            \n            \n                \n                    \n                    isOwnerOfRepository(repositoryName: string, account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:132\n                \n            \n\n\n            \n                \n                    Checks if the given account is the owner of the repository\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    repositoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Repository name with it's owner ex.\n\n                                    \n                                \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GitHub account object to test with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.gitHubIntegrationService.isOwnerOfRepository(&#39;@czemar/cli&#39;, account)\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the repository is owned by the account\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        postGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    postGitHubIntegration(installationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    installationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        startGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    startGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:33\n                \n            \n\n\n            \n                \n                    Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\n\n\n                    \n                        Example :\n                        \n                            this.gitHubIntegrationService.startGitHubIntegration()\n                        \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable true if the opened window with GitHub integration was closed\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  GitAccount,\n  GitIntegration,\n  GitIssue,\n  GitPull,\n} from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { ApiService } from '@main/services/api.service';\nimport { filter, interval, map, mergeMap, Observable, take } from 'rxjs';\nimport { ProjectService } from './project.service';\n\n/**\n * How to use Git integration service:\n *\n * 1. Run method `startGitHubIntegration()` to start the integration process and open the browser to the GitHub login page.\n *\n *\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class GitIntegrationService {\n  constructor(private apiService: ApiService, private projectService: ProjectService) {}\n\n  /**\n   * Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\n   * @example this.gitHubIntegrationService.startGitHubIntegration()\n   * @returns Observable true if the opened window with GitHub integration was closed\n   */\n  public startGitHubIntegration(): Observable {\n    return this.apiService.get('/user/integration/github/repository').pipe(\n      map((response: any) => response.link),\n      mergeMap((url) => {\n        const win = window.open(url, '_blank');\n\n        if (!win) throw new Error('This browser does not support window.open');\n\n        return interval(100).pipe(\n          map(() => win.closed),\n          filter((closed) => closed),\n          take(1),\n        );\n      }),\n    );\n  }\n\n  public postGitHubIntegration(installationId: string): Observable {\n    return this.apiService.post(`/user/integration/github`, {\n      params: { installationId },\n    });\n  }\n\n  public getGitHubIntegration(): Observable {\n    return this.apiService.get('/user/integration/github/repository');\n  }\n\n  public attachGitHubIntegration(projectId: number, repositoryName: string): Observable {\n    return this.apiService.post(`/project/${projectId}/integration/github`, {\n      body: repositoryName,\n    });\n  }\n\n  public getConnectedGitHubAccounts(): Observable {\n    return this.apiService\n      .get('/user/integration/github')\n      .pipe(\n        map((accounts: GitAccount[]) =>\n          accounts.map((account) => ({ ...account, gitHubUsername: `@${account.gitHubUsername}` })),\n        ),\n      );\n  }\n\n  /**\n   * Delete the given account connection\n   * @param gitHubAccountId GitHub account id\n   * @returns object with link to open the GitHub page with application removal\n   */\n  public deleteConnectedGitHubAccount(gitHubAccountId: number): Observable {\n    return this.apiService.delete(`/user/integration/github/${gitHubAccountId}`);\n  }\n\n  public deleteGitHubIntegration(projectId: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/integration/github`);\n  }\n\n  public hasGitHubIntegration(projectId: number): Observable {\n    return this.projectService.get(projectId).pipe(map((project) => !!project.gitHubIntegration));\n  }\n\n  public gitHubIssueList(projectId: number) {\n    return this.apiService.get(`/project/${projectId}/integration/git/issue`);\n  }\n\n  /** @deprecated */\n  public connectGitHubIssue(projectId: number, taskId: number, issue?: GitIssue) {\n    return this.apiService.post(`/project/${projectId}/task/${taskId}/integration/git/issue`, {\n      body: issue,\n    });\n  }\n\n  /** @deprecated */\n  public disconnectGitHubIssue(projectId: number, taskId: number) {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}/integration/git/issue`);\n  }\n\n  public gitHubPullList(projectId: number) {\n    return this.apiService.get(`/project/${projectId}/integration/git/pull`);\n  }\n\n  /** @deprecated */\n  public connectGitHubPull(projectId: number, taskId: number, pull?: GitPull) {\n    return this.apiService.post(`/project/${projectId}/task/${taskId}/integration/git/pull`, {\n      body: pull,\n    });\n  }\n\n  /** @deprecated */\n  public disconnectGitHubPull(projectId: number, taskId: number) {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}/integration/git/pull`);\n  }\n\n  /**\n   * Checks if the given account is the owner of the repository\n   * @param repositoryName Repository name with it's owner ex. @czemar/cli\n   * @param account GitHub account object to test with\n   * @example this.gitHubIntegrationService.isOwnerOfRepository('@czemar/cli', account)\n   * @returns true if the repository is owned by the account\n   */\n  public isOwnerOfRepository(repositoryName: string, account: GitAccount): boolean {\n    const preparedUsername = account.gitHubUsername.replace('@', '');\n    return Boolean(repositoryName.match(new RegExp('^' + preparedUsername + '/*')));\n  }\n\n  public getGitHubAccountConnectedProjects(account: GitAccount): Observable {\n    return this.projectService\n      .list()\n      .pipe(\n        map((projects) =>\n          projects.filter(\n            (project: Project) =>\n              project.gitHubIntegration &&\n              this.isOwnerOfRepository(project.gitHubIntegration, account),\n          ),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitIssue.html":{"url":"interfaces/GitIssue.html","title":"interface - GitIssue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitIssue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitPull.html":{"url":"interfaces/GitPull.html","title":"interface - GitPull","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitPull\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            branch\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitRepository.html":{"url":"interfaces/GitRepository.html","title":"interface - GitRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fullName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            private\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GithubIntegrationPage.html":{"url":"components/GithubIntegrationPage.html","title":"component - GithubIntegrationPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GithubIntegrationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/github-integration/github-integration.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-github-integration-page\n            \n\n            \n                styleUrls\n                ./github-integration.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./github-integration.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/github-integration/github-integration.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/github-integration/github-integration.page.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\n\n@Component({\n  selector: 'app-github-integration-page',\n  templateUrl: './github-integration.page.html',\n  styleUrls: ['./github-integration.page.scss'],\n})\nexport class GithubIntegrationPage implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private gitIntegrationService: GitIntegrationService,\n  ) {}\n\n  ngOnInit() {\n    const { installation_id, setup_action } = this.activatedRoute.snapshot.queryParams;\n\n    console.log(installation_id, setup_action, setup_action !== 'update');\n\n    if (installation_id && setup_action && setup_action !== 'update') {\n      this.gitIntegrationService.postGitHubIntegration(installation_id).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  GitHub connection success\n\n\n  Now you can close this page\n\n\n    \n\n    \n                \n                    ./github-integration.page.scss\n                \n                :host {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\nh2 {\n  color: var(--color-text);\n  font-size: 1.5rem;\n}\n\np {\n  color: var(--color-text);\n  opacity: 0.75;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  GitHub connection success  Now you can close this page'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'GithubIntegrationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/icon/icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        Icon component. Supports material icons and font-awesome icons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-icon\n            \n\n            \n                styleUrls\n                ./icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _icon\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                prefix\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.height\n                            \n                            \n                                style.width\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    iconDefinition\n                                \n                                \n                                    style\n                                \n                                \n                                    snakeCaseName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/icon/icon.component.ts:35\n                            \n                        \n                \n                    \n                        Icon to display. Can be a string or an icon definition.\nFor example:\nFor the icon \"fa fa-question\" you can use:\nFor the icon \"mat search\" you can use:\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '24px'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/icon/icon.component.ts:19\n                            \n                        \n                \n                    \n                        Icon size. Defaults to 1.5em. Supports all CSS units.\nFor example: 24px, 1.5em, etc.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:66\n                        \n                    \n\n            \n                \n                    Binding to the hosts height attribute to use the size input.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:59\n                        \n                    \n\n            \n                \n                    Binding to hosts width attribute to use the size input.\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string | IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:95\n                        \n                    \n\n            \n                \n                    Private icon variable to use getter and setter for props.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IconName\n\n                    \n                \n                \n                    \n                        Default value : 'question'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:105\n                        \n                    \n\n            \n                \n                    Name getter\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IconPrefix\n\n                    \n                \n                \n                    \n                        Default value : 'fas'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:100\n                        \n                    \n\n            \n                \n                    Prefix getter\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:52\n                                \n                            \n                    \n                        \n                                Icon getter\n\n\n                                \n                                    Returns :         string | IconDefinition\n\n                                \n                        \n                    \n\n                \n                    \n                        seticon(value: string | IconDefinition)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:35\n                                \n                            \n                    \n                        \n                                Icon to display. Can be a string or an icon definition.\nFor example:\nFor the icon \"fa fa-question\" you can use:\nFor the icon \"mat search\" you can use:\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string | IconDefinition\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:59\n                                \n                            \n                    \n                        \n                                Binding to hosts width attribute to use the size input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:66\n                                \n                            \n                    \n                        \n                                Binding to the hosts height attribute to use the size input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        iconDefinition\n                    \n                \n\n                \n                    \n                        geticonDefinition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:73\n                                \n                            \n                    \n                        \n                                Getter to the icon definition. If no icon is found it returns the question icon.\n\n\n                                \n                                    Returns :         IconDefinition\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        style\n                    \n                \n\n                \n                    \n                        getstyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:83\n                                \n                            \n                    \n                        \n                                Style host binding to set the icon size.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        snakeCaseName\n                    \n                \n\n                \n                    \n                        getsnakeCaseName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:113\n                                \n                            \n                    \n                        \n                                Getter to get the icon name in snake case.\nFor example:\nfor ShoppingCart this function will return shopping_cart\n\n\n                                \n                                    Returns :         IconName\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input } from '@angular/core';\nimport { IconName, IconPrefix } from '@fortawesome/fontawesome-svg-core';\nimport { Utils } from '../../classes/utils.class';\nimport { faQuestion, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Icon component. Supports material icons and font-awesome icons.\n */\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent {\n  /**\n   * Icon size. Defaults to 1.5em. Supports all CSS units.\n   * For example: 24px, 1.5em, etc.\n   */\n  @Input() size: string = '24px';\n\n  /**\n   * Icon to display. Can be a string or an icon definition.\n   * For example:\n   *\n   * For the icon \"fa fa-question\" you can use:\n   * ```html\n   * \n   * ```\n   *\n   * For the icon \"mat search\" you can use:\n   * ```html\n   * \n   * ```\n   */\n  @Input() set icon(value: string | IconDefinition) {\n    this._icon = value;\n\n    if (typeof value === 'string') {\n      const splitIndex = Utils.regexIndexOf(value, /[A-Z]/);\n\n      this.prefix = value.substring(0, splitIndex) as IconPrefix;\n      this.name = value.substring(splitIndex) as IconName;\n    } else {\n      this.prefix = value.prefix as IconPrefix;\n      this.name = value.iconName as IconName;\n    }\n  }\n\n  /**\n   * Icon getter\n   */\n  public get icon(): string | IconDefinition {\n    return this._icon;\n  }\n\n  /**\n   * Binding to hosts width attribute to use the size input.\n   */\n  @HostBinding('style.width') get width() {\n    return this.size;\n  }\n\n  /**\n   * Binding to the hosts height attribute to use the size input.\n   */\n  @HostBinding('style.height') get height() {\n    return this.size;\n  }\n\n  /**\n   * Getter to the icon definition. If no icon is found it returns the question icon.\n   */\n  public get iconDefinition(): IconDefinition {\n    if (typeof this._icon === 'string') {\n      return faQuestion;\n    }\n    return this._icon as IconDefinition;\n  }\n\n  /**\n   * Style host binding to set the icon size.\n   */\n  public get style() {\n    return {\n      'font-size': this.size,\n      width: this.size,\n      height: this.size,\n      'line-height': this.size,\n    };\n  }\n\n  /**\n   * Private icon variable to use getter and setter for props.\n   */\n  private _icon: string | IconDefinition = '';\n\n  /**\n   * Prefix getter\n   */\n  public prefix: IconPrefix = 'fas';\n\n  /**\n   * Name getter\n   */\n  public name: IconName = 'question';\n\n  /**\n   * Getter to get the icon name in snake case.\n   * For example:\n   *\n   * for `ShoppingCart` this function will return `shopping_cart`\n   */\n  public get snakeCaseName(): IconName {\n    return Utils.snakeCase(this.name) as IconName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    {{ snakeCaseName }}\n  \n  \n    \n  \n  \n    question_mark\n  \n\n    \n\n    \n                \n                    ./icon.component.scss\n                \n                :host {\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  font-size: 0;\n\n  fa-icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ snakeCaseName }}                question_mark  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputAssigneeComponent.html":{"url":"components/InputAssigneeComponent.html","title":"component - InputAssigneeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputAssigneeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/input-assignee/input-assignee.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n            \n                selector\n                app-input-assignee\n            \n\n            \n                styleUrls\n                ./input-assignee.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-assignee.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _assignee\n                            \n                            \n                                    Public\n                                    Optional\n                                assigneeColor\n                            \n                            \n                                    Public\n                                    Readonly\n                                isOpen$\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                overlay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assignee\n                            \n                            \n                                members\n                            \n                            \n                                projectId\n                            \n                            \n                                taskId\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    assignee\n                                \n                                \n                                    members\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assignee\n                    \n                \n                \n                    \n                        Type :     ProjectMember | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n                \n                    \n                        Type :     Map | []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(member: ProjectMember | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    member\n                                    \n                                            ProjectMember | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _assignee\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectMember | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        assigneeColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as any)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('overlay')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        assignee\n                    \n                \n\n                \n                    \n                        getassignee()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:27\n                                \n                            \n\n                \n                    \n                        setassignee(assignee: ProjectMember | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            assignee\n                                                    \n                                                            \n                                                                        ProjectMember | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n\n\n                \n                    \n                        setmembers(members: Map | ProjectMember[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            members\n                                                    \n                                                            \n                                                                        Map | ProjectMember[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:60\n                                \n                            \n\n                \n                    \n                        setisOpen(val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:56\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { UserUtils } from '@dashboard/classes/user.class';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { TaskService } from '@tasks/services/task.service';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport * as Color from 'color';\nimport { BehaviorSubject, filter, fromEvent, take } from 'rxjs';\n\n@Component({\n  selector: 'app-input-assignee',\n  templateUrl: './input-assignee.component.html',\n  styleUrls: ['./input-assignee.component.scss'],\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\nexport class InputAssigneeComponent extends ControlAccessor {\n  @Input() set assignee(assignee: ProjectMember | null) {\n    this._assignee = assignee;\n\n    if (assignee) {\n      this.assigneeColor = UserUtils.getColorById(assignee?.user.id);\n    } else {\n      this.assigneeColor = undefined;\n    }\n  }\n  public get assignee(): ProjectMember | null {\n    return this._assignee;\n  }\n\n  @Input() set members(members: Map | ProjectMember[]) {\n    if (Array.isArray(members)) {\n      for (const member of members) {\n        (member as any).color = UserUtils.getColorById(member.user.id);\n      }\n      this.members$.next(members as any);\n    } else if (members) {\n      const membersArray = [...members.values()];\n      for (const member of membersArray) {\n        (member as any).color = UserUtils.getColorById(member.user.id);\n      }\n      this.members$.next(membersArray as any);\n    }\n  }\n  @Input() taskId?: number;\n  @Input() projectId?: number;\n\n  @ViewChild('overlay') overlay!: ElementRef;\n\n  private _assignee: ProjectMember | null = null;\n\n  public members$ = new BehaviorSubject([] as any);\n  public readonly isOpen$ = new BehaviorSubject(false);\n  public assigneeColor?: Color;\n\n  public set isOpen(val: boolean) {\n    this.isOpen$.next(val);\n  }\n\n  public get isOpen() {\n    return this.isOpen$.value;\n  }\n\n  constructor(public override ngControl: NgControl, private taskService: TaskService) {\n    super(ngControl);\n  }\n\n  public open() {\n    setTimeout(() => {\n      fromEvent(document, 'click')\n        .pipe(\n          take(1),\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\n        )\n        .subscribe(() => this.close());\n      this.isOpen$.next(true);\n    });\n  }\n\n  public close() {\n    this.isOpen$.next(false);\n  }\n\n  public toggle() {\n    if (this.isOpen) {\n      return this.close();\n    }\n    return this.open();\n  }\n\n  public select(member: ProjectMember | null) {\n    if (this.taskId && this.projectId)\n      this.taskService\n        .assign(member?.user.id || null, this.taskId, this.projectId)\n        .subscribe(() => {\n          this.close();\n          location.reload();\n        });\n  }\n}\n\n    \n\n    \n        \n\n  {{ assignee ? assignee.user.name[0] : '+' }}\n\n\n\n  \n    \n      {{ member.user.name[0] }}\n      \n        {{ member.user.name }} {{ member.user.surname }}\n        @{{ member.user.username }}\n      \n    \n    \n    \n      -\n      Remove assignee\n    \n  \n\n    \n\n    \n                \n                    ./input-assignee.component.scss\n                \n                @import '../../../../styles/typography';\n\n.assignee {\n  display: flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-secondary-400);\n  border-radius: 50%;\n  color: var(--color-text);\n  cursor: pointer;\n  transition: background-color 0.4s ease;\n\n  &:not(.add) {\n    @include typo-title;\n\n    background-color: var(--color-primary-500);\n  }\n\n  &:not(.add):hover {\n    background-color: var(--color-secondary-300);\n  }\n}\n\n.members-overlay {\n  padding: 1rem;\n  padding: 0.5rem 0;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.1);\n\n  li {\n    display: flex;\n    align-items: center;\n    padding: 0.75rem 2rem;\n    color: var(--color-text);\n\n    &:not(.line) {\n      cursor: pointer;\n      transition: background-color 0.4s ease;\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n\n    &.line {\n      position: relative;\n\n      &::before {\n        position: absolute;\n        top: calc(50% - 1px);\n        left: 10%;\n        width: 80%;\n        height: 1px;\n        background-color: var(--color-secondary-500);\n        content: '';\n      }\n    }\n\n    &.entry-remove {\n      span {\n        opacity: 0.75;\n      }\n    }\n\n    .avatar {\n      @include typo-title;\n\n      display: flex;\n      width: 36px;\n      height: 36px;\n      align-items: center;\n      justify-content: center;\n      margin-right: 1rem;\n      border-radius: 50%;\n      color: var(--color-text);\n    }\n\n    .avatar-remove {\n      display: flex;\n      width: 36px;\n      height: 36px;\n      align-items: center;\n      justify-content: center;\n      margin-right: 1rem;\n      background-color: var(--color-secondary-400);\n      border-radius: 50%;\n      color: var(--color-text);\n      opacity: 0.5;\n    }\n\n    .details {\n      display: flex;\n      flex-direction: column;\n\n      .username {\n        opacity: 0.5;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ assignee ? assignee.user.name[0] : \\'+\\' }}            {{ member.user.name[0] }}              {{ member.user.name }} {{ member.user.surname }}        @{{ member.user.username }}                        -      Remove assignee      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputAssigneeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/input/input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Default text input component\n\n    \n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input\n            \n\n            \n                styleUrls\n                ./input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                hint\n                            \n                            \n                                placeholder\n                            \n                            \n                                staticLabel\n                            \n                            \n                                type\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, autofillMonitor: AutofillMonitor)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/input/input.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autofillMonitor\n                                                  \n                                                        \n                                                                    AutofillMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:23\n                            \n                        \n                \n                    \n                        Floating label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:38\n                            \n                        \n                \n                    \n                        Hint to display beneath the input to provide additional information of how to use the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:33\n                            \n                        \n                \n                    \n                        Input placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        staticLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:28\n                            \n                        \n                \n                    \n                        Static label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"text\" | \"number\" | \"email\" | \"password\"\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:18\n                            \n                        \n                \n                    \n                        Type of the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:46\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AutofillMonitor } from '@angular/cdk/text-field';\nimport { Component, ElementRef, HostBinding, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ControlAccessor } from '../../classes/control-accessor.class';\n\n/**\n * Default text input component\n */\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent extends ControlAccessor {\n  /**\n   * Type of the input\n   */\n  @Input() type: 'text' | 'number' | 'email' | 'password' = 'text';\n\n  /**\n   * Floating label text to display\n   */\n  @Input() floatingLabel?: string;\n\n  /**\n   * Static label text to display\n   */\n  @Input() staticLabel?: string;\n\n  /**\n   * Input placeholder text\n   */\n  @Input() placeholder: string = '';\n\n  /**\n   * Hint to display beneath the input to provide additional information of how to use the input\n   */\n  @Input() hint?: string;\n\n  /** @ignore */\n  @HostBinding('class.focused') focused = false;\n\n  /** @ignore */\n  @ViewChild('input') input!: ElementRef;\n\n  constructor(public override ngControl: NgControl, private autofillMonitor: AutofillMonitor) {\n    super(ngControl);\n  }\n\n  /** @ignore */\n  onFocus() {\n    this.focused = true;\n  }\n\n  /** @ignore */\n  onBlur() {\n    this.focused = false;\n  }\n}\n\n    \n\n    \n        \n  {{ staticLabel }}\n  \n    \n    \n      {{ floatingLabel }}\n    \n    \n      \n    \n    \n  \n  {{ control?.errors | validationError }}\n\n\n    \n\n    \n                \n                    ./input.component.scss\n                \n                @import '../../../../styles/typography';\n\n.form-field {\n  display: flex;\n  max-width: 400px;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  >label {\n    @include typo-title;\n\n    margin-bottom: 0.4rem;\n    color: var(--color-input-text);\n\n    &.required::after {\n      margin-left: 0.2rem;\n      color: var(--color-input-text);\n      content: '*';\n    }\n  }\n}\n\n$padding-left: 0.5rem;\n$height: 44px;\n\n// New input\n.input-form-field {\n  position: relative;\n  height: $height;\n  margin-bottom: 2rem;\n\n  // Static label for input\n  .static-label {\n    @include typo-title;\n\n    margin-bottom: 0.4rem;\n    color: var(--color-input-text);\n\n    &.required::after {\n      margin-left: 0.2rem;\n      color: var(--color-input-text);\n      content: '*';\n    }\n  }\n\n  // Floating label for input\n  .floating-label {\n    @include typo-body;\n\n    padding: 0 0.4rem;\n    color: var(--color-text);\n    transition: transform 0.2s ease, font-size 0.2s ease;\n  }\n\n  // Fragments\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    z-index: 1;\n    height: 100%;\n    border: 2px solid var(--color-input-border);\n    pointer-events: none;\n  }\n\n  .fragment-left {\n    width: $padding-left;\n    border-right-width: 0;\n    border-bottom-left-radius: var(--border-radius);\n    border-top-left-radius: var(--border-radius);\n  }\n\n  .fragment-middle {\n    display: flex;\n    align-items: center;\n    border-right-width: 0;\n    border-left-width: 0;\n  }\n\n  .fragment-right {\n    flex-grow: 1;\n    border-left-width: 0;\n    border-bottom-right-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n  }\n\n  .input-wrapper {\n    position: relative;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    background-color: var(--color-input-background);\n    border-radius: var(--border-radius);\n    transition: background-color 0.2s ease-in-out;\n\n    &:hover {\n      background-color: var(--color-input-background-hover);\n    }\n  }\n\n  input {\n    @include typo-body;\n\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    padding-left: calc($padding-left + 0.4rem);\n    background-color: var(--color-input-background);\n    background-color: transparent;\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n  }\n}\n\n.has-value,\n:host.focused {\n  .floating-label {\n    font-size: 0.75em;\n    transform: translateY(calc($height / -2));\n  }\n\n  .fragment-middle {\n    border-top-width: 0;\n  }\n}\n\n:host:not(.focused) {\n  input::placeholder {\n    opacity: 0;\n  }\n}\n\n:host.ng-touched.ng-invalid {\n\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    border-color: var(--color-red-500);\n  }\n}\n\n:host.focused .input-form-field {\n\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    border-color: var(--color-primary-500);\n  }\n}\n\n.required {\n\n  .static-label::after,\n  .floating-label::after {\n    margin-left: 0.2rem;\n    color: var(--color-red-500);\n    content: '*';\n  }\n}\n\n.error {\n  position: absolute;\n  margin-top: 0.4rem;\n  color: var(--color-red-500);\n  font-size: 12px;\n  line-height: 0.8rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ staticLabel }}                {{ floatingLabel }}                          {{ control?.errors | validationError }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputDateTimeComponent.html":{"url":"components/InputDateTimeComponent.html","title":"component - InputDateTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputDateTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/input-date-time/input-date-time.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input-date-time\n            \n\n            \n                styleUrls\n                ./input-date-time.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-date-time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changedDate\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                picker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                writeValue\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                placeholder\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        writeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input-date-time')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'app-input-date-time',\n  templateUrl: './input-date-time.component.html',\n  styleUrls: ['./input-date-time.component.scss'],\n})\nexport class InputDateTimeComponent extends ControlAccessor implements OnInit {\n  @Input()\n  placeholder: string = '';\n\n  @Input()\n  floatingLabel?: string;\n\n  public changedDate: FormControl = new FormControl();\n\n  @ViewChild('input-date-time') picker!: ElementRef;\n\n  constructor(public override ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  ngOnInit(): void {\n    this.changedDate.valueChanges.subscribe((date) =>\n      this.control.setValue(this.changeDate(date), { emitEvent: false }),\n    );\n  }\n\n  override writeValue(value: any): void {\n    this.changedDate.setValue(this.changeDate(value));\n  }\n\n  changeDate(date: number) {\n    let sessionDate = dayjs(date);\n\n    return sessionDate.format('YYYY-MM-DD');\n  }\n}\n\n    \n\n    \n        \n   {{floatingLabel}}\n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./input-date-time.component.scss\n                \n                ::ng-deep .mat-focused .mat-form-field-label {\n  /* change color of label */\n  color: white !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /* change color of underline */\n  background-color: var(--color-purple-300) !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /* change color of underline when focused */\n  background-color: white !important;\n}\n\n::ng-deep .mat-form-field-label {\n  /* change color of label */\n  color: white !important;\n}\n\nmat-datepicker-toggle {\n  color: var(--color-purple-300) !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{floatingLabel}}        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputDateTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntegrationEntryComponent.html":{"url":"components/IntegrationEntryComponent.html","title":"component - IntegrationEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntegrationEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/components/integration-entry/integration-entry.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-integration-entry\n            \n\n            \n                styleUrls\n                ./integration-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./integration-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                integration\n                            \n                            \n                                label\n                            \n                            \n                                suspended\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        integration\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        suspended\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        disconnect\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-integration-entry',\n  templateUrl: './integration-entry.component.html',\n  styleUrls: ['./integration-entry.component.scss'],\n})\nexport class IntegrationEntryComponent implements OnInit {\n  @Input() integration?: any;\n  @Input() label!: string;\n  @Input() description?: string | null;\n  @Input() suspended: boolean = false;\n\n  @Output() disconnect = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      {{ label }}\n    \n    \n      {{ description }}\n    \n  \n  \n    Disconnect\n  \n\n\n    \n\n    \n                \n                    ./integration-entry.component.scss\n                \n                .integration-entry {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n  border: 1px solid var(--color-secondary-300);\n  border-radius: var(--border-radius);\n\n  &.suspended {\n    opacity: 0.5;\n  }\n\n  .labels {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    margin-bottom: 0;\n\n    .description {\n      display: block;\n      padding-left: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}              {{ description }}            Disconnect  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntegrationEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntegrationGithubComponent.html":{"url":"components/IntegrationGithubComponent.html","title":"component - IntegrationGithubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntegrationGithubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/integration-github/integration-github.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-integration-github\n            \n\n            \n                styleUrls\n                ./integration-github.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./integration-github.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                repositoryList\n                            \n                            \n                                    Public\n                                repositoryListLoaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRepository\n                            \n                            \n                                connectToGithub\n                            \n                            \n                                loadRepositories\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRepository\n                        \n                    \n                \n            \n            \n                \naddRepository()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectToGithub\n                        \n                    \n                \n            \n            \n                \nconnectToGithub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRepositories\n                        \n                    \n                \n            \n            \n                \nloadRepositories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    repository: new FormControl(null, [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repositoryList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GitRepository[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repositoryListLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { GitRepository } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-integration-github',\n  templateUrl: './integration-github.component.html',\n  styleUrls: ['./integration-github.component.scss'],\n})\nexport class IntegrationGithubComponent implements OnInit {\n  @Input()\n  projectId!: number;\n\n  repositoryList: GitRepository[] = [];\n  public repositoryListLoaded = false;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  public form = new FormGroup({\n    repository: new FormControl(null, [requiredValidator()]),\n  });\n\n  connectToGithub() {\n    this.gitIntegrationService.startGitHubIntegration().subscribe(() => {\n      this.loadRepositories();\n    });\n  }\n\n  loadRepositories() {\n    this.repositoryListLoaded = false;\n    this.gitIntegrationService.getGitHubIntegration().subscribe((integration) => {\n      this.repositoryList = integration.gitRepositories;\n      this.repositoryListLoaded = true;\n    });\n  }\n\n  addRepository() {\n    this.gitIntegrationService\n      .attachGitHubIntegration(this.projectId, this.form.value.repository)\n      .subscribe();\n  }\n\n  ngOnInit() {\n    this.loadRepositories();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Github\n    \n    Connect to Github\n  \n\n  \n\n    \n    \n      \n        {{repository.fullName}}\n        \n      \n      Add repository\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./integration-github.component.scss\n                \n                main {\n  padding: 20px;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n\n  section {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    color: var(--color-text);\n\n    .github {\n      width: 100%;\n    }\n\n    app-button {\n      align-items: center;\n      justify-content: center;\n      margin-bottom: 20px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Github        Connect to Github                          {{repository.fullName}}                    Add repository      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntegrationGithubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page/landing-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/landing-page/landing-page.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss'],\n})\nexport class LandingPageComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LetContext.html":{"url":"interfaces/LetContext.html","title":"interface - LetContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LetContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/let.directive.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ngLet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngLet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ngLet:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface LetContext {\n  ngLet: T;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class LetDirective {\n  private _context: LetContext = { ngLet: null };\n\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>) {\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\n  }\n\n  @Input()\n  set ngLet(value: T) {\n    this._context.ngLet = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LetDirective.html":{"url":"directives/LetDirective.html","title":"directive - LetDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/let.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngLet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngLet\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngLet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/let.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _viewContainer\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _templateRef\n                                                  \n                                                        \n                                                                        TemplateRef>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/directives/let.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LetContext\n\n                    \n                \n                \n                    \n                        Default value : { ngLet: null }\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/directives/let.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n\n\n                \n                    \n                        setngLet(value: T)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/directives/let.directive.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface LetContext {\n  ngLet: T;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class LetDirective {\n  private _context: LetContext = { ngLet: null };\n\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>) {\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\n  }\n\n  @Input()\n  set ngLet(value: T) {\n    this._context.ngLet = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListGroupComponent.html":{"url":"components/ListGroupComponent.html","title":"component - ListGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/components/list-group/list-group.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-group\n            \n\n            \n                styleUrls\n                ./list-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/components/list-group/list-group.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/list-group/list-group.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/components/list-group/list-group.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-group',\n  templateUrl: './list-group.component.html',\n  styleUrls: ['./list-group.component.scss'],\n})\nexport class ListGroupComponent implements OnInit {\n  @Input() label!: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  {{ label }}\n\n\n    \n\n    \n                \n                    ./list-group.component.scss\n                \n                h4 {\n  display: block;\n  width: 100%;\n  padding: 5px 0;\n  border-bottom: 1px solid var(--color-secondary-300);\n  color: var(--color-secondary-300);\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoggedInUsersGuard.html":{"url":"guards/LoggedInUsersGuard.html","title":"guard - LoggedInUsersGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoggedInUsersGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guard/logged-in-users.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guard/logged-in-users.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/guard/logged-in-users.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LoggedInUsersGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/auth/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/login/login.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                error\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                loginSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/login/login.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n    password: new FormControl('', [requiredValidator()], []),\n    remember: new FormControl('', [], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:27\n                        \n                    \n\n            \n                \n                    Form group for login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        loginSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '@auth/services/user.service';\nimport { catchError, EMPTY, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n  ) {}\n\n  private loginSubscription?: Subscription;\n  public error?: string;\n\n  /**\n   * Form group for login.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n    password: new FormControl('', [requiredValidator()], []),\n    remember: new FormControl('', [], []),\n  });\n\n  ngOnInit() {\n    this.userService.getMyself().subscribe(() => {\n      localStorage.setItem('logged', 'true');\n      this.router.navigate(['/']);\n    });\n  }\n\n  login() {\n    if (this.loginSubscription && !this.loginSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.loginSubscription = this.authService\n        .login(this.form.value)\n        .pipe(\n          catchError((e) => {\n            this.handleError(e);\n            return EMPTY;\n          }),\n        )\n        .subscribe((response) => {\n          if (response.deleted) {\n            this.router.navigate(['/auth/restore-account']);\n          } else {\n            localStorage.setItem('logged', 'true');\n            this.router.navigate(['/']);\n          }\n        });\n    }\n  }\n\n  handleError(error: any) {\n    switch (error.status) {\n      case 403:\n        this.error = $localize`User is already logged`;\n        break;\n      case 404:\n        this.error = $localize`Wrong username or password`;\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Login to system\n          This is a secure site. Please enter your login information to enter or click here to register.\n        \n\n        \n          {{ error }}\n        \n\n        \n\n        \n\n        Forgot your password? Reset password.\n\n        \n          Remember me\n        \n\n        Log in\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .remember-me {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n\n        a {\n          color: var(--color-link);\n          cursor: pointer;\n          transition: color 0.2s ease;\n\n          &:hover {\n            color: var(--color-link-hover);\n          }\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Login to system          This is a secure site. Please enter your login information to enter or click here to register.                          {{ error }}                                Forgot your password? Reset password.                  Remember me                Log in                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/_main/_main.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Main dependency module with all universal components and modules declarations\nThis module is required for application to run properly\n```js\nimport { MainModule } from '@app/main/main.module';(@)NgModule({\n  imports: [ ..., MainModule ],\n  ...\n})\nexport class ExampleModule {}\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injector, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CardComponent } from './components/card/card.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { DialogOutletComponent } from './components/dialog-outlet/dialog-outlet.component';\nimport { FiltersComponent } from './components/filters/filters.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { InputDateTimeComponent } from './components/input-date-time/input-date-time.component';\nimport { InputComponent } from './components/input/input.component';\nimport { MainViewComponent } from './components/main-view/main-view.component';\nimport { NavElementWorkspaceComponent } from './components/nav-element-workspace/nav-element-workspace.component';\nimport { NavElementComponent } from './components/nav-element/nav-element.component';\nimport { OptionComponent } from './components/option/option.component';\nimport { SelectComponent } from './components/select/select.component';\nimport { SidebarNavigationComponent } from './components/sidebar-navigation/sidebar-navigation.component';\nimport { SnackbarOutletComponent } from './components/snackbar-outlet/snackbar-outlet.component';\nimport { SnackbarComponent } from './components/snackbar/snackbar.component';\nimport { TextareaComponent } from './components/textarea/textarea.component';\nimport { UpperNavigationComponent } from './components/upper-navigation/upper-navigation.component';\nimport { AlertDialog } from './dialogs/alert/alert.dialog';\nimport { ClickStopPropagationDirective } from './directives/click-stop-propagation.directive';\nimport { FocusInitialDirective } from './directives/focus-initial.directive';\nimport { LetDirective } from './directives/let.directive';\nimport { ViewContainerDirective } from './directives/view-container.directive';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport { MockPage } from './pages/mock/mock.page';\nimport { ValidationErrorPipe } from './pipes/validation-error/validation-error.pipe';\nimport { ApiService } from './services/api.service';\nimport { DialogService } from './services/dialog.service';\n\n/**\n * Main module configuration object\n */\nconst ngModuleConfig = {\n  imports: [\n    /*=============================================\n    =             Local dependencies              =\n    =============================================*/\n    CommonModule,\n    RouterModule,\n    ObserversModule,\n  ],\n  importExports: [\n    /*=============================================\n      =                Dependencies                 =\n      =============================================*/\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    DragDropModule,\n    PlatformModule,\n    OverlayModule,\n\n    /*=============================================\n      =              Material modules               =\n      =============================================*/\n    MatDialogModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n\n    /*=============================================\n      =              External modules               =\n      =============================================*/\n    FontAwesomeModule,\n  ],\n  declarations: [\n    /*=============================================\n    =         Local custom components             =\n    =============================================*/\n  ],\n  exportDeclarations: [\n    /*=============================================\n    =         Exported custom components          =\n    =============================================*/\n    InputComponent,\n    ButtonComponent,\n    ValidationErrorPipe,\n    AlertDialog,\n    IconComponent,\n    FocusInitialDirective,\n    SidebarNavigationComponent,\n    NavElementComponent,\n    NavElementWorkspaceComponent,\n    UpperNavigationComponent,\n    SelectComponent,\n    OptionComponent,\n    MainViewComponent,\n    TextareaComponent,\n    CheckboxComponent,\n    CardComponent,\n    ClickStopPropagationDirective,\n    InputDateTimeComponent,\n    LetDirective,\n    FiltersComponent,\n    SnackbarComponent,\n    SnackbarOutletComponent,\n    MockPage,\n    DialogOutletComponent,\n    ViewContainerDirective,\n  ],\n  providers: [\n    DialogService,\n    ApiService,\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    MatCheckboxModule,\n    MatDatepickerModule,\n  ],\n};\n\n/**\n * Main dependency module with all universal components and modules declarations\n * This module is required for application to run properly\n * @example\n * ```js\n * import { MainModule } from '@app/main/main.module';\n *\n * (@)NgModule({\n *   imports: [ ..., MainModule ],\n *   ...\n * })\n * export class ExampleModule {}\n * ```\n */\n@NgModule({\n  imports: [...ngModuleConfig.imports, ...ngModuleConfig.importExports],\n  declarations: [...ngModuleConfig.declarations, ...ngModuleConfig.exportDeclarations],\n  exports: [...ngModuleConfig.importExports, ...ngModuleConfig.exportDeclarations],\n  providers: [...ngModuleConfig.providers],\n})\nexport class MainModule {\n  static injector: Injector;\n\n  constructor(injector: Injector) {\n    MainModule.injector = injector;\n    (window as any).injector = injector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainViewComponent.html":{"url":"components/MainViewComponent.html","title":"component - MainViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/main-view/main-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-view\n            \n\n            \n                styleUrls\n                ./main-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                DialogOutlet\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/main-view/main-view.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/main-view/main-view.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        DialogOutlet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DialogOutlet\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/main-view/main-view.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.version\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/main-view/main-view.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DialogOutlet } from '@main/services/dialog.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-main-view',\n  templateUrl: './main-view.component.html',\n  styleUrls: ['./main-view.component.scss'],\n})\nexport class MainViewComponent implements OnInit {\n  public version = environment.version;\n\n  public DialogOutlet = DialogOutlet;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  \n\n  \n\n  \n    \n      \n    \n\n    \n  \n\n\n{{ version }}\n    \n\n    \n                \n                    ./main-view.component.scss\n                \n                :host {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: var(--color-secondary-700);\n}\n\nsection {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow-x: hidden;\n\n  .content {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: row;\n\n    main {\n      width: 100%;\n      height: 100%;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n  }\n}\n\n.version {\n  position: absolute;\n  bottom: 1rem;\n  left: 1em;\n  color: var(--color-text);\n  opacity: 0.5;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ version }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Marked.html":{"url":"classes/Marked.html","title":"class - Marked","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Marked\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/libs/marked/marked.lib.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _initialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getRenderer\n                            \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/libs/marked/marked.lib.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getRenderer\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRenderer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/marked/marked.lib.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/marked/marked.lib.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { marked, Renderer } from 'marked';\nimport { emoji } from './extensions/marked-emoji-extension';\nimport { linkOverride } from './overrides/link.override';\n\nexport class Marked {\n  private static _initialized = false;\n\n  public static init() {\n    if (Marked._initialized) return;\n\n    marked.use({\n      extensions: [emoji],\n    });\n\n    Marked._initialized = true;\n  }\n\n  public static getRenderer() {\n    let renderer = new Renderer();\n\n    renderer = linkOverride(renderer);\n\n    return renderer;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberListComponent.html":{"url":"components/MemberListComponent.html","title":"component - MemberListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/member-list/member-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-list\n            \n\n            \n                styleUrls\n                ./member-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./member-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                memberList$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteMember\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addedMembers\n                            \n                            \n                                memberList\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(memberService: MemberService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addedMembers\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        memberList\n                    \n                \n                \n                    \n                        Type :     ProjectMember[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"create\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'edit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMember\n                        \n                    \n                \n            \n            \n                \ndeleteMember(id: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        memberList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.scss'],\n})\nexport class MemberListComponent implements OnInit {\n  public projectId!: number;\n\n  public memberList$!: Observable;\n\n  @Input()\n  addedMembers?: string[];\n\n  @Input()\n  type: 'create' | 'edit' = 'edit';\n\n  @Input()\n  memberList!: ProjectMember[];\n\n  constructor(private memberService: MemberService, private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n    this.projectId = projectId;\n\n    this.memberList$ = this.memberService.list(projectId);\n  }\n\n  deleteMember(id: number[]) {\n    this.memberService.remove(this.projectId, id).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  \n  \n    Username\n     {{ row.user.username }} \n  \n\n  \n  \n    Email\n     {{ row.user.email }} \n  \n\n  \n  \n    Name\n     {{ row.user.name }} \n  \n\n  \n  \n    Surname\n     {{ row.user.surname }} \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Delete member\n        \n      \n    \n  \n\n  \n  \n\n\n\n\n  \n  \n    Username or Email\n     {{ row }} \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./member-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Username     {{ row.user.username }}           Email     {{ row.user.email }}           Name     {{ row.user.name }}           Surname     {{ row.user.surname }}                                                           Delete member                                Username or Email     {{ row }}       '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemberListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberService.html":{"url":"injectables/MemberService.html","title":"injectable - MemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/member.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                leave\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                map\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/member.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(emails: string[], projects: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:49\n                \n            \n\n\n            \n                \n                    Adds members to projects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    emails\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        emails of people to add\n\n                                    \n                                \n                                \n                                    projects\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        leave\n                        \n                    \n                \n            \n            \n                \n                    \n                    leave(projectId: number, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:39\n                \n            \n\n\n            \n                \n                    Let member leave project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the member who will leave the project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:19\n                \n            \n\n\n            \n                \n                    Lists members in given project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        map\n                        \n                    \n                \n            \n            \n                \n                    \n                    map(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:61\n                \n            \n\n\n            \n                \n                    Creates members map from given project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(projectId: number, id: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:29\n                \n            \n\n\n            \n                \n                    Removes members from project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        list of member ids to remove from project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { map, Observable } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemberService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Lists members in given project\n   * @param projectId project which are members from\n   * @returns Request observable, which completes when request is finished\n   */\n  public list(projectId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/member`);\n  }\n\n  /**\n   * Removes members from project\n   * @param projectId project which are members from\n   * @param id list of member ids to remove from project\n   * @returns Request observable, which completes when request is finished\n   */\n  public remove(projectId: number, id: number[]): Observable {\n    return this.apiService.put(`/project/${projectId}/member`, { body: id });\n  }\n\n  /**\n   * Let member leave project.\n   * @param projectId project which are members from\n   * @param id id of the member who will leave the project\n   * @returns Request observable, which completes when request is finished\n   */\n  public leave(projectId: number, id: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/member`, { body: id });\n  }\n\n  /**\n   * Adds members to projects.\n   * @param emails emails of people to add\n   * @param projectList projects where people will be added\n   * @returns Request observable, which completes when request is finished\n   */\n  public add(\n    emails: string[],\n    projects: number[],\n  ): Observable {\n    return this.apiService.post(`/project/member`, { body: { emails, projects } });\n  }\n\n  /**\n   * Creates members map from given project\n   * @param projectId project which are members from\n   * @returns Request observable, which completes when request is finished\n   */\n  public map(projectId: number): Observable> {\n    return this.list(projectId).pipe(\n      map((members) =>\n        members.reduce((acc: Map, member: ProjectMember) => {\n          acc.set(member.user.id, member);\n          return acc;\n        }, new Map()),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesModule.html":{"url":"modules/MessagesModule.html","title":"module - MessagesModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_imports\n\n\n\n\nMessagesRoutingModule\n\nMessagesRoutingModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nMessagesRoutingModule->MessagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/messages/messages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MessagesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessagesRoutingModule } from './messages.routing';\n\n@NgModule({\n  imports: [CommonModule, MessagesRoutingModule],\n  declarations: [],\n})\nexport class MessagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesRoutingModule.html":{"url":"modules/MessagesRoutingModule.html","title":"module - MessagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/messages/messages.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\n\n/**\n * Messages routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/messages.svg',\n    },\n  },\n];\n\n/**\n * Messages routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MessagesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MockPage.html":{"url":"components/MockPage.html","title":"component - MockPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MockPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/pages/mock/mock.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mock\n            \n\n            \n                styleUrls\n                ./mock.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./mock.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                image\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/pages/mock/mock.page.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/pages/mock/mock.page.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/pages/mock/mock.page.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-mock',\n  templateUrl: './mock.page.html',\n  styleUrls: ['./mock.page.scss'],\n})\nexport class MockPage implements OnInit {\n  constructor(private activatedRoute: ActivatedRoute) {}\n\n  public image: string = '';\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(({ image }) => {\n      this.image = image;\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./mock.page.scss\n                \n                img {\n  width: 100%;\n  border: 4px solid #f39c12;\n}\n\n:host {\n  position: relative;\n  display: block;\n  text-align: center;\n\n  &::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    display: block;\n    padding: 1rem 4rem;\n    background-color: #f39c12;\n    border-radius: var(--border-radius);\n    color: #222;\n    content: 'Work in progress';\n    font-weight: bold;\n    text-align: center;\n    transform: translate(-50%, -50%);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'MockPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModifyUser.html":{"url":"interfaces/ModifyUser.html","title":"interface - ModifyUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModifyUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Monaco.html":{"url":"classes/Monaco.html","title":"class - Monaco","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Monaco\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/libs/monaco/monaco.lib.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _initialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                            \n                                    Private\n                                    Static\n                                loadPlugins\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    initialized\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        _initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/libs/monaco/monaco.lib.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/monaco/monaco.lib.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        loadPlugins\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadPlugins()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/monaco/monaco.lib.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        initialized\n                    \n                \n\n                \n                    \n                        getinitialized()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/libs/monaco/monaco.lib.ts:7\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { SelectionEditPlugin } from './plugins/selection-edit.plugin';\nimport { editor } from 'monaco-editor';\n\nexport class Monaco {\n  private static _initialized = false;\n\n  public static get initialized() {\n    return this._initialized;\n  }\n\n  public static init() {\n    if (Monaco._initialized) return;\n\n    Monaco.loadPlugins();\n  }\n\n  private static loadPlugins() {\n    const dummy = document.createElement('div');\n    const instance = editor.create(dummy) as any;\n    const prototype = instance.__proto__;\n\n    SelectionEditPlugin.init(prototype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MonacoExtended.html":{"url":"classes/MonacoExtended.html","title":"class - MonacoExtended","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MonacoExtended\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/monaco-extended.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                executeEdits\n                            \n                            \n                                    Static\n                                insertTextAfterSelection\n                            \n                            \n                                    Static\n                                insertTextAt\n                            \n                            \n                                    Static\n                                insertTextBeforeAndAfterEachSelection\n                            \n                            \n                                    Static\n                                insertTextBeforeSelection\n                            \n                            \n                                    Static\n                                removeTextAt\n                            \n                            \n                                    Static\n                                removeTextBeforeAndAfterEachSelection\n                            \n                            \n                                    Static\n                                selectionEndsWith\n                            \n                            \n                                    Static\n                                selectionStartWith\n                            \n                            \n                                    Static\n                                toggleEndAndStartOfEachSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        executeEdits\n                        \n                    \n                \n            \n            \n                \n                    \n                    executeEdits(editor: MonacoEditor, edits: EditOperation[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    edits\n                                    \n                                            EditOperation[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        insertTextAfterSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertTextAfterSelection(editor: MonacoEditor, selection: Selection, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selection\n                                    \n                                                Selection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        insertTextAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertTextAt(editor: MonacoEditor, lineNumber: number, column: number, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lineNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        insertTextBeforeAndAfterEachSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertTextBeforeAndAfterEachSelection(editor: MonacoEditor, selections: Selection[], beforeSelectionText: string, afterSelectionText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    selections\n                                    \n                                            Selection[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    beforeSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    afterSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        insertTextBeforeSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertTextBeforeSelection(editor: MonacoEditor, selection: Selection, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selection\n                                    \n                                                Selection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        removeTextAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTextAt(editor: MonacoEditor, startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startLineNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startColumn\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endLineNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endColumn\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        removeTextBeforeAndAfterEachSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTextBeforeAndAfterEachSelection(editor: MonacoEditor, selections: Selection[], beforeSelectionText: string, afterSelectionText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    selections\n                                    \n                                            Selection[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    beforeSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    afterSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectionEndsWith\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectionEndsWith(editor: MonacoEditor, selection: Selection, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selection\n                                    \n                                                Selection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectionStartWith\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectionStartWith(editor: MonacoEditor, selection: Selection, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selection\n                                    \n                                                Selection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        toggleEndAndStartOfEachSelection\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleEndAndStartOfEachSelection(editor: MonacoEditor, beforeSelectionText: string, afterSelectionText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/monaco-extended.class.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    editor\n                                    \n                                                MonacoEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    beforeSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    afterSelectionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as monaco from 'monaco-editor';\n\ntype MonacoEditor = monaco.editor.IStandaloneCodeEditor;\ntype Selection = monaco.Selection;\ntype EditOperation = monaco.editor.IIdentifiedSingleEditOperation;\n\ninterface SelectionEditOperation {\n  before?: string;\n  after?: string;\n  beforeEachLine?: string;\n  afterEachLine?: string;\n}\n\nexport class MonacoExtended {\n  public static insertTextAt(\n    editor: MonacoEditor,\n    lineNumber: number,\n    column: number,\n    text: string,\n  ) {\n    editor.executeEdits('', [\n      {\n        range: {\n          startLineNumber: lineNumber,\n          startColumn: column,\n          endLineNumber: lineNumber,\n          endColumn: column,\n        },\n        text,\n      },\n    ]);\n  }\n\n  public static executeEdits(editor: MonacoEditor, edits: EditOperation[]) {\n    for (const edit of edits) {\n      if (edit.range?.startColumn && !edit.range?.endColumn)\n        (edit.range as any).endColumn = edit.range.startColumn;\n      if (edit.range?.startLineNumber && !edit.range?.endLineNumber)\n        (edit.range as any).endLineNumber = edit.range.startLineNumber;\n    }\n    return editor.executeEdits('', edits);\n  }\n\n  public static removeTextAt(\n    editor: MonacoEditor,\n    startLineNumber: number,\n    startColumn: number,\n    endLineNumber: number,\n    endColumn: number,\n  ) {\n    editor.executeEdits('', [\n      {\n        range: {\n          startLineNumber,\n          startColumn,\n          endLineNumber,\n          endColumn,\n        },\n        text: null,\n      },\n    ]);\n  }\n\n  public static insertTextBeforeSelection(\n    editor: MonacoEditor,\n    selection: Selection,\n    text: string,\n  ) {\n    MonacoExtended.insertTextAt(editor, selection.startLineNumber, selection.startColumn, text);\n  }\n\n  public static insertTextAfterSelection(editor: MonacoEditor, selection: Selection, text: string) {\n    MonacoExtended.insertTextAt(editor, selection.endLineNumber, selection.endColumn, text);\n  }\n\n  public static insertTextBeforeAndAfterEachSelection(\n    editor: MonacoEditor,\n    selections: Selection[],\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const edits = ([] as any[]).concat(\n      ...selections.map((selection) => {\n        return [\n          {\n            range: {\n              startLineNumber: selection.startLineNumber,\n              startColumn: selection.startColumn,\n              endLineNumber: selection.startLineNumber,\n              endColumn: selection.startColumn,\n            },\n            text: beforeSelectionText,\n          },\n          {\n            range: {\n              startLineNumber: selection.endLineNumber,\n              startColumn: selection.endColumn,\n              endLineNumber: selection.endLineNumber,\n              endColumn: selection.endColumn,\n            },\n            text: afterSelectionText,\n          },\n        ];\n      }),\n    );\n\n    editor.executeEdits('', edits);\n  }\n\n  public static removeTextBeforeAndAfterEachSelection(\n    editor: MonacoEditor,\n    selections: Selection[],\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const model = editor.getModel();\n    const afterSelectionTextLinesCount = (afterSelectionText.match(/\\n/g) || [])?.length;\n    const edits: any[] = [];\n\n    if (!model) return;\n\n    for (const selection of selections) {\n      if (\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText)\n      ) {\n        edits.push({\n          range: {\n            startLineNumber: selection.startLineNumber,\n            startColumn: selection.startColumn,\n            endLineNumber:\n              selection.startLineNumber + (beforeSelectionText.match(/\\n/g) || [])?.length,\n            endColumn: beforeSelectionText.replace(/.*\\n/g, '').length + 1,\n          },\n          text: '',\n        });\n        edits.push({\n          range: {\n            startLineNumber: selection.endLineNumber - afterSelectionTextLinesCount,\n            startColumn:\n              model.getLineContent(selection.endLineNumber - afterSelectionTextLinesCount).length -\n              (afterSelectionText.replace(/\\n[^]*$/g, '').length - 1),\n            endLineNumber: selection.endLineNumber,\n            endColumn: selection.endColumn,\n          },\n          text: '',\n        });\n      }\n    }\n\n    editor.executeEdits('', edits);\n  }\n\n  public static selectionStartWith(editor: MonacoEditor, selection: Selection, text: string) {\n    const selectedValue = editor\n      .getModel()\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\n    return selectedValue?.startsWith(text);\n  }\n\n  public static selectionEndsWith(editor: MonacoEditor, selection: Selection, text: string) {\n    const selectedValue = editor\n      .getModel()\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\n    return selectedValue?.endsWith(text);\n  }\n\n  public static toggleEndAndStartOfEachSelection(\n    editor: MonacoEditor,\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const selections = editor.getSelections();\n    if (!selections) return;\n\n    const shouldDelete = selections.some(\n      (selection) =>\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText),\n    );\n\n    const mode: 'delete' | 'add' = shouldDelete ? 'delete' : 'add';\n\n    if (mode === 'delete') {\n      MonacoExtended.removeTextBeforeAndAfterEachSelection(\n        editor,\n        selections,\n        beforeSelectionText,\n        afterSelectionText,\n      );\n    } else {\n      MonacoExtended.insertTextBeforeAndAfterEachSelection(\n        editor,\n        selections,\n        beforeSelectionText,\n        afterSelectionText,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavElementComponent.html":{"url":"components/NavElementComponent.html","title":"component - NavElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/nav-element/nav-element.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-element\n            \n\n            \n                styleUrls\n                ./nav-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                    Optional\n                                listElement\n                            \n                            \n                                    Public\n                                showArrow$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeNavElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                openNavElement\n                            \n                            \n                                    Public\n                                toggleNavElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routerLink\n                            \n                            \n                                showOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:24\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routerLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showOptions\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    openNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('elementList')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showArrow$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-nav-element',\n  templateUrl: './nav-element.component.html',\n  styleUrls: ['./nav-element.component.scss'],\n})\nexport class NavElementComponent implements AfterViewInit {\n  @Input()\n  public routerLink?: string;\n\n  @Input()\n  public showOptions?: boolean;\n\n  public active: boolean = false;\n\n  public showArrow$: BehaviorSubject = new BehaviorSubject(false);\n\n  @ViewChild('elementList')\n  listElement?: ElementRef;\n\n  faAngleDown = faAngleDown;\n\n  constructor() {}\n\n  public openNavElement() {\n    this.active = true;\n  }\n  public closeNavElement() {\n    this.active = false;\n  }\n  public toggleNavElement() {\n    if (!this.active) {\n      this.openNavElement();\n    } else {\n      this.closeNavElement();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n    \n      \n    \n    \n      \n        more_vert\n      \n      \n        \n      \n    \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./nav-element.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n}\n\nsection {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  height: 46px;\n  align-items: center;\n  justify-content: space-between;\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: color 0.2s ease-in-out;\n\n  .element {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding: 0 0 0 20px;\n  }\n\n  .icons {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 0 5px 0 0;\n    }\n\n    .open-below {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: center;\n      padding: 0 5px;\n\n      // padding: 0 5px;\n\n      app-icon {\n        display: flex;\n        justify-content: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n\n    .options button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  &:hover {\n    color: var(--color-text);\n  }\n}\n\n.list {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    justify-content: center;\n    background-color: var(--color-secondary-600);\n  }\n}\n\n.hidden {\n  visibility: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              more_vert                                  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavElementWorkspaceComponent.html":{"url":"components/NavElementWorkspaceComponent.html","title":"component - NavElementWorkspaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavElementWorkspaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-element-workspace\n            \n\n            \n                styleUrls\n                ./nav-element-workspace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-element-workspace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeWorkspace\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                    Optional\n                                listElement\n                            \n                            \n                                    Public\n                                showArrow$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeWorkspace\n                            \n                            \n                                createProject\n                            \n                            \n                                deleteProject\n                            \n                            \n                                deleteWorkspace\n                            \n                            \n                                editProject\n                            \n                            \n                                editWorkspace\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                openWithLocalVSCode\n                            \n                            \n                                openWithLocalVSCodeInsiders\n                            \n                            \n                                openWithVSCode\n                            \n                            \n                                    Public\n                                openWorkspace\n                            \n                            \n                                routeToProject\n                            \n                            \n                                routeToWorkspace\n                            \n                            \n                                    Public\n                                toggleWorkspace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routerLink\n                            \n                            \n                                workspace\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, dialogService: DialogService, projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routerLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        workspace\n                    \n                \n                \n                    \n                        Type :         Workspace\n\n                    \n                \n                \n                    \n                        Default value : { id: -1 } as unknown as Workspace\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProject\n                        \n                    \n                \n            \n            \n                \ncreateProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteWorkspace\n                        \n                    \n                \n            \n            \n                \ndeleteWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProject\n                        \n                    \n                \n            \n            \n                \neditProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editWorkspace\n                        \n                    \n                \n            \n            \n                \neditWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithLocalVSCode\n                        \n                    \n                \n            \n            \n                \nopenWithLocalVSCode(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithLocalVSCodeInsiders\n                        \n                    \n                \n            \n            \n                \nopenWithLocalVSCodeInsiders(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithVSCode\n                        \n                    \n                \n            \n            \n                \nopenWithVSCode(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    openWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeToProject\n                        \n                    \n                \n            \n            \n                \nrouteToProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeToWorkspace\n                        \n                    \n                \n            \n            \n                \nrouteToWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeWorkspace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('elementList')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showArrow$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { BehaviorSubject } from 'rxjs';\nimport { Project } from 'src/app/dashboard/interfaces/project.interface';\nimport { Workspace } from 'src/app/dashboard/interfaces/workspace.interface';\nimport { ProjectService } from 'src/app/dashboard/services/project.service';\nimport { WorkspaceService } from 'src/app/dashboard/services/workspace.service';\nimport { DialogService } from '../../services/dialog.service';\n\n@Component({\n  selector: 'app-nav-element-workspace',\n  templateUrl: './nav-element-workspace.component.html',\n  styleUrls: ['./nav-element-workspace.component.scss'],\n})\nexport class NavElementWorkspaceComponent implements AfterViewInit {\n  @Input()\n  public routerLink?: string;\n\n  @Input()\n  public workspace: Workspace = { id: -1 } as unknown as Workspace;\n\n  faAngleDown = faAngleDown;\n  public activeWorkspace: boolean = false;\n\n  public showArrow$: BehaviorSubject = new BehaviorSubject(false);\n\n  @ViewChild('elementList')\n  listElement?: ElementRef;\n\n  constructor(\n    private workspaceService: WorkspaceService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private router: Router,\n  ) {}\n\n  public openWorkspace() {\n    this.activeWorkspace = true;\n  }\n  public closeWorkspace() {\n    this.activeWorkspace = false;\n  }\n  public toggleWorkspace() {\n    if (!this.activeWorkspace) {\n      this.openWorkspace();\n    } else {\n      this.closeWorkspace();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\n    });\n  }\n\n  routeToWorkspace() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id]));\n  }\n\n  routeToProject(project: Project) {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, project.id]));\n  }\n\n  createProject() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, 'create']));\n  }\n\n  editProject(project: Project) {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, project.id, 'edit']));\n  }\n\n  deleteProject(project: Project) {\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\n      this.projectService.delete(project.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n\n  editWorkspace() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, 'edit']));\n  }\n\n  deleteWorkspace() {\n    this.dialogService.confirmWorkspaceDelete(this.workspace).subscribe(() => {\n      this.workspaceService.delete(this.workspace.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n\n  openWithVSCode(project: Project) {\n    window.open(`https://github.dev/${project.gitHubIntegration}`, '_blank');\n  }\n\n  openWithLocalVSCode(project: Project) {\n    window.open(\n      `vscode://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\n      '_blank',\n    );\n  }\n\n  openWithLocalVSCodeInsiders(project: Project) {\n    window.open(\n      `vscode-insiders://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\n      '_blank',\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n      \n      \n        \n          more_vert\n        \n        \n          \n            Create project\n          \n          \n            Manage projects\n          \n          \n            Edit workspace\n          \n          \n            Delete workspace\n          \n        \n      \n    \n  \n  \n    \n      \n        {{projectWithPriv.project.name}}\n        \n          \n            \n              more_vert\n            \n            \n              \n                Open in github.dev\n              \n              \n                Open in Visual Studio Code\n              \n              \n                Open in Visual Studio Code Insiders\n              \n              \n                Edit project\n              \n              \n                Delete project\n              \n            \n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./nav-element-workspace.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  @include typo-title;\n\n  background-color: var(--color-secondary-600);\n}\n\nli {\n  background-color: var(--color-secondary-700);\n}\n\n.workspace {\n  display: flex;\n  width: 100%;\n  height: 46px;\n  justify-content: space-between;\n  border-radius: var(--border-radius);\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n\n  .element {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding: 0 0 0 30px;\n  }\n\n  .icons {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 0 5px 0 0;\n    }\n\n    .open-below {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: center;\n      padding: 0 5px;\n\n      app-icon {\n        display: flex;\n        justify-content: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n\n    .options button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  &:hover {\n    background-color: var(--color-secondary-500);\n  }\n}\n\n.project {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    justify-content: center;\n    background-color: var(--color-secondary-600);\n    color: var(--color-neutral-300);\n    transition: background-color 0.2s ease-in-out;\n\n    li {\n      display: flex;\n      width: 100%;\n      height: 46px;\n      align-items: center;\n      justify-content: space-between;\n      border-radius: var(--border-radius);\n\n      .sub-element {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        align-items: center;\n        padding: 0 0 0 40px;\n      }\n\n      .icons {\n        display: flex;\n        height: 100%;\n        align-items: center;\n        padding: 0 5px 0 0;\n      }\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n  }\n}\n\nbutton {\n  display: flex;\n  align-items: center;\n}\n\n.hidden {\n  visibility: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                more_vert                                      Create project                                Manage projects                                Edit workspace                                Delete workspace                                                  {{projectWithPriv.project.name}}                                            more_vert                                                      Open in github.dev                                            Open in Visual Studio Code                                            Open in Visual Studio Code Insiders                                            Edit project                                            Delete project                                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavElementWorkspaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionComponent.html":{"url":"components/OptionComponent.html","title":"component - OptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/option/option.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-option\n            \n\n            \n                styleUrls\n                ./option.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faQuestion\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    viewValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/option/option.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/option/option.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/option/option.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faQuestion\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/option/option.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        viewValue\n                    \n                \n\n                \n                    \n                        getviewValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/option/option.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input } from '@angular/core';\nimport { faQuestion, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-option',\n  templateUrl: './option.component.html',\n  styleUrls: ['./option.component.scss'],\n})\nexport class OptionComponent {\n  @Input() value!: any;\n  @Input() icon?: string | IconDefinition;\n\n  faQuestion = faQuestion;\n\n  public get viewValue(): string {\n    return this.ref.nativeElement.innerText;\n  }\n\n  constructor(private ref: ElementRef) {}\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./option.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'OptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PersistentMap.html":{"url":"classes/PersistentMap.html","title":"class - PersistentMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PersistentMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/persistent-map.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _persistentKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                clear\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    Private\n                                saveState\n                            \n                            \n                                    \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PersistentMapOptions, entries?:  | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/persistent-map.class.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PersistentMapOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                     | null\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _persistentKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/persistent-map.class.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: K)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        set\n                        \n                    \n                \n            \n            \n                \n                    \n                    set(key: K, value: V)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface PersistentMapOptions {\n  persistentKey: string;\n}\n\nexport class PersistentMap extends Map {\n  override clear(): void {\n    localStorage.removeItem(this._persistentKey);\n    super.clear();\n  }\n\n  override delete(key: K): boolean {\n    const temp = super.delete(key);\n    this.saveState();\n    return temp;\n  }\n\n  override set(key: K, value: V): this {\n    const temp = super.set(key, value);\n    this.saveState();\n    return temp;\n  }\n\n  private saveState() {\n    localStorage.setItem(this._persistentKey, JSON.stringify([...this.entries()]));\n  }\n\n  private _persistentKey = '';\n\n  constructor(\n    { persistentKey }: PersistentMapOptions,\n    entries?: readonly (readonly [K, V])[] | null,\n  ) {\n    super(\n      persistentKey && localStorage.getItem(persistentKey)\n        ? JSON.parse(localStorage.getItem(persistentKey)!)\n        : entries,\n    );\n\n    if (!persistentKey) {\n      console.error('PersistentMap need persistentKey option');\n      return;\n    }\n\n    this._persistentKey = persistentKey;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersistentMapOptions.html":{"url":"interfaces/PersistentMapOptions.html","title":"interface - PersistentMapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersistentMapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/persistent-map.class.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            persistentKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        persistentKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        persistentKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersistentMapOptions {\n  persistentKey: string;\n}\n\nexport class PersistentMap extends Map {\n  override clear(): void {\n    localStorage.removeItem(this._persistentKey);\n    super.clear();\n  }\n\n  override delete(key: K): boolean {\n    const temp = super.delete(key);\n    this.saveState();\n    return temp;\n  }\n\n  override set(key: K, value: V): this {\n    const temp = super.set(key, value);\n    this.saveState();\n    return temp;\n  }\n\n  private saveState() {\n    localStorage.setItem(this._persistentKey, JSON.stringify([...this.entries()]));\n  }\n\n  private _persistentKey = '';\n\n  constructor(\n    { persistentKey }: PersistentMapOptions,\n    entries?: readonly (readonly [K, V])[] | null,\n  ) {\n    super(\n      persistentKey && localStorage.getItem(persistentKey)\n        ? JSON.parse(localStorage.getItem(persistentKey)!)\n        : entries,\n    );\n\n    if (!persistentKey) {\n      console.error('PersistentMap need persistentKey option');\n      return;\n    }\n\n    this._persistentKey = persistentKey;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/project.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitHubIntegration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitHubIntegration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitHubIntegration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub repository name\n\"SamPanDonte/untitled\"\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project's ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project's name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectMembers:     ProjectMember[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectMember[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of projects members\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProjectMember } from './project-member.interface';\n\nexport interface Project {\n  /**\n   * The project's ID.\n   */\n  id: number;\n\n  /**\n   * The project's name.\n   */\n  name: string;\n\n  /**\n   * GitHub repository name\n   * @example\n   * \"SamPanDonte/untitled\"\n   */\n  gitHubIntegration: string;\n\n  /**\n   * List of projects members\n   */\n  projectMembers?: ProjectMember[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectMember.html":{"url":"interfaces/ProjectMember.html","title":"interface - ProjectMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/project-member.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            privileges\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        privileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        privileges:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectMember {\n  user: {\n    id: number;\n    name: string;\n    surname: string;\n    email: string;\n    avatar: string;\n    username: string;\n  };\n  privileges: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeWorkspace\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/project.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                    changeWorkspace(projectId: number, newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:58\n                \n            \n\n\n            \n                \n                    Changes the workspace of the project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project to move\n\n                                    \n                                \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace where the project will be moved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(project: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:47\n                \n            \n\n\n            \n                \n                    Creates a new project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:29\n                \n            \n\n\n            \n                \n                    Deletes the project by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the project to delete from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:20\n                \n            \n\n\n            \n                \n                    Gets a project by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the project to get from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:65\n                \n            \n\n\n            \n                \n                    List projects in given workspace.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:38\n                \n            \n\n\n            \n                \n                    Updates a project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project object to update in the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { map } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Project } from '../interfaces/project.interface';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Gets a project by its ID.\n   * @param projectId identifier of the project to get from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(projectId: number) {\n    return this.apiService.get(`/project/${projectId}`);\n  }\n\n  /**\n   * Deletes the project by its ID.\n   * @param projectId identifier of the project to delete from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(projectId: number) {\n    return this.apiService.delete(`/project/${projectId}`);\n  }\n\n  /**\n   * Updates a project.\n   * @param project project object to update in the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public update(project: Project) {\n    return this.apiService.put(`/project/${project.id}`, { body: project });\n  }\n\n  /**\n   * Creates a new project.\n   * @param project project to add\n   * @returns Request observable, which completes when request is finished\n   */\n  public create(project: { name: string; workspaceId: number }) {\n    return this.apiService.post('/project', { body: project });\n  }\n\n  /**\n   * Changes the workspace of the project.\n   * @deprecated\n   * @param projectId project to move\n   * @param newWorkspaceId workspace where the project will be moved\n   * @returns Request observable, which completes when request is finished\n   */\n  public changeWorkspace(projectId: number, newWorkspaceId: number) {\n    return this.apiService.put(`/project/${projectId}/workspace/${newWorkspaceId}`);\n  }\n\n  /**\n   * List projects in given workspace.\n   */\n  public list() {\n    return this.apiService.get('/workspace').pipe(\n      map((workspaces) =>\n        workspaces.reduce((projects: any, workspace: Workspace) => {\n          projects.push(...workspace.projectsWithPrivileges.map((p) => p.project));\n          return projects;\n        }, []),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsListPage.html":{"url":"components/ProjectsListPage.html","title":"component - ProjectsListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/projects-list/projects-list.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects-list\n            \n\n            \n                styleUrls\n                ./projects-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./projects-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faPlus\n                            \n                            \n                                projects$\n                            \n                            \n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProject\n                            \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                openProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, workspaceService: WorkspaceService, projectService: ProjectService, dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WorkspaceService } from '../../services/workspace.service';\nimport { map, Observable } from 'rxjs';\nimport { Project } from '../../interfaces/project.interface';\nimport { Workspace } from '../../interfaces/workspace.interface';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from 'src/app/_main/services/dialog.service';\nimport { ProjectService } from '../../services/project.service';\n\n@Component({\n  selector: 'app-projects-list',\n  templateUrl: './projects-list.page.html',\n  styleUrls: ['./projects-list.page.scss'],\n})\nexport class ProjectsListPage {\n  workspace$: Observable;\n  projects$: Observable;\n\n  faPlus = faPlus;\n\n  private workspaceId!: number;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private router: Router,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.projects$ = this.workspace$.pipe(\n      map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)),\n    );\n  }\n\n  public editProject(project: Project) {\n    this.router.navigate(['/', this.workspaceId, project.id, 'edit']);\n  }\n\n  public openProject(project: Project) {\n    this.router.navigate(['/', this.workspaceId, project.id]);\n  }\n\n  deleteProject(project: Project) {\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\n      this.projectService.delete(project.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n\n  {{ (workspace$ | async)?.name }}\n  New project\n\n\n\n\n\n  \n  \n    Name\n     {{ row.name }} \n  \n\n  \n  \n    Statistics\n     - \n  \n\n  \n  \n    Last update\n     - \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Edit project\n        \n        \n          Delete project\n        \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./projects-list.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ (workspace$ | async)?.name }}  New project        Name     {{ row.name }}           Statistics     -           Last update     -                                                           Edit project                          Delete project                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Random.html":{"url":"classes/Random.html","title":"class - Random","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Random\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/random.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                m_w\n                            \n                            \n                                    Private\n                                m_z\n                            \n                            \n                                    Private\n                                mask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                random\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(seed: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/random.class.ts:4\n                            \n                        \n\n                \n                    \n                            Random number generation class with optional seed\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        seed\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the seed to use in random number generation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        m_w\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 123456789\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        m_z\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 987654321\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0xffffffff\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        random\n                        \n                    \n                \n            \n            \n                \n                    \n                    random()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/random.class.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Random {\n  private m_w = 123456789;\n  private m_z = 987654321;\n  private mask = 0xffffffff;\n\n  /**\n   * Random number generation class with optional seed\n   * @param seed the seed to use in random number generation\n   */\n  constructor(seed: number = new Date().getTime()) {\n    this.m_w = (123456789 + seed) & this.mask;\n    this.m_z = (987654321 - seed) & this.mask;\n  }\n\n  // Returns number between 0 (inclusive) and 1.0 (exclusive),\n  // just like Math.random().\n  public random() {\n    this.m_z = (36969 * (this.m_z & 65535) + (this.m_z >> 16)) & this.mask;\n    this.m_w = (18000 * (this.m_w & 65535) + (this.m_w >> 16)) & this.mask;\n    let result = ((this.m_z >> 0;\n    result /= 4294967296;\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/register/register.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                error\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                RegisterStage\n                            \n                            \n                                    Private\n                                    Optional\n                                registerSubscription\n                            \n                            \n                                    Public\n                                    Optional\n                                stage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                nextStage\n                            \n                            \n                                previousStage\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/register/register.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousStage\n                        \n                    \n                \n            \n            \n                \npreviousStage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator(), emailValidator()], []),\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n    name: new FormControl('', [requiredValidator()], []),\n    surname: new FormControl('', [requiredValidator()], []),\n    username: new FormControl('', [requiredValidator()], []),\n    agreements: new FormControl('', [requiredValidator()], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:33\n                        \n                    \n\n            \n                \n                    Form group for register.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RegisterStage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RegisterStage\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        registerSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegisterStage\n\n                    \n                \n                \n                    \n                        Default value : RegisterStage.IMPORTANT_DATA\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { emailValidator } from '@main/validators/email.validator';\nimport { passwordValidator } from '@main/validators/password.validator';\nimport { sameAsValidator } from '@main/validators/same-as.validator';\nimport { catchError, EMPTY, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { AuthService } from '../../services/auth.service';\n\nenum RegisterStage {\n  IMPORTANT_DATA,\n  PERSONAL_DATA,\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  private registerSubscription?: Subscription;\n  public stage?: RegisterStage = RegisterStage.IMPORTANT_DATA;\n  RegisterStage = RegisterStage;\n\n  public error?: string;\n\n  /**\n   * Form group for register.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator(), emailValidator()], []),\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n    name: new FormControl('', [requiredValidator()], []),\n    surname: new FormControl('', [requiredValidator()], []),\n    username: new FormControl('', [requiredValidator()], []),\n    agreements: new FormControl('', [requiredValidator()], []),\n  });\n\n  nextStage() {\n    let formFields: string[] = ['email', 'password', 'repeatPassword', 'agreements'];\n    let correctData: boolean = true;\n    for (let field of formFields) {\n      this.form.get(field)?.markAsTouched();\n      this.form.get(field)?.updateValueAndValidity();\n      if (this.form.get(field)?.invalid) {\n        correctData = false;\n      }\n    }\n    if (correctData) {\n      this.stage = RegisterStage.PERSONAL_DATA;\n    }\n  }\n\n  previousStage() {\n    this.stage = RegisterStage.IMPORTANT_DATA;\n  }\n\n  register() {\n    if (this.registerSubscription && !this.registerSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.registerSubscription = this.authService\n        .register(this.form.value)\n        .pipe(\n          catchError((e) => {\n            this.handleError(e);\n            return EMPTY;\n          }),\n        )\n        .subscribe(() => {\n          this.router.navigate(['/']);\n        });\n    }\n  }\n\n  handleError(error: any) {\n    switch (error.status) {\n      case 422:\n        switch (error.error.message) {\n          case 'this email is already taken':\n            this.error = $localize`Email is already taken`;\n            break;\n          case 'this username is already taken':\n            this.error = $localize`Username is already taken`;\n        }\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Register\n          This is a secure site. Please enter your register information or if you have an\n            account already, click here to login.\n        \n\n        \n          {{ error }}\n        \n\n        \n          \n\n          \n\n          \n\n          \n            \n              I agree to the End User License Agreement and Privacy Statement.\n            \n          \n\n          Next\n        \n        \n          \n\n          \n\n          \n          \n            Back\n            Register\n          \n        \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .agreements {\n          display: flex;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n\n        a {\n          color: var(--color-link);\n          cursor: pointer;\n          transition: color 0.2s ease;\n\n          &:hover {\n            color: var(--color-link-hover);\n          }\n        }\n\n        .buttons {\n          display: flex;\n          width: 100%;\n          justify-content: space-between;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Register          This is a secure site. Please enter your register information or if you have an            account already, click here to login.                          {{ error }}                                                                                  I agree to the End User License Agreement and Privacy Statement.                                Next                                                                    Back            Register                                      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestOptions.html":{"url":"interfaces/RequestOptions.html","title":"interface - RequestOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/request-options.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Request options interface\nUse this interface to configure request options like body, params, headers, etc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            observe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reportProgress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            responseType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withCredentials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         HttpContext\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpContext\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional context to attach with request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     HttpHeaders | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to send with the request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        observe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        observe:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Part of the response to observe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:     HttpParams | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpParams | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Query params to send with the request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reportProgress:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to report progress events like download or upload progress.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responseType:     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Response type to expect from the server.\nFor example:\n\nblob - will return a Blob object (used when API sends back a file).\njson - will return a JSON object.\ntext - will return a string.\n\nDefault is json.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If you want the credentials (cookie authentication token) to be passable through a call,\nyou need to add { withCredentials: true } in your httpClient call.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpContext, HttpHeaders, HttpParams } from '@angular/common/http';\n\n/**\n * Request options interface\n * Use this interface to configure request options like body, params, headers, etc.\n */\nexport interface RequestOptions {\n  /**\n   * Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.\n   */\n  body?: any;\n  /**\n   * Headers to send with the request.\n   */\n  headers?:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      };\n  /**\n   * Additional context to attach with request.\n   */\n  context?: HttpContext;\n  /**\n   * Part of the response to observe.\n   */\n  observe?: 'body';\n  /**\n   * Query params to send with the request.\n   */\n  params?:\n    | HttpParams\n    | {\n        [param: string]: string | number | boolean | ReadonlyArray;\n      };\n  /**\n   * Used to report progress events like download or upload progress.\n   */\n  reportProgress?: boolean;\n\n  /**\n   * Response type to expect from the server.\n   * For example:\n   * - blob - will return a Blob object (used when API sends back a file).\n   * - json - will return a JSON object.\n   * - text - will return a string.\n   *\n   * Default is json.\n   */\n  responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  /**\n   * If you want the credentials (cookie authentication token) to be passable through a call,\n   * you need to add `{ withCredentials: true }` in your httpClient call.\n   */\n  withCredentials?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestoreAccountPage.html":{"url":"components/RestoreAccountPage.html","title":"component - RestoreAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestoreAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/restore-account/restore-account.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-restore-account-page\n            \n\n            \n                styleUrls\n                ./restore-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./restore-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/restore-account/restore-account.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/restore-account/restore-account.page.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restore\n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/restore-account/restore-account.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\n\n@Component({\n  selector: 'app-restore-account-page',\n  templateUrl: './restore-account.page.html',\n  styleUrls: ['./restore-account.page.scss'],\n})\nexport class RestoreAccountPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  logOut() {\n    this.authService.logout().subscribe();\n  }\n\n  restore() {\n    this.authService.recoverAccount().subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Restore account\n          Your account has been deleted. You can restore your account within 7 days of\n            deletion.\n        \n\n        \n          Log out\n          Restore\n        \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./restore-account.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .actions {\n          display: flex;\n          width: 100%;\n          justify-content: flex-end;\n          margin-bottom: 1rem;\n\n          > *:not(:last-child) {\n            margin-right: 1rem;\n          }\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Restore account          Your account has been deleted. You can restore your account within 7 days of            deletion.                          Log out          Restore                            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'RestoreAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterExtensionsService.html":{"url":"injectables/RouterExtensionsService.html","title":"injectable - RouterExtensionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RouterExtensionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/router-extensions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    snapshot\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/router-extensions.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        snapshot\n                    \n                \n\n                \n                    \n                        getsnapshot()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/services/router-extensions.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterExtensionsService {\n  constructor(private router: Router) {}\n  public get snapshot() {\n    let node = (this.router.routerState.snapshot as any)._root;\n    while (node.children[0]) {\n      node = node.children[0];\n    }\n\n    return { params: node.value.params };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SchedulePage.html":{"url":"components/SchedulePage.html","title":"component - SchedulePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SchedulePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/schedule/schedule.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-schedule-page\n            \n\n            \n                styleUrls\n                ./schedule.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./schedule.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cursor\n                            \n                            \n                                    Public\n                                limitAfter\n                            \n                            \n                                    Public\n                                limitBefore\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                schedule$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dates\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, activatedRoute: ActivatedRoute, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/schedule/schedule.page.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cursor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dayjs().toDate()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limitAfter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limitBefore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        schedule$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dates\n                    \n                \n\n                \n                    \n                        getdates()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/pages/schedule/schedule.page.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport { Schedule } from '@tasks/interfaces/schedule.interface';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-schedule-page',\n  templateUrl: './schedule.page.html',\n  styleUrls: ['./schedule.page.scss'],\n})\nexport class SchedulePage implements OnInit {\n  public schedule$: Observable;\n  public project$: Observable;\n\n  public cursor = dayjs().toDate();\n  public limitAfter = 20;\n  public limitBefore = 0;\n\n  public get dates() {\n    const { cursor, limitBefore, limitAfter } = this;\n\n    const dates = [];\n\n    for (let i = 0; i \n    \n\n    \n        \n\n\n  \n    \n      \n        {{ cursor | date:'MMMM' }}\n      \n    \n    \n      \n    \n    \n      \n      \n        \n          {{ singleSchedule.user.name.substring(0, 1) }}\n        \n      \n    \n  \n\n  \n    \n      \n      \n        {{ date | date:'d' }}\n        {{ date | date:'EEE' }}\n      \n    \n    \n      \n      \n    \n    \n      \n      \n        \n          \n            \n              {{ task.name }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./schedule.page.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  padding: 2rem;\n}\n\n.schedule {\n  display: flex;\n  width: 100%;\n  padding-left: 10px;\n\n  // Sections\n\n  .people-header {\n    width: 80px;\n    height: 100%;\n    flex-shrink: 0;\n    margin-right: 1rem;\n    background-color: var(--color-secondary-800);\n    border-radius: var(--border-radius);\n  }\n\n  .timeline {\n    width: 100%;\n    height: 100%;\n    flex-grow: 1;\n    background-color: var(--color-secondary-800);\n    border-radius: var(--border-radius);\n    overflow-x: auto;\n\n    .cell {\n      width: 130px;\n      border-right: 1px solid var(--color-secondary-600);\n    }\n\n    .group-event-row {\n      .cell {\n        border-top: 1px solid var(--color-secondary-600);\n      }\n    }\n\n    .single-person-row {\n      .cell {\n        border-top: 1px solid var(--color-secondary-600);\n      }\n    }\n  }\n\n  // Rows\n  .header-event-row,\n  .group-event-row,\n  .single-person-row {\n    display: flex;\n  }\n\n  .header-row {\n    @include typo-title;\n\n    display: flex;\n    height: 64px;\n    color: var(--color-text);\n  }\n\n  .group-event-row {\n    display: flex;\n    height: 30px;\n  }\n\n  .single-person-row {\n    display: flex;\n    width: 100%;\n    height: 100px;\n  }\n\n  .cell {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    flex-shrink: 0;\n    align-items: center;\n    justify-content: center;\n\n    .number {\n      @include typo-title;\n    }\n\n    .day-of-week {\n      @include typo-body;\n    }\n\n    .task {\n      width: 100%;\n      height: 100%;\n      padding: 10px;\n      background-color: var(--color-primary-500);\n      border-radius: var(--border-radius);\n      color: var(--color-text);\n    }\n  }\n}\n\n.avatar {\n  @include typo-heading-5;\n\n  display: flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-primary-500);\n  border-radius: 50%;\n  color: var(--color-text);\n  text-transform: uppercase;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ cursor | date:\\'MMMM\\' }}                                                          {{ singleSchedule.user.name.substring(0, 1) }}                                              {{ date | date:\\'d\\' }}        {{ date | date:\\'EEE\\' }}                                                                                          {{ task.name }}                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SchedulePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/select/select.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                ./select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                options\n                            \n                            \n                                    Optional\n                                optionsMap\n                            \n                            \n                                    Optional\n                                queryOptions\n                            \n                            \n                                selected$\n                            \n                            \n                                yet\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateOptions\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/select/select.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOptions\n                        \n                    \n                \n            \n            \n                \nupdateOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        optionsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        queryOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(OptionComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:82\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/select/select.component.ts:20\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, ContentChildren, Input, OnInit, QueryList } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Subject } from 'rxjs';\nimport { OptionComponent } from '../option/option.component';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n})\nexport class SelectComponent extends ControlAccessor implements AfterViewInit, OnInit {\n  @ContentChildren(OptionComponent) queryOptions?: QueryList;\n  options?: any[];\n  optionsMap?: Map = new Map();\n  @Input() floatingLabel: string = '';\n  yet: boolean = false;\n\n  selected$: Subject = new Subject();\n\n  get selected() {\n    return this.optionsMap?.get(this.control.value);\n  }\n\n  ngOnInit(): void {\n    this.control.valueChanges.subscribe((value) => {\n      this.optionsMap?.forEach((option, key) => {\n        const selected = key === value;\n        option.selected = selected;\n        if (selected) {\n          this.selected$.next(option);\n        }\n      });\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.queryOptions?.changes.subscribe((options) => {\n      this.updateOptions();\n    });\n    this.updateOptions();\n  }\n\n  updateOptions() {\n    this.yet = false;\n    this.options = this.queryOptions?.map((x) => {\n      const option = { value: x.value, viewValue: x.viewValue, icon: x.icon };\n\n      this.optionsMap!.set(x.value, option);\n      return option;\n    });\n    setTimeout(() => {\n      this.selected$.next(this.optionsMap?.get(this.control.value));\n      this.yet = true;\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ floatingLabel }}\n  \n    \n      \n      {{ selectedItem.viewValue }}\n    \n    \n      \n        \n        {{ option.viewValue }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ floatingLabel }}                  {{ selectedItem.viewValue }}                              {{ option.viewValue }}            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectionEditOperation.html":{"url":"interfaces/SelectionEditOperation.html","title":"interface - SelectionEditOperation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectionEditOperation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/monaco-extended.class.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            after\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            afterEachLine\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            before\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            beforeEachLine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        after\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        after:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        afterEachLine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        afterEachLine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        before:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beforeEachLine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beforeEachLine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as monaco from 'monaco-editor';\n\ntype MonacoEditor = monaco.editor.IStandaloneCodeEditor;\ntype Selection = monaco.Selection;\ntype EditOperation = monaco.editor.IIdentifiedSingleEditOperation;\n\ninterface SelectionEditOperation {\n  before?: string;\n  after?: string;\n  beforeEachLine?: string;\n  afterEachLine?: string;\n}\n\nexport class MonacoExtended {\n  public static insertTextAt(\n    editor: MonacoEditor,\n    lineNumber: number,\n    column: number,\n    text: string,\n  ) {\n    editor.executeEdits('', [\n      {\n        range: {\n          startLineNumber: lineNumber,\n          startColumn: column,\n          endLineNumber: lineNumber,\n          endColumn: column,\n        },\n        text,\n      },\n    ]);\n  }\n\n  public static executeEdits(editor: MonacoEditor, edits: EditOperation[]) {\n    for (const edit of edits) {\n      if (edit.range?.startColumn && !edit.range?.endColumn)\n        (edit.range as any).endColumn = edit.range.startColumn;\n      if (edit.range?.startLineNumber && !edit.range?.endLineNumber)\n        (edit.range as any).endLineNumber = edit.range.startLineNumber;\n    }\n    return editor.executeEdits('', edits);\n  }\n\n  public static removeTextAt(\n    editor: MonacoEditor,\n    startLineNumber: number,\n    startColumn: number,\n    endLineNumber: number,\n    endColumn: number,\n  ) {\n    editor.executeEdits('', [\n      {\n        range: {\n          startLineNumber,\n          startColumn,\n          endLineNumber,\n          endColumn,\n        },\n        text: null,\n      },\n    ]);\n  }\n\n  public static insertTextBeforeSelection(\n    editor: MonacoEditor,\n    selection: Selection,\n    text: string,\n  ) {\n    MonacoExtended.insertTextAt(editor, selection.startLineNumber, selection.startColumn, text);\n  }\n\n  public static insertTextAfterSelection(editor: MonacoEditor, selection: Selection, text: string) {\n    MonacoExtended.insertTextAt(editor, selection.endLineNumber, selection.endColumn, text);\n  }\n\n  public static insertTextBeforeAndAfterEachSelection(\n    editor: MonacoEditor,\n    selections: Selection[],\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const edits = ([] as any[]).concat(\n      ...selections.map((selection) => {\n        return [\n          {\n            range: {\n              startLineNumber: selection.startLineNumber,\n              startColumn: selection.startColumn,\n              endLineNumber: selection.startLineNumber,\n              endColumn: selection.startColumn,\n            },\n            text: beforeSelectionText,\n          },\n          {\n            range: {\n              startLineNumber: selection.endLineNumber,\n              startColumn: selection.endColumn,\n              endLineNumber: selection.endLineNumber,\n              endColumn: selection.endColumn,\n            },\n            text: afterSelectionText,\n          },\n        ];\n      }),\n    );\n\n    editor.executeEdits('', edits);\n  }\n\n  public static removeTextBeforeAndAfterEachSelection(\n    editor: MonacoEditor,\n    selections: Selection[],\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const model = editor.getModel();\n    const afterSelectionTextLinesCount = (afterSelectionText.match(/\\n/g) || [])?.length;\n    const edits: any[] = [];\n\n    if (!model) return;\n\n    for (const selection of selections) {\n      if (\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText)\n      ) {\n        edits.push({\n          range: {\n            startLineNumber: selection.startLineNumber,\n            startColumn: selection.startColumn,\n            endLineNumber:\n              selection.startLineNumber + (beforeSelectionText.match(/\\n/g) || [])?.length,\n            endColumn: beforeSelectionText.replace(/.*\\n/g, '').length + 1,\n          },\n          text: '',\n        });\n        edits.push({\n          range: {\n            startLineNumber: selection.endLineNumber - afterSelectionTextLinesCount,\n            startColumn:\n              model.getLineContent(selection.endLineNumber - afterSelectionTextLinesCount).length -\n              (afterSelectionText.replace(/\\n[^]*$/g, '').length - 1),\n            endLineNumber: selection.endLineNumber,\n            endColumn: selection.endColumn,\n          },\n          text: '',\n        });\n      }\n    }\n\n    editor.executeEdits('', edits);\n  }\n\n  public static selectionStartWith(editor: MonacoEditor, selection: Selection, text: string) {\n    const selectedValue = editor\n      .getModel()\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\n    return selectedValue?.startsWith(text);\n  }\n\n  public static selectionEndsWith(editor: MonacoEditor, selection: Selection, text: string) {\n    const selectedValue = editor\n      .getModel()\n      ?.getValueInRange(selection, monaco.editor.EndOfLinePreference.LF);\n    return selectedValue?.endsWith(text);\n  }\n\n  public static toggleEndAndStartOfEachSelection(\n    editor: MonacoEditor,\n    beforeSelectionText: string,\n    afterSelectionText: string = '',\n  ) {\n    const selections = editor.getSelections();\n    if (!selections) return;\n\n    const shouldDelete = selections.some(\n      (selection) =>\n        MonacoExtended.selectionStartWith(editor, selection, beforeSelectionText) &&\n        MonacoExtended.selectionEndsWith(editor, selection, afterSelectionText),\n    );\n\n    const mode: 'delete' | 'add' = shouldDelete ? 'delete' : 'add';\n\n    if (mode === 'delete') {\n      MonacoExtended.removeTextBeforeAndAfterEachSelection(\n        editor,\n        selections,\n        beforeSelectionText,\n        afterSelectionText,\n      );\n    } else {\n      MonacoExtended.insertTextBeforeAndAfterEachSelection(\n        editor,\n        selections,\n        beforeSelectionText,\n        afterSelectionText,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectionEditPlugin.html":{"url":"classes/SelectionEditPlugin.html","title":"class - SelectionEditPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectionEditPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                executeSelectionEdits\n                            \n                            \n                                    Static\n                                getSelectionEdits\n                            \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        executeSelectionEdits\n                        \n                    \n                \n            \n            \n                \n                    \n                    executeSelectionEdits(edits: SelectionEditOperation, endCursorState?: CursorSTateComputer | Selection[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    edits\n                                    \n                                                SelectionEditOperation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endCursorState\n                                    \n                                            CursorSTateComputer | Selection[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSelectionEdits\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectionEdits(edits: SelectionEditOperation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    edits\n                                    \n                                                SelectionEditOperation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditOperation[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(prototype: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prototype\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { snakeCase } from 'lodash-es';\nimport { CursorSTateComputer, EditOperation, Editor, Selection } from '../typings';\n\nexport type SelectionEditOperation = { [key in SelectionEditOperationType]: string };\n\nexport enum SelectionEditOperationType {\n  before = 'BEFORE',\n  after = 'AFTER',\n  beforeEachLine = 'BEFORE_EACH_LINE',\n  afterEachLine = 'AFTER_EACH_LINE',\n}\n\nexport const SelectionEditOperationOrder = {\n  before: 1,\n  after: 4,\n  beforeEachLine: 2,\n  afterEachLine: 3,\n};\n\nconst SelectionEditOperationConverter: {\n  [key in SelectionEditOperationType]: (\n    editor: Editor,\n    selection: Selection,\n    value: string,\n  ) => EditOperation[];\n} = {\n  [SelectionEditOperationType.before]: (editor: Editor, selection: Selection, value: string) => {\n    return [\n      {\n        range: {\n          startColumn: 1,\n          startLineNumber: selection.startLineNumber,\n          endColumn: 1,\n          endLineNumber: selection.startLineNumber,\n        },\n        text: value,\n      },\n    ] as EditOperation[];\n  },\n  [SelectionEditOperationType.after]: (editor: Editor, selection: Selection, value: string) => {\n    const column = (editor.getModel()?.getLineLength(selection.endLineNumber) || 0) + 1;\n\n    return [\n      {\n        range: {\n          startColumn: column,\n          startLineNumber: selection.endLineNumber,\n          endColumn: column,\n          endLineNumber: selection.endLineNumber,\n        },\n        text: value,\n      },\n    ] as EditOperation[];\n  },\n  [SelectionEditOperationType.beforeEachLine]: (\n    editor: Editor,\n    selection: Selection,\n    value: string,\n  ) => {\n    const startLine = selection.startLineNumber;\n    const endLine = selection.endLineNumber;\n\n    const difference = Math.abs(startLine - endLine) + 1;\n    const offset = Math.min(startLine, endLine);\n    const indexes = [...new Array(difference).keys()].map((k) => k + offset);\n\n    return indexes.map((line) => ({\n      range: {\n        startLineNumber: line,\n        startColumn: 1,\n        endLineNumber: line,\n        endColumn: 1,\n      },\n      text: value,\n    })) as EditOperation[];\n  },\n  [SelectionEditOperationType.afterEachLine]: (\n    editor: Editor,\n    selection: Selection,\n    value: string,\n  ) => {\n    const model = editor.getModel();\n    if (!model) return [];\n\n    const startLine = selection.startLineNumber;\n    const endLine = selection.endLineNumber;\n\n    const difference = Math.abs(startLine - endLine) + 1;\n    const offset = Math.min(startLine, endLine);\n    const indexes = [...new Array(difference).keys()].map((k) => k + offset);\n\n    return indexes.map((line) => {\n      const column = model.getLineLength(line) + 1;\n\n      return {\n        range: {\n          startLineNumber: line,\n          startColumn: column,\n          endLineNumber: line,\n          endColumn: column,\n        },\n        text: value,\n      } as EditOperation;\n    });\n  },\n};\n\nexport class SelectionEditPlugin {\n  public static init(prototype: any) {\n    prototype.getSelectionEdits = function (edits: SelectionEditOperation) {\n      return SelectionEditPlugin.getSelectionEdits.bind(this)(edits);\n    };\n\n    prototype.executeSelectionEdits = function (\n      edits: SelectionEditOperation,\n      endCursorState?: CursorSTateComputer | Selection[],\n    ) {\n      return SelectionEditPlugin.executeSelectionEdits.bind(this)(edits, endCursorState);\n    };\n  }\n\n  public static getSelectionEdits(edits: SelectionEditOperation): EditOperation[] {\n    const editor: Editor = this as any;\n    console.log(editor);\n    const selections = editor.getSelections();\n    let _edits: EditOperation[] = [];\n\n    console.log(selections);\n\n    if (!selections) return [];\n\n    for (const selection of selections) {\n      const entries = Object.entries(edits).sort((a: [string, string], b: [string, string]) => {\n        return (\n          (SelectionEditOperationOrder as any)[a[0] as any] -\n          (SelectionEditOperationOrder as any)[b[0] as any]\n        );\n      });\n      for (const [key, value] of entries) {\n        const _key = snakeCase(key).toUpperCase();\n        _edits = [\n          ..._edits,\n          ...SelectionEditOperationConverter[_key as SelectionEditOperationType](\n            editor,\n            selection,\n            value,\n          ),\n        ];\n      }\n    }\n    return _edits;\n  }\n\n  public static executeSelectionEdits(\n    edits: SelectionEditOperation,\n    endCursorState?: CursorSTateComputer | Selection[],\n  ) {\n    const editor: Editor = this as any;\n    const _edits = this.getSelectionEdits(edits);\n    console.log(_edits);\n    editor.executeEdits('', _edits, endCursorState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/services/sessions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/services/sessions.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/services/sessions.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/services/sessions.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserSession } from 'src/app/settings/interfaces/session.interface';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionsService {\n  constructor(private apiService: ApiService) {}\n\n  public list(): Observable {\n    return this.apiService.get(`/session`);\n  }\n\n  public delete(id: number) {\n    return this.apiService.delete(`/session/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsAccountPage.html":{"url":"components/SettingsAccountPage.html","title":"component - SettingsAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-account/settings-account.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-account-page\n            \n\n            \n                styleUrls\n                ./settings-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccountMailCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-account/settings-account.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccountMailCheck\n                        \n                    \n                \n            \n            \n                \ndeleteAccountMailCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', requiredValidator()),\n    name: new FormControl('', requiredValidator()),\n    surname: new FormControl('', requiredValidator()),\n    username: new FormControl('', requiredValidator()),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-account/settings-account.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AuthService } from '@auth/services/auth.service';\nimport { UserService } from '@auth/services/user.service';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-settings-account-page',\n  templateUrl: './settings-account.page.html',\n  styleUrls: ['./settings-account.page.scss'],\n})\nexport class SettingsAccountPage implements OnInit {\n  constructor(private userService: UserService, private authService: AuthService) {}\n\n  public form = new FormGroup({\n    email: new FormControl('', requiredValidator()),\n    name: new FormControl('', requiredValidator()),\n    surname: new FormControl('', requiredValidator()),\n    username: new FormControl('', requiredValidator()),\n  });\n\n  ngOnInit() {\n    this.userService.getMyself().subscribe((response) => {\n      this.form.patchValue(response);\n    });\n  }\n\n  submit() {\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.userService.update(this.form.value).subscribe(() => {});\n  }\n\n  resetPassword() {\n    this.authService.resetPassword(this.form.value.email).subscribe(() => {\n      this.authService.logout().subscribe();\n    });\n  }\n\n  deleteAccountMailCheck() {\n    this.authService.deleteAccount().subscribe(() => {\n      // dodac popup czy na pewno zgadzamy sie na usuniecie konta, jesli tak to infomracja ze zostal wyslany link na maila dezaktywujacy konto i ze ma mozliwosc jego przywrocenia do 7 dni\n      this.authService.logout().subscribe();\n    });\n  }\n}\n\n    \n\n    \n        Account\n\n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n    Update profile\n  \n\n  \n  \n    Change password\n    It's highly recommended to change the password every 30 days. It will increase your\n      account security.\n    \n      Change password\n    \n  \n\n  \n  \n    Delete account\n    Delete your account permanently. All not shared owned projects will also be deleted.\n      This action is reversible in period of 7 days - you need to log in to your account in this time to revert your\n      account deletion.\n    \n      Delete account\n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings-account.page.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n}\n\n.actions {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Account                                Update profile          Change password    It\\'s highly recommended to change the password every 30 days. It will increase your      account security.          Change password              Delete account    Delete your account permanently. All not shared owned projects will also be deleted.      This action is reversible in period of 7 days - you need to log in to your account in this time to revert your      account deletion.          Delete account      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsIntegrationsPage.html":{"url":"components/SettingsIntegrationsPage.html","title":"component - SettingsIntegrationsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsIntegrationsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-integrations\n            \n\n            \n                styleUrls\n                ./settings-integrations.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-integrations.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gitHubAccounts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                getConnectedProjects\n                            \n                            \n                                    Public\n                                loadGitHubIntegration\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConnectedProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConnectedProjects(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        gitHubAccounts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GitAccount } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { map, Observable, take } from 'rxjs';\n\ninterface GitAccountWithUsage {\n  account: GitAccount;\n  usage: Observable;\n}\n\n@Component({\n  selector: 'app-settings-integrations',\n  templateUrl: './settings-integrations.page.html',\n  styleUrls: ['./settings-integrations.page.scss'],\n})\nexport class SettingsIntegrationsPage implements OnInit {\n  public gitHubAccounts$!: Observable;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  ngOnInit() {\n    this.loadGitHubIntegration();\n  }\n\n  public loadGitHubIntegration(): void {\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\n      map((accounts) => {\n        return accounts.map((account) => {\n          return {\n            account,\n            usage: this.getConnectedProjects(account).pipe(take(1)),\n          };\n        });\n      }),\n    );\n  }\n\n  public disconnect(account: GitAccount): void {\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\n      window.open(link, '_blank');\n    });\n  }\n\n  public getConnectedProjects(account: GitAccount): Observable {\n    return this.gitIntegrationService\n      .getGitHubAccountConnectedProjects(account)\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(', ')));\n  }\n}\n\n    \n\n    \n        Integrations\n\n\n\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-integrations.page.scss\n                \n                .list {\n  > * {\n    display: block;\n    margin-top: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Integrations              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsIntegrationsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsLocalizationPage.html":{"url":"components/SettingsLocalizationPage.html","title":"component - SettingsLocalizationPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsLocalizationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-localization/settings-localization.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-localization-page\n            \n\n            \n                styleUrls\n                ./settings-localization.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-localization.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateFormats\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:56\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateFormats\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n    $localize`YYYY-MM-DD`,\n    $localize`DD-MM-YYYY`,\n    $localize`MM/DD/YYYY`,\n    $localize`DD.MM.YYYY`,\n  ].map((format) => ({\n    format,\n    example: dayjs().format(format),\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    language: new FormControl('', requiredValidator()),\n    dateFormat: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      code: 'de-DE',\n      name: 'Deutsch',\n    },\n    {\n      code: 'en-GB',\n      name: 'English (British)',\n    },\n    {\n      code: 'es-ES',\n      name: 'Español',\n    },\n    {\n      code: 'it-IT',\n      name: 'Italiano',\n    },\n    {\n      code: 'pl-PL',\n      name: 'Polski',\n    },\n    {\n      code: 'en-US',\n      name: 'English (American)',\n    },\n    {\n      code: 'uk-UA',\n      name: 'Українська',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'app-settings-localization-page',\n  templateUrl: './settings-localization.page.html',\n  styleUrls: ['./settings-localization.page.scss'],\n})\nexport class SettingsLocalizationPage {\n  public form = new FormGroup({\n    language: new FormControl('', requiredValidator()),\n    dateFormat: new FormControl(''),\n  });\n\n  languages = [\n    {\n      code: 'de-DE',\n      name: 'Deutsch',\n    },\n    {\n      code: 'en-GB',\n      name: 'English (British)',\n    },\n    {\n      code: 'es-ES',\n      name: 'Español',\n    },\n    {\n      code: 'it-IT',\n      name: 'Italiano',\n    },\n    {\n      code: 'pl-PL',\n      name: 'Polski',\n    },\n    {\n      code: 'en-US',\n      name: 'English (American)',\n    },\n    {\n      code: 'uk-UA',\n      name: 'Українська',\n    },\n  ];\n\n  dateFormats = [\n    $localize`YYYY-MM-DD`,\n    $localize`DD-MM-YYYY`,\n    $localize`MM/DD/YYYY`,\n    $localize`DD.MM.YYYY`,\n  ].map((format) => ({\n    format,\n    example: dayjs().format(format),\n  }));\n\n  constructor() {}\n\n  changeLanguage() {\n    location.href = `https://workflow.adiantek.ovh/${this.form.value.language}/settings/localization`;\n  }\n\n  submit() {\n    this.changeLanguage();\n  }\n}\n\n    \n\n    \n        Localization\n\n\n  \n  \n    {{ language.name }}\n  \n\n  \n  \n    {{ dateFormat.example }}\n  \n\n  \n  \n    Save settings\n  \n\n\n    \n\n    \n                \n                    ./settings-localization.page.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n}\n\n.actions {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Localization        {{ language.name }}          {{ dateFormat.example }}          Save settings  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsLocalizationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nIntegrationEntryComponent\n\nIntegrationEntryComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nIntegrationEntryComponent->SettingsModule\n\n\n\n\n\nListGroupComponent\n\nListGroupComponent\n\nSettingsModule -->\n\nListGroupComponent->SettingsModule\n\n\n\n\n\nSettingsAccountPage\n\nSettingsAccountPage\n\nSettingsModule -->\n\nSettingsAccountPage->SettingsModule\n\n\n\n\n\nSettingsIntegrationsPage\n\nSettingsIntegrationsPage\n\nSettingsModule -->\n\nSettingsIntegrationsPage->SettingsModule\n\n\n\n\n\nSettingsLocalizationPage\n\nSettingsLocalizationPage\n\nSettingsModule -->\n\nSettingsLocalizationPage->SettingsModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\nSettingsModule -->\n\nSettingsPage->SettingsModule\n\n\n\n\n\nSettingsSessionsPage\n\nSettingsSessionsPage\n\nSettingsModule -->\n\nSettingsSessionsPage->SettingsModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nSettingsModule -->\n\nMainModule->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IntegrationEntryComponent\n                        \n                        \n                            ListGroupComponent\n                        \n                        \n                            SettingsAccountPage\n                        \n                        \n                            SettingsIntegrationsPage\n                        \n                        \n                            SettingsLocalizationPage\n                        \n                        \n                            SettingsPage\n                        \n                        \n                            SettingsSessionsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '@main/_main.module';\nimport { SettingsPage } from 'src/app/settings/pages/settings/settings.page';\nimport { IntegrationEntryComponent } from './components/integration-entry/integration-entry.component';\nimport { ListGroupComponent } from './components/list-group/list-group.component';\nimport { SettingsAccountPage } from './pages/settings-account/settings-account.page';\nimport { SettingsIntegrationsPage } from './pages/settings-integrations/settings-integrations.page';\nimport { SettingsLocalizationPage } from './pages/settings-localization/settings-localization.page';\nimport { SettingsSessionsPage } from './pages/settings-sessions/settings-sessions.page';\nimport { SettingsRoutingModule } from './settings.routing';\n\n@NgModule({\n  imports: [CommonModule, MainModule, ReactiveFormsModule, SettingsRoutingModule],\n  declarations: [\n    SettingsPage,\n    SettingsLocalizationPage,\n    SettingsAccountPage,\n    SettingsIntegrationsPage,\n    SettingsSessionsPage,\n    ListGroupComponent,\n    IntegrationEntryComponent,\n  ],\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings/settings.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-page\n            \n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAddressCard\n                            \n                            \n                                faCircleNodes\n                            \n                            \n                                faGlobe\n                            \n                            \n                                faUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings/settings.page.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings/settings.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAddressCard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAddressCard\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCircleNodes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCircleNodes\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGlobe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGlobe\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faUser\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { faAddressCard, faCircleNodes, faGlobe, faUser } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-settings-page',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  faUser = faUser;\n  faGlobe = faGlobe;\n  faCircleNodes = faCircleNodes;\n  faAddressCard = faAddressCard;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n  \n  \n    \n\n      \n      \n        \n          \n          Account\n        \n      \n\n      \n      \n        \n          \n          Localization\n        \n      \n\n      \n      \n        \n          \n          Integrations\n        \n      \n\n      \n      \n        \n          \n          Sessions\n        \n      \n\n    \n  \n\n  \n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                @import '../../../../styles/typography';\n\nsection {\n  display: flex;\n  justify-content: center;\n}\n\n.sidebar {\n  width: 315px;\n  height: 100%;\n  padding: 40px;\n\n  a {\n    @include typo-body;\n\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: 8px 10px;\n    margin-bottom: 0.35rem;\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n    transition: background-color 0.2s ease-in-out;\n\n    app-icon {\n      margin-right: 1rem;\n    }\n\n    &:hover {\n      background-color: var(--color-secondary-500);\n    }\n\n    &.active {\n      background-color: var(--color-secondary-500);\n\n      &::before {\n        position: absolute;\n        top: 10%;\n        left: -10px;\n        width: 4px;\n        height: 80%;\n        background-color: var(--color-primary-700);\n        border-radius: var(--border-radius);\n        content: '';\n      }\n    }\n  }\n}\n\n.content {\n  width: 100%;\n  max-width: 800px;\n  padding: 40px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Account                                                      Localization                                                      Integrations                                                      Sessions                              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsAccountPage } from './pages/settings-account/settings-account.page';\nimport { SettingsIntegrationsPage } from './pages/settings-integrations/settings-integrations.page';\nimport { SettingsLocalizationPage } from './pages/settings-localization/settings-localization.page';\nimport { SettingsSessionsPage } from './pages/settings-sessions/settings-sessions.page';\nimport { SettingsPage } from './pages/settings/settings.page';\n\n/**\n * Messages routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage,\n    children: [\n      {\n        path: 'account',\n        component: SettingsAccountPage,\n      },\n      {\n        path: 'localization',\n        component: SettingsLocalizationPage,\n      },\n      {\n        path: 'integrations',\n        component: SettingsIntegrationsPage,\n      },\n      {\n        path: 'sessions',\n        component: SettingsSessionsPage,\n      },\n    ],\n  },\n];\n\n/**\n * Messages routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsSessionsPage.html":{"url":"components/SettingsSessionsPage.html","title":"component - SettingsSessionsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsSessionsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-sessions/settings-sessions.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-sessions\n            \n\n            \n                styleUrls\n                ./settings-sessions.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-sessions.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sessionsList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agentType\n                            \n                            \n                                changeDate\n                            \n                            \n                                deleteSession\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agentType\n                        \n                    \n                \n            \n            \n                \nagentType(type: string, agent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    agent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSession\n                        \n                    \n                \n            \n            \n                \ndeleteSession(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sessionsList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\nimport * as UAParser from 'ua-parser-js';\nimport { UserSession } from '../../interfaces/session.interface';\nimport { SessionsService } from '../../services/sessions.service';\n\n@Component({\n  selector: 'app-settings-sessions',\n  templateUrl: './settings-sessions.page.html',\n  styleUrls: ['./settings-sessions.page.scss'],\n})\nexport class SettingsSessionsPage implements OnInit {\n  public sessionsList$!: Observable;\n\n  constructor(private sessionService: SessionsService) {}\n  ngOnInit() {\n    this.sessionsList$ = this.sessionService.list();\n  }\n\n  changeDate(date: number) {\n    let currentDate = dayjs();\n    let sessionDate = dayjs(date);\n\n    if (currentDate.year() != sessionDate.year()) {\n      if (currentDate.diff(sessionDate, 'month') > 0) {\n        return sessionDate.format('LL');\n      } else {\n        return sessionDate.format('LLL');\n      }\n    } else {\n      return sessionDate.format('MMMM D, h:mm A');\n    }\n  }\n\n  agentType(type: string, agent: string) {\n    let uaParser = new UAParser(agent);\n    let osName = uaParser.getOS().name || 'Unknown system';\n    let browser = uaParser.getBrowser().name || 'Unknown browser';\n    if (type == 'os') {\n      return osName;\n    }\n    if (type == 'browser') {\n      return browser;\n    }\n    return osName + ', ' + browser;\n  }\n\n  deleteSession(id: number) {\n    this.sessionService.delete(id).subscribe();\n  }\n}\n\n    \n\n    \n        Sessions\n\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                {{ agentType(\"os\", session.userAgent) }},\n              \n              \n                {{ agentType(\"browser\", session.userAgent) }}\n              \n            \n            \n              \n                {{ session.geoip.city }}, {{ session.geoip.country }}\n              \n              \n                {{ changeDate(session.lastUsed) }}\n              \n              \n                Active now\n              \n            \n          \n          \n            Log out\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-sessions.page.scss\n                \n                .list {\n  > * {\n    display: block;\n    margin-top: 1rem;\n  }\n}\n\n.sessions-entry {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n  border: 1px solid var(--color-secondary-300);\n  border-radius: var(--border-radius);\n\n  .labels {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    margin-bottom: 0;\n\n    .agent,\n    .local {\n      display: flex;\n    }\n\n    mark {\n      display: block;\n      margin-left: 0.5rem;\n      background-color: transparent;\n      color: var(--color-purple-300);\n    }\n\n    .description {\n      display: block;\n      padding-left: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n}\n\n.actions {\n  flex-grow: 1;\n  flex-shrink: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sessions                                                                          {{ agentType(\"os\", session.userAgent) }},                                            {{ agentType(\"browser\", session.userAgent) }}                                                                    {{ session.geoip.city }}, {{ session.geoip.country }}                                            {{ changeDate(session.lastUsed) }}                                            Active now                                                          Log out                              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsSessionsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarNavigationComponent.html":{"url":"components/SidebarNavigationComponent.html","title":"component - SidebarNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar-navigation\n            \n\n            \n                styleUrls\n                ./sidebar-navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar-navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                workspaceList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWorkspace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createWorkspace\n                        \n                    \n                \n            \n            \n                \ncreateWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        workspaceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Workspace } from 'src/app/dashboard/interfaces/workspace.interface';\nimport { WorkspaceService } from 'src/app/dashboard/services/workspace.service';\n\n@Component({\n  selector: 'app-sidebar-navigation',\n  templateUrl: './sidebar-navigation.component.html',\n  styleUrls: ['./sidebar-navigation.component.scss'],\n})\nexport class SidebarNavigationComponent {\n  @Input()\n  public icon!: String;\n\n  public workspaceList?: Observable;\n\n  createWorkspace() {\n    this.router.navigate(['/', 'create']);\n  }\n\n  constructor(private workspaceService: WorkspaceService, private router: Router) {\n    this.workspaceList = this.workspaceService.list();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\nDashboard\n\n  Workspaces\n  \n    \n      \n        {{workspace.name}}\n      \n    \n  \n  \n    \n      Create workspace\n    \n    \n      Manage workspaces\n    \n  \n\nEmails\nMessages\n    \n\n    \n                \n                    ./sidebar-navigation.component.scss\n                \n                :host {\n  display: flex;\n  width: 250px;\n  height: 100%;\n  flex-direction: column;\n  flex-shrink: 0;\n  background-color: var(--color-secondary-800);\n}\n\n.logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin: 10px 20px 0;\n  background-image: url('../../../../assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n  transform-origin: 50% 25%;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Dashboard  Workspaces                    {{workspace.name}}                        Create workspace              Manage workspaces      EmailsMessages'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SinglePersonSchedule.html":{"url":"interfaces/SinglePersonSchedule.html","title":"interface - SinglePersonSchedule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SinglePersonSchedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/schedule.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tasks\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '@auth/interfaces/user.interface';\n\nexport type Schedule = SinglePersonSchedule[];\n\nexport interface SinglePersonSchedule {\n  user: UserData;\n  tasks: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/snackbar/snackbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationName\n                            \n                            \n                                faClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setAnimationName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                duration\n                            \n                            \n                                message\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.animation-name\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    colorStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 'gray'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        duration\n                    \n                \n                \n                    \n                        Default value : 4000\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uid\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:15\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.animation-name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnimationName\n                        \n                    \n                \n            \n            \n                \nsetAnimationName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        animationName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.animation-name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faClose\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faClose\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        colorStyle\n                    \n                \n\n                \n                    \n                        getcolorStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { faClose } from '@fortawesome/free-solid-svg-icons';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { SnackbarData } from './snackbar.interface';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss'],\n})\nexport class SnackbarComponent implements OnInit {\n  faClose = faClose;\n\n  @Input()\n  public uid!: string;\n\n  @Input()\n  public message!: SnackbarData['message'];\n\n  @Input()\n  public duration: SnackbarData['duration'] = 4000;\n\n  @Input()\n  public color: SnackbarData['color'] = 'gray';\n\n  @HostBinding('style.animation-name')\n  public animationName: string = 'open';\n\n  public get colorStyle(): string {\n    switch (this.color) {\n      case 'gray':\n        return 'var(--color-gray-500)';\n      case 'green':\n        return '#00b300';\n    }\n  }\n\n  constructor(private snackbarService: SnackbarService) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.close();\n    }, this.duration);\n  }\n\n  close() {\n    this.setAnimationName('close');\n    setTimeout(() => {\n      this.snackbarService.close(this.uid);\n    }, 1000);\n  }\n\n  setAnimationName(name: string) {\n    this.animationName = name;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ message }}\n  \n  \n\n\n    \n\n    \n                \n                    ./snackbar.component.scss\n                \n                :host {\n  display: block;\n  overflow: visible;\n  animation: open 1s ease-in-out forwards;\n}\n\n.content {\n  display: flex;\n  padding: 1rem;\n  border-radius: var(--border-radius);\n\n  .message {\n    margin-right: 0.75rem;\n    color: var(--color-text);\n  }\n\n  .close-button {\n    position: relative;\n    width: 24px;\n    height: 24px;\n    color: var(--color-text);\n    cursor: pointer;\n\n    &::before,\n    &::after {\n      position: absolute;\n      top: 0;\n      left: 50%;\n      display: block;\n      width: 1px;\n      height: 1rem;\n      margin-top: 0.25rem;\n      background-color: var(--color-text);\n      border-radius: 50%;\n      content: '';\n      transition: background-color 0.4s ease;\n    }\n\n    &::before {\n      transform: rotate(45deg);\n    }\n\n    &::after {\n      transform: rotate(-45deg);\n    }\n  }\n}\n\n@keyframes open {\n  from {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n}\n\n@keyframes close {\n  from {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n\n  to {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ message }}    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnackbarData.html":{"url":"interfaces/SnackbarData.html","title":"interface - SnackbarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnackbarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/components/snackbar/snackbar.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     \"gray\" | \"green\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"gray\" | \"green\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SnackbarData {\n  color: 'gray' | 'green';\n  message: string;\n  duration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarOutletComponent.html":{"url":"components/SnackbarOutletComponent.html","title":"component - SnackbarOutletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnackbarOutletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar-outlet\n            \n\n            \n                styleUrls\n                ./snackbar-outlet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snackbar-outlet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackbars$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trackSnackbarTuple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        trackSnackbarTuple\n                        \n                    \n                \n            \n            \n                \ntrackSnackbarTuple(_index: number, undefined: [string, SnackbarData])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                [string, SnackbarData]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackbars$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.snackbarService.snackbars$\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { SnackbarData } from '../snackbar/snackbar.interface';\n\n@Component({\n  selector: 'app-snackbar-outlet',\n  templateUrl: './snackbar-outlet.component.html',\n  styleUrls: ['./snackbar-outlet.component.scss'],\n})\nexport class SnackbarOutletComponent {\n  public snackbars$ = this.snackbarService.snackbars$;\n\n  constructor(private snackbarService: SnackbarService) {}\n\n  trackSnackbarTuple(_index: number, [uid, _]: [string, SnackbarData]) {\n    return uid;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./snackbar-outlet.component.scss\n                \n                :host {\n  position: absolute;\n  z-index: 50;\n  top: 74px;\n  right: 0;\n  display: flex;\n  overflow: hidden;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-right: 10px;\n}\n\napp-snackbar:not(:last-child) {\n  margin-bottom: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarOutletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/snackbar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackbars$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                closeAll\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/snackbar.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        show\n                        \n                    \n                \n            \n            \n                \n                    \n                    show(message: string, color: \"gray\" | \"green\", duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    color\n                                    \n                                            \"gray\" | \"green\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'gray'\n                                    \n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        4000\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackbars$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Map())\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/snackbar.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SnackbarData } from '@main/components/snackbar/snackbar.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { BehaviorSubject } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  constructor() {}\n\n  public snackbars$ = new BehaviorSubject>(new Map());\n\n  public show(message: string, color: 'gray' | 'green' = 'gray', duration: number = 4000) {\n    const data = { message, duration, color };\n    const uid = uuid();\n\n    const map = this.snackbars$.value;\n    map.set(uid, data);\n\n    this.snackbars$.next(map);\n  }\n\n  public close(uid: string) {\n    const map = this.snackbars$.value;\n    map.delete(uid);\n  }\n\n  public closeAll() {\n    this.snackbars$.next(new Map());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Status.html":{"url":"interfaces/Status.html","title":"interface - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/status.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Task status/column interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            begin\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            final\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        begin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        begin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status begin (used to determine if the task is in progress or not). If begin is true,\nthe work on the task does not started yet.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         color\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         color\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status color (used to display as the background of the labels)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        final\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        final:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status final (used to determine if the task is done or not)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status id (unique per database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status name (Header displayed in labels or on the top of the columns)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { color } from '../../_main/interfaces/color.interface';\nimport { Task } from './task.interface';\n\n/**\n * Task status/column interface\n */\nexport interface Status {\n  /**\n   * Status id (unique per database)\n   */\n  id: number;\n\n  /**\n   * Status name (Header displayed in labels or on the top of the columns)\n   */\n  name: string;\n\n  /**\n   * Status color (used to display as the background of the labels)\n   */\n  color: color;\n\n  /**\n   * Status final (used to determine if the task is done or not)\n   */\n  final: boolean;\n\n  /**\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\n   * the work on the task does not started yet.\n   */\n  begin: boolean;\n}\n\n/**\n * Status with task interface - status column with tasks\n */\nexport interface StatusWithTasks extends Status {\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StatusColorPipe.html":{"url":"pipes/StatusColorPipe.html","title":"pipe - StatusColorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StatusColorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/status-color.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        statusColor\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value:  | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/status-color.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                             | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '@tasks/interfaces/status.interface';\n\n@Pipe({\n  name: 'statusColor',\n})\nexport class StatusColorPipe implements PipeTransform {\n  transform(value: Status['name'] | undefined): any {\n    switch (value) {\n      case 'TO DO':\n      case 'To Do':\n        return '#4A5465';\n      case 'IN PROGRESS':\n      case 'In Progress':\n        return '#f39c12';\n      case 'DONE':\n      case 'Done':\n        return '#2ECC71';\n      default:\n        return '#4A5465';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusLabelComponent.html":{"url":"components/StatusLabelComponent.html","title":"component - StatusLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/status-label/status-label.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n            \n                selector\n                app-status-label\n            \n\n            \n                styleUrls\n                ./status-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isOpen$\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                overlay\n                            \n                            \n                                    Public\n                                statuses$\n                            \n                            \n                                statusMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                statuses\n                            \n                            \n                                statusId\n                            \n                            \n                                taskId\n                            \n                            \n                                variant\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    statuses\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statuses\n                    \n                \n                \n                    \n                        Type :         Status[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statusId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"small\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('overlay')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statuses$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        statuses\n                    \n                \n\n\n                \n                    \n                        setstatuses(statuses: Status[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            statuses\n                                                    \n                                                            \n                                                                            Status[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:43\n                                \n                            \n\n                \n                    \n                        setisOpen(val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { TaskService } from '@tasks/services/task.service';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport { BehaviorSubject, filter, fromEvent, take } from 'rxjs';\n\n@Component({\n  selector: 'app-status-label',\n  templateUrl: './status-label.component.html',\n  styleUrls: ['./status-label.component.scss'],\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\nexport class StatusLabelComponent extends ControlAccessor {\n  @Input() variant: 'default' | 'small' = 'default';\n  @Input() projectId!: number;\n  @Input() statusId!: number;\n  @Input() taskId?: number;\n  @Input() set statuses(statuses: Status[]) {\n    this.statuses$.next(statuses);\n    this.statusMap = statuses.reduce((acc, status) => {\n      acc.set(status.id, status);\n      return acc;\n    }, new Map());\n  }\n\n  statusMap = new Map();\n\n  constructor(public override ngControl: NgControl, private taskService: TaskService) {\n    super(ngControl);\n  }\n\n  @ViewChild('overlay') overlay!: ElementRef;\n\n  public statuses$ = new BehaviorSubject([]);\n  public readonly isOpen$ = new BehaviorSubject(false);\n\n  public set isOpen(val: boolean) {\n    this.isOpen$.next(val);\n  }\n\n  public get isOpen() {\n    return this.isOpen$.value;\n  }\n\n  public open() {\n    setTimeout(() => {\n      fromEvent(document, 'click')\n        .pipe(\n          take(1),\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\n        )\n        .subscribe(() => this.close());\n      this.isOpen$.next(true);\n    });\n  }\n\n  public close() {\n    this.isOpen$.next(false);\n  }\n\n  public toggle() {\n    if (this.isOpen) {\n      return this.close();\n    }\n    return this.open();\n  }\n\n  public select(status: Status) {\n    if (this.taskId && this.projectId)\n      this.taskService.changeStatus(status.id, this.taskId, this.projectId).subscribe(() => {\n        this.close();\n        location.reload();\n      });\n  }\n}\n\n    \n\n    \n        \n\n  {{ statusMap.get(statusId)?.name }}\n\n\n\n  \n    \n      {{ status.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./status-label.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  width: 100%;\n  padding: 0 1rem;\n  margin: 0 1rem;\n}\n\n.status {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  max-width: 250px;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-secondary-400);\n  border-radius: var(--border-radius);\n  text-transform: uppercase;\n\n  &.small {\n    width: auto;\n    height: auto;\n    padding: 0.25rem 0.75rem;\n  }\n}\n\n.statuses-overlay {\n  padding: 1rem;\n  padding: 0.5rem;\n  background-color: var(--color-secondary-500);\n  border-radius: var(--border-radius);\n\n  li {\n    display: flex;\n    height: 40px;\n    align-items: center;\n    justify-content: center;\n    padding: 0.5rem 1rem;\n    background-color: var(--color-secondary-500);\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n    cursor: pointer;\n    font-weight: bold;\n    text-transform: uppercase;\n    transition: background-color 0.4s ease;\n\n    &:not(:last-child) {\n      margin-bottom: 0.5rem;\n    }\n\n    &:hover {\n      background-color: var(--color-secondary-400);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ statusMap.get(statusId)?.name }}            {{ status.name }}      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatusLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusService.html":{"url":"injectables/StatusService.html","title":"injectable - StatusService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/services/status.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                listWithTasks\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/services/status.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        board\n                        \n                    \n                \n            \n            \n                \n                    \n                    board(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:39\n                \n            \n\n\n            \n                \n                    Creates new status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the created status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:59\n                \n            \n\n\n            \n                \n                    Deletes status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(projectId: number, statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:29\n                \n            \n\n\n            \n                \n                    Get status information\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to get status\n\n                                    \n                                \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status id needed to get status information\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:19\n                \n            \n\n\n            \n                \n                    Get list of statuses\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable with list of statuses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        listWithTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    listWithTasks(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:49\n                \n            \n\n\n            \n                \n                    Updates status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the updated status\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Task } from '@tasks/interfaces/task.interface';\nimport { combineLatest, map, Observable } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Status, StatusWithTasks } from '../interfaces/status.interface';\nimport { TaskService } from './task.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StatusService {\n  constructor(private apiService: ApiService, private taskService: TaskService) {}\n\n  /**\n   * Get list of statuses\n   * @param projectId Project id needed to create status\n   * @returns Request observable with list of statuses\n   */\n  public list(projectId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/status/`);\n  }\n\n  /**\n   * Get status information\n   * @param statusId Status id needed to get status information\n   * @param projectId Project id needed to get status\n   * @returns Request observable with the status\n   */\n  public get(projectId: number, statusId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/status/${statusId}`);\n  }\n\n  /**\n   * Creates new status\n   * @param status Status to create\n   * @param projectId Project id needed to create status\n   * @returns Request observable with the created status\n   */\n  public create(projectId: number, status: Status): Observable {\n    return this.apiService.post(`/project/${projectId}/status/`, { body: status });\n  }\n\n  /**\n   * Updates status\n   * @param status Status to update\n   * @param projectId Project id needed to create status\n   * @returns Request observable with the updated status\n   */\n  public update(projectId: number, status: Status): Observable {\n    return this.apiService.put(`/project/${projectId}/status/${status.id}`, { body: status });\n  }\n\n  /**\n   * Deletes status\n   * @param status Status id to delete\n   * @param projectId Project id needed to create status\n   * @returns Request observable\n   */\n  public delete(projectId: number, status: Status): Observable {\n    return this.apiService.delete(`/project/${projectId}/status/${status.id}`);\n  }\n\n  public listWithTasks(projectId: number): Observable {\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\n      map(([statuses, tasks]) => {\n        statuses.forEach((status) => {\n          (status as StatusWithTasks).tasks = tasks.filter((task) => task.statusId === status.id);\n        });\n        return statuses as StatusWithTasks[];\n      }),\n    );\n  }\n\n  public board(projectId: number): Observable {\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\n      map(([statuses, tasks]) => {\n        const board: [Task | string, StatusWithTasks[]][] = [];\n        const OTHER = ['OTHER', statuses.map((s) => ({ ...s, tasks: [] }))] as [\n          string,\n          StatusWithTasks[],\n        ];\n\n        for (const task of tasks) {\n          if (task.subTasks?.length) {\n            const statusesWithSubtasks = statuses.map((status) => ({\n              ...status,\n              tasks: task.subTasks?.filter((subtask) => subtask.statusId === status.id) || [],\n            }));\n            board.push([task, statusesWithSubtasks]);\n          } else {\n            let status = OTHER[1].find((status) => status.id === task.statusId)!;\n            if (!status.tasks) {\n              status.tasks = [];\n            }\n            status.tasks.push(task);\n          }\n        }\n\n        board.push(OTHER);\n        return board;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StatusWithTasks.html":{"url":"interfaces/StatusWithTasks.html","title":"interface - StatusWithTasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StatusWithTasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/status.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Status with task interface - status column with tasks\n\n            \n\n            \n                Extends\n            \n            \n                        Status\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tasks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { color } from '../../_main/interfaces/color.interface';\nimport { Task } from './task.interface';\n\n/**\n * Task status/column interface\n */\nexport interface Status {\n  /**\n   * Status id (unique per database)\n   */\n  id: number;\n\n  /**\n   * Status name (Header displayed in labels or on the top of the columns)\n   */\n  name: string;\n\n  /**\n   * Status color (used to display as the background of the labels)\n   */\n  color: color;\n\n  /**\n   * Status final (used to determine if the task is done or not)\n   */\n  final: boolean;\n\n  /**\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\n   * the work on the task does not started yet.\n   */\n  begin: boolean;\n}\n\n/**\n * Status with task interface - status column with tasks\n */\nexport interface StatusWithTasks extends Status {\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Story.html":{"url":"classes/Story.html","title":"class - Story","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Story\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/story.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Private\n                                _story\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCode\n                            \n                            \n                                    Public\n                                addDefaultTemplate\n                            \n                            \n                                    Public\n                                addDescription\n                            \n                            \n                                    Public\n                                addProps\n                            \n                            \n                                    Public\n                                addTemplate\n                            \n                            \n                                    Public\n                                mergeConfig\n                            \n                            \n                                    Public\n                                story\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    props\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StoryConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stories/helpers/classes/story.class.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StoryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StoryConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/stories/helpers/classes/story.class.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _story\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StoryFn\n\n                    \n                \n                    \n                        \n                                Defined in src/stories/helpers/classes/story.class.ts:30\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCode(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addDefaultTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    addDefaultTemplate()\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    addDescription(description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addProps\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProps(props: Props)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Props\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    addTemplate(template: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        mergeConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeConfig(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        story\n                        \n                    \n                \n            \n            \n                \n                    \n                    story()\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story.class.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         StoryFn\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        props\n                    \n                \n\n                \n                    \n                        getprops()\n                    \n                \n                            \n                                \n                                    Defined in src/stories/helpers/classes/story.class.ts:125\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FormControl } from '@angular/forms';\nimport { componentWrapperDecorator } from '@storybook/angular';\nimport { merge, omit } from 'lodash-es';\nimport { exposeAllPossibilities } from '../component-content-decorator.helper';\nimport { StoryPageConfig } from './story-page-config.class';\nimport { StoryTemplate } from './story-template.class';\nimport { StoryFn } from '@storybook/angular';\nimport { componentTemplateDecorator } from '../functions/component-template-decorator.function';\n\nexport type Props = Partial & {\n  formControl?: FormControl;\n  content?: string;\n};\n\nexport interface StoryConfig {\n  config: StoryPageConfig;\n  template: StoryTemplate;\n  description?: string;\n  multiple?: {\n    prop: string;\n    options: any[];\n  };\n  props?: Props;\n  code?: string;\n  html?: string;\n}\n\nexport class Story {\n  private _config: StoryConfig;\n  private _story: StoryFn;\n\n  constructor(config: StoryConfig) {\n    this._config = config;\n    this._story = config.template.template();\n\n    if (config.multiple) {\n      exposeAllPossibilities(\n        this._story,\n        config.config.selector,\n        config.multiple.prop,\n        config.multiple.options,\n      );\n    }\n\n    if (config.description) {\n      this.addDescription(config.description);\n    }\n\n    if (config.code) {\n      this.addCode(config.code);\n    }\n\n    if (config.html) {\n      this.addTemplate(config.html);\n    } else if (!config.multiple) {\n      this.addDefaultTemplate();\n    }\n\n    if (this.props) {\n      this.addProps(this.props);\n    }\n  }\n\n  public mergeConfig(config: any) {\n    merge(this._story, config);\n  }\n\n  public addDescription(description: string) {\n    this.mergeConfig({\n      parameters: {\n        docs: {\n          description: {\n            story: description,\n          },\n        },\n      },\n    });\n  }\n\n  public addProps(props: Props) {\n    this.mergeConfig({\n      args: omit(props, ['content']),\n    });\n  }\n\n  public addCode(code: string) {\n    this.mergeConfig({\n      parameters: {\n        docs: {\n          source: {\n            code: code,\n            language: 'html',\n            type: 'auto',\n          },\n        },\n      },\n    });\n  }\n\n  public addTemplate(template: string) {\n    this.mergeConfig({\n      decorators: [componentWrapperDecorator(() => template)],\n      parameters: {\n        docs: {\n          source: {\n            code: template,\n            language: 'html',\n            type: 'auto',\n          },\n        },\n      },\n    });\n  }\n\n  public addDefaultTemplate() {\n    this.mergeConfig({\n      decorators: [\n        componentTemplateDecorator(this.props, {\n          selector: this._config.config.selector,\n        }),\n      ],\n    });\n  }\n\n  public get props() {\n    return merge({}, this._config.props, this._config.template.props);\n  }\n\n  public story() {\n    return this._story;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoryConfig.html":{"url":"interfaces/StoryConfig.html","title":"interface - StoryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/story.class.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            multiple\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            props\n                                        \n                                \n                                \n                                        \n                                            template\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         StoryPageConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StoryPageConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiple:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:         Props\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Props\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        template:     StoryTemplate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StoryTemplate\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl } from '@angular/forms';\nimport { componentWrapperDecorator } from '@storybook/angular';\nimport { merge, omit } from 'lodash-es';\nimport { exposeAllPossibilities } from '../component-content-decorator.helper';\nimport { StoryPageConfig } from './story-page-config.class';\nimport { StoryTemplate } from './story-template.class';\nimport { StoryFn } from '@storybook/angular';\nimport { componentTemplateDecorator } from '../functions/component-template-decorator.function';\n\nexport type Props = Partial & {\n  formControl?: FormControl;\n  content?: string;\n};\n\nexport interface StoryConfig {\n  config: StoryPageConfig;\n  template: StoryTemplate;\n  description?: string;\n  multiple?: {\n    prop: string;\n    options: any[];\n  };\n  props?: Props;\n  code?: string;\n  html?: string;\n}\n\nexport class Story {\n  private _config: StoryConfig;\n  private _story: StoryFn;\n\n  constructor(config: StoryConfig) {\n    this._config = config;\n    this._story = config.template.template();\n\n    if (config.multiple) {\n      exposeAllPossibilities(\n        this._story,\n        config.config.selector,\n        config.multiple.prop,\n        config.multiple.options,\n      );\n    }\n\n    if (config.description) {\n      this.addDescription(config.description);\n    }\n\n    if (config.code) {\n      this.addCode(config.code);\n    }\n\n    if (config.html) {\n      this.addTemplate(config.html);\n    } else if (!config.multiple) {\n      this.addDefaultTemplate();\n    }\n\n    if (this.props) {\n      this.addProps(this.props);\n    }\n  }\n\n  public mergeConfig(config: any) {\n    merge(this._story, config);\n  }\n\n  public addDescription(description: string) {\n    this.mergeConfig({\n      parameters: {\n        docs: {\n          description: {\n            story: description,\n          },\n        },\n      },\n    });\n  }\n\n  public addProps(props: Props) {\n    this.mergeConfig({\n      args: omit(props, ['content']),\n    });\n  }\n\n  public addCode(code: string) {\n    this.mergeConfig({\n      parameters: {\n        docs: {\n          source: {\n            code: code,\n            language: 'html',\n            type: 'auto',\n          },\n        },\n      },\n    });\n  }\n\n  public addTemplate(template: string) {\n    this.mergeConfig({\n      decorators: [componentWrapperDecorator(() => template)],\n      parameters: {\n        docs: {\n          source: {\n            code: template,\n            language: 'html',\n            type: 'auto',\n          },\n        },\n      },\n    });\n  }\n\n  public addDefaultTemplate() {\n    this.mergeConfig({\n      decorators: [\n        componentTemplateDecorator(this.props, {\n          selector: this._config.config.selector,\n        }),\n      ],\n    });\n  }\n\n  public get props() {\n    return merge({}, this._config.props, this._config.template.props);\n  }\n\n  public story() {\n    return this._story;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StoryPageConfig.html":{"url":"classes/StoryPageConfig.html","title":"class - StoryPageConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StoryPageConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/story-page-config.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _meta\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addDecorators\n                            \n                            \n                                    Private\n                                disableEditingFunctions\n                            \n                            \n                                    Public\n                                meta\n                            \n                            \n                                    Private\n                                propertyPredicate\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selector\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(meta: ExtendedMeta)\n                    \n                \n                        \n                            \n                                Defined in src/stories/helpers/classes/story-page-config.class.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        ExtendedMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtendedMeta\n\n                    \n                \n                    \n                        \n                                Defined in src/stories/helpers/classes/story-page-config.class.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addDecorators\n                        \n                    \n                \n            \n            \n                \n                    \n                    addDecorators(decorators)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-page-config.class.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    decorators\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        disableEditingFunctions\n                        \n                    \n                \n            \n            \n                \n                    \n                    disableEditingFunctions()\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-page-config.class.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        meta\n                        \n                    \n                \n            \n            \n                \n                    \n                    meta()\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-page-config.class.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Meta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        propertyPredicate\n                        \n                    \n                \n            \n            \n                \n                    \n                    propertyPredicate(property: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-page-config.class.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"delete\" | \"readonly\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setTitle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-page-config.class.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selector\n                    \n                \n\n                \n                    \n                        getselector()\n                    \n                \n                            \n                                \n                                    Defined in src/stories/helpers/classes/story-page-config.class.ts:74\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { NgControl } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainModule } from '@main/_main.module';\nimport { Meta, moduleMetadata } from '@storybook/angular';\nimport { NgModuleMetadata } from '@storybook/angular/dist/ts3.9/client/preview/types';\nimport { merge } from 'lodash-es';\nimport { getAllProperties } from '../functions/get-all-properties.function';\n\nexport interface ExtendedMeta extends Meta {\n  metadata?: Partial;\n  selector: string;\n}\n\nconst DEFAULT_METADATA: Partial = {\n  imports: [MainModule, BrowserAnimationsModule],\n  providers: [NgControl],\n};\n\nconst IGNORED_PROPERTIES = getAllProperties({});\n\nexport class StoryPageConfig {\n  private _meta: ExtendedMeta;\n\n  constructor(meta: ExtendedMeta) {\n    this._meta = meta;\n\n    this._meta.decorators = [moduleMetadata(merge({}, DEFAULT_METADATA, this._meta.metadata))];\n    this.disableEditingFunctions();\n  }\n\n  private disableEditingFunctions() {\n    if (!this._meta.argTypes) {\n      this._meta.argTypes = {};\n    }\n\n    const properties = getAllProperties(this._meta.component.prototype);\n    console.log(properties);\n    for (const [property, predicate] of properties.map(\n      (p) => [p, this.propertyPredicate(p)] as [string, any],\n    )) {\n      if (typeof this._meta.component.prototype[property] === 'function') {\n        switch (predicate) {\n          case 'delete':\n            this._meta.argTypes[property] = { table: { disable: true } };\n            break;\n          case 'readonly':\n            this._meta.argTypes[property] = { control: false };\n            break;\n        }\n      }\n    }\n  }\n\n  private propertyPredicate(property: string) {\n    if (property[0] === '_') return 'delete';\n    if (property.startsWith('ng')) return 'delete';\n    return !IGNORED_PROPERTIES.includes(property) ? 'readonly' : null;\n  }\n\n  public setTitle(title: string) {\n    this._meta.title = title;\n    return this;\n  }\n\n  public addDecorators(decorators: Meta['decorators']) {\n    if (!this._meta.decorators) {\n      this._meta.decorators = [];\n    }\n\n    this._meta.decorators = ([] as any[]).concat(this._meta.decorators, decorators);\n    return this;\n  }\n\n  public get selector() {\n    return this._meta.selector;\n  }\n\n  public meta() {\n    return this._meta as Meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StoryTemplate.html":{"url":"classes/StoryTemplate.html","title":"class - StoryTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StoryTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/classes/story-template.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _args\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    props\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args: Props)\n                    \n                \n                        \n                            \n                                Defined in src/stories/helpers/classes/story-template.class.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        Props\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _args\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Props\n\n                    \n                \n                    \n                        \n                                Defined in src/stories/helpers/classes/story-template.class.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        template\n                        \n                    \n                \n            \n            \n                \n                    \n                    template()\n                \n            \n\n\n            \n                \n                    Defined in src/stories/helpers/classes/story-template.class.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        props\n                    \n                \n\n                \n                    \n                        getprops()\n                    \n                \n                            \n                                \n                                    Defined in src/stories/helpers/classes/story-template.class.ts:12\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { merge } from 'lodash-es';\nimport { Props } from './story.class';\n\nexport class StoryTemplate {\n  private _args: Props;\n\n  constructor(args: Props) {\n    const controlObject = args.formControl ? { formControl: args.formControl } : {};\n    this._args = merge({}, controlObject, args);\n  }\n\n  public get props() {\n    return this._args;\n  }\n\n  public template() {\n    return ((args: C) => ({\n      props: merge({}, args),\n    })).bind({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/task.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Project task interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            assigneeId\n                                        \n                                \n                                \n                                        \n                                            deadline\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            estimatedDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mergedPullList\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parentTaskId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pull\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subTasks\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assigneeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assigneeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional user id who is assigned to task\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deadline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deadline:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task deadline to be completed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estimatedDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estimatedDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task estimated date to work on it\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task id (unique per project)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional link to the GitHub issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mergedPullList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mergedPullList:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional merged pull requests list\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentTaskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentTaskId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Parent task id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pull\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pull:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional link to the GitHub pull request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Status id (unique per database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subTasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of subtasks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task type (ex. EPIC, USER_STORY)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\n\n/**\n * Project task interface\n */\nexport interface Task {\n  /**\n   * Task id (unique per project)\n   */\n  id: number;\n\n  /**\n   * Task name\n   */\n  name: string;\n\n  /**\n   * Task description\n   */\n  description: string;\n\n  /**\n   * Task deadline to be completed\n   */\n  deadline: Date;\n\n  /**\n   * Task estimated date to work on it\n   */\n  estimatedDate: Date;\n\n  /**\n   * Status id (unique per database)\n   */\n  statusId?: number;\n\n  /**\n   * Parent task id\n   */\n  parentTaskId?: number;\n\n  /**\n   * List of subtasks\n   */\n  subTasks?: Task[];\n\n  /**\n   * Optional link to the GitHub issue\n   */\n  issue?: string;\n\n  /**\n   * Task type (ex. EPIC, USER_STORY)\n   */\n  type: string;\n\n  /**\n   * Optional link to the GitHub pull request\n   */\n  pull?: string;\n\n  /**\n   * Optional merged pull requests list\n   */\n  mergedPullList?: String[];\n\n  /**\n   * Optional user id who is assigned to task\n   */\n  assigneeId?: number;\n}\n\n/**\n * Extended project task interface\n */\nexport interface TaskWithAdditionalData extends Omit {\n  /**\n   * Project identifier\n   */\n  projectId: number;\n\n  /**\n   * Workspace identifier\n   */\n  workspaceId: string;\n\n  /**\n   * Boolean to determine if task is connected to GitHub issue\n   */\n  connectWithIssueOnGitHub: boolean;\n\n  /**\n   * Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n   */\n  issueAttachGithub: boolean;\n\n  /**\n   * Boolean to determine if task is connected to GitHub pull request\n   */\n  connectWithPullRequestOnGitHub: boolean;\n\n  /**\n   * GitHub pull to which the task is connected to\n   */\n  pull: GitPull;\n\n  /**\n   * GitHub issue to which the task is connected to\n   */\n  issue: GitIssue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDialog.html":{"url":"components/TaskDialog.html","title":"component - TaskDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/dialogs/task/task.dialog.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-dialog\n            \n\n            \n                styleUrls\n                ./task.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./task.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                isGitHubIntegrationAvailable\n                            \n                            \n                                    Public\n                                issueList$\n                            \n                            \n                                    Public\n                                projectList$\n                            \n                            \n                                    Public\n                                pullList$\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                subTaskTypes\n                            \n                            \n                                TaskDialogVariant\n                            \n                            \n                                    Public\n                                taskPriorities\n                            \n                            \n                                    Public\n                                taskTypes\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                clearGitHubIntegrationFields\n                            \n                            \n                                confirm\n                            \n                            \n                                loadParamsFromUrl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onProjectIdChange\n                            \n                            \n                                onWorkspaceIdChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: TaskDialogData, dialogRef: MatDialogRef, statusService: StatusService, workspaceService: WorkspaceService, gitIntegrationService: GitIntegrationService, routerExtensions: RouterExtensionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        TaskDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerExtensions\n                                                  \n                                                        \n                                                                        RouterExtensionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearGitHubIntegrationFields\n                        \n                    \n                \n            \n            \n                \nclearGitHubIntegrationFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadParamsFromUrl\n                        \n                    \n                \n            \n            \n                \nloadParamsFromUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onProjectIdChange\n                        \n                    \n                \n            \n            \n                \nonProjectIdChange(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWorkspaceIdChange\n                        \n                    \n                \n            \n            \n                \nonWorkspaceIdChange(workspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isGitHubIntegrationAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pullList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subTaskTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Enum.entries(SubTaskType)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TaskDialogVariant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TaskDialogVariant\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskPriorities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(TaskPriority)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Enum.entries(TaskType)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { Enum } from '@main/classes/enum.class';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { TaskPriority } from '@tasks/enums/task-priority.enum';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\nimport { Task } from '../../interfaces/task.interface';\n\nexport enum TaskDialogVariant {\n  CREATE = 'create',\n  EDIT = 'edit',\n}\n\nexport interface TaskDialogData {\n  workspaceId: number;\n  projectId?: number;\n  variant: TaskDialogVariant;\n  task?: Partial;\n  subtask?: boolean;\n}\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task.dialog.html',\n  styleUrls: ['./task.dialog.scss'],\n})\nexport class TaskDialog implements OnInit {\n  TaskDialogVariant = TaskDialogVariant;\n\n  public taskTypes = Enum.entries(TaskType);\n  public subTaskTypes = Enum.entries(SubTaskType);\n  public taskPriorities = Object.values(TaskPriority);\n\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n  public projectList$: Observable = new BehaviorSubject([]);\n  public issueList$!: Observable;\n  public pullList$!: Observable;\n\n  public isGitHubIntegrationAvailable: boolean = false;\n\n  public form = new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\n    private dialogRef: MatDialogRef,\n    private statusService: StatusService,\n    private workspaceService: WorkspaceService,\n    private gitIntegrationService: GitIntegrationService,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId, task } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n    if (task) this.form.patchValue(task);\n\n    this.workspaceList$ = this.workspaceService.list();\n\n    this.form.get('workspaceId')?.valueChanges.subscribe(this.onWorkspaceIdChange.bind(this));\n    this.form.get('projectId')?.valueChanges.subscribe(this.onProjectIdChange.bind(this));\n\n    if (workspaceId) {\n      this.onWorkspaceIdChange(workspaceId);\n    }\n\n    if (projectId) {\n      this.onProjectIdChange(projectId);\n    }\n  }\n\n  onWorkspaceIdChange(workspaceId: number) {\n    this.projectList$ = this.projectList$ = this.workspaceService\n      .get(workspaceId)\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\n  }\n\n  onProjectIdChange(projectId: number) {\n    this.statusList$ = this.statusService.list(projectId);\n    this.clearGitHubIntegrationFields();\n\n    this.statusList$.subscribe((statuses) => {\n      const statusId = statuses.find((status) => status.begin)?.id;\n\n      if (!statusId) return;\n\n      this.form.patchValue({ statusId });\n    });\n\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\n      this.isGitHubIntegrationAvailable = value;\n\n      if (this.isGitHubIntegrationAvailable) {\n        this.issueList$ = this.gitIntegrationService.gitHubIssueList(projectId);\n        this.pullList$ = this.gitIntegrationService.gitHubPullList(projectId);\n      } else {\n        this.issueList$ = new BehaviorSubject([]);\n        this.pullList$ = new BehaviorSubject([]);\n      }\n    });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  clearGitHubIntegrationFields() {\n    this.form.patchValue({\n      issueNumberGitHub: null,\n      issueAttachGithub: false,\n      connectWithIssueOnGitHub: false,\n    });\n  }\n\n  confirm() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    if (formValues.connectWithIssueOnGitHub && !formValues.issueAttachGithub) {\n      formValues.createIssue = true;\n    } else {\n      formValues.createIssue = false;\n    }\n\n    console.log(formValues);\n\n    this.dialogRef.close(formValues);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Edit task: {{ data.task?.name }}\nCreate new task\nCreate new subtask\n\n  \n\n    \n    \n      {{ workspace.name }}\n      \n    \n\n    \n    \n      \n        {{project.name}}\n        \n      \n    \n\n    \n    \n      {{ type[0] | taskType\n        }}\n      \n    \n\n    \n    \n    \n\n    \n    \n\n    \n    \n      {{ status.name }}\n      \n    \n\n    \n    \n      {{\n        priority | taskPriority }}\n    \n\n    \n    \n    \n\n    \n    \n    \n\n    \n    Create or attach\n      GitHub issue simultaneously\n\n    \n      \n        Create\n        Attach\n      \n\n      \n        {{issue.title}}\n      \n    \n\n    \n    \n      Connect with GitHub pull request\n    \n\n    \n      \n        {{pullRequest.title}}\n        \n      \n    \n\n  \n\n\n  Cancel\n  Create\n  \n  Save changes\n  \n\n\n    \n\n    \n                \n                    ./task.dialog.scss\n                \n                form {\n  >* {\n    width: 100%;\n  }\n\n  app-textarea {\n    margin-bottom: 2rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Edit task: {{ data.task?.name }}Create new taskCreate new subtask                {{ workspace.name }}                                {{project.name}}                                {{ type[0] | taskType        }}                                            {{ status.name }}                        {{        priority | taskPriority }}                                    Create or attach      GitHub issue simultaneously                  Create        Attach                    {{issue.title}}                        Connect with GitHub pull request                      {{pullRequest.title}}                      Cancel  Create    Save changes  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskDialogData.html":{"url":"interfaces/TaskDialogData.html","title":"interface - TaskDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/dialogs/task/task.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subtask\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task\n                                        \n                                \n                                \n                                        \n                                            variant\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtask\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtask:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         TaskDialogVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TaskDialogVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { Enum } from '@main/classes/enum.class';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { TaskPriority } from '@tasks/enums/task-priority.enum';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\nimport { Task } from '../../interfaces/task.interface';\n\nexport enum TaskDialogVariant {\n  CREATE = 'create',\n  EDIT = 'edit',\n}\n\nexport interface TaskDialogData {\n  workspaceId: number;\n  projectId?: number;\n  variant: TaskDialogVariant;\n  task?: Partial;\n  subtask?: boolean;\n}\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task.dialog.html',\n  styleUrls: ['./task.dialog.scss'],\n})\nexport class TaskDialog implements OnInit {\n  TaskDialogVariant = TaskDialogVariant;\n\n  public taskTypes = Enum.entries(TaskType);\n  public subTaskTypes = Enum.entries(SubTaskType);\n  public taskPriorities = Object.values(TaskPriority);\n\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n  public projectList$: Observable = new BehaviorSubject([]);\n  public issueList$!: Observable;\n  public pullList$!: Observable;\n\n  public isGitHubIntegrationAvailable: boolean = false;\n\n  public form = new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\n    private dialogRef: MatDialogRef,\n    private statusService: StatusService,\n    private workspaceService: WorkspaceService,\n    private gitIntegrationService: GitIntegrationService,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId, task } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n    if (task) this.form.patchValue(task);\n\n    this.workspaceList$ = this.workspaceService.list();\n\n    this.form.get('workspaceId')?.valueChanges.subscribe(this.onWorkspaceIdChange.bind(this));\n    this.form.get('projectId')?.valueChanges.subscribe(this.onProjectIdChange.bind(this));\n\n    if (workspaceId) {\n      this.onWorkspaceIdChange(workspaceId);\n    }\n\n    if (projectId) {\n      this.onProjectIdChange(projectId);\n    }\n  }\n\n  onWorkspaceIdChange(workspaceId: number) {\n    this.projectList$ = this.projectList$ = this.workspaceService\n      .get(workspaceId)\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\n  }\n\n  onProjectIdChange(projectId: number) {\n    this.statusList$ = this.statusService.list(projectId);\n    this.clearGitHubIntegrationFields();\n\n    this.statusList$.subscribe((statuses) => {\n      const statusId = statuses.find((status) => status.begin)?.id;\n\n      if (!statusId) return;\n\n      this.form.patchValue({ statusId });\n    });\n\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\n      this.isGitHubIntegrationAvailable = value;\n\n      if (this.isGitHubIntegrationAvailable) {\n        this.issueList$ = this.gitIntegrationService.gitHubIssueList(projectId);\n        this.pullList$ = this.gitIntegrationService.gitHubPullList(projectId);\n      } else {\n        this.issueList$ = new BehaviorSubject([]);\n        this.pullList$ = new BehaviorSubject([]);\n      }\n    });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  clearGitHubIntegrationFields() {\n    this.form.patchValue({\n      issueNumberGitHub: null,\n      issueAttachGithub: false,\n      connectWithIssueOnGitHub: false,\n    });\n  }\n\n  confirm() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    if (formValues.connectWithIssueOnGitHub && !formValues.issueAttachGithub) {\n      formValues.createIssue = true;\n    } else {\n      formValues.createIssue = false;\n    }\n\n    console.log(formValues);\n\n    this.dialogRef.close(formValues);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListPage.html":{"url":"components/TaskListPage.html","title":"component - TaskListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/task-list/task-list.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n            \n                styleUrls\n                ./task-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assigneeControl\n                            \n                            \n                                expandedSubtasks\n                            \n                            \n                                faCheck\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Public\n                                filtersControl\n                            \n                            \n                                isSubtasksRow\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                statusList\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                taskList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                createSubtask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                getStatus\n                            \n                            \n                                    Public\n                                getSubtasksContainerHeight\n                            \n                            \n                                initAssigneeChanging\n                            \n                            \n                                populateSubtasks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, taskService: TaskService, statusService: StatusService, projectService: ProjectService, dialogService: DialogService, memberService: MemberService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date?: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:123\n                \n            \n\n\n            \n                \n                    TODO: Move this method to service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSubtasksContainerHeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubtasksContainerHeight(taskId: number, element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initAssigneeChanging\n                        \n                    \n                \n            \n            \n                \ninitAssigneeChanging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populateSubtasks\n                        \n                    \n                \n            \n            \n                \npopulateSubtasks(taskList: Task[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        assigneeControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandedSubtasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ESet()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filtersControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubtasksRow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '@auth/services/user.service';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport {\n  faCheck,\n  faChevronRight,\n  faCodeCommit,\n  faCodePullRequest,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { ESet } from '@main/classes/e-set.class';\nimport { Filters } from '@main/classes/filters.class';\nimport { Filter } from '@main/interfaces/filters.interface';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskDialog, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Task } from '@tasks/interfaces/task.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { map, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.page.html',\n  styleUrls: ['./task-list.page.scss'],\n})\nexport class TaskListPage {\n  faPlus = faPlus;\n  faChevronRight = faChevronRight;\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  public projectId!: number;\n\n  public taskList$!: Observable;\n  public statusList$!: Observable;\n  public project$!: Observable;\n  public members$!: Observable>;\n  public assigneeControl = new FormControl(null);\n\n  public statusList: Status[] = [];\n\n  public filters: Filter[] = [];\n  public filtersControl = new FormControl();\n\n  isSubtasksRow = (i: number, row: Object) => row.hasOwnProperty('withSubtasks');\n  expandedSubtasks = new ESet();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private taskService: TaskService,\n    private statusService: StatusService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n    private userService: UserService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.projectId = projectId;\n    this.project$ = this.projectService.get(projectId);\n\n    /**\n     * TODO: Use method from service\n     */\n    this.members$ = this.memberService.list(projectId).pipe(\n      map((members) =>\n        members.reduce((acc: Map, member: ProjectMember) => {\n          acc.set(member.user.id, member);\n          return acc;\n        }, new Map()),\n      ),\n    );\n    this.taskList$ = this.taskService.list(projectId);\n    this.statusList$ = this.statusService.list(projectId);\n    this.statusList$.subscribe((list) => {\n      this.statusList = list;\n    });\n    this.userService.getMyself().subscribe((user) => {\n      this.filters.push(Filters.ONLY_MY_TASKS(user.id));\n    });\n\n    this.filtersControl.valueChanges.subscribe((filters) => {\n      this.taskList$ = this.taskService.list(projectId, filters);\n    });\n  }\n\n  getStatus(statusId: number) {\n    return this.statusList.find((status) => status.id === statusId)?.name;\n  }\n\n  changeDate(date?: Date) {\n    if (!date) return '-';\n    let sessionDate = dayjs(date);\n    return sessionDate.format('YYYY-MM-DD, hh:mm A');\n  }\n\n  populateSubtasks(taskList: Task[]) {\n    const populatedTasks = [];\n    const tasks = taskList.filter((task) => !task.parentTaskId);\n\n    for (const task of tasks) {\n      populatedTasks.push(task);\n\n      if (task.subTasks && task.subTasks.length) {\n        populatedTasks.push({ ...task, withSubtasks: true });\n      }\n    }\n\n    return populatedTasks;\n  }\n\n  /**\n   * TODO: Move this method to service\n   */\n  createSubtask(task: Task) {\n    this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: this.projectId,\n        subtask: true,\n        task: {\n          parentTaskId: task.id,\n        },\n      })\n      .afterClosed()\n      .subscribe((task) => {\n        if (!task) return;\n\n        this.taskService.create(this.projectId, task).subscribe(() => {\n          location.reload();\n        });\n      });\n  }\n\n  editTask(task: Task) {\n    this.taskService.openEditTaskDialog(this.projectId, task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  deleteTask(task: Task) {\n    this.taskService.deleteWithConfirmation(this.projectId, task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  initAssigneeChanging() {\n    this.assigneeControl.valueChanges.subscribe((assignee) => {});\n  }\n\n  public getSubtasksContainerHeight(taskId: number, element: HTMLElement) {\n    return `${Number(this.expandedSubtasks.has(taskId)) * element.scrollHeight}px`;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n  \n    Title\n    Status\n    Assignee\n    Deadline\n    \n      \n    \n  \n\n  \n  \n    \n\n      \n      \n        \n          \n          \n          #{{ task.id }}\n          {{ task.name }}\n          \n            \n          \n          \n            \n          \n          \n            \n            \n          \n        \n      \n\n      \n      \n        \n        \n      \n\n      \n      \n        \n        \n      \n\n      \n      {{changeDate(task.deadline)}}\n\n      \n      \n        \n          \n        \n        \n          \n            Edit task\n          \n          \n            Create subtask\n          \n          \n            Delete task\n          \n        \n      \n    \n    \n      \n\n        \n        \n          \n            #{{ subtask.id }}\n            \n            {{ subtask.name }}\n            \n              \n            \n            \n              \n            \n            \n              \n              \n            \n          \n        \n\n        \n        \n          \n        \n\n        \n        \n          \n          \n        \n\n        \n        {{changeDate(subtask.deadline)}}\n\n        \n        \n          \n            \n          \n          \n            \n              Edit task\n            \n            \n              Create subtask\n            \n            \n              Delete task\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-list.page.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  padding: 2rem;\n}\n\n.table {\n  width: 100%;\n  padding-left: 10px;\n}\n\n.table .row .cell .status {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  max-width: 250px;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  padding: 0 1rem;\n  margin: 0 1rem;\n  background-color: var(--color-secondary-400);\n  border-radius: var(--border-radius);\n}\n\n.task-title,\n.subtask-title {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  padding-left: 0.5rem;\n\n  .task-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .task-property {\n    display: flex;\n    margin-left: 1rem;\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.2s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .check {\n      margin-left: 5px;\n      color: #2ecc71;\n    }\n  }\n\n  &>app-icon {\n    margin-right: 1rem;\n    opacity: 0.5;\n    transition: transform .2s ease;\n  }\n}\n\n.subtasks {\n  position: relative;\n  overflow: hidden;\n  max-height: 0;\n  padding-left: 4rem;\n  transition: max-height 0.4s ease;\n\n  .subtask-title {\n    display: flex;\n  }\n\n  .subtask-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .row {\n    position: relative;\n\n    &::before,\n    &::after {\n      position: absolute;\n      top: 0;\n      left: -2.5rem;\n      display: block;\n      content: '';\n    }\n\n    &:last-child {\n      margin-bottom: 1rem;\n    }\n\n    &:not(:last-child)::before {\n      width: 2px;\n      height: calc(100% + 1rem);\n      background-color: var(--color-secondary-400);\n    }\n\n    &::after {\n      width: 29px;\n      height: 29px;\n      border: 2px solid var(--color-secondary-400);\n      border-top-width: 0;\n      border-right-width: 0;\n      border-bottom-left-radius: 50%;\n    }\n  }\n}\n\n.row {\n  cursor: pointer;\n\n  &.expanded {\n    .task-title>app-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.task-type {\n  width: 16px;\n  height: 16px;\n  margin-right: 1rem;\n  border-radius: 4px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Title    Status    Assignee    Deadline                                                                          #{{ task.id }}          {{ task.name }}                                                                                                                                                                                                          {{changeDate(task.deadline)}}                                                                    Edit task                                Create subtask                                Delete task                                                                            #{{ subtask.id }}                        {{ subtask.name }}                                                                                                                                                                                                                                                {{changeDate(subtask.deadline)}}                                                                                    Edit task                                      Create subtask                                      Delete task                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskPriorityIconPipe.html":{"url":"pipes/TaskPriorityIconPipe.html","title":"pipe - TaskPriorityIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskPriorityIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-priority-icon.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskPriorityIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-priority-icon.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskPriorityIcon',\n})\nexport class TaskPriorityIconPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'lowest':\n        return 'cuPriorityLowest';\n      case 'low':\n        return 'cuPriorityLow';\n      case 'medium':\n        return 'cuPriorityMedium';\n      case 'high':\n        return 'cuPriorityHigh';\n      case 'highest':\n        return 'cuPriorityHighest';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskPriorityPipe.html":{"url":"pipes/TaskPriorityPipe.html","title":"pipe - TaskPriorityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskPriorityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-priority.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskPriority\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-priority.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskPriority',\n})\nexport class TaskPriorityPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'lowest':\n        return $localize`Lowest`;\n      case 'low':\n        return $localize`Low`;\n      case 'medium':\n        return $localize`Medium`;\n      case 'high':\n        return $localize`High`;\n      case 'highest':\n        return $localize`Highest`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/services/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assign\n                            \n                            \n                                    Public\n                                changeStatus\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                deleteWithConfirmation\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                openCreateNewTaskDialog\n                            \n                            \n                                    Public\n                                openCreateSubtaskDialog\n                            \n                            \n                                    Public\n                                openEditTaskDialog\n                            \n                            \n                                    Public\n                                schedule\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, gitIntegrationService: GitIntegrationService, dialogService: DialogService, projectService: ProjectService, memberService: MemberService, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/services/task.service.ts:33\n                            \n                        \n\n                \n                    \n                            Default constructor with dependency injection.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ApiService\n\n                                                        \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        assign\n                        \n                    \n                \n            \n            \n                \n                    \n                    assign(userId: number | null, taskId: number, projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:277\n                \n            \n\n\n            \n                \n                    Assign task to specific user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to assign task to (if null, task will be unassigned)\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task to assign\n\n                                    \n                                \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id needed to assign task\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Updated task object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeStatus(statusId: number, taskId: number, projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:290\n                \n            \n\n\n            \n                \n                    Change status of specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        status to change task to\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task to change status of\n\n                                    \n                                \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id needed to change status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Updated task object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(projectId: number, task: TaskWithAdditionalData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:74\n                \n            \n\n\n            \n                \n                    Creates new task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                TaskWithAdditionalData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the created task\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:119\n                \n            \n\n\n            \n                \n                    Deletes task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to delete task\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteWithConfirmation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteWithConfirmation(projectId: number, task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:129\n                \n            \n\n\n            \n                \n                    Opens dialog to delete specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to delete task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number, filters?: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:53\n                \n            \n\n\n            \n                \n                    Get list of tasks\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to list all tasks\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with list of tasks\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateNewTaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateNewTaskDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:185\n                \n            \n\n\n            \n                \n                    Opens dialog to create new task\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        created task, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateSubtaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateSubtaskDialog(projectId: number, parentTask: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:212\n                \n            \n\n\n            \n                \n                    Opens dialog to create new subtask\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update subtask\n\n                                    \n                                \n                                \n                                    parentTask\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent task id to which attach subtask\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        created subtask, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openEditTaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openEditTaskDialog(projectId: number, task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:155\n                \n            \n\n\n            \n                \n                    Opens dialog to edit specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable with updated task, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        schedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    schedule(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:239\n                \n            \n\n\n            \n                \n                    Generates schedule object for specific project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id to generate schedule from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Schedule object with all tasks\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(projectId: number, task: TaskWithAdditionalData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:98\n                \n            \n\n\n            \n                \n                    Updates task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                TaskWithAdditionalData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the updated task\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/services/task.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport { AlertDialogVariant } from '@main/dialogs/alert/alert.dialog';\nimport { Filter } from '@main/interfaces/filters.interface';\nimport { applyFilters } from '@main/operators/apply-filters.operator';\nimport { DialogOutlet, DialogService } from '@main/services/dialog.service';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { Schedule } from '@tasks/interfaces/schedule.interface';\nimport * as dayjs from 'dayjs';\nimport {\n  combineLatest,\n  EMPTY,\n  map,\n  Observable,\n  of,\n  ReplaySubject,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs';\nimport { ApiService } from '../../_main/services/api.service';\nimport { Task, TaskWithAdditionalData } from '../interfaces/task.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private lists = new Map>();\n\n  /**\n   * Default constructor with dependency injection.\n   * @param apiService ApiService\n   */\n  constructor(\n    private apiService: ApiService,\n    private gitIntegrationService: GitIntegrationService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private memberService: MemberService,\n    private snackbarService: SnackbarService,\n  ) {}\n\n  /**\n   * Get list of tasks\n   * @param projectId Project id needed to list all tasks\n   * @returns Request observable with list of tasks\n   */\n  public list(projectId: number, filters?: Filter[]): Observable {\n    let subject: ReplaySubject;\n    if (this.lists.has(projectId)) {\n      subject = this.lists.get(projectId)!;\n    } else {\n      subject = new ReplaySubject();\n      this.lists.set(projectId, subject);\n      this.apiService.get(`/project/${projectId}/task`).subscribe((tasks) => {\n        subject.next(tasks);\n      });\n    }\n\n    return subject.pipe(applyFilters(filters));\n  }\n\n  /**\n   * Creates new task\n   * @param task Task to create\n   * @param projectId Project id needed to create task\n   * @returns Request observable with the created task\n   */\n  public create(projectId: number, task: TaskWithAdditionalData): Observable {\n    return this.apiService.post(`/project/${projectId}/task/`, { body: task }).pipe(\n      switchMap((newTask) => {\n        if (task.connectWithPullRequestOnGitHub) {\n          return this.gitIntegrationService.connectGitHubPull(projectId, newTask.id, task.pull);\n        } else return of(newTask);\n      }),\n      switchMap((newTask) => {\n        if (task.connectWithIssueOnGitHub && task.issue) {\n          return this.gitIntegrationService.connectGitHubIssue(projectId, newTask.id, task.issue);\n        } else return of(newTask);\n      }),\n      tap(() => {\n        this.snackbarService.show($localize`Task created successfully!`);\n      }),\n    );\n  }\n\n  /**\n   * Updates task\n   * @param task Task to update\n   * @param projectId Project id needed to update task\n   * @returns Request observable with the updated task\n   */\n  public update(projectId: number, task: TaskWithAdditionalData): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${task.id}`, { body: task }).pipe(\n      switchMap((newTask) => {\n        if (task.connectWithPullRequestOnGitHub) {\n          return this.gitIntegrationService.connectGitHubPull(projectId, newTask.id, task.pull);\n        } else return of(newTask);\n      }),\n      switchMap((newTask) => {\n        if (task.connectWithIssueOnGitHub) {\n          return this.gitIntegrationService.connectGitHubIssue(projectId, newTask.id, task.issue);\n        } else return of(newTask);\n      }),\n    );\n  }\n\n  /**\n   * Deletes task\n   * @param taskId Task id to delete\n   * @param projectId Project id needed to delete task\n   * @returns Request observable\n   */\n  public delete(projectId: number, taskId: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}`);\n  }\n\n  /**\n   * Opens dialog to delete specific task\n   * @param projectId Project id needed to delete task\n   * @param task Task to delete\n   * @returns Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)\n   */\n  public deleteWithConfirmation(projectId: number, task: Task): Observable {\n    return this.dialogService\n      .confirm({\n        title: $localize`Delete task \"${task.name}\"`,\n        message: $localize`Are you sure you want to delete this task \"${task.name}\"?`,\n        confirmText: $localize`Delete`,\n        cancelText: $localize`Cancel`,\n        variant: AlertDialogVariant.IMPORTANT,\n      })\n      .pipe(\n        switchMap((confirmed) => {\n          if (confirmed) {\n            return this.delete(projectId, task.id).pipe(switchMap(() => of(true)));\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to edit specific task\n   * @param projectId Project id needed to update task\n   * @param task Task to update\n   * @returns Observable with updated task, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openEditTaskDialog(projectId: number, task: Task): Observable {\n    return this.dialogService\n      .open(\n        TaskDialog,\n        {\n          variant: TaskDialogVariant.EDIT,\n          projectId,\n          task,\n        } as TaskDialogData,\n        DialogOutlet.CONTENT_RIGHT,\n      )\n      .afterClosed()\n      .pipe(\n        tap((data) => {\n          console.log(data);\n        }),\n        switchMap((updatedTask: any) => {\n          if (updatedTask) {\n            return this.update(projectId, updatedTask);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to create new task\n   * @returns created task, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openCreateNewTaskDialog() {\n    return this.dialogService\n      .open(\n        TaskDialog,\n        {\n          variant: TaskDialogVariant.CREATE,\n        } as TaskDialogData,\n        DialogOutlet.CONTENT_RIGHT,\n      )\n      .afterClosed()\n      .pipe(\n        switchMap((task: TaskWithAdditionalData) => {\n          if (task) {\n            return this.create(task.projectId, task);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to create new subtask\n   * @param projectId Project id needed to update subtask\n   * @param parentTask Parent task id to which attach subtask\n   * @returns created subtask, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openCreateSubtaskDialog(projectId: number, parentTask: Task): Observable {\n    return this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: projectId,\n        subtask: true,\n        task: {\n          parentTaskId: parentTask.id,\n        },\n      })\n      .afterClosed()\n      .pipe(\n        switchMap((newTask: any) => {\n          if (newTask) {\n            return this.create(projectId, newTask);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Generates schedule object for specific project\n   * @param projectId Project id to generate schedule from\n   * @returns Schedule object with all tasks\n   */\n  public schedule(projectId: number): Observable {\n    return combineLatest([\n      this.list(projectId).pipe(take(1)),\n      this.memberService.list(projectId).pipe(take(1)),\n    ]).pipe(\n      map(([tasks, members]: [tasks: Task[], members: ProjectMember[]]) => {\n        const schedules = [];\n\n        for (const { user } of members) {\n          schedules.push({ user, tasks: new Map() });\n        }\n\n        for (const task of tasks) {\n          const schedule = schedules.find((s) => s.user.id === task.assigneeId);\n\n          if (!schedule) continue;\n\n          if (task.estimatedDate) {\n            schedule.tasks.set(dayjs(task.estimatedDate).format('YYYY-MM-DD'), task);\n          } else {\n            if (!schedule.tasks.has(null)) schedule.tasks.set(null, []);\n\n            schedule.tasks.get(null).push(task);\n          }\n        }\n\n        return schedules;\n      }),\n    );\n  }\n\n  /**\n   * Assign task to specific user\n   * @param userId user to assign task to (if null, task will be unassigned)\n   * @param taskId task to assign\n   * @param projectId project id needed to assign task\n   * @returns Updated task object\n   */\n  public assign(userId: number | null, taskId: number, projectId: number): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${taskId}`, {\n      body: { assigneeId: userId },\n    });\n  }\n\n  /**\n   * Change status of specific task\n   * @param statusId status to change task to\n   * @param taskId task to change status of\n   * @param projectId project id needed to change status\n   * @returns Updated task object\n   */\n  public changeStatus(statusId: number, taskId: number, projectId: number): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${taskId}`, {\n      body: { statusId },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskTypeIconPipe.html":{"url":"pipes/TaskTypeIconPipe.html","title":"pipe - TaskTypeIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskTypeIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-type-icon.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskTypeIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type-icon.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskTypeIcon',\n})\nexport class TaskTypeIconPipe implements PipeTransform {\n  /**\n   * @deprecated\n   */\n  transform(value: any): any {\n    switch (value) {\n      case 'TASK':\n        return 'cuTask';\n      case 'ISSUE':\n        return 'cuIssue';\n      case 'EPIC':\n        return 'cuEpic';\n      case 'USER_STORY':\n        return 'cuUserStory';\n      case 'SUBTASK':\n        return 'cuSubtask';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskTypePipe.html":{"url":"pipes/TaskTypePipe.html","title":"pipe - TaskTypePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskTypePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-type.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskType\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, type?: \"name\" | \"icon\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"name\" | \"icon\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, type: \"color\" | \"name\" | \"icon\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                \"color\" | \"name\" | \"icon\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'name'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport * as Color from 'color';\n\n@Pipe({\n  name: 'taskType',\n})\nexport class TaskTypePipe implements PipeTransform {\n  transform(value: any, type?: 'name' | 'icon'): string;\n  transform(value: any, type: 'color'): Color;\n\n  transform(value: any, type: 'color' | 'name' | 'icon' = 'name'): string | Color {\n    switch (value as TaskType | SubTaskType) {\n      // Task\n      case TaskType.TASK:\n        return {\n          name: $localize`Task`,\n          color: Color.rgb(52, 152, 219),\n          icon: 'cuTask',\n        }[type];\n\n      // User story\n      case TaskType.USER_STORY:\n        return {\n          name: $localize`User story`,\n          color: Color.rgb(46, 204, 113),\n          icon: 'cuUserStory',\n        }[type];\n\n      // Issue\n      case TaskType.ISSUE:\n        return {\n          name: $localize`Issue`,\n          color: Color.rgb(231, 76, 60),\n          icon: 'cuIssue',\n        }[type];\n\n      // Epic\n      case TaskType.EPIC:\n        return {\n          name: $localize`Epic`,\n          color: Color.rgb(155, 89, 182),\n          icon: 'cuEpic',\n        }[type];\n\n      // Subtask\n      case SubTaskType.SUBTASK:\n        return {\n          name: $localize`Subtask`,\n          color: Color.rgb(88, 183, 189),\n          icon: 'cuSubtask',\n        }[type];\n\n      // Unknown\n      default:\n        console.warn('Unknown task type:', value);\n        return value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskWithAdditionalData.html":{"url":"interfaces/TaskWithAdditionalData.html","title":"interface - TaskWithAdditionalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskWithAdditionalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/task.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Extended project task interface\n\n            \n\n            \n                Extends\n            \n            \n                    Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connectWithIssueOnGitHub\n                                        \n                                \n                                \n                                        \n                                            connectWithPullRequestOnGitHub\n                                        \n                                \n                                \n                                        \n                                            issue\n                                        \n                                \n                                \n                                        \n                                            issueAttachGithub\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            pull\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectWithIssueOnGitHub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectWithIssueOnGitHub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task is connected to GitHub issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connectWithPullRequestOnGitHub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectWithPullRequestOnGitHub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task is connected to GitHub pull request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issue:         GitIssue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitIssue\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub issue to which the task is connected to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueAttachGithub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueAttachGithub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Project identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pull\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pull:         GitPull\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitPull\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub pull to which the task is connected to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace identifier\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\n\n/**\n * Project task interface\n */\nexport interface Task {\n  /**\n   * Task id (unique per project)\n   */\n  id: number;\n\n  /**\n   * Task name\n   */\n  name: string;\n\n  /**\n   * Task description\n   */\n  description: string;\n\n  /**\n   * Task deadline to be completed\n   */\n  deadline: Date;\n\n  /**\n   * Task estimated date to work on it\n   */\n  estimatedDate: Date;\n\n  /**\n   * Status id (unique per database)\n   */\n  statusId?: number;\n\n  /**\n   * Parent task id\n   */\n  parentTaskId?: number;\n\n  /**\n   * List of subtasks\n   */\n  subTasks?: Task[];\n\n  /**\n   * Optional link to the GitHub issue\n   */\n  issue?: string;\n\n  /**\n   * Task type (ex. EPIC, USER_STORY)\n   */\n  type: string;\n\n  /**\n   * Optional link to the GitHub pull request\n   */\n  pull?: string;\n\n  /**\n   * Optional merged pull requests list\n   */\n  mergedPullList?: String[];\n\n  /**\n   * Optional user id who is assigned to task\n   */\n  assigneeId?: number;\n}\n\n/**\n * Extended project task interface\n */\nexport interface TaskWithAdditionalData extends Omit {\n  /**\n   * Project identifier\n   */\n  projectId: number;\n\n  /**\n   * Workspace identifier\n   */\n  workspaceId: string;\n\n  /**\n   * Boolean to determine if task is connected to GitHub issue\n   */\n  connectWithIssueOnGitHub: boolean;\n\n  /**\n   * Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n   */\n  issueAttachGithub: boolean;\n\n  /**\n   * Boolean to determine if task is connected to GitHub pull request\n   */\n  connectWithPullRequestOnGitHub: boolean;\n\n  /**\n   * GitHub pull to which the task is connected to\n   */\n  pull: GitPull;\n\n  /**\n   * GitHub issue to which the task is connected to\n   */\n  issue: GitIssue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nBoardPage\n\nBoardPage\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nBoardPage->TasksModule\n\n\n\n\n\nBoardTaskComponent\n\nBoardTaskComponent\n\nTasksModule -->\n\nBoardTaskComponent->TasksModule\n\n\n\n\n\nInputAssigneeComponent\n\nInputAssigneeComponent\n\nTasksModule -->\n\nInputAssigneeComponent->TasksModule\n\n\n\n\n\nSchedulePage\n\nSchedulePage\n\nTasksModule -->\n\nSchedulePage->TasksModule\n\n\n\n\n\nStatusColorPipe\n\nStatusColorPipe\n\nTasksModule -->\n\nStatusColorPipe->TasksModule\n\n\n\n\n\nStatusLabelComponent\n\nStatusLabelComponent\n\nTasksModule -->\n\nStatusLabelComponent->TasksModule\n\n\n\n\n\nTaskDialog\n\nTaskDialog\n\nTasksModule -->\n\nTaskDialog->TasksModule\n\n\n\n\n\nTaskListPage\n\nTaskListPage\n\nTasksModule -->\n\nTaskListPage->TasksModule\n\n\n\n\n\nTaskPriorityIconPipe\n\nTaskPriorityIconPipe\n\nTasksModule -->\n\nTaskPriorityIconPipe->TasksModule\n\n\n\n\n\nTaskPriorityPipe\n\nTaskPriorityPipe\n\nTasksModule -->\n\nTaskPriorityPipe->TasksModule\n\n\n\n\n\nTaskTypeIconPipe\n\nTaskTypeIconPipe\n\nTasksModule -->\n\nTaskTypeIconPipe->TasksModule\n\n\n\n\n\nTaskTypePipe\n\nTaskTypePipe\n\nTasksModule -->\n\nTaskTypePipe->TasksModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nTasksModule -->\n\nMainModule->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardPage\n                        \n                        \n                            BoardTaskComponent\n                        \n                        \n                            InputAssigneeComponent\n                        \n                        \n                            SchedulePage\n                        \n                        \n                            StatusColorPipe\n                        \n                        \n                            StatusLabelComponent\n                        \n                        \n                            TaskDialog\n                        \n                        \n                            TaskListPage\n                        \n                        \n                            TaskPriorityIconPipe\n                        \n                        \n                            TaskPriorityPipe\n                        \n                        \n                            TaskTypeIconPipe\n                        \n                        \n                            TaskTypePipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainModule\n                        \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { BoardTaskComponent } from './components/board-task/board-task.component';\nimport { InputAssigneeComponent } from './components/input-assignee/input-assignee.component';\nimport { StatusLabelComponent } from './components/status-label/status-label.component';\nimport { ViewOptionsComponent } from './components/view-options/view-options.component';\nimport { TaskDialog } from './dialogs/task/task.dialog';\nimport { BoardPage } from './pages/board/board.page';\nimport { SchedulePage } from './pages/schedule/schedule.page';\nimport { TaskListPage } from './pages/task-list/task-list.page';\nimport { StatusColorPipe } from './pipes/status-color.pipe';\nimport { TaskPriorityIconPipe } from './pipes/task-priority-icon.pipe';\nimport { TaskPriorityPipe } from './pipes/task-priority.pipe';\nimport { TaskTypeIconPipe } from './pipes/task-type-icon.pipe';\nimport { TaskTypePipe } from './pipes/task-type.pipe';\nimport { TasksRoutingModule } from './tasks.routing';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, MainModule, TasksRoutingModule],\n  declarations: [\n    BoardPage,\n    BoardTaskComponent,\n    TaskListPage,\n    TaskDialog,\n    TaskTypePipe,\n    TaskPriorityPipe,\n    TaskPriorityIconPipe,\n    TaskTypeIconPipe,\n    ViewOptionsComponent,\n    SchedulePage,\n    InputAssigneeComponent,\n    StatusLabelComponent,\n    StatusColorPipe,\n  ],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\nimport { BoardPage } from './pages/board/board.page';\nimport { SchedulePage } from './pages/schedule/schedule.page';\nimport { TaskListPage } from './pages/task-list/task-list.page';\n\n/**\n * Tasks routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'board',\n  },\n  {\n    path: 'board',\n    component: BoardPage,\n  },\n  {\n    path: 'list',\n    component: TaskListPage,\n  },\n  {\n    path: 'schedule',\n    component: SchedulePage,\n  },\n  {\n    path: 'calendar',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/calendar.svg',\n    },\n  },\n];\n\n/**\n * Tasks routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TasksRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TemplateDecoratorConfig.html":{"url":"interfaces/TemplateDecoratorConfig.html","title":"interface - TemplateDecoratorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TemplateDecoratorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/helpers/functions/component-template-decorator.function.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            selector\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            wrapWithDiv\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selector\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selector:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wrapWithDiv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wrapWithDiv:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { componentWrapperDecorator } from '@storybook/angular';\nimport { omit } from 'lodash-es';\nimport { Props } from '../classes/story.class';\n\nexport interface TemplateDecoratorConfig {\n  selector: string;\n  content?: string;\n  wrapWithDiv?: boolean;\n}\n\nexport function componentTemplateDecorator(props: Props, config: TemplateDecoratorConfig) {\n  return componentWrapperDecorator((defTemplate: string) => {\n    const content = props.content || '';\n    const selector = config.selector;\n\n    const defPropsString = extractPropsString(defTemplate);\n    const newPropsString = buildPropsString(props);\n\n    const propsString = combinePropsString(defPropsString, newPropsString);\n\n    const template = buildTemplate(selector, content, propsString);\n\n    if (config.wrapWithDiv) {\n      return wrapWithDiv(template);\n    } else {\n      return template;\n    }\n  });\n}\n\nexport function buildTemplate(selector: string, content: string, propsString: string) {\n  return `${content}`;\n}\n\nexport function wrapWithDiv(template: string) {\n  const style = 'display:flex;gap:1rem;';\n  return `${template}`;\n}\n\nexport function buildPropsString(props: Props) {\n  const filteredProps = omit(props, ['content']);\n\n  return Object.entries(filteredProps)\n    .map(([key, _]) => `[${key}]=\"${key}\"`)\n    .join(' ');\n}\n\nexport function extractPropsString(template: string) {\n  return template.match(/(?]*(?=>)/g)?.[0] || '';\n}\n\nexport function combinePropsString(...propsStrings: string[]) {\n  return propsStrings.join(' ').trim().replace(/  +/g, ' ');\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestNgControl.html":{"url":"classes/TestNgControl.html","title":"class - TestNgControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestNgControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/helpers/ng-control-testing-provider.helper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NgControl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _control\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                viewToModelUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    control\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        viewToModelUpdate\n                        \n                    \n                \n            \n            \n                \nviewToModelUpdate(newValue: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n\n                \n                    \n                        getcontrol()\n                    \n                \n                            \n                                \n                                    Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { AbstractControl, FormControl, NgControl } from '@angular/forms';\n\nexport class TestNgControl extends NgControl {\n  private _control = new FormControl('');\n  viewToModelUpdate(newValue: any): void {\n    this._control = newValue;\n  }\n  get control(): AbstractControl | null {\n    return this._control;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextareaComponent.html":{"url":"components/TextareaComponent.html","title":"component - TextareaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/textarea/textarea.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-textarea\n            \n\n            \n                styleUrls\n                ./textarea.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./textarea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                            \n                                    Public\n                                mode\n                            \n                            \n                                output\n                            \n                            \n                                    Private\n                                renderer\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyBold\n                            \n                            \n                                applyCode\n                            \n                            \n                                applyCodeBlock\n                            \n                            \n                                applyItalic\n                            \n                            \n                                applyLink\n                            \n                            \n                                applyList\n                            \n                            \n                                applyListNumeric\n                            \n                            \n                                applyQuote\n                            \n                            \n                                applyUnderline\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditor\n                            \n                            \n                                openPreview\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cols\n                            \n                            \n                                floatingLabel\n                            \n                            \n                                hint\n                            \n                            \n                                placeholder\n                            \n                            \n                                rows\n                            \n                            \n                                staticLabel\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cols\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:31\n                            \n                        \n                \n                    \n                        Floating label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:46\n                            \n                        \n                \n                    \n                        Hint to display beneath the input to provide additional information of how to use the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:41\n                            \n                        \n                \n                    \n                        Input placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        staticLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:36\n                            \n                        \n                \n                    \n                        Static label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:18\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyBold\n                        \n                    \n                \n            \n            \n                \napplyBold()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyCode\n                        \n                    \n                \n            \n            \n                \napplyCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyCodeBlock\n                        \n                    \n                \n            \n            \n                \napplyCodeBlock()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyItalic\n                        \n                    \n                \n            \n            \n                \napplyItalic()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyLink\n                        \n                    \n                \n            \n            \n                \napplyLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyList\n                        \n                    \n                \n            \n            \n                \napplyList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyListNumeric\n                        \n                    \n                \n            \n            \n                \napplyListNumeric()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyQuote\n                        \n                    \n                \n            \n            \n                \napplyQuote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyUnderline\n                        \n                    \n                \n            \n            \n                \napplyUnderline()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditor\n                        \n                    \n                \n            \n            \n                \nopenEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPreview\n                        \n                    \n                \n            \n            \n                \nopenPreview()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/textarea/textarea.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:135\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:142\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:148\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:127\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/textarea/textarea.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"editor\" | \"preview\"\n\n                    \n                \n                \n                    \n                        Default value : 'editor'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/textarea/textarea.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        output\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('output')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/textarea/textarea.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer\n\n                    \n                \n                \n                    \n                        Default value : Marked.getRenderer()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/textarea/textarea.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:82\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Monaco } from './../../libs/monaco/monaco.lib';\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { editor } from 'monaco-editor';\n// eslint-disable-next-line unused-imports/no-unused-imports\nimport { marked, Renderer } from 'marked';\nimport hljs from 'highlight.js';\nimport {\n  faBold,\n  faCode,\n  faFileCode,\n  faItalic,\n  faLink,\n  faList,\n  faListNumeric,\n  faQuoteLeft,\n  faUnderline,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Marked } from '@main/libs/marked/marked.lib';\nimport './textarea.theme';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss'],\n})\nexport class TextareaComponent extends ControlAccessor implements OnInit, AfterViewInit {\n  /**\n   * Floating label text to display\n   */\n  @Input() floatingLabel?: string;\n\n  /**\n   * Static label text to display\n   */\n  @Input() staticLabel?: string;\n\n  /**\n   * Input placeholder text\n   */\n  @Input() placeholder: string = '';\n\n  /**\n   * Hint to display beneath the input to provide additional information of how to use the input\n   */\n  @Input() hint?: string;\n\n  @Input() rows?: number = 4;\n\n  @Input() cols?: number = 50;\n\n  @ViewChild('input') input!: ElementRef;\n  @ViewChild('output') output!: ElementRef;\n\n  private renderer: Renderer = Marked.getRenderer();\n\n  public mode: 'editor' | 'preview' = 'editor';\n\n  /** @ignore */\n  private editor: editor.IStandaloneCodeEditor | null = null;\n\n  /** @ignore */\n  faCode = faCode;\n\n  /** @ignore */\n  faUnderline = faUnderline;\n\n  /** @ignore */\n  faBold = faBold;\n\n  /** @ignore */\n  faItalic = faItalic;\n\n  /** @ignore */\n  faQuoteLeft = faQuoteLeft;\n\n  /** @ignore */\n  faList = faList;\n\n  /** @ignore */\n  faListNumeric = faListNumeric;\n\n  /** @ignore */\n  faLink = faLink;\n\n  /** @ignore */\n  faFileCode = faFileCode;\n\n  ngOnInit(): void {\n    Marked.init();\n    Monaco.init();\n    hljs.configure({ languages: [] });\n  }\n\n  ngAfterViewInit(): void {\n    const container = this.input.nativeElement;\n    const _editor = editor.create(container, {\n      value: this.control.value || '',\n      language: 'markdown',\n      scrollBeyondLastLine: false,\n      wordWrap: 'on',\n      wrappingStrategy: 'advanced',\n      minimap: {\n        enabled: false,\n      },\n      overviewRulerLanes: 0,\n      theme: 'dark',\n      wordBasedSuggestions: false,\n    });\n    let ignoreEvent = false;\n    const updateHeight = () => {\n      const contentHeight = Math.min(500, _editor.getContentHeight());\n      const containerWidth = Math.min(1000, container.scrollWidth);\n      container.style.width = `${containerWidth}px`;\n      container.style.height = `${contentHeight}px`;\n      try {\n        ignoreEvent = true;\n        _editor.layout({ width: containerWidth, height: contentHeight });\n      } finally {\n        ignoreEvent = false;\n      }\n    };\n    _editor.onDidContentSizeChange(updateHeight);\n    _editor.getModel()?.onDidChangeContent(() => {\n      this.control.setValue(_editor.getValue());\n    });\n    updateHeight();\n    this.editor = _editor;\n  }\n\n  openEditor() {\n    this.mode = 'editor';\n  }\n\n  openPreview() {\n    const { renderer } = this;\n\n    this.output.nativeElement.innerHTML = marked.parse(this.editor?.getValue() || '', { renderer });\n    this.output.nativeElement\n      .querySelectorAll('pre code')\n      .forEach((c: HTMLElement) => {\n        hljs.highlightElement(c);\n      });\n\n    this.mode = 'preview';\n  }\n\n  applyUnderline() {\n    this.editor?.executeSelectionEdits({\n      before: '',\n      after: '',\n    });\n    this.editor?.focus();\n  }\n\n  applyBold() {\n    this.editor?.executeSelectionEdits({\n      before: '**',\n      after: '**',\n    });\n    this.editor?.focus();\n  }\n\n  applyItalic() {\n    this.editor?.executeSelectionEdits({\n      before: '*',\n      after: '*',\n    });\n    this.editor?.focus();\n  }\n\n  applyLink() {\n    this.editor?.executeSelectionEdits({\n      before: '[',\n      after: '](https://google.com)',\n    });\n    this.editor?.focus();\n  }\n\n  applyList() {\n    this.editor?.executeSelectionEdits({\n      before: '\\n',\n      after: '\\n',\n      beforeEachLine: '  ',\n      afterEachLine: '',\n    });\n    this.editor?.focus();\n  }\n\n  applyListNumeric() {\n    this.editor?.executeSelectionEdits({\n      before: '\\n',\n      after: '\\n',\n      beforeEachLine: '  ',\n      afterEachLine: '',\n    });\n    this.editor?.focus();\n  }\n\n  applyQuote() {\n    this.editor?.executeSelectionEdits({\n      beforeEachLine: '>',\n    });\n    this.editor?.focus();\n  }\n\n  applyCode() {\n    this.editor?.executeSelectionEdits({\n      before: '`',\n      after: '`',\n    });\n    this.editor?.focus();\n  }\n\n  applyCodeBlock() {\n    this.editor?.executeSelectionEdits({\n      before: '```javascript\\n',\n      after: '\\n```',\n    });\n    this.editor?.focus();\n  }\n}\n\n    \n\n    \n        \n  {{ staticLabel }}\n  \n    {{ floatingLabel }}\n    \n    {{ ngControl.control?.errors | validationError }}\n    {{ hint }}\n   -->\n  \n    Editor\n    Preview\n  \n  \n  \n  \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./textarea.component.scss\n                \n                // ::ng-deep {\n//   .line-numbers {\n//     width: 25px !important;\n//   }\n// }\n\n:host {\n  display: block;\n  color: var(--color-text);\n}\n\n.form-field {\n  padding: 1rem 0 0 0;\n  border: 1px solid var(--color-input-border);\n  background-color: var(--color-input-background);\n  border-radius: var(--border-radius);\n\n  .switch {\n    margin-bottom: 1em;\n    margin-left: 1em;\n\n    &>* {\n      opacity: 0.5;\n\n      &:not(:last-child) {\n        margin-right: 1em;\n      }\n\n      &.active {\n        opacity: 1;\n      }\n    }\n  }\n\n  .preview {\n    overflow: auto;\n    max-height: 500px;\n    padding: 0 1em;\n  }\n}\n\n.preview ::ng-deep {\n  h1 {\n    font-size: 2em;\n  }\n\n  h2 {\n    font-size: 1.8em;\n  }\n\n  h3 {\n    font-size: 1.6em;\n  }\n\n  h4 {\n    font-size: 1.4em;\n  }\n\n  h5 {\n    font-size: 1.2em;\n  }\n\n  h6 {\n    font-size: 1em;\n  }\n\n  hr {\n    margin: 1rem 0;\n    opacity: 0.5;\n  }\n\n  blockquote {\n    display: inline-block;\n    padding-left: 1rem;\n    border-left: 2px solid var(--color-secondary-200);\n  }\n\n  ul,\n  ol,\n  menu {\n    padding-left: 40px;\n    margin: 10px 0;\n    list-style: initial;\n  }\n\n  ol {\n    list-style: decimal;\n  }\n\n  a {\n    color: var(--color-purple-300);\n    text-decoration: underline;\n  }\n\n  code {\n    display: inline-block;\n    padding: 0.2rem 0.5rem;\n    background-color: var(--color-secondary-600);\n    border-radius: 2px;\n  }\n\n  table {\n    td, th {\n      padding: 0.5rem;\n      border: 0.1rem solid var(--color-secondary-600);\n    }\n  }\n\n  .emoji {\n    display: inline-block;\n  }\n}\n\n.tools {\n  display: flex;\n  padding: 1rem;\n\n  .tool {\n    display: block;\n    padding: 0.5rem;\n    border-radius: 3px;\n    cursor: pointer;\n    transition: background-color .2s ease;\n\n    &:hover {\n      background-color: var(--color-secondary-700);\n    }\n\n    &:not(:last-child) {\n      margin-right: 0.1rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ staticLabel }}      {{ floatingLabel }}        {{ ngControl.control?.errors | validationError }}    {{ hint }}   -->      Editor    Preview                                                                                                                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpperNavigationComponent.html":{"url":"components/UpperNavigationComponent.html","title":"component - UpperNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpperNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/upper-navigation/upper-navigation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-upper-navigation\n            \n\n            \n                styleUrls\n                ./upper-navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./upper-navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _isButtonDisabled\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                faCog\n                            \n                            \n                                faSignOut\n                            \n                            \n                                faUser\n                            \n                            \n                                openBelow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeProfile\n                            \n                            \n                                createNewTask\n                            \n                            \n                                    Public\n                                isButtonDisabled\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openProfile\n                            \n                            \n                                    Public\n                                toggleProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, taskService: TaskService, workspaceService: WorkspaceService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTask\n                        \n                    \n                \n            \n            \n                \ncreateNewTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isButtonDisabled\n                        \n                    \n                \n            \n            \n                \n                    \n                    isButtonDisabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _isButtonDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCog\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faSignOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faSignOut\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faUser\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openBelow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('openBelow')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { faAngleDown, faCog, faSignOut, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskService } from '@tasks/services/task.service';\nimport { fromEvent, map, skip, take } from 'rxjs';\n\n@Component({\n  selector: 'app-upper-navigation',\n  templateUrl: './upper-navigation.component.html',\n  styleUrls: ['./upper-navigation.component.scss'],\n})\nexport class UpperNavigationComponent implements OnInit {\n  constructor(\n    private dialogService: DialogService,\n    private taskService: TaskService,\n    private workspaceService: WorkspaceService,\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.workspaceService.list().pipe(\n      map((workspaces) => {\n        if (workspaces.length === 0) {\n          this._isButtonDisabled = false;\n        } else if (\n          workspaces.filter((workspace) => workspace.projectsWithPrivileges.length).length === 0\n        ) {\n          this._isButtonDisabled = false;\n        } else {\n          this._isButtonDisabled = true;\n        }\n      }),\n    );\n  }\n\n  @ViewChild('openBelow') openBelow!: ElementRef;\n\n  faAngleDown = faAngleDown;\n  faUser = faUser;\n  faCog = faCog;\n  faSignOut = faSignOut;\n\n  public active: boolean = false;\n  public _isButtonDisabled = true;\n\n  createNewTask() {\n    this.taskService.openCreateNewTaskDialog().subscribe(() => {\n      location.reload();\n    });\n  }\n\n  logout() {\n    this.authService.logout().subscribe(() => {\n      this.router.navigate(['/', 'auth', 'login']);\n    });\n  }\n\n  public isButtonDisabled() {\n    return this._isButtonDisabled;\n  }\n  public openProfile() {\n    this.active = true;\n    fromEvent(document, 'click')\n      .pipe(skip(1), take(1))\n      .subscribe(() => {\n        this.closeProfile();\n      });\n  }\n\n  public closeProfile() {\n    this.active = false;\n  }\n  public toggleProfile() {\n    if (!this.active) {\n      this.openProfile();\n    } else {\n      this.closeProfile();\n    }\n  }\n}\n\n    \n\n    \n        New task\n\n\n\n  \n  \n    \n    \n    \n      \n    \n  \n\n\n  \n    \n      \n        \n        Profile\n      \n    \n    \n      \n        \n        Settings\n      \n    \n    \n      \n        \n        Log out\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./upper-navigation.component.scss\n                \n                :host {\n  display: flex;\n  width: 100%;\n  height: 62px;\n\n  // flex-shrink: 0;\n  align-items: center;\n  background-color: var(--color-secondary-800);\n  color: var(--color-text);\n}\n\napp-button {\n  align-items: center;\n  justify-content: center;\n  padding: 10px 20px;\n  margin: 0;\n}\n\n.flex-end-position {\n  position: absolute;\n  right: 0;\n  display: flex;\n  height: 62px;\n\n  .profile {\n    width: 200px;\n\n    .open-below {\n      position: absolute;\n      right: 0;\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 10px;\n      cursor: pointer;\n\n      app-icon {\n        display: flex;\n        align-items: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n  }\n}\n\n.options {\n  position: absolute;\n  z-index: 2;\n  top: 62px;\n  right: 0;\n  display: none;\n  width: 200px;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    background-color: var(--color-secondary-600);\n    color: var(--color-text);\n\n    a {\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 12px 10px;\n      border-radius: var(--border-radius);\n      color: var(--color-text);\n      transition: background-color 0.2s ease-in-out;\n\n      app-icon {\n        margin-right: 1rem;\n        margin-left: 2rem;\n      }\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New task                                                        Profile                                    Settings                                    Log out            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpperNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMyself\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMyself\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyself()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(modUser: ModifyUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modUser\n                                    \n                                                ModifyUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ModifyUser } from '@auth/interfaces/user.interface';\nimport { ApiService } from '@main/services/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private apiService: ApiService) {}\n\n  public update(modUser: ModifyUser): Observable {\n    return this.apiService.put(`/auth/edit`, { body: modUser });\n  }\n\n  public getMyself() {\n    return this.apiService.get(`/auth/me`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserSession.html":{"url":"interfaces/UserSession.html","title":"interface - UserSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/interfaces/session.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            geoip\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ip\n                                        \n                                \n                                \n                                        \n                                            lastUsed\n                                        \n                                \n                                \n                                        \n                                            remembered\n                                        \n                                \n                                \n                                        \n                                            userAgent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geoip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geoip:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastUsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remembered\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remembered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserSession {\n  id: number;\n  userAgent: string;\n  ip: string;\n  lastUsed: number;\n  remembered: boolean;\n  geoip: {\n    city: string;\n    country: string;\n  };\n  current: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUtils.html":{"url":"classes/UserUtils.html","title":"class - UserUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/classes/user.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getColorById\n                            \n                            \n                                    Static\n                                getColorByUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getColorById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/classes/user.class.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getColorByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/classes/user.class.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Random } from '@main/classes/random.class';\nimport * as Color from 'color';\n\nexport class UserUtils {\n  public static getColorById(id: number): Color {\n    const random = new Random(id);\n    const randomNumber = random.random();\n    const hue = randomNumber * 255;\n    return Color.hsl(hue, 95, 41);\n  }\n\n  /**\n   * @unsupported\n   */\n  public static getColorByUsername(username: string): Color {\n    let numberRepresentation = username\n      .split('')\n      .map((c) => c.charCodeAt(0))\n      .reduce((sum, n) => sum * 10 ** 6 + n, 0);\n\n    // This requires some tweaks to make the number smaller.\n    numberRepresentation = numberRepresentation / 10000000;\n\n    const random = new Random(numberRepresentation);\n    const randomNumber = random.random();\n    const hue = randomNumber * 255;\n    return Color.hsl(hue, 95, 41);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserWithPrivileges.html":{"url":"interfaces/UserWithPrivileges.html","title":"interface - UserWithPrivileges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserWithPrivileges\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            privileges\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        privileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        privileges:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/utils.class.ts\n        \n\n\n            \n                Description\n            \n            \n                Utilities class with some useful methods not available in any libraries.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                has\n                            \n                            \n                                    Static\n                                isLetter\n                            \n                            \n                                    Static\n                                regexIndexOf\n                            \n                            \n                                    Static\n                                snakeCase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        has\n                        \n                    \n                \n            \n            \n                \n                    \n                    has(object: any, keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:45\n                \n            \n\n\n            \n                \n                    Check if object has all the properties from array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to check\n\n                                    \n                                \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        keys to search for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if object has all of the specified properties, false otherwise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isLetter\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLetter(char: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:59\n                \n            \n\n\n            \n                \n                    Checks if passed character is a letter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    char\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Character to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        regexIndexOf\n                        \n                    \n                \n            \n            \n                \n                    \n                    regexIndexOf(string: string, regex: RegExp, startPos: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:12\n                \n            \n\n\n            \n                \n                    Function to find first occurrence of regex in string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        String to search in\n\n                                    \n                                \n                                \n                                    regex\n                                    \n                                            RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Regex to search for\n\n                                    \n                                \n                                \n                                    startPos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Optional starting position in the string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The index of the first match\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        snakeCase\n                        \n                    \n                \n            \n            \n                \n                    \n                    snakeCase(inputString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:22\n                \n            \n\n\n            \n                \n                    Converts string from camelCase and PascalCase to snake_case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string in snake_case\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utils {\n  /**\n   * Function to find first occurrence of regex in string\n   * @param string String to search in\n   * @param regex Regex to search for\n   * @param startPos Optional starting position in the string\n   * @returns The index of the first match\n   */\n  public static regexIndexOf(string: string, regex: RegExp, startPos: number = 0) {\n    var indexOf = string.substring(startPos).search(regex);\n    return indexOf >= 0 ? indexOf + startPos : indexOf;\n  }\n\n  /**\n   * Converts string from camelCase and PascalCase to snake_case\n   * @param inputString String to convert\n   * @returns string in snake_case\n   */\n  public static snakeCase(inputString: string) {\n    return inputString\n      .split('')\n      .map((character, index) => {\n        if (Utils.isLetter(character) && character == character.toUpperCase()) {\n          if (index > 0) {\n            return '_' + character.toLowerCase();\n          } else {\n            return character.toLowerCase();\n          }\n        } else {\n          return character;\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Check if object has all the properties from array\n   * @param object Object to check\n   * @param keys keys to search for\n   * @returns true if object has all of the specified properties, false otherwise.\n   */\n  public static has(object: any, keys: string[]) {\n    for (const key of keys) {\n      if (!object.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Checks if passed character is a letter\n   * @param char Character to check\n   * @returns\n   */\n  public static isLetter(char: String) {\n    if (char.length > 1) return false;\n    return (char >= 'A' && char = 'a' && char \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationError.html":{"url":"interfaces/ValidationError.html","title":"interface - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/validation-error.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error interface. Used with form controls to specify what validators returned errors.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Human readable error message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of the error. For example 'required', 'minlength', 'maxlength', 'pattern', 'email', etc.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ValidationError {\n  /**\n   * Type of the error. For example 'required', 'minlength', 'maxlength', 'pattern', 'email', etc.\n   */\n  type: string;\n  /**\n   * Human readable error message.\n   */\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ValidationErrorPipe.html":{"url":"pipes/ValidationErrorPipe.html","title":"pipe - ValidationErrorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ValidationErrorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/_main/pipes/validation-error/validation-error.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to transform validation errors to a human readable string\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        validationError\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/pipes/validation-error/validation-error.pipe.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe value to be transformed\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        message from validation error\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe to transform validation errors to a human readable string\n */\n@Pipe({\n  name: 'validationError',\n})\nexport class ValidationErrorPipe implements PipeTransform {\n  /**\n   *\n   * @param value - The value to be transformed\n   * @returns message from validation error\n   */\n  transform(value: any): any {\n    return value?.message || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ViewContainerDirective.html":{"url":"directives/ViewContainerDirective.html","title":"directive - ViewContainerDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ViewContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/view-container.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [view-container]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/view-container.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewContainerRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/directives/view-container.directive.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[view-container]',\n})\nexport class ViewContainerDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOptionsComponent.html":{"url":"components/ViewOptionsComponent.html","title":"component - ViewOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/view-options/view-options.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-options\n            \n\n            \n                styleUrls\n                ./view-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                penToSquare\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/view-options/view-options.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/view-options/view-options.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFilter\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        penToSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPenToSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { faFilter, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-view-options',\n  templateUrl: './view-options.component.html',\n  styleUrls: ['./view-options.component.scss'],\n})\nexport class ViewOptionsComponent {\n  penToSquare = faPenToSquare;\n  filter = faFilter;\n\n  public workspaceId: number;\n  public projectId: number;\n\n  @Input()\n  project!: Project;\n\n  @Input()\n  title!: string;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{title}}\n      {{title}} {{project.name}}\n    \n    \n      \n        General\n      \n      \n        Members\n      \n    \n    \n      \n        General\n      \n      \n        Members\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./view-options.component.scss\n                \n                :host {\n  width: 100%;\n  align-items: center;\n  color: var(--color-text);\n}\n\nsection {\n  position: relative;\n  display: flex;\n  margin-bottom: 1rem;\n\n  .tabs {\n    display: flex;\n\n    .project-name {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      margin-right: 10px;\n    }\n\n    a {\n      position: relative;\n      display: block;\n      padding: 10px;\n      margin-right: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      &.active {\n        color: var(--color-text);\n\n        &::before {\n          position: absolute;\n          bottom: 10px;\n          left: 5px;\n          width: calc(100% - 10px);\n          height: 2px;\n          background-color: var(--color-primary-700);\n          border-radius: var(--border-radius);\n          content: '';\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}      {{title}} {{project.name}}                      General                    Members                            General                    Members            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOptionsComponent-1.html":{"url":"components/ViewOptionsComponent-1.html","title":"component - ViewOptionsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/view-options/view-options.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-options\n            \n\n            \n                styleUrls\n                ./view-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faGithub\n                            \n                            \n                                filter\n                            \n                            \n                                    Public\n                                isFiltersOpen\n                            \n                            \n                                penToSquare\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                filtersControl\n                            \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersControl\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faGithub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGithub\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFilter\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isFiltersOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        penToSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPenToSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faFilter, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport { Filter } from '@main/interfaces/filters.interface';\n\n@Component({\n  selector: 'app-view-options',\n  templateUrl: './view-options.component.html',\n  styleUrls: ['./view-options.component.scss'],\n})\nexport class ViewOptionsComponent {\n  penToSquare = faPenToSquare;\n  faGithub = faGithub;\n  filter = faFilter;\n\n  public workspaceId: number;\n  public projectId: number;\n\n  @Input()\n  project!: Project;\n\n  @Input()\n  filters: Filter[] = [];\n\n  @Input()\n  public filtersControl = new FormControl();\n\n  public isFiltersOpen = false;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{project.name}}\n      \n        \n      \n    \n    \n      Board\n    \n    \n      List\n    \n    \n      Schedule\n    \n    \n      Calendar\n    \n    \n      Backlog\n    \n  \n  \n    \n      \n      Edit\n    \n    \n      \n      Filters\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./view-options.component.scss\n                \n                :host {\n  width: 100%;\n  align-items: center;\n  color: var(--color-text);\n}\n\nsection {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n\n  .tabs {\n    display: flex;\n\n    .project-name {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      margin-right: 10px;\n\n      a {\n        padding: 0;\n        margin-left: 1rem;\n      }\n    }\n\n    a {\n      position: relative;\n      display: block;\n      padding: 10px 10px 15px 10px;\n      margin-right: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      &.active {\n        color: var(--color-text);\n\n        &::before {\n          position: absolute;\n          bottom: 10px;\n          left: 5px;\n          width: calc(100% - 10px);\n          height: 2px;\n          background-color: var(--color-primary-700);\n          border-radius: var(--border-radius);\n          content: '';\n        }\n      }\n    }\n  }\n\n  .options {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options-element {\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      app-icon {\n        display: flex;\n        align-items: center;\n        padding-right: 10px;\n      }\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      .overlay {\n        position: absolute;\n        z-index: 150;\n        right: 0;\n        bottom: 0;\n        width: 200px;\n        padding: 1rem;\n        background-color: var(--color-secondary-600);\n        border-radius: var(--border-radius);\n        transform: translateY(100%);\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{project.name}}                                  Board              List              Schedule              Calendar              Backlog                        Edit                    Filters                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewOptionsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Workspace.html":{"url":"interfaces/Workspace.html","title":"interface - Workspace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Workspace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/workspace.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Main workspace (projects/spaces grouping entity) interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            projectsWithPrivileges\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectsWithPrivileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectsWithPrivileges:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Project } from './project.interface';\n/**\n * Main workspace (projects/spaces grouping entity) interface\n */\nexport interface Workspace {\n  /**\n   * Workspace ID\n   */\n  id: number;\n  /**\n   * Workspace name\n   */\n  name: string;\n\n  projectsWithPrivileges: {\n    project: Project;\n    privileges: number;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspaceService.html":{"url":"injectables/WorkspaceService.html","title":"injectable - WorkspaceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkspaceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/workspace.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Workspaces management service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Private\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/workspace.service.ts:14\n                            \n                        \n\n                \n                    \n                            Default constructor with ApiService dependency.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Api service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:62\n                \n            \n\n\n            \n                \n                    Creates a new workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace to modify\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:36\n                \n            \n\n\n            \n                \n                    Deletes the workspace by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the workspace to delete from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:27\n                \n            \n\n\n            \n                \n                    Gets a workspace by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the workspace to get from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:53\n                \n            \n\n\n            \n                \n                    Lists all available workspaces.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:45\n                \n            \n\n\n            \n                \n                    Updates a workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace object to update in the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(identifier: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ServiceValidator({DELETE: undefined, GET: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        list$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/services/workspace.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ServiceValidator } from '@main/decorators/service-validator.decorator';\nimport { Observable, Subject } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Workspace } from '../interfaces/workspace.interface';\n\n/**\n * Workspaces management service\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class WorkspaceService {\n  list$ = new Subject();\n\n  /**\n   * Default constructor with `ApiService` dependency.\n   * @param apiService Api service\n   */\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Gets a workspace by its ID.\n   * @param id identifier of the workspace to get from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(id: number): Observable {\n    return this.apiService.get(`/workspace/${id}`);\n  }\n\n  /**\n   * Deletes the workspace by its ID.\n   * @param id identifier of the workspace to delete from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(id: number): Observable {\n    return this.apiService.delete(`/workspace/${id}`).pipe(this.validate('DELETE'));\n  }\n\n  /**\n   * Updates a workspace.\n   * @param workspace workspace object to update in the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public update(workspace: Workspace): Observable {\n    return this.apiService.put(`/workspace/${workspace.id}`, { body: workspace });\n  }\n\n  /**\n   * Lists all available workspaces.\n   * @returns Request observable, which completes when request is finished\n   */\n  public list(): Observable {\n    return this.apiService.get(`/workspace`);\n  }\n\n  /**\n   * Creates a new workspace.\n   * @param workspace workspace to modify\n   * @returns Request observable, which completes when request is finished\n   */\n  public create(workspace: Workspace): Observable {\n    return this.apiService.post(`/workspace`, { body: workspace });\n  }\n\n  @ServiceValidator({\n    DELETE: {\n      400: $localize`Workspace is not empty. Only empty workspaces can be deleted.`,\n    },\n    GET: {\n      404: $localize`Workspace with this ID does not exist.`,\n    },\n  })\n  private validate(identifier: string): any {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspacesListPage.html":{"url":"components/WorkspacesListPage.html","title":"component - WorkspacesListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WorkspacesListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts\n\n\n\n    \n        Description\n    \n    \n        Workspaces list page component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-workspaces-list-page\n            \n\n            \n                styleUrls\n                ./workspaces-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./workspaces-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                faPlus\n                            \n                            \n                                    Public\n                                    Optional\n                                workspaces$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteWorkspace\n                            \n                            \n                                editWorkspace\n                            \n                            \n                                loadWorkspaces\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openWorkspace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:20\n                            \n                        \n\n                \n                    \n                            Default constructor with dependency injection.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteWorkspace\n                        \n                    \n                \n            \n            \n                \ndeleteWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:62\n                \n            \n\n\n            \n                \n                    Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editWorkspace\n                        \n                    \n                \n            \n            \n                \neditWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:75\n                \n            \n\n\n            \n                \n                    Navigates to the workspace edit page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadWorkspaces\n                        \n                    \n                \n            \n            \n                \nloadWorkspaces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:54\n                \n            \n\n\n            \n                \n                    Loads the workspaces list from the workspace service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:47\n                \n            \n\n\n            \n                \n                    Lifecycle hook to load workspaces at the start of the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \nopenWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:37\n                        \n                    \n\n            \n                \n                    Plus icon to display on the add button\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        workspaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:42\n                        \n                    \n\n            \n                \n                    Workspaces list observable to use in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Observable } from 'rxjs';\nimport { Page } from 'src/app/_main/decorators/page.decorator';\nimport { DialogService } from 'src/app/_main/services/dialog.service';\nimport { Workspace } from '../../interfaces/workspace.interface';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Workspaces list page component.\n */\n@Page()\n@Component({\n  selector: 'app-workspaces-list-page',\n  templateUrl: './workspaces-list.page.html',\n  styleUrls: ['./workspaces-list.page.scss'],\n})\nexport class WorkspacesListPage implements OnInit {\n  /**\n   * Default constructor with dependency injection.\n   * @param workspaceService Workspace service\n   * @param dialogService Dialog service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private router: Router,\n  ) {}\n\n  /**\n   * Plus icon to display on the add button\n   */\n  public faPlus = faPlus;\n\n  /**\n   * Workspaces list observable to use in the template.\n   */\n  public workspaces$?: Observable;\n\n  /**\n   * Lifecycle hook to load workspaces at the start of the page.\n   */\n  ngOnInit() {\n    this.loadWorkspaces();\n  }\n\n  /**\n   * Loads the workspaces list from the workspace service.\n   */\n  loadWorkspaces() {\n    this.workspaces$ = this.workspaceService.list();\n  }\n\n  /**\n   * Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\n   * @param workspace Workspace to delete\n   */\n  deleteWorkspace(workspace: Workspace) {\n    this.dialogService.confirmWorkspaceDelete(workspace).subscribe(() => {\n      this.workspaceService.delete(workspace.id).subscribe(() => {\n        // this.loadWorkspaces();\n        window.location.reload();\n      });\n    });\n  }\n\n  /**\n   * Navigates to the workspace edit page.\n   * @param workspace Workspace to edit\n   */\n  editWorkspace(workspace: Workspace) {\n    this.router.navigate(['/', workspace.id, 'edit']);\n  }\n\n  openWorkspace(workspace: Workspace) {\n    this.router.navigate(['/', workspace.id]);\n  }\n}\n\n    \n\n    \n        \n\n  Workspaces\n  New workspace\n\n\n\n\n\n  \n  \n    Name\n     {{ row.name }} \n  \n\n  \n  \n    Statistics\n     - \n  \n\n  \n  \n    Last update\n     - \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Edit workspace\n        \n        \n          Delete workspace\n        \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./workspaces-list.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Workspaces  New workspace        Name     {{ row.name }}           Statistics     -           Last update     -                                                           Edit workspace                          Delete workspace                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'DialogOutletComponent', 'selector': 'app-dialog-outlet'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'},{'name': 'ViewContainerDirective', 'selector': '[view-container]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkspacesListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/cdk : ^13.3.0\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/material : ^13.3.0\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @fortawesome/angular-fontawesome : ^0.10.2\n        \n            @fortawesome/fontawesome-svg-core : ^6.1.0\n        \n            @fortawesome/free-brands-svg-icons : ^6.1.0\n        \n            @fortawesome/free-regular-svg-icons : ^6.1.0\n        \n            @fortawesome/free-solid-svg-icons : ^6.1.0\n        \n            @ngneat/until-destroy : ^9.2.1\n        \n            @tabuckner/material-dayjs-adapter : ^1.1.0\n        \n            color : ^4.2.3\n        \n            concurrently : ^7.1.0\n        \n            dayjs : ^1.11.2\n        \n            emoji-js : ^3.7.0\n        \n            highlight.js : ^11.5.1\n        \n            lodash-es : ^4.17.21\n        \n            marked : ^4.0.17\n        \n            miragejs : ^0.1.43\n        \n            monaco-editor : ^0.33.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            ua-parser-js : ^1.0.2\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AlertDialogVariant   (src/.../alert.dialog.ts)\n                        \n                        \n                            ControlType   (src/.../control-type.helper.ts)\n                        \n                        \n                            DialogOutlet   (src/.../dialog.service.ts)\n                        \n                        \n                            RegisterStage   (src/.../register.page.ts)\n                        \n                        \n                            SelectionEditOperationType   (src/.../selection-edit.plugin.ts)\n                        \n                        \n                            SubTaskType   (src/.../task-type.enum.ts)\n                        \n                        \n                            TaskDialogVariant   (src/.../task.dialog.ts)\n                        \n                        \n                            TaskPriority   (src/.../task-priority.enum.ts)\n                        \n                        \n                            TaskType   (src/.../task-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/dialogs/alert/alert.dialog.ts\n    \n        \n            \n                \n                    \n                        \n                        AlertDialogVariant\n                    \n                \n                    \n                        \n                            Type of the dialog variant. Used to specify what dialog styling should be used.\n\n                        \n                    \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 IMPORTANT\n                            \n                        \n                        \n                            \n                                Value : important\n                            \n                        \n            \n        \n\n    src/stories/helpers/control-type.helper.ts\n    \n        \n            \n                \n                    \n                        \n                        ControlType\n                    \n                \n                        \n                            \n                                 SELECT\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                Value : boolean\n                            \n                        \n                        \n                            \n                                 OBJECT\n                            \n                        \n                        \n                            \n                                Value : object\n                            \n                        \n            \n        \n\n    src/app/_main/services/dialog.service.ts\n    \n        \n            \n                \n                    \n                        \n                        DialogOutlet\n                    \n                \n                        \n                            \n                                 CONTENT_RIGHT\n                            \n                        \n                        \n                            \n                                Value : CONTENT_RIGHT\n                            \n                        \n            \n        \n\n    src/app/auth/pages/register/register.page.ts\n    \n        \n            \n                \n                    \n                        \n                        RegisterStage\n                    \n                \n                        \n                            \n                                 IMPORTANT_DATA\n                            \n                        \n                        \n                            \n                                 PERSONAL_DATA\n                            \n                        \n            \n        \n\n    src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts\n    \n        \n            \n                \n                    \n                        \n                        SelectionEditOperationType\n                    \n                \n                        \n                            \n                                 before\n                            \n                        \n                        \n                            \n                                Value : BEFORE\n                            \n                        \n                        \n                            \n                                 after\n                            \n                        \n                        \n                            \n                                Value : AFTER\n                            \n                        \n                        \n                            \n                                 beforeEachLine\n                            \n                        \n                        \n                            \n                                Value : BEFORE_EACH_LINE\n                            \n                        \n                        \n                            \n                                 afterEachLine\n                            \n                        \n                        \n                            \n                                Value : AFTER_EACH_LINE\n                            \n                        \n            \n        \n\n    src/app/tasks/enums/task-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        SubTaskType\n                    \n                \n                        \n                            \n                                 SUBTASK\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TaskType\n                    \n                \n                        \n                            \n                                 TASK\n                            \n                        \n                        \n                            \n                                 USER_STORY\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 EPIC\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/tasks/dialogs/task/task.dialog.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDialogVariant\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n                        \n                            \n                                Value : edit\n                            \n                        \n            \n        \n\n    src/app/tasks/enums/task-priority.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskPriority\n                    \n                \n                        \n                            \n                                 HIGHEST\n                            \n                        \n                        \n                            \n                                Value : highest\n                            \n                        \n                        \n                            \n                                 HIGH\n                            \n                        \n                        \n                            \n                                Value : high\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                Value : medium\n                            \n                        \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                Value : low\n                            \n                        \n                        \n                            \n                                 LOWEST\n                            \n                        \n                        \n                            \n                                Value : lowest\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applyFilters   (src/.../apply-filters.operator.ts)\n                        \n                        \n                            buildPropsString   (src/.../component-template-decorator.function.ts)\n                        \n                        \n                            buildTemplate   (src/.../component-template-decorator.function.ts)\n                        \n                        \n                            catchResponse   (src/.../catch-response.operator.ts)\n                        \n                        \n                            combinePropsString   (src/.../component-template-decorator.function.ts)\n                        \n                        \n                            componentTemplateDecorator   (src/.../component-template-decorator.function.ts)\n                        \n                        \n                            Debug   (src/.../debug.decorator.ts)\n                        \n                        \n                            emailValidator   (src/.../email.validator.ts)\n                        \n                        \n                            expectToFail   (src/.../validator-testing.helper.ts)\n                        \n                        \n                            expectToPass   (src/.../validator-testing.helper.ts)\n                        \n                        \n                            extractPropsString   (src/.../component-template-decorator.function.ts)\n                        \n                        \n                            getAllProperties   (src/.../get-all-properties.function.ts)\n                        \n                        \n                            linkOverride   (src/.../link.override.ts)\n                        \n                        \n                            maxLengthValidator   (src/.../max-length.validator.ts)\n                        \n                        \n                            Page   (src/.../page.decorator.ts)\n                        \n                        \n                            passwordValidator   (src/.../password.validator.ts)\n                        \n                        \n                            requiredValidator   (src/.../required.validator.ts)\n                        \n                        \n                            sameAsValidator   (src/.../same-as.validator.ts)\n                        \n                        \n                            Service   (src/.../service.decorator.ts)\n                        \n                        \n                            ServiceValidator   (src/.../service-validator.decorator.ts)\n                        \n                        \n                            wrapWithDiv   (src/.../component-template-decorator.function.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/operators/apply-filters.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters(filters?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/stories/helpers/functions/component-template-decorator.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildPropsString\n                        \n                    \n                \n            \n            \n                \nbuildPropsString(props: Props)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Props\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildTemplate\n                        \n                    \n                \n            \n            \n                \nbuildTemplate(selector: string, content: string, propsString: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        combinePropsString\n                        \n                    \n                \n            \n            \n                \ncombinePropsString(...propsStrings: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propsStrings\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentTemplateDecorator\n                        \n                    \n                \n            \n            \n                \ncomponentTemplateDecorator(props: Props, config: TemplateDecoratorConfig)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Props\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                TemplateDecoratorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractPropsString\n                        \n                    \n                \n            \n            \n                \nextractPropsString(template: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wrapWithDiv\n                        \n                    \n                \n            \n            \n                \nwrapWithDiv(template: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/operators/catch-response.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        catchResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \ncatchResponse(message: string, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/debug.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Debug\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \nDebug()\n                \n            \n\n\n\n\n        \n    \n    src/app/_main/validators/email.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailValidator\n                        \n                    \n                \n            \n            \n                \nemailValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if email is valid\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/tests/helpers/validator-testing.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        expectToFail\n                        \n                    \n                \n            \n            \n                \nexpectToFail(val: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expectToPass\n                        \n                    \n                \n            \n            \n                \nexpectToPass(val: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/stories/helpers/functions/get-all-properties.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAllProperties\n                        \n                    \n                \n            \n            \n                \ngetAllProperties(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/libs/marked/overrides/link.override.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        linkOverride\n                        \n                    \n                \n            \n            \n                \nlinkOverride(renderer: Renderer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                            Renderer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/validators/max-length.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        maxLengthValidator\n                        \n                    \n                \n            \n            \n                \nmaxLengthValidator(length: number)\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if the length is not greater than specyfic number\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/page.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Page\n                        \n                    \n                \n            \n            \n                \nPage()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to mark component or directive as a page.\n(@)Page()\n(@)Component({\n  selector: 'app-example-page',\n  templateUrl: './example.page.html',\n  styleUrls: ['./example.page.scss'],\n})\nexport class CreateWorkspacePage { ... }\n\n                \n            \n        \n    \n    src/app/_main/validators/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if password is valid\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/validators/required.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        requiredValidator\n                        \n                    \n                \n            \n            \n                \nrequiredValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if value was provided\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/validators/same-as.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sameAsValidator\n                        \n                    \n                \n            \n            \n                \nsameAsValidator(compareWith: string, message: string)\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if password is valid\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    compareWith\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/service.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Service\n                        \n                    \n                \n            \n            \n                \nService()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to mark class as a service and store theirs instances in global variable.\n\n\n                \n            \n        \n    \n    src/app/_main/decorators/service-validator.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ServiceValidator\n                        \n                    \n                \n            \n            \n                \nServiceValidator(errorValidationTree: ErrorValidationTree)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorValidationTree\n                                    \n                                                ErrorValidationTree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWorkflow - Clean and powerful work management app.\n\n\n  \n  \n  Workflow is a task management app with multiple independent modules to speed up work.\n    tasks / mail / messages\n  \n\n\n\n  DEVELOPMENT SERVER\n  \n\n\n\n  \n  \n  \n  \n\n\n\n\n\nGetting started\nAt first install node.js and npm from https://nodejs.org/en/. In the second step run command:\nnpm installAnd you are ready to go. It's highly recommended to use yarn instead of npm.\nnpm install -g yarn\nyarn install\n\nDevelopment server\nFor a dev server run:\nyarn startNavigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\n\n\nBuild\nTo build the project run:\nyarn buildThe build artifacts will be stored in the dist/ directory.\n\n\nRunning unit tests\nTo execute the unit tests via Karma run:\nyarn start:test\n\nRunning end-to-end tests\nTo execute the end-to-end tests via Cypress run:\nyarn e2e\n\nBuilding documentation\nTo build documentation via compodoc run:\nyarn start:docsAPI Documentation and repository\nEndpoints documentation is shared using Swagger library here. The repository is in other GitHub account here.\nRecommended Versions\nnode - 16.13.0\nyarn - 1.22.17\nAngular CLI - 13.2.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 2-Clause License\nCopyright (c) 2022, [Aleksandra Serba, Marcin Czerniak, Bartosz Wawrzyniak, Adrian Antkowiak]\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_imports\n\n\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nMainModule->AuthModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nMainModule->DashboardModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nMainModule->SettingsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nMainModule->TasksModule\n\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\nAuthModule -->\n\nChangePasswordPage->AuthModule\n\n\n\n\n\nDeleteAccountPage\n\nDeleteAccountPage\n\nAuthModule -->\n\nDeleteAccountPage->AuthModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\nAuthModule -->\n\nForgotPasswordPage->AuthModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAuthModule -->\n\nLoginPage->AuthModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nAuthModule -->\n\nRegisterPage->AuthModule\n\n\n\n\n\nRestoreAccountPage\n\nRestoreAccountPage\n\nAuthModule -->\n\nRestoreAccountPage->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAddMemberDialog\n\nAddMemberDialog\n\nDashboardModule -->\n\nAddMemberDialog->DashboardModule\n\n\n\n\n\nCreateProjectMembersPage\n\nCreateProjectMembersPage\n\nDashboardModule -->\n\nCreateProjectMembersPage->DashboardModule\n\n\n\n\n\nCreateProjectPage\n\nCreateProjectPage\n\nDashboardModule -->\n\nCreateProjectPage->DashboardModule\n\n\n\n\n\nCreateWorkspacePage\n\nCreateWorkspacePage\n\nDashboardModule -->\n\nCreateWorkspacePage->DashboardModule\n\n\n\n\n\nEditProjectMembersPage\n\nEditProjectMembersPage\n\nDashboardModule -->\n\nEditProjectMembersPage->DashboardModule\n\n\n\n\n\nEditProjectPage\n\nEditProjectPage\n\nDashboardModule -->\n\nEditProjectPage->DashboardModule\n\n\n\n\n\nEditWorkspacePage\n\nEditWorkspacePage\n\nDashboardModule -->\n\nEditWorkspacePage->DashboardModule\n\n\n\n\n\nIntegrationGithubComponent\n\nIntegrationGithubComponent\n\nDashboardModule -->\n\nIntegrationGithubComponent->DashboardModule\n\n\n\n\n\nMemberListComponent\n\nMemberListComponent\n\nDashboardModule -->\n\nMemberListComponent->DashboardModule\n\n\n\n\n\nProjectsListPage\n\nProjectsListPage\n\nDashboardModule -->\n\nProjectsListPage->DashboardModule\n\n\n\n\n\nViewOptionsComponent\n\nViewOptionsComponent\n\nDashboardModule -->\n\nViewOptionsComponent->DashboardModule\n\n\n\n\n\nWorkspacesListPage\n\nWorkspacesListPage\n\nDashboardModule -->\n\nWorkspacesListPage->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nGitIntegrationService\n\nGitIntegrationService\n\nDashboardModule -->\n\nGitIntegrationService->DashboardModule\n\n\n\n\n\nEmailsRoutingModule\n\nEmailsRoutingModule\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nEmailsRoutingModule->EmailsModule\n\n\n\n\n\nMessagesRoutingModule\n\nMessagesRoutingModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nMessagesRoutingModule->MessagesModule\n\n\n\n\n\nIntegrationEntryComponent\n\nIntegrationEntryComponent\n\nSettingsModule -->\n\nIntegrationEntryComponent->SettingsModule\n\n\n\n\n\nListGroupComponent\n\nListGroupComponent\n\nSettingsModule -->\n\nListGroupComponent->SettingsModule\n\n\n\n\n\nSettingsAccountPage\n\nSettingsAccountPage\n\nSettingsModule -->\n\nSettingsAccountPage->SettingsModule\n\n\n\n\n\nSettingsIntegrationsPage\n\nSettingsIntegrationsPage\n\nSettingsModule -->\n\nSettingsIntegrationsPage->SettingsModule\n\n\n\n\n\nSettingsLocalizationPage\n\nSettingsLocalizationPage\n\nSettingsModule -->\n\nSettingsLocalizationPage->SettingsModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\nSettingsModule -->\n\nSettingsPage->SettingsModule\n\n\n\n\n\nSettingsSessionsPage\n\nSettingsSessionsPage\n\nSettingsModule -->\n\nSettingsSessionsPage->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\nBoardPage\n\nBoardPage\n\nTasksModule -->\n\nBoardPage->TasksModule\n\n\n\n\n\nBoardTaskComponent\n\nBoardTaskComponent\n\nTasksModule -->\n\nBoardTaskComponent->TasksModule\n\n\n\n\n\nInputAssigneeComponent\n\nInputAssigneeComponent\n\nTasksModule -->\n\nInputAssigneeComponent->TasksModule\n\n\n\n\n\nSchedulePage\n\nSchedulePage\n\nTasksModule -->\n\nSchedulePage->TasksModule\n\n\n\n\n\nStatusColorPipe\n\nStatusColorPipe\n\nTasksModule -->\n\nStatusColorPipe->TasksModule\n\n\n\n\n\nStatusLabelComponent\n\nStatusLabelComponent\n\nTasksModule -->\n\nStatusLabelComponent->TasksModule\n\n\n\n\n\nTaskDialog\n\nTaskDialog\n\nTasksModule -->\n\nTaskDialog->TasksModule\n\n\n\n\n\nTaskListPage\n\nTaskListPage\n\nTasksModule -->\n\nTaskListPage->TasksModule\n\n\n\n\n\nTaskPriorityIconPipe\n\nTaskPriorityIconPipe\n\nTasksModule -->\n\nTaskPriorityIconPipe->TasksModule\n\n\n\n\n\nTaskPriorityPipe\n\nTaskPriorityPipe\n\nTasksModule -->\n\nTaskPriorityPipe->TasksModule\n\n\n\n\n\nTaskTypeIconPipe\n\nTaskTypeIconPipe\n\nTasksModule -->\n\nTaskTypeIconPipe->TasksModule\n\n\n\n\n\nTaskTypePipe\n\nTaskTypePipe\n\nTasksModule -->\n\nTaskTypePipe->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    57 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    34 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        84 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.14\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            color   (src/.../color.interface.ts)\n                        \n                        \n                            CursorSTateComputer   (src/.../typings.ts)\n                        \n                        \n                            EditOperation   (src/.../monaco-extended.class.ts)\n                        \n                        \n                            EditOperation   (src/.../typings.ts)\n                        \n                        \n                            Editor   (src/.../typings.ts)\n                        \n                        \n                            Filter   (src/.../filters.interface.ts)\n                        \n                        \n                            FilterType   (src/.../filters.interface.ts)\n                        \n                        \n                            MonacoEditor   (src/.../monaco-extended.class.ts)\n                        \n                        \n                            Props   (src/.../story.class.ts)\n                        \n                        \n                            Schedule   (src/.../schedule.interface.ts)\n                        \n                        \n                            Selection   (src/.../monaco-extended.class.ts)\n                        \n                        \n                            Selection   (src/.../typings.ts)\n                        \n                        \n                            SelectionEditOperation   (src/.../selection-edit.plugin.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/interfaces/color.interface.ts\n    \n    \n        \n            \n                \n                    \n                    color\n                \n            \n            \n                \n                            number\n\n                \n            \n        \n    \n    src/app/_main/libs/monaco/typings.ts\n    \n    \n        \n            \n                \n                    \n                    CursorSTateComputer\n                \n            \n            \n                \n                        monaco.editor.ICursorStateComputer\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EditOperation\n                \n            \n            \n                \n                        monaco.editor.IIdentifiedSingleEditOperation\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Editor\n                \n            \n            \n                \n                            monaco.editor.IStandaloneCodeEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Selection\n                \n            \n            \n                \n                        monaco.Selection\n\n                \n            \n        \n    \n    src/app/_main/classes/monaco-extended.class.ts\n    \n    \n        \n            \n                \n                    \n                    EditOperation\n                \n            \n            \n                \n                        monaco.editor.IIdentifiedSingleEditOperation\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MonacoEditor\n                \n            \n            \n                \n                            monaco.editor.IStandaloneCodeEditor\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Selection\n                \n            \n            \n                \n                        monaco.Selection\n\n                \n            \n        \n    \n    src/app/_main/interfaces/filters.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                            FilterCheckbox\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/stories/helpers/classes/story.class.ts\n    \n    \n        \n            \n                \n                    \n                    Props\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/tasks/interfaces/schedule.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Schedule\n                \n            \n            \n                \n                            SinglePersonSchedule[]\n\n                \n            \n        \n    \n    src/app/_main/libs/monaco/plugins/selection-edit.plugin.ts\n    \n    \n        \n            \n                \n                    \n                    SelectionEditOperation\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture.html":{"url":"additional-documentation/architecture.html","title":"additional-page - Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nArchitecture of the application is maintained with base Angular methodologies. For more information's about Angular methodologies see Angular documentation.\nNaming conventions\nEach file should be named using only lower case letters and  - to replace spaces. Filename should be .. where  is the name of the file (ex. hello-world),  is the type of the file (ex. module or component) and the  is the extension of the file (ex. .ts).\nSingle responsibility principle\nEach file should have only one responsibility. For example, src/app/hello-world/hello-world.module.ts should have only one responsibility to create the module. For more information's about the Single Responsibility Principle see Wikipedia.\nModules\nApp is splitter into separated modules. Each module has it's own folder in src/app directory. In this dedicated space each module has it's own .module.ts file and optionally .routing.ts file.\nClasses\nIf project is using some additional classes logic like class grouped utility functions or abstract control classes, then they should be placed in dedicated folder in classes/ directory.\nComponents\nComponents are the main building blocks of the application. They are the most important part of the architecture. Each component has it's own folder in components/ directory. In this dedicated space each component has it's own .component.ts file.\nDecorators\nDecorators are used to add additional functionality to the components. For example, @Component decorator is used to mark the component as a component. Each decorator has it's own file in decorators/ directory. In this dedicated space each pipe has it's own .decorator.ts file. For more information's about decorators see Angular documentation.\nDialogs\nDialogs are used to display information to the user. Dialogs are located in dialogs/ directory. For more information's about dialogs see Angular documentation.\nDirectives\nDirectives are used to add additional functionality to the components. For example, @Directive decorator is used to mark the directive as a directive. Each decorator has it's own file in directives/ directory. In this dedicated space each directive has it's own .directive.ts file. For more information's about directives see Angular documentation.\nEnums\nEnums are used to define the values of the enumeration. Each enumerable value has it's own enum.ts file in enums/ directory.\nGuards\nGuards are used to protect routes from unauthorized access. Each guard has it's own folder in guards/ directory. In this dedicated space each guard has it's own .guard.ts file. For more information's about guards see Angular documentation.\nInterfaces\nInterfaces are used to structure the code. They are used to describe the shape of the object. For more information's about interfaces see Angular documentation.\nPipes\nPipes are used to transform data. Each pipe has it's own folder in pipes/ directory. In this dedicated space each pipe has it's own .pipe.ts file. For more information's about pipes see Angular documentation.\nServices\nServices are used to share data between components. Each service has it's own .service.ts file located in services/ directory in one of the modules.\nValidators\nValidators are used to validate the data (mainly in forms). Each validator has it's own .validator.ts file located in validators/ directory in one of the modules.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/localization.html":{"url":"additional-documentation/localization.html","title":"additional-page - Localization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocalization\nApp is localized using angular/localize. At the current stage of the project app is translated in:\nde-DE -> German (Germany)\nen-GB -> English (United Kingdom)\nen-US -> English (United States, Default app language)\nes-ES -> Spanish (Spain)\nit-IT -> Italian (Italy)\npl-PL -> Polish (Poland)\nuk-UA -> Ukrainian (Ukraine)Configuration\nEach language is listed in angular.json file in i18n section.\nFor polish language for example:\n\"i18n\": {\n  ...\n  \"locales\": {\n    \"pl-PL\": {\n      \"translation\": \"src/locales/messages.pl-PL.xlf\"\n    },\n    ...\n  }\n}Languages also requires separated file in src/locales folder to be created before build.\nIn the future adding new language will need some more work to do. For example adding new element in language selection list.\nMaking translations\nBefore translating strings first what you need to do is to extract all translatable strings from the app. To do this run the command:\nyarn extract:i18nEach language translations are located in src/locales folder, for example src/locales/messages.pl-PL.xlf file. This files can be edited using any text editor, but more convenient is to use external tools.\nIn Visual Studio Code there is an extension named Angular I18n Editor. This extension is used to make translations in more human readable way. It serves an UI interface to edit translations. To open this extension press F1 and search for Angular I18n Editor: Open command.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/continuos-integration.html":{"url":"additional-documentation/continuos-integration.html","title":"additional-page - Continuos integration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCI/CD pipeline\nContinuos integration was resolved using tool named GitHub Actions. Actions are located in .github/workflows/ directory. At this moment there is one pipeline to deploy application named deploy.yml. This action after every push to the master branch rebuild the application and deploy it to the production environment using rsync protocol. This action also build documentation page, publishes it and runs tests. There is also included a small script to create badges to use them in Readme.md and documentation files. This file is named badge-generator.js and is located in the root directory.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
